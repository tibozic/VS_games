
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00026f24  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000389c  900271c4  900271c4  000471c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000658  9002aa60  9002aa60  0004aa60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002b0b8  9002b0b8  000d718c  2**0
                  CONTENTS
  6 .ARM          00000000  9002b0b8  9002b0b8  000d718c  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002b0b8  9002b0b8  000d718c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002b0b8  9002b0b8  0004b0b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002b0d0  9002b0d0  0004b0d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000154  24000000  9002b0d8  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00024050  24000158  9002b22c  00050158  2**3
                  ALLOC
 12 ._user_heap_stack 00002000  240241a8  9002b22c  000541a8  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d718c  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00015818  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000064  90215818  90215818  00075818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 00061910  9021587c  9021587c  0007587c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000e0000  2**2
                  ALLOC
 18 Video_RGB_Buffer 00043800  d00bf400  d00bf400  000e0000  2**2
                  ALLOC
 19 .comment      000000c2  00000000  00000000  000d71ba  2**0
                  CONTENTS, READONLY
 20 .debug_line   0007390c  00000000  00000000  000d727c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0014ab88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000f649d  00000000  00000000  0014abe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 00018646  00000000  00000000  00241084  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 00003560  00000000  00000000  002596d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a18db  00000000  00000000  0025cc30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 0000756d  00000000  00000000  003fe50b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004863e  00000000  00000000  00405a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_frame  0000ac10  00000000  00000000  0044e0b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loclists 00034384  00000000  00000000  00458cc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000158 	.word	0x24000158
900002bc:	00000000 	.word	0x00000000
900002c0:	900271ac 	.word	0x900271ac

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400015c 	.word	0x2400015c
900002dc:	900271ac 	.word	0x900271ac

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f007 faf1 	bl	90007990 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f026 fa09 	bl	900267c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fc2b 	bl	90002c0c <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002b0d8 	.word	0x9002b0d8
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000154 	.word	0x24000154
  ldr  r2, =_sbss
900003c8:	24000158 	.word	0x24000158
  ldr  r3, = _ebss
900003cc:	240241a8 	.word	0x240241a8

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
900003de:	f001 ff8b 	bl	900022f8 <touchgfx_components_init>
    touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
900003e6:	f001 bf0b 	b.w	90002200 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
900003ec:	f001 bf86 	b.w	900022fc <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f025 fdfa 	bl	90026042 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f007 f97c 	bl	900077ac <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f007 f9f5 	bl	900078c8 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f025 fda4 	bl	90026042 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f007 ff45 	bl	90008394 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f007 ff3d 	bl	90008394 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f007 ff35 	bl	90008394 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f007 ff2d 	bl	90008394 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24000174 	.word	0x24000174
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f007 bf17 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f007 bf0e 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f007 bf05 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f007 befc 	b.w	900083a0 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24000174 	.word	0x24000174
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f007 bee3 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f007 beda 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f007 bed1 	b.w	900083a0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f007 bec8 	b.w	900083a0 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24000174 	.word	0x24000174
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f007 beb8 	b.w	900083a8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f007 beb4 	b.w	900083a8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f007 beb0 	b.w	900083a8 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f007 beac 	b.w	900083a8 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	2402356b 	.word	0x2402356b

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f025 fcea 	bl	900260a0 <__assert_func>
900006cc:	24023560 	.word	0x24023560
900006d0:	24023562 	.word	0x24023562
900006d4:	24023566 	.word	0x24023566
900006d8:	24023568 	.word	0x24023568
900006dc:	90027244 	.word	0x90027244
900006e0:	900272a8 	.word	0x900272a8
900006e4:	900272ec 	.word	0x900272ec

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f010 fafa 	bl	90010ce4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 bef4 	b.w	900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 bef8 	b.w	900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ffe1 	bl	900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bea2 	b.w	900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f002 b8b4 	b.w	900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f002 b89e 	b.w	900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bea6 	b.w	900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f00f fe34 	bl	900103dc <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f00f bd02 	b.w	90010188 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f025 fc5a 	bl	90026042 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24023564 	.word	0x24023564
900007e4:	24023562 	.word	0x24023562
900007e8:	24023560 	.word	0x24023560

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f025 fc2f 	bl	900260a0 <__assert_func>
90000842:	bf00      	nop
90000844:	2402356a 	.word	0x2402356a
90000848:	90000675 	.word	0x90000675
9000084c:	2402356b 	.word	0x2402356b
90000850:	90027334 	.word	0x90027334
90000854:	9002736c 	.word	0x9002736c
90000858:	900272ec 	.word	0x900272ec

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f8e3 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f007 fd8c 	bl	900083a0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f007 fd87 	bl	900083a0 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f007 fd82 	bl	900083a0 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f8ce 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f010 fa1b 	bl	90010ce4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f002 f804 	bl	900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f025 fbb4 	bl	900260a0 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	2402356a 	.word	0x2402356a
90000944:	d0000000 	.word	0xd0000000
90000948:	2402356b 	.word	0x2402356b
9000094c:	90027334 	.word	0x90027334
90000950:	9002736c 	.word	0x9002736c
90000954:	900272ec 	.word	0x900272ec

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f010 f9d9 	bl	90010d18 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f010 f9d3 	bl	90010d18 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	2402356c 	.word	0x2402356c

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f240 11c5 	movw	r1, #453	; 0x1c5
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f025 fb6e 	bl	900260a0 <__assert_func>
900009c4:	90027498 	.word	0x90027498
900009c8:	90027494 	.word	0x90027494
900009cc:	900274f4 	.word	0x900274f4

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f025 fb34 	bl	90026042 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4d4a      	ldr	r5, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461c      	mov	r4, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f2:	612b      	str	r3, [r5, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f4:	0703      	lsls	r3, r0, #28
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f6:	f44f 7370 	mov.w	r3, #960	; 0x3c0
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900009fa:	4e47      	ldr	r6, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a06:	606b      	str	r3, [r5, #4]
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a0c:	f8db 3010 	ldr.w	r3, [fp, #16]
        DMA2D_reference = dma;
90000a10:	f8df 8134 	ldr.w	r8, [pc, #308]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6028      	str	r0, [r5, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a18:	f013 030f 	ands.w	r3, r3, #15
90000a1c:	f8df 912c 	ldr.w	r9, [pc, #300]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a20:	60e8      	str	r0, [r5, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a26:	bf18      	it	ne
90000a28:	f1c3 0310 	rsbne	r3, r3, #16
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a2c:	01c0      	lsls	r0, r0, #7
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a2e:	60ab      	str	r3, [r5, #8]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a30:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a32:	2000      	movs	r0, #0
        JPEG_OUT_Read_BufferIndex = 0;
90000a34:	4b39      	ldr	r3, [pc, #228]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
        FrameBufferAddress = output;
90000a36:	4d3a      	ldr	r5, [pc, #232]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_output_is_paused = 0;
90000a38:	6038      	str	r0, [r7, #0]
        FrameBufferAddress = output;
90000a3a:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a3c:	6018      	str	r0, [r3, #0]
        JPEG_InputImageIndex = 0;
90000a3e:	4c39      	ldr	r4, [pc, #228]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        MCU_BlockIndex = 0;
90000a40:	4b39      	ldr	r3, [pc, #228]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a42:	f8ca 0000 	str.w	r0, [sl]
        JPEG_InputImageIndex = 0;
90000a46:	6020      	str	r0, [r4, #0]
        MCU_BlockIndex = 0;
90000a48:	6018      	str	r0, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a4a:	7030      	strb	r0, [r6, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a4c:	f8da 3000 	ldr.w	r3, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a50:	7430      	strb	r0, [r6, #16]
        JPEG_InputImageAddress = (uint32_t)input;
90000a52:	4836      	ldr	r0, [pc, #216]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a54:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a58:	4d35      	ldr	r5, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        JPEG_InputImageAddress = (uint32_t)input;
90000a5a:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5c:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5e:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a60:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a62:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a66:	4834      	ldr	r0, [pc, #208]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a68:	4c34      	ldr	r4, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f008 fdc3 	bl	90009600 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b21      	ldr	r3, [pc, #132]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00c f9f7 	bl	9000cecc <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480e      	ldr	r0, [pc, #56]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f008 fec6 	bl	90009890 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b90 	.word	0x24005b90
90000b14:	24005bbc 	.word	0x24005bbc
90000b18:	24000008 	.word	0x24000008
90000b1c:	24000188 	.word	0x24000188
90000b20:	24005bac 	.word	0x24005bac
90000b24:	24005bb8 	.word	0x24005bb8
90000b28:	2400018c 	.word	0x2400018c
90000b2c:	24005bc0 	.word	0x24005bc0
90000b30:	24005bb4 	.word	0x24005bb4
90000b34:	24005bc4 	.word	0x24005bc4
90000b38:	24009250 	.word	0x24009250
90000b3c:	24005bb0 	.word	0x24005bb0
90000b40:	24005bcc 	.word	0x24005bcc
90000b44:	24005bc8 	.word	0x24005bc8
90000b48:	24005ba8 	.word	0x24005ba8
90000b4c:	24000184 	.word	0x24000184

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2f      	ldr	r6, [pc, #188]	; (90000c14 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc4>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d142      	bne.n	90000bec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d941      	bls.n	90000c02 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb2>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	18d1      	adds	r1, r2, r3
        val |= d[0];
90000bd6:	5cd2      	ldrb	r2, [r2, r3]
        val |= d[1] << 8;
90000bd8:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90000bda:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90000bdc:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000bde:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90000be0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000be4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90000be8:	4313      	orrs	r3, r2
        return val;
90000bea:	e7e3      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bec:	4798      	blx	r3
90000bee:	4285      	cmp	r5, r0
90000bf0:	d9bc      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bf2:	6823      	ldr	r3, [r4, #0]
90000bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000bf6:	42b3      	cmp	r3, r6
90000bf8:	d0e2      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000bfa:	4620      	mov	r0, r4
90000bfc:	4798      	blx	r3
90000bfe:	4605      	mov	r5, r0
90000c00:	e7b4      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c02:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000c04:	4b04      	ldr	r3, [pc, #16]	; (90000c18 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
90000c06:	4a05      	ldr	r2, [pc, #20]	; (90000c1c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90000c08:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c0a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000c0e:	4804      	ldr	r0, [pc, #16]	; (90000c20 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90000c10:	f025 fa46 	bl	900260a0 <__assert_func>
90000c14:	9000099d 	.word	0x9000099d
90000c18:	90027544 	.word	0x90027544
90000c1c:	90027558 	.word	0x90027558
90000c20:	900274f4 	.word	0x900274f4
90000c24:	00000000 	.word	0x00000000

90000c28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c2c:	4604      	mov	r4, r0
    if (reader != 0)
90000c2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c30:	b083      	sub	sp, #12
90000c32:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c34:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c36:	2800      	cmp	r0, #0
90000c38:	f000 80ad 	beq.w	90000d96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c3e:	2b07      	cmp	r3, #7
90000c40:	f240 80b9 	bls.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c44:	6803      	ldr	r3, [r0, #0]
90000c46:	4631      	mov	r1, r6
90000c48:	68db      	ldr	r3, [r3, #12]
90000c4a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c4e:	2208      	movs	r2, #8
90000c50:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c52:	6803      	ldr	r3, [r0, #0]
90000c54:	691b      	ldr	r3, [r3, #16]
90000c56:	4798      	blx	r3
90000c58:	2800      	cmp	r0, #0
90000c5a:	f000 8091 	beq.w	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c5e:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c60:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c62:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90000c64:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c66:	2800      	cmp	r0, #0
90000c68:	f000 80ae 	beq.w	90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
        const uint32_t index = offset - aviBufferStartOffset;
90000c6c:	1b9b      	subs	r3, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c6e:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c70:	e9d4 620d 	ldrd	r6, r2, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c74:	18f1      	adds	r1, r6, r3
90000c76:	5cf3      	ldrb	r3, [r6, r3]
90000c78:	788e      	ldrb	r6, [r1, #2]
90000c7a:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c7e:	0436      	lsls	r6, r6, #16
90000c80:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c84:	431e      	orrs	r6, r3
90000c86:	78cb      	ldrb	r3, [r1, #3]
90000c88:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
        if (length > aviBufferLength)
90000c8c:	42b2      	cmp	r2, r6
90000c8e:	f0c0 8092 	bcc.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c92:	6803      	ldr	r3, [r0, #0]
90000c94:	4639      	mov	r1, r7
90000c96:	68db      	ldr	r3, [r3, #12]
90000c98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c9c:	4632      	mov	r2, r6
90000c9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ca0:	6803      	ldr	r3, [r0, #0]
90000ca2:	691b      	ldr	r3, [r3, #16]
90000ca4:	4798      	blx	r3
90000ca6:	b910      	cbnz	r0, 90000cae <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000ca8:	230d      	movs	r3, #13
90000caa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000cae:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000cb0:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000cb2:	2d00      	cmp	r5, #0
90000cb4:	d058      	beq.n	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000cb6:	4b48      	ldr	r3, [pc, #288]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_output_is_paused = 0;
90000cb8:	2200      	movs	r2, #0
90000cba:	4f48      	ldr	r7, [pc, #288]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        FrameBufferAddress = output;
90000cbc:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cbe:	4b48      	ldr	r3, [pc, #288]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        JPEG_output_is_paused = 0;
90000cc0:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cc4:	4d47      	ldr	r5, [pc, #284]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cca:	f8df a144 	ldr.w	sl, [pc, #324]	; 90000e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cce:	f8df b144 	ldr.w	fp, [pc, #324]	; 90000e14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd2:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cd4:	4844      	ldr	r0, [pc, #272]	; (90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cd6:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cda:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cdc:	4b43      	ldr	r3, [pc, #268]	; (90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cde:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce2:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ce4:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce6:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce8:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cec:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cee:	4a40      	ldr	r2, [pc, #256]	; (90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cf0:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cf4:	483f      	ldr	r0, [pc, #252]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cf6:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cf8:	4a3f      	ldr	r2, [pc, #252]	; (90000df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfa:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cfc:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfe:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000d02:	4e3e      	ldr	r6, [pc, #248]	; (90000dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d04:	4c3e      	ldr	r4, [pc, #248]	; (90000e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d06:	f8df 8110 	ldr.w	r8, [pc, #272]	; 90000e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f0>
90000d0a:	f8df 9110 	ldr.w	r9, [pc, #272]	; 90000e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000d0e:	ed9f 7b30 	vldr	d7, [pc, #192]	; 90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
90000d12:	ed85 7b02 	vstr	d7, [r5, #8]
90000d16:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d1a:	f008 fc71 	bl	90009600 <HAL_JPEG_Decode_DMA>
        return 0;
90000d1e:	e017      	b.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d20:	f8d8 0000 	ldr.w	r0, [r8]
90000d24:	7a03      	ldrb	r3, [r0, #8]
90000d26:	b92b      	cbnz	r3, 90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d28:	f8db 3000 	ldr.w	r3, [fp]
90000d2c:	011b      	lsls	r3, r3, #4
90000d2e:	5ceb      	ldrb	r3, [r5, r3]
90000d30:	2b01      	cmp	r3, #1
90000d32:	d01d      	beq.n	90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d34:	683b      	ldr	r3, [r7, #0]
90000d36:	2b01      	cmp	r3, #1
90000d38:	d106      	bne.n	90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d3a:	f8da 3000 	ldr.w	r3, [sl]
90000d3e:	011b      	lsls	r3, r3, #4
90000d40:	5ceb      	ldrb	r3, [r5, r3]
90000d42:	b90b      	cbnz	r3, 90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d44:	6833      	ldr	r3, [r6, #0]
90000d46:	b1fb      	cbz	r3, 90000d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d48:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d4a:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4c:	6823      	ldr	r3, [r4, #0]
90000d4e:	b95b      	cbnz	r3, 90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d50:	6833      	ldr	r3, [r6, #0]
90000d52:	2b00      	cmp	r3, #0
90000d54:	d0e4      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d56:	f8d9 3000 	ldr.w	r3, [r9]
90000d5a:	2b00      	cmp	r3, #0
90000d5c:	d0e0      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d5e:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d60:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d62:	6823      	ldr	r3, [r4, #0]
90000d64:	2b00      	cmp	r3, #0
90000d66:	d0f3      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d68:	2001      	movs	r0, #1
90000d6a:	b003      	add	sp, #12
90000d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d70:	f8d9 3000 	ldr.w	r3, [r9]
90000d74:	2b00      	cmp	r3, #0
90000d76:	d1dd      	bne.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d78:	6803      	ldr	r3, [r0, #0]
90000d7a:	691b      	ldr	r3, [r3, #16]
90000d7c:	4798      	blx	r3
90000d7e:	e7d9      	b.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d80:	230d      	movs	r3, #13
90000d82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d86:	e76a      	b.n	90000c5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d88:	2102      	movs	r1, #2
90000d8a:	481a      	ldr	r0, [pc, #104]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_output_is_paused = 0;
90000d8c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d8e:	f008 fd7f 	bl	90009890 <HAL_JPEG_Resume>
90000d92:	2302      	movs	r3, #2
90000d94:	e7d9      	b.n	90000d4a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d96:	1d33      	adds	r3, r6, #4
    if (reader != 0)
90000d98:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d9a:	3608      	adds	r6, #8
        volatile const uint8_t* const d = movieData + offset;
90000d9c:	18ca      	adds	r2, r1, r3
        val |= d[0];
90000d9e:	5ccb      	ldrb	r3, [r1, r3]
    return movieData + offset;
90000da0:	4431      	add	r1, r6
        val |= d[1] << 8;
90000da2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90000da4:	7896      	ldrb	r6, [r2, #2]
        val |= d[3] << 24;
90000da6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90000da8:	0436      	lsls	r6, r6, #16
        val |= d[3] << 24;
90000daa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90000dae:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
90000db2:	431e      	orrs	r6, r3
    return movieData + offset;
90000db4:	e77d      	b.n	90000cb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000db6:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000db8:	4b12      	ldr	r3, [pc, #72]	; (90000e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>)
90000dba:	4a13      	ldr	r2, [pc, #76]	; (90000e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>)
90000dbc:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000dbe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000dc2:	4812      	ldr	r0, [pc, #72]	; (90000e0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>)
90000dc4:	f025 f96c 	bl	900260a0 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000dc8:	463e      	mov	r6, r7
90000dca:	e7e5      	b.n	90000d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000dcc:	f3af 8000 	nop.w
	...
90000dd8:	24005bac 	.word	0x24005bac
90000ddc:	24005bbc 	.word	0x24005bbc
90000de0:	24005b90 	.word	0x24005b90
90000de4:	24000008 	.word	0x24000008
90000de8:	24005bb8 	.word	0x24005bb8
90000dec:	2400018c 	.word	0x2400018c
90000df0:	24005bc0 	.word	0x24005bc0
90000df4:	24009250 	.word	0x24009250
90000df8:	24005bc4 	.word	0x24005bc4
90000dfc:	24005bb4 	.word	0x24005bb4
90000e00:	24005bb0 	.word	0x24005bb0
90000e04:	90027544 	.word	0x90027544
90000e08:	90027558 	.word	0x90027558
90000e0c:	900274f4 	.word	0x900274f4
90000e10:	24005bc8 	.word	0x24005bc8
90000e14:	24000188 	.word	0x24000188
90000e18:	24005ba8 	.word	0x24005ba8
90000e1c:	24000184 	.word	0x24000184

90000e20 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e20:	6943      	ldr	r3, [r0, #20]
{
90000e22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e26:	2b00      	cmp	r3, #0
90000e28:	f000 80c0 	beq.w	90000fac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18c>
    readData(currentMovieOffset, 8);
90000e2c:	4605      	mov	r5, r0
    if (reader != 0)
90000e2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e30:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e32:	2800      	cmp	r0, #0
90000e34:	f000 80a0 	beq.w	90000f78 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>
        if (length > aviBufferLength)
90000e38:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e3a:	2b07      	cmp	r3, #7
90000e3c:	f240 80ab 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e40:	6803      	ldr	r3, [r0, #0]
90000e42:	4621      	mov	r1, r4
90000e44:	68db      	ldr	r3, [r3, #12]
90000e46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e48:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e4a:	2208      	movs	r2, #8
90000e4c:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e4e:	6803      	ldr	r3, [r0, #0]
90000e50:	691b      	ldr	r3, [r3, #16]
90000e52:	4798      	blx	r3
90000e54:	2800      	cmp	r0, #0
90000e56:	f000 808b 	beq.w	90000f70 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5a:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e5c:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5e:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e60:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e62:	2800      	cmp	r0, #0
90000e64:	f000 808a 	beq.w	90000f7c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15c>
        const uint32_t index = offset - aviBufferStartOffset;
90000e68:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e6a:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e6c:	18a1      	adds	r1, r4, r2
90000e6e:	5ca2      	ldrb	r2, [r4, r2]
90000e70:	788c      	ldrb	r4, [r1, #2]
90000e72:	784e      	ldrb	r6, [r1, #1]
90000e74:	0424      	lsls	r4, r4, #16
90000e76:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e7a:	4314      	orrs	r4, r2
90000e7c:	78ca      	ldrb	r2, [r1, #3]
90000e7e:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e82:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e84:	f243 0630 	movw	r6, #12336	; 0x3030
90000e88:	e03a      	b.n	90000f00 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90000e8a:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e8c:	2b07      	cmp	r3, #7
90000e8e:	f240 8082 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e92:	6803      	ldr	r3, [r0, #0]
90000e94:	4621      	mov	r1, r4
90000e96:	68db      	ldr	r3, [r3, #12]
90000e98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e9a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e9c:	2208      	movs	r2, #8
90000e9e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000ea0:	6803      	ldr	r3, [r0, #0]
90000ea2:	691b      	ldr	r3, [r3, #16]
90000ea4:	4798      	blx	r3
90000ea6:	b908      	cbnz	r0, 90000eac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90000ea8:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000eac:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000eae:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90000eb0:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000eb2:	2800      	cmp	r0, #0
90000eb4:	d078      	beq.n	90000fa8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x188>
        const uint32_t index = offset - aviBufferStartOffset;
90000eb6:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb8:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000eba:	18ca      	adds	r2, r1, r3
90000ebc:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ebe:	7994      	ldrb	r4, [r2, #6]
90000ec0:	f892 a005 	ldrb.w	sl, [r2, #5]
90000ec4:	0424      	lsls	r4, r4, #16
90000ec6:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eca:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ece:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ed2:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ed4:	f892 8003 	ldrb.w	r8, [r2, #3]
90000ed8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90000edc:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee0:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ee4:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000eec:	f246 3164 	movw	r1, #25444	; 0x6364
90000ef0:	42b3      	cmp	r3, r6
90000ef2:	bf08      	it	eq
90000ef4:	428a      	cmpeq	r2, r1
90000ef6:	bf0c      	ite	eq
90000ef8:	2301      	moveq	r3, #1
90000efa:	2300      	movne	r3, #0
90000efc:	d035      	beq.n	90000f6a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14a>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000efe:	69ab      	ldr	r3, [r5, #24]
90000f00:	441c      	add	r4, r3
90000f02:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000f04:	f104 0208 	add.w	r2, r4, #8
90000f08:	429a      	cmp	r2, r3
90000f0a:	d229      	bcs.n	90000f60 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x140>
        frameNumber++;
90000f0c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f0e:	3409      	adds	r4, #9
        frameNumber++;
90000f10:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f12:	f024 0401 	bic.w	r4, r4, #1
90000f16:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000f1a:	2800      	cmp	r0, #0
90000f1c:	d1b5      	bne.n	90000e8a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90000f1e:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
        chunkSize = getU32(currentMovieOffset + 4);
90000f20:	f104 0e04 	add.w	lr, r4, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f24:	1ca2      	adds	r2, r4, #2
        volatile const uint8_t* const d = movieData + offset;
90000f26:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90000f2a:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90000f2c:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90000f30:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90000f34:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90000f38:	188c      	adds	r4, r1, r2
        val |= d[0];
90000f3a:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90000f3c:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90000f3e:	f811 100e 	ldrb.w	r1, [r1, lr]
        val |= d[1] << 8;
90000f42:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
90000f46:	f89c e001 	ldrb.w	lr, [ip, #1]
        val |= d[2] << 16;
90000f4a:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90000f4e:	f89c c003 	ldrb.w	ip, [ip, #3]
        val |= d[2] << 16;
90000f52:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f54:	ea41 610c 	orr.w	r1, r1, ip, lsl #24
90000f58:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90000f5c:	430c      	orrs	r4, r1
        return val;
90000f5e:	e7c5      	b.n	90000eec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
90000f60:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000f62:	6a2a      	ldr	r2, [r5, #32]
    return false;
90000f64:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f66:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90000f6a:	4618      	mov	r0, r3
90000f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f70:	230d      	movs	r3, #13
90000f72:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f76:	e770      	b.n	90000e5a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f78:	1d22      	adds	r2, r4, #4
90000f7a:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90000f7c:	6aec      	ldr	r4, [r5, #44]	; 0x2c
90000f7e:	18a1      	adds	r1, r4, r2
        val |= d[0];
90000f80:	5ca2      	ldrb	r2, [r4, r2]
        val |= d[1] << 8;
90000f82:	784e      	ldrb	r6, [r1, #1]
        val |= d[2] << 16;
90000f84:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90000f86:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000f88:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f8a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000f8e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000f92:	4314      	orrs	r4, r2
        return val;
90000f94:	e775      	b.n	90000e82 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f96:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f98:	4b07      	ldr	r3, [pc, #28]	; (90000fb8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x198>)
90000f9a:	4a08      	ldr	r2, [pc, #32]	; (90000fbc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
90000f9c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f9e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000fa2:	4807      	ldr	r0, [pc, #28]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fa4:	f025 f87c 	bl	900260a0 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000fa8:	461c      	mov	r4, r3
90000faa:	e7b8      	b.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fac:	4b05      	ldr	r3, [pc, #20]	; (90000fc4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90000fae:	21e5      	movs	r1, #229	; 0xe5
90000fb0:	4a05      	ldr	r2, [pc, #20]	; (90000fc8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90000fb2:	4803      	ldr	r0, [pc, #12]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fb4:	f025 f874 	bl	900260a0 <__assert_func>
90000fb8:	90027544 	.word	0x90027544
90000fbc:	90027558 	.word	0x90027558
90000fc0:	900274f4 	.word	0x900274f4
90000fc4:	9002759c 	.word	0x9002759c
90000fc8:	900275e8 	.word	0x900275e8

90000fcc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fcc:	6943      	ldr	r3, [r0, #20]
{
90000fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fd2:	2b00      	cmp	r3, #0
90000fd4:	f000 80ad 	beq.w	90001132 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90000fd8:	4604      	mov	r4, r0
    if (reader != 0)
90000fda:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000fdc:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000fde:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000fe0:	2800      	cmp	r0, #0
90000fe2:	d05f      	beq.n	900010a4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90000fe4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000fe6:	2b07      	cmp	r3, #7
90000fe8:	f240 80a9 	bls.w	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90000fec:	6803      	ldr	r3, [r0, #0]
90000fee:	4629      	mov	r1, r5
90000ff0:	68db      	ldr	r3, [r3, #12]
90000ff2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000ff4:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000ff6:	2208      	movs	r2, #8
90000ff8:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ffa:	6803      	ldr	r3, [r0, #0]
90000ffc:	691b      	ldr	r3, [r3, #16]
90000ffe:	4798      	blx	r3
90001000:	2800      	cmp	r0, #0
90001002:	d04a      	beq.n	9000109a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    if (reader != 0)
90001004:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90001006:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90001008:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
9000100a:	2800      	cmp	r0, #0
9000100c:	d049      	beq.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000100e:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001012:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001014:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001016:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
9000101a:	1b52      	subs	r2, r2, r5
9000101c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000101e:	eb03 070c 	add.w	r7, r3, ip
90001022:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001026:	eb03 0805 	add.w	r8, r3, r5
9000102a:	f813 c005 	ldrb.w	ip, [r3, r5]
9000102e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001032:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001036:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000103a:	78bd      	ldrb	r5, [r7, #2]
9000103c:	78ff      	ldrb	r7, [r7, #3]
9000103e:	042d      	lsls	r5, r5, #16
90001040:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001044:	ea45 050e 	orr.w	r5, r5, lr
90001048:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000104c:	189f      	adds	r7, r3, r2
9000104e:	5c9b      	ldrb	r3, [r3, r2]
90001050:	787a      	ldrb	r2, [r7, #1]
90001052:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001056:	194a      	adds	r2, r1, r5
90001058:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000105a:	f102 0e08 	add.w	lr, r2, #8
9000105e:	459e      	cmp	lr, r3
90001060:	d214      	bcs.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001062:	f243 0330 	movw	r3, #12336	; 0x3030
90001066:	459c      	cmp	ip, r3
90001068:	d139      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
9000106a:	f246 3364 	movw	r3, #25444	; 0x6364
9000106e:	429f      	cmp	r7, r3
90001070:	d135      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001072:	2d00      	cmp	r5, #0
90001074:	d137      	bne.n	900010e6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
            currentMovieOffset += 8;
90001076:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001078:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000107a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000107c:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001080:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001082:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001084:	d002      	beq.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001086:	2001      	movs	r0, #1
}
90001088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
9000108c:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000108e:	6a23      	ldr	r3, [r4, #32]
90001090:	2000      	movs	r0, #0
90001092:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000109a:	230d      	movs	r3, #13
9000109c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900010a0:	e7b0      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
900010a2:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
900010a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900010a6:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900010a8:	1d2a      	adds	r2, r5, #4
        volatile const uint8_t* const d = movieData + offset;
900010aa:	1959      	adds	r1, r3, r5
        val |= d[0];
900010ac:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
900010b0:	1898      	adds	r0, r3, r2
        val |= d[1] << 8;
900010b2:	7849      	ldrb	r1, [r1, #1]
900010b4:	ea4c 2c01 	orr.w	ip, ip, r1, lsl #8
        val |= d[3] << 24;
900010b8:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
900010ba:	19dd      	adds	r5, r3, r7
        val |= d[0];
900010bc:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
900010be:	786d      	ldrb	r5, [r5, #1]
        val |= d[0];
900010c0:	5c9a      	ldrb	r2, [r3, r2]
        val |= d[1] << 8;
900010c2:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
900010c6:	f890 e001 	ldrb.w	lr, [r0, #1]
        val |= d[2] << 16;
900010ca:	7885      	ldrb	r5, [r0, #2]
        val |= d[3] << 24;
900010cc:	78c3      	ldrb	r3, [r0, #3]
900010ce:	2000      	movs	r0, #0
        val |= d[2] << 16;
900010d0:	042d      	lsls	r5, r5, #16
        val |= d[3] << 24;
900010d2:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
900010d6:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
900010da:	431d      	orrs	r5, r3
        return val;
900010dc:	e7bb      	b.n	90001056 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        currentMovieOffset += chunkSize;
900010de:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
900010e0:	2d00      	cmp	r5, #0
900010e2:	d1c9      	bne.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
900010e4:	e7c7      	b.n	90001076 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
            currentMovieOffset += 8;
900010e6:	f101 0708 	add.w	r7, r1, #8
900010ea:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
900010ec:	b1f0      	cbz	r0, 9000112c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
900010ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900010f0:	429d      	cmp	r5, r3
900010f2:	d824      	bhi.n	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
900010f4:	6803      	ldr	r3, [r0, #0]
900010f6:	4639      	mov	r1, r7
900010f8:	68db      	ldr	r3, [r3, #12]
900010fa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
900010fe:	462a      	mov	r2, r5
90001100:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001102:	6803      	ldr	r3, [r0, #0]
90001104:	691b      	ldr	r3, [r3, #16]
90001106:	4798      	blx	r3
90001108:	b910      	cbnz	r0, 90001110 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
9000110a:	230d      	movs	r3, #13
9000110c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001110:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001112:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001114:	b126      	cbz	r6, 90001120 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001116:	4633      	mov	r3, r6
90001118:	462a      	mov	r2, r5
9000111a:	4620      	mov	r0, r4
9000111c:	f7ff fc60 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001120:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001124:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001126:	442a      	add	r2, r5
            frameNumber++;
90001128:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000112a:	e7a5      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
9000112c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000112e:	4439      	add	r1, r7
90001130:	e7f0      	b.n	90001114 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001132:	4b07      	ldr	r3, [pc, #28]	; (90001150 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001134:	21b1      	movs	r1, #177	; 0xb1
90001136:	4a07      	ldr	r2, [pc, #28]	; (90001154 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001138:	4807      	ldr	r0, [pc, #28]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000113a:	f024 ffb1 	bl	900260a0 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000113e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001140:	4b06      	ldr	r3, [pc, #24]	; (9000115c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001142:	4a07      	ldr	r2, [pc, #28]	; (90001160 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001144:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001146:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
9000114a:	4803      	ldr	r0, [pc, #12]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000114c:	f024 ffa8 	bl	900260a0 <__assert_func>
90001150:	9002759c 	.word	0x9002759c
90001154:	9002761c 	.word	0x9002761c
90001158:	900274f4 	.word	0x900274f4
9000115c:	90027544 	.word	0x90027544
90001160:	90027558 	.word	0x90027558

90001164 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001164:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001166:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001168:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000116a:	4b0e      	ldr	r3, [pc, #56]	; (900011a4 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
9000116c:	2001      	movs	r0, #1
9000116e:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001170:	63e2      	str	r2, [r4, #60]	; 0x3c
90001172:	6023      	str	r3, [r4, #0]
90001174:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001178:	e9c4 2205 	strd	r2, r2, [r4, #20]
9000117c:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001180:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001184:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
90001188:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
9000118c:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001190:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001194:	f00b fe4a 	bl	9000ce2c <osSemaphoreNew>
90001198:	4b03      	ldr	r3, [pc, #12]	; (900011a8 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000119a:	4602      	mov	r2, r0
}
9000119c:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000119e:	601a      	str	r2, [r3, #0]
}
900011a0:	bd10      	pop	{r4, pc}
900011a2:	bf00      	nop
900011a4:	90027740 	.word	0x90027740
900011a8:	24005bcc 	.word	0x24005bcc

900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
900011ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
900011b0:	2100      	movs	r1, #0
    if (reader != 0)
900011b2:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
900011b4:	b083      	sub	sp, #12
900011b6:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900011b8:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900011ba:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
900011be:	2e00      	cmp	r6, #0
900011c0:	f000 81b4 	beq.w	9000152c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>
        if (length > aviBufferLength)
900011c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
900011c6:	2b47      	cmp	r3, #71	; 0x47
900011c8:	f240 8265 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900011cc:	6833      	ldr	r3, [r6, #0]
900011ce:	4630      	mov	r0, r6
900011d0:	68db      	ldr	r3, [r3, #12]
900011d2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900011d6:	2248      	movs	r2, #72	; 0x48
900011d8:	6b69      	ldr	r1, [r5, #52]	; 0x34
900011da:	6803      	ldr	r3, [r0, #0]
900011dc:	691b      	ldr	r3, [r3, #16]
900011de:	4798      	blx	r3
900011e0:	2800      	cmp	r0, #0
900011e2:	f000 80ce 	beq.w	90001382 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
900011e6:	2300      	movs	r3, #0
    if (reader != 0)
900011e8:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900011ea:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900011ec:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
900011ee:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
900011f0:	2e00      	cmp	r6, #0
900011f2:	f000 819c 	beq.w	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x382>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011f6:	f8d5 a034 	ldr.w	sl, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900011fa:	2204      	movs	r2, #4
900011fc:	49c3      	ldr	r1, [pc, #780]	; (9000150c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011fe:	eb0a 0b07 	add.w	fp, sl, r7
    return strncmp(src, str, num);
90001202:	4658      	mov	r0, fp
90001204:	f025 fa2c 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001208:	2800      	cmp	r0, #0
9000120a:	f040 824d 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
9000120e:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001212:	2204      	movs	r2, #4
90001214:	49be      	ldr	r1, [pc, #760]	; (90001510 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
    currentMovieOffset += 8;
90001216:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001218:	4450      	add	r0, sl
9000121a:	f025 fa21 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000121e:	2800      	cmp	r0, #0
90001220:	f040 825d 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
90001224:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90001228:	2204      	movs	r2, #4
9000122a:	49ba      	ldr	r1, [pc, #744]	; (90001514 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000122c:	eb0a 0008 	add.w	r0, sl, r8
    currentMovieOffset += 4;
90001230:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
90001234:	f025 fa14 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001238:	9001      	str	r0, [sp, #4]
9000123a:	2800      	cmp	r0, #0
9000123c:	f040 8245 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001240:	f89b 4012 	ldrb.w	r4, [fp, #18]
90001244:	f89b 2011 	ldrb.w	r2, [fp, #17]
90001248:	0424      	lsls	r4, r4, #16
9000124a:	f89b 3013 	ldrb.w	r3, [fp, #19]
9000124e:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
90001252:	f89b 2010 	ldrb.w	r2, [fp, #16]
90001256:	4314      	orrs	r4, r2
    assert(aviListSize);
90001258:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000125c:	f000 822e 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001260:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001264:	2204      	movs	r2, #4
90001266:	49ac      	ldr	r1, [pc, #688]	; (90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
90001268:	4450      	add	r0, sl
9000126a:	f025 f9f9 	bl	90026660 <strncmp>
    if (compare(offset, "hdrl", 4))
9000126e:	2800      	cmp	r0, #0
90001270:	f000 808b 	beq.w	9000138a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001274:	2306      	movs	r3, #6
        foundFrame = false;
90001276:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
9000127a:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000127e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001282:	4450      	add	r0, sl
    return strncmp(src, str, num);
90001284:	2204      	movs	r2, #4
90001286:	49a5      	ldr	r1, [pc, #660]	; (9000151c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
90001288:	f025 f9ea 	bl	90026660 <strncmp>
    if (compare(offset, "avih", 4))
9000128c:	2800      	cmp	r0, #0
9000128e:	f000 808f 	beq.w	900013b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x204>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001292:	2307      	movs	r3, #7
90001294:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001298:	4444      	add	r4, r8
9000129a:	3408      	adds	r4, #8
    if (reader != 0)
9000129c:	f1b9 0f00 	cmp.w	r9, #0
900012a0:	d015      	beq.n	900012ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
900012a2:	6bab      	ldr	r3, [r5, #56]	; 0x38
900012a4:	2b0b      	cmp	r3, #11
900012a6:	f240 81f6 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900012aa:	f8d9 3000 	ldr.w	r3, [r9]
900012ae:	4621      	mov	r1, r4
900012b0:	4648      	mov	r0, r9
900012b2:	68db      	ldr	r3, [r3, #12]
900012b4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012b8:	220c      	movs	r2, #12
900012ba:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012bc:	6803      	ldr	r3, [r0, #0]
900012be:	691b      	ldr	r3, [r3, #16]
900012c0:	4798      	blx	r3
900012c2:	b910      	cbnz	r0, 900012ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
900012c4:	230d      	movs	r3, #13
900012c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012ca:	6b2e      	ldr	r6, [r5, #48]	; 0x30
900012cc:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
900012ce:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
900012d2:	4f93      	ldr	r7, [pc, #588]	; (90001520 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d4:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
900012d8:	2e00      	cmp	r6, #0
900012da:	d041      	beq.n	90001360 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
900012de:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e0:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900012e2:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e4:	eba8 0303 	sub.w	r3, r8, r3
900012e8:	4418      	add	r0, r3
    return strncmp(src, str, num);
900012ea:	f025 f9b9 	bl	90026660 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012ee:	2800      	cmp	r0, #0
900012f0:	d03e      	beq.n	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
900012f2:	f1b9 0f00 	cmp.w	r9, #0
900012f6:	d13e      	bne.n	90001376 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
900012f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
900012fa:	42a3      	cmp	r3, r4
900012fc:	f240 80b1 	bls.w	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001300:	3404      	adds	r4, #4
    if (reader != 0)
90001302:	2e00      	cmp	r6, #0
90001304:	d046      	beq.n	90001394 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
90001306:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
90001308:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000130c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000130e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001310:	eb01 0204 	add.w	r2, r1, r4
90001314:	5d09      	ldrb	r1, [r1, r4]
90001316:	7894      	ldrb	r4, [r2, #2]
90001318:	7850      	ldrb	r0, [r2, #1]
9000131a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000131e:	78d2      	ldrb	r2, [r2, #3]
90001320:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001324:	ea44 0401 	orr.w	r4, r4, r1
90001328:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
9000132c:	4444      	add	r4, r8
        if (length > aviBufferLength)
9000132e:	f240 81b2 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90001332:	6833      	ldr	r3, [r6, #0]
90001334:	4621      	mov	r1, r4
90001336:	4630      	mov	r0, r6
90001338:	68db      	ldr	r3, [r3, #12]
9000133a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000133c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000133e:	220c      	movs	r2, #12
90001340:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001342:	6803      	ldr	r3, [r0, #0]
90001344:	691b      	ldr	r3, [r3, #16]
90001346:	4798      	blx	r3
90001348:	b910      	cbnz	r0, 90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
9000134a:	230d      	movs	r3, #13
9000134c:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90001350:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001352:	f104 0808 	add.w	r8, r4, #8
90001356:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000135a:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
9000135c:	2e00      	cmp	r6, #0
9000135e:	d1bd      	bne.n	900012dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
90001360:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001362:	2204      	movs	r2, #4
90001364:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
90001366:	4440      	add	r0, r8
    return strncmp(src, str, num);
90001368:	f025 f97a 	bl	90026660 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000136c:	2800      	cmp	r0, #0
9000136e:	d1c0      	bne.n	900012f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
90001370:	f1b9 0f00 	cmp.w	r9, #0
90001374:	d075      	beq.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001376:	230a      	movs	r3, #10
90001378:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000137c:	b003      	add	sp, #12
9000137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001382:	230d      	movs	r3, #13
90001384:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001388:	e72d      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
9000138a:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000138e:	f04f 0b01 	mov.w	fp, #1
90001392:	e776      	b.n	90001282 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        volatile const uint8_t* const d = movieData + offset;
90001394:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90001396:	191a      	adds	r2, r3, r4
        val |= d[0];
90001398:	5d1b      	ldrb	r3, [r3, r4]
        val |= d[1] << 8;
9000139a:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
9000139c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000139e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900013a0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900013a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900013a6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900013aa:	431c      	orrs	r4, r3
        listOffset += listSize;
900013ac:	4444      	add	r4, r8
    return movieData + offset;
900013ae:	e791      	b.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
900013b0:	f1bb 0f00 	cmp.w	fp, #0
900013b4:	f43f af70 	beq.w	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900013b8:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
900013bc:	f1b9 0f00 	cmp.w	r9, #0
900013c0:	f000 8125 	beq.w	9000160e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900013c4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c6:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900013c8:	1ac9      	subs	r1, r1, r3
900013ca:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900013ce:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	f812 a001 	ldrb.w	sl, [r2, r1]
900013d6:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
900013da:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
900013de:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
900013e2:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e4:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
900013e8:	4439      	add	r1, r7
900013ea:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013ec:	f89e 3002 	ldrb.w	r3, [lr, #2]
900013f0:	f89e e003 	ldrb.w	lr, [lr, #3]
900013f4:	041b      	lsls	r3, r3, #16
900013f6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
900013fa:	ea43 030a 	orr.w	r3, r3, sl
900013fe:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001402:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001406:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000140a:	099b      	lsrs	r3, r3, #6
9000140c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000140e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001412:	f89c a001 	ldrb.w	sl, [ip, #1]
90001416:	041b      	lsls	r3, r3, #16
90001418:	f812 e000 	ldrb.w	lr, [r2, r0]
9000141c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001420:	1850      	adds	r0, r2, r1
90001422:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001426:	ea43 030e 	orr.w	r3, r3, lr
9000142a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000142e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001430:	7883      	ldrb	r3, [r0, #2]
90001432:	f890 c001 	ldrb.w	ip, [r0, #1]
90001436:	041b      	lsls	r3, r3, #16
90001438:	5c51      	ldrb	r1, [r2, r1]
9000143a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000143e:	430b      	orrs	r3, r1
90001440:	78c1      	ldrb	r1, [r0, #3]
90001442:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001446:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001448:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000144a:	788b      	ldrb	r3, [r1, #2]
9000144c:	7848      	ldrb	r0, [r1, #1]
9000144e:	041b      	lsls	r3, r3, #16
90001450:	5dd2      	ldrb	r2, [r2, r7]
90001452:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001456:	4313      	orrs	r3, r2
90001458:	78ca      	ldrb	r2, [r1, #3]
9000145a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000145e:	612b      	str	r3, [r5, #16]
90001460:	e71a      	b.n	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001462:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001466:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001468:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000146a:	2e00      	cmp	r6, #0
9000146c:	f000 80b4 	beq.w	900015d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001470:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90001472:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001474:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001478:	f104 0c02 	add.w	ip, r4, #2
9000147c:	1c67      	adds	r7, r4, #1
9000147e:	f811 e004 	ldrb.w	lr, [r1, r4]
90001482:	1ce0      	adds	r0, r4, #3
90001484:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
90001488:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000148a:	f811 9007 	ldrb.w	r9, [r1, r7]
9000148e:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001492:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001496:	ea43 030e 	orr.w	r3, r3, lr
9000149a:	f811 e000 	ldrb.w	lr, [r1, r0]
9000149e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900014a2:	4443      	add	r3, r8
900014a4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a6:	f811 300c 	ldrb.w	r3, [r1, ip]
900014aa:	f811 c007 	ldrb.w	ip, [r1, r7]
900014ae:	5d0f      	ldrb	r7, [r1, r4]
900014b0:	ea4f 4403 	mov.w	r4, r3, lsl #16
900014b4:	5c09      	ldrb	r1, [r1, r0]
900014b6:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
900014ba:	ea44 0407 	orr.w	r4, r4, r7
900014be:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900014c2:	4444      	add	r4, r8
        if (length > aviBufferLength)
900014c4:	f240 80e7 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900014c8:	6833      	ldr	r3, [r6, #0]
900014ca:	4621      	mov	r1, r4
900014cc:	4630      	mov	r0, r6
900014ce:	68db      	ldr	r3, [r3, #12]
900014d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014d2:	6b28      	ldr	r0, [r5, #48]	; 0x30
900014d4:	2204      	movs	r2, #4
900014d6:	6b69      	ldr	r1, [r5, #52]	; 0x34
900014d8:	6803      	ldr	r3, [r0, #0]
900014da:	691b      	ldr	r3, [r3, #16]
900014dc:	4798      	blx	r3
900014de:	2800      	cmp	r0, #0
900014e0:	d06a      	beq.n	900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
    if (reader != 0)
900014e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
900014e4:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900014e6:	2b00      	cmp	r3, #0
900014e8:	f000 8103 	beq.w	900016f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014ec:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900014ee:	2204      	movs	r2, #4
900014f0:	490c      	ldr	r1, [pc, #48]	; (90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
900014f2:	f025 f8b5 	bl	90026660 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900014f6:	2800      	cmp	r0, #0
900014f8:	d168      	bne.n	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x420>
    frameNumber = 1; /* next frame number is 1 */
900014fa:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900014fc:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900014fe:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001500:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001502:	622b      	str	r3, [r5, #32]
}
90001504:	b003      	add	sp, #12
90001506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000150a:	bf00      	nop
9000150c:	90027678 	.word	0x90027678
90001510:	90027730 	.word	0x90027730
90001514:	90027728 	.word	0x90027728
90001518:	90027720 	.word	0x90027720
9000151c:	90027708 	.word	0x90027708
90001520:	90027710 	.word	0x90027710
90001524:	90027718 	.word	0x90027718
90001528:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000152c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000152e:	f8d5 902c 	ldr.w	r9, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001532:	2204      	movs	r2, #4
90001534:	4970      	ldr	r1, [pc, #448]	; (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x54c>)
90001536:	eb09 0007 	add.w	r0, r9, r7
9000153a:	f025 f891 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000153e:	2800      	cmp	r0, #0
90001540:	f040 80b2 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
90001544:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001548:	2204      	movs	r2, #4
9000154a:	496c      	ldr	r1, [pc, #432]	; (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x550>)
    currentMovieOffset += 8;
9000154c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000154e:	4448      	add	r0, r9
90001550:	f025 f886 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001554:	2800      	cmp	r0, #0
90001556:	f040 80c2 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
9000155a:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
9000155e:	2204      	movs	r2, #4
90001560:	4967      	ldr	r1, [pc, #412]	; (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x554>)
90001562:	eb09 0008 	add.w	r0, r9, r8
    currentMovieOffset += 4;
90001566:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
9000156a:	f025 f879 	bl	90026660 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000156e:	4683      	mov	fp, r0
90001570:	2800      	cmp	r0, #0
90001572:	f040 80aa 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001576:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000157a:	eb09 0203 	add.w	r2, r9, r3
        val |= d[0];
9000157e:	f819 3003 	ldrb.w	r3, [r9, r3]
        val |= d[1] << 8;
90001582:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
90001584:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
90001586:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001588:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
9000158a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000158e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
    assert(aviListSize);
90001592:	431c      	orrs	r4, r3
90001594:	f000 8092 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001598:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000159c:	2204      	movs	r2, #4
9000159e:	4959      	ldr	r1, [pc, #356]	; (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x558>)
900015a0:	4448      	add	r0, r9
900015a2:	f025 f85d 	bl	90026660 <strncmp>
    if (compare(offset, "hdrl", 4))
900015a6:	b958      	cbnz	r0, 900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
    offset += 4;
900015a8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900015ac:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900015b0:	4448      	add	r0, r9
900015b2:	f04f 0900 	mov.w	r9, #0
900015b6:	e665      	b.n	90001284 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900015b8:	230d      	movs	r3, #13
900015ba:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900015be:	e790      	b.n	900014e2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x336>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c0:	2306      	movs	r3, #6
    offset += 4;
900015c2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900015ca:	e7f1      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x404>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900015cc:	230b      	movs	r3, #11
900015ce:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900015d2:	b003      	add	sp, #12
900015d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900015d8:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
        volatile const uint8_t* const d = movieData + offset;
900015da:	1902      	adds	r2, r0, r4
        val |= d[0];
900015dc:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900015de:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900015e0:	7893      	ldrb	r3, [r2, #2]
900015e2:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900015e4:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900015e8:	78d6      	ldrb	r6, [r2, #3]
900015ea:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
900015ee:	430b      	orrs	r3, r1
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015f0:	4443      	add	r3, r8
900015f2:	626b      	str	r3, [r5, #36]	; 0x24
        val |= d[0];
900015f4:	5d03      	ldrb	r3, [r0, r4]
        val |= d[1] << 8;
900015f6:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900015f8:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900015fa:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900015fc:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900015fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90001602:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001606:	431c      	orrs	r4, r3
    listOffset += listSize;
90001608:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
9000160a:	4420      	add	r0, r4
9000160c:	e76f      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
9000160e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001610:	f107 0e30 	add.w	lr, r7, #48	; 0x30
        videoInfo.frame_width = getU32(offset + 32);
90001614:	f107 0c40 	add.w	ip, r7, #64	; 0x40
        videoInfo.frame_height = getU32(offset + 36);
90001618:	3744      	adds	r7, #68	; 0x44
        volatile const uint8_t* const d = movieData + offset;
9000161a:	1850      	adds	r0, r2, r1
        val |= d[0];
9000161c:	f812 b001 	ldrb.w	fp, [r2, r1]
        volatile const uint8_t* const d = movieData + offset;
90001620:	eb02 010e 	add.w	r1, r2, lr
        val |= d[1] << 8;
90001624:	f890 a001 	ldrb.w	sl, [r0, #1]
        val |= d[2] << 16;
90001628:	7883      	ldrb	r3, [r0, #2]
        val |= d[3] << 24;
9000162a:	78c0      	ldrb	r0, [r0, #3]
        val |= d[2] << 16;
9000162c:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000162e:	ea4b 6000 	orr.w	r0, fp, r0, lsl #24
90001632:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001636:	4303      	orrs	r3, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001638:	4833      	ldr	r0, [pc, #204]	; (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55c>)
9000163a:	fba0 0303 	umull	r0, r3, r0, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001642:	f812 000e 	ldrb.w	r0, [r2, lr]
        val |= d[1] << 8;
90001646:	f891 e001 	ldrb.w	lr, [r1, #1]
        val |= d[2] << 16;
9000164a:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
9000164c:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
9000164e:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001650:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
90001654:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001658:	eb02 0e0c 	add.w	lr, r2, ip
        val |= d[3] << 24;
9000165c:	430b      	orrs	r3, r1
        volatile const uint8_t* const d = movieData + offset;
9000165e:	19d1      	adds	r1, r2, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001660:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001662:	f812 000c 	ldrb.w	r0, [r2, ip]
        val |= d[1] << 8;
90001666:	f89e c001 	ldrb.w	ip, [lr, #1]
        val |= d[2] << 16;
9000166a:	f89e 3002 	ldrb.w	r3, [lr, #2]
        val |= d[3] << 24;
9000166e:	f89e e003 	ldrb.w	lr, [lr, #3]
        val |= d[2] << 16;
90001672:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001674:	ea40 600e 	orr.w	r0, r0, lr, lsl #24
90001678:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000167c:	4303      	orrs	r3, r0
        videoInfo.frame_width = getU32(offset + 32);
9000167e:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001680:	5dd2      	ldrb	r2, [r2, r7]
        val |= d[1] << 8;
90001682:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90001684:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90001686:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90001688:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000168a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
9000168e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001692:	4313      	orrs	r3, r2
        return val;
90001694:	e6e3      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b2>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001696:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001698:	4b1c      	ldr	r3, [pc, #112]	; (9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000169a:	4a1d      	ldr	r2, [pc, #116]	; (90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
9000169c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000169e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900016a2:	481c      	ldr	r0, [pc, #112]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016a4:	f024 fcfc 	bl	900260a0 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900016a8:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900016aa:	4b1b      	ldr	r3, [pc, #108]	; (90001718 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
900016ac:	4a1b      	ldr	r2, [pc, #108]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016ae:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_NOT_RIFF;
900016b2:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
900016b6:	4817      	ldr	r0, [pc, #92]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016b8:	f024 fcf2 	bl	900260a0 <__assert_func>
    assert(aviListSize);
900016bc:	4b18      	ldr	r3, [pc, #96]	; (90001720 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
900016be:	f44f 71a1 	mov.w	r1, #322	; 0x142
900016c2:	4a16      	ldr	r2, [pc, #88]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016c4:	4813      	ldr	r0, [pc, #76]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016c6:	f024 fceb 	bl	900260a0 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900016cc:	4b15      	ldr	r3, [pc, #84]	; (90001724 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900016ce:	4a13      	ldr	r2, [pc, #76]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016d0:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016d4:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
900016d8:	480e      	ldr	r0, [pc, #56]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016da:	f024 fce1 	bl	900260a0 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900016e0:	4b11      	ldr	r3, [pc, #68]	; (90001728 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900016e2:	4a0e      	ldr	r2, [pc, #56]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016e4:	f240 1135 	movw	r1, #309	; 0x135
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016e8:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
900016ec:	4809      	ldr	r0, [pc, #36]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016ee:	f024 fcd7 	bl	900260a0 <__assert_func>
        src = (const char*)movieData + offset;
900016f2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900016f4:	4420      	add	r0, r4
900016f6:	e6fa      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
900016f8:	90027678 	.word	0x90027678
900016fc:	90027730 	.word	0x90027730
90001700:	90027728 	.word	0x90027728
90001704:	90027720 	.word	0x90027720
90001708:	10624dd3 	.word	0x10624dd3
9000170c:	90027544 	.word	0x90027544
90001710:	90027558 	.word	0x90027558
90001714:	900274f4 	.word	0x900274f4
90001718:	90027680 	.word	0x90027680
9000171c:	9002769c 	.word	0x9002769c
90001720:	900276fc 	.word	0x900276fc
90001724:	900276e4 	.word	0x900276e4
90001728:	900276cc 	.word	0x900276cc

9000172c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000172c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000172e:	2400      	movs	r4, #0
    movieLength = length;
90001730:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
90001734:	6304      	str	r4, [r0, #48]	; 0x30
}
90001736:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000173a:	f7ff bd37 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000173e:	bf00      	nop

90001740 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001740:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001742:	680b      	ldr	r3, [r1, #0]
{
90001744:	4604      	mov	r4, r0
    movieData = 0;
90001746:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001748:	4608      	mov	r0, r1
9000174a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000174c:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90001750:	4798      	blx	r3
90001752:	4603      	mov	r3, r0
    readVideoHeader();
90001754:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001756:	62a3      	str	r3, [r4, #40]	; 0x28
}
90001758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000175c:	f7ff bd26 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001760 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001760:	684b      	ldr	r3, [r1, #4]
90001762:	2b01      	cmp	r3, #1
90001764:	d015      	beq.n	90001792 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001766:	2b02      	cmp	r3, #2
90001768:	d00b      	beq.n	90001782 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000176a:	b94b      	cbnz	r3, 90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000176c:	68cb      	ldr	r3, [r1, #12]
9000176e:	0758      	lsls	r0, r3, #29
90001770:	d124      	bne.n	900017bc <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001772:	688b      	ldr	r3, [r1, #8]
90001774:	075a      	lsls	r2, r3, #29
90001776:	d003      	beq.n	90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001778:	f023 0307 	bic.w	r3, r3, #7
9000177c:	3308      	adds	r3, #8
9000177e:	608b      	str	r3, [r1, #8]
    }
90001780:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001782:	68cb      	ldr	r3, [r1, #12]
90001784:	071a      	lsls	r2, r3, #28
90001786:	d0f4      	beq.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001788:	f023 030f 	bic.w	r3, r3, #15
9000178c:	3310      	adds	r3, #16
9000178e:	60cb      	str	r3, [r1, #12]
90001790:	e7ef      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001792:	68cb      	ldr	r3, [r1, #12]
90001794:	071a      	lsls	r2, r3, #28
90001796:	d003      	beq.n	900017a0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001798:	f023 030f 	bic.w	r3, r3, #15
9000179c:	3310      	adds	r3, #16
9000179e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
900017a0:	688a      	ldr	r2, [r1, #8]
900017a2:	0710      	lsls	r0, r2, #28
900017a4:	d003      	beq.n	900017ae <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
900017a6:	f022 020f 	bic.w	r2, r2, #15
900017aa:	3210      	adds	r2, #16
900017ac:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
900017ae:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b0:	4905      	ldr	r1, [pc, #20]	; (900017c8 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
900017b2:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b4:	fb02 f303 	mul.w	r3, r2, r3
900017b8:	600b      	str	r3, [r1, #0]
900017ba:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
900017bc:	f023 0307 	bic.w	r3, r3, #7
900017c0:	3308      	adds	r3, #8
900017c2:	60cb      	str	r3, [r1, #12]
900017c4:	e7d5      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
900017c6:	bf00      	nop
900017c8:	24005ba4 	.word	0x24005ba4

900017cc <HAL_JPEG_GetDataCallback>:
    {
900017cc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
900017ce:	4c0c      	ldr	r4, [pc, #48]	; (90001800 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d0:	4a0c      	ldr	r2, [pc, #48]	; (90001804 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
900017d2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
900017d6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
900017da:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017dc:	d302      	bcc.n	900017e4 <HAL_JPEG_GetDataCallback+0x18>
    }
900017de:	f85d 4b04 	ldr.w	r4, [sp], #4
900017e2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
900017e4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017e6:	4b08      	ldr	r3, [pc, #32]	; (90001808 <HAL_JPEG_GetDataCallback+0x3c>)
900017e8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017ea:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017ee:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017f0:	bf28      	it	cs
900017f2:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
900017f6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017fa:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017fc:	f007 bf7a 	b.w	900096f4 <HAL_JPEG_ConfigInputBuffer>
90001800:	24005bb8 	.word	0x24005bb8
90001804:	24005bc4 	.word	0x24005bc4
90001808:	24005bc0 	.word	0x24005bc0

9000180c <HAL_JPEG_DataReadyCallback>:
    {
9000180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000180e:	4c22      	ldr	r4, [pc, #136]	; (90001898 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
90001810:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001812:	4d22      	ldr	r5, [pc, #136]	; (9000189c <HAL_JPEG_DataReadyCallback+0x90>)
90001814:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001816:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
90001818:	4921      	ldr	r1, [pc, #132]	; (900018a0 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000181a:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000181c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001820:	4f20      	ldr	r7, [pc, #128]	; (900018a4 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
90001822:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001826:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90001828:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000182a:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
9000182c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
90001830:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001834:	6808      	ldr	r0, [r1, #0]
90001836:	4410      	add	r0, r2
90001838:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
9000183a:	6821      	ldr	r1, [r4, #0]
9000183c:	3101      	adds	r1, #1
9000183e:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001840:	2101      	movs	r1, #1
90001842:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001844:	6823      	ldr	r3, [r4, #0]
90001846:	428b      	cmp	r3, r1
90001848:	d901      	bls.n	9000184e <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
9000184a:	2300      	movs	r3, #0
9000184c:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000184e:	6823      	ldr	r3, [r4, #0]
90001850:	011b      	lsls	r3, r3, #4
90001852:	5ceb      	ldrb	r3, [r5, r3]
90001854:	b983      	cbnz	r3, 90001878 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001856:	6823      	ldr	r3, [r4, #0]
90001858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000185c:	4630      	mov	r0, r6
9000185e:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001862:	01d2      	lsls	r2, r2, #7
90001864:	6869      	ldr	r1, [r5, #4]
90001866:	f007 ff49 	bl	900096fc <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000186a:	4b0f      	ldr	r3, [pc, #60]	; (900018a8 <HAL_JPEG_DataReadyCallback+0x9c>)
9000186c:	681b      	ldr	r3, [r3, #0]
9000186e:	7a1a      	ldrb	r2, [r3, #8]
90001870:	b90a      	cbnz	r2, 90001876 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001872:	7a9b      	ldrb	r3, [r3, #10]
90001874:	b14b      	cbz	r3, 9000188a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001878:	2102      	movs	r1, #2
9000187a:	4630      	mov	r0, r6
9000187c:	f007 ff02 	bl	90009684 <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001880:	4b0a      	ldr	r3, [pc, #40]	; (900018ac <HAL_JPEG_DataReadyCallback+0xa0>)
90001882:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001884:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001886:	6019      	str	r1, [r3, #0]
90001888:	e7e5      	b.n	90001856 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000188a:	4b09      	ldr	r3, [pc, #36]	; (900018b0 <HAL_JPEG_DataReadyCallback+0xa4>)
9000188c:	6818      	ldr	r0, [r3, #0]
    }
9000188e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001892:	f00b bb4f 	b.w	9000cf34 <osSemaphoreRelease>
90001896:	bf00      	nop
90001898:	24005bc8 	.word	0x24005bc8
9000189c:	24000008 	.word	0x24000008
900018a0:	2400018c 	.word	0x2400018c
900018a4:	24005b90 	.word	0x24005b90
900018a8:	24005ba8 	.word	0x24005ba8
900018ac:	24005bbc 	.word	0x24005bbc
900018b0:	24005bcc 	.word	0x24005bcc

900018b4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900018b4:	b672      	cpsid	i
        while (1)
900018b6:	e7fe      	b.n	900018b6 <HAL_JPEG_ErrorCallback+0x2>

900018b8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900018b8:	4b01      	ldr	r3, [pc, #4]	; (900018c0 <HAL_JPEG_DecodeCpltCallback+0x8>)
900018ba:	2201      	movs	r2, #1
900018bc:	601a      	str	r2, [r3, #0]
    }
900018be:	4770      	bx	lr
900018c0:	24005bb4 	.word	0x24005bb4

900018c4 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900018c4:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018c6:	491c      	ldr	r1, [pc, #112]	; (90001938 <DMA2D_CopyBuffer+0x74>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018c8:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ca:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018cc:	4c1b      	ldr	r4, [pc, #108]	; (9000193c <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ce:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018d0:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d2:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018d4:	4e1a      	ldr	r6, [pc, #104]	; (90001940 <DMA2D_CopyBuffer+0x7c>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d6:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
900018da:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018de:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e0:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018e2:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e6:	68cb      	ldr	r3, [r1, #12]
900018e8:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018ec:	690e      	ldr	r6, [r1, #16]
900018ee:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f2:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018f4:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f8:	d318      	bcc.n	9000192c <DMA2D_CopyBuffer+0x68>
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900018fa:	6889      	ldr	r1, [r1, #8]
900018fc:	f1c1 0110 	rsb	r1, r1, #16
90001900:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90001904:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001906:	490f      	ldr	r1, [pc, #60]	; (90001944 <DMA2D_CopyBuffer+0x80>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001908:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
9000190c:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
9000190e:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001910:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001912:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001914:	4411      	add	r1, r2
90001916:	4a09      	ldr	r2, [pc, #36]	; (9000193c <DMA2D_CopyBuffer+0x78>)
90001918:	4461      	add	r1, ip
9000191a:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
9000191c:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000191e:	490a      	ldr	r1, [pc, #40]	; (90001948 <DMA2D_CopyBuffer+0x84>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001920:	4b0a      	ldr	r3, [pc, #40]	; (9000194c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, 0);
90001922:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001924:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90001926:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001928:	6013      	str	r3, [r2, #0]
}
9000192a:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000192c:	0519      	lsls	r1, r3, #20
9000192e:	f041 0110 	orr.w	r1, r1, #16
90001932:	6461      	str	r1, [r4, #68]	; 0x44
90001934:	e7e7      	b.n	90001906 <DMA2D_CopyBuffer+0x42>
90001936:	bf00      	nop
90001938:	24005b90 	.word	0x24005b90
9000193c:	52001000 	.word	0x52001000
90001940:	24005ba4 	.word	0x24005ba4
90001944:	24005bac 	.word	0x24005bac
90001948:	ff09000b 	.word	0xff09000b
9000194c:	00010201 	.word	0x00010201

90001950 <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
90001950:	4b0c      	ldr	r3, [pc, #48]	; (90001984 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
90001952:	2100      	movs	r1, #0
90001954:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
90001956:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
90001958:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
9000195a:	3201      	adds	r2, #1
9000195c:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000195e:	681a      	ldr	r2, [r3, #0]
90001960:	2a01      	cmp	r2, #1
90001962:	d900      	bls.n	90001966 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001964:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001966:	4b08      	ldr	r3, [pc, #32]	; (90001988 <DMA2D_ExternalJobCompleted+0x38>)
90001968:	4908      	ldr	r1, [pc, #32]	; (9000198c <DMA2D_ExternalJobCompleted+0x3c>)
9000196a:	681b      	ldr	r3, [r3, #0]
9000196c:	68c9      	ldr	r1, [r1, #12]
9000196e:	68c2      	ldr	r2, [r0, #12]
90001970:	1a5b      	subs	r3, r3, r1
90001972:	429a      	cmp	r2, r3
90001974:	d302      	bcc.n	9000197c <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001976:	4b06      	ldr	r3, [pc, #24]	; (90001990 <DMA2D_ExternalJobCompleted+0x40>)
90001978:	2201      	movs	r2, #1
9000197a:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
9000197c:	4b05      	ldr	r3, [pc, #20]	; (90001994 <DMA2D_ExternalJobCompleted+0x44>)
9000197e:	6818      	ldr	r0, [r3, #0]
90001980:	f00b bad8 	b.w	9000cf34 <osSemaphoreRelease>
90001984:	24000188 	.word	0x24000188
90001988:	24005ba4 	.word	0x24005ba4
9000198c:	24005b90 	.word	0x24005b90
90001990:	24000184 	.word	0x24000184
90001994:	24005bcc 	.word	0x24005bcc

90001998 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001998:	2101      	movs	r1, #1
9000199a:	2200      	movs	r2, #0
{
9000199c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000199e:	4608      	mov	r0, r1
900019a0:	f00b fa44 	bl	9000ce2c <osSemaphoreNew>
900019a4:	4b0b      	ldr	r3, [pc, #44]	; (900019d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900019a6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019a8:	b140      	cbz	r0, 900019bc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900019aa:	2200      	movs	r2, #0
900019ac:	2104      	movs	r1, #4
900019ae:	2001      	movs	r0, #1
900019b0:	f00b faf6 	bl	9000cfa0 <osMessageQueueNew>
900019b4:	4b08      	ldr	r3, [pc, #32]	; (900019d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900019b6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019b8:	b130      	cbz	r0, 900019c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900019ba:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019bc:	4b07      	ldr	r3, [pc, #28]	; (900019dc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900019be:	2128      	movs	r1, #40	; 0x28
900019c0:	4a07      	ldr	r2, [pc, #28]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019c2:	4808      	ldr	r0, [pc, #32]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019c4:	f024 fb6c 	bl	900260a0 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019c8:	4b07      	ldr	r3, [pc, #28]	; (900019e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
900019ca:	212c      	movs	r1, #44	; 0x2c
900019cc:	4a04      	ldr	r2, [pc, #16]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019ce:	4805      	ldr	r0, [pc, #20]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019d0:	f024 fb66 	bl	900260a0 <__assert_func>
900019d4:	24005bd4 	.word	0x24005bd4
900019d8:	24005bd0 	.word	0x24005bd0
900019dc:	9002777c 	.word	0x9002777c
900019e0:	900277c8 	.word	0x900277c8
900019e4:	900277f8 	.word	0x900277f8
900019e8:	90027840 	.word	0x90027840

900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
900019ec:	4b02      	ldr	r3, [pc, #8]	; (900019f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
900019ee:	f04f 31ff 	mov.w	r1, #4294967295
900019f2:	6818      	ldr	r0, [r3, #0]
900019f4:	f00b ba6a 	b.w	9000cecc <osSemaphoreAcquire>
900019f8:	24005bd4 	.word	0x24005bd4

900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
900019fc:	4b01      	ldr	r3, [pc, #4]	; (90001a04 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
900019fe:	6818      	ldr	r0, [r3, #0]
90001a00:	f00b ba98 	b.w	9000cf34 <osSemaphoreRelease>
90001a04:	24005bd4 	.word	0x24005bd4

90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90001a08:	4b02      	ldr	r3, [pc, #8]	; (90001a14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90001a0a:	2100      	movs	r1, #0
90001a0c:	6818      	ldr	r0, [r3, #0]
90001a0e:	f00b ba5d 	b.w	9000cecc <osSemaphoreAcquire>
90001a12:	bf00      	nop
90001a14:	24005bd4 	.word	0x24005bd4

90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90001a18:	4b01      	ldr	r3, [pc, #4]	; (90001a20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90001a1a:	6818      	ldr	r0, [r3, #0]
90001a1c:	f00b ba8a 	b.w	9000cf34 <osSemaphoreRelease>
90001a20:	24005bd4 	.word	0x24005bd4

90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90001a24:	4803      	ldr	r0, [pc, #12]	; (90001a34 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90001a26:	2300      	movs	r3, #0
90001a28:	4903      	ldr	r1, [pc, #12]	; (90001a38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90001a2a:	461a      	mov	r2, r3
90001a2c:	6800      	ldr	r0, [r0, #0]
90001a2e:	f00b baf5 	b.w	9000d01c <osMessageQueuePut>
90001a32:	bf00      	nop
90001a34:	24005bd0 	.word	0x24005bd0
90001a38:	24000028 	.word	0x24000028

90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90001a3c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a3e:	2300      	movs	r3, #0
{
90001a40:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a42:	4c07      	ldr	r4, [pc, #28]	; (90001a60 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90001a44:	461a      	mov	r2, r3
90001a46:	a901      	add	r1, sp, #4
90001a48:	6820      	ldr	r0, [r4, #0]
90001a4a:	f00b fb29 	bl	9000d0a0 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90001a4e:	f04f 33ff 	mov.w	r3, #4294967295
90001a52:	2200      	movs	r2, #0
90001a54:	a901      	add	r1, sp, #4
90001a56:	6820      	ldr	r0, [r4, #0]
90001a58:	f00b fb22 	bl	9000d0a0 <osMessageQueueGet>
}
90001a5c:	b002      	add	sp, #8
90001a5e:	bd10      	pop	{r4, pc}
90001a60:	24005bd0 	.word	0x24005bd0

90001a64 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001a64:	6803      	ldr	r3, [r0, #0]
90001a66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001a68:	4718      	bx	r3
90001a6a:	bf00      	nop

90001a6c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001a6c:	2001      	movs	r0, #1
90001a6e:	4770      	bx	lr

90001a70 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90001a70:	4905      	ldr	r1, [pc, #20]	; (90001a88 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001a72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001a76:	4b05      	ldr	r3, [pc, #20]	; (90001a8c <_ZN8STM32DMAD1Ev+0x1c>)
90001a78:	6001      	str	r1, [r0, #0]
90001a7a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001a7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001a82:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001a86:	4770      	bx	lr
90001a88:	900279e0 	.word	0x900279e0
90001a8c:	e000e100 	.word	0xe000e100

90001a90 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a90:	4b0f      	ldr	r3, [pc, #60]	; (90001ad0 <_ZN8STM32DMA10initializeEv+0x40>)
{
90001a92:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a94:	490f      	ldr	r1, [pc, #60]	; (90001ad4 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a96:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a9a:	480f      	ldr	r0, [pc, #60]	; (90001ad8 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a9c:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001aa0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001aa2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001aa6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001aaa:	f002 0210 	and.w	r2, r2, #16
90001aae:	9201      	str	r2, [sp, #4]
90001ab0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90001ab2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001ab4:	f042 0210 	orr.w	r2, r2, #16
90001ab8:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001aba:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001abc:	f022 0210 	bic.w	r2, r2, #16
90001ac0:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001ac2:	4b06      	ldr	r3, [pc, #24]	; (90001adc <_ZN8STM32DMA10initializeEv+0x4c>)
90001ac4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001ac8:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001aca:	b002      	add	sp, #8
90001acc:	4770      	bx	lr
90001ace:	bf00      	nop
90001ad0:	58024400 	.word	0x58024400
90001ad4:	240091e8 	.word	0x240091e8
90001ad8:	90001ec1 	.word	0x90001ec1
90001adc:	e000e100 	.word	0xe000e100

90001ae0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90001ae0:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001ae4:	4770      	bx	lr
90001ae6:	bf00      	nop

90001ae8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001ae8:	4909      	ldr	r1, [pc, #36]	; (90001b10 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001aea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001aee:	4b09      	ldr	r3, [pc, #36]	; (90001b14 <_ZN8STM32DMAD0Ev+0x2c>)
90001af0:	b510      	push	{r4, lr}
90001af2:	6001      	str	r1, [r0, #0]
90001af4:	4604      	mov	r4, r0
90001af6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001afa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001afe:	f3bf 8f6f 	isb	sy
}
90001b02:	f640 51a8 	movw	r1, #3496	; 0xda8
90001b06:	f024 fa9c 	bl	90026042 <_ZdlPvj>
90001b0a:	4620      	mov	r0, r4
90001b0c:	bd10      	pop	{r4, pc}
90001b0e:	bf00      	nop
90001b10:	900279e0 	.word	0x900279e0
90001b14:	e000e100 	.word	0xe000e100

90001b18 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
90001b18:	b510      	push	{r4, lr}
90001b1a:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90001b1c:	f04f 31ff 	mov.w	r1, #4294967295
90001b20:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90001b24:	f00b f93c 	bl	9000cda0 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90001b28:	6860      	ldr	r0, [r4, #4]
90001b2a:	6803      	ldr	r3, [r0, #0]
90001b2c:	681b      	ldr	r3, [r3, #0]
90001b2e:	4798      	blx	r3
90001b30:	b978      	cbnz	r0, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b32:	7a63      	ldrb	r3, [r4, #9]
90001b34:	b16b      	cbz	r3, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b36:	7a23      	ldrb	r3, [r4, #8]
90001b38:	bb0b      	cbnz	r3, 90001b7e <_ZN8STM32DMA5startEv+0x66>
        {
            started_by_external_job = false;
            execute();
90001b3a:	6822      	ldr	r2, [r4, #0]
90001b3c:	4620      	mov	r0, r4
            started_by_external_job = false;
90001b3e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
90001b42:	6a53      	ldr	r3, [r2, #36]	; 0x24
90001b44:	4798      	blx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90001b46:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b4e:	f00b b94b 	b.w	9000cde8 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b52:	490f      	ldr	r1, [pc, #60]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
90001b54:	4a0f      	ldr	r2, [pc, #60]	; (90001b94 <_ZN8STM32DMA5startEv+0x7c>)
90001b56:	680b      	ldr	r3, [r1, #0]
90001b58:	011b      	lsls	r3, r3, #4
90001b5a:	5cd3      	ldrb	r3, [r2, r3]
90001b5c:	2b01      	cmp	r3, #1
90001b5e:	d1f2      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b60:	7a20      	ldrb	r0, [r4, #8]
90001b62:	2800      	cmp	r0, #0
90001b64:	d1ef      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b66:	7aa0      	ldrb	r0, [r4, #10]
90001b68:	2800      	cmp	r0, #0
90001b6a:	d1ec      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b6c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001b6e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b72:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001b76:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b78:	f7ff fea4 	bl	900018c4 <DMA2D_CopyBuffer>
    }
90001b7c:	e7e3      	b.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b7e:	4b04      	ldr	r3, [pc, #16]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
        MUTEX_UNLOCK(mutexIsRunning);
90001b80:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b84:	681b      	ldr	r3, [r3, #0]
    }
90001b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b8a:	f00b b92d 	b.w	9000cde8 <osMutexRelease>
90001b8e:	bf00      	nop
90001b90:	24000188 	.word	0x24000188
90001b94:	24000008 	.word	0x24000008

90001b98 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001b98:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001b9c:	b510      	push	{r4, lr}
90001b9e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001ba0:	b953      	cbnz	r3, 90001bb8 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001ba2:	6803      	ldr	r3, [r0, #0]
90001ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001ba6:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001ba8:	491c      	ldr	r1, [pc, #112]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001baa:	4a1d      	ldr	r2, [pc, #116]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001bac:	680b      	ldr	r3, [r1, #0]
90001bae:	011b      	lsls	r3, r3, #4
90001bb0:	5cd3      	ldrb	r3, [r2, r3]
90001bb2:	2b01      	cmp	r3, #1
90001bb4:	d014      	beq.n	90001be0 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001bb6:	bd10      	pop	{r4, pc}
        if (isRunning)
90001bb8:	7a03      	ldrb	r3, [r0, #8]
90001bba:	bb2b      	cbnz	r3, 90001c08 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001bbc:	6860      	ldr	r0, [r4, #4]
90001bbe:	6803      	ldr	r3, [r0, #0]
90001bc0:	681b      	ldr	r3, [r3, #0]
90001bc2:	4798      	blx	r3
90001bc4:	4603      	mov	r3, r0
90001bc6:	2800      	cmp	r0, #0
90001bc8:	d1f5      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bca:	7a62      	ldrb	r2, [r4, #9]
90001bcc:	2a00      	cmp	r2, #0
90001bce:	d0f2      	beq.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001bd0:	6822      	ldr	r2, [r4, #0]
90001bd2:	4620      	mov	r0, r4
                started_by_external_job = false;
90001bd4:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001bd8:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001bde:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001be0:	4810      	ldr	r0, [pc, #64]	; (90001c24 <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001be2:	6800      	ldr	r0, [r0, #0]
90001be4:	2800      	cmp	r0, #0
90001be6:	d1e6      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001be8:	7a20      	ldrb	r0, [r4, #8]
90001bea:	2800      	cmp	r0, #0
90001bec:	d1e3      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bee:	7aa0      	ldrb	r0, [r4, #10]
90001bf0:	2800      	cmp	r0, #0
90001bf2:	d1e0      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bf4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001bf6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001bfa:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bfc:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c04:	f7ff be5e 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c08:	4904      	ldr	r1, [pc, #16]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001c0a:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c0c:	4b04      	ldr	r3, [pc, #16]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001c0e:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001c10:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c12:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001c16:	f7ff fe9b 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001c1a:	e7cf      	b.n	90001bbc <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001c1c:	24000188 	.word	0x24000188
90001c20:	24000008 	.word	0x24000008
90001c24:	24000184 	.word	0x24000184

90001c28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001c28:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001c2a:	7f8b      	ldrb	r3, [r1, #30]
90001c2c:	2b0a      	cmp	r3, #10
90001c2e:	d83e      	bhi.n	90001cae <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001c30:	e8df f003 	tbb	[pc, r3]
90001c34:	3d2a063b 	.word	0x3d2a063b
90001c38:	063d3d3d 	.word	0x063d3d3d
90001c3c:	0606      	.short	0x0606
90001c3e:	06          	.byte	0x06
90001c3f:	00          	.byte	0x00
90001c40:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c42:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001c46:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c48:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c4a:	4b1c      	ldr	r3, [pc, #112]	; (90001cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c4c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c50:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c54:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c56:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c58:	6908      	ldr	r0, [r1, #16]
90001c5a:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c5c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001c5e:	680d      	ldr	r5, [r1, #0]
90001c60:	2d08      	cmp	r5, #8
90001c62:	d013      	beq.n	90001c8c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001c64:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001c66:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c68:	4c15      	ldr	r4, [pc, #84]	; (90001cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001c6a:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001c6c:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001c6e:	0a0a      	lsrs	r2, r1, #8
90001c70:	0948      	lsrs	r0, r1, #5
90001c72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001c76:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001c7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001c7e:	4302      	orrs	r2, r0
90001c80:	430a      	orrs	r2, r1
90001c82:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c84:	601c      	str	r4, [r3, #0]
    }
}
90001c86:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001c88:	2400      	movs	r4, #0
90001c8a:	e7da      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c90:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c92:	4a0c      	ldr	r2, [pc, #48]	; (90001cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001c94:	7f0c      	ldrb	r4, [r1, #28]
90001c96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001c9a:	4c0b      	ldr	r4, [pc, #44]	; (90001cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c9c:	61da      	str	r2, [r3, #28]
90001c9e:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001ca0:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca2:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca4:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ca6:	601c      	str	r4, [r3, #0]
}
90001ca8:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001caa:	2402      	movs	r4, #2
90001cac:	e7c9      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001cae:	4b07      	ldr	r3, [pc, #28]	; (90001ccc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001cb0:	2187      	movs	r1, #135	; 0x87
90001cb2:	4a07      	ldr	r2, [pc, #28]	; (90001cd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001cb4:	4807      	ldr	r0, [pc, #28]	; (90001cd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001cb6:	f024 f9f3 	bl	900260a0 <__assert_func>
90001cba:	bf00      	nop
90001cbc:	52001000 	.word	0x52001000
90001cc0:	00030201 	.word	0x00030201
90001cc4:	00010009 	.word	0x00010009
90001cc8:	00020201 	.word	0x00020201
90001ccc:	90027884 	.word	0x90027884
90001cd0:	900278a0 	.word	0x900278a0
90001cd4:	900278ec 	.word	0x900278ec

90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001cda:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001cde:	f1be 0f0b 	cmp.w	lr, #11
90001ce2:	f200 80c1 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ce6:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001cea:	0063      	.short	0x0063
90001cec:	004c0065 	.word	0x004c0065
90001cf0:	00bf00bf 	.word	0x00bf00bf
90001cf4:	00bf00bf 	.word	0x00bf00bf
90001cf8:	000c000c 	.word	0x000c000c
90001cfc:	000c000c 	.word	0x000c000c
90001d00:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001d02:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001d04:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001d08:	f1bc 0f0b 	cmp.w	ip, #11
90001d0c:	f200 80ac 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001d10:	e8df f00c 	tbb	[pc, ip]
90001d14:	aa0e4b52 	.word	0xaa0e4b52
90001d18:	06aaaaaa 	.word	0x06aaaaaa
90001d1c:	06060606 	.word	0x06060606
    switch (format)
90001d20:	f1ac 0307 	sub.w	r3, ip, #7
90001d24:	2b03      	cmp	r3, #3
90001d26:	f200 80a5 	bhi.w	90001e74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001d2a:	2605      	movs	r6, #5
90001d2c:	2701      	movs	r7, #1
90001d2e:	e001      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d30:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001d32:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d34:	8a8b      	ldrh	r3, [r1, #20]
90001d36:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d38:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d3a:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d3c:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d3e:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d40:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d44:	4b52      	ldr	r3, [pc, #328]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001d46:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d48:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d4a:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d4c:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001d4e:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d50:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d52:	6908      	ldr	r0, [r1, #16]
90001d54:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d56:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001d58:	680a      	ldr	r2, [r1, #0]
90001d5a:	2a80      	cmp	r2, #128	; 0x80
90001d5c:	d03b      	beq.n	90001dd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001d5e:	d812      	bhi.n	90001d86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001d60:	2a20      	cmp	r2, #32
90001d62:	d02c      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d64:	2a40      	cmp	r2, #64	; 0x40
90001d66:	d02a      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d68:	2a04      	cmp	r2, #4
90001d6a:	d169      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d6c:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d6e:	4949      	ldr	r1, [pc, #292]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d70:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001d74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001d78:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001d7a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d7c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d7e:	6019      	str	r1, [r3, #0]
}
90001d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d82:	2500      	movs	r5, #0
90001d84:	e7be      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001d86:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001d8a:	d067      	beq.n	90001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001d8c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001d90:	d156      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d92:	7f0c      	ldrb	r4, [r1, #28]
90001d94:	4a40      	ldr	r2, [pc, #256]	; (90001e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001d96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001d9a:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d9c:	4a3d      	ldr	r2, [pc, #244]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001d9e:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001da0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001da2:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001da4:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001da6:	601a      	str	r2, [r3, #0]
}
90001da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001daa:	2601      	movs	r6, #1
90001dac:	4637      	mov	r7, r6
90001dae:	e7c1      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001db0:	2502      	movs	r5, #2
90001db2:	e7a7      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001db4:	2501      	movs	r5, #1
90001db6:	e7a5      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001db8:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001dba:	4637      	mov	r7, r6
90001dbc:	e7ba      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001dbe:	7f0b      	ldrb	r3, [r1, #28]
90001dc0:	4a33      	ldr	r2, [pc, #204]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001dc2:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001dc6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001dca:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dcc:	4b31      	ldr	r3, [pc, #196]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dce:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dd0:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dd2:	6013      	str	r3, [r2, #0]
}
90001dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001dd6:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001dd8:	1d14      	adds	r4, r2, #4
90001dda:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001ddc:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001dde:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001de0:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001de4:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001de8:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dea:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dec:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001dee:	b9b1      	cbnz	r1, 90001e1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df0:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001df2:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df4:	69d8      	ldr	r0, [r3, #28]
90001df6:	4a29      	ldr	r2, [pc, #164]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001df8:	3901      	subs	r1, #1
90001dfa:	4002      	ands	r2, r0
90001dfc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e00:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001e02:	4a23      	ldr	r2, [pc, #140]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e04:	69d3      	ldr	r3, [r2, #28]
90001e06:	f043 0320 	orr.w	r3, r3, #32
90001e0a:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001e0c:	69d3      	ldr	r3, [r2, #28]
90001e0e:	069b      	lsls	r3, r3, #26
90001e10:	d4fc      	bmi.n	90001e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001e12:	2310      	movs	r3, #16
90001e14:	6093      	str	r3, [r2, #8]
            if (blend)
90001e16:	b324      	cbz	r4, 90001e62 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001e18:	4b1e      	ldr	r3, [pc, #120]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001e1a:	6013      	str	r3, [r2, #0]
}
90001e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001e1e:	2901      	cmp	r1, #1
90001e20:	d12e      	bne.n	90001e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e22:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001e24:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e26:	69d8      	ldr	r0, [r3, #28]
90001e28:	4a1c      	ldr	r2, [pc, #112]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001e2a:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001e2e:	bf18      	it	ne
90001e30:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e32:	4002      	ands	r2, r0
90001e34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e38:	f042 0210 	orr.w	r2, r2, #16
90001e3c:	61da      	str	r2, [r3, #28]
                break;
90001e3e:	e7e0      	b.n	90001e02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e40:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001e42:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e44:	4b12      	ldr	r3, [pc, #72]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e4a:	bf14      	ite	ne
90001e4c:	4a14      	ldrne	r2, [pc, #80]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e4e:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e52:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001e56:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e58:	601a      	str	r2, [r3, #0]
}
90001e5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e5c:	7f0c      	ldrb	r4, [r1, #28]
90001e5e:	4a11      	ldr	r2, [pc, #68]	; (90001ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001e60:	e799      	b.n	90001d96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e62:	4b0f      	ldr	r3, [pc, #60]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001e64:	6013      	str	r3, [r2, #0]
}
90001e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001e68:	4b0f      	ldr	r3, [pc, #60]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e6a:	2166      	movs	r1, #102	; 0x66
90001e6c:	4a0f      	ldr	r2, [pc, #60]	; (90001eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001e6e:	4810      	ldr	r0, [pc, #64]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e70:	f024 f916 	bl	900260a0 <__assert_func>
        assert(0 && "Unsupported Format!");
90001e74:	4b0c      	ldr	r3, [pc, #48]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e76:	2187      	movs	r1, #135	; 0x87
90001e78:	4a0e      	ldr	r2, [pc, #56]	; (90001eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001e7a:	480d      	ldr	r0, [pc, #52]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e7c:	f024 f910 	bl	900260a0 <__assert_func>
                assert(0 && "Unsupported format");
90001e80:	4b0d      	ldr	r3, [pc, #52]	; (90001eb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001e82:	f240 1111 	movw	r1, #273	; 0x111
90001e86:	4a0d      	ldr	r2, [pc, #52]	; (90001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001e88:	4809      	ldr	r0, [pc, #36]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e8a:	f024 f909 	bl	900260a0 <__assert_func>
90001e8e:	bf00      	nop
90001e90:	52001000 	.word	0x52001000
90001e94:	00020201 	.word	0x00020201
90001e98:	00020009 	.word	0x00020009
90001e9c:	ffff00ef 	.word	0xffff00ef
90001ea0:	00010201 	.word	0x00010201
90001ea4:	0002000a 	.word	0x0002000a
90001ea8:	90027884 	.word	0x90027884
90001eac:	90027930 	.word	0x90027930
90001eb0:	900278ec 	.word	0x900278ec
90001eb4:	900278a0 	.word	0x900278a0
90001eb8:	9002797c 	.word	0x9002797c
90001ebc:	90027998 	.word	0x90027998

90001ec0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001ec0:	4b25      	ldr	r3, [pc, #148]	; (90001f58 <DMA2D_XferCpltCallback+0x98>)
90001ec2:	4926      	ldr	r1, [pc, #152]	; (90001f5c <DMA2D_XferCpltCallback+0x9c>)
90001ec4:	681b      	ldr	r3, [r3, #0]
    {
90001ec6:	b510      	push	{r4, lr}
90001ec8:	685c      	ldr	r4, [r3, #4]
90001eca:	6823      	ldr	r3, [r4, #0]
90001ecc:	695a      	ldr	r2, [r3, #20]
90001ece:	428a      	cmp	r2, r1
90001ed0:	d120      	bne.n	90001f14 <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001ed2:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001ed6:	b192      	cbz	r2, 90001efe <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001ed8:	7a23      	ldrb	r3, [r4, #8]
90001eda:	2b00      	cmp	r3, #0
90001edc:	d132      	bne.n	90001f44 <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001ede:	6860      	ldr	r0, [r4, #4]
90001ee0:	6803      	ldr	r3, [r0, #0]
90001ee2:	681b      	ldr	r3, [r3, #0]
90001ee4:	4798      	blx	r3
90001ee6:	4603      	mov	r3, r0
90001ee8:	b998      	cbnz	r0, 90001f12 <DMA2D_XferCpltCallback+0x52>
90001eea:	7a62      	ldrb	r2, [r4, #9]
90001eec:	b18a      	cbz	r2, 90001f12 <DMA2D_XferCpltCallback+0x52>
                execute();
90001eee:	6822      	ldr	r2, [r4, #0]
90001ef0:	4620      	mov	r0, r4
                started_by_external_job = false;
90001ef2:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001ef6:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001efc:	4718      	bx	r3
            executeCompleted();
90001efe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001f00:	4620      	mov	r0, r4
90001f02:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001f04:	4916      	ldr	r1, [pc, #88]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
90001f06:	4a17      	ldr	r2, [pc, #92]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f08:	680b      	ldr	r3, [r1, #0]
90001f0a:	011b      	lsls	r3, r3, #4
90001f0c:	5cd3      	ldrb	r3, [r2, r3]
90001f0e:	2b01      	cmp	r3, #1
90001f10:	d004      	beq.n	90001f1c <DMA2D_XferCpltCallback+0x5c>
90001f12:	bd10      	pop	{r4, pc}
90001f14:	4620      	mov	r0, r4
90001f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f1a:	4710      	bx	r2
90001f1c:	4812      	ldr	r0, [pc, #72]	; (90001f68 <DMA2D_XferCpltCallback+0xa8>)
90001f1e:	6800      	ldr	r0, [r0, #0]
90001f20:	2800      	cmp	r0, #0
90001f22:	d1f6      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f24:	7a20      	ldrb	r0, [r4, #8]
90001f26:	2800      	cmp	r0, #0
90001f28:	d1f3      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f2a:	7aa0      	ldrb	r0, [r4, #10]
90001f2c:	2800      	cmp	r0, #0
90001f2e:	d1f0      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f30:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001f32:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001f36:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f38:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f40:	f7ff bcc0 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f44:	4906      	ldr	r1, [pc, #24]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001f46:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f48:	4b06      	ldr	r3, [pc, #24]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f4a:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001f4c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f4e:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001f52:	f7ff fcfd 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001f56:	e7c2      	b.n	90001ede <DMA2D_XferCpltCallback+0x1e>
90001f58:	2402356c 	.word	0x2402356c
90001f5c:	90001b99 	.word	0x90001b99
90001f60:	24000188 	.word	0x24000188
90001f64:	24000008 	.word	0x24000008
90001f68:	24000184 	.word	0x24000184

90001f6c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001f6c:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f6e:	4b10      	ldr	r3, [pc, #64]	; (90001fb0 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001f70:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f72:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001f74:	2500      	movs	r5, #0
90001f76:	300c      	adds	r0, #12
90001f78:	2260      	movs	r2, #96	; 0x60
90001f7a:	7235      	strb	r5, [r6, #8]
90001f7c:	7275      	strb	r5, [r6, #9]
90001f7e:	6070      	str	r0, [r6, #4]
90001f80:	f844 3b20 	str.w	r3, [r4], #32
90001f84:	4621      	mov	r1, r4
90001f86:	f00f f80b 	bl	90010fa0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001f8a:	4621      	mov	r1, r4
90001f8c:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001f90:	60cd      	str	r5, [r1, #12]
90001f92:	3124      	adds	r1, #36	; 0x24
90001f94:	428b      	cmp	r3, r1
90001f96:	d1fb      	bne.n	90001f90 <_ZN8STM32DMAC1Ev+0x24>
90001f98:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001f9c:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f9e:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001fa2:	f00a febd 	bl	9000cd20 <osMutexNew>
90001fa6:	4603      	mov	r3, r0
}
90001fa8:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001faa:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001fae:	bd70      	pop	{r4, r5, r6, pc}
90001fb0:	900279e0 	.word	0x900279e0

90001fb4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fb4:	4a03      	ldr	r2, [pc, #12]	; (90001fc4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001fb6:	6813      	ldr	r3, [r2, #0]
90001fb8:	07db      	lsls	r3, r3, #31
90001fba:	d4fc      	bmi.n	90001fb6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fbc:	2323      	movs	r3, #35	; 0x23
90001fbe:	6093      	str	r3, [r2, #8]
}
90001fc0:	4770      	bx	lr
90001fc2:	bf00      	nop
90001fc4:	52001000 	.word	0x52001000

90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001fc8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fca:	4c11      	ldr	r4, [pc, #68]	; (90002010 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001fcc:	6825      	ldr	r5, [r4, #0]
90001fce:	07ed      	lsls	r5, r5, #31
90001fd0:	d4fc      	bmi.n	90001fcc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fd4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001fd6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fda:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001fde:	f04f 0502 	mov.w	r5, #2
90001fe2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fe4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001fe6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001fe8:	d00b      	beq.n	90002002 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fea:	490a      	ldr	r1, [pc, #40]	; (90002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001fec:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fee:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ff2:	4909      	ldr	r1, [pc, #36]	; (90002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001ff4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001ff6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001ff8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001ffa:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ffc:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001ffe:	bc30      	pop	{r4, r5}
90002000:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002002:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002004:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002006:	4b05      	ldr	r3, [pc, #20]	; (9000201c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002008:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000200a:	6023      	str	r3, [r4, #0]
}
9000200c:	bc30      	pop	{r4, r5}
9000200e:	4770      	bx	lr
90002010:	52001000 	.word	0x52001000
90002014:	00010009 	.word	0x00010009
90002018:	00020001 	.word	0x00020001
9000201c:	00030001 	.word	0x00030001

90002020 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002020:	2001      	movs	r0, #1
90002022:	4770      	bx	lr

90002024 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002024:	2040      	movs	r0, #64	; 0x40
90002026:	4770      	bx	lr

90002028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002028:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000202c:	3008      	adds	r0, #8
9000202e:	4770      	bx	lr

90002030 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002030:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002034:	3008      	adds	r0, #8
90002036:	4770      	bx	lr

90002038 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002038:	2001      	movs	r0, #1
9000203a:	4770      	bx	lr

9000203c <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000203c:	f242 4098 	movw	r0, #9368	; 0x2498
90002040:	4770      	bx	lr
90002042:	bf00      	nop

90002044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002044:	f242 4398 	movw	r3, #9368	; 0x2498
90002048:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000204c:	3008      	adds	r0, #8
9000204e:	4770      	bx	lr

90002050 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002050:	f242 4398 	movw	r3, #9368	; 0x2498
90002054:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002058:	3008      	adds	r0, #8
9000205a:	4770      	bx	lr

9000205c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
9000205c:	2001      	movs	r0, #1
9000205e:	4770      	bx	lr

90002060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002060:	201c      	movs	r0, #28
90002062:	4770      	bx	lr

90002064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002064:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002068:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
9000206c:	3008      	adds	r0, #8
9000206e:	4770      	bx	lr

90002070 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002070:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002074:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002078:	3008      	adds	r0, #8
9000207a:	4770      	bx	lr

9000207c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_game_selectScreenNoTransition();
9000207c:	4608      	mov	r0, r1
9000207e:	f002 b901 	b.w	90004284 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
90002082:	bf00      	nop

90002084 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002084:	4b03      	ldr	r3, [pc, #12]	; (90002094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002086:	b510      	push	{r4, lr}
90002088:	4604      	mov	r4, r0
9000208a:	6003      	str	r3, [r0, #0]
9000208c:	f00d fdd5 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002090:	4620      	mov	r0, r4
90002092:	bd10      	pop	{r4, pc}
90002094:	90027a98 	.word	0x90027a98

90002098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002098:	4b05      	ldr	r3, [pc, #20]	; (900020b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
9000209a:	b510      	push	{r4, lr}
9000209c:	4604      	mov	r4, r0
9000209e:	6003      	str	r3, [r0, #0]
900020a0:	f00d fdcb 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020a4:	2148      	movs	r1, #72	; 0x48
900020a6:	4620      	mov	r0, r4
900020a8:	f023 ffcb 	bl	90026042 <_ZdlPvj>
900020ac:	4620      	mov	r0, r4
900020ae:	bd10      	pop	{r4, pc}
900020b0:	90027a98 	.word	0x90027a98

900020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020b4:	4b03      	ldr	r3, [pc, #12]	; (900020c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020b6:	b510      	push	{r4, lr}
900020b8:	4604      	mov	r4, r0
900020ba:	6003      	str	r3, [r0, #0]
900020bc:	f00d fdbd 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020c0:	4620      	mov	r0, r4
900020c2:	bd10      	pop	{r4, pc}
900020c4:	90027a64 	.word	0x90027a64

900020c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020c8:	4b06      	ldr	r3, [pc, #24]	; (900020e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900020ca:	b510      	push	{r4, lr}
900020cc:	4604      	mov	r4, r0
900020ce:	6003      	str	r3, [r0, #0]
900020d0:	f00d fdb3 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020d4:	f242 41a0 	movw	r1, #9376	; 0x24a0
900020d8:	4620      	mov	r0, r4
900020da:	f023 ffb2 	bl	90026042 <_ZdlPvj>
900020de:	4620      	mov	r0, r4
900020e0:	bd10      	pop	{r4, pc}
900020e2:	bf00      	nop
900020e4:	90027a64 	.word	0x90027a64

900020e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020e8:	4b03      	ldr	r3, [pc, #12]	; (900020f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020ea:	b510      	push	{r4, lr}
900020ec:	4604      	mov	r4, r0
900020ee:	6003      	str	r3, [r0, #0]
900020f0:	f00d fda3 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900020f4:	4620      	mov	r0, r4
900020f6:	bd10      	pop	{r4, pc}
900020f8:	90027a30 	.word	0x90027a30

900020fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020fc:	4b05      	ldr	r3, [pc, #20]	; (90002114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900020fe:	b510      	push	{r4, lr}
90002100:	4604      	mov	r4, r0
90002102:	6003      	str	r3, [r0, #0]
90002104:	f00d fd99 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002108:	2124      	movs	r1, #36	; 0x24
9000210a:	4620      	mov	r0, r4
9000210c:	f023 ff99 	bl	90026042 <_ZdlPvj>
90002110:	4620      	mov	r0, r4
90002112:	bd10      	pop	{r4, pc}
90002114:	90027a30 	.word	0x90027a30

90002118 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002118:	b510      	push	{r4, lr}
9000211a:	4604      	mov	r4, r0
9000211c:	490c      	ldr	r1, [pc, #48]	; (90002150 <_ZN12FrontendHeapD1Ev+0x38>)
9000211e:	4a0d      	ldr	r2, [pc, #52]	; (90002154 <_ZN12FrontendHeapD1Ev+0x3c>)
90002120:	f242 40d8 	movw	r0, #9432	; 0x24d8
90002124:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002128:	6021      	str	r1, [r4, #0]
9000212a:	4420      	add	r0, r4
9000212c:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002130:	f00d fd83 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002134:	4620      	mov	r0, r4
90002136:	4b08      	ldr	r3, [pc, #32]	; (90002158 <_ZN12FrontendHeapD1Ev+0x40>)
90002138:	f840 3f38 	str.w	r3, [r0, #56]!
9000213c:	f00d fd7d 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002140:	4620      	mov	r0, r4
90002142:	4b06      	ldr	r3, [pc, #24]	; (9000215c <_ZN12FrontendHeapD1Ev+0x44>)
90002144:	f840 3f14 	str.w	r3, [r0, #20]!
90002148:	f00d fd77 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
9000214c:	4620      	mov	r0, r4
9000214e:	bd10      	pop	{r4, pc}
90002150:	90027acc 	.word	0x90027acc
90002154:	90027a98 	.word	0x90027a98
90002158:	90027a64 	.word	0x90027a64
9000215c:	90027a30 	.word	0x90027a30

90002160 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002160:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002162:	4c0c      	ldr	r4, [pc, #48]	; (90002194 <__tcf_0+0x34>)
90002164:	4a0c      	ldr	r2, [pc, #48]	; (90002198 <__tcf_0+0x38>)
90002166:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000216a:	490c      	ldr	r1, [pc, #48]	; (9000219c <__tcf_0+0x3c>)
9000216c:	480c      	ldr	r0, [pc, #48]	; (900021a0 <__tcf_0+0x40>)
9000216e:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002172:	6021      	str	r1, [r4, #0]
90002174:	f00d fd61 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002178:	4620      	mov	r0, r4
9000217a:	4b0a      	ldr	r3, [pc, #40]	; (900021a4 <__tcf_0+0x44>)
9000217c:	f840 3f38 	str.w	r3, [r0, #56]!
90002180:	f00d fd5b 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002184:	4620      	mov	r0, r4
90002186:	4b08      	ldr	r3, [pc, #32]	; (900021a8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000218c:	f840 3f14 	str.w	r3, [r0, #20]!
90002190:	f00d bd53 	b.w	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
90002194:	24005bdc 	.word	0x24005bdc
90002198:	90027a98 	.word	0x90027a98
9000219c:	90027acc 	.word	0x90027acc
900021a0:	240080b4 	.word	0x240080b4
900021a4:	90027a64 	.word	0x90027a64
900021a8:	90027a30 	.word	0x90027a30

900021ac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900021ac:	b510      	push	{r4, lr}
900021ae:	4604      	mov	r4, r0
900021b0:	4a0f      	ldr	r2, [pc, #60]	; (900021f0 <_ZN12FrontendHeapD0Ev+0x44>)
900021b2:	4910      	ldr	r1, [pc, #64]	; (900021f4 <_ZN12FrontendHeapD0Ev+0x48>)
900021b4:	f242 40d8 	movw	r0, #9432	; 0x24d8
900021b8:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900021bc:	6021      	str	r1, [r4, #0]
900021be:	4420      	add	r0, r4
900021c0:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
900021c4:	f00d fd39 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021c8:	4620      	mov	r0, r4
900021ca:	4b0b      	ldr	r3, [pc, #44]	; (900021f8 <_ZN12FrontendHeapD0Ev+0x4c>)
900021cc:	f840 3f38 	str.w	r3, [r0, #56]!
900021d0:	f00d fd33 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021d4:	4b09      	ldr	r3, [pc, #36]	; (900021fc <_ZN12FrontendHeapD0Ev+0x50>)
900021d6:	4620      	mov	r0, r4
900021d8:	f840 3f14 	str.w	r3, [r0, #20]!
900021dc:	f00d fd2d 	bl	9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>
900021e0:	4620      	mov	r0, r4
900021e2:	f44f 511a 	mov.w	r1, #9856	; 0x2680
900021e6:	f023 ff2c 	bl	90026042 <_ZdlPvj>
900021ea:	4620      	mov	r0, r4
900021ec:	bd10      	pop	{r4, pc}
900021ee:	bf00      	nop
900021f0:	90027a98 	.word	0x90027a98
900021f4:	90027acc 	.word	0x90027acc
900021f8:	90027a64 	.word	0x90027a64
900021fc:	90027a30 	.word	0x90027a30

90002200 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002204:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002206:	2400      	movs	r4, #0
90002208:	f001 facc 	bl	900037a4 <_ZN14BitmapDatabase11getInstanceEv>
9000220c:	4605      	mov	r5, r0
9000220e:	f001 facd 	bl	900037ac <_ZN14BitmapDatabase15getInstanceSizeEv>
90002212:	4623      	mov	r3, r4
90002214:	4601      	mov	r1, r0
90002216:	4622      	mov	r2, r4
90002218:	4628      	mov	r0, r5
9000221a:	9400      	str	r4, [sp, #0]
9000221c:	f015 fef0 	bl	90018000 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002220:	4b29      	ldr	r3, [pc, #164]	; (900022c8 <touchgfx_init+0xc8>)
90002222:	4a2a      	ldr	r2, [pc, #168]	; (900022cc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002224:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002226:	4c2a      	ldr	r4, [pc, #168]	; (900022d0 <touchgfx_init+0xd0>)
90002228:	601a      	str	r2, [r3, #0]
9000222a:	f002 f9fb 	bl	90004624 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
9000222e:	4829      	ldr	r0, [pc, #164]	; (900022d4 <touchgfx_init+0xd4>)
90002230:	f015 fe4e 	bl	90017ed0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002234:	6823      	ldr	r3, [r4, #0]
90002236:	f3bf 8f5b 	dmb	ish
9000223a:	07db      	lsls	r3, r3, #31
9000223c:	d505      	bpl.n	9000224a <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
9000223e:	4826      	ldr	r0, [pc, #152]	; (900022d8 <touchgfx_init+0xd8>)
}
90002240:	b002      	add	sp, #8
90002242:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002246:	f7fe bb43 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000224a:	4620      	mov	r0, r4
9000224c:	f023 fefb 	bl	90026046 <__cxa_guard_acquire>
90002250:	2800      	cmp	r0, #0
90002252:	d0f4      	beq.n	9000223e <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002254:	4d21      	ldr	r5, [pc, #132]	; (900022dc <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
90002256:	4f22      	ldr	r7, [pc, #136]	; (900022e0 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002258:	4b22      	ldr	r3, [pc, #136]	; (900022e4 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
9000225a:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
9000225e:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
90002262:	f105 0838 	add.w	r8, r5, #56	; 0x38
90002266:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002268:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
9000226a:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
9000226c:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
9000226e:	f8c5 8008 	str.w	r8, [r5, #8]
90002272:	f00d fce3 	bl	9000fc3c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002276:	4b1c      	ldr	r3, [pc, #112]	; (900022e8 <touchgfx_init+0xe8>)
90002278:	4640      	mov	r0, r8
9000227a:	616b      	str	r3, [r5, #20]
9000227c:	f00d fcde 	bl	9000fc3c <_ZN8touchgfx17AbstractPartitionC1Ev>
90002280:	4b1a      	ldr	r3, [pc, #104]	; (900022ec <touchgfx_init+0xec>)
90002282:	4638      	mov	r0, r7
90002284:	63ab      	str	r3, [r5, #56]	; 0x38
90002286:	f00d fcd9 	bl	9000fc3c <_ZN8touchgfx17AbstractPartitionC1Ev>
9000228a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000228e:	4a18      	ldr	r2, [pc, #96]	; (900022f0 <touchgfx_init+0xf0>)
90002290:	f503 60a4 	add.w	r0, r3, #1312	; 0x520
90002294:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002298:	f003 fac6 	bl	90005828 <_ZN5ModelC1Ev>
9000229c:	462a      	mov	r2, r5
9000229e:	f107 0148 	add.w	r1, r7, #72	; 0x48
900022a2:	4630      	mov	r0, r6
900022a4:	f003 faa8 	bl	900057f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900022a8:	4630      	mov	r0, r6
900022aa:	f001 ffeb 	bl	90004284 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
        static FrontendHeap instance;
900022ae:	4811      	ldr	r0, [pc, #68]	; (900022f4 <touchgfx_init+0xf4>)
900022b0:	f023 ff14 	bl	900260dc <atexit>
900022b4:	4620      	mov	r0, r4
900022b6:	f023 fed2 	bl	9002605e <__cxa_guard_release>
900022ba:	4807      	ldr	r0, [pc, #28]	; (900022d8 <touchgfx_init+0xd8>)
}
900022bc:	b002      	add	sp, #8
900022be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900022c2:	f7fe bb05 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900022c6:	bf00      	nop
900022c8:	240235d0 	.word	0x240235d0
900022cc:	24009090 	.word	0x24009090
900022d0:	24005bd8 	.word	0x24005bd8
900022d4:	2400002c 	.word	0x2400002c
900022d8:	24009008 	.word	0x24009008
900022dc:	24005bdc 	.word	0x24005bdc
900022e0:	240080b4 	.word	0x240080b4
900022e4:	90027acc 	.word	0x90027acc
900022e8:	90027a30 	.word	0x90027a30
900022ec:	90027a64 	.word	0x90027a64
900022f0:	90027a98 	.word	0x90027a98
900022f4:	90002161 	.word	0x90002161

900022f8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
900022f8:	4770      	bx	lr
900022fa:	bf00      	nop

900022fc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
900022fc:	4801      	ldr	r0, [pc, #4]	; (90002304 <touchgfx_taskEntry+0x8>)
900022fe:	f7fe baad 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002302:	bf00      	nop
90002304:	24009008 	.word	0x24009008

90002308 <_GLOBAL__sub_I_touchgfx_init>:
}
90002308:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000230a:	4b25      	ldr	r3, [pc, #148]	; (900023a0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000230c:	4c25      	ldr	r4, [pc, #148]	; (900023a4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000230e:	4e26      	ldr	r6, [pc, #152]	; (900023a8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
90002310:	4d26      	ldr	r5, [pc, #152]	; (900023ac <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002312:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002314:	4630      	mov	r0, r6
90002316:	f7ff fe29 	bl	90001f6c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000231a:	4628      	mov	r0, r5
9000231c:	f01a f948 	bl	9001c5b0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
90002320:	4b23      	ldr	r3, [pc, #140]	; (900023b0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
90002322:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002324:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002328:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
9000232c:	62da      	str	r2, [r3, #44]	; 0x2c
9000232e:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
90002330:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
90002332:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
90002336:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
90002338:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
9000233a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
9000233e:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002342:	4c1c      	ldr	r4, [pc, #112]	; (900023b4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002344:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
90002346:	4c1c      	ldr	r4, [pc, #112]	; (900023b8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002348:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000234a:	4c1c      	ldr	r4, [pc, #112]	; (900023bc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
9000234c:	8020      	strh	r0, [r4, #0]
9000234e:	4c1c      	ldr	r4, [pc, #112]	; (900023c0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002350:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002352:	4c1c      	ldr	r4, [pc, #112]	; (900023c4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002354:	481c      	ldr	r0, [pc, #112]	; (900023c8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002356:	8021      	strh	r1, [r4, #0]
90002358:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000235a:	4c1c      	ldr	r4, [pc, #112]	; (900023cc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000235c:	491c      	ldr	r1, [pc, #112]	; (900023d0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000235e:	481d      	ldr	r0, [pc, #116]	; (900023d4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
90002360:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002364:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002368:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000236c:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
9000236e:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002372:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002376:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000237a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000237e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002382:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002386:	7022      	strb	r2, [r4, #0]
90002388:	6019      	str	r1, [r3, #0]
9000238a:	4913      	ldr	r1, [pc, #76]	; (900023d8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000238c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002390:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002394:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002398:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000239a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000239e:	bd70      	pop	{r4, r5, r6, pc}
900023a0:	90027234 	.word	0x90027234
900023a4:	2400825c 	.word	0x2400825c
900023a8:	24008260 	.word	0x24008260
900023ac:	24009094 	.word	0x24009094
900023b0:	24009008 	.word	0x24009008
900023b4:	01000001 	.word	0x01000001
900023b8:	2402356c 	.word	0x2402356c
900023bc:	24023560 	.word	0x24023560
900023c0:	24023566 	.word	0x24023566
900023c4:	24023562 	.word	0x24023562
900023c8:	24023568 	.word	0x24023568
900023cc:	24023564 	.word	0x24023564
900023d0:	900273c4 	.word	0x900273c4
900023d4:	01010000 	.word	0x01010000
900023d8:	9002720c 	.word	0x9002720c

900023dc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
900023dc:	4801      	ldr	r0, [pc, #4]	; (900023e4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
900023de:	f7ff bb47 	b.w	90001a70 <_ZN8STM32DMAD1Ev>
900023e2:	bf00      	nop
900023e4:	24008260 	.word	0x24008260

900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
900023e8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900023ec:	b112      	cbz	r2, 900023f4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	695b      	ldr	r3, [r3, #20]
900023f2:	4718      	bx	r3
        }
    }
900023f4:	4770      	bx	lr
900023f6:	bf00      	nop

900023f8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
900023f8:	2000      	movs	r0, #0
900023fa:	4770      	bx	lr

900023fc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
900023fc:	8081      	strh	r1, [r0, #4]
    }
900023fe:	4770      	bx	lr

90002400 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002400:	80c1      	strh	r1, [r0, #6]
    }
90002402:	4770      	bx	lr

90002404 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002404:	8101      	strh	r1, [r0, #8]
    }
90002406:	4770      	bx	lr

90002408 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002408:	8141      	strh	r1, [r0, #10]
    }
9000240a:	4770      	bx	lr

9000240c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000240c:	4770      	bx	lr
9000240e:	bf00      	nop

90002410 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002410:	4770      	bx	lr
90002412:	bf00      	nop

90002414 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002414:	4770      	bx	lr
90002416:	bf00      	nop

90002418 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002418:	4770      	bx	lr
9000241a:	bf00      	nop

9000241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop

90002420 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002420:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002424:	6803      	ldr	r3, [r0, #0]
90002426:	eba2 020c 	sub.w	r2, r2, ip
9000242a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
9000242e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90002430:	eba1 010c 	sub.w	r1, r1, ip
90002434:	b212      	sxth	r2, r2
90002436:	b209      	sxth	r1, r1
90002438:	4718      	bx	r3
9000243a:	bf00      	nop

9000243c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
9000243c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000243e:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002442:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002446:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
9000244a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
9000244e:	6010      	str	r0, [r2, #0]
    }
90002450:	4770      	bx	lr
90002452:	bf00      	nop

90002454 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002454:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002458:	b11a      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
9000245a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
9000245e:	b102      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002460:	6018      	str	r0, [r3, #0]
        }
    }
90002462:	4770      	bx	lr

90002464 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002464:	2000      	movs	r0, #0
90002466:	4770      	bx	lr

90002468 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002468:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
9000246a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
9000246c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
9000246e:	809a      	strh	r2, [r3, #4]
    }
90002470:	4770      	bx	lr
90002472:	bf00      	nop

90002474 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002474:	4770      	bx	lr
90002476:	bf00      	nop

90002478 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002478:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000247c:	4770      	bx	lr
9000247e:	bf00      	nop

90002480 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002480:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002484:	4770      	bx	lr
90002486:	bf00      	nop

90002488 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002488:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000248c:	688a      	ldr	r2, [r1, #8]
9000248e:	f8c0 c000 	str.w	ip, [r0]
90002492:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002498:	2200      	movs	r2, #0
9000249a:	6002      	str	r2, [r0, #0]
9000249c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000249e:	4770      	bx	lr

900024a0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
900024a0:	2000      	movs	r0, #0
900024a2:	4770      	bx	lr

900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900024a4:	4b03      	ldr	r3, [pc, #12]	; (900024b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
900024a6:	2290      	movs	r2, #144	; 0x90
900024a8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
900024ac:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900024b0:	4770      	bx	lr
900024b2:	bf00      	nop
900024b4:	e000e100 	.word	0xe000e100

900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024b8:	4a09      	ldr	r2, [pc, #36]	; (900024e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
900024ba:	490a      	ldr	r1, [pc, #40]	; (900024e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
900024bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024be:	480a      	ldr	r0, [pc, #40]	; (900024e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
900024c4:	3b01      	subs	r3, #1
900024c6:	b29b      	uxth	r3, r3
900024c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024ca:	6911      	ldr	r1, [r2, #16]
900024cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
900024d0:	3901      	subs	r1, #1
900024d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
900024d4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
900024d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
900024d8:	f043 0301 	orr.w	r3, r3, #1
900024dc:	6353      	str	r3, [r2, #52]	; 0x34
}
900024de:	4770      	bx	lr
900024e0:	50001000 	.word	0x50001000
900024e4:	24009166 	.word	0x24009166
900024e8:	24009164 	.word	0x24009164

900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
900024ec:	4b01      	ldr	r3, [pc, #4]	; (900024f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
900024ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
900024f2:	4770      	bx	lr
900024f4:	50001000 	.word	0x50001000

900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024f8:	4b02      	ldr	r3, [pc, #8]	; (90002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
900024fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024fc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002500:	625a      	str	r2, [r3, #36]	; 0x24
}
90002502:	4770      	bx	lr
90002504:	50001000 	.word	0x50001000

90002508 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002508:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000250c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000250e:	4770      	bx	lr

90002510 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002510:	4770      	bx	lr
90002512:	bf00      	nop

90002514 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90002514:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002518:	4611      	mov	r1, r2
9000251a:	6840      	ldr	r0, [r0, #4]
9000251c:	6803      	ldr	r3, [r0, #0]
9000251e:	68db      	ldr	r3, [r3, #12]
90002520:	4718      	bx	r3
90002522:	bf00      	nop

90002524 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(bool allow)
    {
        allowSkipFrames = allow;
90002524:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
    }
90002528:	4770      	bx	lr
9000252a:	bf00      	nop

9000252c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
9000252c:	b510      	push	{r4, lr}
9000252e:	4604      	mov	r4, r0
90002530:	2148      	movs	r1, #72	; 0x48
90002532:	f023 fd86 	bl	90026042 <_ZdlPvj>
90002536:	4620      	mov	r0, r4
90002538:	bd10      	pop	{r4, pc}
9000253a:	bf00      	nop

9000253c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
9000253c:	b911      	cbnz	r1, 90002544 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
9000253e:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90002542:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002544:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002546:	4a03      	ldr	r2, [pc, #12]	; (90002554 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002548:	f44f 71b8 	mov.w	r1, #368	; 0x170
9000254c:	4b02      	ldr	r3, [pc, #8]	; (90002558 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
9000254e:	4803      	ldr	r0, [pc, #12]	; (9000255c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002550:	f023 fda6 	bl	900260a0 <__assert_func>
90002554:	90027aec 	.word	0x90027aec
90002558:	90027ad8 	.word	0x90027ad8
9000255c:	90027c78 	.word	0x90027c78

90002560 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002560:	b921      	cbnz	r1, 9000256c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002562:	6840      	ldr	r0, [r0, #4]
90002564:	4611      	mov	r1, r2
90002566:	6803      	ldr	r3, [r0, #0]
90002568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000256a:	4718      	bx	r3
        assert(handle < no_streams);
9000256c:	4b03      	ldr	r3, [pc, #12]	; (9000257c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
9000256e:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002572:	4a03      	ldr	r2, [pc, #12]	; (90002580 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002574:	4803      	ldr	r0, [pc, #12]	; (90002584 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002576:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002578:	f023 fd92 	bl	900260a0 <__assert_func>
9000257c:	90027ad8 	.word	0x90027ad8
90002580:	90027cbc 	.word	0x90027cbc
90002584:	90027c78 	.word	0x90027c78

90002588 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002588:	b909      	cbnz	r1, 9000258e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000258a:	68c0      	ldr	r0, [r0, #12]
9000258c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000258e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002590:	4a02      	ldr	r2, [pc, #8]	; (9000259c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002592:	2179      	movs	r1, #121	; 0x79
90002594:	4b02      	ldr	r3, [pc, #8]	; (900025a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002596:	4803      	ldr	r0, [pc, #12]	; (900025a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002598:	f023 fd82 	bl	900260a0 <__assert_func>
9000259c:	90027e6c 	.word	0x90027e6c
900025a0:	90027ad8 	.word	0x90027ad8
900025a4:	90027c78 	.word	0x90027c78

900025a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900025a8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025aa:	460c      	mov	r4, r1
900025ac:	b949      	cbnz	r1, 900025c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
900025ae:	4611      	mov	r1, r2
900025b0:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b2:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
900025b4:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b6:	681c      	ldr	r4, [r3, #0]
900025b8:	4618      	mov	r0, r3
900025ba:	68a3      	ldr	r3, [r4, #8]
    }
900025bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
900025c0:	4718      	bx	r3
        assert(handle < no_streams);
900025c2:	4b03      	ldr	r3, [pc, #12]	; (900025d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
900025c4:	2190      	movs	r1, #144	; 0x90
900025c6:	4a03      	ldr	r2, [pc, #12]	; (900025d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
900025c8:	4803      	ldr	r0, [pc, #12]	; (900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
900025ca:	f023 fd69 	bl	900260a0 <__assert_func>
900025ce:	bf00      	nop
900025d0:	90027ad8 	.word	0x90027ad8
900025d4:	90028020 	.word	0x90028020
900025d8:	90027c78 	.word	0x90027c78

900025dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
900025dc:	b921      	cbnz	r1, 900025e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
900025de:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
900025e2:	e9c0 3206 	strd	r3, r2, [r0, #24]
900025e6:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
900025e8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900025ea:	4a03      	ldr	r2, [pc, #12]	; (900025f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
900025ec:	2182      	movs	r1, #130	; 0x82
900025ee:	4b03      	ldr	r3, [pc, #12]	; (900025fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
900025f0:	4803      	ldr	r0, [pc, #12]	; (90002600 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
900025f2:	f023 fd55 	bl	900260a0 <__assert_func>
900025f6:	bf00      	nop
900025f8:	900281fc 	.word	0x900281fc
900025fc:	90027ad8 	.word	0x90027ad8
90002600:	90027c78 	.word	0x90027c78

90002604 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002604:	f00d bdfc 	b.w	90010200 <_ZN8touchgfx3HAL10beginFrameEv>

90002608 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002608:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000260c:	b903      	cbnz	r3, 90002610 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000260e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002610:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90002612:	f04f 31ff 	mov.w	r1, #4294967295
90002616:	4604      	mov	r4, r0
90002618:	6c40      	ldr	r0, [r0, #68]	; 0x44
9000261a:	f00a fbc1 	bl	9000cda0 <osMutexAcquire>
            firstDrawThisFrame = false;
9000261e:	f44f 7380 	mov.w	r3, #256	; 0x100
90002622:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
90002626:	bd10      	pop	{r4, pc}

90002628 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90002628:	b538      	push	{r3, r4, r5, lr}
9000262a:	460c      	mov	r4, r1
9000262c:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
9000262e:	f04f 31ff 	mov.w	r1, #4294967295
90002632:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
90002634:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90002638:	f00a fbb2 	bl	9000cda0 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
9000263c:	6c68      	ldr	r0, [r5, #68]	; 0x44
9000263e:	f00a fbd3 	bl	9000cde8 <osMutexRelease>
        streams[handle].isActive = false;
90002642:	2300      	movs	r3, #0
90002644:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90002648:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
9000264c:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90002650:	b90b      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90002652:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90002654:	63ab      	str	r3, [r5, #56]	; 0x38
    }
90002656:	bd38      	pop	{r3, r4, r5, pc}

90002658 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
90002658:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
9000265a:	4c1c      	ldr	r4, [pc, #112]	; (900026cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
9000265c:	4605      	mov	r5, r0
    HAL::endFrame();
9000265e:	f00d fddb 	bl	90010218 <_ZN8touchgfx3HAL8endFrameEv>
90002662:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
90002666:	b98b      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90002668:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
9000266c:	b973      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
9000266e:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002670:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002672:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002676:	f00a fc5d 	bl	9000cf34 <osSemaphoreRelease>
        if (uiHasMutex)
9000267a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000267e:	b9f3      	cbnz	r3, 900026be <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002680:	6868      	ldr	r0, [r5, #4]
90002682:	6803      	ldr	r3, [r0, #0]
}
90002684:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002688:	691b      	ldr	r3, [r3, #16]
9000268a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000268c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002690:	69e1      	ldr	r1, [r4, #28]
90002692:	6922      	ldr	r2, [r4, #16]
90002694:	fb00 f303 	mul.w	r3, r0, r3
90002698:	fb01 f202 	mul.w	r2, r1, r2
9000269c:	4293      	cmp	r3, r2
9000269e:	d3e6      	bcc.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
900026a0:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
900026a4:	b138      	cbz	r0, 900026b6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
900026a6:	1a9b      	subs	r3, r3, r2
900026a8:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
900026ac:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
900026ae:	bf98      	it	ls
900026b0:	f102 32ff 	addls.w	r2, r2, #4294967295
900026b4:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
900026b6:	2301      	movs	r3, #1
900026b8:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
900026bc:	e7d7      	b.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
900026be:	6c60      	ldr	r0, [r4, #68]	; 0x44
900026c0:	f00a fb92 	bl	9000cde8 <osMutexRelease>
            uiHasMutex = false;
900026c4:	2300      	movs	r3, #0
900026c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
900026ca:	e7d9      	b.n	90002680 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
900026cc:	2400911c 	.word	0x2400911c

900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900026d0:	f00d bd60 	b.w	90010194 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900026d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900026d4:	f00d bec1 	b.w	9001045a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900026d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900026d8:	4814      	ldr	r0, [pc, #80]	; (9000272c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900026da:	6943      	ldr	r3, [r0, #20]
900026dc:	03d9      	lsls	r1, r3, #15
900026de:	d523      	bpl.n	90002728 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900026e0:	2300      	movs	r3, #0
{
900026e2:	b510      	push	{r4, lr}
900026e4:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900026e8:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900026ec:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026f0:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900026f4:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900026f8:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900026fc:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002700:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002704:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002706:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000270a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000270c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002710:	1c5a      	adds	r2, r3, #1
90002712:	d1f8      	bne.n	90002706 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90002714:	f1ac 0c20 	sub.w	ip, ip, #32
90002718:	f11c 0f20 	cmn.w	ip, #32
9000271c:	d1f0      	bne.n	90002700 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000271e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002722:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90002726:	bd10      	pop	{r4, pc}
90002728:	4770      	bx	lr
9000272a:	bf00      	nop
9000272c:	e000ed00 	.word	0xe000ed00

90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90002730:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002732:	2900      	cmp	r1, #0
90002734:	d133      	bne.n	9000279e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90002736:	4604      	mov	r4, r0
        switch (cmd)
90002738:	2a05      	cmp	r2, #5
9000273a:	d809      	bhi.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
9000273c:	e8df f002 	tbb	[pc, r2]
90002740:	27221e0f 	.word	0x27221e0f
90002744:	0903      	.short	0x0903
            stream.isPlaying = false;
90002746:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90002748:	2301      	movs	r3, #1
            stream.isPlaying = false;
9000274a:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
9000274e:	6203      	str	r3, [r0, #32]
    }
90002750:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
90002752:	3b00      	subs	r3, #0
90002754:	bf18      	it	ne
90002756:	2301      	movne	r3, #1
90002758:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
9000275c:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000275e:	6840      	ldr	r0, [r0, #4]
90002760:	6803      	ldr	r3, [r0, #0]
90002762:	691b      	ldr	r3, [r3, #16]
90002764:	4798      	blx	r3
90002766:	2800      	cmp	r0, #0
90002768:	d0f2      	beq.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
9000276a:	2201      	movs	r2, #1
                stream.frameCount = 0;
9000276c:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000276e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002772:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002776:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000277a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000277c:	2300      	movs	r3, #0
9000277e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002782:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002784:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002786:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002788:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000278c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000278e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002790:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002792:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002794:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002798:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000279c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000279e:	4b03      	ldr	r3, [pc, #12]	; (900027ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
900027a0:	21a2      	movs	r1, #162	; 0xa2
900027a2:	4a03      	ldr	r2, [pc, #12]	; (900027b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
900027a4:	4803      	ldr	r0, [pc, #12]	; (900027b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
900027a6:	f023 fc7b 	bl	900260a0 <__assert_func>
900027aa:	bf00      	nop
900027ac:	90027ad8 	.word	0x90027ad8
900027b0:	900283b8 	.word	0x900283b8
900027b4:	90027c78 	.word	0x90027c78

900027b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900027b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900027ba:	bb39      	cbnz	r1, 9000280c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
900027bc:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
900027c0:	4604      	mov	r4, r0
900027c2:	b923      	cbnz	r3, 900027ce <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
900027c4:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027c8:	b963      	cbnz	r3, 900027e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
900027ca:	2001      	movs	r0, #1
    }
900027cc:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
900027ce:	4912      	ldr	r1, [pc, #72]	; (90002818 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900027d0:	6943      	ldr	r3, [r0, #20]
900027d2:	6809      	ldr	r1, [r1, #0]
900027d4:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
900027d8:	440b      	add	r3, r1
900027da:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
900027dc:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027e0:	2b00      	cmp	r3, #0
900027e2:	d0f2      	beq.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
900027e4:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
900027e6:	4610      	mov	r0, r2
900027e8:	6813      	ldr	r3, [r2, #0]
900027ea:	695b      	ldr	r3, [r3, #20]
900027ec:	6311      	str	r1, [r2, #48]	; 0x30
900027ee:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
900027f0:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
900027f2:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
900027f6:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
900027fa:	2800      	cmp	r0, #0
900027fc:	d1e5      	bne.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
900027fe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002802:	2b00      	cmp	r3, #0
90002804:	d1e2      	bne.n	900027cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002806:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000280a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000280c:	4b03      	ldr	r3, [pc, #12]	; (9000281c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000280e:	21d0      	movs	r1, #208	; 0xd0
90002810:	4a03      	ldr	r2, [pc, #12]	; (90002820 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90002812:	4804      	ldr	r0, [pc, #16]	; (90002824 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90002814:	f023 fc44 	bl	900260a0 <__assert_func>
90002818:	2402356c 	.word	0x2402356c
9000281c:	90027ad8 	.word	0x90027ad8
90002820:	9002858c 	.word	0x9002858c
90002824:	90027c78 	.word	0x90027c78

90002828 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002828:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000282c:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
9000282e:	b9fb      	cbnz	r3, 90002870 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90002830:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002832:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
90002834:	60c3      	str	r3, [r0, #12]
90002836:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000283a:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
9000283e:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
90002842:	6103      	str	r3, [r0, #16]
90002844:	6143      	str	r3, [r0, #20]
90002846:	6183      	str	r3, [r0, #24]
90002848:	61c3      	str	r3, [r0, #28]
9000284a:	6203      	str	r3, [r0, #32]
9000284c:	6243      	str	r3, [r0, #36]	; 0x24
9000284e:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002852:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
90002856:	4432      	add	r2, r6
90002858:	4294      	cmp	r4, r2
9000285a:	d810      	bhi.n	9000287e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
9000285c:	4a0b      	ldr	r2, [pc, #44]	; (9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
9000285e:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90002860:	6384      	str	r4, [r0, #56]	; 0x38
    }
90002862:	4618      	mov	r0, r3
        format = bufferFormat;
90002864:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90002868:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
9000286c:	630b      	str	r3, [r1, #48]	; 0x30
9000286e:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002870:	4b07      	ldr	r3, [pc, #28]	; (90002890 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002872:	f240 11c5 	movw	r1, #453	; 0x1c5
90002876:	4a07      	ldr	r2, [pc, #28]	; (90002894 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002878:	4807      	ldr	r0, [pc, #28]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000287a:	f023 fc11 	bl	900260a0 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000287e:	4b07      	ldr	r3, [pc, #28]	; (9000289c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002880:	2152      	movs	r1, #82	; 0x52
90002882:	4a07      	ldr	r2, [pc, #28]	; (900028a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002884:	4804      	ldr	r0, [pc, #16]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002886:	f023 fc0b 	bl	900260a0 <__assert_func>
9000288a:	bf00      	nop
9000288c:	012001e0 	.word	0x012001e0
90002890:	9002872c 	.word	0x9002872c
90002894:	9002875c 	.word	0x9002875c
90002898:	90027c78 	.word	0x90027c78
9000289c:	900288e4 	.word	0x900288e4
900028a0:	90028920 	.word	0x90028920

900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028a4:	4b08      	ldr	r3, [pc, #32]	; (900028c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900028a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028b2:	f3bf 8f6f 	isb	sy
900028b6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028ba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028be:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028c2:	f3bf 8f6f 	isb	sy
}
900028c6:	4770      	bx	lr
900028c8:	e000e100 	.word	0xe000e100

900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028cc:	4b03      	ldr	r3, [pc, #12]	; (900028dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900028ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028d2:	609a      	str	r2, [r3, #8]
900028d4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028d8:	609a      	str	r2, [r3, #8]
}
900028da:	4770      	bx	lr
900028dc:	e000e100 	.word	0xe000e100

900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900028e0:	b538      	push	{r3, r4, r5, lr}
900028e2:	4604      	mov	r4, r0
    HAL::initialize();
900028e4:	f00d fca5 	bl	90010232 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900028e8:	6823      	ldr	r3, [r4, #0]
900028ea:	6e5d      	ldr	r5, [r3, #100]	; 0x64
900028ec:	f012 fa5c 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
900028f0:	4601      	mov	r1, r0
900028f2:	4620      	mov	r0, r4
900028f4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900028f6:	6823      	ldr	r3, [r4, #0]
900028f8:	4a16      	ldr	r2, [pc, #88]	; (90002954 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
900028fa:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900028fe:	4295      	cmp	r5, r2
90002900:	d11c      	bne.n	9000293c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002902:	4a15      	ldr	r2, [pc, #84]	; (90002958 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002904:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002906:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000290a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000290e:	4813      	ldr	r0, [pc, #76]	; (9000295c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002910:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
90002914:	4a12      	ldr	r2, [pc, #72]	; (90002960 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002916:	7005      	strb	r5, [r0, #0]
90002918:	4293      	cmp	r3, r2
9000291a:	d116      	bne.n	9000294a <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
9000291c:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000291e:	4a11      	ldr	r2, [pc, #68]	; (90002964 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002920:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002922:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90002924:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90002926:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
9000292a:	4b0f      	ldr	r3, [pc, #60]	; (90002968 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
9000292c:	490f      	ldr	r1, [pc, #60]	; (9000296c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
9000292e:	4a10      	ldr	r2, [pc, #64]	; (90002970 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90002930:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
90002932:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90002934:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
90002936:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
9000293a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000293c:	4a0d      	ldr	r2, [pc, #52]	; (90002974 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
9000293e:	2300      	movs	r3, #0
90002940:	4620      	mov	r0, r4
90002942:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
90002946:	47a8      	blx	r5
90002948:	e7ec      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
9000294a:	2100      	movs	r1, #0
9000294c:	4620      	mov	r0, r4
9000294e:	4798      	blx	r3
90002950:	e7e8      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90002952:	bf00      	nop
90002954:	90000805 	.word	0x90000805
90002958:	d003fc00 	.word	0xd003fc00
9000295c:	2402356a 	.word	0x2402356a
90002960:	90000675 	.word	0x90000675
90002964:	2402356b 	.word	0x2402356b
90002968:	2400911c 	.word	0x2400911c
9000296c:	24009168 	.word	0x24009168
90002970:	d00bf400 	.word	0xd00bf400
90002974:	d007f800 	.word	0xd007f800

90002978 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002978:	b510      	push	{r4, lr}
        return instance;
9000297a:	4c14      	ldr	r4, [pc, #80]	; (900029cc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000297c:	6823      	ldr	r3, [r4, #0]
9000297e:	b323      	cbz	r3, 900029ca <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002980:	4b13      	ldr	r3, [pc, #76]	; (900029d0 <HAL_LTDC_LineEventCallback+0x58>)
90002982:	4a14      	ldr	r2, [pc, #80]	; (900029d4 <HAL_LTDC_LineEventCallback+0x5c>)
90002984:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002986:	8811      	ldrh	r1, [r2, #0]
90002988:	428b      	cmp	r3, r1
9000298a:	d00a      	beq.n	900029a2 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000298c:	f007 fed4 	bl	9000a738 <HAL_LTDC_ProgramLineEvent>
90002990:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002992:	6803      	ldr	r3, [r0, #0]
90002994:	6a1b      	ldr	r3, [r3, #32]
90002996:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002998:	2000      	movs	r0, #0
        }
    }
9000299a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000299e:	f7fd be0d 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900029a2:	4b0d      	ldr	r3, [pc, #52]	; (900029d8 <HAL_LTDC_LineEventCallback+0x60>)
900029a4:	8819      	ldrh	r1, [r3, #0]
900029a6:	f007 fec7 	bl	9000a738 <HAL_LTDC_ProgramLineEvent>
        return instance;
900029aa:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900029ac:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
900029b0:	3301      	adds	r3, #1
900029b2:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
900029b6:	f7ff f835 	bl	90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900029ba:	6820      	ldr	r0, [r4, #0]
900029bc:	f00e f992 	bl	90010ce4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900029c0:	2000      	movs	r0, #0
    }
900029c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900029c6:	f7fd bdc5 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900029ca:	bd10      	pop	{r4, pc}
900029cc:	2402356c 	.word	0x2402356c
900029d0:	50001000 	.word	0x50001000
900029d4:	24009166 	.word	0x24009166
900029d8:	24009164 	.word	0x24009164

900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
900029dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900029e0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002a9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
900029e4:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
900029e6:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029e8:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
900029ec:	4604      	mov	r4, r0
900029ee:	e024      	b.n	90002a3a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
900029f0:	682b      	ldr	r3, [r5, #0]
900029f2:	4628      	mov	r0, r5
900029f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900029f6:	4798      	blx	r3
                        stream.seek_to_frame = 0;
900029f8:	2300      	movs	r3, #0
900029fa:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029fc:	6829      	ldr	r1, [r5, #0]
900029fe:	f44f 7390 	mov.w	r3, #288	; 0x120
90002a02:	9700      	str	r7, [sp, #0]
90002a04:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002a08:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002a0c:	4628      	mov	r0, r5
90002a0e:	68a1      	ldr	r1, [r4, #8]
90002a10:	47c8      	blx	r9
                    stream.frameCount++;
90002a12:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002a14:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90002a18:	3301      	adds	r3, #1
90002a1a:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90002a1c:	2800      	cmp	r0, #0
90002a1e:	d033      	beq.n	90002a88 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a20:	682b      	ldr	r3, [r5, #0]
90002a22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90002a24:	4543      	cmp	r3, r8
90002a26:	d131      	bne.n	90002a8c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
90002a28:	6968      	ldr	r0, [r5, #20]
90002a2a:	3801      	subs	r0, #1
                    stream.doDecode = false;
90002a2c:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a2e:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
90002a30:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90002a34:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a36:	f00a f9d7 	bl	9000cde8 <osMutexRelease>
            SEM_WAIT(semDecode);
90002a3a:	f04f 31ff 	mov.w	r1, #4294967295
90002a3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90002a40:	f00a fa44 	bl	9000cecc <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90002a44:	f04f 31ff 	mov.w	r1, #4294967295
90002a48:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a4a:	f00a f9a9 	bl	9000cda0 <osMutexAcquire>
                if (stream.doDecode)
90002a4e:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
90002a52:	2b00      	cmp	r3, #0
90002a54:	d0ee      	beq.n	90002a34 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90002a56:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90002a58:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90002a5a:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
90002a5e:	2900      	cmp	r1, #0
90002a60:	d1c6      	bne.n	900029f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
90002a62:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a64:	2b00      	cmp	r3, #0
90002a66:	d0c9      	beq.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a68:	682a      	ldr	r2, [r5, #0]
90002a6a:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
90002a6e:	4541      	cmp	r1, r8
90002a70:	d10f      	bne.n	90002a92 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002a72:	6968      	ldr	r0, [r5, #20]
90002a74:	18c1      	adds	r1, r0, r3
90002a76:	4628      	mov	r0, r5
90002a78:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002a7a:	6923      	ldr	r3, [r4, #16]
90002a7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002a7e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002a80:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002a82:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002a84:	6123      	str	r3, [r4, #16]
90002a86:	e7b9      	b.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002a88:	2001      	movs	r0, #1
90002a8a:	e7cf      	b.n	90002a2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a8c:	4628      	mov	r0, r5
90002a8e:	4798      	blx	r3
90002a90:	e7cb      	b.n	90002a2a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a92:	4628      	mov	r0, r5
90002a94:	4788      	blx	r1
90002a96:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a98:	e7ec      	b.n	90002a74 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002a9a:	bf00      	nop
90002a9c:	9000097d 	.word	0x9000097d

90002aa0 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002aa0:	4801      	ldr	r0, [pc, #4]	; (90002aa8 <videoTaskFunc+0x8>)
{
90002aa2:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002aa4:	f7ff ff9a 	bl	900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002aa8:	2400911c 	.word	0x2400911c

90002aac <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002aac:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002aae:	4815      	ldr	r0, [pc, #84]	; (90002b04 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ab0:	2500      	movs	r5, #0
90002ab2:	f7fe fb57 	bl	90001164 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ab6:	4c14      	ldr	r4, [pc, #80]	; (90002b08 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002ab8:	4914      	ldr	r1, [pc, #80]	; (90002b0c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002aba:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002abe:	462a      	mov	r2, r5
90002ac0:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac2:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002ac4:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ac6:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac8:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002aca:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002acc:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ace:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ad2:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ad4:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ad8:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002adc:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002ae0:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ae4:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ae8:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002aec:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002af0:	f00a f99c 	bl	9000ce2c <osSemaphoreNew>
90002af4:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002af6:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002af8:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002afa:	f00a f911 	bl	9000cd20 <osMutexNew>
90002afe:	6460      	str	r0, [r4, #68]	; 0x44
}
90002b00:	bd38      	pop	{r3, r4, r5, pc}
90002b02:	bf00      	nop
90002b04:	24009168 	.word	0x24009168
90002b08:	2400911c 	.word	0x2400911c
90002b0c:	90028aec 	.word	0x90028aec

90002b10 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002b10:	4901      	ldr	r1, [pc, #4]	; (90002b18 <vApplicationIdleHook+0x8>)
90002b12:	2000      	movs	r0, #0
90002b14:	f00c bbd4 	b.w	9000f2c0 <vTaskSetApplicationTaskTag>
90002b18:	90000959 	.word	0x90000959

90002b1c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90002b1c:	b508      	push	{r3, lr}
  for(;;)
  {
	  check_suspend_asteroids_task();
	  check_resume_asteroids_task();

	  osDelay(100);
90002b1e:	2064      	movs	r0, #100	; 0x64
90002b20:	f00a f8f0 	bl	9000cd04 <osDelay>
  for(;;)
90002b24:	e7fb      	b.n	90002b1e <StartDefaultTask+0x2>
90002b26:	bf00      	nop

90002b28 <bullet_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_bullet_timer_task_function */
void bullet_timer_task_function(void *argument)
{
90002b28:	4d0a      	ldr	r5, [pc, #40]	; (90002b54 <bullet_timer_task_function+0x2c>)
90002b2a:	4e0b      	ldr	r6, [pc, #44]	; (90002b58 <bullet_timer_task_function+0x30>)
90002b2c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN bullet_timer_task_function */
  /* Infinite loop */

  for(;;)
  {
	  if( osSemaphoreGetCount(bullet_timer_started_semaphoreHandle) == 0 ) {
90002b2e:	6828      	ldr	r0, [r5, #0]
90002b30:	f00a fa2c 	bl	9000cf8c <osSemaphoreGetCount>
90002b34:	4604      	mov	r4, r0
90002b36:	b948      	cbnz	r0, 90002b4c <bullet_timer_task_function+0x24>
		  osSemaphoreRelease(bullet_timer_started_semaphoreHandle);
90002b38:	6828      	ldr	r0, [r5, #0]
90002b3a:	f00a f9fb 	bl	9000cf34 <osSemaphoreRelease>
		  osDelay(100);
90002b3e:	2064      	movs	r0, #100	; 0x64
90002b40:	f00a f8e0 	bl	9000cd04 <osDelay>
		  osSemaphoreAcquire(bullet_timer_ended_semaphoreHandle, 0U);
90002b44:	4621      	mov	r1, r4
90002b46:	6830      	ldr	r0, [r6, #0]
90002b48:	f00a f9c0 	bl	9000cecc <osSemaphoreAcquire>
	  }
	  osDelay(100);
90002b4c:	2064      	movs	r0, #100	; 0x64
90002b4e:	f00a f8d9 	bl	9000cd04 <osDelay>
	  if( osSemaphoreGetCount(bullet_timer_started_semaphoreHandle) == 0 ) {
90002b52:	e7ec      	b.n	90002b2e <bullet_timer_task_function+0x6>
90002b54:	240091b8 	.word	0x240091b8
90002b58:	240091b4 	.word	0x240091b4

90002b5c <SystemClock_Config>:
{
90002b5c:	b570      	push	{r4, r5, r6, lr}
90002b5e:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002b60:	224c      	movs	r2, #76	; 0x4c
90002b62:	2100      	movs	r1, #0
90002b64:	a80a      	add	r0, sp, #40	; 0x28
90002b66:	f023 fd73 	bl	90026650 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002b6a:	2220      	movs	r2, #32
90002b6c:	2100      	movs	r1, #0
90002b6e:	a802      	add	r0, sp, #8
90002b70:	f023 fd6e 	bl	90026650 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90002b74:	2002      	movs	r0, #2
90002b76:	f008 f81d 	bl	9000abb4 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002b7a:	4b22      	ldr	r3, [pc, #136]	; (90002c04 <SystemClock_Config+0xa8>)
90002b7c:	2100      	movs	r1, #0
90002b7e:	4a22      	ldr	r2, [pc, #136]	; (90002c08 <SystemClock_Config+0xac>)
90002b80:	9101      	str	r1, [sp, #4]
90002b82:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90002b84:	f021 0101 	bic.w	r1, r1, #1
90002b88:	62d9      	str	r1, [r3, #44]	; 0x2c
90002b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002b8c:	f003 0301 	and.w	r3, r3, #1
90002b90:	9301      	str	r3, [sp, #4]
90002b92:	6993      	ldr	r3, [r2, #24]
90002b94:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
90002b98:	6193      	str	r3, [r2, #24]
90002b9a:	6993      	ldr	r3, [r2, #24]
90002b9c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90002ba0:	9301      	str	r3, [sp, #4]
90002ba2:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002ba4:	6993      	ldr	r3, [r2, #24]
90002ba6:	0499      	lsls	r1, r3, #18
90002ba8:	d5fc      	bpl.n	90002ba4 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002baa:	2201      	movs	r2, #1
90002bac:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002bb0:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002bb2:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002bb4:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002bb6:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002bb8:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002bba:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002bbe:	2205      	movs	r2, #5
90002bc0:	23a0      	movs	r3, #160	; 0xa0
90002bc2:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bc6:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002bc8:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bcc:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002bce:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002bd2:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002bd6:	f008 f895 	bl	9000ad04 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002bda:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002bdc:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002bde:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002be0:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002be2:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002be6:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002be8:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002bea:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002bec:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002bee:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002bf0:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002bf4:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002bf8:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002bfa:	f008 fc17 	bl	9000b42c <HAL_RCC_ClockConfig>
}
90002bfe:	b01e      	add	sp, #120	; 0x78
90002c00:	bd70      	pop	{r4, r5, r6, pc}
90002c02:	bf00      	nop
90002c04:	58000400 	.word	0x58000400
90002c08:	58024800 	.word	0x58024800

90002c0c <main>:
{
90002c0c:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c0e:	2400      	movs	r4, #0
{
90002c10:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c12:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c14:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c16:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c18:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002c1c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002c20:	f004 ffb0 	bl	90007b84 <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c24:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c28:	49d4      	ldr	r1, [pc, #848]	; (90002f7c <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c2a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c2c:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c2e:	4bd4      	ldr	r3, [pc, #848]	; (90002f80 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c30:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c34:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c38:	f004 ffc2 	bl	90007bc0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c3c:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c40:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c42:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c46:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002c48:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002c4c:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c50:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c54:	f004 ffb4 	bl	90007bc0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c58:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c5a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c5c:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c60:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002c64:	231a      	movs	r3, #26
90002c66:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002c6a:	f240 1301 	movw	r3, #257	; 0x101
90002c6e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c72:	f004 ffa5 	bl	90007bc0 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c76:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c7a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002c7c:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002c80:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c82:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002c86:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c8a:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002c8e:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002c90:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c94:	f004 ff94 	bl	90007bc0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002c98:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c9a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c9c:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002ca0:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002ca4:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002ca8:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cac:	f004 ff88 	bl	90007bc0 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002cb0:	4620      	mov	r0, r4
90002cb2:	f004 ff75 	bl	90007ba0 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002cb6:	4ab3      	ldr	r2, [pc, #716]	; (90002f84 <main+0x378>)
90002cb8:	6953      	ldr	r3, [r2, #20]
90002cba:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002cbe:	d111      	bne.n	90002ce4 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002cc0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002cc4:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002cc8:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002ccc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002cd0:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002cd4:	6953      	ldr	r3, [r2, #20]
90002cd6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002cda:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002cdc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002ce0:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002ce4:	48a7      	ldr	r0, [pc, #668]	; (90002f84 <main+0x378>)
90002ce6:	6943      	ldr	r3, [r0, #20]
90002ce8:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002cec:	d124      	bne.n	90002d38 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002cee:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002cf2:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002cf6:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002cfa:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002cfe:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d02:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002d06:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d08:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d0c:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d0e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002d12:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d14:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002d18:	1c5a      	adds	r2, r3, #1
90002d1a:	d1f8      	bne.n	90002d0e <main+0x102>
    } while(sets-- != 0U);
90002d1c:	3c20      	subs	r4, #32
90002d1e:	f114 0f20 	cmn.w	r4, #32
90002d22:	d1f1      	bne.n	90002d08 <main+0xfc>
90002d24:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002d28:	6943      	ldr	r3, [r0, #20]
90002d2a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002d2e:	6143      	str	r3, [r0, #20]
90002d30:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d34:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002d38:	f004 fe6c 	bl	90007a14 <HAL_Init>
  SystemClock_Config();
90002d3c:	f7ff ff0e 	bl	90002b5c <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002d40:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d42:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d44:	4d90      	ldr	r5, [pc, #576]	; (90002f88 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d46:	21c0      	movs	r1, #192	; 0xc0
90002d48:	4890      	ldr	r0, [pc, #576]	; (90002f8c <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d4a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d4c:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d4e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d50:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d54:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002d56:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002d5a:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d5e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002d62:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d66:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d6a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002d6e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002d72:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d76:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002d7a:	9301      	str	r3, [sp, #4]
90002d7c:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002d7e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d82:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002d86:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002d8a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d8e:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002d92:	9302      	str	r3, [sp, #8]
90002d94:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002d96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d9a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002d9e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002da2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002da6:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002daa:	9303      	str	r3, [sp, #12]
90002dac:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002dae:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002db2:	f043 0310 	orr.w	r3, r3, #16
90002db6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dbe:	f003 0310 	and.w	r3, r3, #16
90002dc2:	9304      	str	r3, [sp, #16]
90002dc4:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002dc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dca:	f043 0302 	orr.w	r3, r3, #2
90002dce:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dd6:	f003 0302 	and.w	r3, r3, #2
90002dda:	9305      	str	r3, [sp, #20]
90002ddc:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002dde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002de2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002de6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dee:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002df2:	9306      	str	r3, [sp, #24]
90002df4:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002df6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dfa:	f043 0308 	orr.w	r3, r3, #8
90002dfe:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e06:	f003 0308 	and.w	r3, r3, #8
90002e0a:	9307      	str	r3, [sp, #28]
90002e0c:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002e0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e12:	f043 0320 	orr.w	r3, r3, #32
90002e16:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e1e:	f003 0320 	and.w	r3, r3, #32
90002e22:	9308      	str	r3, [sp, #32]
90002e24:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002e26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e2a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002e2e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e36:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002e3a:	9309      	str	r3, [sp, #36]	; 0x24
90002e3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002e3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e42:	f043 0301 	orr.w	r3, r3, #1
90002e46:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e4e:	f003 0301 	and.w	r3, r3, #1
90002e52:	930a      	str	r3, [sp, #40]	; 0x28
90002e54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002e56:	f005 faa3 	bl	900083a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002e5a:	4622      	mov	r2, r4
90002e5c:	2180      	movs	r1, #128	; 0x80
90002e5e:	484c      	ldr	r0, [pc, #304]	; (90002f90 <main+0x384>)
90002e60:	f005 fa9e 	bl	900083a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002e64:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002e68:	484a      	ldr	r0, [pc, #296]	; (90002f94 <main+0x388>)
90002e6a:	2201      	movs	r2, #1
90002e6c:	f005 fa98 	bl	900083a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002e70:	4622      	mov	r2, r4
90002e72:	2108      	movs	r1, #8
90002e74:	4848      	ldr	r0, [pc, #288]	; (90002f98 <main+0x38c>)
90002e76:	f005 fa93 	bl	900083a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002e7a:	2201      	movs	r2, #1
90002e7c:	4847      	ldr	r0, [pc, #284]	; (90002f9c <main+0x390>)
90002e7e:	4611      	mov	r1, r2
90002e80:	f005 fa8e 	bl	900083a0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002e84:	4622      	mov	r2, r4
90002e86:	2144      	movs	r1, #68	; 0x44
90002e88:	4845      	ldr	r0, [pc, #276]	; (90002fa0 <main+0x394>)
90002e8a:	f005 fa89 	bl	900083a0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002e8e:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002e90:	a90b      	add	r1, sp, #44	; 0x2c
90002e92:	483e      	ldr	r0, [pc, #248]	; (90002f8c <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002e94:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002e98:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002e9c:	f005 f880 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ea0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002ea2:	a90b      	add	r1, sp, #44	; 0x2c
90002ea4:	483a      	ldr	r0, [pc, #232]	; (90002f90 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ea6:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ea8:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002eaa:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002eae:	f005 f877 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002eb2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002eb6:	a90b      	add	r1, sp, #44	; 0x2c
90002eb8:	4836      	ldr	r0, [pc, #216]	; (90002f94 <main+0x388>)
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002eba:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ebc:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ebe:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002ec2:	f005 f86d 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002ec6:	a90b      	add	r1, sp, #44	; 0x2c
90002ec8:	4833      	ldr	r0, [pc, #204]	; (90002f98 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002eca:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002ece:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002ed0:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002ed4:	f005 f864 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002ed8:	a90b      	add	r1, sp, #44	; 0x2c
90002eda:	4830      	ldr	r0, [pc, #192]	; (90002f9c <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002edc:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ee0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002ee4:	f005 f85c 	bl	90007fa0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002ee8:	a90b      	add	r1, sp, #44	; 0x2c
90002eea:	482d      	ldr	r0, [pc, #180]	; (90002fa0 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002eec:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ef0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002ef4:	f005 f854 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ef8:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002efc:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f00:	a90b      	add	r1, sp, #44	; 0x2c
90002f02:	4827      	ldr	r0, [pc, #156]	; (90002fa0 <main+0x394>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f04:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f08:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f0c:	f005 f848 	bl	90007fa0 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f10:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f14:	4622      	mov	r2, r4
90002f16:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f18:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f1a:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f1c:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002f20:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002f24:	4d1f      	ldr	r5, [pc, #124]	; (90002fa4 <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f26:	4033      	ands	r3, r6
90002f28:	9300      	str	r3, [sp, #0]
90002f2a:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f2c:	f004 fdcc 	bl	90007ac8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002f30:	207a      	movs	r0, #122	; 0x7a
90002f32:	f004 fe07 	bl	90007b44 <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002f36:	2234      	movs	r2, #52	; 0x34
90002f38:	4621      	mov	r1, r4
90002f3a:	a80b      	add	r0, sp, #44	; 0x2c
90002f3c:	f023 fb88 	bl	90026650 <memset>
  hltdc.Instance = LTDC;
90002f40:	4b19      	ldr	r3, [pc, #100]	; (90002fa8 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90002f42:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002f44:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002f46:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002f48:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002f4a:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002f4e:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002f52:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002f54:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002f56:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002f58:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002f5c:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002f60:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002f64:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002f66:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002f6a:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002f6e:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002f70:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002f74:	e9c5 4401 	strd	r4, r4, [r5, #4]
90002f78:	e018      	b.n	90002fac <main+0x3a0>
90002f7a:	bf00      	nop
90002f7c:	03000012 	.word	0x03000012
90002f80:	01010001 	.word	0x01010001
90002f84:	e000ed00 	.word	0xe000ed00
90002f88:	58024400 	.word	0x58024400
90002f8c:	58020400 	.word	0x58020400
90002f90:	58020c00 	.word	0x58020c00
90002f94:	58022000 	.word	0x58022000
90002f98:	58021800 	.word	0x58021800
90002f9c:	58022800 	.word	0x58022800
90002fa0:	58020000 	.word	0x58020000
90002fa4:	240092a8 	.word	0x240092a8
90002fa8:	50001000 	.word	0x50001000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002fac:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002fb0:	f007 fa1c 	bl	9000a3ec <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002fb4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fb8:	4622      	mov	r2, r4
90002fba:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002fbc:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fbe:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002fc0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002fc2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002fc6:	4d4b      	ldr	r5, [pc, #300]	; (900030f4 <main+0x4e8>)
  pLayerCfg.WindowY1 = 272;
90002fc8:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageHeight = 272;
90002fca:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002fcc:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002fce:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90002fd0:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002fd2:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90002fd6:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90002fd8:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
90002fda:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
90002fdc:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
90002fde:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90002fe2:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002fe6:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002fe8:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fec:	f007 fad2 	bl	9000a594 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90002ff0:	4b41      	ldr	r3, [pc, #260]	; (900030f8 <main+0x4ec>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90002ff2:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90002ff4:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90002ff6:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90002ff8:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90002ffa:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90002ffe:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003002:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003006:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000300a:	f004 fe81 	bl	90007d10 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
9000300e:	4631      	mov	r1, r6
90003010:	4628      	mov	r0, r5
90003012:	f004 ff55 	bl	90007ec0 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003016:	4839      	ldr	r0, [pc, #228]	; (900030fc <main+0x4f0>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003018:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
9000301c:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
9000301e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003022:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003024:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003028:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000302c:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003030:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003032:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003036:	f44f 6300 	mov.w	r3, #2048	; 0x800
9000303a:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
9000303c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90003040:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003042:	2307      	movs	r3, #7
90003044:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90003046:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003048:	4b2d      	ldr	r3, [pc, #180]	; (90003100 <main+0x4f4>)
9000304a:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
9000304c:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
9000304e:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003052:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003054:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003058:	f009 fac0 	bl	9000c5dc <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
9000305c:	4620      	mov	r0, r4
9000305e:	f004 fa6b 	bl	90007538 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003062:	4620      	mov	r0, r4
90003064:	f004 fab2 	bl	900075cc <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003068:	f7fd f9b4 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
9000306c:	4b25      	ldr	r3, [pc, #148]	; (90003104 <main+0x4f8>)
9000306e:	4826      	ldr	r0, [pc, #152]	; (90003108 <main+0x4fc>)
90003070:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003072:	f006 f98f 	bl	90009394 <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003076:	4825      	ldr	r0, [pc, #148]	; (9000310c <main+0x500>)
90003078:	4b25      	ldr	r3, [pc, #148]	; (90003110 <main+0x504>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
9000307a:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
9000307c:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
9000307e:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003080:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003084:	f004 fdce 	bl	90007c24 <HAL_CRC_Init>
  MX_TouchGFX_Init();
90003088:	f7fd f9a8 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
9000308c:	f7fd f9a4 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003090:	f009 fdc2 	bl	9000cc18 <osKernelInitialize>
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
90003094:	4a1f      	ldr	r2, [pc, #124]	; (90003114 <main+0x508>)
90003096:	4621      	mov	r1, r4
90003098:	4630      	mov	r0, r6
9000309a:	f009 fec7 	bl	9000ce2c <osSemaphoreNew>
9000309e:	4b1e      	ldr	r3, [pc, #120]	; (90003118 <main+0x50c>)
900030a0:	4601      	mov	r1, r0
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030a2:	4a1e      	ldr	r2, [pc, #120]	; (9000311c <main+0x510>)
900030a4:	4630      	mov	r0, r6
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900030a6:	6019      	str	r1, [r3, #0]
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030a8:	4621      	mov	r1, r4
900030aa:	f009 febf 	bl	9000ce2c <osSemaphoreNew>
900030ae:	4b1c      	ldr	r3, [pc, #112]	; (90003120 <main+0x514>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030b0:	4a1c      	ldr	r2, [pc, #112]	; (90003124 <main+0x518>)
900030b2:	4621      	mov	r1, r4
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030b4:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030b6:	481c      	ldr	r0, [pc, #112]	; (90003128 <main+0x51c>)
900030b8:	f009 fdda 	bl	9000cc70 <osThreadNew>
900030bc:	4b1b      	ldr	r3, [pc, #108]	; (9000312c <main+0x520>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900030be:	4a1c      	ldr	r2, [pc, #112]	; (90003130 <main+0x524>)
900030c0:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030c2:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900030c4:	481b      	ldr	r0, [pc, #108]	; (90003134 <main+0x528>)
900030c6:	f009 fdd3 	bl	9000cc70 <osThreadNew>
900030ca:	4b1b      	ldr	r3, [pc, #108]	; (90003138 <main+0x52c>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
900030cc:	4a1b      	ldr	r2, [pc, #108]	; (9000313c <main+0x530>)
900030ce:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
900030d0:	6018      	str	r0, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
900030d2:	481b      	ldr	r0, [pc, #108]	; (90003140 <main+0x534>)
900030d4:	f009 fdcc 	bl	9000cc70 <osThreadNew>
900030d8:	4b1a      	ldr	r3, [pc, #104]	; (90003144 <main+0x538>)
900030da:	4605      	mov	r5, r0
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
900030dc:	4a1a      	ldr	r2, [pc, #104]	; (90003148 <main+0x53c>)
900030de:	4621      	mov	r1, r4
900030e0:	481a      	ldr	r0, [pc, #104]	; (9000314c <main+0x540>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
900030e2:	601d      	str	r5, [r3, #0]
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
900030e4:	f009 fdc4 	bl	9000cc70 <osThreadNew>
900030e8:	4b19      	ldr	r3, [pc, #100]	; (90003150 <main+0x544>)
900030ea:	6018      	str	r0, [r3, #0]
  osKernelStart();
900030ec:	f009 fda6 	bl	9000cc3c <osKernelStart>
  while (1)
900030f0:	e7fe      	b.n	900030f0 <main+0x4e4>
900030f2:	bf00      	nop
900030f4:	240091e8 	.word	0x240091e8
900030f8:	52001000 	.word	0x52001000
900030fc:	24009428 	.word	0x24009428
90003100:	52004140 	.word	0x52004140
90003104:	52003000 	.word	0x52003000
90003108:	24009250 	.word	0x24009250
9000310c:	240091c4 	.word	0x240091c4
90003110:	58024c00 	.word	0x58024c00
90003114:	90028bcc 	.word	0x90028bcc
90003118:	240091b8 	.word	0x240091b8
9000311c:	90028bbc 	.word	0x90028bbc
90003120:	240091b4 	.word	0x240091b4
90003124:	90028c00 	.word	0x90028c00
90003128:	90002b1d 	.word	0x90002b1d
9000312c:	240091c0 	.word	0x240091c0
90003130:	90028b98 	.word	0x90028b98
90003134:	900003ed 	.word	0x900003ed
90003138:	240091b0 	.word	0x240091b0
9000313c:	90028c24 	.word	0x90028c24
90003140:	90002aa1 	.word	0x90002aa1
90003144:	2400945c 	.word	0x2400945c
90003148:	90028bdc 	.word	0x90028bdc
9000314c:	90002b29 	.word	0x90002b29
90003150:	240091bc 	.word	0x240091bc

90003154 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
90003154:	4b03      	ldr	r3, [pc, #12]	; (90003164 <HAL_TIM_PeriodElapsedCallback+0x10>)
90003156:	6802      	ldr	r2, [r0, #0]
90003158:	429a      	cmp	r2, r3
9000315a:	d000      	beq.n	9000315e <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
9000315c:	4770      	bx	lr
    HAL_IncTick();
9000315e:	f004 bc89 	b.w	90007a74 <HAL_IncTick>
90003162:	bf00      	nop
90003164:	40001000 	.word	0x40001000

90003168 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003168:	4770      	bx	lr
9000316a:	bf00      	nop

9000316c <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000316c:	4b0b      	ldr	r3, [pc, #44]	; (9000319c <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000316e:	2200      	movs	r2, #0
90003170:	210f      	movs	r1, #15
90003172:	f06f 0001 	mvn.w	r0, #1
{
90003176:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003178:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
9000317c:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
9000317e:	f044 0402 	orr.w	r4, r4, #2
90003182:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
90003186:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
9000318a:	f003 0302 	and.w	r3, r3, #2
9000318e:	9301      	str	r3, [sp, #4]
90003190:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003192:	b003      	add	sp, #12
90003194:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003198:	f004 bc96 	b.w	90007ac8 <HAL_NVIC_SetPriority>
9000319c:	58024400 	.word	0x58024400

900031a0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
900031a0:	4b0a      	ldr	r3, [pc, #40]	; (900031cc <HAL_CRC_MspInit+0x2c>)
900031a2:	6802      	ldr	r2, [r0, #0]
900031a4:	429a      	cmp	r2, r3
900031a6:	d000      	beq.n	900031aa <HAL_CRC_MspInit+0xa>
900031a8:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
900031aa:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
900031ae:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
900031b0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900031b4:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
900031b8:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900031bc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
900031c0:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
900031c4:	9301      	str	r3, [sp, #4]
900031c6:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
900031c8:	b002      	add	sp, #8
900031ca:	4770      	bx	lr
900031cc:	58024c00 	.word	0x58024c00

900031d0 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
900031d0:	4b0f      	ldr	r3, [pc, #60]	; (90003210 <HAL_DMA2D_MspInit+0x40>)
900031d2:	6802      	ldr	r2, [r0, #0]
900031d4:	429a      	cmp	r2, r3
900031d6:	d000      	beq.n	900031da <HAL_DMA2D_MspInit+0xa>
900031d8:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
900031da:	4b0e      	ldr	r3, [pc, #56]	; (90003214 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900031dc:	205a      	movs	r0, #90	; 0x5a
900031de:	2200      	movs	r2, #0
900031e0:	2105      	movs	r1, #5
{
900031e2:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
900031e4:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
900031e8:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
900031ea:	f044 0410 	orr.w	r4, r4, #16
900031ee:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
900031f2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
900031f6:	f003 0310 	and.w	r3, r3, #16
900031fa:	9301      	str	r3, [sp, #4]
900031fc:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
900031fe:	f004 fc63 	bl	90007ac8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003202:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90003204:	b002      	add	sp, #8
90003206:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000320a:	f004 bc9b 	b.w	90007b44 <HAL_NVIC_EnableIRQ>
9000320e:	bf00      	nop
90003210:	52001000 	.word	0x52001000
90003214:	58024400 	.word	0x58024400

90003218 <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003218:	4b3f      	ldr	r3, [pc, #252]	; (90003318 <HAL_JPEG_MspInit+0x100>)
9000321a:	6802      	ldr	r2, [r0, #0]
9000321c:	429a      	cmp	r2, r3
9000321e:	d000      	beq.n	90003222 <HAL_JPEG_MspInit+0xa>
90003220:	4770      	bx	lr
{
90003222:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003224:	4b3d      	ldr	r3, [pc, #244]	; (9000331c <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003226:	2211      	movs	r2, #17
90003228:	4e3d      	ldr	r6, [pc, #244]	; (90003320 <HAL_JPEG_MspInit+0x108>)
{
9000322a:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000322c:	4d3d      	ldr	r5, [pc, #244]	; (90003324 <HAL_JPEG_MspInit+0x10c>)
9000322e:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003230:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003232:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003234:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003238:	493b      	ldr	r1, [pc, #236]	; (90003328 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
9000323a:	f042 0220 	orr.w	r2, r2, #32
9000323e:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003242:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003244:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003248:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
9000324a:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
9000324e:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003250:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003252:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003254:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003256:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003258:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000325c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
90003260:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003262:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003264:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
90003268:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
9000326c:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
9000326e:	f44f 3300 	mov.w	r3, #131072	; 0x20000
90003272:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
90003276:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000327a:	2313      	movs	r3, #19
9000327c:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
9000327e:	2302      	movs	r3, #2
90003280:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003282:	f007 fa7b 	bl	9000a77c <HAL_MDMA_Init>
90003286:	2800      	cmp	r0, #0
90003288:	d13a      	bne.n	90003300 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
9000328a:	2200      	movs	r2, #0
9000328c:	4824      	ldr	r0, [pc, #144]	; (90003320 <HAL_JPEG_MspInit+0x108>)
9000328e:	4611      	mov	r1, r2
90003290:	f007 fb12 	bl	9000a8b8 <HAL_MDMA_ConfigPostRequestMask>
90003294:	2800      	cmp	r0, #0
90003296:	d13c      	bne.n	90003312 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003298:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000329a:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
9000329c:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
9000329e:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
900032a0:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
900032a2:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900032a4:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900032a8:	4920      	ldr	r1, [pc, #128]	; (9000332c <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900032aa:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
900032ac:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
900032ae:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
900032b0:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
900032b2:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
900032b6:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900032ba:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900032bc:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
900032be:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
900032c2:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900032c4:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900032c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900032cc:	4815      	ldr	r0, [pc, #84]	; (90003324 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
900032ce:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
900032d0:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900032d2:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
900032d4:	f007 fa52 	bl	9000a77c <HAL_MDMA_Init>
900032d8:	b9c0      	cbnz	r0, 9000330c <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
900032da:	2200      	movs	r2, #0
900032dc:	4811      	ldr	r0, [pc, #68]	; (90003324 <HAL_JPEG_MspInit+0x10c>)
900032de:	4611      	mov	r1, r2
900032e0:	f007 faea 	bl	9000a8b8 <HAL_MDMA_ConfigPostRequestMask>
900032e4:	b978      	cbnz	r0, 90003306 <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900032e6:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900032e8:	2079      	movs	r0, #121	; 0x79
900032ea:	2200      	movs	r2, #0
900032ec:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
900032ee:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
900032f0:	f004 fbea 	bl	90007ac8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900032f4:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
900032f6:	b002      	add	sp, #8
900032f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
900032fc:	f004 bc22 	b.w	90007b44 <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003300:	f7ff ff32 	bl	90003168 <Error_Handler>
90003304:	e7c1      	b.n	9000328a <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003306:	f7ff ff2f 	bl	90003168 <Error_Handler>
9000330a:	e7ec      	b.n	900032e6 <HAL_JPEG_MspInit+0xce>
      Error_Handler();
9000330c:	f7ff ff2c 	bl	90003168 <Error_Handler>
90003310:	e7e3      	b.n	900032da <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003312:	f7ff ff29 	bl	90003168 <Error_Handler>
90003316:	e7bf      	b.n	90003298 <HAL_JPEG_MspInit+0x80>
90003318:	52003000 	.word	0x52003000
9000331c:	58024400 	.word	0x58024400
90003320:	24009350 	.word	0x24009350
90003324:	240093bc 	.word	0x240093bc
90003328:	52000200 	.word	0x52000200
9000332c:	520001c0 	.word	0x520001c0

90003330 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003330:	b570      	push	{r4, r5, r6, lr}
90003332:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003334:	2100      	movs	r1, #0
{
90003336:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003338:	22c0      	movs	r2, #192	; 0xc0
9000333a:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000333c:	9109      	str	r1, [sp, #36]	; 0x24
9000333e:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003342:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003346:	f023 f983 	bl	90026650 <memset>
  if(hltdc->Instance==LTDC)
9000334a:	4b4a      	ldr	r3, [pc, #296]	; (90003474 <HAL_LTDC_MspInit+0x144>)
9000334c:	6822      	ldr	r2, [r4, #0]
9000334e:	429a      	cmp	r2, r3
90003350:	d001      	beq.n	90003356 <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
90003352:	b03a      	add	sp, #232	; 0xe8
90003354:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003356:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003358:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000335a:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
9000335e:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003360:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003362:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003364:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003366:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90003368:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
9000336a:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000336e:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003370:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003372:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
90003376:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000337a:	f008 fb2f 	bl	9000b9dc <HAL_RCCEx_PeriphCLKConfig>
9000337e:	2800      	cmp	r0, #0
90003380:	d174      	bne.n	9000346c <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
90003382:	4b3d      	ldr	r3, [pc, #244]	; (90003478 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
90003384:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003386:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003388:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
9000338a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
9000338e:	a905      	add	r1, sp, #20
90003390:	483a      	ldr	r0, [pc, #232]	; (9000347c <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003392:	f042 0208 	orr.w	r2, r2, #8
90003396:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000339a:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
9000339e:	f002 0208 	and.w	r2, r2, #8
900033a2:	9200      	str	r2, [sp, #0]
900033a4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
900033a6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033aa:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
900033ae:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900033b2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033b6:	f402 6280 	and.w	r2, r2, #1024	; 0x400
900033ba:	9201      	str	r2, [sp, #4]
900033bc:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
900033be:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033c2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
900033c6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900033ca:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
900033d2:	9202      	str	r2, [sp, #8]
900033d4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
900033d6:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033da:	f442 7200 	orr.w	r2, r2, #512	; 0x200
900033de:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900033e2:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033e6:	f402 7200 	and.w	r2, r2, #512	; 0x200
900033ea:	9203      	str	r2, [sp, #12]
900033ec:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
900033ee:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900033f2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900033f6:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900033fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900033fe:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003400:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003404:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003406:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003408:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000340a:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000340c:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
9000340e:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003412:	f004 fdc5 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003416:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000341a:	a905      	add	r1, sp, #20
9000341c:	4818      	ldr	r0, [pc, #96]	; (90003480 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000341e:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003420:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003424:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
90003428:	f004 fdba 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
9000342c:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
90003430:	a905      	add	r1, sp, #20
90003432:	4814      	ldr	r0, [pc, #80]	; (90003484 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
90003434:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003436:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000343a:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
9000343e:	f004 fdaf 	bl	90007fa0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
90003442:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003446:	a905      	add	r1, sp, #20
90003448:	480f      	ldr	r0, [pc, #60]	; (90003488 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
9000344a:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
9000344c:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003450:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003454:	f004 fda4 	bl	90007fa0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
90003458:	462a      	mov	r2, r5
9000345a:	2105      	movs	r1, #5
9000345c:	2058      	movs	r0, #88	; 0x58
9000345e:	f004 fb33 	bl	90007ac8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
90003462:	2058      	movs	r0, #88	; 0x58
90003464:	f004 fb6e 	bl	90007b44 <HAL_NVIC_EnableIRQ>
}
90003468:	b03a      	add	sp, #232	; 0xe8
9000346a:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
9000346c:	f7ff fe7c 	bl	90003168 <Error_Handler>
90003470:	e787      	b.n	90003382 <HAL_LTDC_MspInit+0x52>
90003472:	bf00      	nop
90003474:	50001000 	.word	0x50001000
90003478:	58024400 	.word	0x58024400
9000347c:	58022800 	.word	0x58022800
90003480:	58022000 	.word	0x58022000
90003484:	58022400 	.word	0x58022400
90003488:	58021c00 	.word	0x58021c00

9000348c <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
9000348c:	4836      	ldr	r0, [pc, #216]	; (90003568 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000348e:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003490:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003492:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003494:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003496:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000349a:	e9cd 3304 	strd	r3, r3, [sp, #16]
9000349e:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900034a0:	b109      	cbz	r1, 900034a6 <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900034a2:	b038      	add	sp, #224	; 0xe0
900034a4:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900034a6:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900034a8:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
900034aa:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900034ac:	a80a      	add	r0, sp, #40	; 0x28
900034ae:	f023 f8cf 	bl	90026650 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900034b2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900034b6:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900034b8:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900034ba:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900034be:	f008 fa8d 	bl	9000b9dc <HAL_RCCEx_PeriphCLKConfig>
900034c2:	2800      	cmp	r0, #0
900034c4:	d14c      	bne.n	90003560 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
900034c6:	4b29      	ldr	r3, [pc, #164]	; (9000356c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900034c8:	f64f 7083 	movw	r0, #65411	; 0xff83
900034cc:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900034ce:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900034d0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900034d4:	2600      	movs	r6, #0
900034d6:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900034d8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
900034dc:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
900034e0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900034e4:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
900034e6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900034ea:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
900034ee:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900034f0:	a902      	add	r1, sp, #8
900034f2:	481f      	ldr	r0, [pc, #124]	; (90003570 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900034f4:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900034f6:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
900034fa:	f004 fd51 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900034fe:	f248 1233 	movw	r2, #33075	; 0x8133
90003502:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003504:	a902      	add	r1, sp, #8
90003506:	481b      	ldr	r0, [pc, #108]	; (90003574 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003508:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000350a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000350e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003512:	f004 fd45 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003516:	f24c 7203 	movw	r2, #50947	; 0xc703
9000351a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000351c:	a902      	add	r1, sp, #8
9000351e:	4816      	ldr	r0, [pc, #88]	; (90003578 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003520:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003522:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003526:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000352a:	f004 fd39 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000352e:	f64f 023f 	movw	r2, #63551	; 0xf83f
90003532:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003534:	a902      	add	r1, sp, #8
90003536:	4811      	ldr	r0, [pc, #68]	; (9000357c <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003538:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
9000353a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000353e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
90003542:	f004 fd2d 	bl	90007fa0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003546:	22e0      	movs	r2, #224	; 0xe0
90003548:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
9000354a:	a902      	add	r1, sp, #8
9000354c:	480c      	ldr	r0, [pc, #48]	; (90003580 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000354e:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90003550:	e9cd 6704 	strd	r6, r7, [sp, #16]
90003554:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90003558:	f004 fd22 	bl	90007fa0 <HAL_GPIO_Init>
}
9000355c:	b038      	add	sp, #224	; 0xe0
9000355e:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
90003560:	f7ff fe02 	bl	90003168 <Error_Handler>
90003564:	e7af      	b.n	900034c6 <HAL_SDRAM_MspInit+0x3a>
90003566:	bf00      	nop
90003568:	24009464 	.word	0x24009464
9000356c:	58024400 	.word	0x58024400
90003570:	58021000 	.word	0x58021000
90003574:	58021800 	.word	0x58021800
90003578:	58020c00 	.word	0x58020c00
9000357c:	58021400 	.word	0x58021400
90003580:	58021c00 	.word	0x58021c00

90003584 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
90003584:	4b13      	ldr	r3, [pc, #76]	; (900035d4 <HAL_SDRAM_MspDeInit+0x50>)
90003586:	681a      	ldr	r2, [r3, #0]
90003588:	b102      	cbz	r2, 9000358c <HAL_SDRAM_MspDeInit+0x8>
9000358a:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
9000358c:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
9000358e:	4a12      	ldr	r2, [pc, #72]	; (900035d8 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003590:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003592:	f64f 7183 	movw	r1, #65411	; 0xff83
90003596:	4811      	ldr	r0, [pc, #68]	; (900035dc <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
90003598:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000359a:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
9000359e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900035a2:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900035a6:	f004 fe2d 	bl	90008204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900035aa:	f248 1133 	movw	r1, #33075	; 0x8133
900035ae:	480c      	ldr	r0, [pc, #48]	; (900035e0 <HAL_SDRAM_MspDeInit+0x5c>)
900035b0:	f004 fe28 	bl	90008204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900035b4:	f24c 7103 	movw	r1, #50947	; 0xc703
900035b8:	480a      	ldr	r0, [pc, #40]	; (900035e4 <HAL_SDRAM_MspDeInit+0x60>)
900035ba:	f004 fe23 	bl	90008204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900035be:	f64f 013f 	movw	r1, #63551	; 0xf83f
900035c2:	4809      	ldr	r0, [pc, #36]	; (900035e8 <HAL_SDRAM_MspDeInit+0x64>)
900035c4:	f004 fe1e 	bl	90008204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900035c8:	21e0      	movs	r1, #224	; 0xe0
900035ca:	4808      	ldr	r0, [pc, #32]	; (900035ec <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
900035cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
900035d0:	f004 be18 	b.w	90008204 <HAL_GPIO_DeInit>
900035d4:	24009460 	.word	0x24009460
900035d8:	58024400 	.word	0x58024400
900035dc:	58021000 	.word	0x58021000
900035e0:	58021800 	.word	0x58021800
900035e4:	58020c00 	.word	0x58020c00
900035e8:	58021400 	.word	0x58021400
900035ec:	58021c00 	.word	0x58021c00

900035f0 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
900035f0:	280f      	cmp	r0, #15
900035f2:	d901      	bls.n	900035f8 <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
900035f4:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
900035f6:	4770      	bx	lr
{
900035f8:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900035fa:	4601      	mov	r1, r0
{
900035fc:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
900035fe:	2200      	movs	r2, #0
90003600:	4604      	mov	r4, r0
90003602:	2036      	movs	r0, #54	; 0x36
90003604:	f004 fa60 	bl	90007ac8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90003608:	2036      	movs	r0, #54	; 0x36
9000360a:	f004 fa9b 	bl	90007b44 <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
9000360e:	4b1a      	ldr	r3, [pc, #104]	; (90003678 <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
90003610:	4a1a      	ldr	r2, [pc, #104]	; (9000367c <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003612:	4669      	mov	r1, sp
90003614:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
90003616:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90003618:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
9000361c:	f042 0210 	orr.w	r2, r2, #16
90003620:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003624:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
90003628:	f003 0310 	and.w	r3, r3, #16
9000362c:	9301      	str	r3, [sp, #4]
9000362e:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003630:	f008 f8b4 	bl	9000b79c <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
90003634:	9b07      	ldr	r3, [sp, #28]
90003636:	b9bb      	cbnz	r3, 90003668 <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90003638:	f008 f820 	bl	9000b67c <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000363c:	4b10      	ldr	r3, [pc, #64]	; (90003680 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
9000363e:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
90003640:	4c10      	ldr	r4, [pc, #64]	; (90003684 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003642:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
90003646:	4d10      	ldr	r5, [pc, #64]	; (90003688 <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003648:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000364c:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000364e:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
90003650:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
90003652:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90003654:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90003656:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
9000365a:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
9000365c:	f009 f830 	bl	9000c6c0 <HAL_TIM_Base_Init>
90003660:	b130      	cbz	r0, 90003670 <HAL_InitTick+0x80>
    return HAL_ERROR;
90003662:	2001      	movs	r0, #1
}
90003664:	b00b      	add	sp, #44	; 0x2c
90003666:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
90003668:	f008 f808 	bl	9000b67c <HAL_RCC_GetPCLK1Freq>
9000366c:	0040      	lsls	r0, r0, #1
9000366e:	e7e5      	b.n	9000363c <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
90003670:	4620      	mov	r0, r4
90003672:	f009 f8db 	bl	9000c82c <HAL_TIM_Base_Start_IT>
90003676:	e7f5      	b.n	90003664 <HAL_InitTick+0x74>
90003678:	58024400 	.word	0x58024400
9000367c:	2400006c 	.word	0x2400006c
90003680:	431bde83 	.word	0x431bde83
90003684:	24009468 	.word	0x24009468
90003688:	40001000 	.word	0x40001000

9000368c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
9000368c:	4770      	bx	lr
9000368e:	bf00      	nop

90003690 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003690:	e7fe      	b.n	90003690 <HardFault_Handler>
90003692:	bf00      	nop

90003694 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003694:	e7fe      	b.n	90003694 <MemManage_Handler>
90003696:	bf00      	nop

90003698 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
90003698:	e7fe      	b.n	90003698 <BusFault_Handler>
9000369a:	bf00      	nop

9000369c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
9000369c:	e7fe      	b.n	9000369c <UsageFault_Handler>
9000369e:	bf00      	nop

900036a0 <DebugMon_Handler>:
900036a0:	4770      	bx	lr
900036a2:	bf00      	nop

900036a4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900036a4:	4801      	ldr	r0, [pc, #4]	; (900036ac <TIM6_DAC_IRQHandler+0x8>)
900036a6:	f009 b925 	b.w	9000c8f4 <HAL_TIM_IRQHandler>
900036aa:	bf00      	nop
900036ac:	24009468 	.word	0x24009468

900036b0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900036b0:	4801      	ldr	r0, [pc, #4]	; (900036b8 <LTDC_IRQHandler+0x8>)
900036b2:	f006 bf0d 	b.w	9000a4d0 <HAL_LTDC_IRQHandler>
900036b6:	bf00      	nop
900036b8:	240092a8 	.word	0x240092a8

900036bc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
900036bc:	4801      	ldr	r0, [pc, #4]	; (900036c4 <DMA2D_IRQHandler+0x8>)
900036be:	f004 bb6b 	b.w	90007d98 <HAL_DMA2D_IRQHandler>
900036c2:	bf00      	nop
900036c4:	240091e8 	.word	0x240091e8

900036c8 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
900036c8:	4801      	ldr	r0, [pc, #4]	; (900036d0 <JPEG_IRQHandler+0x8>)
900036ca:	f006 bded 	b.w	9000a2a8 <HAL_JPEG_IRQHandler>
900036ce:	bf00      	nop
900036d0:	24009250 	.word	0x24009250

900036d4 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900036d4:	4804      	ldr	r0, [pc, #16]	; (900036e8 <MDMA_IRQHandler+0x14>)
{
900036d6:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
900036d8:	f007 f9ae 	bl	9000aa38 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900036dc:	4803      	ldr	r0, [pc, #12]	; (900036ec <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
900036de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
900036e2:	f007 b9a9 	b.w	9000aa38 <HAL_MDMA_IRQHandler>
900036e6:	bf00      	nop
900036e8:	240093bc 	.word	0x240093bc
900036ec:	24009350 	.word	0x24009350

900036f0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
900036f0:	2001      	movs	r0, #1
900036f2:	4770      	bx	lr

900036f4 <_kill>:

int _kill(int pid, int sig)
{
900036f4:	b508      	push	{r3, lr}
	errno = EINVAL;
900036f6:	f023 f85f 	bl	900267b8 <__errno>
900036fa:	2216      	movs	r2, #22
900036fc:	4603      	mov	r3, r0
	return -1;
}
900036fe:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90003702:	601a      	str	r2, [r3, #0]
}
90003704:	bd08      	pop	{r3, pc}
90003706:	bf00      	nop

90003708 <_exit>:

void _exit (int status)
{
90003708:	b508      	push	{r3, lr}
	errno = EINVAL;
9000370a:	f023 f855 	bl	900267b8 <__errno>
9000370e:	2316      	movs	r3, #22
90003710:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90003712:	e7fe      	b.n	90003712 <_exit+0xa>

90003714 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003714:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003716:	1e16      	subs	r6, r2, #0
90003718:	dd07      	ble.n	9000372a <_read+0x16>
9000371a:	460c      	mov	r4, r1
9000371c:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000371e:	f3af 8000 	nop.w
90003722:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003726:	42a5      	cmp	r5, r4
90003728:	d1f9      	bne.n	9000371e <_read+0xa>
	}

return len;
}
9000372a:	4630      	mov	r0, r6
9000372c:	bd70      	pop	{r4, r5, r6, pc}
9000372e:	bf00      	nop

90003730 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
90003730:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003732:	1e16      	subs	r6, r2, #0
90003734:	dd07      	ble.n	90003746 <_write+0x16>
90003736:	460c      	mov	r4, r1
90003738:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
9000373a:	f814 0b01 	ldrb.w	r0, [r4], #1
9000373e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90003742:	42ac      	cmp	r4, r5
90003744:	d1f9      	bne.n	9000373a <_write+0xa>
	}
	return len;
}
90003746:	4630      	mov	r0, r6
90003748:	bd70      	pop	{r4, r5, r6, pc}
9000374a:	bf00      	nop

9000374c <_close>:

int _close(int file)
{
	return -1;
}
9000374c:	f04f 30ff 	mov.w	r0, #4294967295
90003750:	4770      	bx	lr
90003752:	bf00      	nop

90003754 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
90003754:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
90003758:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
9000375a:	604b      	str	r3, [r1, #4]
}
9000375c:	4770      	bx	lr
9000375e:	bf00      	nop

90003760 <_isatty>:

int _isatty(int file)
{
	return 1;
}
90003760:	2001      	movs	r0, #1
90003762:	4770      	bx	lr

90003764 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
90003764:	2000      	movs	r0, #0
90003766:	4770      	bx	lr

90003768 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
90003768:	4770      	bx	lr
9000376a:	bf00      	nop

9000376c <_ZN23ApplicationFontProviderD0Ev>:
9000376c:	b510      	push	{r4, lr}
9000376e:	4604      	mov	r4, r0
90003770:	2104      	movs	r1, #4
90003772:	f022 fc66 	bl	90026042 <_ZdlPvj>
90003776:	4620      	mov	r0, r4
90003778:	bd10      	pop	{r4, pc}
9000377a:	bf00      	nop

9000377c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
9000377c:	2901      	cmp	r1, #1
{
9000377e:	b508      	push	{r3, lr}
    switch (typography)
90003780:	d004      	beq.n	9000378c <_ZN23ApplicationFontProvider7getFontEt+0x10>
90003782:	2902      	cmp	r1, #2
90003784:	d00a      	beq.n	9000379c <_ZN23ApplicationFontProvider7getFontEt+0x20>
90003786:	b129      	cbz	r1, 90003794 <_ZN23ApplicationFontProvider7getFontEt+0x18>
90003788:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
9000378a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
9000378c:	f000 ff98 	bl	900046c0 <_ZN17TypedTextDatabase8getFontsEv>
90003790:	6840      	ldr	r0, [r0, #4]
}
90003792:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003794:	f000 ff94 	bl	900046c0 <_ZN17TypedTextDatabase8getFontsEv>
90003798:	6800      	ldr	r0, [r0, #0]
}
9000379a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
9000379c:	f000 ff90 	bl	900046c0 <_ZN17TypedTextDatabase8getFontsEv>
900037a0:	6880      	ldr	r0, [r0, #8]
}
900037a2:	bd08      	pop	{r3, pc}

900037a4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
900037a4:	4800      	ldr	r0, [pc, #0]	; (900037a8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
900037a6:	4770      	bx	lr
900037a8:	90028c5c 	.word	0x90028c5c

900037ac <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
900037ac:	200c      	movs	r0, #12
900037ae:	4770      	bx	lr

900037b0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
900037b0:	b169      	cbz	r1, 900037ce <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900037b2:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
900037b4:	b530      	push	{r4, r5, lr}
900037b6:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
900037b8:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900037ba:	6895      	ldr	r5, [r2, #8]
900037bc:	f10d 0303 	add.w	r3, sp, #3
900037c0:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
900037c2:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
900037c4:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
900037c8:	47a8      	blx	r5
        return glyph;
    }
900037ca:	b003      	add	sp, #12
900037cc:	bd30      	pop	{r4, r5, pc}
            return 0;
900037ce:	4608      	mov	r0, r1
    }
900037d0:	4770      	bx	lr
900037d2:	bf00      	nop

900037d4 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
900037d4:	89c0      	ldrh	r0, [r0, #14]
900037d6:	4770      	bx	lr

900037d8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
900037d8:	8a00      	ldrh	r0, [r0, #16]
900037da:	4770      	bx	lr

900037dc <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
900037dc:	88c0      	ldrh	r0, [r0, #6]
900037de:	4770      	bx	lr

900037e0 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
900037e0:	8880      	ldrh	r0, [r0, #4]
900037e2:	4770      	bx	lr

900037e4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
900037e4:	7a80      	ldrb	r0, [r0, #10]
    }
900037e6:	f000 007f 	and.w	r0, r0, #127	; 0x7f
900037ea:	4770      	bx	lr

900037ec <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
900037ec:	7a80      	ldrb	r0, [r0, #10]
    }
900037ee:	09c0      	lsrs	r0, r0, #7
900037f0:	4770      	bx	lr
900037f2:	bf00      	nop

900037f4 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
900037f4:	2000      	movs	r0, #0
900037f6:	4770      	bx	lr

900037f8 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
900037f8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 90003800 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
900037fc:	4770      	bx	lr
900037fe:	bf00      	nop
90003800:	00000000 	.word	0x00000000

90003804 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90003804:	4770      	bx	lr
90003806:	bf00      	nop

90003808 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90003808:	b510      	push	{r4, lr}
9000380a:	4604      	mov	r4, r0
    }
9000380c:	2108      	movs	r1, #8
9000380e:	f022 fc18 	bl	90026042 <_ZdlPvj>
90003812:	4620      	mov	r0, r4
90003814:	bd10      	pop	{r4, pc}
90003816:	bf00      	nop

90003818 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90003818:	4770      	bx	lr
9000381a:	bf00      	nop

9000381c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
9000381c:	f500 7398 	add.w	r3, r0, #304	; 0x130
90003820:	6808      	ldr	r0, [r1, #0]
90003822:	6849      	ldr	r1, [r1, #4]
90003824:	c303      	stmia	r3!, {r0, r1}
    }
90003826:	4770      	bx	lr

90003828 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
90003828:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000382a:	4770      	bx	lr

9000382c <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
9000382c:	4770      	bx	lr
9000382e:	bf00      	nop

90003830 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90003830:	4770      	bx	lr
90003832:	bf00      	nop

90003834 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90003834:	6041      	str	r1, [r0, #4]
    }
90003836:	4770      	bx	lr

90003838 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90003838:	4770      	bx	lr
9000383a:	bf00      	nop

9000383c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
9000383c:	4905      	ldr	r1, [pc, #20]	; (90003854 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
9000383e:	2200      	movs	r2, #0
// screen_game_select

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90003840:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90003844:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90003848:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
9000384c:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_game_selectScreenNoTransition();
    }
90003850:	4770      	bx	lr
90003852:	bf00      	nop
90003854:	90003bb1 	.word	0x90003bb1

90003858 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90003858:	2301      	movs	r3, #1
9000385a:	7203      	strb	r3, [r0, #8]
    }
9000385c:	4770      	bx	lr
9000385e:	bf00      	nop

90003860 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
90003860:	4770      	bx	lr
90003862:	bf00      	nop

90003864 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
90003864:	4770      	bx	lr
90003866:	bf00      	nop

90003868 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90003868:	4770      	bx	lr
9000386a:	bf00      	nop

9000386c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
9000386c:	4770      	bx	lr
9000386e:	bf00      	nop

90003870 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90003870:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
90003872:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
90003874:	6841      	ldr	r1, [r0, #4]
90003876:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000387a:	eb01 0062 	add.w	r0, r1, r2, asr #1
9000387e:	07d2      	lsls	r2, r2, #31
90003880:	d401      	bmi.n	90003886 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90003882:	689b      	ldr	r3, [r3, #8]
90003884:	4718      	bx	r3
90003886:	f851 200c 	ldr.w	r2, [r1, ip]
9000388a:	689b      	ldr	r3, [r3, #8]
9000388c:	58d3      	ldr	r3, [r2, r3]
9000388e:	4718      	bx	r3

90003890 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003890:	6843      	ldr	r3, [r0, #4]
90003892:	b13b      	cbz	r3, 900038a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90003894:	6883      	ldr	r3, [r0, #8]
90003896:	b10b      	cbz	r3, 9000389c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90003898:	2001      	movs	r0, #1
    }
9000389a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000389c:	68c0      	ldr	r0, [r0, #12]
9000389e:	f000 0001 	and.w	r0, r0, #1
900038a2:	4770      	bx	lr
900038a4:	4618      	mov	r0, r3
900038a6:	4770      	bx	lr

900038a8 <_ZN8touchgfx12NoTransitionD0Ev>:
900038a8:	b510      	push	{r4, lr}
900038aa:	4604      	mov	r4, r0
900038ac:	210c      	movs	r1, #12
900038ae:	f022 fbc8 	bl	90026042 <_ZdlPvj>
900038b2:	4620      	mov	r0, r4
900038b4:	bd10      	pop	{r4, pc}
900038b6:	bf00      	nop

900038b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900038b8:	b510      	push	{r4, lr}
900038ba:	4604      	mov	r4, r0
900038bc:	2110      	movs	r1, #16
900038be:	f022 fbc0 	bl	90026042 <_ZdlPvj>
900038c2:	4620      	mov	r0, r4
900038c4:	bd10      	pop	{r4, pc}
900038c6:	bf00      	nop

900038c8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
900038c8:	b510      	push	{r4, lr}
900038ca:	4604      	mov	r4, r0
900038cc:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900038d0:	f022 fbb7 	bl	90026042 <_ZdlPvj>
900038d4:	4620      	mov	r0, r4
900038d6:	bd10      	pop	{r4, pc}

900038d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
900038d8:	b510      	push	{r4, lr}
900038da:	4604      	mov	r4, r0
900038dc:	2140      	movs	r1, #64	; 0x40
900038de:	f022 fbb0 	bl	90026042 <_ZdlPvj>
900038e2:	4620      	mov	r0, r4
900038e4:	bd10      	pop	{r4, pc}
900038e6:	bf00      	nop

900038e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
900038e8:	b510      	push	{r4, lr}
900038ea:	4604      	mov	r4, r0
900038ec:	2140      	movs	r1, #64	; 0x40
900038ee:	f022 fba8 	bl	90026042 <_ZdlPvj>
900038f2:	4620      	mov	r0, r4
900038f4:	bd10      	pop	{r4, pc}
900038f6:	bf00      	nop

900038f8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
900038f8:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
900038fa:	f011 fa55 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
900038fe:	6803      	ldr	r3, [r0, #0]
    }
90003900:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90003904:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90003906:	4718      	bx	r3

90003908 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003908:	4b05      	ldr	r3, [pc, #20]	; (90003920 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
9000390a:	781b      	ldrb	r3, [r3, #0]
9000390c:	b13b      	cbz	r3, 9000391e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
9000390e:	6843      	ldr	r3, [r0, #4]
90003910:	b12b      	cbz	r3, 9000391e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90003912:	681a      	ldr	r2, [r3, #0]
90003914:	f100 010c 	add.w	r1, r0, #12
90003918:	4618      	mov	r0, r3
9000391a:	6e53      	ldr	r3, [r2, #100]	; 0x64
9000391c:	4718      	bx	r3
        }
    }
9000391e:	4770      	bx	lr
90003920:	2402356b 	.word	0x2402356b

90003924 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003924:	4b05      	ldr	r3, [pc, #20]	; (9000393c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
90003926:	781b      	ldrb	r3, [r3, #0]
90003928:	b13b      	cbz	r3, 9000393a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
9000392a:	6843      	ldr	r3, [r0, #4]
9000392c:	b12b      	cbz	r3, 9000393a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
9000392e:	681a      	ldr	r2, [r3, #0]
90003930:	f100 010c 	add.w	r1, r0, #12
90003934:	4618      	mov	r0, r3
90003936:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003938:	4718      	bx	r3
    }
9000393a:	4770      	bx	lr
9000393c:	2402356b 	.word	0x2402356b

90003940 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003940:	b570      	push	{r4, r5, r6, lr}
90003942:	4605      	mov	r5, r0
        animationCounter++;
90003944:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90003948:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
9000394a:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
9000394e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90003950:	4298      	cmp	r0, r3
        animationCounter++;
90003952:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90003956:	d905      	bls.n	90003964 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
90003958:	2201      	movs	r2, #1
            animationCounter = 0;
9000395a:	2300      	movs	r3, #0
            done = true;
9000395c:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
9000395e:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90003962:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003964:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003968:	2100      	movs	r1, #0
9000396a:	f012 ff9d 	bl	900168a8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
9000396e:	f010 0201 	ands.w	r2, r0, #1
90003972:	b283      	uxth	r3, r0
90003974:	d006      	beq.n	90003984 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003976:	f64f 71ff 	movw	r1, #65535	; 0xffff
9000397a:	2800      	cmp	r0, #0
9000397c:	bfd8      	it	le
9000397e:	460a      	movle	r2, r1
90003980:	4413      	add	r3, r2
90003982:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003984:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003986:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003988:	6802      	ldr	r2, [r0, #0]
9000398a:	4912      	ldr	r1, [pc, #72]	; (900039d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
9000398c:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
9000398e:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003990:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003992:	428a      	cmp	r2, r1
90003994:	d11b      	bne.n	900039ce <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003996:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003998:	b164      	cbz	r4, 900039b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
9000399a:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
9000399c:	4e0e      	ldr	r6, [pc, #56]	; (900039d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
9000399e:	6823      	ldr	r3, [r4, #0]
900039a0:	88a1      	ldrh	r1, [r4, #4]
900039a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900039a4:	4411      	add	r1, r2
900039a6:	42b3      	cmp	r3, r6
900039a8:	b209      	sxth	r1, r1
        rect.x = x;
900039aa:	d109      	bne.n	900039c0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
900039ac:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900039ae:	69a4      	ldr	r4, [r4, #24]
        while (d)
900039b0:	2c00      	cmp	r4, #0
900039b2:	d1f4      	bne.n	9000399e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
900039b4:	6868      	ldr	r0, [r5, #4]
900039b6:	6803      	ldr	r3, [r0, #0]
    }
900039b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
900039bc:	695b      	ldr	r3, [r3, #20]
900039be:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
900039c0:	4620      	mov	r0, r4
900039c2:	4798      	blx	r3
900039c4:	69a4      	ldr	r4, [r4, #24]
        while (d)
900039c6:	2c00      	cmp	r4, #0
900039c8:	d0f4      	beq.n	900039b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
900039ca:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
900039cc:	e7e7      	b.n	9000399e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
900039ce:	4790      	blx	r2
900039d0:	4604      	mov	r4, r0
900039d2:	e7e1      	b.n	90003998 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
900039d4:	90003829 	.word	0x90003829
900039d8:	900023fd 	.word	0x900023fd

900039dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
900039dc:	b570      	push	{r4, r5, r6, lr}
900039de:	4605      	mov	r5, r0
        animationCounter++;
900039e0:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900039e4:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900039e6:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900039ea:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900039ec:	4298      	cmp	r0, r3
        animationCounter++;
900039ee:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900039f2:	d905      	bls.n	90003a00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
900039f4:	2201      	movs	r2, #1
            animationCounter = 0;
900039f6:	2300      	movs	r3, #0
            done = true;
900039f8:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900039fa:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900039fe:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003a00:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003a04:	2100      	movs	r1, #0
90003a06:	f012 ff4f 	bl	900168a8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003a0a:	f010 0201 	ands.w	r2, r0, #1
90003a0e:	b283      	uxth	r3, r0
90003a10:	d006      	beq.n	90003a20 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003a12:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003a16:	2800      	cmp	r0, #0
90003a18:	bfd8      	it	le
90003a1a:	460a      	movle	r2, r1
90003a1c:	4413      	add	r3, r2
90003a1e:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003a20:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003a22:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003a24:	6802      	ldr	r2, [r0, #0]
90003a26:	4912      	ldr	r1, [pc, #72]	; (90003a70 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003a28:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90003a2a:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003a2c:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003a2e:	428a      	cmp	r2, r1
90003a30:	d11b      	bne.n	90003a6a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8e>
90003a32:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003a34:	b164      	cbz	r4, 90003a50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003a36:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a38:	4e0e      	ldr	r6, [pc, #56]	; (90003a74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003a3a:	6823      	ldr	r3, [r4, #0]
90003a3c:	88a1      	ldrh	r1, [r4, #4]
90003a3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a40:	4411      	add	r1, r2
90003a42:	42b3      	cmp	r3, r6
90003a44:	b209      	sxth	r1, r1
        rect.x = x;
90003a46:	d109      	bne.n	90003a5c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
90003a48:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003a4a:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a4c:	2c00      	cmp	r4, #0
90003a4e:	d1f4      	bne.n	90003a3a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003a50:	6868      	ldr	r0, [r5, #4]
90003a52:	6803      	ldr	r3, [r0, #0]
    }
90003a54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003a58:	695b      	ldr	r3, [r3, #20]
90003a5a:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003a5c:	4620      	mov	r0, r4
90003a5e:	4798      	blx	r3
90003a60:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a62:	2c00      	cmp	r4, #0
90003a64:	d0f4      	beq.n	90003a50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003a66:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a68:	e7e7      	b.n	90003a3a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003a6a:	4790      	blx	r2
90003a6c:	4604      	mov	r4, r0
90003a6e:	e7e1      	b.n	90003a34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x58>
90003a70:	90003829 	.word	0x90003829
90003a74:	900023fd 	.word	0x900023fd

90003a78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003a78:	7a03      	ldrb	r3, [r0, #8]
90003a7a:	bb2b      	cbnz	r3, 90003ac8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90003a7c:	4a14      	ldr	r2, [pc, #80]	; (90003ad0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90003a7e:	b570      	push	{r4, r5, r6, lr}
90003a80:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003a82:	6840      	ldr	r0, [r0, #4]
90003a84:	6803      	ldr	r3, [r0, #0]
90003a86:	69db      	ldr	r3, [r3, #28]
90003a88:	4293      	cmp	r3, r2
90003a8a:	d11e      	bne.n	90003aca <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90003a8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003a8e:	b164      	cbz	r4, 90003aaa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003a90:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003a92:	4e10      	ldr	r6, [pc, #64]	; (90003ad4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003a94:	6823      	ldr	r3, [r4, #0]
90003a96:	88a1      	ldrh	r1, [r4, #4]
90003a98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a9a:	1a89      	subs	r1, r1, r2
90003a9c:	42b3      	cmp	r3, r6
90003a9e:	b209      	sxth	r1, r1
        rect.x = x;
90003aa0:	d10b      	bne.n	90003aba <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90003aa2:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003aa4:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003aa6:	2c00      	cmp	r4, #0
90003aa8:	d1f4      	bne.n	90003a94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90003aaa:	6868      	ldr	r0, [r5, #4]
90003aac:	f105 010c 	add.w	r1, r5, #12
90003ab0:	6803      	ldr	r3, [r0, #0]
    }
90003ab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003ab6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003ab8:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003aba:	4620      	mov	r0, r4
90003abc:	4798      	blx	r3
90003abe:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ac0:	2c00      	cmp	r4, #0
90003ac2:	d0f2      	beq.n	90003aaa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003ac4:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003ac6:	e7e5      	b.n	90003a94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90003ac8:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003aca:	4798      	blx	r3
90003acc:	4604      	mov	r4, r0
90003ace:	e7de      	b.n	90003a8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90003ad0:	90003829 	.word	0x90003829
90003ad4:	900023fd 	.word	0x900023fd

90003ad8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
        if (done)
90003ad8:	7a03      	ldrb	r3, [r0, #8]
90003ada:	bb2b      	cbnz	r3, 90003b28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90003adc:	4a14      	ldr	r2, [pc, #80]	; (90003b30 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
90003ade:	b570      	push	{r4, r5, r6, lr}
90003ae0:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90003ae2:	6840      	ldr	r0, [r0, #4]
90003ae4:	6803      	ldr	r3, [r0, #0]
90003ae6:	69db      	ldr	r3, [r3, #28]
90003ae8:	4293      	cmp	r3, r2
90003aea:	d11e      	bne.n	90003b2a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90003aec:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003aee:	b164      	cbz	r4, 90003b0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003af0:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003af2:	4e10      	ldr	r6, [pc, #64]	; (90003b34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
90003af4:	6823      	ldr	r3, [r4, #0]
90003af6:	88a1      	ldrh	r1, [r4, #4]
90003af8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003afa:	1a89      	subs	r1, r1, r2
90003afc:	42b3      	cmp	r3, r6
90003afe:	b209      	sxth	r1, r1
        rect.x = x;
90003b00:	d10b      	bne.n	90003b1a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
90003b02:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b04:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b06:	2c00      	cmp	r4, #0
90003b08:	d1f4      	bne.n	90003af4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
        screenContainer->add(snapshot);
90003b0a:	6868      	ldr	r0, [r5, #4]
90003b0c:	f105 010c 	add.w	r1, r5, #12
90003b10:	6803      	ldr	r3, [r0, #0]
    }
90003b12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b18:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b1a:	4620      	mov	r0, r4
90003b1c:	4798      	blx	r3
90003b1e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b20:	2c00      	cmp	r4, #0
90003b22:	d0f2      	beq.n	90003b0a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b24:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b26:	e7e5      	b.n	90003af4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
90003b28:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b2a:	4798      	blx	r3
90003b2c:	4604      	mov	r4, r0
90003b2e:	e7de      	b.n	90003aee <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
90003b30:	90003829 	.word	0x90003829
90003b34:	900023fd 	.word	0x900023fd

90003b38 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b38:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003b3c:	b1d3      	cbz	r3, 90003b74 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003b3e:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003b40:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b42:	68d1      	ldr	r1, [r2, #12]
90003b44:	4604      	mov	r4, r0
90003b46:	4818      	ldr	r0, [pc, #96]	; (90003ba8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003b48:	4281      	cmp	r1, r0
90003b4a:	d118      	bne.n	90003b7e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003b4c:	6858      	ldr	r0, [r3, #4]
90003b4e:	b180      	cbz	r0, 90003b72 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003b50:	6899      	ldr	r1, [r3, #8]
90003b52:	b1e1      	cbz	r1, 90003b8e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90003b54:	6892      	ldr	r2, [r2, #8]
90003b56:	4915      	ldr	r1, [pc, #84]	; (90003bac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003b58:	428a      	cmp	r2, r1
90003b5a:	d122      	bne.n	90003ba2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003b5c:	68da      	ldr	r2, [r3, #12]
90003b5e:	6858      	ldr	r0, [r3, #4]
90003b60:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003b64:	07d2      	lsls	r2, r2, #31
90003b66:	d406      	bmi.n	90003b76 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003b68:	689b      	ldr	r3, [r3, #8]
90003b6a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003b6c:	2300      	movs	r3, #0
90003b6e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003b72:	bd70      	pop	{r4, r5, r6, pc}
90003b74:	4770      	bx	lr
90003b76:	6899      	ldr	r1, [r3, #8]
90003b78:	6803      	ldr	r3, [r0, #0]
90003b7a:	585b      	ldr	r3, [r3, r1]
90003b7c:	e7f5      	b.n	90003b6a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003b7e:	4618      	mov	r0, r3
90003b80:	4788      	blx	r1
90003b82:	2800      	cmp	r0, #0
90003b84:	d0f5      	beq.n	90003b72 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003b86:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003b8a:	681a      	ldr	r2, [r3, #0]
90003b8c:	e7e2      	b.n	90003b54 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003b8e:	68dd      	ldr	r5, [r3, #12]
90003b90:	07ee      	lsls	r6, r5, #31
90003b92:	d5ee      	bpl.n	90003b72 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003b94:	6892      	ldr	r2, [r2, #8]
90003b96:	4e05      	ldr	r6, [pc, #20]	; (90003bac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003b98:	42b2      	cmp	r2, r6
90003b9a:	d102      	bne.n	90003ba2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003b9c:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003ba0:	e7ea      	b.n	90003b78 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003ba2:	4618      	mov	r0, r3
90003ba4:	4790      	blx	r2
90003ba6:	e7e1      	b.n	90003b6c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003ba8:	90003891 	.word	0x90003891
90003bac:	90003871 	.word	0x90003871

90003bb0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl()
{
90003bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003bb4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003bb8:	4607      	mov	r7, r0
90003bba:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003bbc:	68a0      	ldr	r0, [r4, #8]
90003bbe:	6803      	ldr	r3, [r0, #0]
90003bc0:	6a1b      	ldr	r3, [r3, #32]
90003bc2:	4798      	blx	r3
90003bc4:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003bc8:	f0c0 809e 	bcc.w	90003d08 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003bcc:	6860      	ldr	r0, [r4, #4]
90003bce:	6803      	ldr	r3, [r0, #0]
90003bd0:	6a1b      	ldr	r3, [r3, #32]
90003bd2:	4798      	blx	r3
90003bd4:	280f      	cmp	r0, #15
90003bd6:	f240 80a3 	bls.w	90003d20 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003bda:	68e0      	ldr	r0, [r4, #12]
90003bdc:	6803      	ldr	r3, [r0, #0]
90003bde:	6a1b      	ldr	r3, [r3, #32]
90003be0:	4798      	blx	r3
90003be2:	280b      	cmp	r0, #11
90003be4:	f240 8096 	bls.w	90003d14 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003be8:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003d4c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003bec:	f011 f8dc 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90003bf0:	3004      	adds	r0, #4
90003bf2:	f011 f8fe 	bl	90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003bf6:	f8d9 0000 	ldr.w	r0, [r9]
90003bfa:	b140      	cbz	r0, 90003c0e <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003bfc:	6803      	ldr	r3, [r0, #0]
90003bfe:	68db      	ldr	r3, [r3, #12]
90003c00:	4798      	blx	r3
    if (*currentTrans)
90003c02:	f8d9 0000 	ldr.w	r0, [r9]
90003c06:	b110      	cbz	r0, 90003c0e <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003c08:	6803      	ldr	r3, [r0, #0]
90003c0a:	681b      	ldr	r3, [r3, #0]
90003c0c:	4798      	blx	r3
    if (*currentScreen)
90003c0e:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003d50 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x1a0>
90003c12:	f8d8 0000 	ldr.w	r0, [r8]
90003c16:	2800      	cmp	r0, #0
90003c18:	d063      	beq.n	90003ce2 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003c1a:	6803      	ldr	r3, [r0, #0]
90003c1c:	695b      	ldr	r3, [r3, #20]
90003c1e:	4798      	blx	r3
    if (*currentPresenter)
90003c20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c24:	2800      	cmp	r0, #0
90003c26:	d057      	beq.n	90003cd8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003c28:	6803      	ldr	r3, [r0, #0]
90003c2a:	685b      	ldr	r3, [r3, #4]
90003c2c:	4798      	blx	r3
    if (*currentScreen)
90003c2e:	f8d8 0000 	ldr.w	r0, [r8]
90003c32:	b110      	cbz	r0, 90003c3a <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003c34:	6803      	ldr	r3, [r0, #0]
90003c36:	681b      	ldr	r3, [r3, #0]
90003c38:	4798      	blx	r3
    if (*currentPresenter)
90003c3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c3e:	b110      	cbz	r0, 90003c46 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003c40:	6803      	ldr	r3, [r0, #0]
90003c42:	689b      	ldr	r3, [r3, #8]
90003c44:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003c46:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003c48:	2100      	movs	r1, #0
90003c4a:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003c4c:	468b      	mov	fp, r1
90003c4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c50:	4798      	blx	r3
90003c52:	4b36      	ldr	r3, [pc, #216]	; (90003d2c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x17c>)
90003c54:	4605      	mov	r5, r0
90003c56:	f8c0 b004 	str.w	fp, [r0, #4]
90003c5a:	f880 b008 	strb.w	fp, [r0, #8]
90003c5e:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003c60:	68a0      	ldr	r0, [r4, #8]
90003c62:	602b      	str	r3, [r5, #0]
90003c64:	6803      	ldr	r3, [r0, #0]
90003c66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c68:	4798      	blx	r3
90003c6a:	4606      	mov	r6, r0
90003c6c:	f002 fd9e 	bl	900067ac <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003c70:	6860      	ldr	r0, [r4, #4]
90003c72:	4659      	mov	r1, fp
90003c74:	6803      	ldr	r3, [r0, #0]
90003c76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003c78:	4798      	blx	r3
90003c7a:	4604      	mov	r4, r0
90003c7c:	4631      	mov	r1, r6
90003c7e:	f002 fd69 	bl	90006754 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003c82:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003c86:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003c8a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003c8e:	2c00      	cmp	r4, #0
90003c90:	d02c      	beq.n	90003cec <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x13c>
90003c92:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90003c94:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003c98:	4630      	mov	r0, r6
90003c9a:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90003c9c:	f8c4 a008 	str.w	sl, [r4, #8]
90003ca0:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003ca2:	63f4      	str	r4, [r6, #60]	; 0x3c
90003ca4:	4798      	blx	r3
    newPresenter->activate();
90003ca6:	6823      	ldr	r3, [r4, #0]
90003ca8:	4620      	mov	r0, r4
90003caa:	681b      	ldr	r3, [r3, #0]
90003cac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003cae:	4629      	mov	r1, r5
90003cb0:	4630      	mov	r0, r6
90003cb2:	f012 fdf3 	bl	9001689c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003cb6:	682b      	ldr	r3, [r5, #0]
90003cb8:	491d      	ldr	r1, [pc, #116]	; (90003d30 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x180>)
90003cba:	691a      	ldr	r2, [r3, #16]
90003cbc:	428a      	cmp	r2, r1
90003cbe:	d117      	bne.n	90003cf0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003cc0:	695b      	ldr	r3, [r3, #20]
90003cc2:	4a1c      	ldr	r2, [pc, #112]	; (90003d34 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003cc4:	4293      	cmp	r3, r2
90003cc6:	d11a      	bne.n	90003cfe <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003cc8:	f011 f86e 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90003ccc:	6803      	ldr	r3, [r0, #0]
90003cce:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003cd0:	b001      	add	sp, #4
90003cd2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003cd6:	4718      	bx	r3
    if (*currentScreen)
90003cd8:	f8d8 0000 	ldr.w	r0, [r8]
90003cdc:	2800      	cmp	r0, #0
90003cde:	d1a9      	bne.n	90003c34 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x84>
90003ce0:	e7b1      	b.n	90003c46 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003ce2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003ce6:	2800      	cmp	r0, #0
90003ce8:	d19e      	bne.n	90003c28 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x78>
90003cea:	e7ac      	b.n	90003c46 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003cec:	4623      	mov	r3, r4
90003cee:	e7d1      	b.n	90003c94 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003cf0:	4628      	mov	r0, r5
90003cf2:	4790      	blx	r2
    newTransition->invalidate();
90003cf4:	682b      	ldr	r3, [r5, #0]
90003cf6:	4a0f      	ldr	r2, [pc, #60]	; (90003d34 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003cf8:	695b      	ldr	r3, [r3, #20]
90003cfa:	4293      	cmp	r3, r2
90003cfc:	d0e4      	beq.n	90003cc8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x118>
90003cfe:	4628      	mov	r0, r5
90003d00:	b001      	add	sp, #4
90003d02:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d06:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003d08:	4b0b      	ldr	r3, [pc, #44]	; (90003d38 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x188>)
90003d0a:	21a3      	movs	r1, #163	; 0xa3
90003d0c:	4a0b      	ldr	r2, [pc, #44]	; (90003d3c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d0e:	480c      	ldr	r0, [pc, #48]	; (90003d40 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d10:	f022 f9c6 	bl	900260a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d14:	4b0b      	ldr	r3, [pc, #44]	; (90003d44 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x194>)
90003d16:	21a5      	movs	r1, #165	; 0xa5
90003d18:	4a08      	ldr	r2, [pc, #32]	; (90003d3c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d1a:	4809      	ldr	r0, [pc, #36]	; (90003d40 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d1c:	f022 f9c0 	bl	900260a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003d20:	4b09      	ldr	r3, [pc, #36]	; (90003d48 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x198>)
90003d22:	21a4      	movs	r1, #164	; 0xa4
90003d24:	4a05      	ldr	r2, [pc, #20]	; (90003d3c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d26:	4806      	ldr	r0, [pc, #24]	; (90003d40 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d28:	f022 f9ba 	bl	900260a0 <__assert_func>
90003d2c:	90029368 	.word	0x90029368
90003d30:	90003831 	.word	0x90003831
90003d34:	900038f9 	.word	0x900038f9
90003d38:	90028d5c 	.word	0x90028d5c
90003d3c:	90028dec 	.word	0x90028dec
90003d40:	90028f08 	.word	0x90028f08
90003d44:	90028ff4 	.word	0x90028ff4
90003d48:	90028f50 	.word	0x90028f50
90003d4c:	240235b4 	.word	0x240235b4
90003d50:	240235b0 	.word	0x240235b0

90003d54 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl()
{
90003d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003d58:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003d5c:	4680      	mov	r8, r0
90003d5e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003d60:	68a0      	ldr	r0, [r4, #8]
90003d62:	6803      	ldr	r3, [r0, #0]
90003d64:	6a1b      	ldr	r3, [r3, #32]
90003d66:	4798      	blx	r3
90003d68:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003d6c:	f0c0 80e0 	bcc.w	90003f30 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1dc>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003d70:	6860      	ldr	r0, [r4, #4]
90003d72:	6803      	ldr	r3, [r0, #0]
90003d74:	6a1b      	ldr	r3, [r3, #32]
90003d76:	4798      	blx	r3
90003d78:	280f      	cmp	r0, #15
90003d7a:	f240 80e5 	bls.w	90003f48 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1f4>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d7e:	68e0      	ldr	r0, [r4, #12]
90003d80:	6803      	ldr	r3, [r0, #0]
90003d82:	6a1b      	ldr	r3, [r3, #32]
90003d84:	4798      	blx	r3
90003d86:	283f      	cmp	r0, #63	; 0x3f
90003d88:	f240 80d8 	bls.w	90003f3c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1e8>
    if (*currentTrans)
90003d8c:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 90003f88 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90003d90:	f011 f80a 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90003d94:	3004      	adds	r0, #4
90003d96:	f011 f82c 	bl	90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003d9a:	f8da 0000 	ldr.w	r0, [sl]
90003d9e:	b140      	cbz	r0, 90003db2 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90003da0:	6803      	ldr	r3, [r0, #0]
90003da2:	68db      	ldr	r3, [r3, #12]
90003da4:	4798      	blx	r3
    if (*currentTrans)
90003da6:	f8da 0000 	ldr.w	r0, [sl]
90003daa:	b110      	cbz	r0, 90003db2 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90003dac:	6803      	ldr	r3, [r0, #0]
90003dae:	681b      	ldr	r3, [r3, #0]
90003db0:	4798      	blx	r3
    if (*currentScreen)
90003db2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90003f8c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x238>
90003db6:	f8d9 0000 	ldr.w	r0, [r9]
90003dba:	2800      	cmp	r0, #0
90003dbc:	f000 80a4 	beq.w	90003f08 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1b4>
        (*currentScreen)->tearDownScreen();
90003dc0:	6803      	ldr	r3, [r0, #0]
90003dc2:	695b      	ldr	r3, [r3, #20]
90003dc4:	4798      	blx	r3
    if (*currentPresenter)
90003dc6:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003dca:	2800      	cmp	r0, #0
90003dcc:	f000 8081 	beq.w	90003ed2 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x17e>
        (*currentPresenter)->deactivate();
90003dd0:	6803      	ldr	r3, [r0, #0]
90003dd2:	685b      	ldr	r3, [r3, #4]
90003dd4:	4798      	blx	r3
    if (*currentScreen)
90003dd6:	f8d9 0000 	ldr.w	r0, [r9]
90003dda:	b110      	cbz	r0, 90003de2 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x8e>
        (*currentScreen)->~Screen();
90003ddc:	6803      	ldr	r3, [r0, #0]
90003dde:	681b      	ldr	r3, [r3, #0]
90003de0:	4798      	blx	r3
    if (*currentPresenter)
90003de2:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003de6:	b110      	cbz	r0, 90003dee <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90003de8:	6803      	ldr	r3, [r0, #0]
90003dea:	689b      	ldr	r3, [r3, #8]
90003dec:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003dee:	68e0      	ldr	r0, [r4, #12]
90003df0:	2100      	movs	r1, #0
90003df2:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003df4:	460f      	mov	r7, r1
90003df6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003df8:	4798      	blx	r3
          relativeValue(0)
90003dfa:	4b56      	ldr	r3, [pc, #344]	; (90003f54 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x200>)
90003dfc:	4606      	mov	r6, r0
90003dfe:	4605      	mov	r5, r0
90003e00:	6047      	str	r7, [r0, #4]
90003e02:	7207      	strb	r7, [r0, #8]
90003e04:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003e08:	4630      	mov	r0, r6
90003e0a:	f00d fbc5 	bl	90011598 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003e0e:	4b52      	ldr	r3, [pc, #328]	; (90003f58 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x204>)
          animationSteps(transitionSteps),
90003e10:	2214      	movs	r2, #20
          relativeValue(0)
90003e12:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003e14:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003e16:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003e18:	2b00      	cmp	r3, #0
90003e1a:	d166      	bne.n	90003eea <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x196>
            done = true;
90003e1c:	2301      	movs	r3, #1
90003e1e:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003e20:	68a0      	ldr	r0, [r4, #8]
90003e22:	2100      	movs	r1, #0
90003e24:	6803      	ldr	r3, [r0, #0]
90003e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e28:	4798      	blx	r3
90003e2a:	4607      	mov	r7, r0
90003e2c:	f002 fcbe 	bl	900067ac <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003e30:	6860      	ldr	r0, [r4, #4]
90003e32:	2100      	movs	r1, #0
90003e34:	6803      	ldr	r3, [r0, #0]
90003e36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e38:	4798      	blx	r3
90003e3a:	4604      	mov	r4, r0
90003e3c:	4639      	mov	r1, r7
90003e3e:	f002 fc89 	bl	90006754 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003e42:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003e46:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003e4a:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003e4e:	2c00      	cmp	r4, #0
90003e50:	d060      	beq.n	90003f14 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c0>
90003e52:	1d23      	adds	r3, r4, #4
90003e54:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003e58:	4638      	mov	r0, r7
90003e5a:	683b      	ldr	r3, [r7, #0]
90003e5c:	f8c4 b008 	str.w	fp, [r4, #8]
90003e60:	68db      	ldr	r3, [r3, #12]
90003e62:	63fc      	str	r4, [r7, #60]	; 0x3c
90003e64:	4798      	blx	r3
    newPresenter->activate();
90003e66:	6823      	ldr	r3, [r4, #0]
90003e68:	4620      	mov	r0, r4
90003e6a:	681b      	ldr	r3, [r3, #0]
90003e6c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003e6e:	4629      	mov	r1, r5
90003e70:	4638      	mov	r0, r7
90003e72:	f012 fd13 	bl	9001689c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003e76:	682b      	ldr	r3, [r5, #0]
90003e78:	4938      	ldr	r1, [pc, #224]	; (90003f5c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x208>)
90003e7a:	691a      	ldr	r2, [r3, #16]
90003e7c:	428a      	cmp	r2, r1
90003e7e:	d153      	bne.n	90003f28 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1d4>
        if (done)
90003e80:	7a2a      	ldrb	r2, [r5, #8]
90003e82:	b9d2      	cbnz	r2, 90003eba <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
90003e84:	6868      	ldr	r0, [r5, #4]
90003e86:	4a36      	ldr	r2, [pc, #216]	; (90003f60 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x20c>)
90003e88:	6803      	ldr	r3, [r0, #0]
90003e8a:	69db      	ldr	r3, [r3, #28]
90003e8c:	4293      	cmp	r3, r2
90003e8e:	d143      	bne.n	90003f18 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c4>
90003e90:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003e92:	b164      	cbz	r4, 90003eae <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003e94:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003e96:	4f33      	ldr	r7, [pc, #204]	; (90003f64 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x210>)
                d->setX(d->getX() - targetValue);
90003e98:	6823      	ldr	r3, [r4, #0]
90003e9a:	88a1      	ldrh	r1, [r4, #4]
90003e9c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003e9e:	1a89      	subs	r1, r1, r2
90003ea0:	42bb      	cmp	r3, r7
90003ea2:	b209      	sxth	r1, r1
90003ea4:	d11a      	bne.n	90003edc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x188>
        rect.x = x;
90003ea6:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003ea8:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003eaa:	2c00      	cmp	r4, #0
90003eac:	d1f4      	bne.n	90003e98 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        screenContainer->add(snapshot);
90003eae:	6868      	ldr	r0, [r5, #4]
90003eb0:	4631      	mov	r1, r6
90003eb2:	6803      	ldr	r3, [r0, #0]
90003eb4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003eb6:	4798      	blx	r3
    newTransition->invalidate();
90003eb8:	682b      	ldr	r3, [r5, #0]
90003eba:	695b      	ldr	r3, [r3, #20]
90003ebc:	4a2a      	ldr	r2, [pc, #168]	; (90003f68 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x214>)
90003ebe:	4293      	cmp	r3, r2
90003ec0:	d12d      	bne.n	90003f1e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1ca>
        Application::getInstance()->invalidate();
90003ec2:	f010 ff71 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90003ec6:	6803      	ldr	r3, [r0, #0]
90003ec8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003eca:	b001      	add	sp, #4
90003ecc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003ed0:	4718      	bx	r3
    if (*currentScreen)
90003ed2:	f8d9 0000 	ldr.w	r0, [r9]
90003ed6:	2800      	cmp	r0, #0
90003ed8:	d180      	bne.n	90003ddc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x88>
90003eda:	e788      	b.n	90003dee <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90003edc:	4620      	mov	r0, r4
90003ede:	4798      	blx	r3
90003ee0:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ee2:	2c00      	cmp	r4, #0
90003ee4:	d0e3      	beq.n	90003eae <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003ee6:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003ee8:	e7d6      	b.n	90003e98 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003eea:	4b20      	ldr	r3, [pc, #128]	; (90003f6c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x218>)
        snapshot.makeSnapshot();
90003eec:	4630      	mov	r0, r6
        rect.x = x;
90003eee:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003ef0:	f9b3 3000 	ldrsh.w	r3, [r3]
90003ef4:	4f1e      	ldr	r7, [pc, #120]	; (90003f70 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x21c>)
        rect.height = height;
90003ef6:	82eb      	strh	r3, [r5, #22]
90003ef8:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003efc:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003efe:	f00d fac6 	bl	9001148e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
90003f02:	883b      	ldrh	r3, [r7, #0]
90003f04:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003f06:	e78b      	b.n	90003e20 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0xcc>
    if (*currentPresenter)
90003f08:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f0c:	2800      	cmp	r0, #0
90003f0e:	f47f af5f 	bne.w	90003dd0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x7c>
90003f12:	e76c      	b.n	90003dee <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
    model->bind(newPresenter);
90003f14:	4623      	mov	r3, r4
90003f16:	e79d      	b.n	90003e54 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90003f18:	4798      	blx	r3
90003f1a:	4604      	mov	r4, r0
90003f1c:	e7b9      	b.n	90003e92 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x13e>
    newTransition->invalidate();
90003f1e:	4628      	mov	r0, r5
90003f20:	b001      	add	sp, #4
90003f22:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f26:	4718      	bx	r3
    newTransition->init();
90003f28:	4628      	mov	r0, r5
90003f2a:	4790      	blx	r2
    newTransition->invalidate();
90003f2c:	682b      	ldr	r3, [r5, #0]
90003f2e:	e7c4      	b.n	90003eba <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f30:	4b10      	ldr	r3, [pc, #64]	; (90003f74 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x220>)
90003f32:	21a3      	movs	r1, #163	; 0xa3
90003f34:	4a10      	ldr	r2, [pc, #64]	; (90003f78 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003f36:	4811      	ldr	r0, [pc, #68]	; (90003f7c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003f38:	f022 f8b2 	bl	900260a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003f3c:	4b10      	ldr	r3, [pc, #64]	; (90003f80 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x22c>)
90003f3e:	21a5      	movs	r1, #165	; 0xa5
90003f40:	4a0d      	ldr	r2, [pc, #52]	; (90003f78 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003f42:	480e      	ldr	r0, [pc, #56]	; (90003f7c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003f44:	f022 f8ac 	bl	900260a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003f48:	4b0e      	ldr	r3, [pc, #56]	; (90003f84 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x230>)
90003f4a:	21a4      	movs	r1, #164	; 0xa4
90003f4c:	4a0a      	ldr	r2, [pc, #40]	; (90003f78 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003f4e:	480b      	ldr	r0, [pc, #44]	; (90003f7c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003f50:	f022 f8a6 	bl	900260a0 <__assert_func>
90003f54:	9002938c 	.word	0x9002938c
90003f58:	2402356b 	.word	0x2402356b
90003f5c:	90003ad9 	.word	0x90003ad9
90003f60:	90003829 	.word	0x90003829
90003f64:	900023fd 	.word	0x900023fd
90003f68:	900038f9 	.word	0x900038f9
90003f6c:	24023562 	.word	0x24023562
90003f70:	24023560 	.word	0x24023560
90003f74:	90028d5c 	.word	0x90028d5c
90003f78:	90029098 	.word	0x90029098
90003f7c:	90028f08 	.word	0x90028f08
90003f80:	90028ff4 	.word	0x90028ff4
90003f84:	90028f50 	.word	0x90028f50
90003f88:	240235b4 	.word	0x240235b4
90003f8c:	240235b0 	.word	0x240235b0

90003f90 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv>:
{
90003f90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_asteroidsView, screen_asteroidsPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003f94:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003f98:	4680      	mov	r8, r0
90003f9a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003f9c:	68a0      	ldr	r0, [r4, #8]
90003f9e:	6803      	ldr	r3, [r0, #0]
90003fa0:	6a1b      	ldr	r3, [r3, #32]
90003fa2:	4798      	blx	r3
90003fa4:	f242 4397 	movw	r3, #9367	; 0x2497
90003fa8:	4298      	cmp	r0, r3
90003faa:	f240 80e1 	bls.w	90004170 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003fae:	6860      	ldr	r0, [r4, #4]
90003fb0:	6803      	ldr	r3, [r0, #0]
90003fb2:	6a1b      	ldr	r3, [r3, #32]
90003fb4:	4798      	blx	r3
90003fb6:	281b      	cmp	r0, #27
90003fb8:	f240 80e6 	bls.w	90004188 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003fbc:	68e0      	ldr	r0, [r4, #12]
90003fbe:	6803      	ldr	r3, [r0, #0]
90003fc0:	6a1b      	ldr	r3, [r3, #32]
90003fc2:	4798      	blx	r3
90003fc4:	283f      	cmp	r0, #63	; 0x3f
90003fc6:	f240 80d9 	bls.w	9000417c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
90003fca:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 900041c8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90003fce:	f010 feeb 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90003fd2:	3004      	adds	r0, #4
90003fd4:	f010 ff0d 	bl	90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003fd8:	f8da 0000 	ldr.w	r0, [sl]
90003fdc:	b140      	cbz	r0, 90003ff0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90003fde:	6803      	ldr	r3, [r0, #0]
90003fe0:	68db      	ldr	r3, [r3, #12]
90003fe2:	4798      	blx	r3
    if (*currentTrans)
90003fe4:	f8da 0000 	ldr.w	r0, [sl]
90003fe8:	b110      	cbz	r0, 90003ff0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
90003fea:	6803      	ldr	r3, [r0, #0]
90003fec:	681b      	ldr	r3, [r3, #0]
90003fee:	4798      	blx	r3
    if (*currentScreen)
90003ff0:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 900041cc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x23c>
90003ff4:	f8d9 0000 	ldr.w	r0, [r9]
90003ff8:	2800      	cmp	r0, #0
90003ffa:	f000 80a5 	beq.w	90004148 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90003ffe:	6803      	ldr	r3, [r0, #0]
90004000:	695b      	ldr	r3, [r3, #20]
90004002:	4798      	blx	r3
    if (*currentPresenter)
90004004:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004008:	2800      	cmp	r0, #0
9000400a:	f000 8081 	beq.w	90004110 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
9000400e:	6803      	ldr	r3, [r0, #0]
90004010:	685b      	ldr	r3, [r3, #4]
90004012:	4798      	blx	r3
    if (*currentScreen)
90004014:	f8d9 0000 	ldr.w	r0, [r9]
90004018:	b110      	cbz	r0, 90004020 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
9000401a:	6803      	ldr	r3, [r0, #0]
9000401c:	681b      	ldr	r3, [r3, #0]
9000401e:	4798      	blx	r3
    if (*currentPresenter)
90004020:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004024:	b110      	cbz	r0, 9000402c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
90004026:	6803      	ldr	r3, [r0, #0]
90004028:	689b      	ldr	r3, [r3, #8]
9000402a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
9000402c:	68e0      	ldr	r0, [r4, #12]
9000402e:	2100      	movs	r1, #0
90004030:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90004032:	460f      	mov	r7, r1
90004034:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004036:	4798      	blx	r3
          relativeValue(0)
90004038:	4b56      	ldr	r3, [pc, #344]	; (90004194 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x204>)
9000403a:	4606      	mov	r6, r0
9000403c:	4605      	mov	r5, r0
9000403e:	6047      	str	r7, [r0, #4]
90004040:	7207      	strb	r7, [r0, #8]
90004042:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90004046:	4630      	mov	r0, r6
90004048:	f00d faa6 	bl	90011598 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
9000404c:	4b52      	ldr	r3, [pc, #328]	; (90004198 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
9000404e:	2214      	movs	r2, #20
          relativeValue(0)
90004050:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90004052:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90004054:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90004056:	2b00      	cmp	r3, #0
90004058:	d166      	bne.n	90004128 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x198>
            done = true;
9000405a:	2301      	movs	r3, #1
9000405c:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
9000405e:	68a0      	ldr	r0, [r4, #8]
90004060:	2100      	movs	r1, #0
90004062:	6803      	ldr	r3, [r0, #0]
90004064:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004066:	4798      	blx	r3
90004068:	4607      	mov	r7, r0
9000406a:	f002 f9ab 	bl	900063c4 <_ZN20screen_asteroidsViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
9000406e:	6860      	ldr	r0, [r4, #4]
90004070:	2100      	movs	r1, #0
90004072:	6803      	ldr	r3, [r0, #0]
90004074:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90004076:	4798      	blx	r3
90004078:	4604      	mov	r4, r0
9000407a:	4639      	mov	r1, r7
9000407c:	f001 ff96 	bl	90005fac <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>
    *currentTrans = newTransition;
90004080:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90004084:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90004088:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
9000408c:	2c00      	cmp	r4, #0
9000408e:	d061      	beq.n	90004154 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c4>
90004090:	1d23      	adds	r3, r4, #4
90004092:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90004096:	4638      	mov	r0, r7
90004098:	683b      	ldr	r3, [r7, #0]
9000409a:	f8c4 b008 	str.w	fp, [r4, #8]
9000409e:	68db      	ldr	r3, [r3, #12]
900040a0:	63fc      	str	r4, [r7, #60]	; 0x3c
900040a2:	4798      	blx	r3
    newPresenter->activate();
900040a4:	6823      	ldr	r3, [r4, #0]
900040a6:	4620      	mov	r0, r4
900040a8:	681b      	ldr	r3, [r3, #0]
900040aa:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
900040ac:	4629      	mov	r1, r5
900040ae:	4638      	mov	r0, r7
900040b0:	f012 fbf4 	bl	9001689c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
900040b4:	682b      	ldr	r3, [r5, #0]
900040b6:	4939      	ldr	r1, [pc, #228]	; (9000419c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x20c>)
900040b8:	691a      	ldr	r2, [r3, #16]
900040ba:	428a      	cmp	r2, r1
900040bc:	d154      	bne.n	90004168 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
900040be:	7a2a      	ldrb	r2, [r5, #8]
900040c0:	b9d2      	cbnz	r2, 900040f8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
900040c2:	6868      	ldr	r0, [r5, #4]
900040c4:	4a36      	ldr	r2, [pc, #216]	; (900041a0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x210>)
900040c6:	6803      	ldr	r3, [r0, #0]
900040c8:	69db      	ldr	r3, [r3, #28]
900040ca:	4293      	cmp	r3, r2
900040cc:	d144      	bne.n	90004158 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c8>
900040ce:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
900040d0:	b164      	cbz	r4, 900040ec <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
900040d2:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
900040d4:	4f33      	ldr	r7, [pc, #204]	; (900041a4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
900040d6:	6823      	ldr	r3, [r4, #0]
900040d8:	88a1      	ldrh	r1, [r4, #4]
900040da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900040dc:	1a89      	subs	r1, r1, r2
900040de:	42bb      	cmp	r3, r7
900040e0:	b209      	sxth	r1, r1
900040e2:	d11a      	bne.n	9000411a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
900040e4:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
900040e6:	69a4      	ldr	r4, [r4, #24]
        while (d)
900040e8:	2c00      	cmp	r4, #0
900040ea:	d1f4      	bne.n	900040d6 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
900040ec:	6868      	ldr	r0, [r5, #4]
900040ee:	4631      	mov	r1, r6
900040f0:	6803      	ldr	r3, [r0, #0]
900040f2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900040f4:	4798      	blx	r3
    newTransition->invalidate();
900040f6:	682b      	ldr	r3, [r5, #0]
900040f8:	695b      	ldr	r3, [r3, #20]
900040fa:	4a2b      	ldr	r2, [pc, #172]	; (900041a8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x218>)
900040fc:	4293      	cmp	r3, r2
900040fe:	d12e      	bne.n	9000415e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90004100:	f010 fe52 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90004104:	6803      	ldr	r3, [r0, #0]
90004106:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90004108:	b001      	add	sp, #4
9000410a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000410e:	4718      	bx	r3
    if (*currentScreen)
90004110:	f8d9 0000 	ldr.w	r0, [r9]
90004114:	2800      	cmp	r0, #0
90004116:	d180      	bne.n	9000401a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x8a>
90004118:	e788      	b.n	9000402c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
9000411a:	4620      	mov	r0, r4
9000411c:	4798      	blx	r3
9000411e:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004120:	2c00      	cmp	r4, #0
90004122:	d0e3      	beq.n	900040ec <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
90004124:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004126:	e7d6      	b.n	900040d6 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90004128:	4b20      	ldr	r3, [pc, #128]	; (900041ac <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
9000412a:	4630      	mov	r0, r6
        rect.x = x;
9000412c:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000412e:	f9b3 3000 	ldrsh.w	r3, [r3]
90004132:	4f1f      	ldr	r7, [pc, #124]	; (900041b0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
90004134:	82eb      	strh	r3, [r5, #22]
90004136:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
9000413a:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
9000413c:	f00d f9a7 	bl	9001148e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
90004140:	883b      	ldrh	r3, [r7, #0]
90004142:	425b      	negs	r3, r3
90004144:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90004146:	e78a      	b.n	9000405e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
90004148:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000414c:	2800      	cmp	r0, #0
9000414e:	f47f af5e 	bne.w	9000400e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x7e>
90004152:	e76b      	b.n	9000402c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
90004154:	4623      	mov	r3, r4
90004156:	e79c      	b.n	90004092 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
90004158:	4798      	blx	r3
9000415a:	4604      	mov	r4, r0
9000415c:	e7b8      	b.n	900040d0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
9000415e:	4628      	mov	r0, r5
90004160:	b001      	add	sp, #4
90004162:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004166:	4718      	bx	r3
    newTransition->init();
90004168:	4628      	mov	r0, r5
9000416a:	4790      	blx	r2
    newTransition->invalidate();
9000416c:	682b      	ldr	r3, [r5, #0]
9000416e:	e7c3      	b.n	900040f8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004170:	4b10      	ldr	r3, [pc, #64]	; (900041b4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x224>)
90004172:	21a3      	movs	r1, #163	; 0xa3
90004174:	4a10      	ldr	r2, [pc, #64]	; (900041b8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
90004176:	4811      	ldr	r0, [pc, #68]	; (900041bc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
90004178:	f021 ff92 	bl	900260a0 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
9000417c:	4b10      	ldr	r3, [pc, #64]	; (900041c0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x230>)
9000417e:	21a5      	movs	r1, #165	; 0xa5
90004180:	4a0d      	ldr	r2, [pc, #52]	; (900041b8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
90004182:	480e      	ldr	r0, [pc, #56]	; (900041bc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
90004184:	f021 ff8c 	bl	900260a0 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004188:	4b0e      	ldr	r3, [pc, #56]	; (900041c4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x234>)
9000418a:	21a4      	movs	r1, #164	; 0xa4
9000418c:	4a0a      	ldr	r2, [pc, #40]	; (900041b8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
9000418e:	480b      	ldr	r0, [pc, #44]	; (900041bc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
90004190:	f021 ff86 	bl	900260a0 <__assert_func>
90004194:	900293b0 	.word	0x900293b0
90004198:	2402356b 	.word	0x2402356b
9000419c:	90003a79 	.word	0x90003a79
900041a0:	90003829 	.word	0x90003829
900041a4:	900023fd 	.word	0x900023fd
900041a8:	900038f9 	.word	0x900038f9
900041ac:	24023562 	.word	0x24023562
900041b0:	24023560 	.word	0x24023560
900041b4:	90028d5c 	.word	0x90028d5c
900041b8:	900291c8 	.word	0x900291c8
900041bc:	90028f08 	.word	0x90028f08
900041c0:	90028ff4 	.word	0x90028ff4
900041c4:	90028f50 	.word	0x90028f50
900041c8:	240235b4 	.word	0x240235b4
900041cc:	240235b0 	.word	0x240235b0

900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
900041d0:	b570      	push	{r4, r5, r6, lr}
900041d2:	4604      	mov	r4, r0
900041d4:	4615      	mov	r5, r2
900041d6:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
900041d8:	f010 feac 	bl	90014f34 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
900041dc:	4a1d      	ldr	r2, [pc, #116]	; (90004254 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
900041de:	2300      	movs	r3, #0
      frontendHeap(heap),
900041e0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
900041e4:	6014      	str	r4, [r2, #0]
        return instance;
900041e6:	4d1c      	ldr	r5, [pc, #112]	; (90004258 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
900041e8:	4a1c      	ldr	r2, [pc, #112]	; (9000425c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
900041ea:	6828      	ldr	r0, [r5, #0]
900041ec:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
900041ee:	4a1c      	ldr	r2, [pc, #112]	; (90004260 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
900041f0:	491c      	ldr	r1, [pc, #112]	; (90004264 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
900041f2:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
900041f6:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
900041fa:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
900041fe:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004202:	6802      	ldr	r2, [r0, #0]
90004204:	6892      	ldr	r2, [r2, #8]
90004206:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
90004208:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
9000420c:	d11f      	bne.n	9000424e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
9000420e:	f44f 7380 	mov.w	r3, #256	; 0x100
90004212:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
90004216:	2000      	movs	r0, #0
90004218:	f000 fa04 	bl	90004624 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000421c:	682b      	ldr	r3, [r5, #0]
9000421e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004222:	b192      	cbz	r2, 9000424a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90004224:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004226:	b180      	cbz	r0, 9000424a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90004228:	f019 fff3 	bl	9001e212 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
9000422c:	682b      	ldr	r3, [r5, #0]
9000422e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004232:	b12a      	cbz	r2, 90004240 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
90004234:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004236:	b118      	cbz	r0, 90004240 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004238:	f01a f866 	bl	9001e308 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
9000423c:	4620      	mov	r0, r4
9000423e:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90004240:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90004242:	f01a f861 	bl	9001e308 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
90004246:	4620      	mov	r0, r4
90004248:	bd70      	pop	{r4, r5, r6, pc}
9000424a:	6898      	ldr	r0, [r3, #8]
9000424c:	e7ec      	b.n	90004228 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000424e:	4619      	mov	r1, r3
90004250:	4790      	blx	r2
90004252:	e7e0      	b.n	90004216 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
90004254:	240235c0 	.word	0x240235c0
90004258:	2402356c 	.word	0x2402356c
9000425c:	90029314 	.word	0x90029314
90004260:	900292fc 	.word	0x900292fc
90004264:	90000665 	.word	0x90000665

90004268 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004268:	4905      	ldr	r1, [pc, #20]	; (90004280 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv+0x18>)
9000426a:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
9000426c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004270:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004274:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004278:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000427c:	4770      	bx	lr
9000427e:	bf00      	nop
90004280:	90003f91 	.word	0x90003f91

90004284 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>:
90004284:	4905      	ldr	r1, [pc, #20]	; (9000429c <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv+0x18>)
90004286:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004288:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000428c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004290:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004294:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004298:	4770      	bx	lr
9000429a:	bf00      	nop
9000429c:	90003bb1 	.word	0x90003bb1

900042a0 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>:
900042a0:	4905      	ldr	r1, [pc, #20]	; (900042b8 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv+0x18>)
900042a2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042a4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042a8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042ac:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900042b0:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900042b4:	4770      	bx	lr
900042b6:	bf00      	nop
900042b8:	90003d55 	.word	0x90003d55

900042bc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
900042bc:	6a40      	ldr	r0, [r0, #36]	; 0x24
900042be:	4770      	bx	lr

900042c0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
900042c0:	6a80      	ldr	r0, [r0, #40]	; 0x28
900042c2:	4770      	bx	lr

900042c4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
900042c4:	4770      	bx	lr
900042c6:	bf00      	nop

900042c8 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
900042c8:	888b      	ldrh	r3, [r1, #4]
900042ca:	69c0      	ldr	r0, [r0, #28]
900042cc:	0adb      	lsrs	r3, r3, #11
900042ce:	680a      	ldr	r2, [r1, #0]
900042d0:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
900042d4:	4410      	add	r0, r2
900042d6:	4770      	bx	lr

900042d8 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
900042d8:	b1da      	cbz	r2, 90004312 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
900042da:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
900042dc:	7b14      	ldrb	r4, [r2, #12]
900042de:	b1b4      	cbz	r4, 9000430e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
900042e0:	f892 c00d 	ldrb.w	ip, [r2, #13]
900042e4:	f892 e00b 	ldrb.w	lr, [r2, #11]
900042e8:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
900042ec:	6a03      	ldr	r3, [r0, #32]
900042ee:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
900042f2:	ea4e 0202 	orr.w	r2, lr, r2
900042f6:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
900042fa:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
900042fe:	881a      	ldrh	r2, [r3, #0]
90004300:	428a      	cmp	r2, r1
90004302:	d008      	beq.n	90004316 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004304:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
90004308:	d801      	bhi.n	9000430e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000430a:	4283      	cmp	r3, r0
9000430c:	d1f7      	bne.n	900042fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
9000430e:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90004310:	bd10      	pop	{r4, pc}
        return 0;
90004312:	4610      	mov	r0, r2
}
90004314:	4770      	bx	lr
            return kerndata->distance;
90004316:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
9000431a:	bd10      	pop	{r4, pc}

9000431c <_ZN8touchgfx13GeneratedFontD0Ev>:
9000431c:	b510      	push	{r4, lr}
9000431e:	4604      	mov	r4, r0
90004320:	212c      	movs	r1, #44	; 0x2c
90004322:	f021 fe8e 	bl	90026042 <_ZdlPvj>
90004326:	4620      	mov	r0, r4
90004328:	bd10      	pop	{r4, pc}
9000432a:	bf00      	nop

9000432c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000432c:	b530      	push	{r4, r5, lr}
9000432e:	b08b      	sub	sp, #44	; 0x2c
90004330:	4604      	mov	r4, r0
90004332:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
90004336:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004338:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
9000433c:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000433e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
90004342:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004344:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
90004348:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000434a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
9000434e:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004350:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
90004354:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004356:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
9000435a:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000435c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
90004360:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90004362:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
90004366:	9508      	str	r5, [sp, #32]
90004368:	f011 fe44 	bl	90015ff4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
9000436c:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
9000436e:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
90004370:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
90004372:	9b16      	ldr	r3, [sp, #88]	; 0x58
90004374:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
90004376:	9b19      	ldr	r3, [sp, #100]	; 0x64
90004378:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
9000437a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9000437c:	62a3      	str	r3, [r4, #40]	; 0x28
9000437e:	4b02      	ldr	r3, [pc, #8]	; (90004388 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
90004380:	6023      	str	r3, [r4, #0]
}
90004382:	b00b      	add	sp, #44	; 0x2c
90004384:	bd30      	pop	{r4, r5, pc}
90004386:	bf00      	nop
90004388:	900293d4 	.word	0x900293d4

9000438c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000438c:	4770      	bx	lr
9000438e:	bf00      	nop

90004390 <_Z23getFont_verdana_10_4bppv>:
{
90004390:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004392:	4d19      	ldr	r5, [pc, #100]	; (900043f8 <_Z23getFont_verdana_10_4bppv+0x68>)
{
90004394:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004396:	682c      	ldr	r4, [r5, #0]
90004398:	f3bf 8f5b 	dmb	ish
9000439c:	f014 0401 	ands.w	r4, r4, #1
900043a0:	d002      	beq.n	900043a8 <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
900043a2:	4816      	ldr	r0, [pc, #88]	; (900043fc <_Z23getFont_verdana_10_4bppv+0x6c>)
900043a4:	b00f      	add	sp, #60	; 0x3c
900043a6:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
900043a8:	4628      	mov	r0, r5
900043aa:	f021 fe4c 	bl	90026046 <__cxa_guard_acquire>
900043ae:	2800      	cmp	r0, #0
900043b0:	d0f7      	beq.n	900043a2 <_Z23getFont_verdana_10_4bppv+0x12>
900043b2:	213f      	movs	r1, #63	; 0x3f
900043b4:	4b12      	ldr	r3, [pc, #72]	; (90004400 <_Z23getFont_verdana_10_4bppv+0x70>)
900043b6:	2201      	movs	r2, #1
900043b8:	200a      	movs	r0, #10
900043ba:	9308      	str	r3, [sp, #32]
900043bc:	2304      	movs	r3, #4
900043be:	9000      	str	r0, [sp, #0]
900043c0:	480e      	ldr	r0, [pc, #56]	; (900043fc <_Z23getFont_verdana_10_4bppv+0x6c>)
900043c2:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900043c6:	490f      	ldr	r1, [pc, #60]	; (90004404 <_Z23getFont_verdana_10_4bppv+0x74>)
900043c8:	e9cd 3203 	strd	r3, r2, [sp, #12]
900043cc:	e9cd 2205 	strd	r2, r2, [sp, #20]
900043d0:	230c      	movs	r3, #12
900043d2:	9107      	str	r1, [sp, #28]
900043d4:	490c      	ldr	r1, [pc, #48]	; (90004408 <_Z23getFont_verdana_10_4bppv+0x78>)
900043d6:	e9cd 2401 	strd	r2, r4, [sp, #4]
900043da:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900043de:	22be      	movs	r2, #190	; 0xbe
900043e0:	f7ff ffa4 	bl	9000432c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900043e4:	4809      	ldr	r0, [pc, #36]	; (9000440c <_Z23getFont_verdana_10_4bppv+0x7c>)
900043e6:	f021 fe79 	bl	900260dc <atexit>
900043ea:	4628      	mov	r0, r5
900043ec:	f021 fe37 	bl	9002605e <__cxa_guard_release>
}
900043f0:	4802      	ldr	r0, [pc, #8]	; (900043fc <_Z23getFont_verdana_10_4bppv+0x6c>)
900043f2:	b00f      	add	sp, #60	; 0x3c
900043f4:	bd30      	pop	{r4, r5, pc}
900043f6:	bf00      	nop
900043f8:	240094b4 	.word	0x240094b4
900043fc:	240094b8 	.word	0x240094b8
90004400:	9002aa60 	.word	0x9002aa60
90004404:	9002b0ac 	.word	0x9002b0ac
90004408:	902138ec 	.word	0x902138ec
9000440c:	9000438d 	.word	0x9000438d

90004410 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004410:	4770      	bx	lr
90004412:	bf00      	nop

90004414 <_Z23getFont_verdana_20_4bppv>:
{
90004414:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004416:	4d19      	ldr	r5, [pc, #100]	; (9000447c <_Z23getFont_verdana_20_4bppv+0x68>)
{
90004418:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000441a:	682c      	ldr	r4, [r5, #0]
9000441c:	f3bf 8f5b 	dmb	ish
90004420:	f014 0401 	ands.w	r4, r4, #1
90004424:	d002      	beq.n	9000442c <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
90004426:	4816      	ldr	r0, [pc, #88]	; (90004480 <_Z23getFont_verdana_20_4bppv+0x6c>)
90004428:	b00f      	add	sp, #60	; 0x3c
9000442a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000442c:	4628      	mov	r0, r5
9000442e:	f021 fe0a 	bl	90026046 <__cxa_guard_acquire>
90004432:	2800      	cmp	r0, #0
90004434:	d0f7      	beq.n	90004426 <_Z23getFont_verdana_20_4bppv+0x12>
90004436:	213f      	movs	r1, #63	; 0x3f
90004438:	4a12      	ldr	r2, [pc, #72]	; (90004484 <_Z23getFont_verdana_20_4bppv+0x70>)
9000443a:	2301      	movs	r3, #1
9000443c:	2014      	movs	r0, #20
9000443e:	9208      	str	r2, [sp, #32]
90004440:	2204      	movs	r2, #4
90004442:	9304      	str	r3, [sp, #16]
90004444:	9000      	str	r0, [sp, #0]
90004446:	9401      	str	r4, [sp, #4]
90004448:	480d      	ldr	r0, [pc, #52]	; (90004480 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000444a:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000444e:	490e      	ldr	r1, [pc, #56]	; (90004488 <_Z23getFont_verdana_20_4bppv+0x74>)
90004450:	e9cd 3305 	strd	r3, r3, [sp, #20]
90004454:	9107      	str	r1, [sp, #28]
90004456:	2319      	movs	r3, #25
90004458:	490c      	ldr	r1, [pc, #48]	; (9000448c <_Z23getFont_verdana_20_4bppv+0x78>)
9000445a:	e9cd 4202 	strd	r4, r2, [sp, #8]
9000445e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004462:	22be      	movs	r2, #190	; 0xbe
90004464:	f7ff ff62 	bl	9000432c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004468:	4809      	ldr	r0, [pc, #36]	; (90004490 <_Z23getFont_verdana_20_4bppv+0x7c>)
9000446a:	f021 fe37 	bl	900260dc <atexit>
9000446e:	4628      	mov	r0, r5
90004470:	f021 fdf5 	bl	9002605e <__cxa_guard_release>
}
90004474:	4802      	ldr	r0, [pc, #8]	; (90004480 <_Z23getFont_verdana_20_4bppv+0x6c>)
90004476:	b00f      	add	sp, #60	; 0x3c
90004478:	bd30      	pop	{r4, r5, pc}
9000447a:	bf00      	nop
9000447c:	240094e4 	.word	0x240094e4
90004480:	240094e8 	.word	0x240094e8
90004484:	9002aa94 	.word	0x9002aa94
90004488:	9002b0b0 	.word	0x9002b0b0
9000448c:	90214350 	.word	0x90214350
90004490:	90004411 	.word	0x90004411

90004494 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004494:	4770      	bx	lr
90004496:	bf00      	nop

90004498 <_Z23getFont_verdana_40_4bppv>:
{
90004498:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000449a:	4d19      	ldr	r5, [pc, #100]	; (90004500 <_Z23getFont_verdana_40_4bppv+0x68>)
{
9000449c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000449e:	682c      	ldr	r4, [r5, #0]
900044a0:	f3bf 8f5b 	dmb	ish
900044a4:	f014 0401 	ands.w	r4, r4, #1
900044a8:	d002      	beq.n	900044b0 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
900044aa:	4816      	ldr	r0, [pc, #88]	; (90004504 <_Z23getFont_verdana_40_4bppv+0x6c>)
900044ac:	b00f      	add	sp, #60	; 0x3c
900044ae:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
900044b0:	4628      	mov	r0, r5
900044b2:	f021 fdc8 	bl	90026046 <__cxa_guard_acquire>
900044b6:	2800      	cmp	r0, #0
900044b8:	d0f7      	beq.n	900044aa <_Z23getFont_verdana_40_4bppv+0x12>
900044ba:	2302      	movs	r3, #2
900044bc:	223f      	movs	r2, #63	; 0x3f
900044be:	4812      	ldr	r0, [pc, #72]	; (90004508 <_Z23getFont_verdana_40_4bppv+0x70>)
900044c0:	2101      	movs	r1, #1
900044c2:	9402      	str	r4, [sp, #8]
900044c4:	9008      	str	r0, [sp, #32]
900044c6:	2028      	movs	r0, #40	; 0x28
900044c8:	e9cd 2409 	strd	r2, r4, [sp, #36]	; 0x24
900044cc:	e9cd 3305 	strd	r3, r3, [sp, #20]
900044d0:	2204      	movs	r2, #4
900044d2:	4b0e      	ldr	r3, [pc, #56]	; (9000450c <_Z23getFont_verdana_40_4bppv+0x74>)
900044d4:	e9cd 2103 	strd	r2, r1, [sp, #12]
900044d8:	e9cd 0100 	strd	r0, r1, [sp]
900044dc:	22be      	movs	r2, #190	; 0xbe
900044de:	490c      	ldr	r1, [pc, #48]	; (90004510 <_Z23getFont_verdana_40_4bppv+0x78>)
900044e0:	9307      	str	r3, [sp, #28]
900044e2:	2330      	movs	r3, #48	; 0x30
900044e4:	4807      	ldr	r0, [pc, #28]	; (90004504 <_Z23getFont_verdana_40_4bppv+0x6c>)
900044e6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900044ea:	f7ff ff1f 	bl	9000432c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900044ee:	4809      	ldr	r0, [pc, #36]	; (90004514 <_Z23getFont_verdana_40_4bppv+0x7c>)
900044f0:	f021 fdf4 	bl	900260dc <atexit>
900044f4:	4628      	mov	r0, r5
900044f6:	f021 fdb2 	bl	9002605e <__cxa_guard_release>
}
900044fa:	4802      	ldr	r0, [pc, #8]	; (90004504 <_Z23getFont_verdana_40_4bppv+0x6c>)
900044fc:	b00f      	add	sp, #60	; 0x3c
900044fe:	bd30      	pop	{r4, r5, pc}
90004500:	24009514 	.word	0x24009514
90004504:	24009518 	.word	0x24009518
90004508:	9002aca8 	.word	0x9002aca8
9000450c:	9002b0b4 	.word	0x9002b0b4
90004510:	90214db4 	.word	0x90214db4
90004514:	90004495 	.word	0x90004495

90004518 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90004518:	2000      	movs	r0, #0
9000451a:	4770      	bx	lr

9000451c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
9000451c:	2000      	movs	r0, #0
9000451e:	4770      	bx	lr

90004520 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004520:	b40e      	push	{r1, r2, r3}
90004522:	b500      	push	{lr}
90004524:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004526:	2100      	movs	r1, #0
{
90004528:	ab03      	add	r3, sp, #12
9000452a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
9000452e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90004530:	f011 fb88 	bl	90015c44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004534:	b002      	add	sp, #8
90004536:	f85d eb04 	ldr.w	lr, [sp], #4
9000453a:	b003      	add	sp, #12
9000453c:	4770      	bx	lr
9000453e:	bf00      	nop

90004540 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004540:	b40c      	push	{r2, r3}
90004542:	b500      	push	{lr}
90004544:	b083      	sub	sp, #12
90004546:	ab04      	add	r3, sp, #16
90004548:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
9000454c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
9000454e:	f011 fb79 	bl	90015c44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
90004552:	b003      	add	sp, #12
90004554:	f85d eb04 	ldr.w	lr, [sp], #4
90004558:	b002      	add	sp, #8
9000455a:	4770      	bx	lr

9000455c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
9000455c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
9000455e:	b510      	push	{r4, lr}
90004560:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
90004562:	b133      	cbz	r3, 90004572 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
90004564:	8f03      	ldrh	r3, [r0, #56]	; 0x38
90004566:	b39b      	cbz	r3, 900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90004568:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9000456a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9000456e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
90004570:	b923      	cbnz	r3, 9000457c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
90004572:	4620      	mov	r0, r4
}
90004574:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90004578:	f012 bdf6 	b.w	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
9000457c:	f012 fef2 	bl	90017364 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90004580:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90004582:	2b01      	cmp	r3, #1
90004584:	d92a      	bls.n	900045dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
90004586:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90004588:	1c53      	adds	r3, r2, #1
9000458a:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
9000458c:	2b09      	cmp	r3, #9
9000458e:	d812      	bhi.n	900045b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004590:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004594:	f640 103f 	movw	r0, #2367	; 0x93f
90004598:	8c49      	ldrh	r1, [r1, #34]	; 0x22
9000459a:	4281      	cmp	r1, r0
9000459c:	d1e9      	bne.n	90004572 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
9000459e:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900045a2:	0052      	lsls	r2, r2, #1
900045a4:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
900045a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
900045aa:	4422      	add	r2, r4
900045ac:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
900045b0:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
900045b2:	8450      	strh	r0, [r2, #34]	; 0x22
        }
900045b4:	e7dd      	b.n	90004572 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
900045b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900045ba:	f640 113f 	movw	r1, #2367	; 0x93f
900045be:	89db      	ldrh	r3, [r3, #14]
900045c0:	428b      	cmp	r3, r1
900045c2:	d1d6      	bne.n	90004572 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900045c4:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900045c8:	2300      	movs	r3, #0
900045ca:	0052      	lsls	r2, r2, #1
900045cc:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900045ce:	e7ea      	b.n	900045a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900045d0:	4b05      	ldr	r3, [pc, #20]	; (900045e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900045d2:	21c5      	movs	r1, #197	; 0xc5
900045d4:	4a05      	ldr	r2, [pc, #20]	; (900045ec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900045d6:	4806      	ldr	r0, [pc, #24]	; (900045f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900045d8:	f021 fd62 	bl	900260a0 <__assert_func>
            assert(offset < used);
900045dc:	4b05      	ldr	r3, [pc, #20]	; (900045f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900045de:	21cb      	movs	r1, #203	; 0xcb
900045e0:	4a05      	ldr	r2, [pc, #20]	; (900045f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900045e2:	4803      	ldr	r0, [pc, #12]	; (900045f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900045e4:	f021 fd5c 	bl	900260a0 <__assert_func>
900045e8:	90029434 	.word	0x90029434
900045ec:	90029440 	.word	0x90029440
900045f0:	900294ec 	.word	0x900294ec
900045f4:	90029538 	.word	0x90029538
900045f8:	90029548 	.word	0x90029548

900045fc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
900045fc:	f012 bd7d 	b.w	900170fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90004600 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90004600:	b510      	push	{r4, lr}
90004602:	b086      	sub	sp, #24
90004604:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90004608:	ac0a      	add	r4, sp, #40	; 0x28
{
9000460a:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000460e:	461a      	mov	r2, r3
90004610:	9b09      	ldr	r3, [sp, #36]	; 0x24
90004612:	4661      	mov	r1, ip
90004614:	9401      	str	r4, [sp, #4]
90004616:	9300      	str	r3, [sp, #0]
90004618:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000461a:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
9000461c:	f00f ff44 	bl	900144a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90004620:	b006      	add	sp, #24
90004622:	bd10      	pop	{r4, pc}

90004624 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004624:	b9e0      	cbnz	r0, 90004660 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
90004626:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90004628:	4b13      	ldr	r3, [pc, #76]	; (90004678 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000462a:	681b      	ldr	r3, [r3, #0]
9000462c:	b1cb      	cbz	r3, 90004662 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000462e:	4c13      	ldr	r4, [pc, #76]	; (9000467c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004630:	4813      	ldr	r0, [pc, #76]	; (90004680 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90004632:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90004636:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90004638:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000463a:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
9000463c:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
9000463e:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90004640:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
90004642:	4b10      	ldr	r3, [pc, #64]	; (90004684 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
90004644:	2200      	movs	r2, #0
90004646:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90004648:	f000 f83a 	bl	900046c0 <_ZN17TypedTextDatabase8getFontsEv>
9000464c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
9000464e:	f000 f835 	bl	900046bc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
90004652:	4b0d      	ldr	r3, [pc, #52]	; (90004688 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
90004654:	4a0d      	ldr	r2, [pc, #52]	; (9000468c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
90004656:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90004658:	4b0d      	ldr	r3, [pc, #52]	; (90004690 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
9000465a:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
9000465c:	8018      	strh	r0, [r3, #0]
    }
}
9000465e:	bd38      	pop	{r3, r4, r5, pc}
90004660:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
90004662:	4c0c      	ldr	r4, [pc, #48]	; (90004694 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
90004664:	4905      	ldr	r1, [pc, #20]	; (9000467c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
90004666:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90004668:	480b      	ldr	r0, [pc, #44]	; (90004698 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
9000466a:	4b05      	ldr	r3, [pc, #20]	; (90004680 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
9000466c:	4a0b      	ldr	r2, [pc, #44]	; (9000469c <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
9000466e:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90004670:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
90004672:	2c00      	cmp	r4, #0
90004674:	d1e5      	bne.n	90004642 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
90004676:	bd38      	pop	{r3, r4, r5, pc}
90004678:	24009544 	.word	0x24009544
9000467c:	24009548 	.word	0x24009548
90004680:	2400954c 	.word	0x2400954c
90004684:	24009550 	.word	0x24009550
90004688:	240235c4 	.word	0x240235c4
9000468c:	240235cc 	.word	0x240235cc
90004690:	240235c8 	.word	0x240235c8
90004694:	90215878 	.word	0x90215878
90004698:	90215828 	.word	0x90215828
9000469c:	90215818 	.word	0x90215818

900046a0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
900046a0:	4a04      	ldr	r2, [pc, #16]	; (900046b4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
900046a2:	4b05      	ldr	r3, [pc, #20]	; (900046b8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
900046a4:	6812      	ldr	r2, [r2, #0]
900046a6:	681b      	ldr	r3, [r3, #0]
900046a8:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
900046ac:	eb03 0040 	add.w	r0, r3, r0, lsl #1
900046b0:	4770      	bx	lr
900046b2:	bf00      	nop
900046b4:	2400954c 	.word	0x2400954c
900046b8:	24009548 	.word	0x24009548

900046bc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
900046bc:	2004      	movs	r0, #4
900046be:	4770      	bx	lr

900046c0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
900046c0:	4800      	ldr	r0, [pc, #0]	; (900046c4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
900046c2:	4770      	bx	lr
900046c4:	24009554 	.word	0x24009554

900046c8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
900046c8:	b510      	push	{r4, lr}
};
900046ca:	4c05      	ldr	r4, [pc, #20]	; (900046e0 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
900046cc:	f7ff fea2 	bl	90004414 <_Z23getFont_verdana_20_4bppv>
};
900046d0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
900046d2:	f7ff fee1 	bl	90004498 <_Z23getFont_verdana_40_4bppv>
};
900046d6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
900046d8:	f7ff fe5a 	bl	90004390 <_Z23getFont_verdana_10_4bppv>
};
900046dc:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
900046de:	bd10      	pop	{r4, pc}
900046e0:	24009554 	.word	0x24009554

900046e4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
900046e4:	4770      	bx	lr
900046e6:	bf00      	nop

900046e8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
900046e8:	4770      	bx	lr
900046ea:	bf00      	nop

900046ec <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
900046ec:	4770      	bx	lr
900046ee:	bf00      	nop

900046f0 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
900046f0:	b530      	push	{r4, r5, lr}
900046f2:	b085      	sub	sp, #20
900046f4:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
900046f6:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
900046f8:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900046fa:	466d      	mov	r5, sp
900046fc:	4601      	mov	r1, r0
900046fe:	8102      	strh	r2, [r0, #8]
90004700:	343c      	adds	r4, #60	; 0x3c
90004702:	4628      	mov	r0, r5
90004704:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004708:	4798      	blx	r3
9000470a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9000470e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004712:	b005      	add	sp, #20
90004714:	bd30      	pop	{r4, r5, pc}
90004716:	bf00      	nop

90004718 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
90004718:	b530      	push	{r4, r5, lr}
9000471a:	b085      	sub	sp, #20
9000471c:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
9000471e:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004720:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004722:	466d      	mov	r5, sp
90004724:	4601      	mov	r1, r0
        rect.height = height;
90004726:	8142      	strh	r2, [r0, #10]
90004728:	343c      	adds	r4, #60	; 0x3c
9000472a:	4628      	mov	r0, r5
9000472c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90004730:	4798      	blx	r3
90004732:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004736:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
9000473a:	b005      	add	sp, #20
9000473c:	bd30      	pop	{r4, r5, pc}
9000473e:	bf00      	nop

90004740 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004740:	2200      	movs	r2, #0
90004742:	6002      	str	r2, [r0, #0]
90004744:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90004746:	4770      	bx	lr

90004748 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90004748:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
9000474c:	4770      	bx	lr
9000474e:	bf00      	nop

90004750 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004750:	2000      	movs	r0, #0
90004752:	4770      	bx	lr

90004754 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004754:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90004758:	b112      	cbz	r2, 90004760 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
9000475a:	6803      	ldr	r3, [r0, #0]
9000475c:	695b      	ldr	r3, [r3, #20]
9000475e:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004760:	4770      	bx	lr
90004762:	bf00      	nop

90004764 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004764:	2200      	movs	r2, #0
90004766:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
9000476a:	6082      	str	r2, [r0, #8]
9000476c:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004770:	4770      	bx	lr
90004772:	bf00      	nop

90004774 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004774:	6c80      	ldr	r0, [r0, #72]	; 0x48
90004776:	4770      	bx	lr

90004778 <_ZN24screen_asteroidsViewBase21resume_asteroids_taskEv>:
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
90004778:	4770      	bx	lr
9000477a:	bf00      	nop

9000477c <_ZN24screen_asteroidsViewBase22suspend_asteroids_taskEv>:
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
9000477c:	4770      	bx	lr
9000477e:	bf00      	nop

90004780 <_ZN24screen_asteroidsViewBase20start_asteroids_gameEv>:
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }
90004780:	4770      	bx	lr
90004782:	bf00      	nop

90004784 <_ZN24screen_asteroidsViewBase11setupScreenEv>:
}

void screen_asteroidsViewBase::setupScreen()
{

}
90004784:	4770      	bx	lr
90004786:	bf00      	nop

90004788 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90004788:	4770      	bx	lr
9000478a:	bf00      	nop

9000478c <_ZN8touchgfx5ShapeILt3EED1Ev>:
 * scaled, rotated and moved freely. Example uses could be the hands of a clock.
 *
 * @see AbstractShape
 */
template <uint16_t POINTS>
class Shape : public AbstractShape
9000478c:	4770      	bx	lr
9000478e:	bf00      	nop

90004790 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004790:	4770      	bx	lr
90004792:	bf00      	nop

90004794 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004794:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
90004796:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
90004798:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000479a:	6844      	ldr	r4, [r0, #4]
9000479c:	f012 0f01 	tst.w	r2, #1
900047a0:	eb04 0062 	add.w	r0, r4, r2, asr #1
900047a4:	d103      	bne.n	900047ae <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
900047a6:	689b      	ldr	r3, [r3, #8]
    }
900047a8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900047ac:	4718      	bx	r3
900047ae:	ea4f 0c62 	mov.w	ip, r2, asr #1
900047b2:	689b      	ldr	r3, [r3, #8]
900047b4:	f854 200c 	ldr.w	r2, [r4, ip]
    }
900047b8:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900047bc:	58d3      	ldr	r3, [r2, r3]
900047be:	4718      	bx	r3

900047c0 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900047c0:	6843      	ldr	r3, [r0, #4]
900047c2:	b13b      	cbz	r3, 900047d4 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
900047c4:	6883      	ldr	r3, [r0, #8]
900047c6:	b10b      	cbz	r3, 900047cc <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
900047c8:	2001      	movs	r0, #1
    }
900047ca:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900047cc:	68c0      	ldr	r0, [r0, #12]
900047ce:	f000 0001 	and.w	r0, r0, #1
900047d2:	4770      	bx	lr
900047d4:	4618      	mov	r0, r3
900047d6:	4770      	bx	lr

900047d8 <_ZNK8touchgfx5ShapeILt3EE12getNumPointsEv>:
{
public:
    virtual int getNumPoints() const
    {
        return POINTS;
    }
900047d8:	2003      	movs	r0, #3
900047da:	4770      	bx	lr

900047dc <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_>:

    virtual void setCorner(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
900047dc:	2902      	cmp	r1, #2
900047de:	d803      	bhi.n	900047e8 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_+0xc>
900047e0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCorner[i] = x, yCorner[i] = y;
900047e4:	64ca      	str	r2, [r1, #76]	; 0x4c
900047e6:	658b      	str	r3, [r1, #88]	; 0x58
        }
    }
900047e8:	4770      	bx	lr
900047ea:	bf00      	nop

900047ec <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi>:

    virtual CWRUtil::Q5 getCornerX(int i) const
    {
        if (i >= 0 && i < POINTS)
900047ec:	2902      	cmp	r1, #2
900047ee:	d803      	bhi.n	900047f8 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi+0xc>
        {
            return xCorner[i];
900047f0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
900047f4:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
900047f6:	4770      	bx	lr
         * Constructor from integer. No conversion is done - the integer is assumed to already
         * be in Q5 format.
         *
         * @param  i Integer pre-formattet in Q5 format.
         */
        explicit Q5(int i)
900047f8:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
900047fa:	4770      	bx	lr

900047fc <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi>:

    virtual CWRUtil::Q5 getCornerY(int i) const
    {
        if (i >= 0 && i < POINTS)
900047fc:	2902      	cmp	r1, #2
900047fe:	d803      	bhi.n	90004808 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi+0xc>
        {
            return yCorner[i];
90004800:	3116      	adds	r1, #22
90004802:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
90004806:	4770      	bx	lr
90004808:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000480a:	4770      	bx	lr

9000480c <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_>:

protected:
    virtual void setCache(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
9000480c:	2902      	cmp	r1, #2
9000480e:	d803      	bhi.n	90004818 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_+0xc>
90004810:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCache[i] = x, yCache[i] = y;
90004814:	664a      	str	r2, [r1, #100]	; 0x64
90004816:	670b      	str	r3, [r1, #112]	; 0x70
        }
    }
90004818:	4770      	bx	lr
9000481a:	bf00      	nop

9000481c <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi>:

    virtual CWRUtil::Q5 getCacheX(int i) const
    {
        if (i >= 0 && i < POINTS)
9000481c:	2902      	cmp	r1, #2
9000481e:	d803      	bhi.n	90004828 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi+0xc>
        {
            return xCache[i];
90004820:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004824:	6e48      	ldr	r0, [r1, #100]	; 0x64
90004826:	4770      	bx	lr
90004828:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000482a:	4770      	bx	lr

9000482c <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi>:

    virtual CWRUtil::Q5 getCacheY(int i) const
    {
        if (i >= 0 && i < POINTS)
9000482c:	2902      	cmp	r1, #2
9000482e:	d803      	bhi.n	90004838 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi+0xc>
        {
            return yCache[i];
90004830:	311c      	adds	r1, #28
90004832:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
90004836:	4770      	bx	lr
90004838:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000483a:	4770      	bx	lr

9000483c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
9000483c:	b510      	push	{r4, lr}
9000483e:	4604      	mov	r4, r0
90004840:	214c      	movs	r1, #76	; 0x4c
90004842:	f021 fbfe 	bl	90026042 <_ZdlPvj>
90004846:	4620      	mov	r0, r4
90004848:	bd10      	pop	{r4, pc}
9000484a:	bf00      	nop

9000484c <_ZN8touchgfx5ShapeILt3EED0Ev>:
class Shape : public AbstractShape
9000484c:	b510      	push	{r4, lr}
9000484e:	4604      	mov	r4, r0
90004850:	217c      	movs	r1, #124	; 0x7c
90004852:	f021 fbf6 	bl	90026042 <_ZdlPvj>
90004856:	4620      	mov	r0, r4
90004858:	bd10      	pop	{r4, pc}
9000485a:	bf00      	nop

9000485c <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000485c:	b510      	push	{r4, lr}
9000485e:	4604      	mov	r4, r0
90004860:	2110      	movs	r1, #16
90004862:	f021 fbee 	bl	90026042 <_ZdlPvj>
90004866:	4620      	mov	r0, r4
90004868:	bd10      	pop	{r4, pc}
9000486a:	bf00      	nop

9000486c <_ZN24screen_asteroidsViewBaseD1Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
9000486c:	4b03      	ldr	r3, [pc, #12]	; (9000487c <_ZN24screen_asteroidsViewBaseD1Ev+0x10>)
9000486e:	b510      	push	{r4, lr}
90004870:	4604      	mov	r4, r0
90004872:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
90004874:	f00e fd82 	bl	9001337c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004878:	4620      	mov	r0, r4
9000487a:	bd10      	pop	{r4, pc}
9000487c:	900299a4 	.word	0x900299a4

90004880 <_ZN24screen_asteroidsViewBaseD0Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
90004880:	4b07      	ldr	r3, [pc, #28]	; (900048a0 <_ZN24screen_asteroidsViewBaseD0Ev+0x20>)
90004882:	b500      	push	{lr}
90004884:	b083      	sub	sp, #12
90004886:	6003      	str	r3, [r0, #0]
90004888:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
9000488a:	f00e fd77 	bl	9001337c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
9000488e:	9801      	ldr	r0, [sp, #4]
90004890:	f242 1128 	movw	r1, #8488	; 0x2128
90004894:	f021 fbd5 	bl	90026042 <_ZdlPvj>
90004898:	9801      	ldr	r0, [sp, #4]
9000489a:	b003      	add	sp, #12
9000489c:	f85d fb04 	ldr.w	pc, [sp], #4
900048a0:	900299a4 	.word	0x900299a4

900048a4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900048a4:	4b1b      	ldr	r3, [pc, #108]	; (90004914 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900048a6:	6802      	ldr	r2, [r0, #0]
900048a8:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
900048aa:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900048ac:	6b55      	ldr	r5, [r2, #52]	; 0x34
900048ae:	b323      	cbz	r3, 900048fa <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
900048b0:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
900048b2:	4919      	ldr	r1, [pc, #100]	; (90004918 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
900048b4:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900048b6:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900048b8:	8809      	ldrh	r1, [r1, #0]
900048ba:	4291      	cmp	r1, r2
900048bc:	d923      	bls.n	90004906 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
900048be:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900048c2:	4b16      	ldr	r3, [pc, #88]	; (9000491c <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
900048c4:	681b      	ldr	r3, [r3, #0]
900048c6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900048ca:	4a15      	ldr	r2, [pc, #84]	; (90004920 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
900048cc:	6803      	ldr	r3, [r0, #0]
900048ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900048d0:	4293      	cmp	r3, r2
900048d2:	d107      	bne.n	900048e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
900048d4:	88c0      	ldrh	r0, [r0, #6]
900048d6:	4b13      	ldr	r3, [pc, #76]	; (90004924 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900048d8:	1a31      	subs	r1, r6, r0
900048da:	429d      	cmp	r5, r3
900048dc:	b209      	sxth	r1, r1
900048de:	d107      	bne.n	900048f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
900048e0:	80e1      	strh	r1, [r4, #6]
    }
900048e2:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900048e4:	4798      	blx	r3
900048e6:	4b0f      	ldr	r3, [pc, #60]	; (90004924 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900048e8:	1a31      	subs	r1, r6, r0
900048ea:	429d      	cmp	r5, r3
900048ec:	b209      	sxth	r1, r1
900048ee:	d0f7      	beq.n	900048e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900048f0:	4620      	mov	r0, r4
900048f2:	462b      	mov	r3, r5
    }
900048f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900048f8:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900048fa:	4b0b      	ldr	r3, [pc, #44]	; (90004928 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900048fc:	216c      	movs	r1, #108	; 0x6c
900048fe:	4a0b      	ldr	r2, [pc, #44]	; (9000492c <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004900:	480b      	ldr	r0, [pc, #44]	; (90004930 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004902:	f021 fbcd 	bl	900260a0 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004906:	4b0b      	ldr	r3, [pc, #44]	; (90004934 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
90004908:	216d      	movs	r1, #109	; 0x6d
9000490a:	4a08      	ldr	r2, [pc, #32]	; (9000492c <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
9000490c:	4808      	ldr	r0, [pc, #32]	; (90004930 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
9000490e:	f021 fbc7 	bl	900260a0 <__assert_func>
90004912:	bf00      	nop
90004914:	240235c4 	.word	0x240235c4
90004918:	240235c8 	.word	0x240235c8
9000491c:	240235cc 	.word	0x240235cc
90004920:	900037dd 	.word	0x900037dd
90004924:	90002401 	.word	0x90002401
90004928:	9002961c 	.word	0x9002961c
9000492c:	90029660 	.word	0x90029660
90004930:	9002969c 	.word	0x9002969c
90004934:	900296e4 	.word	0x900296e4

90004938 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_asteroidsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
90004938:	f500 638d 	add.w	r3, r0, #1128	; 0x468
9000493c:	4299      	cmp	r1, r3
{
9000493e:	b570      	push	{r4, r5, r6, lr}
90004940:	4604      	mov	r4, r0
90004942:	460d      	mov	r5, r1
    if (&src == &btn_back)
90004944:	d00d      	beq.n	90004962 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        //interaction_transition_to_home
        //When suspend_asteroid_task completed change screen to screen_game_select
        //Go to screen_game_select with screen transition towards West
        application().gotoscreen_game_selectScreenSlideTransitionWest();
    }
    if (&src == &btn_retry)
90004946:	f204 432c 	addw	r3, r4, #1068	; 0x42c
9000494a:	429d      	cmp	r5, r3
9000494c:	d000      	beq.n	90004950 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //interaction_restart
        //When btn_retry clicked call virtual function
        //Call start_asteroids_game
        start_asteroids_game();
    }
}
9000494e:	bd70      	pop	{r4, r5, r6, pc}
        start_asteroids_game();
90004950:	6823      	ldr	r3, [r4, #0]
90004952:	4a0a      	ldr	r2, [pc, #40]	; (9000497c <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>)
90004954:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004956:	4293      	cmp	r3, r2
90004958:	d0f9      	beq.n	9000494e <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
9000495a:	4620      	mov	r0, r4
}
9000495c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        start_asteroids_game();
90004960:	4718      	bx	r3
        suspend_asteroids_task();
90004962:	6803      	ldr	r3, [r0, #0]
90004964:	4a06      	ldr	r2, [pc, #24]	; (90004980 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x48>)
90004966:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004968:	4293      	cmp	r3, r2
9000496a:	d104      	bne.n	90004976 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000496c:	f010 fa1c 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_game_selectScreenSlideTransitionWest();
90004970:	f7ff fc96 	bl	900042a0 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>
90004974:	e7e7      	b.n	90004946 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        suspend_asteroids_task();
90004976:	4798      	blx	r3
90004978:	e7f8      	b.n	9000496c <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
9000497a:	bf00      	nop
9000497c:	90004781 	.word	0x90004781
90004980:	9000477d 	.word	0x9000477d

90004984 <_ZN24screen_asteroidsViewBase15afterTransitionEv>:
void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();
90004984:	6803      	ldr	r3, [r0, #0]
90004986:	490a      	ldr	r1, [pc, #40]	; (900049b0 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x2c>)
90004988:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000498a:	428a      	cmp	r2, r1
{
9000498c:	b510      	push	{r4, lr}
9000498e:	4604      	mov	r4, r0
90004990:	d104      	bne.n	9000499c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x18>

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
90004992:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004994:	4a07      	ldr	r2, [pc, #28]	; (900049b4 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004996:	4293      	cmp	r3, r2
90004998:	d106      	bne.n	900049a8 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x24>
}
9000499a:	bd10      	pop	{r4, pc}
    resume_asteroids_task();
9000499c:	4790      	blx	r2
    start_asteroids_game();
9000499e:	6823      	ldr	r3, [r4, #0]
900049a0:	4a04      	ldr	r2, [pc, #16]	; (900049b4 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
900049a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900049a4:	4293      	cmp	r3, r2
900049a6:	d0f8      	beq.n	9000499a <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x16>
900049a8:	4620      	mov	r0, r4
}
900049aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    start_asteroids_game();
900049ae:	4718      	bx	r3
900049b0:	90004779 	.word	0x90004779
900049b4:	90004781 	.word	0x90004781

900049b8 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
900049b8:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900049ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900049be:	4f25      	ldr	r7, [pc, #148]	; (90004a54 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
900049c0:	4605      	mov	r5, r0
        setX(x);
900049c2:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
900049c4:	4690      	mov	r8, r2
900049c6:	42be      	cmp	r6, r7
900049c8:	d125      	bne.n	90004a16 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
900049ca:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
900049cc:	80a9      	strh	r1, [r5, #4]
900049ce:	4922      	ldr	r1, [pc, #136]	; (90004a58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
900049d0:	428c      	cmp	r4, r1
900049d2:	d126      	bne.n	90004a22 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900049d4:	4921      	ldr	r1, [pc, #132]	; (90004a5c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
900049d6:	fa1f f888 	uxth.w	r8, r8
900049da:	6b5e      	ldr	r6, [r3, #52]	; 0x34
900049dc:	680b      	ldr	r3, [r1, #0]
900049de:	2b00      	cmp	r3, #0
900049e0:	d032      	beq.n	90004a48 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
900049e2:	491f      	ldr	r1, [pc, #124]	; (90004a60 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
900049e4:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900049e6:	8809      	ldrh	r1, [r1, #0]
900049e8:	4291      	cmp	r1, r2
900049ea:	d927      	bls.n	90004a3c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
900049ec:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900049f0:	4b1c      	ldr	r3, [pc, #112]	; (90004a64 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
900049f2:	681b      	ldr	r3, [r3, #0]
900049f4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900049f8:	4a1b      	ldr	r2, [pc, #108]	; (90004a68 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
900049fa:	6803      	ldr	r3, [r0, #0]
900049fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900049fe:	4293      	cmp	r3, r2
90004a00:	d11a      	bne.n	90004a38 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004a02:	88c0      	ldrh	r0, [r0, #6]
90004a04:	4b19      	ldr	r3, [pc, #100]	; (90004a6c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004a06:	eba8 0200 	sub.w	r2, r8, r0
90004a0a:	429e      	cmp	r6, r3
90004a0c:	b211      	sxth	r1, r2
90004a0e:	d10e      	bne.n	90004a2e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004a10:	80e9      	strh	r1, [r5, #6]
    }
90004a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004a16:	47b0      	blx	r6
        setBaselineY(baselineY);
90004a18:	682b      	ldr	r3, [r5, #0]
90004a1a:	490f      	ldr	r1, [pc, #60]	; (90004a58 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004a1c:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004a1e:	428c      	cmp	r4, r1
90004a20:	d0d8      	beq.n	900049d4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004a22:	4641      	mov	r1, r8
90004a24:	4628      	mov	r0, r5
90004a26:	4623      	mov	r3, r4
    }
90004a28:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004a2c:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a2e:	4628      	mov	r0, r5
90004a30:	4633      	mov	r3, r6
    }
90004a32:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a36:	4718      	bx	r3
90004a38:	4798      	blx	r3
90004a3a:	e7e3      	b.n	90004a04 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004a3c:	4b0c      	ldr	r3, [pc, #48]	; (90004a70 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004a3e:	216d      	movs	r1, #109	; 0x6d
90004a40:	4a0c      	ldr	r2, [pc, #48]	; (90004a74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004a42:	480d      	ldr	r0, [pc, #52]	; (90004a78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004a44:	f021 fb2c 	bl	900260a0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a48:	4b0c      	ldr	r3, [pc, #48]	; (90004a7c <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004a4a:	216c      	movs	r1, #108	; 0x6c
90004a4c:	4a09      	ldr	r2, [pc, #36]	; (90004a74 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004a4e:	480a      	ldr	r0, [pc, #40]	; (90004a78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004a50:	f021 fb26 	bl	900260a0 <__assert_func>
90004a54:	900023fd 	.word	0x900023fd
90004a58:	900048a5 	.word	0x900048a5
90004a5c:	240235c4 	.word	0x240235c4
90004a60:	240235c8 	.word	0x240235c8
90004a64:	240235cc 	.word	0x240235cc
90004a68:	900037dd 	.word	0x900037dd
90004a6c:	90002401 	.word	0x90002401
90004a70:	900296e4 	.word	0x900296e4
90004a74:	90029660 	.word	0x90029660
90004a78:	9002969c 	.word	0x9002969c
90004a7c:	9002961c 	.word	0x9002961c

90004a80 <_ZN24screen_asteroidsViewBaseC1Ev>:
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004a84:	4604      	mov	r4, r0
        : presenter(0)
90004a86:	2500      	movs	r5, #0
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004a88:	4f3d      	ldr	r7, [pc, #244]	; (90004b80 <_ZN24screen_asteroidsViewBaseC1Ev+0x100>)
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004a8a:	f104 0b98 	add.w	fp, r4, #152	; 0x98
90004a8e:	f104 09c4 	add.w	r9, r4, #196	; 0xc4
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004a92:	f8df 810c 	ldr.w	r8, [pc, #268]	; 90004ba0 <_ZN24screen_asteroidsViewBaseC1Ev+0x120>
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004a96:	ed2d 8b02 	vpush	{d8}
90004a9a:	b097      	sub	sp, #92	; 0x5c
90004a9c:	f011 fd52 	bl	90016544 <_ZN8touchgfx6ScreenC1Ev>
90004aa0:	23ff      	movs	r3, #255	; 0xff
          touchable(false),
90004aa2:	f44f 7280 	mov.w	r2, #256	; 0x100
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004aa6:	4937      	ldr	r1, [pc, #220]	; (90004b84 <_ZN24screen_asteroidsViewBaseC1Ev+0x104>)
90004aa8:	ae14      	add	r6, sp, #80	; 0x50
90004aaa:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90004aae:	f884 3092 	strb.w	r3, [r4, #146]	; 0x92
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004ab2:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004ab6:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
90004aba:	4658      	mov	r0, fp
90004abc:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
90004ac0:	6021      	str	r1, [r4, #0]
90004ac2:	4631      	mov	r1, r6
90004ac4:	63e5      	str	r5, [r4, #60]	; 0x3c
90004ac6:	6427      	str	r7, [r4, #64]	; 0x40
        : color(col)
90004ac8:	66a5      	str	r5, [r4, #104]	; 0x68
90004aca:	66e7      	str	r7, [r4, #108]	; 0x6c
90004acc:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
90004ad0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
        : x(0), y(0), width(0), height(0)
90004ad4:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90004ad8:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004adc:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004ae0:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004ae4:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90004ae8:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90004aec:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90004af0:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90004af4:	f00c fdba 	bl	9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004af8:	4648      	mov	r0, r9
90004afa:	f00c fb01 	bl	90011100 <_ZN8touchgfx13AbstractShapeC1Ev>
90004afe:	4a22      	ldr	r2, [pc, #136]	; (90004b88 <_ZN24screen_asteroidsViewBaseC1Ev+0x108>)
90004b00:	f8d8 3000 	ldr.w	r3, [r8]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90004b04:	f504 71a0 	add.w	r1, r4, #320	; 0x140
90004b08:	f8c4 20c4 	str.w	r2, [r4, #196]	; 0xc4
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90004b0c:	4a1f      	ldr	r2, [pc, #124]	; (90004b8c <_ZN24screen_asteroidsViewBaseC1Ev+0x10c>)
        : widgetWidth(0)
90004b0e:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
90004b12:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
90004b16:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004b1a:	910b      	str	r1, [sp, #44]	; 0x2c
            : v(0)
90004b1c:	e9c4 5544 	strd	r5, r5, [r4, #272]	; 0x110
90004b20:	e9c4 5546 	strd	r5, r5, [r4, #280]	; 0x118
90004b24:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
90004b28:	e9c4 554a 	strd	r5, r5, [r4, #296]	; 0x128
90004b2c:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
90004b30:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
90004b34:	2a00      	cmp	r2, #0
90004b36:	d035      	beq.n	90004ba4 <_ZN24screen_asteroidsViewBaseC1Ev+0x124>
90004b38:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004b3a:	2800      	cmp	r0, #0
90004b3c:	f000 83ad 	beq.w	9000529a <_ZN24screen_asteroidsViewBaseC1Ev+0x81a>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90004b40:	6803      	ldr	r3, [r0, #0]
90004b42:	4d13      	ldr	r5, [pc, #76]	; (90004b90 <_ZN24screen_asteroidsViewBaseC1Ev+0x110>)
90004b44:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90004b46:	42aa      	cmp	r2, r5
90004b48:	d03a      	beq.n	90004bc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004b4a:	4790      	blx	r2
        return auxiliaryLCD;
90004b4c:	f8d8 3000 	ldr.w	r3, [r8]
90004b50:	fab0 f880 	clz	r8, r0
90004b54:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004b56:	ea4f 1858 	mov.w	r8, r8, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90004b5a:	b140      	cbz	r0, 90004b6e <_ZN24screen_asteroidsViewBaseC1Ev+0xee>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90004b5c:	6803      	ldr	r3, [r0, #0]
90004b5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004b60:	42ab      	cmp	r3, r5
90004b62:	d02d      	beq.n	90004bc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004b64:	4798      	blx	r3
90004b66:	2800      	cmp	r0, #0
90004b68:	bf08      	it	eq
90004b6a:	f048 0801 	orreq.w	r8, r8, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90004b6e:	f1b8 0f00 	cmp.w	r8, #0
90004b72:	d125      	bne.n	90004bc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004b74:	4b07      	ldr	r3, [pc, #28]	; (90004b94 <_ZN24screen_asteroidsViewBaseC1Ev+0x114>)
90004b76:	212c      	movs	r1, #44	; 0x2c
90004b78:	4a07      	ldr	r2, [pc, #28]	; (90004b98 <_ZN24screen_asteroidsViewBaseC1Ev+0x118>)
90004b7a:	4808      	ldr	r0, [pc, #32]	; (90004b9c <_ZN24screen_asteroidsViewBaseC1Ev+0x11c>)
90004b7c:	f021 fa90 	bl	900260a0 <__assert_func>
90004b80:	9002a3a4 	.word	0x9002a3a4
90004b84:	900299a4 	.word	0x900299a4
90004b88:	900298f8 	.word	0x900298f8
90004b8c:	90028acc 	.word	0x90028acc
90004b90:	900024a1 	.word	0x900024a1
90004b94:	90029724 	.word	0x90029724
90004b98:	90029784 	.word	0x90029784
90004b9c:	900297c0 	.word	0x900297c0
90004ba0:	2402356c 	.word	0x2402356c
        return instance->lcdRef;
90004ba4:	6898      	ldr	r0, [r3, #8]
90004ba6:	4ddd      	ldr	r5, [pc, #884]	; (90004f1c <_ZN24screen_asteroidsViewBaseC1Ev+0x49c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90004ba8:	6802      	ldr	r2, [r0, #0]
90004baa:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90004bac:	42aa      	cmp	r2, r5
90004bae:	d1cc      	bne.n	90004b4a <_ZN24screen_asteroidsViewBaseC1Ev+0xca>
        return auxiliaryLCD;
90004bb0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90004bb2:	b128      	cbz	r0, 90004bc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
        bool compat = HAL::lcd().framebufferFormat() == format;
90004bb4:	6803      	ldr	r3, [r0, #0]
90004bb6:	f04f 0801 	mov.w	r8, #1
90004bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004bbc:	42ab      	cmp	r3, r5
90004bbe:	d1d1      	bne.n	90004b64 <_ZN24screen_asteroidsViewBaseC1Ev+0xe4>
90004bc0:	4bd7      	ldr	r3, [pc, #860]	; (90004f20 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90004bc2:	2500      	movs	r5, #0
        : typedTextId(id)
90004bc4:	49d7      	ldr	r1, [pc, #860]	; (90004f24 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
          touchable(false),
90004bc6:	f44f 7880 	mov.w	r8, #256	; 0x100
90004bca:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004bce:	3324      	adds	r3, #36	; 0x24
90004bd0:	f64f 7aff 	movw	sl, #65535	; 0xffff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004bd4:	f04f 32ff 	mov.w	r2, #4294967295
90004bd8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90004bdc:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
          firstChild(0)
90004be0:	4bd1      	ldr	r3, [pc, #836]	; (90004f28 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004be2:	f8c4 117c 	str.w	r1, [r4, #380]	; 0x17c
90004be6:	ee08 0a10 	vmov	s16, r0
        : TextAreaWithWildcardBase(), wc1(0)
90004bea:	49d0      	ldr	r1, [pc, #832]	; (90004f2c <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
90004bec:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004bf0:	23ff      	movs	r3, #255	; 0xff
90004bf2:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
90004bf6:	f8c4 318a 	str.w	r3, [r4, #394]	; 0x18a
        : color(col)
90004bfa:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
90004bfe:	f8a4 5188 	strh.w	r5, [r4, #392]	; 0x188
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004c02:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
90004c06:	f8a4 8178 	strh.w	r8, [r4, #376]	; 0x178
90004c0a:	f8a4 81c4 	strh.w	r8, [r4, #452]	; 0x1c4
90004c0e:	f8c4 2194 	str.w	r2, [r4, #404]	; 0x194
90004c12:	f8c4 1154 	str.w	r1, [r4, #340]	; 0x154
90004c16:	4631      	mov	r1, r6
90004c18:	f8a4 a180 	strh.w	sl, [r4, #384]	; 0x180
        : x(0), y(0), width(0), height(0)
90004c1c:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
90004c20:	e9c4 5558 	strd	r5, r5, [r4, #352]	; 0x160
          nextSibling(0),
90004c24:	e9c4 555a 	strd	r5, r5, [r4, #360]	; 0x168
          cachedAbsX(0),
90004c28:	e9c4 555c 	strd	r5, r5, [r4, #368]	; 0x170
90004c2c:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
90004c30:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004c34:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
          nextSibling(0),
90004c38:	e9c4 556d 	strd	r5, r5, [r4, #436]	; 0x1b4
          cachedAbsX(0),
90004c3c:	e9c4 556f 	strd	r5, r5, [r4, #444]	; 0x1bc
90004c40:	f8c4 51c8 	str.w	r5, [r4, #456]	; 0x1c8
90004c44:	f8ad 2050 	strh.w	r2, [sp, #80]	; 0x50
90004c48:	f504 72fc 	add.w	r2, r4, #504	; 0x1f8
90004c4c:	9202      	str	r2, [sp, #8]
90004c4e:	f00c fd0d 	bl	9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004c52:	f504 7209 	add.w	r2, r4, #548	; 0x224
90004c56:	4631      	mov	r1, r6
90004c58:	9802      	ldr	r0, [sp, #8]
90004c5a:	9203      	str	r2, [sp, #12]
90004c5c:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
90004c60:	f00c fd04 	bl	9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004c64:	f504 721f 	add.w	r2, r4, #636	; 0x27c
90004c68:	4631      	mov	r1, r6
90004c6a:	9803      	ldr	r0, [sp, #12]
90004c6c:	9204      	str	r2, [sp, #16]
90004c6e:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
90004c72:	f00c fcfb 	bl	9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004c76:	4bac      	ldr	r3, [pc, #688]	; (90004f28 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004c78:	f504 722e 	add.w	r2, r4, #696	; 0x2b8
          touchable(false),
90004c7c:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
90004c80:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
90004c84:	f8c4 5278 	str.w	r5, [r4, #632]	; 0x278
90004c88:	9804      	ldr	r0, [sp, #16]
90004c8a:	9205      	str	r2, [sp, #20]
90004c8c:	e9c4 5595 	strd	r5, r5, [r4, #596]	; 0x254
90004c90:	e9c4 5597 	strd	r5, r5, [r4, #604]	; 0x25c
          nextSibling(0),
90004c94:	e9c4 5599 	strd	r5, r5, [r4, #612]	; 0x264
          cachedAbsX(0),
90004c98:	e9c4 559b 	strd	r5, r5, [r4, #620]	; 0x26c
90004c9c:	f00d fc4c 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004ca0:	f504 723d 	add.w	r2, r4, #756	; 0x2f4
90004ca4:	9805      	ldr	r0, [sp, #20]
90004ca6:	9206      	str	r2, [sp, #24]
90004ca8:	f00d fc46 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004cac:	f504 724c 	add.w	r2, r4, #816	; 0x330
90004cb0:	9806      	ldr	r0, [sp, #24]
90004cb2:	9207      	str	r2, [sp, #28]
90004cb4:	f00d fc40 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004cb8:	f504 725b 	add.w	r2, r4, #876	; 0x36c
90004cbc:	9807      	ldr	r0, [sp, #28]
90004cbe:	9208      	str	r2, [sp, #32]
90004cc0:	f00d fc3a 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004cc4:	f204 422c 	addw	r2, r4, #1068	; 0x42c
90004cc8:	9808      	ldr	r0, [sp, #32]
90004cca:	9209      	str	r2, [sp, #36]	; 0x24
90004ccc:	f00d fc34 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004cd0:	4b95      	ldr	r3, [pc, #596]	; (90004f28 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004cd2:	f04f 32ff 	mov.w	r2, #4294967295
          touchable(false),
90004cd6:	f8a4 83cc 	strh.w	r8, [r4, #972]	; 0x3cc
90004cda:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
90004cde:	f504 638d 	add.w	r3, r4, #1128	; 0x468
90004ce2:	f8c4 73a8 	str.w	r7, [r4, #936]	; 0x3a8
        : color(col)
90004ce6:	f8c4 53d0 	str.w	r5, [r4, #976]	; 0x3d0
90004cea:	f8a4 83f8 	strh.w	r8, [r4, #1016]	; 0x3f8
90004cee:	f8c4 53fc 	str.w	r5, [r4, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90004cf2:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
90004cf6:	f8c4 5408 	str.w	r5, [r4, #1032]	; 0x408
90004cfa:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
90004cfe:	f8c4 5410 	str.w	r5, [r4, #1040]	; 0x410
          parent(0),
90004d02:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
          nextSibling(0),
90004d06:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
          nextDrawChainElement(0),
90004d0a:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
          cachedAbsX(0),
90004d0e:	f8c4 5420 	str.w	r5, [r4, #1056]	; 0x420
          touchable(false),
90004d12:	f8a4 8424 	strh.w	r8, [r4, #1060]	; 0x424
90004d16:	f884 a3ce 	strb.w	sl, [r4, #974]	; 0x3ce
90004d1a:	e9c4 55eb 	strd	r5, r5, [r4, #940]	; 0x3ac
90004d1e:	e9c4 55ed 	strd	r5, r5, [r4, #948]	; 0x3b4
          nextSibling(0),
90004d22:	e9c4 55ef 	strd	r5, r5, [r4, #956]	; 0x3bc
          cachedAbsX(0),
90004d26:	e9c4 55f1 	strd	r5, r5, [r4, #964]	; 0x3c4
90004d2a:	e9c4 55f6 	strd	r5, r5, [r4, #984]	; 0x3d8
90004d2e:	e9c4 55f8 	strd	r5, r5, [r4, #992]	; 0x3e0
          nextSibling(0),
90004d32:	e9c4 55fa 	strd	r5, r5, [r4, #1000]	; 0x3e8
          cachedAbsX(0),
90004d36:	e9c4 55fc 	strd	r5, r5, [r4, #1008]	; 0x3f0
90004d3a:	f8c4 7400 	str.w	r7, [r4, #1024]	; 0x400
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004d3e:	1d27      	adds	r7, r4, #4
90004d40:	f884 2426 	strb.w	r2, [r4, #1062]	; 0x426
        : color(col)
90004d44:	f8c4 5428 	str.w	r5, [r4, #1064]	; 0x428
90004d48:	9809      	ldr	r0, [sp, #36]	; 0x24
90004d4a:	930a      	str	r3, [sp, #40]	; 0x28
90004d4c:	f00d fbf4 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d50:	980a      	ldr	r0, [sp, #40]	; 0x28
90004d52:	f00d fbf1 	bl	90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004d56:	f04f 32ff 	mov.w	r2, #4294967295
90004d5a:	23ff      	movs	r3, #255	; 0xff
90004d5c:	4971      	ldr	r1, [pc, #452]	; (90004f24 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
90004d5e:	f8c4 24e4 	str.w	r2, [r4, #1252]	; 0x4e4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90004d62:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
90004d66:	4a72      	ldr	r2, [pc, #456]	; (90004f30 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b0>)
90004d68:	f8c4 34da 	str.w	r3, [r4, #1242]	; 0x4da
        : pobject(pObject), pmemfun(pmemfun_1)
90004d6c:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90004d70:	f8c4 24a4 	str.w	r2, [r4, #1188]	; 0x4a4
90004d74:	4a6f      	ldr	r2, [pc, #444]	; (90004f34 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b4>)
          touchable(false),
90004d76:	f8a4 84c8 	strh.w	r8, [r4, #1224]	; 0x4c8
        : x(0), y(0), width(0), height(0)
90004d7a:	f8c4 54a8 	str.w	r5, [r4, #1192]	; 0x4a8
90004d7e:	f8c4 54ac 	str.w	r5, [r4, #1196]	; 0x4ac
90004d82:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
90004d86:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
          parent(0),
90004d8a:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
          nextSibling(0),
90004d8e:	f8c4 54bc 	str.w	r5, [r4, #1212]	; 0x4bc
          nextDrawChainElement(0),
90004d92:	f8c4 54c0 	str.w	r5, [r4, #1216]	; 0x4c0
          cachedAbsX(0),
90004d96:	f8c4 54c4 	str.w	r5, [r4, #1220]	; 0x4c4
90004d9a:	f8c4 14cc 	str.w	r1, [r4, #1228]	; 0x4cc
90004d9e:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
        : color(col)
90004da2:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
90004da6:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004daa:	f8c4 54e0 	str.w	r5, [r4, #1248]	; 0x4e0
              text(0)
90004dae:	f8c4 54e8 	str.w	r5, [r4, #1256]	; 0x4e8
90004db2:	f8a4 a4d0 	strh.w	sl, [r4, #1232]	; 0x4d0
90004db6:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
90004dba:	4a5f      	ldr	r2, [pc, #380]	; (90004f38 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b8>)
90004dbc:	f8c3 5124 	str.w	r5, [r3, #292]	; 0x124
90004dc0:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
90004dc4:	f8c3 411c 	str.w	r4, [r3, #284]	; 0x11c
90004dc8:	f00e face 	bl	90013368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90004dcc:	f8df 818c 	ldr.w	r8, [pc, #396]	; 90004f5c <_ZN24screen_asteroidsViewBaseC1Ev+0x4dc>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004dd0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004dd4:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004dd8:	4638      	mov	r0, r7
90004dda:	6465      	str	r5, [r4, #68]	; 0x44
90004ddc:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90004de0:	66a3      	str	r3, [r4, #104]	; 0x68
90004de2:	f00a ff3d 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004de6:	4b55      	ldr	r3, [pc, #340]	; (90004f3c <_ZN24screen_asteroidsViewBaseC1Ev+0x4bc>)
90004de8:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90004dec:	4638      	mov	r0, r7
90004dee:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
90004df2:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004df6:	f00a ff33 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004dfa:	2303      	movs	r3, #3
    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90004dfc:	4658      	mov	r0, fp
90004dfe:	4631      	mov	r1, r6
90004e00:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90004e04:	f00d fbbf 	bl	90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004e08:	4b4d      	ldr	r3, [pc, #308]	; (90004f40 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c0>)
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e0a:	4629      	mov	r1, r5
90004e0c:	f8df c150 	ldr.w	ip, [pc, #336]	; 90004f60 <_ZN24screen_asteroidsViewBaseC1Ev+0x4e0>
90004e10:	4658      	mov	r0, fp
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004e12:	f504 7875 	add.w	r8, r4, #980	; 0x3d4
90004e16:	e9c4 c327 	strd	ip, r3, [r4, #156]	; 0x9c
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e1a:	f00c fbe2 	bl	900115e2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004e1e:	4659      	mov	r1, fp
        visible = vis;
90004e20:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
90004e24:	4638      	mov	r0, r7
90004e26:	f00a ff1b 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004e2a:	f04f 131e 	mov.w	r3, #1966110	; 0x1e001e
90004e2e:	f8df e134 	ldr.w	lr, [pc, #308]	; 90004f64 <_ZN24screen_asteroidsViewBaseC1Ev+0x4e4>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004e32:	f204 42a4 	addw	r2, r4, #1188	; 0x4a4
90004e36:	f504 7bd0 	add.w	fp, r4, #416	; 0x1a0
90004e3a:	f504 7514 	add.w	r5, r4, #592	; 0x250
90004e3e:	ee08 2a90 	vmov	s17, r2
90004e42:	e9c4 e332 	strd	lr, r3, [r4, #200]	; 0xc8
    void setOrigin(T x, T y)
    {
        CWRUtil::Q5 dxNew = CWRUtil::toQ5<T>(x);
        CWRUtil::Q5 dyNew = CWRUtil::toQ5<T>(y);

        if (dx == dxNew && dy == dyNew)
90004e46:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90004e4a:	b913      	cbnz	r3, 90004e52 <_ZN24screen_asteroidsViewBaseC1Ev+0x3d2>
90004e4c:	f8d4 30f8 	ldr.w	r3, [r4, #248]	; 0xf8
90004e50:	b12b      	cbz	r3, 90004e5e <_ZN24screen_asteroidsViewBaseC1Ev+0x3de>
        {
            return;
        }

        dx = dxNew;
90004e52:	2300      	movs	r3, #0
        dy = dyNew;

        updateAbstractShapeCache();
90004e54:	4648      	mov	r0, r9
        dy = dyNew;
90004e56:	e9c4 333d 	strd	r3, r3, [r4, #244]	; 0xf4
        updateAbstractShapeCache();
90004e5a:	f00c f969 	bl	90011130 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
     * @note The area containing the AbstractShape is not invalidated.
     */
    template <typename T>
    void setScale(T newXScale, T newYScale)
    {
        xScale = CWRUtil::toQ10<T>(newXScale);
90004e5e:	f44f 6380 	mov.w	r3, #1024	; 0x400
        yScale = CWRUtil::toQ10<T>(newYScale);
        updateAbstractShapeCache();
90004e62:	4648      	mov	r0, r9
        yScale = CWRUtil::toQ10<T>(newYScale);
90004e64:	e9c4 3340 	strd	r3, r3, [r4, #256]	; 0x100
        updateAbstractShapeCache();
90004e68:	f00c f962 	bl	90011130 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        if (shapeAngle != angleQ5)
90004e6c:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
90004e70:	b12b      	cbz	r3, 90004e7e <_ZN24screen_asteroidsViewBaseC1Ev+0x3fe>
            shapeAngle = angleQ5;
90004e72:	2300      	movs	r3, #0
            updateAbstractShapeCache();
90004e74:	4648      	mov	r0, r9
            shapeAngle = angleQ5;
90004e76:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
            updateAbstractShapeCache();
90004e7a:	f00c f959 	bl	90011130 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        canvasPainter = &painter;
90004e7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
            xCorner[i] = x, yCorner[i] = y;
90004e80:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90004e84:	f04f 0a00 	mov.w	sl, #0
        updateAbstractShapeCache();
90004e88:	4648      	mov	r0, r9
90004e8a:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004e8e:	f04f 33ff 	mov.w	r3, #4294967295
90004e92:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
90004e96:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90004e9a:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
90004e9e:	e9c4 2248 	strd	r2, r2, [r4, #288]	; 0x120
90004ea2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90004ea6:	e9c4 aa46 	strd	sl, sl, [r4, #280]	; 0x118
90004eaa:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
90004eae:	f00c f93f 	bl	90011130 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
90004eb2:	4649      	mov	r1, r9
90004eb4:	4638      	mov	r0, r7
    lbl_score.setXY(338, 3);
90004eb6:	f504 79aa 	add.w	r9, r4, #340	; 0x154
90004eba:	f00a fed1 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ebe:	4921      	ldr	r1, [pc, #132]	; (90004f44 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c4>)
        setX(x);
90004ec0:	f8d4 2154 	ldr.w	r2, [r4, #340]	; 0x154
        color = newColor;
90004ec4:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004ec8:	f8a4 a188 	strh.w	sl, [r4, #392]	; 0x188
        boundingArea = calculateBoundingArea();
90004ecc:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        rect.x = x;
90004ed0:	f8c4 1158 	str.w	r1, [r4, #344]	; 0x158
90004ed4:	491c      	ldr	r1, [pc, #112]	; (90004f48 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c8>)
        color = newColor;
90004ed6:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90004eda:	428a      	cmp	r2, r1
90004edc:	f040 81e5 	bne.w	900052aa <_ZN24screen_asteroidsViewBaseC1Ev+0x82a>
        boundingArea = calculateBoundingArea();
90004ee0:	f8c4 a198 	str.w	sl, [r4, #408]	; 0x198
90004ee4:	e9c4 a364 	strd	sl, r3, [r4, #400]	; 0x190
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004ee8:	4b18      	ldr	r3, [pc, #96]	; (90004f4c <_ZN24screen_asteroidsViewBaseC1Ev+0x4cc>)
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
90004eea:	f204 4aec 	addw	sl, r4, #1260	; 0x4ec
90004eee:	681b      	ldr	r3, [r3, #0]
90004ef0:	2b00      	cmp	r3, #0
90004ef2:	f000 81ec 	beq.w	900052ce <_ZN24screen_asteroidsViewBaseC1Ev+0x84e>
        return typedTextId < numberOfTypedTexts;
90004ef6:	4b16      	ldr	r3, [pc, #88]	; (90004f50 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ef8:	881b      	ldrh	r3, [r3, #0]
90004efa:	2b01      	cmp	r3, #1
90004efc:	f240 81e1 	bls.w	900052c2 <_ZN24screen_asteroidsViewBaseC1Ev+0x842>
        return texts->getText(typedTextId);
90004f00:	4b14      	ldr	r3, [pc, #80]	; (90004f54 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d4>)
90004f02:	2101      	movs	r1, #1
90004f04:	6818      	ldr	r0, [r3, #0]
90004f06:	f7ff fbcb 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90004f0a:	4a13      	ldr	r2, [pc, #76]	; (90004f58 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d8>)
90004f0c:	4603      	mov	r3, r0
90004f0e:	2106      	movs	r1, #6
90004f10:	4650      	mov	r0, sl
90004f12:	f012 ffcf 	bl	90017eb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_score.resizeToCurrentText();
90004f16:	4648      	mov	r0, r9
90004f18:	e026      	b.n	90004f68 <_ZN24screen_asteroidsViewBaseC1Ev+0x4e8>
90004f1a:	bf00      	nop
90004f1c:	900024a1 	.word	0x900024a1
90004f20:	9002a034 	.word	0x9002a034
90004f24:	90028d54 	.word	0x90028d54
90004f28:	90029f74 	.word	0x90029f74
90004f2c:	90029868 	.word	0x90029868
90004f30:	9002a314 	.word	0x9002a314
90004f34:	9002998c 	.word	0x9002998c
90004f38:	90004939 	.word	0x90004939
90004f3c:	ff333333 	.word	0xff333333
90004f40:	001d0022 	.word	0x001d0022
90004f44:	00030152 	.word	0x00030152
90004f48:	90004765 	.word	0x90004765
90004f4c:	240235c4 	.word	0x240235c4
90004f50:	240235c8 	.word	0x240235c8
90004f54:	240235d0 	.word	0x240235d0
90004f58:	9002985c 	.word	0x9002985c
90004f5c:	011001e0 	.word	0x011001e0
90004f60:	004f011d 	.word	0x004f011d
90004f64:	00e300e1 	.word	0x00e300e1
        wc1 = value;
90004f68:	f8c4 a19c 	str.w	sl, [r4, #412]	; 0x19c
        : typedTextId(id)
90004f6c:	f04f 0a02 	mov.w	sl, #2
90004f70:	f00d f8ae 	bl	900120d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90004f74:	4bd9      	ldr	r3, [pc, #868]	; (900052dc <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
90004f76:	4631      	mov	r1, r6
90004f78:	4648      	mov	r0, r9
90004f7a:	9314      	str	r3, [sp, #80]	; 0x50
90004f7c:	f8ad a054 	strh.w	sl, [sp, #84]	; 0x54
90004f80:	f00d f8c6 	bl	90012110 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004f84:	4649      	mov	r1, r9
90004f86:	4638      	mov	r0, r7
90004f88:	f00a fe6a 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f8c:	4ad4      	ldr	r2, [pc, #848]	; (900052e0 <_ZN24screen_asteroidsViewBaseC1Ev+0x860>)
90004f8e:	4bd5      	ldr	r3, [pc, #852]	; (900052e4 <_ZN24screen_asteroidsViewBaseC1Ev+0x864>)
90004f90:	f04f 0904 	mov.w	r9, #4
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90004f94:	4631      	mov	r1, r6
90004f96:	ee18 0a10 	vmov	r0, s16
90004f9a:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90004f9e:	e9c4 2369 	strd	r2, r3, [r4, #420]	; 0x1a4
90004fa2:	f00d faf0 	bl	90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004fa6:	4bd0      	ldr	r3, [pc, #832]	; (900052e8 <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
90004fa8:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004fac:	ee18 0a10 	vmov	r0, s16
90004fb0:	2100      	movs	r1, #0
90004fb2:	e9c4 3274 	strd	r3, r2, [r4, #464]	; 0x1d0
90004fb6:	f00c fb14 	bl	900115e2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart1);
90004fba:	ee18 1a10 	vmov	r1, s16
90004fbe:	4658      	mov	r0, fp
90004fc0:	f00a fe4e 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90004fc4:	ed9d 8a02 	vldr	s16, [sp, #8]
90004fc8:	4631      	mov	r1, r6
90004fca:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90004fce:	ee18 0a10 	vmov	r0, s16
90004fd2:	f00d fad8 	bl	90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004fd6:	4bc5      	ldr	r3, [pc, #788]	; (900052ec <_ZN24screen_asteroidsViewBaseC1Ev+0x86c>)
90004fd8:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004fdc:	ee18 0a10 	vmov	r0, s16
90004fe0:	2100      	movs	r1, #0
90004fe2:	e9c4 327f 	strd	r3, r2, [r4, #508]	; 0x1fc
90004fe6:	f00c fafc 	bl	900115e2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart2);
90004fea:	ee18 1a10 	vmov	r1, s16
90004fee:	4658      	mov	r0, fp
90004ff0:	f00a fe36 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ff4:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90004ff8:	f8dd 900c 	ldr.w	r9, [sp, #12]
90004ffc:	4631      	mov	r1, r6
90004ffe:	4648      	mov	r0, r9
90005000:	f00d fac1 	bl	90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005004:	4bba      	ldr	r3, [pc, #744]	; (900052f0 <_ZN24screen_asteroidsViewBaseC1Ev+0x870>)
90005006:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000500a:	4648      	mov	r0, r9
9000500c:	2100      	movs	r1, #0
9000500e:	e9c4 328a 	strd	r3, r2, [r4, #552]	; 0x228
90005012:	f00c fae6 	bl	900115e2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart3);
90005016:	4649      	mov	r1, r9
90005018:	4658      	mov	r0, fp
9000501a:	f04f 0901 	mov.w	r9, #1
9000501e:	f00a fe1f 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005022:	4659      	mov	r1, fp
90005024:	4638      	mov	r0, r7
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
90005026:	f06f 1b06 	mvn.w	fp, #393222	; 0x60006
9000502a:	f00a fe19 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000502e:	49b1      	ldr	r1, [pc, #708]	; (900052f4 <_ZN24screen_asteroidsViewBaseC1Ev+0x874>)
90005030:	4bb1      	ldr	r3, [pc, #708]	; (900052f8 <_ZN24screen_asteroidsViewBaseC1Ev+0x878>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
90005032:	aa13      	add	r2, sp, #76	; 0x4c
90005034:	9600      	str	r6, [sp, #0]
90005036:	ed9d 8a04 	vldr	s16, [sp, #16]
9000503a:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000503e:	ee18 0a10 	vmov	r0, s16
90005042:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90005046:	e9c4 1395 	strd	r1, r3, [r4, #596]	; 0x254
9000504a:	4bac      	ldr	r3, [pc, #688]	; (900052fc <_ZN24screen_asteroidsViewBaseC1Ev+0x87c>)
9000504c:	a911      	add	r1, sp, #68	; 0x44
9000504e:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
90005052:	2308      	movs	r3, #8
90005054:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005058:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
9000505c:	4613      	mov	r3, r2
9000505e:	aa12      	add	r2, sp, #72	; 0x48
90005060:	f00d f9c4 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_right);
90005064:	ee18 1a10 	vmov	r1, s16
90005068:	4628      	mov	r0, r5
9000506a:	f8c4 b2b4 	str.w	fp, [r4, #692]	; 0x2b4
9000506e:	f00a fdf7 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005072:	4ba3      	ldr	r3, [pc, #652]	; (90005300 <_ZN24screen_asteroidsViewBaseC1Ev+0x880>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
90005074:	ed9d 8a05 	vldr	s16, [sp, #20]
90005078:	aa13      	add	r2, sp, #76	; 0x4c
9000507a:	9600      	str	r6, [sp, #0]
9000507c:	a911      	add	r1, sp, #68	; 0x44
9000507e:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
90005082:	2306      	movs	r3, #6
90005084:	ee18 0a10 	vmov	r0, s16
90005088:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000508c:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005090:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005094:	4613      	mov	r3, r2
90005096:	aa12      	add	r2, sp, #72	; 0x48
90005098:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000509c:	f00d f9a6 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900050a0:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_down);
900050a4:	ee18 1a10 	vmov	r1, s16
900050a8:	4628      	mov	r0, r5
900050aa:	f8c4 22f0 	str.w	r2, [r4, #752]	; 0x2f0
900050ae:	f00a fdd7 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050b2:	4b94      	ldr	r3, [pc, #592]	; (90005304 <_ZN24screen_asteroidsViewBaseC1Ev+0x884>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
900050b4:	ed9d 8a06 	vldr	s16, [sp, #24]
900050b8:	aa13      	add	r2, sp, #76	; 0x4c
900050ba:	9600      	str	r6, [sp, #0]
900050bc:	a911      	add	r1, sp, #68	; 0x44
900050be:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
900050c2:	2307      	movs	r3, #7
900050c4:	ee18 0a10 	vmov	r0, s16
900050c8:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900050cc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900050d0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900050d4:	4613      	mov	r3, r2
900050d6:	aa12      	add	r2, sp, #72	; 0x48
900050d8:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900050dc:	f00d f986 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_left);
900050e0:	ee18 1a10 	vmov	r1, s16
900050e4:	4628      	mov	r0, r5
900050e6:	f8c4 b32c 	str.w	fp, [r4, #812]	; 0x32c
900050ea:	f00a fdb9 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050ee:	f240 137b 	movw	r3, #379	; 0x17b
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
900050f2:	f8dd b01c 	ldr.w	fp, [sp, #28]
900050f6:	aa13      	add	r2, sp, #76	; 0x4c
900050f8:	9600      	str	r6, [sp, #0]
900050fa:	a911      	add	r1, sp, #68	; 0x44
900050fc:	f8c4 3334 	str.w	r3, [r4, #820]	; 0x334
90005100:	2309      	movs	r3, #9
90005102:	4658      	mov	r0, fp
90005104:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90005108:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000510c:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005110:	4613      	mov	r3, r2
90005112:	aa12      	add	r2, sp, #72	; 0x48
90005114:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
90005118:	f00d f968 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000511c:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_up);
90005120:	4659      	mov	r1, fp
90005122:	4628      	mov	r0, r5
90005124:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
90005128:	f00a fd9a 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000512c:	f44f 1310 	mov.w	r3, #2359296	; 0x240000
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID));
90005130:	aa13      	add	r2, sp, #76	; 0x4c
90005132:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90005136:	9600      	str	r6, [sp, #0]
90005138:	a911      	add	r1, sp, #68	; 0x44
9000513a:	f8dd 9020 	ldr.w	r9, [sp, #32]
9000513e:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
90005142:	230a      	movs	r3, #10
90005144:	4648      	mov	r0, r9
90005146:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000514a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
9000514e:	f04f 3aff 	mov.w	sl, #4294967295
90005152:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005156:	4613      	mov	r3, r2
90005158:	aa12      	add	r2, sp, #72	; 0x48
9000515a:	f00d f947 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
9000515e:	f04f 1302 	mov.w	r3, #131074	; 0x20002
    container_controls.add(btn_shoot);
90005162:	4649      	mov	r1, r9
90005164:	4628      	mov	r0, r5
90005166:	f8c4 33a4 	str.w	r3, [r4, #932]	; 0x3a4
    btn_retry.setAction(buttonCallback);
9000516a:	f242 1918 	movw	r9, #8472	; 0x2118
    container_controls.add(btn_shoot);
9000516e:	f00a fd77 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005172:	4629      	mov	r1, r5
90005174:	4638      	mov	r0, r7
        visible = vis;
90005176:	2500      	movs	r5, #0
90005178:	f00a fd72 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
9000517c:	f04f 1304 	mov.w	r3, #262148	; 0x40004
90005180:	4861      	ldr	r0, [pc, #388]	; (90005308 <_ZN24screen_asteroidsViewBaseC1Ev+0x888>)
90005182:	f504 716a 	add.w	r1, r4, #936	; 0x3a8
90005186:	f8c4 a3d0 	str.w	sl, [r4, #976]	; 0x3d0
    btn_retry.setAction(buttonCallback);
9000518a:	44a1      	add	r9, r4
        visible = vis;
9000518c:	f884 53cd 	strb.w	r5, [r4, #973]	; 0x3cd
        rect.x = x;
90005190:	e9c4 03eb 	strd	r0, r3, [r4, #940]	; 0x3ac
90005194:	4638      	mov	r0, r7
90005196:	f00a fd63 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000519a:	4b5c      	ldr	r3, [pc, #368]	; (9000530c <_ZN24screen_asteroidsViewBaseC1Ev+0x88c>)
    container_game_over.add(bg_light_grey);
9000519c:	f504 6180 	add.w	r1, r4, #1024	; 0x400
900051a0:	4640      	mov	r0, r8
900051a2:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
900051a6:	4b5a      	ldr	r3, [pc, #360]	; (90005310 <_ZN24screen_asteroidsViewBaseC1Ev+0x890>)
900051a8:	f8c4 53d8 	str.w	r5, [r4, #984]	; 0x3d8
900051ac:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
900051b0:	4b58      	ldr	r3, [pc, #352]	; (90005314 <_ZN24screen_asteroidsViewBaseC1Ev+0x894>)
        visible = vis;
900051b2:	f884 53f9 	strb.w	r5, [r4, #1017]	; 0x3f9
        rect.x = x;
900051b6:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
900051ba:	4b57      	ldr	r3, [pc, #348]	; (90005318 <_ZN24screen_asteroidsViewBaseC1Ev+0x898>)
900051bc:	f8c4 3428 	str.w	r3, [r4, #1064]	; 0x428
900051c0:	f00a fd4e 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051c4:	4b55      	ldr	r3, [pc, #340]	; (9000531c <_ZN24screen_asteroidsViewBaseC1Ev+0x89c>)
    btn_retry.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID));
900051c6:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900051ca:	aa13      	add	r2, sp, #76	; 0x4c
900051cc:	9600      	str	r6, [sp, #0]
900051ce:	a911      	add	r1, sp, #68	; 0x44
900051d0:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
900051d4:	2305      	movs	r3, #5
900051d6:	4658      	mov	r0, fp
900051d8:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
900051dc:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900051e0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900051e4:	4613      	mov	r3, r2
900051e6:	aa12      	add	r2, sp, #72	; 0x48
900051e8:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
900051ec:	f00d f8fe 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_retry);
900051f0:	4659      	mov	r1, fp
900051f2:	4640      	mov	r0, r8
900051f4:	f8c4 a464 	str.w	sl, [r4, #1124]	; 0x464
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
900051f8:	f8c4 9454 	str.w	r9, [r4, #1108]	; 0x454
900051fc:	f00a fd30 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005200:	4847      	ldr	r0, [pc, #284]	; (90005320 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a0>)
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID));
90005202:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
90005206:	aa13      	add	r2, sp, #76	; 0x4c
90005208:	9600      	str	r6, [sp, #0]
9000520a:	a911      	add	r1, sp, #68	; 0x44
9000520c:	f8c4 046c 	str.w	r0, [r4, #1132]	; 0x46c
90005210:	200b      	movs	r0, #11
90005212:	4613      	mov	r3, r2
90005214:	aa12      	add	r2, sp, #72	; 0x48
90005216:	f8ad 004c 	strh.w	r0, [sp, #76]	; 0x4c
9000521a:	f8ad 0050 	strh.w	r0, [sp, #80]	; 0x50
9000521e:	4658      	mov	r0, fp
90005220:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
90005224:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
90005228:	f00d f8e0 	bl	900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_back);
9000522c:	4659      	mov	r1, fp
9000522e:	4640      	mov	r0, r8
90005230:	f8c4 a4a0 	str.w	sl, [r4, #1184]	; 0x4a0
90005234:	ee18 aa90 	vmov	sl, s17
90005238:	f8c4 9490 	str.w	r9, [r4, #1168]	; 0x490
9000523c:	f10d 0930 	add.w	r9, sp, #48	; 0x30
90005240:	f00a fd0e 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005244:	4b37      	ldr	r3, [pc, #220]	; (90005324 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a4>)
90005246:	ee18 1a90 	vmov	r1, s17
9000524a:	4648      	mov	r0, r9
9000524c:	f8c4 34a8 	str.w	r3, [r4, #1192]	; 0x4a8
        color = newColor;
90005250:	4b35      	ldr	r3, [pc, #212]	; (90005328 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a8>)
        linespace = space;
90005252:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        color = newColor;
90005256:	f8c4 34d4 	str.w	r3, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
9000525a:	f00c fcb1 	bl	90011bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000525e:	4b1f      	ldr	r3, [pc, #124]	; (900052dc <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
90005260:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
90005264:	9314      	str	r3, [sp, #80]	; 0x50
90005266:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
9000526a:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
9000526e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DW7K));
90005272:	4631      	mov	r1, r6
90005274:	ee18 0a90 	vmov	r0, s17
90005278:	f00c ff4a 	bl	90012110 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container_game_over.add(lbl_over);
9000527c:	ee18 1a90 	vmov	r1, s17
90005280:	4640      	mov	r0, r8
90005282:	f00a fced 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005286:	4638      	mov	r0, r7
90005288:	4641      	mov	r1, r8
9000528a:	f00a fce9 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
9000528e:	4620      	mov	r0, r4
90005290:	b017      	add	sp, #92	; 0x5c
90005292:	ecbd 8b02 	vpop	{d8}
90005296:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
9000529a:	6898      	ldr	r0, [r3, #8]
9000529c:	4d23      	ldr	r5, [pc, #140]	; (9000532c <_ZN24screen_asteroidsViewBaseC1Ev+0x8ac>)
9000529e:	6803      	ldr	r3, [r0, #0]
900052a0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900052a2:	42aa      	cmp	r2, r5
900052a4:	f43f ac8c 	beq.w	90004bc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
900052a8:	e44f      	b.n	90004b4a <_ZN24screen_asteroidsViewBaseC1Ev+0xca>
900052aa:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
900052ae:	4649      	mov	r1, r9
900052b0:	4650      	mov	r0, sl
900052b2:	4790      	blx	r2
900052b4:	f504 73c8 	add.w	r3, r4, #400	; 0x190
900052b8:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
900052bc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
900052c0:	e612      	b.n	90004ee8 <_ZN24screen_asteroidsViewBaseC1Ev+0x468>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900052c2:	4b1b      	ldr	r3, [pc, #108]	; (90005330 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b0>)
900052c4:	2161      	movs	r1, #97	; 0x61
900052c6:	4a1b      	ldr	r2, [pc, #108]	; (90005334 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
900052c8:	481b      	ldr	r0, [pc, #108]	; (90005338 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>)
900052ca:	f020 fee9 	bl	900260a0 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900052ce:	4b1b      	ldr	r3, [pc, #108]	; (9000533c <_ZN24screen_asteroidsViewBaseC1Ev+0x8bc>)
900052d0:	2160      	movs	r1, #96	; 0x60
900052d2:	4a18      	ldr	r2, [pc, #96]	; (90005334 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
900052d4:	4818      	ldr	r0, [pc, #96]	; (90005338 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>)
900052d6:	f020 fee3 	bl	900260a0 <__assert_func>
900052da:	bf00      	nop
900052dc:	90028d54 	.word	0x90028d54
900052e0:	000400e9 	.word	0x000400e9
900052e4:	0014005c 	.word	0x0014005c
900052e8:	00010048 	.word	0x00010048
900052ec:	00010031 	.word	0x00010031
900052f0:	0001001a 	.word	0x0001001a
900052f4:	009e000f 	.word	0x009e000f
900052f8:	006c01c3 	.word	0x006c01c3
900052fc:	0024019f 	.word	0x0024019f
90005300:	0048017b 	.word	0x0048017b
90005304:	00240157 	.word	0x00240157
90005308:	00db00ee 	.word	0x00db00ee
9000530c:	011001e0 	.word	0x011001e0
90005310:	0049005d 	.word	0x0049005d
90005314:	007e0127 	.word	0x007e0127
90005318:	ff828282 	.word	0xff828282
9000531c:	00890112 	.word	0x00890112
90005320:	008900ab 	.word	0x008900ab
90005324:	00500082 	.word	0x00500082
90005328:	ff851717 	.word	0xff851717
9000532c:	900024a1 	.word	0x900024a1
90005330:	900296e4 	.word	0x900296e4
90005334:	90029824 	.word	0x90029824
90005338:	9002969c 	.word	0x9002969c
9000533c:	9002961c 	.word	0x9002961c

90005340 <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
90005340:	4770      	bx	lr
90005342:	bf00      	nop

90005344 <_ZN26screen_game_selectViewBaseD1Ev>:
}

screen_game_selectViewBase::~screen_game_selectViewBase()
{

}
90005344:	4770      	bx	lr
90005346:	bf00      	nop

90005348 <_ZN26screen_game_selectViewBase11setupScreenEv>:

void screen_game_selectViewBase::setupScreen()
{

}
90005348:	4770      	bx	lr
9000534a:	bf00      	nop

9000534c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
9000534c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90005350:	b133      	cbz	r3, 90005360 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
90005352:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005354:	f100 0374 	add.w	r3, r0, #116	; 0x74
90005358:	65c2      	str	r2, [r0, #92]	; 0x5c
9000535a:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
9000535c:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
9000535e:	4770      	bx	lr
90005360:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005362:	f100 0370 	add.w	r3, r0, #112	; 0x70
90005366:	65c2      	str	r2, [r0, #92]	; 0x5c
90005368:	681b      	ldr	r3, [r3, #0]
9000536a:	6603      	str	r3, [r0, #96]	; 0x60
    }
9000536c:	4770      	bx	lr
9000536e:	bf00      	nop

90005370 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005370:	4770      	bx	lr
90005372:	bf00      	nop

90005374 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
90005374:	4770      	bx	lr
90005376:	bf00      	nop

90005378 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
90005378:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000537a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
9000537c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000537e:	6844      	ldr	r4, [r0, #4]
90005380:	f012 0f01 	tst.w	r2, #1
90005384:	eb04 0062 	add.w	r0, r4, r2, asr #1
90005388:	d103      	bne.n	90005392 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
9000538a:	689b      	ldr	r3, [r3, #8]
    }
9000538c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005390:	4718      	bx	r3
90005392:	ea4f 0c62 	mov.w	ip, r2, asr #1
90005396:	689b      	ldr	r3, [r3, #8]
90005398:	f854 200c 	ldr.w	r2, [r4, ip]
    }
9000539c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
900053a0:	58d3      	ldr	r3, [r2, r3]
900053a2:	4718      	bx	r3

900053a4 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
900053a4:	6843      	ldr	r3, [r0, #4]
900053a6:	b13b      	cbz	r3, 900053b8 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
900053a8:	6883      	ldr	r3, [r0, #8]
900053aa:	b10b      	cbz	r3, 900053b0 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
900053ac:	2001      	movs	r0, #1
    }
900053ae:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
900053b0:	68c0      	ldr	r0, [r0, #12]
900053b2:	f000 0001 	and.w	r0, r0, #1
900053b6:	4770      	bx	lr
900053b8:	4618      	mov	r0, r3
900053ba:	4770      	bx	lr

900053bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900053bc:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
900053c0:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
900053c4:	4770      	bx	lr
900053c6:	bf00      	nop

900053c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
900053c8:	b510      	push	{r4, lr}
900053ca:	4604      	mov	r4, r0
900053cc:	2178      	movs	r1, #120	; 0x78
900053ce:	f020 fe38 	bl	90026042 <_ZdlPvj>
900053d2:	4620      	mov	r0, r4
900053d4:	bd10      	pop	{r4, pc}
900053d6:	bf00      	nop

900053d8 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900053d8:	b510      	push	{r4, lr}
900053da:	4604      	mov	r4, r0
900053dc:	2110      	movs	r1, #16
900053de:	f020 fe30 	bl	90026042 <_ZdlPvj>
900053e2:	4620      	mov	r0, r4
900053e4:	bd10      	pop	{r4, pc}
900053e6:	bf00      	nop

900053e8 <_ZN26screen_game_selectViewBaseD0Ev>:
screen_game_selectViewBase::~screen_game_selectViewBase()
900053e8:	b510      	push	{r4, lr}
900053ea:	4604      	mov	r4, r0
}
900053ec:	f44f 71ca 	mov.w	r1, #404	; 0x194
900053f0:	f020 fe27 	bl	90026042 <_ZdlPvj>
900053f4:	4620      	mov	r0, r4
900053f6:	bd10      	pop	{r4, pc}

900053f8 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_game_selectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &_btn_asteroids)
900053f8:	30c4      	adds	r0, #196	; 0xc4
900053fa:	4288      	cmp	r0, r1
900053fc:	d000      	beq.n	90005400 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
900053fe:	4770      	bx	lr
{
90005400:	b508      	push	{r3, lr}
    virtual ~screen_game_selectViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005402:	f00f fcd1 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
        //game_asteroids
        //When _btn_asteroids clicked change screen to screen_asteroids
        //Go to screen_asteroids with screen transition towards East
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
    }
}
90005406:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
9000540a:	f7fe bf2d 	b.w	90004268 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>
9000540e:	bf00      	nop

90005410 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90005410:	6b03      	ldr	r3, [r0, #48]	; 0x30
90005412:	b30b      	cbz	r3, 90005458 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90005414:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
90005416:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
90005418:	68d1      	ldr	r1, [r2, #12]
9000541a:	4604      	mov	r4, r0
9000541c:	481a      	ldr	r0, [pc, #104]	; (90005488 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
9000541e:	4281      	cmp	r1, r0
90005420:	d11b      	bne.n	9000545a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90005422:	6858      	ldr	r0, [r3, #4]
90005424:	b180      	cbz	r0, 90005448 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
90005426:	6899      	ldr	r1, [r3, #8]
90005428:	b1f1      	cbz	r1, 90005468 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
9000542a:	6892      	ldr	r2, [r2, #8]
9000542c:	4917      	ldr	r1, [pc, #92]	; (9000548c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
9000542e:	428a      	cmp	r2, r1
90005430:	d124      	bne.n	9000547c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90005432:	68da      	ldr	r2, [r3, #12]
90005434:	6858      	ldr	r0, [r3, #4]
90005436:	eb00 0062 	add.w	r0, r0, r2, asr #1
9000543a:	07d2      	lsls	r2, r2, #31
9000543c:	d405      	bmi.n	9000544a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
9000543e:	4621      	mov	r1, r4
90005440:	689b      	ldr	r3, [r3, #8]
        }
    }
90005442:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005446:	4718      	bx	r3
90005448:	bd70      	pop	{r4, r5, r6, pc}
9000544a:	6899      	ldr	r1, [r3, #8]
9000544c:	6803      	ldr	r3, [r0, #0]
9000544e:	585b      	ldr	r3, [r3, r1]
90005450:	4621      	mov	r1, r4
90005452:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005456:	4718      	bx	r3
90005458:	4770      	bx	lr
        if (action && action->isValid())
9000545a:	4618      	mov	r0, r3
9000545c:	4788      	blx	r1
9000545e:	2800      	cmp	r0, #0
90005460:	d0f2      	beq.n	90005448 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
90005462:	6b23      	ldr	r3, [r4, #48]	; 0x30
90005464:	681a      	ldr	r2, [r3, #0]
90005466:	e7e0      	b.n	9000542a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
90005468:	68dd      	ldr	r5, [r3, #12]
9000546a:	07ee      	lsls	r6, r5, #31
9000546c:	d5ec      	bpl.n	90005448 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000546e:	6892      	ldr	r2, [r2, #8]
90005470:	4e06      	ldr	r6, [pc, #24]	; (9000548c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
90005472:	42b2      	cmp	r2, r6
90005474:	d102      	bne.n	9000547c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
90005476:	eb00 0065 	add.w	r0, r0, r5, asr #1
9000547a:	e7e7      	b.n	9000544c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
9000547c:	4621      	mov	r1, r4
9000547e:	4618      	mov	r0, r3
    }
90005480:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
90005484:	4710      	bx	r2
90005486:	bf00      	nop
90005488:	900053a5 	.word	0x900053a5
9000548c:	90005379 	.word	0x90005379

90005490 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005490:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005492:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005494:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005496:	bf18      	it	ne
90005498:	2201      	movne	r2, #1
        return pressed;
9000549a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
9000549e:	460d      	mov	r5, r1
900054a0:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
900054a2:	42b2      	cmp	r2, r6
900054a4:	d004      	beq.n	900054b0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
900054a6:	b116      	cbz	r6, 900054ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900054a8:	792b      	ldrb	r3, [r5, #4]
900054aa:	2b01      	cmp	r3, #1
900054ac:	d00e      	beq.n	900054cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
900054ae:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
900054b0:	fab3 f383 	clz	r3, r3
900054b4:	095b      	lsrs	r3, r3, #5
900054b6:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
900054ba:	6803      	ldr	r3, [r0, #0]
900054bc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
900054c0:	4798      	blx	r3
            invalidate();
900054c2:	6823      	ldr	r3, [r4, #0]
900054c4:	4620      	mov	r0, r4
900054c6:	695b      	ldr	r3, [r3, #20]
900054c8:	4798      	blx	r3
900054ca:	e7ec      	b.n	900054a6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
900054cc:	6823      	ldr	r3, [r4, #0]
900054ce:	4a20      	ldr	r2, [pc, #128]	; (90005550 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
900054d0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
900054d4:	4293      	cmp	r3, r2
900054d6:	d127      	bne.n	90005528 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
900054d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
900054da:	2b00      	cmp	r3, #0
900054dc:	d0e7      	beq.n	900054ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900054de:	6819      	ldr	r1, [r3, #0]
900054e0:	481c      	ldr	r0, [pc, #112]	; (90005554 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
900054e2:	68ca      	ldr	r2, [r1, #12]
900054e4:	4282      	cmp	r2, r0
900054e6:	d123      	bne.n	90005530 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
900054e8:	685a      	ldr	r2, [r3, #4]
900054ea:	2a00      	cmp	r2, #0
900054ec:	d0df      	beq.n	900054ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
900054ee:	689d      	ldr	r5, [r3, #8]
900054f0:	b175      	cbz	r5, 90005510 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
900054f2:	688e      	ldr	r6, [r1, #8]
900054f4:	4a18      	ldr	r2, [pc, #96]	; (90005558 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
900054f6:	4296      	cmp	r6, r2
900054f8:	d123      	bne.n	90005542 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
900054fa:	68d9      	ldr	r1, [r3, #12]
900054fc:	685a      	ldr	r2, [r3, #4]
900054fe:	eb02 0061 	add.w	r0, r2, r1, asr #1
90005502:	07ca      	lsls	r2, r1, #31
90005504:	d41b      	bmi.n	9000553e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
90005506:	689b      	ldr	r3, [r3, #8]
90005508:	4621      	mov	r1, r4
    }
9000550a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000550e:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90005510:	68d8      	ldr	r0, [r3, #12]
90005512:	07c6      	lsls	r6, r0, #31
90005514:	d5cb      	bpl.n	900054ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005516:	688e      	ldr	r6, [r1, #8]
90005518:	490f      	ldr	r1, [pc, #60]	; (90005558 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000551a:	428e      	cmp	r6, r1
9000551c:	d111      	bne.n	90005542 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000551e:	eb02 0060 	add.w	r0, r2, r0, asr #1
90005522:	6803      	ldr	r3, [r0, #0]
90005524:	595b      	ldr	r3, [r3, r5]
90005526:	e7ef      	b.n	90005508 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
90005528:	4620      	mov	r0, r4
    }
9000552a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
9000552e:	4718      	bx	r3
        if (action && action->isValid())
90005530:	4618      	mov	r0, r3
90005532:	4790      	blx	r2
90005534:	2800      	cmp	r0, #0
90005536:	d0ba      	beq.n	900054ae <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
90005538:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000553a:	6819      	ldr	r1, [r3, #0]
9000553c:	e7d9      	b.n	900054f2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
9000553e:	689d      	ldr	r5, [r3, #8]
90005540:	e7ef      	b.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
90005542:	4621      	mov	r1, r4
90005544:	4618      	mov	r0, r3
90005546:	4633      	mov	r3, r6
    }
90005548:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9000554c:	4718      	bx	r3
9000554e:	bf00      	nop
90005550:	90005411 	.word	0x90005411
90005554:	900053a5 	.word	0x900053a5
90005558:	90005379 	.word	0x90005379

9000555c <_ZN26screen_game_selectViewBaseC1Ev>:
screen_game_selectViewBase::screen_game_selectViewBase() :
9000555c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005560:	b086      	sub	sp, #24
90005562:	4604      	mov	r4, r0
90005564:	f010 ffee 	bl	90016544 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90005568:	4b87      	ldr	r3, [pc, #540]	; (90005788 <_ZN26screen_game_selectViewBaseC1Ev+0x22c>)
9000556a:	2500      	movs	r5, #0
          touchable(false),
9000556c:	f44f 7680 	mov.w	r6, #256	; 0x100
90005570:	27ff      	movs	r7, #255	; 0xff
    flexButtonCallback(this, &screen_game_selectViewBase::flexButtonCallbackHandler)
90005572:	4a86      	ldr	r2, [pc, #536]	; (9000578c <_ZN26screen_game_selectViewBaseC1Ev+0x230>)
90005574:	6423      	str	r3, [r4, #64]	; 0x40
90005576:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
9000557a:	66e3      	str	r3, [r4, #108]	; 0x6c
        T::add(borderBox);
9000557c:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
90005580:	4b83      	ldr	r3, [pc, #524]	; (90005790 <_ZN26screen_game_selectViewBaseC1Ev+0x234>)
90005582:	4650      	mov	r0, sl
90005584:	6022      	str	r2, [r4, #0]
90005586:	f104 0898 	add.w	r8, r4, #152	; 0x98
9000558a:	63e5      	str	r5, [r4, #60]	; 0x3c
9000558c:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90005590:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
90005594:	66a5      	str	r5, [r4, #104]	; 0x68
90005596:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
9000559a:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
9000559e:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
        : typedTextId(id)
900055a2:	f8df 9224 	ldr.w	r9, [pc, #548]	; 900057c8 <_ZN26screen_game_selectViewBaseC1Ev+0x26c>
        : x(0), y(0), width(0), height(0)
900055a6:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
900055aa:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
900055ae:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
900055b2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
900055b6:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
900055ba:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
900055be:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
900055c2:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
900055c6:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
900055ca:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
900055ce:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
900055d2:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
900055d6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
900055da:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
900055de:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
900055e2:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
900055e6:	f240 1301 	movw	r3, #257	; 0x101
900055ea:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
900055ee:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
900055f2:	4b68      	ldr	r3, [pc, #416]	; (90005794 <_ZN26screen_game_selectViewBaseC1Ev+0x238>)
900055f4:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
900055f8:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
900055fc:	4b66      	ldr	r3, [pc, #408]	; (90005798 <_ZN26screen_game_selectViewBaseC1Ev+0x23c>)
900055fe:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90005602:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
90005606:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
9000560a:	f884 711e 	strb.w	r7, [r4, #286]	; 0x11e
9000560e:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        rect.x = x;
90005612:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
90005616:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
9000561a:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
9000561e:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
90005622:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
90005626:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
9000562a:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(col)
9000562e:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
        : color(0)
90005632:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
90005636:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
9000563a:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
9000563e:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
        T::add(borderBox);
90005642:	f00a fb0d 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005646:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
9000564a:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
        container.add(d);
9000564e:	f104 0140 	add.w	r1, r4, #64	; 0x40
        rect.x = x;
90005652:	4e52      	ldr	r6, [pc, #328]	; (9000579c <_ZN26screen_game_selectViewBaseC1Ev+0x240>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005654:	f8c4 7172 	str.w	r7, [r4, #370]	; 0x172
90005658:	1d27      	adds	r7, r4, #4
        : color(col)
9000565a:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
9000565e:	4638      	mov	r0, r7
90005660:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
              text(0)
90005664:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
90005668:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
9000566c:	6465      	str	r5, [r4, #68]	; 0x44
9000566e:	f8c4 4188 	str.w	r4, [r4, #392]	; 0x188
90005672:	64a6      	str	r6, [r4, #72]	; 0x48
90005674:	f8c4 9164 	str.w	r9, [r4, #356]	; 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90005678:	e9c4 535e 	strd	r5, r3, [r4, #376]	; 0x178
9000567c:	4b48      	ldr	r3, [pc, #288]	; (900057a0 <_ZN26screen_game_selectViewBaseC1Ev+0x244>)
9000567e:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90005682:	4b48      	ldr	r3, [pc, #288]	; (900057a4 <_ZN26screen_game_selectViewBaseC1Ev+0x248>)
90005684:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90005688:	4b47      	ldr	r3, [pc, #284]	; (900057a8 <_ZN26screen_game_selectViewBaseC1Ev+0x24c>)
9000568a:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
9000568e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90005692:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        color = newColor;
90005696:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        : x(0), y(0), width(0), height(0)
9000569a:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
9000569e:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
900056a2:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
900056a6:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
900056aa:	66a3      	str	r3, [r4, #104]	; 0x68
900056ac:	f00a fad8 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900056b0:	4b3e      	ldr	r3, [pc, #248]	; (900057ac <_ZN26screen_game_selectViewBaseC1Ev+0x250>)
900056b2:	f104 016c 	add.w	r1, r4, #108	; 0x6c
900056b6:	4638      	mov	r0, r7
900056b8:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        rect.x = x;
900056bc:	e9c4 561c 	strd	r5, r6, [r4, #112]	; 0x70
900056c0:	f00a face 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
900056c4:	493a      	ldr	r1, [pc, #232]	; (900057b0 <_ZN26screen_game_selectViewBaseC1Ev+0x254>)
900056c6:	4b3b      	ldr	r3, [pc, #236]	; (900057b4 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
900056c8:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
900056cc:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
900056d0:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
900056d4:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
900056d8:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
900056dc:	4b36      	ldr	r3, [pc, #216]	; (900057b8 <_ZN26screen_game_selectViewBaseC1Ev+0x25c>)
        down = colorPressed;
900056de:	4a37      	ldr	r2, [pc, #220]	; (900057bc <_ZN26screen_game_selectViewBaseC1Ev+0x260>)
900056e0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
900056e4:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
        down = colorPressed;
900056e8:	4b35      	ldr	r3, [pc, #212]	; (900057c0 <_ZN26screen_game_selectViewBaseC1Ev+0x264>)
        borderBox.setColor(T::getPressed() ? down : up);
900056ea:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
900056ee:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
900056f2:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
900056f6:	f504 759e 	add.w	r5, r4, #316	; 0x13c
        down = colorPressed;
900056fa:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
900056fe:	2900      	cmp	r1, #0
90005700:	d03e      	beq.n	90005780 <_ZN26screen_game_selectViewBaseC1Ev+0x224>
90005702:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005704:	f504 729c 	add.w	r2, r4, #312	; 0x138
90005708:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
9000570c:	2600      	movs	r6, #0
9000570e:	6813      	ldr	r3, [r2, #0]
    btn_asteroids.add(_btn_asteroids);
90005710:	4651      	mov	r1, sl
90005712:	4640      	mov	r0, r8
90005714:	f8c4 60c8 	str.w	r6, [r4, #200]	; 0xc8
        borderColor = colorBorder;
90005718:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_asteroids.setAction(flexButtonCallback);
9000571c:	f504 73c2 	add.w	r3, r4, #388	; 0x184
        action = &callback;
90005720:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90005724:	4b23      	ldr	r3, [pc, #140]	; (900057b4 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
90005726:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    btn_asteroids.add(_btn_asteroids);
9000572a:	f00a fa99 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000572e:	4b25      	ldr	r3, [pc, #148]	; (900057c4 <_ZN26screen_game_selectViewBaseC1Ev+0x268>)
        linespace = space;
90005730:	f8a4 6170 	strh.w	r6, [r4, #368]	; 0x170
        boundingArea = calculateBoundingArea();
90005734:	466e      	mov	r6, sp
90005736:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        color = newColor;
9000573a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
9000573e:	4629      	mov	r1, r5
90005740:	4630      	mov	r0, r6
        color = newColor;
90005742:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        boundingArea = calculateBoundingArea();
90005746:	f00c fa3b 	bl	90011bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000574a:	2203      	movs	r2, #3
9000574c:	f105 033c 	add.w	r3, r5, #60	; 0x3c
90005750:	f8cd 9010 	str.w	r9, [sp, #16]
90005754:	f8ad 2014 	strh.w	r2, [sp, #20]
90005758:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
9000575c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_asteroids.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19SB));
90005760:	a904      	add	r1, sp, #16
90005762:	4628      	mov	r0, r5
90005764:	f00c fcd4 	bl	90012110 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_asteroids.add(lbl_asteroids);
90005768:	4629      	mov	r1, r5
9000576a:	4640      	mov	r0, r8
9000576c:	f00a fa78 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005770:	4638      	mov	r0, r7
90005772:	4641      	mov	r1, r8
90005774:	f00a fa74 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005778:	4620      	mov	r0, r4
9000577a:	b006      	add	sp, #24
9000577c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90005780:	f504 729a 	add.w	r2, r4, #308	; 0x134
90005784:	e7c0      	b.n	90005708 <_ZN26screen_game_selectViewBaseC1Ev+0x1ac>
90005786:	bf00      	nop
90005788:	9002a3a4 	.word	0x9002a3a4
9000578c:	90029a98 	.word	0x90029a98
90005790:	90029f74 	.word	0x90029f74
90005794:	900299e4 	.word	0x900299e4
90005798:	9002a40c 	.word	0x9002a40c
9000579c:	011001e0 	.word	0x011001e0
900057a0:	90029a80 	.word	0x90029a80
900057a4:	900053f9 	.word	0x900053f9
900057a8:	9002a314 	.word	0x9002a314
900057ac:	ff3d3d3d 	.word	0xff3d3d3d
900057b0:	ff003366 	.word	0xff003366
900057b4:	003800f0 	.word	0x003800f0
900057b8:	0014000f 	.word	0x0014000f
900057bc:	ff7a7a05 	.word	0xff7a7a05
900057c0:	ffc7c73c 	.word	0xffc7c73c
900057c4:	0008001b 	.word	0x0008001b
900057c8:	90028d54 	.word	0x90028d54

900057cc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
900057cc:	4770      	bx	lr
900057ce:	bf00      	nop

900057d0 <_ZN19FrontendApplicationD0Ev>:
900057d0:	b510      	push	{r4, lr}
900057d2:	4604      	mov	r4, r0
900057d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
900057d8:	f020 fc33 	bl	90026042 <_ZdlPvj>
900057dc:	4620      	mov	r0, r4
900057de:	bd10      	pop	{r4, pc}

900057e0 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
900057e0:	b510      	push	{r4, lr}
900057e2:	4604      	mov	r4, r0
    {
        model.tick();
900057e4:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
900057e8:	f000 f822 	bl	90005830 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
900057ec:	4620      	mov	r0, r4
    }
900057ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
900057f2:	f00f bb5b 	b.w	90014eac <_ZN8touchgfx11Application15handleTickEventEv>
900057f6:	bf00      	nop

900057f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
900057f8:	b510      	push	{r4, lr}
900057fa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
900057fc:	f7fe fce8 	bl	900041d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005800:	4b01      	ldr	r3, [pc, #4]	; (90005808 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005802:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005804:	6023      	str	r3, [r4, #0]
}
90005806:	bd10      	pop	{r4, pc}
90005808:	90029acc 	.word	0x90029acc

9000580c <_ZN13ModelListener9move_shipEv>:
    }

    virtual void move_ship(){}
9000580c:	4770      	bx	lr
9000580e:	bf00      	nop

90005810 <_ZN13ModelListener12move_bulletsEv>:
    virtual void move_bullets(){}
90005810:	4770      	bx	lr
90005812:	bf00      	nop

90005814 <_ZN13ModelListener10move_rocksEv>:
    virtual void move_rocks(){}
90005814:	4770      	bx	lr
90005816:	bf00      	nop

90005818 <_ZN13ModelListener25is_asteroids_game_startedEv>:

    virtual bool is_asteroids_game_started() {return false;}
90005818:	2000      	movs	r0, #0
9000581a:	4770      	bx	lr

9000581c <_ZN13ModelListener21check_ship_collisionsEv>:

    virtual void check_ship_collisions(){}
9000581c:	4770      	bx	lr
9000581e:	bf00      	nop

90005820 <_ZN13ModelListener23check_bullet_collisionsEv>:
    virtual void check_bullet_collisions(){}
90005820:	4770      	bx	lr
90005822:	bf00      	nop

90005824 <_ZN13ModelListener20set_allowed_to_shootEb>:

    virtual void set_allowed_to_shoot(bool value){}
90005824:	4770      	bx	lr
90005826:	bf00      	nop

90005828 <_ZN5ModelC1Ev>:
extern "C" {
	extern osSemaphoreId_t bullet_timer_started_semaphoreHandle;
	extern osSemaphoreId_t bullet_timer_ended_semaphoreHandle;
}

Model::Model() : modelListener(0)
90005828:	2200      	movs	r2, #0
9000582a:	6002      	str	r2, [r0, #0]
{

}
9000582c:	4770      	bx	lr
9000582e:	bf00      	nop

90005830 <_ZN5Model4tickEv>:

void Model::tick()
{
90005830:	b570      	push	{r4, r5, r6, lr}
90005832:	4604      	mov	r4, r0
	if( modelListener->is_asteroids_game_started() ) {
90005834:	6800      	ldr	r0, [r0, #0]
90005836:	4a21      	ldr	r2, [pc, #132]	; (900058bc <_ZN5Model4tickEv+0x8c>)
90005838:	6803      	ldr	r3, [r0, #0]
9000583a:	695b      	ldr	r3, [r3, #20]
9000583c:	4293      	cmp	r3, r2
9000583e:	d100      	bne.n	90005842 <_ZN5Model4tickEv+0x12>
		asteroids_tick();
	}
}
90005840:	bd70      	pop	{r4, r5, r6, pc}
	if( modelListener->is_asteroids_game_started() ) {
90005842:	4798      	blx	r3
90005844:	2800      	cmp	r0, #0
90005846:	d0fb      	beq.n	90005840 <_ZN5Model4tickEv+0x10>
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
}

void Model::bullet_timer_ended()
{
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
90005848:	4d1d      	ldr	r5, [pc, #116]	; (900058c0 <_ZN5Model4tickEv+0x90>)
9000584a:	6828      	ldr	r0, [r5, #0]
9000584c:	f007 fb9e 	bl	9000cf8c <osSemaphoreGetCount>
90005850:	b1c0      	cbz	r0, 90005884 <_ZN5Model4tickEv+0x54>
	modelListener->move_ship();
90005852:	6820      	ldr	r0, [r4, #0]
90005854:	6803      	ldr	r3, [r0, #0]
90005856:	689a      	ldr	r2, [r3, #8]
90005858:	491a      	ldr	r1, [pc, #104]	; (900058c4 <_ZN5Model4tickEv+0x94>)
9000585a:	428a      	cmp	r2, r1
9000585c:	d122      	bne.n	900058a4 <_ZN5Model4tickEv+0x74>
	modelListener->move_bullets();
9000585e:	68da      	ldr	r2, [r3, #12]
90005860:	4919      	ldr	r1, [pc, #100]	; (900058c8 <_ZN5Model4tickEv+0x98>)
90005862:	428a      	cmp	r2, r1
90005864:	d126      	bne.n	900058b4 <_ZN5Model4tickEv+0x84>
	modelListener->move_rocks();
90005866:	691a      	ldr	r2, [r3, #16]
90005868:	4918      	ldr	r1, [pc, #96]	; (900058cc <_ZN5Model4tickEv+0x9c>)
9000586a:	428a      	cmp	r2, r1
9000586c:	d11e      	bne.n	900058ac <_ZN5Model4tickEv+0x7c>
	modelListener->check_bullet_collisions();
9000586e:	69da      	ldr	r2, [r3, #28]
90005870:	4917      	ldr	r1, [pc, #92]	; (900058d0 <_ZN5Model4tickEv+0xa0>)
90005872:	428a      	cmp	r2, r1
90005874:	d112      	bne.n	9000589c <_ZN5Model4tickEv+0x6c>
	modelListener->check_ship_collisions();
90005876:	699b      	ldr	r3, [r3, #24]
90005878:	4a16      	ldr	r2, [pc, #88]	; (900058d4 <_ZN5Model4tickEv+0xa4>)
9000587a:	4293      	cmp	r3, r2
9000587c:	d0e0      	beq.n	90005840 <_ZN5Model4tickEv+0x10>
}
9000587e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modelListener->check_ship_collisions();
90005882:	4718      	bx	r3
		osSemaphoreRelease(bullet_timer_ended_semaphoreHandle);
90005884:	6828      	ldr	r0, [r5, #0]
90005886:	f007 fb55 	bl	9000cf34 <osSemaphoreRelease>
		modelListener->set_allowed_to_shoot(true);
9000588a:	6820      	ldr	r0, [r4, #0]
9000588c:	4912      	ldr	r1, [pc, #72]	; (900058d8 <_ZN5Model4tickEv+0xa8>)
9000588e:	6803      	ldr	r3, [r0, #0]
90005890:	6a1a      	ldr	r2, [r3, #32]
90005892:	428a      	cmp	r2, r1
90005894:	d0df      	beq.n	90005856 <_ZN5Model4tickEv+0x26>
90005896:	2101      	movs	r1, #1
90005898:	4790      	blx	r2
9000589a:	e7da      	b.n	90005852 <_ZN5Model4tickEv+0x22>
	modelListener->check_bullet_collisions();
9000589c:	4790      	blx	r2
	modelListener->check_ship_collisions();
9000589e:	6820      	ldr	r0, [r4, #0]
900058a0:	6803      	ldr	r3, [r0, #0]
900058a2:	e7e8      	b.n	90005876 <_ZN5Model4tickEv+0x46>
	modelListener->move_ship();
900058a4:	4790      	blx	r2
	modelListener->move_bullets();
900058a6:	6820      	ldr	r0, [r4, #0]
900058a8:	6803      	ldr	r3, [r0, #0]
900058aa:	e7d8      	b.n	9000585e <_ZN5Model4tickEv+0x2e>
	modelListener->move_rocks();
900058ac:	4790      	blx	r2
	modelListener->check_bullet_collisions();
900058ae:	6820      	ldr	r0, [r4, #0]
900058b0:	6803      	ldr	r3, [r0, #0]
900058b2:	e7dc      	b.n	9000586e <_ZN5Model4tickEv+0x3e>
	modelListener->move_bullets();
900058b4:	4790      	blx	r2
	modelListener->move_rocks();
900058b6:	6820      	ldr	r0, [r4, #0]
900058b8:	6803      	ldr	r3, [r0, #0]
900058ba:	e7d4      	b.n	90005866 <_ZN5Model4tickEv+0x36>
900058bc:	90005819 	.word	0x90005819
900058c0:	240091b4 	.word	0x240091b4
900058c4:	9000580d 	.word	0x9000580d
900058c8:	90005811 	.word	0x90005811
900058cc:	90005815 	.word	0x90005815
900058d0:	90005821 	.word	0x90005821
900058d4:	9000581d 	.word	0x9000581d
900058d8:	90005825 	.word	0x90005825

900058dc <_ZN5Model18start_bullet_timerEv>:
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
900058dc:	4b02      	ldr	r3, [pc, #8]	; (900058e8 <_ZN5Model18start_bullet_timerEv+0xc>)
900058de:	2100      	movs	r1, #0
900058e0:	6818      	ldr	r0, [r3, #0]
900058e2:	f007 baf3 	b.w	9000cecc <osSemaphoreAcquire>
900058e6:	bf00      	nop
900058e8:	240091b8 	.word	0x240091b8

900058ec <_ZN5Model21resume_asteroids_taskEv>:
	}
}

void Model::resume_asteroids_task()
{
}
900058ec:	4770      	bx	lr
900058ee:	bf00      	nop

900058f0 <_ZN5Model22suspend_asteroids_taskEv>:
900058f0:	4770      	bx	lr
900058f2:	bf00      	nop

900058f4 <_ZN25screen_asteroidsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_asteroidsPresenter() {}
900058f4:	4770      	bx	lr
900058f6:	bf00      	nop

900058f8 <_ZThn4_N25screen_asteroidsPresenterD1Ev>:
900058f8:	3804      	subs	r0, #4
900058fa:	4770      	bx	lr

900058fc <_ZN25screen_asteroidsPresenter10deactivateEv>:
}

void screen_asteroidsPresenter::activate()
{

}
900058fc:	4770      	bx	lr
900058fe:	bf00      	nop

90005900 <_ZN25screen_asteroidsPresenter25is_asteroids_game_startedEv>:


bool screen_asteroidsPresenter::is_asteroids_game_started()
{
	return game_started;
}
90005900:	7d40      	ldrb	r0, [r0, #21]
90005902:	4770      	bx	lr

90005904 <_ZN25screen_asteroidsPresenter20start_asteroids_gameEv>:

void screen_asteroidsPresenter::start_asteroids_game()
{
	init_game();
90005904:	6803      	ldr	r3, [r0, #0]
90005906:	6a1b      	ldr	r3, [r3, #32]
90005908:	4718      	bx	r3
9000590a:	bf00      	nop

9000590c <_ZN25screen_asteroidsPresenter9game_overEv>:

void screen_asteroidsPresenter::game_over()
{
	game_started = false;

	view.show_endgame_screen();
9000590c:	6983      	ldr	r3, [r0, #24]
	game_started = false;
9000590e:	2200      	movs	r2, #0
90005910:	7542      	strb	r2, [r0, #21]
	view.show_endgame_screen();
90005912:	4618      	mov	r0, r3
90005914:	681a      	ldr	r2, [r3, #0]
90005916:	6c13      	ldr	r3, [r2, #64]	; 0x40
90005918:	4718      	bx	r3
9000591a:	bf00      	nop

9000591c <_ZN25screen_asteroidsPresenter9init_gameEv>:
}

void screen_asteroidsPresenter::init_game()
{
9000591c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005920:	4604      	mov	r4, r0
	view.hide_endgame_screen();
90005922:	6980      	ldr	r0, [r0, #24]
	view.move_ship(225, 227);

	// move all the bullets off screen (bullets are on the right of the screen)
	// hide all the bullets

	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005924:	2500      	movs	r5, #0
	view.move_ship(225, 227);
90005926:	f242 26e0 	movw	r6, #8928	; 0x22e0
	view.hide_endgame_screen();
9000592a:	6803      	ldr	r3, [r0, #0]
        visible = vis;
9000592c:	f04f 082c 	mov.w	r8, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005930:	462f      	mov	r7, r5
	view.hide_endgame_screen();
90005932:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90005934:	4798      	blx	r3
	view.move_ship(225, 227);
90005936:	69a0      	ldr	r0, [r4, #24]
90005938:	22e3      	movs	r2, #227	; 0xe3
9000593a:	21e1      	movs	r1, #225	; 0xe1
9000593c:	6803      	ldr	r3, [r0, #0]
9000593e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90005940:	4798      	blx	r3
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005942:	69a0      	ldr	r0, [r4, #24]
90005944:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90005948:	2200      	movs	r2, #0
9000594a:	f8d0 c000 	ldr.w	ip, [r0]
9000594e:	1981      	adds	r1, r0, r6
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005950:	362c      	adds	r6, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005952:	f8dc 906c 	ldr.w	r9, [ip, #108]	; 0x6c
90005956:	47c8      	blx	r9
		view.bullets[i].setVisible(false);
90005958:	69a3      	ldr	r3, [r4, #24]
        return parent;
9000595a:	f242 21f4 	movw	r1, #8948	; 0x22f4
        visible = vis;
9000595e:	f242 3205 	movw	r2, #8965	; 0x2305
90005962:	fb08 3305 	mla	r3, r8, r5, r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005966:	3501      	adds	r5, #1
        return parent;
90005968:	5858      	ldr	r0, [r3, r1]
        visible = vis;
9000596a:	549f      	strb	r7, [r3, r2]
		view.bullets[i].getParent()->invalidateContent();
9000596c:	6803      	ldr	r3, [r0, #0]
9000596e:	699b      	ldr	r3, [r3, #24]
90005970:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005972:	2d0a      	cmp	r5, #10
90005974:	d1e5      	bne.n	90005942 <_ZN25screen_asteroidsPresenter9init_gameEv+0x26>


	/* ROCK STUFF */
	// move all the rocks off screen (rock are to the left of the screen)
	// hide all the rocks
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005976:	2500      	movs	r5, #0
90005978:	f242 1628 	movw	r6, #8488	; 0x2128
9000597c:	f04f 092c 	mov.w	r9, #44	; 0x2c
90005980:	f242 184d 	movw	r8, #8525	; 0x214d
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005984:	462f      	mov	r7, r5
90005986:	69a0      	ldr	r0, [r4, #24]
90005988:	2300      	movs	r3, #0
9000598a:	f8d0 c000 	ldr.w	ip, [r0]
9000598e:	1981      	adds	r1, r0, r6
90005990:	461a      	mov	r2, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005992:	362c      	adds	r6, #44	; 0x2c
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005994:	f8dc a05c 	ldr.w	sl, [ip, #92]	; 0x5c
90005998:	47d0      	blx	sl
		view.rocks[i].setVisible(false);
9000599a:	69a3      	ldr	r3, [r4, #24]
        return parent;
9000599c:	f242 123c 	movw	r2, #8508	; 0x213c
        visible = vis;
900059a0:	fb09 3305 	mla	r3, r9, r5, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
900059a4:	3501      	adds	r5, #1
        return parent;
900059a6:	5898      	ldr	r0, [r3, r2]
        visible = vis;
900059a8:	f803 7008 	strb.w	r7, [r3, r8]
		view.rocks[i].getParent()->invalidateContent();
900059ac:	6803      	ldr	r3, [r0, #0]
900059ae:	699b      	ldr	r3, [r3, #24]
900059b0:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
900059b2:	2d0a      	cmp	r5, #10
900059b4:	d1e7      	bne.n	90005986 <_ZN25screen_asteroidsPresenter9init_gameEv+0x6a>
900059b6:	f242 1528 	movw	r5, #8488	; 0x2128
	}

	// generate random rock positions

	for(int i = 0; i < ROCK_COUNT; i++) {
900059ba:	f242 26e0 	movw	r6, #8928	; 0x22e0
		view.new_rock_position(&view.rocks[i]);
900059be:	69a0      	ldr	r0, [r4, #24]
900059c0:	6803      	ldr	r3, [r0, #0]
900059c2:	1941      	adds	r1, r0, r5
	for(int i = 0; i < ROCK_COUNT; i++) {
900059c4:	352c      	adds	r5, #44	; 0x2c
		view.new_rock_position(&view.rocks[i]);
900059c6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
900059c8:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
900059ca:	42b5      	cmp	r5, r6
900059cc:	d1f7      	bne.n	900059be <_ZN25screen_asteroidsPresenter9init_gameEv+0xa2>


	/* GENERAL GAME STUFF */
	// reset the score to 0
	score = 0;
	view.update_score(score);
900059ce:	69a0      	ldr	r0, [r4, #24]
	score = 0;
900059d0:	2100      	movs	r1, #0
	view.update_score(score);
900059d2:	6803      	ldr	r3, [r0, #0]
	score = 0;
900059d4:	6121      	str	r1, [r4, #16]
	view.update_score(score);
900059d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900059d8:	4798      	blx	r3

	// reset health to full
	lives = 3;
	view.update_hearts(lives);
900059da:	69a0      	ldr	r0, [r4, #24]
	lives = 3;
900059dc:	2103      	movs	r1, #3
900059de:	7321      	strb	r1, [r4, #12]
	view.update_hearts(lives);
900059e0:	6803      	ldr	r3, [r0, #0]
900059e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900059e4:	4798      	blx	r3

	// start the game
	game_started = true;
900059e6:	2301      	movs	r3, #1
900059e8:	7563      	strb	r3, [r4, #21]
}
900059ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900059ee:	bf00      	nop

900059f0 <_ZN25screen_asteroidsPresenter9move_shipEv>:

void screen_asteroidsPresenter::move_ship()
{
900059f0:	b5f0      	push	{r4, r5, r6, r7, lr}
900059f2:	4604      	mov	r4, r0
	int old_x, old_y;

	view.getShipPosition(&old_x, &old_y);
900059f4:	6980      	ldr	r0, [r0, #24]
{
900059f6:	b083      	sub	sp, #12
	view.getShipPosition(&old_x, &old_y);
900059f8:	6803      	ldr	r3, [r0, #0]
900059fa:	aa01      	add	r2, sp, #4
900059fc:	4669      	mov	r1, sp
900059fe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90005a00:	4798      	blx	r3

	int new_x = old_x;
	int new_y = old_y;

	ShipDirection ship_direction = view.get_ship_direction();
90005a02:	69a0      	ldr	r0, [r4, #24]
90005a04:	6803      	ldr	r3, [r0, #0]
90005a06:	6d9b      	ldr	r3, [r3, #88]	; 0x58
	int new_y = old_y;
90005a08:	e9dd 5600 	ldrd	r5, r6, [sp]
	ShipDirection ship_direction = view.get_ship_direction();
90005a0c:	4798      	blx	r3

	switch(ship_direction) {
90005a0e:	2803      	cmp	r0, #3
90005a10:	d805      	bhi.n	90005a1e <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005a12:	e8df f000 	tbb	[pc, r0]
90005a16:	2629      	.short	0x2629
90005a18:	2302      	.short	0x2302
		case ShipDirection::LEFT: {
			new_x = old_x - SHIP_MOVES_PER_TICK;
90005a1a:	9d00      	ldr	r5, [sp, #0]
90005a1c:	3d05      	subs	r5, #5
		default: {
			break;
		}
	}

	Drawable *ship = view.get_ship_pointer();
90005a1e:	69a0      	ldr	r0, [r4, #24]
90005a20:	6803      	ldr	r3, [r0, #0]
90005a22:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005a24:	4798      	blx	r3

	view.move_ship((new_x > (SCREEN_WIDTH - ship->getWidth()) || new_x < 0) ? old_x : new_x, (new_y > (SCREEN_HEIGHT - ship->getHeight()) || new_y < 0) ? old_y : new_y);
90005a26:	69a4      	ldr	r4, [r4, #24]
90005a28:	6823      	ldr	r3, [r4, #0]
90005a2a:	6d1f      	ldr	r7, [r3, #80]	; 0x50
90005a2c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90005a30:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90005a34:	42ab      	cmp	r3, r5
90005a36:	db01      	blt.n	90005a3c <_ZN25screen_asteroidsPresenter9move_shipEv+0x4c>
90005a38:	2d00      	cmp	r5, #0
90005a3a:	da00      	bge.n	90005a3e <_ZN25screen_asteroidsPresenter9move_shipEv+0x4e>
90005a3c:	9d00      	ldr	r5, [sp, #0]
90005a3e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90005a42:	f5c3 7388 	rsb	r3, r3, #272	; 0x110
90005a46:	42b3      	cmp	r3, r6
90005a48:	db01      	blt.n	90005a4e <_ZN25screen_asteroidsPresenter9move_shipEv+0x5e>
90005a4a:	2e00      	cmp	r6, #0
90005a4c:	da00      	bge.n	90005a50 <_ZN25screen_asteroidsPresenter9move_shipEv+0x60>
90005a4e:	9e01      	ldr	r6, [sp, #4]
90005a50:	4632      	mov	r2, r6
90005a52:	4629      	mov	r1, r5
90005a54:	4620      	mov	r0, r4
90005a56:	47b8      	blx	r7
}
90005a58:	b003      	add	sp, #12
90005a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			new_x = old_x + SHIP_MOVES_PER_TICK;
90005a5c:	9d00      	ldr	r5, [sp, #0]
90005a5e:	3505      	adds	r5, #5
			break;
90005a60:	e7dd      	b.n	90005a1e <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y + SHIP_MOVES_PER_TICK;
90005a62:	9e01      	ldr	r6, [sp, #4]
90005a64:	3605      	adds	r6, #5
			break;
90005a66:	e7da      	b.n	90005a1e <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y - SHIP_MOVES_PER_TICK;
90005a68:	9e01      	ldr	r6, [sp, #4]
90005a6a:	3e05      	subs	r6, #5
			break;
90005a6c:	e7d7      	b.n	90005a1e <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005a6e:	bf00      	nop

90005a70 <_ZThn4_N25screen_asteroidsPresenter9move_shipEv>:


    /*
     * SHIP STUFF
     */
    virtual void move_ship();
90005a70:	f1a0 0004 	sub.w	r0, r0, #4
90005a74:	f7ff bfbc 	b.w	900059f0 <_ZN25screen_asteroidsPresenter9move_shipEv>

90005a78 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv>:
}

Drawable* screen_asteroidsPresenter::get_next_invisible_bullet()
{
	for(int i = 0; i < BULLET_COUNT; i++) {
		if( !view.bullets[i].isVisible() )
90005a78:	6982      	ldr	r2, [r0, #24]
        return visible;
90005a7a:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90005a7e:	f893 1305 	ldrb.w	r1, [r3, #773]	; 0x305
90005a82:	b1e9      	cbz	r1, 90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005a84:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90005a88:	b1c9      	cbz	r1, 90005abe <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x46>
90005a8a:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90005a8e:	b1f1      	cbz	r1, 90005ace <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x56>
90005a90:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90005a94:	b1e9      	cbz	r1, 90005ad2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5a>
90005a96:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90005a9a:	b1e1      	cbz	r1, 90005ad6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5e>
90005a9c:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90005aa0:	b1d9      	cbz	r1, 90005ada <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x62>
90005aa2:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90005aa6:	b1d1      	cbz	r1, 90005ade <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x66>
90005aa8:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90005aac:	b1c9      	cbz	r1, 90005ae2 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6a>
90005aae:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90005ab2:	b1c1      	cbz	r1, 90005ae6 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6e>
90005ab4:	f893 3491 	ldrb.w	r3, [r3, #1169]	; 0x491
90005ab8:	b1bb      	cbz	r3, 90005aea <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x72>
			return &view.bullets[i];
	}

	return NULL;
90005aba:	2000      	movs	r0, #0
}
90005abc:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005abe:	2101      	movs	r1, #1
			return &view.bullets[i];
90005ac0:	232c      	movs	r3, #44	; 0x2c
90005ac2:	f242 20e0 	movw	r0, #8928	; 0x22e0
90005ac6:	fb03 2201 	mla	r2, r3, r1, r2
90005aca:	4410      	add	r0, r2
90005acc:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ace:	2102      	movs	r1, #2
90005ad0:	e7f6      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ad2:	2103      	movs	r1, #3
90005ad4:	e7f4      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ad6:	2104      	movs	r1, #4
90005ad8:	e7f2      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ada:	2105      	movs	r1, #5
90005adc:	e7f0      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ade:	2106      	movs	r1, #6
90005ae0:	e7ee      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ae2:	2107      	movs	r1, #7
90005ae4:	e7ec      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005ae6:	2108      	movs	r1, #8
90005ae8:	e7ea      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005aea:	2109      	movs	r1, #9
90005aec:	e7e8      	b.n	90005ac0 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005aee:	bf00      	nop

90005af0 <_ZN25screen_asteroidsPresenter12move_bulletsEv>:

void screen_asteroidsPresenter::move_bullets()
{
90005af0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	shoot_bullet();
90005af4:	6803      	ldr	r3, [r0, #0]
90005af6:	f242 26e0 	movw	r6, #8928	; 0x22e0

	for(int i = 0; i < BULLET_COUNT; i++) {
90005afa:	2400      	movs	r4, #0
90005afc:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
90005b00:	f242 3905 	movw	r9, #8965	; 0x2305
        return rect.y;
90005b04:	f242 28e6 	movw	r8, #8934	; 0x22e6
	shoot_bullet();
90005b08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
{
90005b0a:	4607      	mov	r7, r0
	shoot_bullet();
90005b0c:	4798      	blx	r3
		if( !view.bullets[i].isVisible() )
90005b0e:	69ba      	ldr	r2, [r7, #24]
        return visible;
90005b10:	fb0a f504 	mul.w	r5, sl, r4
        return rect.x;
90005b14:	f242 2be4 	movw	fp, #8932	; 0x22e4
	for(int i = 0; i < BULLET_COUNT; i++) {
90005b18:	3401      	adds	r4, #1
        return visible;
90005b1a:	eb02 0c05 	add.w	ip, r2, r5
			continue;

		// move the bullet
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005b1e:	1991      	adds	r1, r2, r6
90005b20:	4610      	mov	r0, r2
		if( !view.bullets[i].isVisible() )
90005b22:	f81c 3009 	ldrb.w	r3, [ip, r9]
90005b26:	b1a3      	cbz	r3, 90005b52 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005b28:	f8d2 e000 	ldr.w	lr, [r2]
90005b2c:	f93c 3008 	ldrsh.w	r3, [ip, r8]
90005b30:	f93c 200b 	ldrsh.w	r2, [ip, fp]
90005b34:	3b0a      	subs	r3, #10
90005b36:	f8de b06c 	ldr.w	fp, [lr, #108]	; 0x6c
90005b3a:	47d8      	blx	fp

		// check if bullet is offscreen
		if( view.bullets[i].getY() < 0 ) {
90005b3c:	69bb      	ldr	r3, [r7, #24]
        return rect.y;
90005b3e:	441d      	add	r5, r3
			// remove the offscreen bullet
			view.move_bullet_offscreen(&view.bullets[i]);
90005b40:	1999      	adds	r1, r3, r6
90005b42:	4618      	mov	r0, r3
		if( view.bullets[i].getY() < 0 ) {
90005b44:	f935 2008 	ldrsh.w	r2, [r5, r8]
90005b48:	2a00      	cmp	r2, #0
90005b4a:	da02      	bge.n	90005b52 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
			view.move_bullet_offscreen(&view.bullets[i]);
90005b4c:	681b      	ldr	r3, [r3, #0]
90005b4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005b50:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005b52:	2c0a      	cmp	r4, #10
90005b54:	f106 062c 	add.w	r6, r6, #44	; 0x2c
90005b58:	d1d9      	bne.n	90005b0e <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x1e>
		}
	}
}
90005b5a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005b5e:	bf00      	nop

90005b60 <_ZThn4_N25screen_asteroidsPresenter12move_bulletsEv>:


    /*
     * BULLET STUFF
     */
    virtual void move_bullets();
90005b60:	f1a0 0004 	sub.w	r0, r0, #4
90005b64:	f7ff bfc4 	b.w	90005af0 <_ZN25screen_asteroidsPresenter12move_bulletsEv>

90005b68 <_ZN25screen_asteroidsPresenter19is_allowed_to_shootEv>:

bool screen_asteroidsPresenter::is_allowed_to_shoot()
{
	return allowed_to_shoot;
}
90005b68:	7d80      	ldrb	r0, [r0, #22]
90005b6a:	4770      	bx	lr

90005b6c <_ZN25screen_asteroidsPresenter20set_allowed_to_shootEb>:

void screen_asteroidsPresenter::set_allowed_to_shoot(bool value)
{
	allowed_to_shoot = value;
90005b6c:	7581      	strb	r1, [r0, #22]
}
90005b6e:	4770      	bx	lr

90005b70 <_ZN25screen_asteroidsPresenter10hide_rocksEv>:
		}
	}
}

void screen_asteroidsPresenter::hide_rocks()
{
90005b70:	b570      	push	{r4, r5, r6, lr}
90005b72:	f242 1428 	movw	r4, #8488	; 0x2128
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b76:	f242 26e0 	movw	r6, #8928	; 0x22e0
{
90005b7a:	4605      	mov	r5, r0
		view.hide_element(&view.rocks[i]);
90005b7c:	69a8      	ldr	r0, [r5, #24]
90005b7e:	6803      	ldr	r3, [r0, #0]
90005b80:	1901      	adds	r1, r0, r4
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b82:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.rocks[i]);
90005b84:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005b86:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b88:	42b4      	cmp	r4, r6
90005b8a:	d1f7      	bne.n	90005b7c <_ZN25screen_asteroidsPresenter10hide_rocksEv+0xc>
	}
}
90005b8c:	bd70      	pop	{r4, r5, r6, pc}
90005b8e:	bf00      	nop

90005b90 <_ZN25screen_asteroidsPresenter12hide_bulletsEv>:


void screen_asteroidsPresenter::hide_bullets()
{
90005b90:	b570      	push	{r4, r5, r6, lr}
90005b92:	f242 24e0 	movw	r4, #8928	; 0x22e0
	for(int i = 0; i < BULLET_COUNT; i++) {
90005b96:	f242 4698 	movw	r6, #9368	; 0x2498
{
90005b9a:	4605      	mov	r5, r0
		view.hide_element(&view.bullets[i]);
90005b9c:	69a8      	ldr	r0, [r5, #24]
90005b9e:	6803      	ldr	r3, [r0, #0]
90005ba0:	1901      	adds	r1, r0, r4
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ba2:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.bullets[i]);
90005ba4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005ba6:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ba8:	42b4      	cmp	r4, r6
90005baa:	d1f7      	bne.n	90005b9c <_ZN25screen_asteroidsPresenter12hide_bulletsEv+0xc>
	}
}
90005bac:	bd70      	pop	{r4, r5, r6, pc}
90005bae:	bf00      	nop

90005bb0 <_ZN25screen_asteroidsPresenterD0Ev>:
    virtual ~screen_asteroidsPresenter() {}
90005bb0:	b510      	push	{r4, lr}
90005bb2:	4604      	mov	r4, r0
90005bb4:	211c      	movs	r1, #28
90005bb6:	f020 fa44 	bl	90026042 <_ZdlPvj>
90005bba:	4620      	mov	r0, r4
90005bbc:	bd10      	pop	{r4, pc}
90005bbe:	bf00      	nop

90005bc0 <_ZThn4_N25screen_asteroidsPresenterD0Ev>:
90005bc0:	b500      	push	{lr}
90005bc2:	3804      	subs	r0, #4
90005bc4:	b083      	sub	sp, #12
90005bc6:	211c      	movs	r1, #28
90005bc8:	9001      	str	r0, [sp, #4]
90005bca:	f020 fa3a 	bl	90026042 <_ZdlPvj>
90005bce:	9801      	ldr	r0, [sp, #4]
90005bd0:	b003      	add	sp, #12
90005bd2:	f85d fb04 	ldr.w	pc, [sp], #4
90005bd6:	bf00      	nop

90005bd8 <_ZN25screen_asteroidsPresenter21resume_asteroids_taskEv>:
	model->resume_asteroids_task();
90005bd8:	6880      	ldr	r0, [r0, #8]
90005bda:	f7ff be87 	b.w	900058ec <_ZN5Model21resume_asteroids_taskEv>
90005bde:	bf00      	nop

90005be0 <_ZN25screen_asteroidsPresenter22suspend_asteroids_taskEv>:
	model->suspend_asteroids_task();
90005be0:	6880      	ldr	r0, [r0, #8]
90005be2:	f7ff be85 	b.w	900058f0 <_ZN5Model22suspend_asteroids_taskEv>
90005be6:	bf00      	nop

90005be8 <_ZN25screen_asteroidsPresenter10move_rocksEv>:
{
90005be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005bec:	f242 1728 	movw	r7, #8488	; 0x2128
90005bf0:	b083      	sub	sp, #12
	for(int i = 0; i < ROCK_COUNT; i++) {
90005bf2:	2500      	movs	r5, #0
        return visible;
90005bf4:	f04f 092c 	mov.w	r9, #44	; 0x2c
{
90005bf8:	4683      	mov	fp, r0
        return rect.y;
90005bfa:	f242 1a2e 	movw	sl, #8494	; 0x212e
90005bfe:	9701      	str	r7, [sp, #4]
90005c00:	e019      	b.n	90005c36 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x4e>
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c02:	f936 300a 	ldrsh.w	r3, [r6, sl]
90005c06:	6827      	ldr	r7, [r4, #0]
90005c08:	3301      	adds	r3, #1
90005c0a:	5eb2      	ldrsh	r2, [r6, r2]
90005c0c:	6dff      	ldr	r7, [r7, #92]	; 0x5c
90005c0e:	47b8      	blx	r7
		if( rock->getY() > SCREEN_HEIGHT ) {
90005c10:	f936 300a 	ldrsh.w	r3, [r6, sl]
90005c14:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
90005c18:	dc21      	bgt.n	90005c5e <_ZN25screen_asteroidsPresenter10move_rocksEv+0x76>
        return parent;
90005c1a:	f242 133c 	movw	r3, #8508	; 0x213c
90005c1e:	fb09 4405 	mla	r4, r9, r5, r4
90005c22:	58e0      	ldr	r0, [r4, r3]
		rock->getParent()->invalidateContent();
90005c24:	6803      	ldr	r3, [r0, #0]
90005c26:	699b      	ldr	r3, [r3, #24]
90005c28:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005c2a:	9b01      	ldr	r3, [sp, #4]
90005c2c:	3501      	adds	r5, #1
90005c2e:	332c      	adds	r3, #44	; 0x2c
90005c30:	2d0a      	cmp	r5, #10
90005c32:	9301      	str	r3, [sp, #4]
90005c34:	d019      	beq.n	90005c6a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x82>
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005c36:	f8db 4018 	ldr.w	r4, [fp, #24]
        return rect.x;
90005c3a:	f242 122c 	movw	r2, #8492	; 0x212c
90005c3e:	9b01      	ldr	r3, [sp, #4]
        return visible;
90005c40:	fb09 4605 	mla	r6, r9, r5, r4
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c44:	4620      	mov	r0, r4
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005c46:	eb04 0803 	add.w	r8, r4, r3
		if( !rock->isVisible() ) {
90005c4a:	f242 134d 	movw	r3, #8525	; 0x214d
90005c4e:	5cf3      	ldrb	r3, [r6, r3]
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005c50:	4641      	mov	r1, r8
		if( !rock->isVisible() ) {
90005c52:	2b00      	cmp	r3, #0
90005c54:	d1d5      	bne.n	90005c02 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
			view.new_rock_position(rock);
90005c56:	6823      	ldr	r3, [r4, #0]
90005c58:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005c5a:	4798      	blx	r3
			continue;
90005c5c:	e7e5      	b.n	90005c2a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x42>
			view.move_rock_offscreen(rock);
90005c5e:	4641      	mov	r1, r8
90005c60:	f8db 0018 	ldr.w	r0, [fp, #24]
90005c64:	f000 fc94 	bl	90006590 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>
90005c68:	e7d7      	b.n	90005c1a <_ZN25screen_asteroidsPresenter10move_rocksEv+0x32>
}
90005c6a:	b003      	add	sp, #12
90005c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90005c70 <_ZThn4_N25screen_asteroidsPresenter10move_rocksEv>:
    virtual void move_rocks();
90005c70:	f1a0 0004 	sub.w	r0, r0, #4
90005c74:	f7ff bfb8 	b.w	90005be8 <_ZN25screen_asteroidsPresenter10move_rocksEv>

90005c78 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_>:
	}
}

bool screen_asteroidsPresenter::elements_collide(Drawable *element1, Drawable *element2)
{
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005c78:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
90005c7c:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005c80:	f9b1 c004 	ldrsh.w	ip, [r1, #4]
90005c84:	4403      	add	r3, r0
90005c86:	459c      	cmp	ip, r3
90005c88:	dc15      	bgt.n	90005cb6 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005c8a:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005c8e:	4463      	add	r3, ip
90005c90:	4298      	cmp	r0, r3
90005c92:	dc10      	bgt.n	90005cb6 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
		return false;
	}

	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005c94:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
90005c98:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005c9c:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005ca0:	4403      	add	r3, r0
90005ca2:	429a      	cmp	r2, r3
90005ca4:	dc07      	bgt.n	90005cb6 <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005ca6:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005caa:	4413      	add	r3, r2
90005cac:	4298      	cmp	r0, r3
90005cae:	bfcc      	ite	gt
90005cb0:	2000      	movgt	r0, #0
90005cb2:	2001      	movle	r0, #1
90005cb4:	4770      	bx	lr
		return false;
90005cb6:	2000      	movs	r0, #0
	}

	return true;
}
90005cb8:	4770      	bx	lr
90005cba:	bf00      	nop

90005cbc <_ZThn4_N25screen_asteroidsPresenter25is_asteroids_game_startedEv>:
90005cbc:	7c40      	ldrb	r0, [r0, #17]
90005cbe:	4770      	bx	lr

90005cc0 <_ZThn4_N25screen_asteroidsPresenter20set_allowed_to_shootEb>:
90005cc0:	7481      	strb	r1, [r0, #18]
90005cc2:	4770      	bx	lr

90005cc4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>:
{
90005cc4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005cc8:	f242 27e0 	movw	r7, #8928	; 0x22e0
	for(int i = 0; i < BULLET_COUNT; i++) {
90005ccc:	f04f 0b00 	mov.w	fp, #0
90005cd0:	f04f 082c 	mov.w	r8, #44	; 0x2c
{
90005cd4:	4605      	mov	r5, r0
90005cd6:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 90005d90 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xcc>
90005cda:	e005      	b.n	90005ce8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x24>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005cdc:	f10b 0b01 	add.w	fp, fp, #1
90005ce0:	372c      	adds	r7, #44	; 0x2c
90005ce2:	f1bb 0f0a 	cmp.w	fp, #10
90005ce6:	d050      	beq.n	90005d8a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xc6>
		if( !view.bullets[i].isVisible() )
90005ce8:	69a8      	ldr	r0, [r5, #24]
90005cea:	f242 3305 	movw	r3, #8965	; 0x2305
90005cee:	fb08 020b 	mla	r2, r8, fp, r0
90005cf2:	5cd3      	ldrb	r3, [r2, r3]
90005cf4:	2b00      	cmp	r3, #0
90005cf6:	d0f1      	beq.n	90005cdc <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
90005cf8:	f242 1628 	movw	r6, #8488	; 0x2128
		for(int j = 0; j < ROCK_COUNT; j++) {
90005cfc:	2400      	movs	r4, #0
90005cfe:	f242 194d 	movw	r9, #8525	; 0x214d
90005d02:	e02f      	b.n	90005d64 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xa0>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005d04:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90005d08:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005d0c:	f9b1 e004 	ldrsh.w	lr, [r1, #4]
90005d10:	4463      	add	r3, ip
90005d12:	459e      	cmp	lr, r3
90005d14:	dc21      	bgt.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005d16:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005d1a:	4473      	add	r3, lr
90005d1c:	459c      	cmp	ip, r3
90005d1e:	dc1c      	bgt.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005d20:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
90005d24:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005d28:	f9b1 e006 	ldrsh.w	lr, [r1, #6]
90005d2c:	4463      	add	r3, ip
90005d2e:	459e      	cmp	lr, r3
90005d30:	dc13      	bgt.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005d32:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005d36:	4473      	add	r3, lr
90005d38:	459c      	cmp	ip, r3
90005d3a:	dc0e      	bgt.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005d3c:	4611      	mov	r1, r2
90005d3e:	f000 fc27 	bl	90006590 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>
				view.move_bullet_offscreen(&view.bullets[i]);
90005d42:	69a8      	ldr	r0, [r5, #24]
90005d44:	6803      	ldr	r3, [r0, #0]
90005d46:	19c1      	adds	r1, r0, r7
90005d48:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005d4a:	4798      	blx	r3
				score++;
90005d4c:	6929      	ldr	r1, [r5, #16]
				view.update_score(score);
90005d4e:	69a8      	ldr	r0, [r5, #24]
				score++;
90005d50:	3101      	adds	r1, #1
				view.update_score(score);
90005d52:	6803      	ldr	r3, [r0, #0]
				score++;
90005d54:	6129      	str	r1, [r5, #16]
				view.update_score(score);
90005d56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005d58:	4798      	blx	r3
		for(int j = 0; j < ROCK_COUNT; j++) {
90005d5a:	3401      	adds	r4, #1
90005d5c:	362c      	adds	r6, #44	; 0x2c
90005d5e:	2c0a      	cmp	r4, #10
90005d60:	d0bc      	beq.n	90005cdc <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
			if( !view.rocks[j].isVisible() )
90005d62:	69a8      	ldr	r0, [r5, #24]
90005d64:	fb08 0304 	mla	r3, r8, r4, r0
90005d68:	f813 3009 	ldrb.w	r3, [r3, r9]
90005d6c:	2b00      	cmp	r3, #0
90005d6e:	d0f4      	beq.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
			if(elements_collide(&view.bullets[i], &view.rocks[j])) {
90005d70:	682b      	ldr	r3, [r5, #0]
90005d72:	19c1      	adds	r1, r0, r7
90005d74:	1982      	adds	r2, r0, r6
90005d76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005d78:	4553      	cmp	r3, sl
90005d7a:	d0c3      	beq.n	90005d04 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x40>
90005d7c:	4628      	mov	r0, r5
90005d7e:	4798      	blx	r3
90005d80:	2800      	cmp	r0, #0
90005d82:	d0ea      	beq.n	90005d5a <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005d84:	69a8      	ldr	r0, [r5, #24]
90005d86:	1982      	adds	r2, r0, r6
90005d88:	e7d8      	b.n	90005d3c <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x78>
}
90005d8a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005d8e:	bf00      	nop
90005d90:	90005c79 	.word	0x90005c79

90005d94 <_ZThn4_N25screen_asteroidsPresenter23check_bullet_collisionsEv>:
    virtual void hide_bullets();

    virtual Drawable* get_next_invisible_bullet();

    virtual void check_bullet_collisions();
90005d94:	f1a0 0004 	sub.w	r0, r0, #4
90005d98:	f7ff bf94 	b.w	90005cc4 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>

90005d9c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>:
{
90005d9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005da0:	4604      	mov	r4, r0
	Drawable *ship = view.get_ship_pointer();
90005da2:	6980      	ldr	r0, [r0, #24]
90005da4:	f242 1628 	movw	r6, #8488	; 0x2128
	for(int i = 0; i < ROCK_COUNT; i++) {
90005da8:	2500      	movs	r5, #0
	Drawable *ship = view.get_ship_pointer();
90005daa:	6803      	ldr	r3, [r0, #0]
90005dac:	272c      	movs	r7, #44	; 0x2c
90005dae:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 90005e5c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xc0>
90005db2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005db4:	4798      	blx	r3
90005db6:	f8df 90a8 	ldr.w	r9, [pc, #168]	; 90005e60 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xc4>
90005dba:	4682      	mov	sl, r0
	for(int i = 0; i < ROCK_COUNT; i++) {
90005dbc:	e035      	b.n	90005e2a <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x8e>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005dbe:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90005dc2:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005dc6:	f9ba c004 	ldrsh.w	ip, [sl, #4]
90005dca:	440b      	add	r3, r1
90005dcc:	459c      	cmp	ip, r3
90005dce:	dc28      	bgt.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
90005dd0:	f9ba 3008 	ldrsh.w	r3, [sl, #8]
90005dd4:	4463      	add	r3, ip
90005dd6:	4299      	cmp	r1, r3
90005dd8:	dc23      	bgt.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005dda:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
90005dde:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005de2:	f9ba c006 	ldrsh.w	ip, [sl, #6]
90005de6:	440b      	add	r3, r1
90005de8:	459c      	cmp	ip, r3
90005dea:	dc1a      	bgt.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
90005dec:	f9ba 300a 	ldrsh.w	r3, [sl, #10]
90005df0:	4463      	add	r3, ip
90005df2:	4299      	cmp	r1, r3
90005df4:	dc15      	bgt.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
			lives--;
90005df6:	7b21      	ldrb	r1, [r4, #12]
90005df8:	3901      	subs	r1, #1
90005dfa:	b2c9      	uxtb	r1, r1
90005dfc:	7321      	strb	r1, [r4, #12]
			view.update_hearts(lives);
90005dfe:	6803      	ldr	r3, [r0, #0]
90005e00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90005e02:	4798      	blx	r3
			view.move_rock_offscreen(&view.rocks[i]);
90005e04:	69a0      	ldr	r0, [r4, #24]
90005e06:	1981      	adds	r1, r0, r6
90005e08:	f000 fbc2 	bl	90006590 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>
			if( lives == 0 ) {
90005e0c:	7b23      	ldrb	r3, [r4, #12]
90005e0e:	b943      	cbnz	r3, 90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
				game_over();
90005e10:	6822      	ldr	r2, [r4, #0]
90005e12:	6a52      	ldr	r2, [r2, #36]	; 0x24
90005e14:	454a      	cmp	r2, r9
90005e16:	d11e      	bne.n	90005e56 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xba>
	view.show_endgame_screen();
90005e18:	69a0      	ldr	r0, [r4, #24]
	game_started = false;
90005e1a:	7563      	strb	r3, [r4, #21]
	view.show_endgame_screen();
90005e1c:	6803      	ldr	r3, [r0, #0]
90005e1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90005e20:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005e22:	3501      	adds	r5, #1
90005e24:	362c      	adds	r6, #44	; 0x2c
90005e26:	2d0a      	cmp	r5, #10
90005e28:	d013      	beq.n	90005e52 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xb6>
		if( !view.rocks[i].isVisible() )
90005e2a:	69a0      	ldr	r0, [r4, #24]
90005e2c:	f242 134d 	movw	r3, #8525	; 0x214d
90005e30:	fb07 0205 	mla	r2, r7, r5, r0
90005e34:	5cd3      	ldrb	r3, [r2, r3]
90005e36:	2b00      	cmp	r3, #0
90005e38:	d0f3      	beq.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
		if( elements_collide(ship, &view.rocks[i]) ) {
90005e3a:	6823      	ldr	r3, [r4, #0]
90005e3c:	1982      	adds	r2, r0, r6
90005e3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005e40:	4543      	cmp	r3, r8
90005e42:	d0bc      	beq.n	90005dbe <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x22>
90005e44:	4651      	mov	r1, sl
90005e46:	4620      	mov	r0, r4
90005e48:	4798      	blx	r3
90005e4a:	2800      	cmp	r0, #0
90005e4c:	d0e9      	beq.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
			view.update_hearts(lives);
90005e4e:	69a0      	ldr	r0, [r4, #24]
90005e50:	e7d1      	b.n	90005df6 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x5a>
}
90005e52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
				game_over();
90005e56:	4620      	mov	r0, r4
90005e58:	4790      	blx	r2
90005e5a:	e7e2      	b.n	90005e22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
90005e5c:	90005c79 	.word	0x90005c79
90005e60:	9000590d 	.word	0x9000590d

90005e64 <_ZThn4_N25screen_asteroidsPresenter21check_ship_collisionsEv>:
    virtual void check_ship_collisions();
90005e64:	f1a0 0004 	sub.w	r0, r0, #4
90005e68:	f7ff bf98 	b.w	90005d9c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>

90005e6c <_ZN25screen_asteroidsPresenter12shoot_bulletEv>:
	if( !is_allowed_to_shoot() )
90005e6c:	6803      	ldr	r3, [r0, #0]
90005e6e:	4a4a      	ldr	r2, [pc, #296]	; (90005f98 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x12c>)
90005e70:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005e72:	4293      	cmp	r3, r2
{
90005e74:	b570      	push	{r4, r5, r6, lr}
90005e76:	4604      	mov	r4, r0
90005e78:	d14d      	bne.n	90005f16 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xaa>
	return allowed_to_shoot;
90005e7a:	7d80      	ldrb	r0, [r0, #22]
	if( !is_allowed_to_shoot() )
90005e7c:	b150      	cbz	r0, 90005e94 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	Drawable *ship = view.get_ship_pointer();
90005e7e:	69a0      	ldr	r0, [r4, #24]
90005e80:	6803      	ldr	r3, [r0, #0]
90005e82:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005e84:	4798      	blx	r3
	if( view.bullet_button_pressed() )
90005e86:	69a3      	ldr	r3, [r4, #24]
	Drawable *ship = view.get_ship_pointer();
90005e88:	4605      	mov	r5, r0
	if( view.bullet_button_pressed() )
90005e8a:	681a      	ldr	r2, [r3, #0]
90005e8c:	4618      	mov	r0, r3
90005e8e:	6e53      	ldr	r3, [r2, #100]	; 0x64
90005e90:	4798      	blx	r3
90005e92:	b900      	cbnz	r0, 90005e96 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x2a>
}
90005e94:	bd70      	pop	{r4, r5, r6, pc}
		model->start_bullet_timer();
90005e96:	68a0      	ldr	r0, [r4, #8]
90005e98:	f7ff fd20 	bl	900058dc <_ZN5Model18start_bullet_timerEv>
		set_allowed_to_shoot(false);
90005e9c:	6823      	ldr	r3, [r4, #0]
90005e9e:	493f      	ldr	r1, [pc, #252]	; (90005f9c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x130>)
90005ea0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90005ea2:	428a      	cmp	r2, r1
90005ea4:	d15a      	bne.n	90005f5c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xf0>
	allowed_to_shoot = value;
90005ea6:	2200      	movs	r2, #0
90005ea8:	75a2      	strb	r2, [r4, #22]
		Drawable *new_bullet = get_next_invisible_bullet();
90005eaa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90005eac:	4a3c      	ldr	r2, [pc, #240]	; (90005fa0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x134>)
90005eae:	4293      	cmp	r3, r2
90005eb0:	d133      	bne.n	90005f1a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xae>
		if( !view.bullets[i].isVisible() )
90005eb2:	69a2      	ldr	r2, [r4, #24]
90005eb4:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90005eb8:	f893 1305 	ldrb.w	r1, [r3, #773]	; 0x305
90005ebc:	b321      	cbz	r1, 90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005ebe:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90005ec2:	2900      	cmp	r1, #0
90005ec4:	d057      	beq.n	90005f76 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10a>
90005ec6:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90005eca:	2900      	cmp	r1, #0
90005ecc:	d055      	beq.n	90005f7a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10e>
90005ece:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90005ed2:	2900      	cmp	r1, #0
90005ed4:	d053      	beq.n	90005f7e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x112>
90005ed6:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90005eda:	2900      	cmp	r1, #0
90005edc:	d051      	beq.n	90005f82 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x116>
90005ede:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90005ee2:	2900      	cmp	r1, #0
90005ee4:	d04f      	beq.n	90005f86 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11a>
90005ee6:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90005eea:	2900      	cmp	r1, #0
90005eec:	d04d      	beq.n	90005f8a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11e>
90005eee:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90005ef2:	2900      	cmp	r1, #0
90005ef4:	d04b      	beq.n	90005f8e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x122>
90005ef6:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90005efa:	2900      	cmp	r1, #0
90005efc:	d049      	beq.n	90005f92 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x126>
90005efe:	f893 3491 	ldrb.w	r3, [r3, #1169]	; 0x491
90005f02:	2b00      	cmp	r3, #0
90005f04:	d1c6      	bne.n	90005e94 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005f06:	2109      	movs	r1, #9
			return &view.bullets[i];
90005f08:	232c      	movs	r3, #44	; 0x2c
90005f0a:	f242 24e0 	movw	r4, #8928	; 0x22e0
90005f0e:	fb03 2201 	mla	r2, r3, r1, r2
90005f12:	4414      	add	r4, r2
		if( new_bullet != NULL )
90005f14:	e006      	b.n	90005f24 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xb8>
	if( !is_allowed_to_shoot() )
90005f16:	4798      	blx	r3
90005f18:	e7b0      	b.n	90005e7c <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10>
		Drawable *new_bullet = get_next_invisible_bullet();
90005f1a:	4620      	mov	r0, r4
90005f1c:	4798      	blx	r3
		if( new_bullet != NULL )
90005f1e:	4604      	mov	r4, r0
90005f20:	2800      	cmp	r0, #0
90005f22:	d0b7      	beq.n	90005e94 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
        visible = vis;
90005f24:	2301      	movs	r3, #1
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90005f26:	88a9      	ldrh	r1, [r5, #4]
90005f28:	6822      	ldr	r2, [r4, #0]
90005f2a:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
90005f2e:	3901      	subs	r1, #1
90005f30:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90005f34:	6b16      	ldr	r6, [r2, #48]	; 0x30
90005f36:	2b00      	cmp	r3, #0
90005f38:	bfb8      	it	lt
90005f3a:	3301      	addlt	r3, #1
90005f3c:	eb01 0163 	add.w	r1, r1, r3, asr #1
90005f40:	4b18      	ldr	r3, [pc, #96]	; (90005fa4 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x138>)
90005f42:	429e      	cmp	r6, r3
90005f44:	b209      	sxth	r1, r1
90005f46:	d112      	bne.n	90005f6e <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x102>
        rect.x = x;
90005f48:	80a1      	strh	r1, [r4, #4]
			new_bullet->setY(ship->getY() + 1);
90005f4a:	6b53      	ldr	r3, [r2, #52]	; 0x34
90005f4c:	88e9      	ldrh	r1, [r5, #6]
90005f4e:	4a16      	ldr	r2, [pc, #88]	; (90005fa8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x13c>)
90005f50:	3101      	adds	r1, #1
90005f52:	4293      	cmp	r3, r2
90005f54:	b209      	sxth	r1, r1
90005f56:	d106      	bne.n	90005f66 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xfa>
        rect.y = y;
90005f58:	80e1      	strh	r1, [r4, #6]
}
90005f5a:	bd70      	pop	{r4, r5, r6, pc}
		set_allowed_to_shoot(false);
90005f5c:	2100      	movs	r1, #0
90005f5e:	4620      	mov	r0, r4
90005f60:	4790      	blx	r2
		Drawable *new_bullet = get_next_invisible_bullet();
90005f62:	6823      	ldr	r3, [r4, #0]
90005f64:	e7a1      	b.n	90005eaa <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x3e>
			new_bullet->setY(ship->getY() + 1);
90005f66:	4620      	mov	r0, r4
}
90005f68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			new_bullet->setY(ship->getY() + 1);
90005f6c:	4718      	bx	r3
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90005f6e:	4620      	mov	r0, r4
90005f70:	47b0      	blx	r6
			new_bullet->setY(ship->getY() + 1);
90005f72:	6822      	ldr	r2, [r4, #0]
90005f74:	e7e9      	b.n	90005f4a <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xde>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005f76:	2101      	movs	r1, #1
90005f78:	e7c6      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f7a:	2102      	movs	r1, #2
90005f7c:	e7c4      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f7e:	2103      	movs	r1, #3
90005f80:	e7c2      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f82:	2104      	movs	r1, #4
90005f84:	e7c0      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f86:	2105      	movs	r1, #5
90005f88:	e7be      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f8a:	2106      	movs	r1, #6
90005f8c:	e7bc      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f8e:	2107      	movs	r1, #7
90005f90:	e7ba      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f92:	2108      	movs	r1, #8
90005f94:	e7b8      	b.n	90005f08 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
90005f96:	bf00      	nop
90005f98:	90005b69 	.word	0x90005b69
90005f9c:	90005b6d 	.word	0x90005b6d
90005fa0:	90005a79 	.word	0x90005a79
90005fa4:	900023fd 	.word	0x900023fd
90005fa8:	90002401 	.word	0x90002401

90005fac <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>:
screen_asteroidsPresenter::screen_asteroidsPresenter(screen_asteroidsView& v)
90005fac:	b410      	push	{r4}
    ModelListener() : model(0) {}
90005fae:	2400      	movs	r4, #0
    : view(v)
90005fb0:	4a09      	ldr	r2, [pc, #36]	; (90005fd8 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x2c>)
90005fb2:	6181      	str	r1, [r0, #24]
90005fb4:	f44f 7180 	mov.w	r1, #256	; 0x100
90005fb8:	6084      	str	r4, [r0, #8]
90005fba:	6104      	str	r4, [r0, #16]
90005fbc:	2404      	movs	r4, #4
90005fbe:	f8a0 1015 	strh.w	r1, [r0, #21]
90005fc2:	2103      	movs	r1, #3
90005fc4:	7504      	strb	r4, [r0, #20]
90005fc6:	f102 0408 	add.w	r4, r2, #8
90005fca:	3268      	adds	r2, #104	; 0x68
90005fcc:	7301      	strb	r1, [r0, #12]
90005fce:	e9c0 4200 	strd	r4, r2, [r0]
}
90005fd2:	f85d 4b04 	ldr.w	r4, [sp], #4
90005fd6:	4770      	bx	lr
90005fd8:	90029b18 	.word	0x90029b18

90005fdc <_ZN20screen_asteroidsView14tearDownScreenEv>:
}

void screen_asteroidsView::tearDownScreen()
{
    screen_asteroidsViewBase::tearDownScreen();
}
90005fdc:	4770      	bx	lr
90005fde:	bf00      	nop

90005fe0 <_ZN20screen_asteroidsView21resume_asteroids_taskEv>:

void screen_asteroidsView::resume_asteroids_task()
{
	presenter->resume_asteroids_task();
90005fe0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005fe2:	6803      	ldr	r3, [r0, #0]
90005fe4:	691b      	ldr	r3, [r3, #16]
90005fe6:	4718      	bx	r3

90005fe8 <_ZN20screen_asteroidsView22suspend_asteroids_taskEv>:
}

void screen_asteroidsView::suspend_asteroids_task()
{
	presenter->suspend_asteroids_task();
90005fe8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005fea:	6803      	ldr	r3, [r0, #0]
90005fec:	695b      	ldr	r3, [r3, #20]
90005fee:	4718      	bx	r3

90005ff0 <_ZN20screen_asteroidsView20start_asteroids_gameEv>:
}

void screen_asteroidsView::start_asteroids_game()
{
	presenter->start_asteroids_game();
90005ff0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005ff2:	6803      	ldr	r3, [r0, #0]
90005ff4:	69db      	ldr	r3, [r3, #28]
90005ff6:	4718      	bx	r3

90005ff8 <_ZN20screen_asteroidsView19show_endgame_screenEv>:
}

void screen_asteroidsView::show_endgame_screen()
{
90005ff8:	b510      	push	{r4, lr}
90005ffa:	4604      	mov	r4, r0
	presenter->hide_rocks();
90005ffc:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90005ffe:	6803      	ldr	r3, [r0, #0]
90006000:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90006002:	4798      	blx	r3
	presenter->hide_bullets();
90006004:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90006006:	6803      	ldr	r3, [r0, #0]
90006008:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000600a:	4798      	blx	r3
        return parent;
9000600c:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
        visible = vis;
90006010:	2101      	movs	r1, #1
90006012:	2200      	movs	r2, #0
	container_game_over.setVisible(true);
	container_controls.setVisible(false);
	container_controls.getParent()->invalidateContent();
90006014:	6803      	ldr	r3, [r0, #0]
90006016:	f884 13f9 	strb.w	r1, [r4, #1017]	; 0x3f9
9000601a:	699b      	ldr	r3, [r3, #24]
9000601c:	f884 2275 	strb.w	r2, [r4, #629]	; 0x275
90006020:	4798      	blx	r3
        return parent;
90006022:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
90006026:	6803      	ldr	r3, [r0, #0]
}
90006028:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
9000602c:	699b      	ldr	r3, [r3, #24]
9000602e:	4718      	bx	r3

90006030 <_ZN20screen_asteroidsView19hide_endgame_screenEv>:

void screen_asteroidsView::hide_endgame_screen()
{
90006030:	b510      	push	{r4, lr}
        visible = vis;
90006032:	2301      	movs	r3, #1
90006034:	4604      	mov	r4, r0
        return parent;
90006036:	f8d0 0264 	ldr.w	r0, [r0, #612]	; 0x264
        visible = vis;
9000603a:	2200      	movs	r2, #0
9000603c:	f884 3275 	strb.w	r3, [r4, #629]	; 0x275
	container_game_over.setVisible(false);
	container_controls.setVisible(true);
	container_controls.getParent()->invalidateContent();
90006040:	6803      	ldr	r3, [r0, #0]
90006042:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
90006046:	699b      	ldr	r3, [r3, #24]
90006048:	4798      	blx	r3
        return parent;
9000604a:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
9000604e:	6803      	ldr	r3, [r0, #0]
}
90006050:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
90006054:	699b      	ldr	r3, [r3, #24]
90006056:	4718      	bx	r3

90006058 <_ZN20screen_asteroidsView15getShipPositionEPiS0_>:
}

void screen_asteroidsView::getShipPosition(int *x, int *y)
{
	*x = icon_ship.getX();
	*y = icon_ship.getY();
90006058:	f9b0 30ca 	ldrsh.w	r3, [r0, #202]	; 0xca
{
9000605c:	b410      	push	{r4}
	*x = icon_ship.getX();
9000605e:	f9b0 40c8 	ldrsh.w	r4, [r0, #200]	; 0xc8
90006062:	600c      	str	r4, [r1, #0]
}
90006064:	f85d 4b04 	ldr.w	r4, [sp], #4
	*y = icon_ship.getY();
90006068:	6013      	str	r3, [r2, #0]
}
9000606a:	4770      	bx	lr

9000606c <_ZN20screen_asteroidsView16get_ship_pointerEv>:

Drawable* screen_asteroidsView::get_ship_pointer()
{
	return &icon_ship;
}
9000606c:	30c4      	adds	r0, #196	; 0xc4
9000606e:	4770      	bx	lr

90006070 <_ZN20screen_asteroidsView9move_shipEii>:
90006070:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8


void screen_asteroidsView::move_ship(int x, int y)
{
	icon_ship.setX(x);
	icon_ship.setY(y);
90006074:	f8a0 20ca 	strh.w	r2, [r0, #202]	; 0xca
	icon_ship.getParent()->invalidateContent();
90006078:	681a      	ldr	r2, [r3, #0]
	icon_ship.setX(x);
9000607a:	f8a0 10c8 	strh.w	r1, [r0, #200]	; 0xc8
	icon_ship.getParent()->invalidateContent();
9000607e:	4618      	mov	r0, r3
90006080:	6993      	ldr	r3, [r2, #24]
90006082:	4718      	bx	r3

90006084 <_ZN20screen_asteroidsView21bullet_button_pressedEv>:
}

bool screen_asteroidsView::bullet_button_pressed()
{
	return btn_shoot.getPressedState();
}
90006084:	f890 0398 	ldrb.w	r0, [r0, #920]	; 0x398
90006088:	4770      	bx	lr
9000608a:	bf00      	nop

9000608c <_ZN20screen_asteroidsView12hide_elementEPN8touchgfx8DrawableE>:
        visible = vis;
9000608c:	2300      	movs	r3, #0
        return parent;
9000608e:	6948      	ldr	r0, [r1, #20]
        visible = vis;
90006090:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25

void screen_asteroidsView::hide_element(Drawable *element)
{
	element->setVisible(false);
	element->getParent()->invalidateContent();
90006094:	6803      	ldr	r3, [r0, #0]
90006096:	699b      	ldr	r3, [r3, #24]
90006098:	4718      	bx	r3
9000609a:	bf00      	nop

9000609c <_ZN20screen_asteroidsView12update_scoreEj>:
{
9000609c:	b510      	push	{r4, lr}
9000609e:	4604      	mov	r4, r0
900060a0:	460b      	mov	r3, r1
	Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%05u", score);
900060a2:	4a08      	ldr	r2, [pc, #32]	; (900060c4 <_ZN20screen_asteroidsView12update_scoreEj+0x28>)
900060a4:	2106      	movs	r1, #6
900060a6:	f200 40ec 	addw	r0, r0, #1260	; 0x4ec
900060aa:	f011 ff03 	bl	90017eb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        if (visible)
900060ae:	f894 3179 	ldrb.w	r3, [r4, #377]	; 0x179
900060b2:	b12b      	cbz	r3, 900060c0 <_ZN20screen_asteroidsView12update_scoreEj+0x24>
            invalidate();
900060b4:	f504 70aa 	add.w	r0, r4, #340	; 0x154
}
900060b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900060bc:	f00f beed 	b.w	90015e9a <_ZNK8touchgfx8Drawable10invalidateEv>
900060c0:	bd10      	pop	{r4, pc}
900060c2:	bf00      	nop
900060c4:	90029ba4 	.word	0x90029ba4

900060c8 <_ZN20screen_asteroidsViewD1Ev>:
public:
    touchgfx::ScalableImage rocks[ROCK_COUNT];
    touchgfx::Box bullets[BULLET_COUNT];

    screen_asteroidsView();
    virtual ~screen_asteroidsView() {}
900060c8:	b570      	push	{r4, r5, r6, lr}
900060ca:	f242 24e0 	movw	r4, #8928	; 0x22e0
900060ce:	f242 4598 	movw	r5, #9368	; 0x2498
900060d2:	4b0d      	ldr	r3, [pc, #52]	; (90006108 <_ZN20screen_asteroidsViewD1Ev+0x40>)
900060d4:	4606      	mov	r6, r0
900060d6:	4404      	add	r4, r0
900060d8:	4405      	add	r5, r0
900060da:	6003      	str	r3, [r0, #0]
900060dc:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
900060e0:	681b      	ldr	r3, [r3, #0]
900060e2:	4628      	mov	r0, r5
900060e4:	4798      	blx	r3
900060e6:	42ac      	cmp	r4, r5
900060e8:	d1f8      	bne.n	900060dc <_ZN20screen_asteroidsViewD1Ev+0x14>
900060ea:	f242 1528 	movw	r5, #8488	; 0x2128
900060ee:	4435      	add	r5, r6
900060f0:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
900060f4:	681b      	ldr	r3, [r3, #0]
900060f6:	4620      	mov	r0, r4
900060f8:	4798      	blx	r3
900060fa:	42a5      	cmp	r5, r4
900060fc:	d1f8      	bne.n	900060f0 <_ZN20screen_asteroidsViewD1Ev+0x28>
900060fe:	4630      	mov	r0, r6
90006100:	f7fe fbb4 	bl	9000486c <_ZN24screen_asteroidsViewBaseD1Ev>
90006104:	4630      	mov	r0, r6
90006106:	bd70      	pop	{r4, r5, r6, pc}
90006108:	90029bb4 	.word	0x90029bb4

9000610c <_ZN20screen_asteroidsView18get_ship_directionEv>:
	if( btn_up.getPressedState() ) {
9000610c:	f890 335c 	ldrb.w	r3, [r0, #860]	; 0x35c
90006110:	b96b      	cbnz	r3, 9000612e <_ZN20screen_asteroidsView18get_ship_directionEv+0x22>
	else if( btn_down.getPressedState() ) {
90006112:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
90006116:	b943      	cbnz	r3, 9000612a <_ZN20screen_asteroidsView18get_ship_directionEv+0x1e>
	else if( btn_left.getPressedState() ) {
90006118:	f890 3320 	ldrb.w	r3, [r0, #800]	; 0x320
9000611c:	b94b      	cbnz	r3, 90006132 <_ZN20screen_asteroidsView18get_ship_directionEv+0x26>
	else if( btn_right.getPressedState() ) {
9000611e:	f890 02a8 	ldrb.w	r0, [r0, #680]	; 0x2a8
90006122:	f1c0 0004 	rsb	r0, r0, #4
90006126:	b2c0      	uxtb	r0, r0
90006128:	4770      	bx	lr
		return ShipDirection::DOWN;
9000612a:	2001      	movs	r0, #1
9000612c:	4770      	bx	lr
		return ShipDirection::UP;
9000612e:	2000      	movs	r0, #0
90006130:	4770      	bx	lr
		return ShipDirection::LEFT;
90006132:	2002      	movs	r0, #2
}
90006134:	4770      	bx	lr
90006136:	bf00      	nop

90006138 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii>:
{
90006138:	b570      	push	{r4, r5, r6, lr}
9000613a:	460c      	mov	r4, r1
	rock->setX(x);
9000613c:	b211      	sxth	r1, r2
9000613e:	480f      	ldr	r0, [pc, #60]	; (9000617c <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x44>)
{
90006140:	461e      	mov	r6, r3
	rock->setX(x);
90006142:	6822      	ldr	r2, [r4, #0]
90006144:	6b15      	ldr	r5, [r2, #48]	; 0x30
90006146:	4285      	cmp	r5, r0
90006148:	d10c      	bne.n	90006164 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x2c>
	rock->setY(y);
9000614a:	6b52      	ldr	r2, [r2, #52]	; 0x34
9000614c:	480c      	ldr	r0, [pc, #48]	; (90006180 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
        rect.x = x;
9000614e:	80a1      	strh	r1, [r4, #4]
90006150:	b231      	sxth	r1, r6
90006152:	4282      	cmp	r2, r0
90006154:	d10e      	bne.n	90006174 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x3c>
        rect.y = y;
90006156:	80e1      	strh	r1, [r4, #6]
        return parent;
90006158:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
9000615a:	6803      	ldr	r3, [r0, #0]
}
9000615c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
90006160:	699b      	ldr	r3, [r3, #24]
90006162:	4718      	bx	r3
	rock->setX(x);
90006164:	4620      	mov	r0, r4
90006166:	47a8      	blx	r5
	rock->setY(y);
90006168:	6822      	ldr	r2, [r4, #0]
9000616a:	4805      	ldr	r0, [pc, #20]	; (90006180 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
9000616c:	b231      	sxth	r1, r6
9000616e:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006170:	4282      	cmp	r2, r0
90006172:	d0f0      	beq.n	90006156 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x1e>
90006174:	4620      	mov	r0, r4
90006176:	4790      	blx	r2
90006178:	e7ee      	b.n	90006158 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x20>
9000617a:	bf00      	nop
9000617c:	900023fd 	.word	0x900023fd
90006180:	90002401 	.word	0x90002401

90006184 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii>:
{
90006184:	b570      	push	{r4, r5, r6, lr}
90006186:	460c      	mov	r4, r1
	bullet->setX(x);
90006188:	b211      	sxth	r1, r2
9000618a:	480f      	ldr	r0, [pc, #60]	; (900061c8 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x44>)
{
9000618c:	461e      	mov	r6, r3
	bullet->setX(x);
9000618e:	6822      	ldr	r2, [r4, #0]
90006190:	6b15      	ldr	r5, [r2, #48]	; 0x30
90006192:	4285      	cmp	r5, r0
90006194:	d10c      	bne.n	900061b0 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x2c>
	bullet->setY(y);
90006196:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006198:	480c      	ldr	r0, [pc, #48]	; (900061cc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
        rect.x = x;
9000619a:	80a1      	strh	r1, [r4, #4]
9000619c:	b231      	sxth	r1, r6
9000619e:	4282      	cmp	r2, r0
900061a0:	d10e      	bne.n	900061c0 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x3c>
        rect.y = y;
900061a2:	80e1      	strh	r1, [r4, #6]
        return parent;
900061a4:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900061a6:	6803      	ldr	r3, [r0, #0]
}
900061a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
900061ac:	699b      	ldr	r3, [r3, #24]
900061ae:	4718      	bx	r3
	bullet->setX(x);
900061b0:	4620      	mov	r0, r4
900061b2:	47a8      	blx	r5
	bullet->setY(y);
900061b4:	6822      	ldr	r2, [r4, #0]
900061b6:	4805      	ldr	r0, [pc, #20]	; (900061cc <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
900061b8:	b231      	sxth	r1, r6
900061ba:	6b52      	ldr	r2, [r2, #52]	; 0x34
900061bc:	4282      	cmp	r2, r0
900061be:	d0f0      	beq.n	900061a2 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x1e>
900061c0:	4620      	mov	r0, r4
900061c2:	4790      	blx	r2
900061c4:	e7ee      	b.n	900061a4 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x20>
900061c6:	bf00      	nop
900061c8:	900023fd 	.word	0x900023fd
900061cc:	90002401 	.word	0x90002401

900061d0 <_ZN20screen_asteroidsView13update_heartsEc>:
{
900061d0:	b510      	push	{r4, lr}
900061d2:	4604      	mov	r4, r0
900061d4:	2903      	cmp	r1, #3
900061d6:	d839      	bhi.n	9000624c <_ZN20screen_asteroidsView13update_heartsEc+0x7c>
900061d8:	e8df f001 	tbb	[pc, r1]
900061dc:	24340221 	.word	0x24340221
    }
900061e0:	2300      	movs	r3, #0
900061e2:	2201      	movs	r2, #1
        visible = vis;
900061e4:	2100      	movs	r1, #0
900061e6:	f884 321d 	strb.w	r3, [r4, #541]	; 0x21d
900061ea:	f884 21f1 	strb.w	r2, [r4, #497]	; 0x1f1
900061ee:	f884 1249 	strb.w	r1, [r4, #585]	; 0x249

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
900061f2:	f894 3220 	ldrb.w	r3, [r4, #544]	; 0x220
900061f6:	b133      	cbz	r3, 90006206 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
        if (visible)
900061f8:	f894 321d 	ldrb.w	r3, [r4, #541]	; 0x21d
900061fc:	b11b      	cbz	r3, 90006206 <_ZN20screen_asteroidsView13update_heartsEc+0x36>
            invalidate();
900061fe:	f504 70fc 	add.w	r0, r4, #504	; 0x1f8
90006202:	f00f fe4a 	bl	90015e9a <_ZNK8touchgfx8Drawable10invalidateEv>
90006206:	f894 31f4 	ldrb.w	r3, [r4, #500]	; 0x1f4
9000620a:	b1f3      	cbz	r3, 9000624a <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
        if (visible)
9000620c:	f894 31f1 	ldrb.w	r3, [r4, #497]	; 0x1f1
90006210:	b1db      	cbz	r3, 9000624a <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
            invalidate();
90006212:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
}
90006216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000621a:	f00f be3e 	b.w	90015e9a <_ZNK8touchgfx8Drawable10invalidateEv>
    }
9000621e:	2300      	movs	r3, #0
90006220:	461a      	mov	r2, r3
90006222:	e7df      	b.n	900061e4 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
        visible = vis;
90006224:	2301      	movs	r3, #1
90006226:	f890 224c 	ldrb.w	r2, [r0, #588]	; 0x24c
9000622a:	f880 3249 	strb.w	r3, [r0, #585]	; 0x249
9000622e:	f880 321d 	strb.w	r3, [r0, #541]	; 0x21d
90006232:	f880 31f1 	strb.w	r3, [r0, #497]	; 0x1f1
90006236:	2a00      	cmp	r2, #0
90006238:	d0db      	beq.n	900061f2 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        {
            Widget::invalidateContent();
9000623a:	f500 7009 	add.w	r0, r0, #548	; 0x224
            invalidate();
9000623e:	f00f fe2c 	bl	90015e9a <_ZNK8touchgfx8Drawable10invalidateEv>
90006242:	e7d6      	b.n	900061f2 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
    }
90006244:	2301      	movs	r3, #1
90006246:	461a      	mov	r2, r3
90006248:	e7cc      	b.n	900061e4 <_ZN20screen_asteroidsView13update_heartsEc+0x14>
9000624a:	bd10      	pop	{r4, pc}
        if (alpha > 0)
9000624c:	f890 324c 	ldrb.w	r3, [r0, #588]	; 0x24c
90006250:	2b00      	cmp	r3, #0
90006252:	d0ce      	beq.n	900061f2 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        if (visible)
90006254:	f890 3249 	ldrb.w	r3, [r0, #585]	; 0x249
            Widget::invalidateContent();
90006258:	f500 7009 	add.w	r0, r0, #548	; 0x224
9000625c:	2b00      	cmp	r3, #0
9000625e:	d1ee      	bne.n	9000623e <_ZN20screen_asteroidsView13update_heartsEc+0x6e>
90006260:	e7c7      	b.n	900061f2 <_ZN20screen_asteroidsView13update_heartsEc+0x22>
90006262:	bf00      	nop

90006264 <_ZN20screen_asteroidsViewD0Ev>:
90006264:	b570      	push	{r4, r5, r6, lr}
90006266:	f242 24e0 	movw	r4, #8928	; 0x22e0
9000626a:	f242 4598 	movw	r5, #9368	; 0x2498
9000626e:	4b10      	ldr	r3, [pc, #64]	; (900062b0 <_ZN20screen_asteroidsViewD0Ev+0x4c>)
90006270:	4606      	mov	r6, r0
90006272:	4404      	add	r4, r0
90006274:	4405      	add	r5, r0
90006276:	6003      	str	r3, [r0, #0]
90006278:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
9000627c:	681b      	ldr	r3, [r3, #0]
9000627e:	4628      	mov	r0, r5
90006280:	4798      	blx	r3
90006282:	42a5      	cmp	r5, r4
90006284:	d1f8      	bne.n	90006278 <_ZN20screen_asteroidsViewD0Ev+0x14>
90006286:	f242 1528 	movw	r5, #8488	; 0x2128
9000628a:	4435      	add	r5, r6
9000628c:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
90006290:	681b      	ldr	r3, [r3, #0]
90006292:	4620      	mov	r0, r4
90006294:	4798      	blx	r3
90006296:	42a5      	cmp	r5, r4
90006298:	d1f8      	bne.n	9000628c <_ZN20screen_asteroidsViewD0Ev+0x28>
9000629a:	4630      	mov	r0, r6
9000629c:	f7fe fae6 	bl	9000486c <_ZN24screen_asteroidsViewBaseD1Ev>
900062a0:	4630      	mov	r0, r6
900062a2:	f242 4198 	movw	r1, #9368	; 0x2498
900062a6:	f01f fecc 	bl	90026042 <_ZdlPvj>
900062aa:	4630      	mov	r0, r6
900062ac:	bd70      	pop	{r4, r5, r6, pc}
900062ae:	bf00      	nop
900062b0:	90029bb4 	.word	0x90029bb4

900062b4 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE>:
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900062b4:	6802      	ldr	r2, [r0, #0]
900062b6:	4b18      	ldr	r3, [pc, #96]	; (90006318 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x64>)
{
900062b8:	b570      	push	{r4, r5, r6, lr}
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900062ba:	6ed5      	ldr	r5, [r2, #108]	; 0x6c
{
900062bc:	460c      	mov	r4, r1
900062be:	429d      	cmp	r5, r3
900062c0:	d11a      	bne.n	900062f8 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x44>
	bullet->setX(x);
900062c2:	680b      	ldr	r3, [r1, #0]
900062c4:	4915      	ldr	r1, [pc, #84]	; (9000631c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x68>)
900062c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900062c8:	428a      	cmp	r2, r1
900062ca:	d11f      	bne.n	9000630c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x58>
        rect.x = x;
900062cc:	2200      	movs	r2, #0
900062ce:	80a2      	strh	r2, [r4, #4]
	bullet->setY(y);
900062d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900062d2:	4a13      	ldr	r2, [pc, #76]	; (90006320 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x6c>)
900062d4:	4293      	cmp	r3, r2
900062d6:	d114      	bne.n	90006302 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x4e>
        rect.y = y;
900062d8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
900062dc:	80e3      	strh	r3, [r4, #6]
        return parent;
900062de:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
900062e0:	6803      	ldr	r3, [r0, #0]
900062e2:	699b      	ldr	r3, [r3, #24]
900062e4:	4798      	blx	r3
900062e6:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900062e8:	2200      	movs	r2, #0
	bullet->getParent()->invalidateContent();
900062ea:	6803      	ldr	r3, [r0, #0]
900062ec:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
900062f0:	699b      	ldr	r3, [r3, #24]
}
900062f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
900062f6:	4718      	bx	r3
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
900062f8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
900062fc:	2200      	movs	r2, #0
900062fe:	47a8      	blx	r5
90006300:	e7f1      	b.n	900062e6 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x32>
	bullet->setY(y);
90006302:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
90006306:	4620      	mov	r0, r4
90006308:	4798      	blx	r3
9000630a:	e7e8      	b.n	900062de <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x2a>
	bullet->setX(x);
9000630c:	2100      	movs	r1, #0
9000630e:	4620      	mov	r0, r4
90006310:	4790      	blx	r2
	bullet->setY(y);
90006312:	6823      	ldr	r3, [r4, #0]
90006314:	e7dc      	b.n	900062d0 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x1c>
90006316:	bf00      	nop
90006318:	90006185 	.word	0x90006185
9000631c:	900023fd 	.word	0x900023fd
90006320:	90002401 	.word	0x90002401

90006324 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE>:
{
90006324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006328:	460d      	mov	r5, r1
9000632a:	4607      	mov	r7, r0
	int random_x = rand() % (480 - rock->getWidth());
9000632c:	f01f ff98 	bl	90026260 <rand>
90006330:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90006334:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90006338:	fb90 f2f3 	sdiv	r2, r0, r3
9000633c:	fb02 0613 	mls	r6, r2, r3, r0
	int random_y = 0 - (rand() % 272);
90006340:	f01f ff8e 	bl	90026260 <rand>
90006344:	4b1b      	ldr	r3, [pc, #108]	; (900063b4 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x90>)
90006346:	ea4f 7ce0 	mov.w	ip, r0, asr #31
9000634a:	fb83 2300 	smull	r2, r3, r3, r0
9000634e:	ebcc 1ce3 	rsb	ip, ip, r3, asr #7
	move_rock(rock, random_x, random_y);
90006352:	683b      	ldr	r3, [r7, #0]
90006354:	f8d3 805c 	ldr.w	r8, [r3, #92]	; 0x5c
	int random_y = 0 - (rand() % 272);
90006358:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9000635c:	4b16      	ldr	r3, [pc, #88]	; (900063b8 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x94>)
9000635e:	ebc0 140c 	rsb	r4, r0, ip, lsl #4
	move_rock(rock, random_x, random_y);
90006362:	4598      	cmp	r8, r3
90006364:	d119      	bne.n	9000639a <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x76>
	rock->setX(x);
90006366:	682b      	ldr	r3, [r5, #0]
90006368:	b231      	sxth	r1, r6
9000636a:	4814      	ldr	r0, [pc, #80]	; (900063bc <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x98>)
9000636c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000636e:	4282      	cmp	r2, r0
90006370:	d11c      	bne.n	900063ac <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x88>
        rect.x = x;
90006372:	80a9      	strh	r1, [r5, #4]
	rock->setY(y);
90006374:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006376:	b221      	sxth	r1, r4
90006378:	4a11      	ldr	r2, [pc, #68]	; (900063c0 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x9c>)
9000637a:	4293      	cmp	r3, r2
9000637c:	d113      	bne.n	900063a6 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x82>
        rect.y = y;
9000637e:	80e9      	strh	r1, [r5, #6]
        return parent;
90006380:	6968      	ldr	r0, [r5, #20]
	rock->getParent()->invalidateContent();
90006382:	6803      	ldr	r3, [r0, #0]
90006384:	699b      	ldr	r3, [r3, #24]
90006386:	4798      	blx	r3
90006388:	6968      	ldr	r0, [r5, #20]
        visible = vis;
9000638a:	2201      	movs	r2, #1
	rock->getParent()->invalidateContent();
9000638c:	6803      	ldr	r3, [r0, #0]
9000638e:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
90006392:	699b      	ldr	r3, [r3, #24]
}
90006394:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	rock->getParent()->invalidateContent();
90006398:	4718      	bx	r3
	move_rock(rock, random_x, random_y);
9000639a:	4623      	mov	r3, r4
9000639c:	4632      	mov	r2, r6
9000639e:	4638      	mov	r0, r7
900063a0:	4629      	mov	r1, r5
900063a2:	47c0      	blx	r8
900063a4:	e7f0      	b.n	90006388 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x64>
	rock->setY(y);
900063a6:	4628      	mov	r0, r5
900063a8:	4798      	blx	r3
900063aa:	e7e9      	b.n	90006380 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x5c>
	rock->setX(x);
900063ac:	4628      	mov	r0, r5
900063ae:	4790      	blx	r2
	rock->setY(y);
900063b0:	682b      	ldr	r3, [r5, #0]
900063b2:	e7df      	b.n	90006374 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x50>
900063b4:	78787879 	.word	0x78787879
900063b8:	90006139 	.word	0x90006139
900063bc:	900023fd 	.word	0x900023fd
900063c0:	90002401 	.word	0x90002401

900063c4 <_ZN20screen_asteroidsViewC1Ev>:
screen_asteroidsView::screen_asteroidsView()
900063c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900063c8:	4607      	mov	r7, r0
900063ca:	f242 1428 	movw	r4, #8488	; 0x2128
900063ce:	f242 25e0 	movw	r5, #8928	; 0x22e0
900063d2:	b082      	sub	sp, #8
900063d4:	f7fe fb54 	bl	90004a80 <_ZN24screen_asteroidsViewBaseC1Ev>
900063d8:	443c      	add	r4, r7
900063da:	4b6b      	ldr	r3, [pc, #428]	; (90006588 <_ZN20screen_asteroidsViewC1Ev+0x1c4>)
900063dc:	443d      	add	r5, r7
900063de:	f64f 76ff 	movw	r6, #65535	; 0xffff
900063e2:	f04f 38ff 	mov.w	r8, #4294967295
900063e6:	603b      	str	r3, [r7, #0]
900063e8:	4620      	mov	r0, r4
900063ea:	342c      	adds	r4, #44	; 0x2c
900063ec:	a901      	add	r1, sp, #4
900063ee:	f8ad 6004 	strh.w	r6, [sp, #4]
900063f2:	f00b f93b 	bl	9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900063f6:	42a5      	cmp	r5, r4
900063f8:	d1f6      	bne.n	900063e8 <_ZN20screen_asteroidsViewC1Ev+0x24>
900063fa:	f507 5300 	add.w	r3, r7, #8192	; 0x2000
900063fe:	2200      	movs	r2, #0
          touchable(false),
90006400:	f44f 7480 	mov.w	r4, #256	; 0x100
        : Widget(), alpha(255), color(0)
90006404:	4961      	ldr	r1, [pc, #388]	; (9000658c <_ZN20screen_asteroidsViewC1Ev+0x1c8>)
90006406:	25ff      	movs	r5, #255	; 0xff
}
90006408:	4638      	mov	r0, r7
9000640a:	f883 8306 	strb.w	r8, [r3, #774]	; 0x306
9000640e:	f8a3 4304 	strh.w	r4, [r3, #772]	; 0x304
90006412:	f8c3 12e0 	str.w	r1, [r3, #736]	; 0x2e0
        : color(col)
90006416:	f8c3 2308 	str.w	r2, [r3, #776]	; 0x308
9000641a:	f8a3 4330 	strh.w	r4, [r3, #816]	; 0x330
9000641e:	f8c3 130c 	str.w	r1, [r3, #780]	; 0x30c
90006422:	f8c3 2334 	str.w	r2, [r3, #820]	; 0x334
90006426:	f883 5332 	strb.w	r5, [r3, #818]	; 0x332
        : x(0), y(0), width(0), height(0)
9000642a:	e9c3 22b9 	strd	r2, r2, [r3, #740]	; 0x2e4
9000642e:	e9c3 22bb 	strd	r2, r2, [r3, #748]	; 0x2ec
          nextSibling(0),
90006432:	e9c3 22bd 	strd	r2, r2, [r3, #756]	; 0x2f4
          cachedAbsX(0),
90006436:	e9c3 22bf 	strd	r2, r2, [r3, #764]	; 0x2fc
9000643a:	e9c3 22c4 	strd	r2, r2, [r3, #784]	; 0x310
9000643e:	e9c3 22c6 	strd	r2, r2, [r3, #792]	; 0x318
          nextSibling(0),
90006442:	e9c3 22c8 	strd	r2, r2, [r3, #800]	; 0x320
          cachedAbsX(0),
90006446:	e9c3 22ca 	strd	r2, r2, [r3, #808]	; 0x328
9000644a:	e9c3 22cf 	strd	r2, r2, [r3, #828]	; 0x33c
9000644e:	e9c3 22d1 	strd	r2, r2, [r3, #836]	; 0x344
          nextSibling(0),
90006452:	e9c3 22d3 	strd	r2, r2, [r3, #844]	; 0x34c
          cachedAbsX(0),
90006456:	e9c3 22d5 	strd	r2, r2, [r3, #852]	; 0x354
          touchable(false),
9000645a:	f8a3 435c 	strh.w	r4, [r3, #860]	; 0x35c
9000645e:	f8c3 1338 	str.w	r1, [r3, #824]	; 0x338
90006462:	f883 535e 	strb.w	r5, [r3, #862]	; 0x35e
        : color(col)
90006466:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
9000646a:	f8a3 4388 	strh.w	r4, [r3, #904]	; 0x388
9000646e:	f8c3 1364 	str.w	r1, [r3, #868]	; 0x364
90006472:	f883 538a 	strb.w	r5, [r3, #906]	; 0x38a
90006476:	f8c3 238c 	str.w	r2, [r3, #908]	; 0x38c
9000647a:	f8a3 43b4 	strh.w	r4, [r3, #948]	; 0x3b4
9000647e:	f8c3 1390 	str.w	r1, [r3, #912]	; 0x390
90006482:	f883 53b6 	strb.w	r5, [r3, #950]	; 0x3b6
90006486:	f8c3 23b8 	str.w	r2, [r3, #952]	; 0x3b8
        : x(0), y(0), width(0), height(0)
9000648a:	e9c3 22da 	strd	r2, r2, [r3, #872]	; 0x368
9000648e:	e9c3 22dc 	strd	r2, r2, [r3, #880]	; 0x370
          nextSibling(0),
90006492:	e9c3 22de 	strd	r2, r2, [r3, #888]	; 0x378
          cachedAbsX(0),
90006496:	e9c3 22e0 	strd	r2, r2, [r3, #896]	; 0x380
9000649a:	e9c3 22e5 	strd	r2, r2, [r3, #916]	; 0x394
9000649e:	e9c3 22e7 	strd	r2, r2, [r3, #924]	; 0x39c
          nextSibling(0),
900064a2:	e9c3 22e9 	strd	r2, r2, [r3, #932]	; 0x3a4
          cachedAbsX(0),
900064a6:	e9c3 22eb 	strd	r2, r2, [r3, #940]	; 0x3ac
900064aa:	e9c3 22f0 	strd	r2, r2, [r3, #960]	; 0x3c0
900064ae:	e9c3 22f2 	strd	r2, r2, [r3, #968]	; 0x3c8
          nextSibling(0),
900064b2:	e9c3 22f4 	strd	r2, r2, [r3, #976]	; 0x3d0
          cachedAbsX(0),
900064b6:	e9c3 22f6 	strd	r2, r2, [r3, #984]	; 0x3d8
          touchable(false),
900064ba:	f8a3 43e0 	strh.w	r4, [r3, #992]	; 0x3e0
900064be:	f8c3 13bc 	str.w	r1, [r3, #956]	; 0x3bc
900064c2:	f883 53e2 	strb.w	r5, [r3, #994]	; 0x3e2
        : color(col)
900064c6:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
          parent(0),
900064ca:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
          nextSibling(0),
900064ce:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
          nextDrawChainElement(0),
900064d2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
          cachedAbsX(0),
900064d6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
          touchable(false),
900064da:	f8a3 440c 	strh.w	r4, [r3, #1036]	; 0x40c
900064de:	f8c3 13e8 	str.w	r1, [r3, #1000]	; 0x3e8
900064e2:	f883 540e 	strb.w	r5, [r3, #1038]	; 0x40e
900064e6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
        : x(0), y(0), width(0), height(0)
900064ea:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
900064ee:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
900064f2:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
900064f6:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
          parent(0),
900064fa:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
          nextSibling(0),
900064fe:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
          nextDrawChainElement(0),
90006502:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
          cachedAbsX(0),
90006506:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
          touchable(false),
9000650a:	f8a3 4438 	strh.w	r4, [r3, #1080]	; 0x438
9000650e:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
90006512:	f883 543a 	strb.w	r5, [r3, #1082]	; 0x43a
        : color(col)
90006516:	f8c3 243c 	str.w	r2, [r3, #1084]	; 0x43c
        : x(0), y(0), width(0), height(0)
9000651a:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
9000651e:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
90006522:	e9c3 22fb 	strd	r2, r2, [r3, #1004]	; 0x3ec
90006526:	e9c3 22fd 	strd	r2, r2, [r3, #1012]	; 0x3f4
9000652a:	f8c3 244c 	str.w	r2, [r3, #1100]	; 0x44c
9000652e:	f8c3 2450 	str.w	r2, [r3, #1104]	; 0x450
          parent(0),
90006532:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
          nextSibling(0),
90006536:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
          nextDrawChainElement(0),
9000653a:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
          cachedAbsX(0),
9000653e:	f8c3 2460 	str.w	r2, [r3, #1120]	; 0x460
          touchable(false),
90006542:	f8a3 4464 	strh.w	r4, [r3, #1124]	; 0x464
90006546:	f8a3 4490 	strh.w	r4, [r3, #1168]	; 0x490
9000654a:	f8c3 1440 	str.w	r1, [r3, #1088]	; 0x440
9000654e:	f883 5466 	strb.w	r5, [r3, #1126]	; 0x466
        : color(col)
90006552:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
        : x(0), y(0), width(0), height(0)
90006556:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
9000655a:	f8c3 2474 	str.w	r2, [r3, #1140]	; 0x474
9000655e:	f8c3 2478 	str.w	r2, [r3, #1144]	; 0x478
90006562:	f8c3 247c 	str.w	r2, [r3, #1148]	; 0x47c
          parent(0),
90006566:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
          nextSibling(0),
9000656a:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
          nextDrawChainElement(0),
9000656e:	f8c3 2488 	str.w	r2, [r3, #1160]	; 0x488
          cachedAbsX(0),
90006572:	f8c3 248c 	str.w	r2, [r3, #1164]	; 0x48c
90006576:	f8c3 146c 	str.w	r1, [r3, #1132]	; 0x46c
9000657a:	f883 5492 	strb.w	r5, [r3, #1170]	; 0x492
        : color(col)
9000657e:	f8c3 2494 	str.w	r2, [r3, #1172]	; 0x494
90006582:	b002      	add	sp, #8
90006584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90006588:	90029bb4 	.word	0x90029bb4
9000658c:	9002a3a4 	.word	0x9002a3a4

90006590 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>:
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006590:	6802      	ldr	r2, [r0, #0]
90006592:	4b16      	ldr	r3, [pc, #88]	; (900065ec <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x5c>)
{
90006594:	b570      	push	{r4, r5, r6, lr}
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006596:	6dd5      	ldr	r5, [r2, #92]	; 0x5c
{
90006598:	460c      	mov	r4, r1
9000659a:	429d      	cmp	r5, r3
9000659c:	d119      	bne.n	900065d2 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x42>
	rock->setX(x);
9000659e:	680b      	ldr	r3, [r1, #0]
900065a0:	4913      	ldr	r1, [pc, #76]	; (900065f0 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x60>)
900065a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900065a4:	428a      	cmp	r2, r1
900065a6:	d11c      	bne.n	900065e2 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x52>
        rect.x = x;
900065a8:	2200      	movs	r2, #0
900065aa:	80a2      	strh	r2, [r4, #4]
	rock->setY(y);
900065ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900065ae:	4a11      	ldr	r2, [pc, #68]	; (900065f4 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x64>)
900065b0:	4293      	cmp	r3, r2
900065b2:	d112      	bne.n	900065da <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x4a>
        rect.y = y;
900065b4:	2300      	movs	r3, #0
900065b6:	80e3      	strh	r3, [r4, #6]
        return parent;
900065b8:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
900065ba:	6803      	ldr	r3, [r0, #0]
900065bc:	699b      	ldr	r3, [r3, #24]
900065be:	4798      	blx	r3
900065c0:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900065c2:	2200      	movs	r2, #0
	rock->getParent()->invalidateContent();
900065c4:	6803      	ldr	r3, [r0, #0]
900065c6:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
900065ca:	699b      	ldr	r3, [r3, #24]
}
900065cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
900065d0:	4718      	bx	r3
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
900065d2:	2300      	movs	r3, #0
900065d4:	461a      	mov	r2, r3
900065d6:	47a8      	blx	r5
900065d8:	e7f2      	b.n	900065c0 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x30>
	rock->setY(y);
900065da:	2100      	movs	r1, #0
900065dc:	4620      	mov	r0, r4
900065de:	4798      	blx	r3
900065e0:	e7ea      	b.n	900065b8 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x28>
	rock->setX(x);
900065e2:	2100      	movs	r1, #0
900065e4:	4620      	mov	r0, r4
900065e6:	4790      	blx	r2
	rock->setY(y);
900065e8:	6823      	ldr	r3, [r4, #0]
900065ea:	e7df      	b.n	900065ac <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x1c>
900065ec:	90006139 	.word	0x90006139
900065f0:	900023fd 	.word	0x900023fd
900065f4:	90002401 	.word	0x90002401

900065f8 <_ZN20screen_asteroidsView11setupScreenEv>:
{
900065f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900065fc:	4605      	mov	r5, r0
900065fe:	b085      	sub	sp, #20
90006600:	f242 1b28 	movw	fp, #8488	; 0x2128
90006604:	2400      	movs	r4, #0
90006606:	9001      	str	r0, [sp, #4]
    screen_asteroidsViewBase::setupScreen();
90006608:	f7fe f8bc 	bl	90004784 <_ZN24screen_asteroidsViewBase11setupScreenEv>
9000660c:	462b      	mov	r3, r5
9000660e:	4e42      	ldr	r6, [pc, #264]	; (90006718 <_ZN20screen_asteroidsView11setupScreenEv+0x120>)
90006610:	3504      	adds	r5, #4
90006612:	4f42      	ldr	r7, [pc, #264]	; (9000671c <_ZN20screen_asteroidsView11setupScreenEv+0x124>)
90006614:	449b      	add	fp, r3
90006616:	f04f 0903 	mov.w	r9, #3
        setY(y);
9000661a:	f04f 0a4f 	mov.w	sl, #79	; 0x4f
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000661e:	46a0      	mov	r8, r4
90006620:	e023      	b.n	9000666a <_ZN20screen_asteroidsView11setupScreenEv+0x72>
90006622:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90006624:	f8ab 1004 	strh.w	r1, [fp, #4]
        rect.y = y;
90006628:	42ba      	cmp	r2, r7
9000662a:	d133      	bne.n	90006694 <_ZN20screen_asteroidsView11setupScreenEv+0x9c>
9000662c:	f8ab a006 	strh.w	sl, [fp, #6]
        setWidth(width);
90006630:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90006632:	4658      	mov	r0, fp
90006634:	2122      	movs	r1, #34	; 0x22
    for(int i = 0; i < ROCK_COUNT; i++) {
90006636:	3422      	adds	r4, #34	; 0x22
90006638:	4790      	blx	r2
        setHeight(height);
9000663a:	f8db 2000 	ldr.w	r2, [fp]
9000663e:	4658      	mov	r0, fp
90006640:	211d      	movs	r1, #29
90006642:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
90006644:	b2a4      	uxth	r4, r4
90006646:	4790      	blx	r2
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006648:	f8db 2000 	ldr.w	r2, [fp]
9000664c:	4658      	mov	r0, fp
9000664e:	2100      	movs	r1, #0
90006650:	6e52      	ldr	r2, [r2, #100]	; 0x64
90006652:	4790      	blx	r2
90006654:	4659      	mov	r1, fp
        visible = vis;
90006656:	f88b 8025 	strb.w	r8, [fp, #37]	; 0x25
9000665a:	4628      	mov	r0, r5
9000665c:	f009 fb00 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for(int i = 0; i < ROCK_COUNT; i++) {
90006660:	f5b4 7faa 	cmp.w	r4, #340	; 0x154
90006664:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
90006668:	d01a      	beq.n	900066a0 <_ZN20screen_asteroidsView11setupScreenEv+0xa8>
    	rocks[i].setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
9000666a:	f8db 2000 	ldr.w	r2, [fp]
9000666e:	a903      	add	r1, sp, #12
90006670:	4658      	mov	r0, fp
90006672:	f8ad 900c 	strh.w	r9, [sp, #12]
90006676:	6e12      	ldr	r2, [r2, #96]	; 0x60
90006678:	4790      	blx	r2
        setX(x);
9000667a:	f8db 3000 	ldr.w	r3, [fp]
    	rocks[i].setPosition(i*34, 79, 34, 29);
9000667e:	b221      	sxth	r1, r4
90006680:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006682:	42b2      	cmp	r2, r6
90006684:	d0cd      	beq.n	90006622 <_ZN20screen_asteroidsView11setupScreenEv+0x2a>
90006686:	4658      	mov	r0, fp
90006688:	4790      	blx	r2
9000668a:	f8db 3000 	ldr.w	r3, [fp]
        setY(y);
9000668e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90006690:	42ba      	cmp	r2, r7
90006692:	d0cb      	beq.n	9000662c <_ZN20screen_asteroidsView11setupScreenEv+0x34>
90006694:	4658      	mov	r0, fp
90006696:	214f      	movs	r1, #79	; 0x4f
90006698:	4790      	blx	r2
9000669a:	f8db 3000 	ldr.w	r3, [fp]
9000669e:	e7c7      	b.n	90006630 <_ZN20screen_asteroidsView11setupScreenEv+0x38>
900066a0:	9b01      	ldr	r3, [sp, #4]
900066a2:	f242 24e0 	movw	r4, #8928	; 0x22e0
900066a6:	f242 4898 	movw	r8, #9368	; 0x2498
        setX(x);
900066aa:	f04f 0aee 	mov.w	sl, #238	; 0xee
900066ae:	441c      	add	r4, r3
        setY(y);
900066b0:	f04f 09db 	mov.w	r9, #219	; 0xdb
900066b4:	4498      	add	r8, r3
900066b6:	e01c      	b.n	900066f2 <_ZN20screen_asteroidsView11setupScreenEv+0xfa>
900066b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
900066ba:	f8a4 a004 	strh.w	sl, [r4, #4]
        rect.y = y;
900066be:	42ba      	cmp	r2, r7
900066c0:	d122      	bne.n	90006708 <_ZN20screen_asteroidsView11setupScreenEv+0x110>
900066c2:	f8a4 9006 	strh.w	r9, [r4, #6]
        setWidth(width);
900066c6:	4620      	mov	r0, r4
900066c8:	2104      	movs	r1, #4
900066ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900066cc:	4798      	blx	r3
        setHeight(height);
900066ce:	6823      	ldr	r3, [r4, #0]
900066d0:	4620      	mov	r0, r4
900066d2:	2104      	movs	r1, #4
900066d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900066d6:	4798      	blx	r3
        color = newColor;
900066d8:	f04f 32ff 	mov.w	r2, #4294967295
900066dc:	4621      	mov	r1, r4
        visible = vis;
900066de:	2300      	movs	r3, #0
900066e0:	62a2      	str	r2, [r4, #40]	; 0x28
    for(int i = 0; i < BULLET_COUNT; i++) {
900066e2:	342c      	adds	r4, #44	; 0x2c
900066e4:	4628      	mov	r0, r5
900066e6:	f804 3c07 	strb.w	r3, [r4, #-7]
900066ea:	f009 fab9 	bl	9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900066ee:	45a0      	cmp	r8, r4
900066f0:	d00f      	beq.n	90006712 <_ZN20screen_asteroidsView11setupScreenEv+0x11a>
        setX(x);
900066f2:	6823      	ldr	r3, [r4, #0]
900066f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900066f6:	42b2      	cmp	r2, r6
900066f8:	d0de      	beq.n	900066b8 <_ZN20screen_asteroidsView11setupScreenEv+0xc0>
900066fa:	4620      	mov	r0, r4
900066fc:	21ee      	movs	r1, #238	; 0xee
900066fe:	4790      	blx	r2
90006700:	6823      	ldr	r3, [r4, #0]
        setY(y);
90006702:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90006704:	42ba      	cmp	r2, r7
90006706:	d0dc      	beq.n	900066c2 <_ZN20screen_asteroidsView11setupScreenEv+0xca>
90006708:	4620      	mov	r0, r4
9000670a:	21db      	movs	r1, #219	; 0xdb
9000670c:	4790      	blx	r2
9000670e:	6823      	ldr	r3, [r4, #0]
90006710:	e7d9      	b.n	900066c6 <_ZN20screen_asteroidsView11setupScreenEv+0xce>
}
90006712:	b005      	add	sp, #20
90006714:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006718:	900023fd 	.word	0x900023fd
9000671c:	90002401 	.word	0x90002401

90006720 <_ZN27screen_game_selectPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_game_selectPresenter() {}
90006720:	4770      	bx	lr
90006722:	bf00      	nop

90006724 <_ZThn4_N27screen_game_selectPresenterD1Ev>:
90006724:	3804      	subs	r0, #4
90006726:	4770      	bx	lr

90006728 <_ZN27screen_game_selectPresenter10deactivateEv>:
}

void screen_game_selectPresenter::activate()
{

}
90006728:	4770      	bx	lr
9000672a:	bf00      	nop

9000672c <_ZN27screen_game_selectPresenterD0Ev>:
9000672c:	b510      	push	{r4, lr}
9000672e:	4604      	mov	r4, r0
90006730:	2110      	movs	r1, #16
90006732:	f01f fc86 	bl	90026042 <_ZdlPvj>
90006736:	4620      	mov	r0, r4
90006738:	bd10      	pop	{r4, pc}
9000673a:	bf00      	nop

9000673c <_ZThn4_N27screen_game_selectPresenterD0Ev>:
9000673c:	b500      	push	{lr}
9000673e:	3804      	subs	r0, #4
90006740:	b083      	sub	sp, #12
90006742:	2110      	movs	r1, #16
90006744:	9001      	str	r0, [sp, #4]
90006746:	f01f fc7c 	bl	90026042 <_ZdlPvj>
9000674a:	9801      	ldr	r0, [sp, #4]
9000674c:	b003      	add	sp, #12
9000674e:	f85d fb04 	ldr.w	pc, [sp], #4
90006752:	bf00      	nop

90006754 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>:
    : view(v)
90006754:	4a06      	ldr	r2, [pc, #24]	; (90006770 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView+0x1c>)
90006756:	60c1      	str	r1, [r0, #12]
screen_game_selectPresenter::screen_game_selectPresenter(screen_game_selectView& v)
90006758:	b410      	push	{r4}
9000675a:	2400      	movs	r4, #0
9000675c:	6084      	str	r4, [r0, #8]
    : view(v)
9000675e:	f102 0408 	add.w	r4, r2, #8
90006762:	3220      	adds	r2, #32
90006764:	e9c0 4200 	strd	r4, r2, [r0]
}
90006768:	f85d 4b04 	ldr.w	r4, [sp], #4
9000676c:	4770      	bx	lr
9000676e:	bf00      	nop
90006770:	90029c24 	.word	0x90029c24

90006774 <_ZN22screen_game_selectView14tearDownScreenEv>:
}

void screen_game_selectView::tearDownScreen()
{
    screen_game_selectViewBase::tearDownScreen();
}
90006774:	4770      	bx	lr
90006776:	bf00      	nop

90006778 <_ZN22screen_game_selectViewD1Ev>:

class screen_game_selectView : public screen_game_selectViewBase
{
public:
    screen_game_selectView();
    virtual ~screen_game_selectView() {}
90006778:	4b03      	ldr	r3, [pc, #12]	; (90006788 <_ZN22screen_game_selectViewD1Ev+0x10>)
9000677a:	b510      	push	{r4, lr}
9000677c:	4604      	mov	r4, r0
9000677e:	6003      	str	r3, [r0, #0]
90006780:	f7fe fde0 	bl	90005344 <_ZN26screen_game_selectViewBaseD1Ev>
90006784:	4620      	mov	r0, r4
90006786:	bd10      	pop	{r4, pc}
90006788:	90029c70 	.word	0x90029c70

9000678c <_ZN22screen_game_selectViewD0Ev>:
9000678c:	4b06      	ldr	r3, [pc, #24]	; (900067a8 <_ZN22screen_game_selectViewD0Ev+0x1c>)
9000678e:	b510      	push	{r4, lr}
90006790:	4604      	mov	r4, r0
90006792:	6003      	str	r3, [r0, #0]
90006794:	f7fe fdd6 	bl	90005344 <_ZN26screen_game_selectViewBaseD1Ev>
90006798:	f44f 71ca 	mov.w	r1, #404	; 0x194
9000679c:	4620      	mov	r0, r4
9000679e:	f01f fc50 	bl	90026042 <_ZdlPvj>
900067a2:	4620      	mov	r0, r4
900067a4:	bd10      	pop	{r4, pc}
900067a6:	bf00      	nop
900067a8:	90029c70 	.word	0x90029c70

900067ac <_ZN22screen_game_selectViewC1Ev>:
screen_game_selectView::screen_game_selectView()
900067ac:	b510      	push	{r4, lr}
900067ae:	4604      	mov	r4, r0
900067b0:	f7fe fed4 	bl	9000555c <_ZN26screen_game_selectViewBaseC1Ev>
900067b4:	4b01      	ldr	r3, [pc, #4]	; (900067bc <_ZN22screen_game_selectViewC1Ev+0x10>)
}
900067b6:	4620      	mov	r0, r4
screen_game_selectView::screen_game_selectView()
900067b8:	6023      	str	r3, [r4, #0]
}
900067ba:	bd10      	pop	{r4, pc}
900067bc:	90029c70 	.word	0x90029c70

900067c0 <_ZN22screen_game_selectView11setupScreenEv>:
    screen_game_selectViewBase::setupScreen();
900067c0:	f7fe bdc2 	b.w	90005348 <_ZN26screen_game_selectViewBase11setupScreenEv>

900067c4 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
900067c4:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900067c8:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
900067ca:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900067ce:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
900067d2:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
900067d4:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
900067d6:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
900067da:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
900067de:	4770      	bx	lr

900067e0 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
900067e0:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
900067e4:	2b01      	cmp	r3, #1
900067e6:	d102      	bne.n	900067ee <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
900067e8:	2300      	movs	r3, #0
900067ea:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
900067ee:	2000      	movs	r0, #0
900067f0:	4770      	bx	lr
900067f2:	bf00      	nop

900067f4 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
900067f4:	2000      	movs	r0, #0
900067f6:	4770      	bx	lr

900067f8 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
900067f8:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
900067fa:	6904      	ldr	r4, [r0, #16]
900067fc:	8900      	ldrh	r0, [r0, #8]
900067fe:	46a4      	mov	ip, r4
}
90006800:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006804:	4760      	bx	ip
90006806:	bf00      	nop

90006808 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006808:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000680a:	68c4      	ldr	r4, [r0, #12]
9000680c:	8900      	ldrh	r0, [r0, #8]
9000680e:	46a4      	mov	ip, r4
}
90006810:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006814:	4760      	bx	ip
90006816:	bf00      	nop

90006818 <FT5336_GestureConfig>:
{
90006818:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
9000681a:	f100 0518 	add.w	r5, r0, #24
{
9000681e:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006820:	7809      	ldrb	r1, [r1, #0]
90006822:	4628      	mov	r0, r5
90006824:	f000 f96c 	bl	90006b00 <ft5336_radian_value>
90006828:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
9000682a:	7931      	ldrb	r1, [r6, #4]
9000682c:	4628      	mov	r0, r5
9000682e:	f000 f975 	bl	90006b1c <ft5336_offset_left_right>
90006832:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90006834:	7a31      	ldrb	r1, [r6, #8]
90006836:	4628      	mov	r0, r5
90006838:	f000 f97e 	bl	90006b38 <ft5336_offset_up_down>
9000683c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
9000683e:	7b31      	ldrb	r1, [r6, #12]
90006840:	4628      	mov	r0, r5
90006842:	f000 f987 	bl	90006b54 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006846:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90006848:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
9000684a:	4628      	mov	r0, r5
9000684c:	f000 f990 	bl	90006b70 <ft5336_distance_up_down>
90006850:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006852:	7d31      	ldrb	r1, [r6, #20]
90006854:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90006856:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90006858:	f000 f998 	bl	90006b8c <ft5336_distance_zoom>
  if(ret != FT5336_OK)
9000685c:	42c4      	cmn	r4, r0
}
9000685e:	bf14      	ite	ne
90006860:	f04f 30ff 	movne.w	r0, #4294967295
90006864:	2000      	moveq	r0, #0
90006866:	bd70      	pop	{r4, r5, r6, pc}

90006868 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90006868:	3018      	adds	r0, #24
9000686a:	f000 b9ab 	b.w	90006bc4 <ft5336_chip_id>
9000686e:	bf00      	nop

90006870 <FT5336_GetState>:
{
90006870:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006872:	f100 0518 	add.w	r5, r0, #24
{
90006876:	b083      	sub	sp, #12
90006878:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
9000687a:	4628      	mov	r0, r5
9000687c:	a901      	add	r1, sp, #4
9000687e:	f000 f931 	bl	90006ae4 <ft5336_td_status>
90006882:	bb10      	cbnz	r0, 900068ca <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006884:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006888:	2b05      	cmp	r3, #5
9000688a:	bf94      	ite	ls
9000688c:	4619      	movls	r1, r3
9000688e:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006890:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006892:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006894:	4628      	mov	r0, r5
90006896:	2103      	movs	r1, #3
90006898:	eb0d 0203 	add.w	r2, sp, r3
9000689c:	f000 f910 	bl	90006ac0 <ft5336_read_reg>
900068a0:	b9b0      	cbnz	r0, 900068d0 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068a2:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068a6:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068aa:	0212      	lsls	r2, r2, #8
900068ac:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068b0:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068b2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068b6:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
900068ba:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
900068bc:	f89d 1007 	ldrb.w	r1, [sp, #7]
900068c0:	430b      	orrs	r3, r1
900068c2:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900068c6:	b003      	add	sp, #12
900068c8:	bd30      	pop	{r4, r5, pc}
900068ca:	f04f 31ff 	mov.w	r1, #4294967295
900068ce:	e7df      	b.n	90006890 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
900068d0:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900068d4:	e7f7      	b.n	900068c6 <FT5336_GetState+0x56>
900068d6:	bf00      	nop

900068d8 <FT5336_GetMultiTouchState>:
{
900068d8:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900068da:	f100 0518 	add.w	r5, r0, #24
{
900068de:	b088      	sub	sp, #32
900068e0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900068e2:	4628      	mov	r0, r5
900068e4:	4669      	mov	r1, sp
900068e6:	f000 f8fd 	bl	90006ae4 <ft5336_td_status>
900068ea:	2800      	cmp	r0, #0
900068ec:	f040 809a 	bne.w	90006a24 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900068f0:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900068f4:	2b05      	cmp	r3, #5
900068f6:	bf94      	ite	ls
900068f8:	4619      	movls	r1, r3
900068fa:	2100      	movhi	r1, #0
900068fc:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900068fe:	231e      	movs	r3, #30
90006900:	466a      	mov	r2, sp
90006902:	4628      	mov	r0, r5
90006904:	2103      	movs	r1, #3
90006906:	f000 f8db 	bl	90006ac0 <ft5336_read_reg>
9000690a:	2800      	cmp	r0, #0
9000690c:	f040 808d 	bne.w	90006a2a <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006910:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006914:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006918:	020a      	lsls	r2, r1, #8
9000691a:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000691e:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006920:	f89d c007 	ldrb.w	ip, [sp, #7]
90006924:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006928:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000692a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000692e:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006932:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006934:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006938:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000693a:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000693c:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000693e:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006940:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006944:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006946:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000694a:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000694e:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006950:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006952:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006956:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006958:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000695a:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000695c:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006960:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006962:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006964:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006968:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
9000696c:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000696e:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006970:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006972:	ea45 050c 	orr.w	r5, r5, ip
90006976:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000697a:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
9000697e:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006980:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006982:	0212      	lsls	r2, r2, #8
90006984:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006988:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
9000698a:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
9000698e:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006992:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006994:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006996:	f89d 300e 	ldrb.w	r3, [sp, #14]
9000699a:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
9000699c:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069a0:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069a2:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069a4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069a8:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069aa:	f89d 200f 	ldrb.w	r2, [sp, #15]
900069ae:	4313      	orrs	r3, r2
900069b0:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900069b2:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069b4:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069bc:	020a      	lsls	r2, r1, #8
900069be:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069c2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069c4:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069c8:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069ca:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069ce:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069d0:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069d4:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069d6:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069d8:	f89d 1018 	ldrb.w	r1, [sp, #24]
900069dc:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
900069de:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069e0:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069e2:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069e6:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900069e8:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069ec:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
900069ee:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900069f2:	f89d 301d 	ldrb.w	r3, [sp, #29]
900069f6:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
900069f8:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
900069fa:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
900069fc:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a00:	6625      	str	r5, [r4, #96]	; 0x60
90006a02:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a04:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006a08:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a0a:	021b      	lsls	r3, r3, #8
90006a0c:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006a10:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90006a14:	430b      	orrs	r3, r1
90006a16:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a18:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006a1c:	4313      	orrs	r3, r2
90006a1e:	6163      	str	r3, [r4, #20]
}
90006a20:	b008      	add	sp, #32
90006a22:	bd70      	pop	{r4, r5, r6, pc}
90006a24:	f04f 31ff 	mov.w	r1, #4294967295
90006a28:	e768      	b.n	900068fc <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006a2a:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006a2e:	e7f7      	b.n	90006a20 <FT5336_GetMultiTouchState+0x148>

90006a30 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006a30:	3018      	adds	r0, #24
90006a32:	f000 b84d 	b.w	90006ad0 <ft5336_gest_id>
90006a36:	bf00      	nop

90006a38 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006a38:	2101      	movs	r1, #1
90006a3a:	3018      	adds	r0, #24
90006a3c:	f000 b8b4 	b.w	90006ba8 <ft5336_g_mode>

90006a40 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006a40:	2100      	movs	r1, #0
90006a42:	3018      	adds	r0, #24
90006a44:	f000 b8b0 	b.w	90006ba8 <ft5336_g_mode>

90006a48 <FT5336_Init>:
{
90006a48:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006a4a:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90006a4e:	b98d      	cbnz	r5, 90006a74 <FT5336_Init+0x2c>
    pObj->IO.Init();
90006a50:	4606      	mov	r6, r0
90006a52:	4604      	mov	r4, r0
90006a54:	f856 3b18 	ldr.w	r3, [r6], #24
90006a58:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006a5a:	4629      	mov	r1, r5
90006a5c:	4630      	mov	r0, r6
90006a5e:	f000 f8a3 	bl	90006ba8 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006a62:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006a64:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006a68:	bf18      	it	ne
90006a6a:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006a6c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90006a70:	4240      	negs	r0, r0
}
90006a72:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90006a74:	2000      	movs	r0, #0
}
90006a76:	bd70      	pop	{r4, r5, r6, pc}

90006a78 <FT5336_ClearIT>:
90006a78:	2000      	movs	r0, #0
90006a7a:	4770      	bx	lr

90006a7c <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006a7c:	b1c0      	cbz	r0, 90006ab0 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006a7e:	890a      	ldrh	r2, [r1, #8]
{
90006a80:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006a82:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006a86:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006a88:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006a8c:	694a      	ldr	r2, [r1, #20]
90006a8e:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006a92:	4909      	ldr	r1, [pc, #36]	; (90006ab8 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006a94:	60c5      	str	r5, [r0, #12]
90006a96:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006a9a:	4a08      	ldr	r2, [pc, #32]	; (90006abc <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006a9c:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006aa0:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006aa2:	b10b      	cbz	r3, 90006aa8 <FT5336_RegisterBusIO+0x2c>
}
90006aa4:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006aa6:	4718      	bx	r3
}
90006aa8:	f04f 30ff 	mov.w	r0, #4294967295
90006aac:	bc30      	pop	{r4, r5}
90006aae:	4770      	bx	lr
90006ab0:	f04f 30ff 	mov.w	r0, #4294967295
90006ab4:	4770      	bx	lr
90006ab6:	bf00      	nop
90006ab8:	900067f9 	.word	0x900067f9
90006abc:	90006809 	.word	0x90006809

90006ac0 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006ac0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ac2:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006ac6:	46a4      	mov	ip, r4
}
90006ac8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006acc:	4760      	bx	ip
90006ace:	bf00      	nop

90006ad0 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006ad0:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ad2:	2301      	movs	r3, #1
{
90006ad4:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ad6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006ada:	4619      	mov	r1, r3
90006adc:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006ade:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ae2:	4760      	bx	ip

90006ae4 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006ae4:	b538      	push	{r3, r4, r5, lr}
90006ae6:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006ae8:	2301      	movs	r3, #1
90006aea:	2102      	movs	r1, #2
90006aec:	4622      	mov	r2, r4
90006aee:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006af2:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006af4:	b918      	cbnz	r0, 90006afe <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006af6:	7823      	ldrb	r3, [r4, #0]
90006af8:	f003 030f 	and.w	r3, r3, #15
90006afc:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006afe:	bd38      	pop	{r3, r4, r5, pc}

90006b00 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006b00:	b510      	push	{r4, lr}
90006b02:	460c      	mov	r4, r1
90006b04:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b06:	2301      	movs	r3, #1
90006b08:	2191      	movs	r1, #145	; 0x91
{
90006b0a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b0e:	f10d 0207 	add.w	r2, sp, #7
90006b12:	6804      	ldr	r4, [r0, #0]
90006b14:	6880      	ldr	r0, [r0, #8]
90006b16:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006b18:	b002      	add	sp, #8
90006b1a:	bd10      	pop	{r4, pc}

90006b1c <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006b1c:	b510      	push	{r4, lr}
90006b1e:	460c      	mov	r4, r1
90006b20:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b22:	2301      	movs	r3, #1
90006b24:	2192      	movs	r1, #146	; 0x92
{
90006b26:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b2a:	f10d 0207 	add.w	r2, sp, #7
90006b2e:	6804      	ldr	r4, [r0, #0]
90006b30:	6880      	ldr	r0, [r0, #8]
90006b32:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006b34:	b002      	add	sp, #8
90006b36:	bd10      	pop	{r4, pc}

90006b38 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006b38:	b510      	push	{r4, lr}
90006b3a:	460c      	mov	r4, r1
90006b3c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b3e:	2301      	movs	r3, #1
90006b40:	2193      	movs	r1, #147	; 0x93
{
90006b42:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b46:	f10d 0207 	add.w	r2, sp, #7
90006b4a:	6804      	ldr	r4, [r0, #0]
90006b4c:	6880      	ldr	r0, [r0, #8]
90006b4e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006b50:	b002      	add	sp, #8
90006b52:	bd10      	pop	{r4, pc}

90006b54 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006b54:	b510      	push	{r4, lr}
90006b56:	460c      	mov	r4, r1
90006b58:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b5a:	2301      	movs	r3, #1
90006b5c:	2194      	movs	r1, #148	; 0x94
{
90006b5e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b62:	f10d 0207 	add.w	r2, sp, #7
90006b66:	6804      	ldr	r4, [r0, #0]
90006b68:	6880      	ldr	r0, [r0, #8]
90006b6a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006b6c:	b002      	add	sp, #8
90006b6e:	bd10      	pop	{r4, pc}

90006b70 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006b70:	b510      	push	{r4, lr}
90006b72:	460c      	mov	r4, r1
90006b74:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b76:	2301      	movs	r3, #1
90006b78:	2195      	movs	r1, #149	; 0x95
{
90006b7a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b7e:	f10d 0207 	add.w	r2, sp, #7
90006b82:	6804      	ldr	r4, [r0, #0]
90006b84:	6880      	ldr	r0, [r0, #8]
90006b86:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006b88:	b002      	add	sp, #8
90006b8a:	bd10      	pop	{r4, pc}

90006b8c <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006b8c:	b510      	push	{r4, lr}
90006b8e:	460c      	mov	r4, r1
90006b90:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b92:	2301      	movs	r3, #1
90006b94:	2196      	movs	r1, #150	; 0x96
{
90006b96:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006b9a:	f10d 0207 	add.w	r2, sp, #7
90006b9e:	6804      	ldr	r4, [r0, #0]
90006ba0:	6880      	ldr	r0, [r0, #8]
90006ba2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006ba4:	b002      	add	sp, #8
90006ba6:	bd10      	pop	{r4, pc}

90006ba8 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006ba8:	b510      	push	{r4, lr}
90006baa:	460c      	mov	r4, r1
90006bac:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006bae:	2301      	movs	r3, #1
90006bb0:	21a4      	movs	r1, #164	; 0xa4
{
90006bb2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006bb6:	f10d 0207 	add.w	r2, sp, #7
90006bba:	6804      	ldr	r4, [r0, #0]
90006bbc:	6880      	ldr	r0, [r0, #8]
90006bbe:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006bc0:	b002      	add	sp, #8
90006bc2:	bd10      	pop	{r4, pc}

90006bc4 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006bc4:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006bc6:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006bca:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006bcc:	2301      	movs	r3, #1
90006bce:	46a4      	mov	ip, r4
90006bd0:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006bd2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006bd6:	4760      	bx	ip

90006bd8 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006bd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006bda:	680b      	ldr	r3, [r1, #0]
{
90006bdc:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006bde:	4c2a      	ldr	r4, [pc, #168]	; (90006c88 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006be0:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90006be4:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006be6:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006be8:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006bea:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006bec:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006bee:	2301      	movs	r3, #1
90006bf0:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90006bf2:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006bf4:	f005 fd2a 	bl	9000c64c <HAL_SDRAM_SendCommand>
90006bf8:	2800      	cmp	r0, #0
90006bfa:	d142      	bne.n	90006c82 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006bfc:	f000 ff46 	bl	90007a8c <HAL_GetTick>
90006c00:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006c02:	f000 ff43 	bl	90007a8c <HAL_GetTick>
90006c06:	4286      	cmp	r6, r0
90006c08:	d0fb      	beq.n	90006c02 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006c0a:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006c0c:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006c0e:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c10:	491d      	ldr	r1, [pc, #116]	; (90006c88 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006c12:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006c14:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006c16:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c18:	4638      	mov	r0, r7
90006c1a:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90006c1e:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006c20:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c22:	f005 fd13 	bl	9000c64c <HAL_SDRAM_SendCommand>
90006c26:	bb60      	cbnz	r0, 90006c82 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c28:	4917      	ldr	r1, [pc, #92]	; (90006c88 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006c2a:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006c2e:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c30:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006c32:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006c36:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c38:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90006c3c:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c3e:	f005 fd05 	bl	9000c64c <HAL_SDRAM_SendCommand>
90006c42:	b9f0      	cbnz	r0, 90006c82 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c44:	4910      	ldr	r1, [pc, #64]	; (90006c88 <MT48LC4M32B2_Init+0xb0>)
90006c46:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006c48:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006c4c:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006c4e:	696a      	ldr	r2, [r5, #20]
90006c50:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006c52:	69aa      	ldr	r2, [r5, #24]
90006c54:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006c56:	69ea      	ldr	r2, [r5, #28]
90006c58:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006c5a:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006c5c:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006c5e:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006c60:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c64:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006c68:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006c6a:	f005 fcef 	bl	9000c64c <HAL_SDRAM_SendCommand>
90006c6e:	b940      	cbnz	r0, 90006c82 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006c70:	68a9      	ldr	r1, [r5, #8]
90006c72:	4638      	mov	r0, r7
90006c74:	f005 fd0a 	bl	9000c68c <HAL_SDRAM_ProgramRefreshRate>
90006c78:	3800      	subs	r0, #0
90006c7a:	bf18      	it	ne
90006c7c:	2001      	movne	r0, #1
90006c7e:	4240      	negs	r0, r0
}
90006c80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006c82:	f04f 30ff 	mov.w	r0, #4294967295
}
90006c86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006c88:	24009560 	.word	0x24009560

90006c8c <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006c8c:	4a10      	ldr	r2, [pc, #64]	; (90006cd0 <BSP_I2C4_DeInit+0x44>)
{
90006c8e:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006c90:	6813      	ldr	r3, [r2, #0]
90006c92:	3b01      	subs	r3, #1
90006c94:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006c96:	b10b      	cbz	r3, 90006c9c <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006c98:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006c9a:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006c9c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90006ca0:	480c      	ldr	r0, [pc, #48]	; (90006cd4 <BSP_I2C4_DeInit+0x48>)
90006ca2:	f001 faaf 	bl	90008204 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006ca6:	480b      	ldr	r0, [pc, #44]	; (90006cd4 <BSP_I2C4_DeInit+0x48>)
90006ca8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90006cac:	f001 faaa 	bl	90008204 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006cb0:	4a09      	ldr	r2, [pc, #36]	; (90006cd8 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006cb2:	480a      	ldr	r0, [pc, #40]	; (90006cdc <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006cb4:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90006cb8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006cbc:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006cc0:	f001 fd48 	bl	90008754 <HAL_I2C_DeInit>
90006cc4:	2800      	cmp	r0, #0
90006cc6:	d0e7      	beq.n	90006c98 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006cc8:	f06f 0007 	mvn.w	r0, #7
}
90006ccc:	bd08      	pop	{r3, pc}
90006cce:	bf00      	nop
90006cd0:	24009570 	.word	0x24009570
90006cd4:	58020c00 	.word	0x58020c00
90006cd8:	58024400 	.word	0x58024400
90006cdc:	24009f78 	.word	0x24009f78

90006ce0 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006ce0:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006ce2:	2201      	movs	r2, #1
{
90006ce4:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006ce6:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006cea:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006cee:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006cf2:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006cf6:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006cf8:	f001 fcd4 	bl	900086a4 <HAL_I2C_Init>
90006cfc:	b108      	cbz	r0, 90006d02 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90006cfe:	2001      	movs	r0, #1
}
90006d00:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006d02:	4601      	mov	r1, r0
90006d04:	4620      	mov	r0, r4
90006d06:	f001 ffe3 	bl	90008cd0 <HAL_I2CEx_ConfigAnalogFilter>
90006d0a:	2800      	cmp	r0, #0
90006d0c:	d1f7      	bne.n	90006cfe <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006d0e:	4601      	mov	r1, r0
90006d10:	4620      	mov	r0, r4
90006d12:	f002 f807 	bl	90008d24 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90006d16:	3800      	subs	r0, #0
90006d18:	bf18      	it	ne
90006d1a:	2001      	movne	r0, #1
}
90006d1c:	bd10      	pop	{r4, pc}
90006d1e:	bf00      	nop

90006d20 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006d20:	4b99      	ldr	r3, [pc, #612]	; (90006f88 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90006d22:	489a      	ldr	r0, [pc, #616]	; (90006f8c <BSP_I2C4_Init+0x26c>)
90006d24:	4a9a      	ldr	r2, [pc, #616]	; (90006f90 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90006d26:	6819      	ldr	r1, [r3, #0]
{
90006d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006d2c:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90006d2e:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006d30:	9103      	str	r1, [sp, #12]
90006d32:	b119      	cbz	r1, 90006d3c <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90006d34:	2000      	movs	r0, #0
}
90006d36:	b01f      	add	sp, #124	; 0x7c
90006d38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006d3c:	2201      	movs	r2, #1
90006d3e:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006d40:	f001 ffc0 	bl	90008cc4 <HAL_I2C_GetState>
90006d44:	2800      	cmp	r0, #0
90006d46:	d1f5      	bne.n	90006d34 <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d48:	4c92      	ldr	r4, [pc, #584]	; (90006f94 <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d4a:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90006d4e:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006d50:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d52:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d56:	2600      	movs	r6, #0
90006d58:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006d5a:	f043 0308 	orr.w	r3, r3, #8
90006d5e:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006d62:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006d66:	f003 0308 	and.w	r3, r3, #8
90006d6a:	9315      	str	r3, [sp, #84]	; 0x54
90006d6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d6e:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006d72:	f043 0308 	orr.w	r3, r3, #8
90006d76:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006d7a:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006d7e:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d80:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d84:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d88:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006d8a:	a918      	add	r1, sp, #96	; 0x60
90006d8c:	4882      	ldr	r0, [pc, #520]	; (90006f98 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006d8e:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006d90:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006d94:	f001 f904 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006d98:	2312      	movs	r3, #18
90006d9a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006d9e:	a918      	add	r1, sp, #96	; 0x60
90006da0:	487d      	ldr	r0, [pc, #500]	; (90006f98 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006da2:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006da4:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90006da8:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006dac:	f001 f8f8 	bl	90007fa0 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006db0:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006db4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006db8:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90006dbc:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006dc0:	f003 0380 	and.w	r3, r3, #128	; 0x80
90006dc4:	9317      	str	r3, [sp, #92]	; 0x5c
90006dc6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90006dc8:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006dcc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006dd0:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90006dd4:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006dd8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006ddc:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006de0:	f004 fc94 	bl	9000b70c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90006de4:	2800      	cmp	r0, #0
90006de6:	f000 81f6 	beq.w	900071d6 <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006dea:	4b6c      	ldr	r3, [pc, #432]	; (90006f9c <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90006dec:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006df0:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006df2:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006df6:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 90006fa4 <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006dfa:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006dfc:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90006e00:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006e02:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006e04:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006e08:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90006e0c:	4b64      	ldr	r3, [pc, #400]	; (90006fa0 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006e0e:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006e12:	0079      	lsls	r1, r7, #1
90006e14:	681b      	ldr	r3, [r3, #0]
90006e16:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90006e1a:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90006e1e:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006e20:	4699      	mov	r9, r3
90006e22:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006e24:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90006e28:	46b8      	mov	r8, r7
90006e2a:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90006e2e:	bf94      	ite	ls
90006e30:	2101      	movls	r1, #1
90006e32:	2100      	movhi	r1, #0
90006e34:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90006e38:	f001 0101 	and.w	r1, r1, #1
90006e3c:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90006e40:	bf38      	it	cc
90006e42:	2100      	movcc	r1, #0
90006e44:	429c      	cmp	r4, r3
90006e46:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90006e4a:	9105      	str	r1, [sp, #20]
90006e4c:	bf8c      	ite	hi
90006e4e:	2100      	movhi	r1, #0
90006e50:	2101      	movls	r1, #1
90006e52:	459c      	cmp	ip, r3
90006e54:	bf38      	it	cc
90006e56:	2100      	movcc	r1, #0
90006e58:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90006e5c:	9106      	str	r1, [sp, #24]
90006e5e:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90006e62:	9104      	str	r1, [sp, #16]
90006e64:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90006e68:	9111      	str	r1, [sp, #68]	; 0x44
90006e6a:	bf94      	ite	ls
90006e6c:	2101      	movls	r1, #1
90006e6e:	2100      	movhi	r1, #0
90006e70:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90006e74:	f001 0e01 	and.w	lr, r1, #1
90006e78:	bf38      	it	cc
90006e7a:	f04f 0e00 	movcc.w	lr, #0
90006e7e:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006e80:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006e84:	f8cd e01c 	str.w	lr, [sp, #28]
90006e88:	bf8c      	ite	hi
90006e8a:	f04f 0e00 	movhi.w	lr, #0
90006e8e:	f04f 0e01 	movls.w	lr, #1
90006e92:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006e94:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006e96:	bf38      	it	cc
90006e98:	f04f 0e00 	movcc.w	lr, #0
90006e9c:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90006ea0:	bf98      	it	ls
90006ea2:	2101      	movls	r1, #1
90006ea4:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90006ea8:	f8cd e020 	str.w	lr, [sp, #32]
90006eac:	f001 0101 	and.w	r1, r1, #1
90006eb0:	bf38      	it	cc
90006eb2:	2100      	movcc	r1, #0
90006eb4:	4284      	cmp	r4, r0
90006eb6:	9109      	str	r1, [sp, #36]	; 0x24
90006eb8:	4601      	mov	r1, r0
90006eba:	bf8c      	ite	hi
90006ebc:	2000      	movhi	r0, #0
90006ebe:	2001      	movls	r0, #1
90006ec0:	458c      	cmp	ip, r1
90006ec2:	bf38      	it	cc
90006ec4:	2000      	movcc	r0, #0
90006ec6:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90006eca:	900b      	str	r0, [sp, #44]	; 0x2c
90006ecc:	bf94      	ite	ls
90006ece:	2001      	movls	r0, #1
90006ed0:	2000      	movhi	r0, #0
90006ed2:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
90006ed6:	f000 0001 	and.w	r0, r0, #1
90006eda:	bf38      	it	cc
90006edc:	2000      	movcc	r0, #0
90006ede:	900c      	str	r0, [sp, #48]	; 0x30
90006ee0:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
90006ee4:	4284      	cmp	r4, r0
90006ee6:	bf8c      	ite	hi
90006ee8:	f04f 0e00 	movhi.w	lr, #0
90006eec:	f04f 0e01 	movls.w	lr, #1
90006ef0:	4584      	cmp	ip, r0
90006ef2:	bf38      	it	cc
90006ef4:	f04f 0e00 	movcc.w	lr, #0
90006ef8:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90006efc:	4670      	mov	r0, lr
90006efe:	bf94      	ite	ls
90006f00:	2001      	movls	r0, #1
90006f02:	2000      	movhi	r0, #0
90006f04:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90006f08:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90006f0c:	f04f 0e00 	mov.w	lr, #0
90006f10:	f000 0001 	and.w	r0, r0, #1
90006f14:	bf38      	it	cc
90006f16:	2000      	movcc	r0, #0
90006f18:	900e      	str	r0, [sp, #56]	; 0x38
90006f1a:	9804      	ldr	r0, [sp, #16]
90006f1c:	4284      	cmp	r4, r0
90006f1e:	4602      	mov	r2, r0
90006f20:	bf8c      	ite	hi
90006f22:	2200      	movhi	r2, #0
90006f24:	2201      	movls	r2, #1
90006f26:	4584      	cmp	ip, r0
90006f28:	bf38      	it	cc
90006f2a:	2200      	movcc	r2, #0
90006f2c:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90006f30:	920f      	str	r2, [sp, #60]	; 0x3c
90006f32:	bf94      	ite	ls
90006f34:	2201      	movls	r2, #1
90006f36:	2200      	movhi	r2, #0
90006f38:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
90006f3c:	f002 0201 	and.w	r2, r2, #1
90006f40:	bf38      	it	cc
90006f42:	2200      	movcc	r2, #0
90006f44:	9210      	str	r2, [sp, #64]	; 0x40
90006f46:	9a11      	ldr	r2, [sp, #68]	; 0x44
90006f48:	4294      	cmp	r4, r2
90006f4a:	4613      	mov	r3, r2
90006f4c:	bf8c      	ite	hi
90006f4e:	2300      	movhi	r3, #0
90006f50:	2301      	movls	r3, #1
90006f52:	4594      	cmp	ip, r2
90006f54:	bf38      	it	cc
90006f56:	2300      	movcc	r3, #0
90006f58:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
90006f5c:	9311      	str	r3, [sp, #68]	; 0x44
90006f5e:	bf94      	ite	ls
90006f60:	2301      	movls	r3, #1
90006f62:	2300      	movhi	r3, #0
90006f64:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
90006f68:	f003 0301 	and.w	r3, r3, #1
90006f6c:	bf38      	it	cc
90006f6e:	2300      	movcc	r3, #0
90006f70:	9312      	str	r3, [sp, #72]	; 0x48
90006f72:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
90006f76:	429c      	cmp	r4, r3
90006f78:	bf8c      	ite	hi
90006f7a:	2200      	movhi	r2, #0
90006f7c:	2201      	movls	r2, #1
90006f7e:	459c      	cmp	ip, r3
90006f80:	bf38      	it	cc
90006f82:	2200      	movcc	r2, #0
90006f84:	9204      	str	r2, [sp, #16]
90006f86:	e014      	b.n	90006fb2 <BSP_I2C4_Init+0x292>
90006f88:	24009570 	.word	0x24009570
90006f8c:	24009f78 	.word	0x24009f78
90006f90:	58001c00 	.word	0x58001c00
90006f94:	58024400 	.word	0x58024400
90006f98:	58020c00 	.word	0x58020c00
90006f9c:	3b9aca00 	.word	0x3b9aca00
90006fa0:	24009f74 	.word	0x24009f74
90006fa4:	24009574 	.word	0x24009574
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006fa8:	f1be 0f10 	cmp.w	lr, #16
90006fac:	44b8      	add	r8, r7
90006fae:	f000 826c 	beq.w	9000748a <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
90006fb2:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
90006fb6:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006fb8:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006fbc:	d3f4      	bcc.n	90006fa8 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90006fbe:	ebbb 0205 	subs.w	r2, fp, r5
90006fc2:	bf18      	it	ne
90006fc4:	2201      	movne	r2, #1
90006fc6:	2c00      	cmp	r4, #0
90006fc8:	bf18      	it	ne
90006fca:	2200      	movne	r2, #0
90006fcc:	2a00      	cmp	r2, #0
90006fce:	f040 824a 	bne.w	90007466 <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006fd2:	45bc      	cmp	ip, r7
90006fd4:	bf34      	ite	cc
90006fd6:	2200      	movcc	r2, #0
90006fd8:	2201      	movcs	r2, #1
90006fda:	42bc      	cmp	r4, r7
90006fdc:	bf88      	it	hi
90006fde:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90006fe0:	45ab      	cmp	fp, r5
90006fe2:	bf0c      	ite	eq
90006fe4:	2200      	moveq	r2, #0
90006fe6:	f002 0201 	andne.w	r2, r2, #1
90006fea:	2a00      	cmp	r2, #0
90006fec:	f000 80fd 	beq.w	900071ea <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ff0:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006ff4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006ff8:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006ffa:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006ffe:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007002:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007006:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007008:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000700a:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000700c:	f200 81a5 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007010:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007012:	9906      	ldr	r1, [sp, #24]
90007014:	45ab      	cmp	fp, r5
90007016:	bf0c      	ite	eq
90007018:	2100      	moveq	r1, #0
9000701a:	f001 0101 	andne.w	r1, r1, #1
9000701e:	2900      	cmp	r1, #0
90007020:	f000 80ff 	beq.w	90007222 <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007024:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007028:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000702c:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000702e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007032:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007036:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000703a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000703c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000703e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007040:	f200 818b 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007044:	460a      	mov	r2, r1
90007046:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007048:	9908      	ldr	r1, [sp, #32]
9000704a:	45ab      	cmp	fp, r5
9000704c:	bf0c      	ite	eq
9000704e:	2100      	moveq	r1, #0
90007050:	f001 0101 	andne.w	r1, r1, #1
90007054:	2900      	cmp	r1, #0
90007056:	f000 80ff 	beq.w	90007258 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000705a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000705e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007062:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007064:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007068:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000706c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007070:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007072:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007074:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007076:	f200 8170 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
9000707a:	460a      	mov	r2, r1
9000707c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000707e:	990b      	ldr	r1, [sp, #44]	; 0x2c
90007080:	45ab      	cmp	fp, r5
90007082:	bf0c      	ite	eq
90007084:	2100      	moveq	r1, #0
90007086:	f001 0101 	andne.w	r1, r1, #1
9000708a:	2900      	cmp	r1, #0
9000708c:	f000 80fe 	beq.w	9000728c <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007090:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007094:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007098:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000709a:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000709e:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070a2:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070a6:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070a8:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900070aa:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070ac:	f200 8155 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
900070b0:	460a      	mov	r2, r1
900070b2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900070b4:	990d      	ldr	r1, [sp, #52]	; 0x34
900070b6:	45ab      	cmp	fp, r5
900070b8:	bf0c      	ite	eq
900070ba:	2100      	moveq	r1, #0
900070bc:	f001 0101 	andne.w	r1, r1, #1
900070c0:	2900      	cmp	r1, #0
900070c2:	f000 80fd 	beq.w	900072c0 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070c6:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900070ca:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070ce:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070d0:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070d4:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070d8:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900070dc:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070de:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900070e0:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900070e2:	f200 813a 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
900070e6:	460a      	mov	r2, r1
900070e8:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900070ea:	990f      	ldr	r1, [sp, #60]	; 0x3c
900070ec:	45ab      	cmp	fp, r5
900070ee:	bf0c      	ite	eq
900070f0:	2100      	moveq	r1, #0
900070f2:	f001 0101 	andne.w	r1, r1, #1
900070f6:	2900      	cmp	r1, #0
900070f8:	f000 80fc 	beq.w	900072f4 <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900070fc:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007100:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007104:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007106:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000710a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000710e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007112:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007114:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007116:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007118:	f200 811f 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
9000711c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000711e:	9e11      	ldr	r6, [sp, #68]	; 0x44
90007120:	455d      	cmp	r5, fp
90007122:	bf0c      	ite	eq
90007124:	2600      	moveq	r6, #0
90007126:	f006 0601 	andne.w	r6, r6, #1
9000712a:	2e00      	cmp	r6, #0
9000712c:	f000 80fb 	beq.w	90007326 <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007130:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007134:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007138:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000713a:	4650      	mov	r0, sl
9000713c:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007140:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007144:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007148:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000714a:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000714c:	f200 8105 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007150:	4631      	mov	r1, r6
90007152:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007154:	9e04      	ldr	r6, [sp, #16]
90007156:	455d      	cmp	r5, fp
90007158:	bf0c      	ite	eq
9000715a:	2600      	moveq	r6, #0
9000715c:	f006 0601 	andne.w	r6, r6, #1
90007160:	2e00      	cmp	r6, #0
90007162:	f000 817c 	beq.w	9000745e <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007166:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000716a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000716e:	4650      	mov	r0, sl
90007170:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90007174:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007178:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000717c:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000717e:	f04f 030f 	mov.w	r3, #15
90007182:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007184:	f200 80e9 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007188:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
9000718a:	e70d      	b.n	90006fa8 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000718c:	9a07      	ldr	r2, [sp, #28]
9000718e:	9b08      	ldr	r3, [sp, #32]
90007190:	3214      	adds	r2, #20
90007192:	3301      	adds	r3, #1
90007194:	9207      	str	r2, [sp, #28]
90007196:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90007198:	9308      	str	r3, [sp, #32]
9000719a:	4293      	cmp	r3, r2
9000719c:	f040 80ff 	bne.w	9000739e <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
900071a0:	297f      	cmp	r1, #127	; 0x7f
900071a2:	d818      	bhi.n	900071d6 <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071a4:	eb01 0381 	add.w	r3, r1, r1, lsl #2
900071a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
900071aa:	eb01 0283 	add.w	r2, r1, r3, lsl #2
900071ae:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071b2:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900071b4:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071b6:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071b8:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900071bc:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071c0:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071c4:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900071c6:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071c8:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900071ca:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900071ce:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900071d0:	430b      	orrs	r3, r1
900071d2:	4313      	orrs	r3, r2
900071d4:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900071d6:	9903      	ldr	r1, [sp, #12]
900071d8:	48b5      	ldr	r0, [pc, #724]	; (900074b0 <BSP_I2C4_Init+0x790>)
900071da:	f7ff fd81 	bl	90006ce0 <MX_I2C4_Init>
900071de:	2800      	cmp	r0, #0
900071e0:	f43f ada8 	beq.w	90006d34 <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
900071e4:	f06f 0007 	mvn.w	r0, #7
  return ret;
900071e8:	e5a5      	b.n	90006d36 <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
900071ea:	4632      	mov	r2, r6
900071ec:	9905      	ldr	r1, [sp, #20]
900071ee:	45ab      	cmp	fp, r5
900071f0:	bf0c      	ite	eq
900071f2:	2100      	moveq	r1, #0
900071f4:	f001 0101 	andne.w	r1, r1, #1
900071f8:	2900      	cmp	r1, #0
900071fa:	f43f af0a 	beq.w	90007012 <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071fe:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007202:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007206:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007208:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000720c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007210:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007214:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007216:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007218:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000721a:	f200 809e 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
9000721e:	460a      	mov	r2, r1
90007220:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007222:	9907      	ldr	r1, [sp, #28]
90007224:	45ab      	cmp	fp, r5
90007226:	bf0c      	ite	eq
90007228:	2100      	moveq	r1, #0
9000722a:	f001 0101 	andne.w	r1, r1, #1
9000722e:	2900      	cmp	r1, #0
90007230:	f43f af0a 	beq.w	90007048 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007234:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007238:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000723c:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000723e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007242:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007246:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000724a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000724c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000724e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007250:	f200 8083 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007254:	460a      	mov	r2, r1
90007256:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007258:	9909      	ldr	r1, [sp, #36]	; 0x24
9000725a:	45ab      	cmp	fp, r5
9000725c:	bf0c      	ite	eq
9000725e:	2100      	moveq	r1, #0
90007260:	f001 0101 	andne.w	r1, r1, #1
90007264:	2900      	cmp	r1, #0
90007266:	f43f af0a 	beq.w	9000707e <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000726a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000726e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007272:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007274:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007278:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000727c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007280:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007282:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007284:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007286:	d868      	bhi.n	9000735a <BSP_I2C4_Init+0x63a>
90007288:	460a      	mov	r2, r1
9000728a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000728c:	990c      	ldr	r1, [sp, #48]	; 0x30
9000728e:	45ab      	cmp	fp, r5
90007290:	bf0c      	ite	eq
90007292:	2100      	moveq	r1, #0
90007294:	f001 0101 	andne.w	r1, r1, #1
90007298:	2900      	cmp	r1, #0
9000729a:	f43f af0b 	beq.w	900070b4 <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000729e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072a2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072a6:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072a8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072ac:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072b0:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072b4:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072b6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072b8:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072ba:	d84e      	bhi.n	9000735a <BSP_I2C4_Init+0x63a>
900072bc:	460a      	mov	r2, r1
900072be:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900072c0:	990e      	ldr	r1, [sp, #56]	; 0x38
900072c2:	45ab      	cmp	fp, r5
900072c4:	bf0c      	ite	eq
900072c6:	2100      	moveq	r1, #0
900072c8:	f001 0101 	andne.w	r1, r1, #1
900072cc:	2900      	cmp	r1, #0
900072ce:	f43f af0c 	beq.w	900070ea <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072d2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072d6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072da:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072dc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072e0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072e4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072e8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072ea:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072ec:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072ee:	d834      	bhi.n	9000735a <BSP_I2C4_Init+0x63a>
900072f0:	460a      	mov	r2, r1
900072f2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900072f4:	9910      	ldr	r1, [sp, #64]	; 0x40
900072f6:	45ab      	cmp	fp, r5
900072f8:	bf0c      	ite	eq
900072fa:	2100      	moveq	r1, #0
900072fc:	f001 0101 	andne.w	r1, r1, #1
90007300:	2900      	cmp	r1, #0
90007302:	f000 80ae 	beq.w	90007462 <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007306:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000730a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000730e:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007310:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007314:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007318:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000731c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000731e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007320:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007322:	d81a      	bhi.n	9000735a <BSP_I2C4_Init+0x63a>
90007324:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007326:	9e12      	ldr	r6, [sp, #72]	; 0x48
90007328:	455d      	cmp	r5, fp
9000732a:	bf0c      	ite	eq
9000732c:	2600      	moveq	r6, #0
9000732e:	f006 0601 	andne.w	r6, r6, #1
90007332:	2e00      	cmp	r6, #0
90007334:	f43f af0e 	beq.w	90007154 <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007338:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000733c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007340:	4650      	mov	r0, sl
90007342:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
90007346:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000734a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000734e:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007350:	f04f 030e 	mov.w	r3, #14
90007354:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007356:	f67f af17 	bls.w	90007188 <BSP_I2C4_Init+0x468>
9000735a:	4b56      	ldr	r3, [pc, #344]	; (900074b4 <BSP_I2C4_Init+0x794>)
9000735c:	900b      	str	r0, [sp, #44]	; 0x2c
9000735e:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
90007362:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90007366:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90007368:	f240 4201 	movw	r2, #1025	; 0x401
9000736c:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007370:	f640 1ac4 	movw	sl, #2500	; 0x9c4
90007374:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007376:	f240 4b12 	movw	fp, #1042	; 0x412
9000737a:	920d      	str	r2, [sp, #52]	; 0x34
9000737c:	9a02      	ldr	r2, [sp, #8]
9000737e:	4296      	cmp	r6, r2
90007380:	bf38      	it	cc
90007382:	4616      	movcc	r6, r2
90007384:	4a4c      	ldr	r2, [pc, #304]	; (900074b8 <BSP_I2C4_Init+0x798>)
90007386:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007388:	2200      	movs	r2, #0
9000738a:	9208      	str	r2, [sp, #32]
9000738c:	f04f 32ff 	mov.w	r2, #4294967295
90007390:	4611      	mov	r1, r2
90007392:	f103 0232 	add.w	r2, r3, #50	; 0x32
90007396:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
9000739a:	920c      	str	r2, [sp, #48]	; 0x30
9000739c:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000739e:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900073a0:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
900073a4:	6818      	ldr	r0, [r3, #0]
900073a6:	9b02      	ldr	r3, [sp, #8]
900073a8:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
900073ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900073ae:	1a1b      	subs	r3, r3, r0
900073b0:	ea4f 0943 	mov.w	r9, r3, lsl #1
900073b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900073b6:	eb03 0e00 	add.w	lr, r3, r0
900073ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900073bc:	4403      	add	r3, r0
900073be:	9309      	str	r3, [sp, #36]	; 0x24
900073c0:	e006      	b.n	900073d0 <BSP_I2C4_Init+0x6b0>
900073c2:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
900073c6:	4486      	add	lr, r0
900073c8:	eba9 0900 	sub.w	r9, r9, r0
900073cc:	f43f aede 	beq.w	9000718c <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900073d0:	f240 5214 	movw	r2, #1300	; 0x514
900073d4:	f8cd 8004 	str.w	r8, [sp, #4]
900073d8:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900073dc:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
900073e0:	4596      	cmp	lr, r2
900073e2:	d9ee      	bls.n	900073c2 <BSP_I2C4_Init+0x6a2>
900073e4:	9a02      	ldr	r2, [sp, #8]
900073e6:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
900073ea:	d2ea      	bcs.n	900073c2 <BSP_I2C4_Init+0x6a2>
900073ec:	f640 0c34 	movw	ip, #2100	; 0x834
900073f0:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900073f2:	f8cd 9018 	str.w	r9, [sp, #24]
900073f6:	2200      	movs	r2, #0
900073f8:	ebac 0c03 	sub.w	ip, ip, r3
900073fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900073fe:	4689      	mov	r9, r1
90007400:	4473      	add	r3, lr
90007402:	e9cd e804 	strd	lr, r8, [sp, #16]
90007406:	f8dd 8020 	ldr.w	r8, [sp, #32]
9000740a:	f8dd e01c 	ldr.w	lr, [sp, #28]
9000740e:	e005      	b.n	9000741c <BSP_I2C4_Init+0x6fc>
90007410:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90007414:	4403      	add	r3, r0
90007416:	eba4 0400 	sub.w	r4, r4, r0
9000741a:	d01a      	beq.n	90007452 <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
9000741c:	eb0c 0103 	add.w	r1, ip, r3
90007420:	4617      	mov	r7, r2
90007422:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
90007426:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007428:	42b1      	cmp	r1, r6
9000742a:	d9f1      	bls.n	90007410 <BSP_I2C4_Init+0x6f0>
9000742c:	455d      	cmp	r5, fp
9000742e:	d8ef      	bhi.n	90007410 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90007430:	ea33 0123 	bics.w	r1, r3, r3, asr #32
90007434:	bf28      	it	cs
90007436:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
90007438:	458a      	cmp	sl, r1
9000743a:	d9e9      	bls.n	90007410 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
9000743c:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000743e:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
90007442:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
90007444:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007446:	4403      	add	r3, r0
90007448:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
9000744c:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
90007450:	d1e4      	bne.n	9000741c <BSP_I2C4_Init+0x6fc>
90007452:	4649      	mov	r1, r9
90007454:	f8dd 9018 	ldr.w	r9, [sp, #24]
90007458:	e9dd e804 	ldrd	lr, r8, [sp, #16]
9000745c:	e7b1      	b.n	900073c2 <BSP_I2C4_Init+0x6a2>
9000745e:	460e      	mov	r6, r1
90007460:	e5a2      	b.n	90006fa8 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90007462:	4611      	mov	r1, r2
90007464:	e65b      	b.n	9000711e <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007466:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000746a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000746e:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007470:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007474:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007478:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000747c:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000747e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007480:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007482:	f63f af6a 	bhi.w	9000735a <BSP_I2C4_Init+0x63a>
90007486:	46ab      	mov	fp, r5
90007488:	e6b0      	b.n	900071ec <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
9000748a:	3501      	adds	r5, #1
9000748c:	9b02      	ldr	r3, [sp, #8]
9000748e:	2d10      	cmp	r5, #16
90007490:	441f      	add	r7, r3
90007492:	f47f acc7 	bne.w	90006e24 <BSP_I2C4_Init+0x104>
90007496:	b126      	cbz	r6, 900074a2 <BSP_I2C4_Init+0x782>
90007498:	4b06      	ldr	r3, [pc, #24]	; (900074b4 <BSP_I2C4_Init+0x794>)
9000749a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9000749e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900074a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900074a4:	2b00      	cmp	r3, #0
900074a6:	f43f ae96 	beq.w	900071d6 <BSP_I2C4_Init+0x4b6>
900074aa:	4b03      	ldr	r3, [pc, #12]	; (900074b8 <BSP_I2C4_Init+0x798>)
900074ac:	930b      	str	r3, [sp, #44]	; 0x2c
900074ae:	e75a      	b.n	90007366 <BSP_I2C4_Init+0x646>
900074b0:	24009f78 	.word	0x24009f78
900074b4:	24009f74 	.word	0x24009f74
900074b8:	24009574 	.word	0x24009574

900074bc <BSP_I2C4_WriteReg>:
{
900074bc:	b530      	push	{r4, r5, lr}
900074be:	4614      	mov	r4, r2
900074c0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900074c2:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
900074c6:	460a      	mov	r2, r1
900074c8:	9301      	str	r3, [sp, #4]
900074ca:	4601      	mov	r1, r0
900074cc:	2301      	movs	r3, #1
900074ce:	4809      	ldr	r0, [pc, #36]	; (900074f4 <BSP_I2C4_WriteReg+0x38>)
900074d0:	9502      	str	r5, [sp, #8]
900074d2:	9400      	str	r4, [sp, #0]
900074d4:	f001 f958 	bl	90008788 <HAL_I2C_Mem_Write>
900074d8:	b908      	cbnz	r0, 900074de <BSP_I2C4_WriteReg+0x22>
}
900074da:	b005      	add	sp, #20
900074dc:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900074de:	4805      	ldr	r0, [pc, #20]	; (900074f4 <BSP_I2C4_WriteReg+0x38>)
900074e0:	f001 fbf4 	bl	90008ccc <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
900074e4:	2804      	cmp	r0, #4
900074e6:	bf0c      	ite	eq
900074e8:	f06f 0065 	mvneq.w	r0, #101	; 0x65
900074ec:	f06f 0003 	mvnne.w	r0, #3
900074f0:	e7f3      	b.n	900074da <BSP_I2C4_WriteReg+0x1e>
900074f2:	bf00      	nop
900074f4:	24009f78 	.word	0x24009f78

900074f8 <BSP_I2C4_ReadReg>:
{
900074f8:	b530      	push	{r4, r5, lr}
900074fa:	4614      	mov	r4, r2
900074fc:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900074fe:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
90007502:	460a      	mov	r2, r1
90007504:	9301      	str	r3, [sp, #4]
90007506:	4601      	mov	r1, r0
90007508:	2301      	movs	r3, #1
9000750a:	4809      	ldr	r0, [pc, #36]	; (90007530 <BSP_I2C4_ReadReg+0x38>)
9000750c:	9502      	str	r5, [sp, #8]
9000750e:	9400      	str	r4, [sp, #0]
90007510:	f001 fa6e 	bl	900089f0 <HAL_I2C_Mem_Read>
90007514:	b908      	cbnz	r0, 9000751a <BSP_I2C4_ReadReg+0x22>
}
90007516:	b005      	add	sp, #20
90007518:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000751a:	4805      	ldr	r0, [pc, #20]	; (90007530 <BSP_I2C4_ReadReg+0x38>)
9000751c:	f001 fbd6 	bl	90008ccc <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90007520:	2804      	cmp	r0, #4
90007522:	bf0c      	ite	eq
90007524:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90007528:	f06f 0003 	mvnne.w	r0, #3
9000752c:	e7f3      	b.n	90007516 <BSP_I2C4_ReadReg+0x1e>
9000752e:	bf00      	nop
90007530:	24009f78 	.word	0x24009f78

90007534 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90007534:	f000 baaa 	b.w	90007a8c <HAL_GetTick>

90007538 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
90007538:	b970      	cbnz	r0, 90007558 <BSP_SDRAM_DeInit+0x20>
{
9000753a:	b510      	push	{r4, lr}
9000753c:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
9000753e:	4808      	ldr	r0, [pc, #32]	; (90007560 <BSP_SDRAM_DeInit+0x28>)
90007540:	f005 f876 	bl	9000c630 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90007544:	207a      	movs	r0, #122	; 0x7a
90007546:	f000 fb0b 	bl	90007b60 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000754a:	4b06      	ldr	r3, [pc, #24]	; (90007564 <BSP_SDRAM_DeInit+0x2c>)
9000754c:	4806      	ldr	r0, [pc, #24]	; (90007568 <BSP_SDRAM_DeInit+0x30>)
9000754e:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90007550:	f003 f98e 	bl	9000a870 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90007554:	4620      	mov	r0, r4
}
90007556:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007558:	f06f 0001 	mvn.w	r0, #1
}
9000755c:	4770      	bx	lr
9000755e:	bf00      	nop
90007560:	24009fcc 	.word	0x24009fcc
90007564:	52000040 	.word	0x52000040
90007568:	2400a000 	.word	0x2400a000

9000756c <MX_SDRAM_BANK2_Init>:
{
9000756c:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
9000756e:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90007570:	2200      	movs	r2, #0
{
90007572:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
90007574:	4c13      	ldr	r4, [pc, #76]	; (900075c4 <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
90007576:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007578:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
9000757a:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
9000757c:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
9000757e:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
90007580:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
90007582:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007584:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
90007588:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
9000758a:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000758c:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
9000758e:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90007590:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007592:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90007596:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007598:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
9000759c:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000759e:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900075a0:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
900075a4:	2204      	movs	r2, #4
900075a6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
900075aa:	2202      	movs	r2, #2
900075ac:	2302      	movs	r3, #2
900075ae:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900075b2:	4b05      	ldr	r3, [pc, #20]	; (900075c8 <MX_SDRAM_BANK2_Init+0x5c>)
900075b4:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900075b6:	f005 f811 	bl	9000c5dc <HAL_SDRAM_Init>
}
900075ba:	3800      	subs	r0, #0
900075bc:	bf18      	it	ne
900075be:	2001      	movne	r0, #1
900075c0:	b009      	add	sp, #36	; 0x24
900075c2:	bd30      	pop	{r4, r5, pc}
900075c4:	24009fcc 	.word	0x24009fcc
900075c8:	52004140 	.word	0x52004140

900075cc <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900075cc:	2800      	cmp	r0, #0
900075ce:	f040 80d2 	bne.w	90007776 <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
900075d2:	4b6c      	ldr	r3, [pc, #432]	; (90007784 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900075d4:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
900075d6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900075da:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
900075de:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
900075e0:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
900075e4:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
900075e6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
900075ea:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900075ec:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900075f0:	4c65      	ldr	r4, [pc, #404]	; (90007788 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
900075f2:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900075f6:	4e65      	ldr	r6, [pc, #404]	; (9000778c <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
900075f8:	9201      	str	r2, [sp, #4]
900075fa:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
900075fc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007600:	f042 0201 	orr.w	r2, r2, #1
90007604:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90007608:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
9000760c:	f002 0201 	and.w	r2, r2, #1
90007610:	9202      	str	r2, [sp, #8]
90007612:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90007614:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007618:	f042 0208 	orr.w	r2, r2, #8
9000761c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007620:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007624:	f002 0208 	and.w	r2, r2, #8
90007628:	9203      	str	r2, [sp, #12]
9000762a:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
9000762c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007630:	f042 0210 	orr.w	r2, r2, #16
90007634:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007638:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000763c:	f002 0210 	and.w	r2, r2, #16
90007640:	9204      	str	r2, [sp, #16]
90007642:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90007644:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007648:	f042 0220 	orr.w	r2, r2, #32
9000764c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007650:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007654:	f002 0220 	and.w	r2, r2, #32
90007658:	9205      	str	r2, [sp, #20]
9000765a:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
9000765c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007660:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90007664:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007668:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000766c:	f002 0240 	and.w	r2, r2, #64	; 0x40
90007670:	9206      	str	r2, [sp, #24]
90007672:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007674:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007678:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000767c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007680:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90007684:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007686:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007688:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
9000768c:	e9cd 0108 	strd	r0, r1, [sp, #32]
90007690:	2001      	movs	r0, #1
90007692:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
90007694:	9307      	str	r3, [sp, #28]
90007696:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007698:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
9000769c:	a908      	add	r1, sp, #32
9000769e:	483c      	ldr	r0, [pc, #240]	; (90007790 <BSP_SDRAM_Init+0x1c4>)
900076a0:	f000 fc7e 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900076a4:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900076a8:	a908      	add	r1, sp, #32
900076aa:	483a      	ldr	r0, [pc, #232]	; (90007794 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
900076ac:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
900076ae:	f000 fc77 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900076b2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900076b6:	a908      	add	r1, sp, #32
900076b8:	4837      	ldr	r0, [pc, #220]	; (90007798 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
900076ba:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
900076bc:	f000 fc70 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900076c0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900076c4:	a908      	add	r1, sp, #32
900076c6:	4835      	ldr	r0, [pc, #212]	; (9000779c <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
900076c8:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
900076ca:	f000 fc69 	bl	90007fa0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900076ce:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900076d0:	a908      	add	r1, sp, #32
900076d2:	4833      	ldr	r0, [pc, #204]	; (900077a0 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
900076d4:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
900076d6:	f000 fc63 	bl	90007fa0 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900076da:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900076dc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900076e0:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
900076e4:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900076e6:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
900076e8:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900076ea:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900076ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
900076f0:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
900076f2:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900076f4:	4a2b      	ldr	r2, [pc, #172]	; (900077a4 <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900076f6:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900076f8:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900076fa:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
900076fc:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007700:	f640 0308 	movw	r3, #2056	; 0x808
90007704:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90007706:	2320      	movs	r3, #32
90007708:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000770a:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
9000770e:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007712:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
90007714:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007718:	f003 f8aa 	bl	9000a870 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
9000771c:	4620      	mov	r0, r4
9000771e:	f003 f82d 	bl	9000a77c <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90007722:	462a      	mov	r2, r5
90007724:	210f      	movs	r1, #15
90007726:	207a      	movs	r0, #122	; 0x7a
90007728:	f000 f9ce 	bl	90007ac8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
9000772c:	207a      	movs	r0, #122	; 0x7a
9000772e:	f000 fa09 	bl	90007b44 <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90007732:	2210      	movs	r2, #16
90007734:	2104      	movs	r1, #4
90007736:	4630      	mov	r0, r6
90007738:	f7ff ff18 	bl	9000756c <MX_SDRAM_BANK2_Init>
9000773c:	b9f0      	cbnz	r0, 9000777c <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
9000773e:	491a      	ldr	r1, [pc, #104]	; (900077a8 <BSP_SDRAM_Init+0x1dc>)
90007740:	2208      	movs	r2, #8
90007742:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007744:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90007746:	e9c1 2300 	strd	r2, r3, [r1]
9000774a:	f240 6203 	movw	r2, #1539	; 0x603
9000774e:	2300      	movs	r3, #0
90007750:	e9c1 2302 	strd	r2, r3, [r1, #8]
90007754:	2200      	movs	r2, #0
90007756:	2330      	movs	r3, #48	; 0x30
90007758:	e9c1 2304 	strd	r2, r3, [r1, #16]
9000775c:	2200      	movs	r2, #0
9000775e:	f44f 7300 	mov.w	r3, #512	; 0x200
90007762:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90007766:	f7ff fa37 	bl	90006bd8 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
9000776a:	2800      	cmp	r0, #0
9000776c:	bf18      	it	ne
9000776e:	f06f 0004 	mvnne.w	r0, #4
}
90007772:	b00e      	add	sp, #56	; 0x38
90007774:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90007776:	f06f 0001 	mvn.w	r0, #1
}
9000777a:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
9000777c:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90007780:	e7f7      	b.n	90007772 <BSP_SDRAM_Init+0x1a6>
90007782:	bf00      	nop
90007784:	58024400 	.word	0x58024400
90007788:	2400a06c 	.word	0x2400a06c
9000778c:	24009fcc 	.word	0x24009fcc
90007790:	58020c00 	.word	0x58020c00
90007794:	58021000 	.word	0x58021000
90007798:	58021400 	.word	0x58021400
9000779c:	58021800 	.word	0x58021800
900077a0:	58021c00 	.word	0x58021c00
900077a4:	52000040 	.word	0x52000040
900077a8:	2400a0d8 	.word	0x2400a0d8

900077ac <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
900077ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900077b0:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
900077b2:	2800      	cmp	r0, #0
900077b4:	d16b      	bne.n	9000788e <BSP_TS_Init+0xe2>
900077b6:	680b      	ldr	r3, [r1, #0]
900077b8:	460c      	mov	r4, r1
900077ba:	1e5a      	subs	r2, r3, #1
900077bc:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
900077c0:	d265      	bcs.n	9000788e <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900077c2:	684a      	ldr	r2, [r1, #4]
900077c4:	1e51      	subs	r1, r2, #1
900077c6:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
900077ca:	d260      	bcs.n	9000788e <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
900077cc:	4293      	cmp	r3, r2
900077ce:	bf28      	it	cs
900077d0:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
900077d2:	68e2      	ldr	r2, [r4, #12]
900077d4:	429a      	cmp	r2, r3
900077d6:	d85a      	bhi.n	9000788e <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
900077d8:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
900077da:	4b31      	ldr	r3, [pc, #196]	; (900078a0 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900077dc:	4d31      	ldr	r5, [pc, #196]	; (900078a4 <BSP_TS_Init+0xf8>)
900077de:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
900077e0:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
900077e4:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900077e6:	4a30      	ldr	r2, [pc, #192]	; (900078a8 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900077e8:	4b30      	ldr	r3, [pc, #192]	; (900078ac <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
900077ea:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
900077ec:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900077ee:	4a30      	ldr	r2, [pc, #192]	; (900078b0 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
900077f0:	4b30      	ldr	r3, [pc, #192]	; (900078b4 <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
900077f2:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900077f4:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
900077f6:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
900077f8:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
900077fa:	f7ff f93f 	bl	90006a7c <FT5336_RegisterBusIO>
900077fe:	2800      	cmp	r0, #0
90007800:	d14b      	bne.n	9000789a <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90007802:	a901      	add	r1, sp, #4
90007804:	4628      	mov	r0, r5
90007806:	f7ff f82f 	bl	90006868 <FT5336_ReadID>
9000780a:	2800      	cmp	r0, #0
9000780c:	d145      	bne.n	9000789a <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
9000780e:	9b01      	ldr	r3, [sp, #4]
90007810:	2b51      	cmp	r3, #81	; 0x51
90007812:	d142      	bne.n	9000789a <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007814:	4b28      	ldr	r3, [pc, #160]	; (900078b8 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007816:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90007818:	4f28      	ldr	r7, [pc, #160]	; (900078bc <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000781a:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 900078c4 <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
9000781e:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007820:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90007824:	681b      	ldr	r3, [r3, #0]
90007826:	4798      	blx	r3
90007828:	4606      	mov	r6, r0
9000782a:	2800      	cmp	r0, #0
9000782c:	d135      	bne.n	9000789a <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000782e:	4d24      	ldr	r5, [pc, #144]	; (900078c0 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007830:	a902      	add	r1, sp, #8
90007832:	6838      	ldr	r0, [r7, #0]
90007834:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007838:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000783c:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
9000783e:	e9c5 7200 	strd	r7, r2, [r5]
90007842:	68a2      	ldr	r2, [r4, #8]
90007844:	60aa      	str	r2, [r5, #8]
90007846:	68e2      	ldr	r2, [r4, #12]
90007848:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
9000784a:	4798      	blx	r3
9000784c:	2800      	cmp	r0, #0
9000784e:	db18      	blt.n	90007882 <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90007850:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90007854:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007858:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000785a:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000785e:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007860:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007862:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007864:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007866:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
9000786a:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
9000786e:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007870:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007872:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007874:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90007876:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90007878:	63eb      	str	r3, [r5, #60]	; 0x3c
}
9000787a:	4630      	mov	r0, r6
9000787c:	b008      	add	sp, #32
9000787e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90007882:	f06f 0604 	mvn.w	r6, #4
}
90007886:	4630      	mov	r0, r6
90007888:	b008      	add	sp, #32
9000788a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
9000788e:	f06f 0601 	mvn.w	r6, #1
}
90007892:	4630      	mov	r0, r6
90007894:	b008      	add	sp, #32
90007896:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
9000789a:	f04f 36ff 	mov.w	r6, #4294967295
9000789e:	e7ec      	b.n	9000787a <BSP_TS_Init+0xce>
900078a0:	90006d21 	.word	0x90006d21
900078a4:	2400a0f8 	.word	0x2400a0f8
900078a8:	90006c8d 	.word	0x90006c8d
900078ac:	900074f9 	.word	0x900074f9
900078b0:	900074bd 	.word	0x900074bd
900078b4:	90007535 	.word	0x90007535
900078b8:	24000030 	.word	0x24000030
900078bc:	2400a120 	.word	0x2400a120
900078c0:	2400a124 	.word	0x2400a124
900078c4:	2400a164 	.word	0x2400a164

900078c8 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
900078c8:	2800      	cmp	r0, #0
900078ca:	d157      	bne.n	9000797c <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900078cc:	4b2d      	ldr	r3, [pc, #180]	; (90007984 <BSP_TS_GetState+0xbc>)
900078ce:	4a2e      	ldr	r2, [pc, #184]	; (90007988 <BSP_TS_GetState+0xc0>)
900078d0:	681b      	ldr	r3, [r3, #0]
900078d2:	6810      	ldr	r0, [r2, #0]
900078d4:	691b      	ldr	r3, [r3, #16]
{
900078d6:	b5f0      	push	{r4, r5, r6, r7, lr}
900078d8:	b085      	sub	sp, #20
900078da:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
900078dc:	a901      	add	r1, sp, #4
900078de:	4798      	blx	r3
900078e0:	2800      	cmp	r0, #0
900078e2:	db41      	blt.n	90007968 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
900078e4:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900078e6:	4b29      	ldr	r3, [pc, #164]	; (9000798c <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
900078e8:	b93d      	cbnz	r5, 900078fa <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
900078ea:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
900078ec:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900078ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
900078f0:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
900078f2:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
900078f6:	b005      	add	sp, #20
900078f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
900078fa:	6898      	ldr	r0, [r3, #8]
900078fc:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
900078fe:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007902:	d435      	bmi.n	90007970 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007904:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
90007906:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007908:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
9000790a:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
9000790e:	bf1c      	itt	ne
90007910:	f106 32ff 	addne.w	r2, r6, #4294967295
90007914:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007918:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
9000791c:	6958      	ldr	r0, [r3, #20]
9000791e:	bf18      	it	ne
90007920:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007922:	681f      	ldr	r7, [r3, #0]
90007924:	fb07 f202 	mul.w	r2, r7, r2
90007928:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000792c:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
9000792e:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007930:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007934:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007936:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007938:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
9000793a:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
9000793c:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007940:	bf8c      	ite	hi
90007942:	1b90      	subhi	r0, r2, r6
90007944:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007946:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007948:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
9000794a:	bf8c      	ite	hi
9000794c:	1b4f      	subhi	r7, r1, r5
9000794e:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007950:	42b8      	cmp	r0, r7
90007952:	bf38      	it	cc
90007954:	4638      	movcc	r0, r7
90007956:	68df      	ldr	r7, [r3, #12]
90007958:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
9000795a:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
9000795e:	d20a      	bcs.n	90007976 <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007960:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007962:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90007964:	b005      	add	sp, #20
90007966:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007968:	f06f 0004 	mvn.w	r0, #4
}
9000796c:	b005      	add	sp, #20
9000796e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90007970:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007972:	463a      	mov	r2, r7
90007974:	e7c8      	b.n	90007908 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007976:	e9c4 6501 	strd	r6, r5, [r4, #4]
9000797a:	e7bc      	b.n	900078f6 <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
9000797c:	f06f 0001 	mvn.w	r0, #1
}
90007980:	4770      	bx	lr
90007982:	bf00      	nop
90007984:	2400a164 	.word	0x2400a164
90007988:	2400a120 	.word	0x2400a120
9000798c:	2400a124 	.word	0x2400a124

90007990 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007990:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007992:	4c19      	ldr	r4, [pc, #100]	; (900079f8 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007994:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007996:	4b19      	ldr	r3, [pc, #100]	; (900079fc <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007998:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
9000799c:	4818      	ldr	r0, [pc, #96]	; (90007a00 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
9000799e:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
900079a2:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
900079a6:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079a8:	4c16      	ldr	r4, [pc, #88]	; (90007a04 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
900079aa:	f041 0101 	orr.w	r1, r1, #1
900079ae:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
900079b0:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
900079b2:	6819      	ldr	r1, [r3, #0]
900079b4:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079b6:	4914      	ldr	r1, [pc, #80]	; (90007a08 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
900079b8:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
900079ba:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
900079bc:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
900079be:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
900079c0:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
900079c2:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
900079c4:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
900079c6:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
900079c8:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
900079ca:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
900079cc:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
900079ce:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
900079d0:	6818      	ldr	r0, [r3, #0]
900079d2:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
900079d6:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
900079d8:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
900079da:	6823      	ldr	r3, [r4, #0]
900079dc:	4019      	ands	r1, r3
900079de:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
900079e2:	d203      	bcs.n	900079ec <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
900079e4:	4b09      	ldr	r3, [pc, #36]	; (90007a0c <SystemInit+0x7c>)
900079e6:	2201      	movs	r2, #1
900079e8:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900079ec:	4a08      	ldr	r2, [pc, #32]	; (90007a10 <SystemInit+0x80>)
900079ee:	4b02      	ldr	r3, [pc, #8]	; (900079f8 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
900079f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
900079f4:	609a      	str	r2, [r3, #8]
}
900079f6:	4770      	bx	lr
900079f8:	e000ed00 	.word	0xe000ed00
900079fc:	58024400 	.word	0x58024400
90007a00:	eaf6ed7f 	.word	0xeaf6ed7f
90007a04:	5c001000 	.word	0x5c001000
90007a08:	ffff0000 	.word	0xffff0000
90007a0c:	51008000 	.word	0x51008000
90007a10:	90000000 	.word	0x90000000

90007a14 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007a14:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007a16:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a18:	4c12      	ldr	r4, [pc, #72]	; (90007a64 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007a1a:	f000 f843 	bl	90007aa4 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a1e:	f003 fc65 	bl	9000b2ec <HAL_RCC_GetSysClockFreq>
90007a22:	4b11      	ldr	r3, [pc, #68]	; (90007a68 <HAL_Init+0x54>)
90007a24:	4911      	ldr	r1, [pc, #68]	; (90007a6c <HAL_Init+0x58>)
90007a26:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a28:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a2a:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a2e:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a32:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a34:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a36:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007a3a:	490d      	ldr	r1, [pc, #52]	; (90007a70 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a3c:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007a40:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a42:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007a46:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007a48:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007a4a:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007a4c:	f7fb fdd0 	bl	900035f0 <HAL_InitTick>
90007a50:	b110      	cbz	r0, 90007a58 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007a52:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007a54:	4620      	mov	r0, r4
90007a56:	bd10      	pop	{r4, pc}
90007a58:	4604      	mov	r4, r0
  HAL_MspInit();
90007a5a:	f7fb fb87 	bl	9000316c <HAL_MspInit>
}
90007a5e:	4620      	mov	r0, r4
90007a60:	bd10      	pop	{r4, pc}
90007a62:	bf00      	nop
90007a64:	24000064 	.word	0x24000064
90007a68:	58024400 	.word	0x58024400
90007a6c:	90029c9c 	.word	0x90029c9c
90007a70:	24000060 	.word	0x24000060

90007a74 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007a74:	4a03      	ldr	r2, [pc, #12]	; (90007a84 <HAL_IncTick+0x10>)
90007a76:	4b04      	ldr	r3, [pc, #16]	; (90007a88 <HAL_IncTick+0x14>)
90007a78:	6811      	ldr	r1, [r2, #0]
90007a7a:	781b      	ldrb	r3, [r3, #0]
90007a7c:	440b      	add	r3, r1
90007a7e:	6013      	str	r3, [r2, #0]
}
90007a80:	4770      	bx	lr
90007a82:	bf00      	nop
90007a84:	2400a168 	.word	0x2400a168
90007a88:	24000068 	.word	0x24000068

90007a8c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007a8c:	4b01      	ldr	r3, [pc, #4]	; (90007a94 <HAL_GetTick+0x8>)
90007a8e:	6818      	ldr	r0, [r3, #0]
}
90007a90:	4770      	bx	lr
90007a92:	bf00      	nop
90007a94:	2400a168 	.word	0x2400a168

90007a98 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007a98:	4b01      	ldr	r3, [pc, #4]	; (90007aa0 <HAL_GetREVID+0x8>)
90007a9a:	6818      	ldr	r0, [r3, #0]
}
90007a9c:	0c00      	lsrs	r0, r0, #16
90007a9e:	4770      	bx	lr
90007aa0:	5c001000 	.word	0x5c001000

90007aa4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007aa4:	4906      	ldr	r1, [pc, #24]	; (90007ac0 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007aa6:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007aaa:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007aac:	4b05      	ldr	r3, [pc, #20]	; (90007ac4 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007aae:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007ab0:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007ab4:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007ab8:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007aba:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007abc:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007abe:	4770      	bx	lr
90007ac0:	e000ed00 	.word	0xe000ed00
90007ac4:	05fa0000 	.word	0x05fa0000

90007ac8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007ac8:	4b1b      	ldr	r3, [pc, #108]	; (90007b38 <HAL_NVIC_SetPriority+0x70>)
90007aca:	68db      	ldr	r3, [r3, #12]
90007acc:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007ad0:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007ad2:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007ad6:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007ada:	f1be 0f04 	cmp.w	lr, #4
90007ade:	bf28      	it	cs
90007ae0:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007ae4:	f1bc 0f06 	cmp.w	ip, #6
90007ae8:	d91a      	bls.n	90007b20 <HAL_NVIC_SetPriority+0x58>
90007aea:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007aec:	f04f 3cff 	mov.w	ip, #4294967295
90007af0:	fa0c fc03 	lsl.w	ip, ip, r3
90007af4:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007af8:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007afc:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007afe:	fa0c fc0e 	lsl.w	ip, ip, lr
90007b02:	ea21 010c 	bic.w	r1, r1, ip
90007b06:	fa01 f103 	lsl.w	r1, r1, r3
90007b0a:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90007b0e:	db0a      	blt.n	90007b26 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007b10:	0109      	lsls	r1, r1, #4
90007b12:	4b0a      	ldr	r3, [pc, #40]	; (90007b3c <HAL_NVIC_SetPriority+0x74>)
90007b14:	b2c9      	uxtb	r1, r1
90007b16:	4403      	add	r3, r0
90007b18:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007b1c:	f85d fb04 	ldr.w	pc, [sp], #4
90007b20:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007b22:	4613      	mov	r3, r2
90007b24:	e7e8      	b.n	90007af8 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007b26:	f000 000f 	and.w	r0, r0, #15
90007b2a:	0109      	lsls	r1, r1, #4
90007b2c:	4b04      	ldr	r3, [pc, #16]	; (90007b40 <HAL_NVIC_SetPriority+0x78>)
90007b2e:	b2c9      	uxtb	r1, r1
90007b30:	4403      	add	r3, r0
90007b32:	7619      	strb	r1, [r3, #24]
90007b34:	f85d fb04 	ldr.w	pc, [sp], #4
90007b38:	e000ed00 	.word	0xe000ed00
90007b3c:	e000e100 	.word	0xe000e100
90007b40:	e000ecfc 	.word	0xe000ecfc

90007b44 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007b44:	2800      	cmp	r0, #0
90007b46:	db07      	blt.n	90007b58 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007b48:	2301      	movs	r3, #1
90007b4a:	f000 011f 	and.w	r1, r0, #31
90007b4e:	4a03      	ldr	r2, [pc, #12]	; (90007b5c <HAL_NVIC_EnableIRQ+0x18>)
90007b50:	0940      	lsrs	r0, r0, #5
90007b52:	408b      	lsls	r3, r1
90007b54:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007b58:	4770      	bx	lr
90007b5a:	bf00      	nop
90007b5c:	e000e100 	.word	0xe000e100

90007b60 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007b60:	2800      	cmp	r0, #0
90007b62:	db0c      	blt.n	90007b7e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007b64:	0943      	lsrs	r3, r0, #5
90007b66:	2201      	movs	r2, #1
90007b68:	f000 001f 	and.w	r0, r0, #31
90007b6c:	4904      	ldr	r1, [pc, #16]	; (90007b80 <HAL_NVIC_DisableIRQ+0x20>)
90007b6e:	3320      	adds	r3, #32
90007b70:	4082      	lsls	r2, r0
90007b72:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90007b76:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007b7a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007b7e:	4770      	bx	lr
90007b80:	e000e100 	.word	0xe000e100

90007b84 <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007b84:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007b88:	4b04      	ldr	r3, [pc, #16]	; (90007b9c <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007b8a:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007b8c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007b8e:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90007b92:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90007b94:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
90007b98:	4770      	bx	lr
90007b9a:	bf00      	nop
90007b9c:	e000ed00 	.word	0xe000ed00

90007ba0 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007ba0:	4b06      	ldr	r3, [pc, #24]	; (90007bbc <HAL_MPU_Enable+0x1c>)
90007ba2:	f040 0001 	orr.w	r0, r0, #1
90007ba6:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007baa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007bac:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90007bb0:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007bb2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007bb6:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007bba:	4770      	bx	lr
90007bbc:	e000ed00 	.word	0xe000ed00

90007bc0 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007bc0:	4a17      	ldr	r2, [pc, #92]	; (90007c20 <HAL_MPU_ConfigRegion+0x60>)
90007bc2:	7843      	ldrb	r3, [r0, #1]
90007bc4:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90007bc8:	7801      	ldrb	r1, [r0, #0]
90007bca:	b321      	cbz	r1, 90007c16 <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90007bcc:	6843      	ldr	r3, [r0, #4]
{
90007bce:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90007bd0:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007bd4:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007bd6:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007bda:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007bdc:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007be0:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007be4:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007be8:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007bea:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007bec:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007bf0:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007bf4:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007bf8:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007bfc:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90007c00:	7a01      	ldrb	r1, [r0, #8]
90007c02:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90007c06:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007c0a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007c0e:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90007c12:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90007c16:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90007c1a:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90007c1e:	4770      	bx	lr
90007c20:	e000ed00 	.word	0xe000ed00

90007c24 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007c24:	2800      	cmp	r0, #0
90007c26:	d036      	beq.n	90007c96 <HAL_CRC_Init+0x72>
{
90007c28:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007c2a:	7f43      	ldrb	r3, [r0, #29]
90007c2c:	4604      	mov	r4, r0
90007c2e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007c32:	b363      	cbz	r3, 90007c8e <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007c34:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007c36:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90007c38:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007c3a:	b9f3      	cbnz	r3, 90007c7a <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007c3c:	6823      	ldr	r3, [r4, #0]
90007c3e:	4a17      	ldr	r2, [pc, #92]	; (90007c9c <HAL_CRC_Init+0x78>)
90007c40:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007c42:	689a      	ldr	r2, [r3, #8]
90007c44:	f022 0218 	bic.w	r2, r2, #24
90007c48:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90007c4a:	7962      	ldrb	r2, [r4, #5]
90007c4c:	b18a      	cbz	r2, 90007c72 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007c4e:	6922      	ldr	r2, [r4, #16]
90007c50:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c52:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c54:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c58:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90007c5c:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007c5e:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007c60:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c62:	689a      	ldr	r2, [r3, #8]
90007c64:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90007c68:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90007c6a:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007c6c:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007c6e:	7761      	strb	r1, [r4, #29]
}
90007c70:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007c72:	f04f 32ff 	mov.w	r2, #4294967295
90007c76:	611a      	str	r2, [r3, #16]
90007c78:	e7eb      	b.n	90007c52 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90007c7a:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007c7e:	4620      	mov	r0, r4
90007c80:	f000 f80e 	bl	90007ca0 <HAL_CRCEx_Polynomial_Set>
90007c84:	b908      	cbnz	r0, 90007c8a <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007c86:	6823      	ldr	r3, [r4, #0]
90007c88:	e7df      	b.n	90007c4a <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90007c8a:	2001      	movs	r0, #1
}
90007c8c:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007c8e:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007c90:	f7fb fa86 	bl	900031a0 <HAL_CRC_MspInit>
90007c94:	e7ce      	b.n	90007c34 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90007c96:	2001      	movs	r0, #1
}
90007c98:	4770      	bx	lr
90007c9a:	bf00      	nop
90007c9c:	04c11db7 	.word	0x04c11db7

90007ca0 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007ca0:	07cb      	lsls	r3, r1, #31
90007ca2:	d51a      	bpl.n	90007cda <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007ca4:	231e      	movs	r3, #30
{
90007ca6:	b410      	push	{r4}
90007ca8:	e001      	b.n	90007cae <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007caa:	3b01      	subs	r3, #1
90007cac:	d317      	bcc.n	90007cde <HAL_CRCEx_Polynomial_Set+0x3e>
90007cae:	fa21 fc03 	lsr.w	ip, r1, r3
90007cb2:	f01c 0f01 	tst.w	ip, #1
90007cb6:	d0f8      	beq.n	90007caa <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
90007cb8:	2a18      	cmp	r2, #24
90007cba:	d811      	bhi.n	90007ce0 <HAL_CRCEx_Polynomial_Set+0x40>
90007cbc:	e8df f002 	tbb	[pc, r2]
90007cc0:	10101016 	.word	0x10101016
90007cc4:	10101010 	.word	0x10101010
90007cc8:	10101024 	.word	0x10101024
90007ccc:	10101010 	.word	0x10101010
90007cd0:	10101021 	.word	0x10101021
90007cd4:	10101010 	.word	0x10101010
90007cd8:	14          	.byte	0x14
90007cd9:	00          	.byte	0x00
    status =  HAL_ERROR;
90007cda:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007cdc:	4770      	bx	lr
    switch (PolyLength)
90007cde:	b12a      	cbz	r2, 90007cec <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
90007ce0:	2001      	movs	r0, #1
}
90007ce2:	f85d 4b04 	ldr.w	r4, [sp], #4
90007ce6:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90007ce8:	2b06      	cmp	r3, #6
90007cea:	d8f9      	bhi.n	90007ce0 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90007cec:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007cee:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007cf0:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007cf2:	68a3      	ldr	r3, [r4, #8]
90007cf4:	f023 0318 	bic.w	r3, r3, #24
90007cf8:	4313      	orrs	r3, r2
90007cfa:	60a3      	str	r3, [r4, #8]
}
90007cfc:	f85d 4b04 	ldr.w	r4, [sp], #4
90007d00:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90007d02:	2b07      	cmp	r3, #7
90007d04:	d9f2      	bls.n	90007cec <HAL_CRCEx_Polynomial_Set+0x4c>
90007d06:	e7eb      	b.n	90007ce0 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007d08:	2b0f      	cmp	r3, #15
90007d0a:	d9ef      	bls.n	90007cec <HAL_CRCEx_Polynomial_Set+0x4c>
90007d0c:	e7e8      	b.n	90007ce0 <HAL_CRCEx_Polynomial_Set+0x40>
90007d0e:	bf00      	nop

90007d10 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007d10:	2800      	cmp	r0, #0
90007d12:	d035      	beq.n	90007d80 <HAL_DMA2D_Init+0x70>
{
90007d14:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007d16:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90007d1a:	4604      	mov	r4, r0
90007d1c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007d20:	b34b      	cbz	r3, 90007d76 <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d22:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d24:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d26:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007d28:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d2c:	69e1      	ldr	r1, [r4, #28]
90007d2e:	681d      	ldr	r5, [r3, #0]
90007d30:	4814      	ldr	r0, [pc, #80]	; (90007d84 <HAL_DMA2D_Init+0x74>)
90007d32:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d34:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d36:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d38:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d3a:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d3c:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007d3e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d40:	4302      	orrs	r2, r0
90007d42:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007d44:	4810      	ldr	r0, [pc, #64]	; (90007d88 <HAL_DMA2D_Init+0x78>)
90007d46:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d48:	4910      	ldr	r1, [pc, #64]	; (90007d8c <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007d4a:	4302      	orrs	r2, r0
90007d4c:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d4e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90007d50:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d52:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d56:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d58:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007d5a:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d5c:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007d5e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d62:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007d64:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90007d68:	430a      	orrs	r2, r1
90007d6a:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d6c:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007d6e:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007d70:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90007d74:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007d76:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007d7a:	f7fb fa29 	bl	900031d0 <HAL_DMA2D_MspInit>
90007d7e:	e7d0      	b.n	90007d22 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007d80:	2001      	movs	r0, #1
}
90007d82:	4770      	bx	lr
90007d84:	fff8ffbf 	.word	0xfff8ffbf
90007d88:	fffffef8 	.word	0xfffffef8
90007d8c:	ffff0000 	.word	0xffff0000

90007d90 <HAL_DMA2D_LineEventCallback>:
90007d90:	4770      	bx	lr
90007d92:	bf00      	nop

90007d94 <HAL_DMA2D_CLUTLoadingCpltCallback>:
90007d94:	4770      	bx	lr
90007d96:	bf00      	nop

90007d98 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007d98:	6803      	ldr	r3, [r0, #0]
{
90007d9a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007d9c:	685d      	ldr	r5, [r3, #4]
{
90007d9e:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007da0:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007da2:	07ea      	lsls	r2, r5, #31
90007da4:	d501      	bpl.n	90007daa <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90007da6:	05f1      	lsls	r1, r6, #23
90007da8:	d456      	bmi.n	90007e58 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007daa:	06aa      	lsls	r2, r5, #26
90007dac:	d501      	bpl.n	90007db2 <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90007dae:	04b3      	lsls	r3, r6, #18
90007db0:	d43b      	bmi.n	90007e2a <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007db2:	0728      	lsls	r0, r5, #28
90007db4:	d501      	bpl.n	90007dba <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007db6:	0531      	lsls	r1, r6, #20
90007db8:	d421      	bmi.n	90007dfe <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007dba:	076a      	lsls	r2, r5, #29
90007dbc:	d501      	bpl.n	90007dc2 <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90007dbe:	0573      	lsls	r3, r6, #21
90007dc0:	d472      	bmi.n	90007ea8 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007dc2:	07a8      	lsls	r0, r5, #30
90007dc4:	d501      	bpl.n	90007dca <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90007dc6:	05b1      	lsls	r1, r6, #22
90007dc8:	d404      	bmi.n	90007dd4 <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007dca:	06ea      	lsls	r2, r5, #27
90007dcc:	d501      	bpl.n	90007dd2 <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007dce:	04f3      	lsls	r3, r6, #19
90007dd0:	d457      	bmi.n	90007e82 <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90007dd2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007dd4:	6823      	ldr	r3, [r4, #0]
90007dd6:	681a      	ldr	r2, [r3, #0]
90007dd8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90007ddc:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007dde:	2202      	movs	r2, #2
90007de0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007de2:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007de4:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007de6:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90007de8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007dea:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007dee:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007df2:	6a23      	ldr	r3, [r4, #32]
90007df4:	2b00      	cmp	r3, #0
90007df6:	d0e8      	beq.n	90007dca <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007df8:	4620      	mov	r0, r4
90007dfa:	4798      	blx	r3
90007dfc:	e7e5      	b.n	90007dca <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007dfe:	6823      	ldr	r3, [r4, #0]
90007e00:	681a      	ldr	r2, [r3, #0]
90007e02:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90007e06:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007e08:	2208      	movs	r2, #8
90007e0a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e0c:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007e0e:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007e10:	4313      	orrs	r3, r2
90007e12:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e14:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007e18:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007e1c:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e20:	2b00      	cmp	r3, #0
90007e22:	d0ca      	beq.n	90007dba <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007e24:	4620      	mov	r0, r4
90007e26:	4798      	blx	r3
90007e28:	e7c7      	b.n	90007dba <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007e2a:	6823      	ldr	r3, [r4, #0]
90007e2c:	681a      	ldr	r2, [r3, #0]
90007e2e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90007e32:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007e34:	2220      	movs	r2, #32
90007e36:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e38:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007e3a:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007e3c:	f043 0302 	orr.w	r3, r3, #2
90007e40:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e42:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007e46:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007e48:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007e4a:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e4e:	2b00      	cmp	r3, #0
90007e50:	d0af      	beq.n	90007db2 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007e52:	4620      	mov	r0, r4
90007e54:	4798      	blx	r3
90007e56:	e7ac      	b.n	90007db2 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007e58:	681a      	ldr	r2, [r3, #0]
90007e5a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90007e5e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007e60:	6e42      	ldr	r2, [r0, #100]	; 0x64
90007e62:	f042 0201 	orr.w	r2, r2, #1
90007e66:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007e68:	2201      	movs	r2, #1
90007e6a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007e6c:	2304      	movs	r3, #4
90007e6e:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007e72:	2300      	movs	r3, #0
90007e74:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007e78:	6a43      	ldr	r3, [r0, #36]	; 0x24
90007e7a:	2b00      	cmp	r3, #0
90007e7c:	d095      	beq.n	90007daa <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007e7e:	4798      	blx	r3
90007e80:	e793      	b.n	90007daa <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007e82:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007e84:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007e86:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007e88:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007e8a:	681a      	ldr	r2, [r3, #0]
90007e8c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90007e90:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007e92:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007e94:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007e96:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90007e98:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007e9c:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007e9e:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007ea2:	f7ff ff77 	bl	90007d94 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007ea6:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007ea8:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007eaa:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007eac:	681a      	ldr	r2, [r3, #0]
90007eae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
90007eb2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007eb4:	2204      	movs	r2, #4
90007eb6:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007eb8:	f7ff ff6a 	bl	90007d90 <HAL_DMA2D_LineEventCallback>
90007ebc:	e781      	b.n	90007dc2 <HAL_DMA2D_IRQHandler+0x2a>
90007ebe:	bf00      	nop

90007ec0 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007ec0:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
90007ec4:	2a01      	cmp	r2, #1
90007ec6:	d065      	beq.n	90007f94 <HAL_DMA2D_ConfigLayer+0xd4>
90007ec8:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007eca:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007ece:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ed0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
90007ed4:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
90007ed6:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007ed8:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90007edc:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007ee0:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ee2:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
90007ee4:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90007ee6:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007ee8:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007eec:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90007ef0:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007ef2:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90007ef6:	ea42 0204 	orr.w	r2, r2, r4
90007efa:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007efe:	d922      	bls.n	90007f46 <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90007f00:	6b45      	ldr	r5, [r0, #52]	; 0x34
90007f02:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f06:	b981      	cbnz	r1, 90007f2a <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f08:	6818      	ldr	r0, [r3, #0]
90007f0a:	4923      	ldr	r1, [pc, #140]	; (90007f98 <HAL_DMA2D_ConfigLayer+0xd8>)
90007f0c:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f0e:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f10:	4029      	ands	r1, r5
90007f12:	4311      	orrs	r1, r2
90007f14:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f16:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90007f18:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f1a:	2101      	movs	r1, #1

  return HAL_OK;
90007f1c:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90007f1e:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
90007f22:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
90007f26:	bc70      	pop	{r4, r5, r6}
90007f28:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007f2a:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f2c:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90007f2e:	d129      	bne.n	90007f84 <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f30:	69e5      	ldr	r5, [r4, #28]
90007f32:	491a      	ldr	r1, [pc, #104]	; (90007f9c <HAL_DMA2D_ConfigLayer+0xdc>)
90007f34:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
90007f36:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f38:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f3a:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
90007f3e:	4311      	orrs	r1, r2
90007f40:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f42:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f44:	e7e8      	b.n	90007f18 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
90007f46:	6b44      	ldr	r4, [r0, #52]	; 0x34
90007f48:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
90007f4c:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007f4e:	b961      	cbnz	r1, 90007f6a <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f50:	6819      	ldr	r1, [r3, #0]
90007f52:	4a11      	ldr	r2, [pc, #68]	; (90007f98 <HAL_DMA2D_ConfigLayer+0xd8>)
90007f54:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f56:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f58:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f5a:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f5c:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007f60:	4322      	orrs	r2, r4
90007f62:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007f64:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007f66:	6288      	str	r0, [r1, #40]	; 0x28
90007f68:	e7d6      	b.n	90007f18 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f6a:	6819      	ldr	r1, [r3, #0]
90007f6c:	4a0a      	ldr	r2, [pc, #40]	; (90007f98 <HAL_DMA2D_ConfigLayer+0xd8>)
90007f6e:	69cd      	ldr	r5, [r1, #28]
90007f70:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f72:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f74:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f76:	6b44      	ldr	r4, [r0, #52]	; 0x34
90007f78:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f7c:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f7e:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007f80:	620c      	str	r4, [r1, #32]
90007f82:	e7c9      	b.n	90007f18 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f84:	69e5      	ldr	r5, [r4, #28]
90007f86:	4904      	ldr	r1, [pc, #16]	; (90007f98 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f88:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007f8a:	4029      	ands	r1, r5
90007f8c:	4311      	orrs	r1, r2
90007f8e:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007f90:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90007f92:	e7c1      	b.n	90007f18 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
90007f94:	2002      	movs	r0, #2
}
90007f96:	4770      	bx	lr
90007f98:	00ccfff0 	.word	0x00ccfff0
90007f9c:	00c0fff0 	.word	0x00c0fff0

90007fa0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90007fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007fa4:	680c      	ldr	r4, [r1, #0]
{
90007fa6:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007fa8:	2c00      	cmp	r4, #0
90007faa:	f000 80a7 	beq.w	900080fc <HAL_GPIO_Init+0x15c>
90007fae:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007fb2:	4f8a      	ldr	r7, [pc, #552]	; (900081dc <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
90007fb4:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007fb6:	2201      	movs	r2, #1
90007fb8:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90007fba:	ea12 0e04 	ands.w	lr, r2, r4
90007fbe:	f000 8096 	beq.w	900080ee <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007fc2:	684d      	ldr	r5, [r1, #4]
90007fc4:	f005 0903 	and.w	r9, r5, #3
90007fc8:	f109 36ff 	add.w	r6, r9, #4294967295
90007fcc:	2e01      	cmp	r6, #1
90007fce:	f240 8098 	bls.w	90008102 <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
90007fd2:	f1b9 0f03 	cmp.w	r9, #3
90007fd6:	f040 80d2 	bne.w	9000817e <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007fda:	fa09 f20c 	lsl.w	r2, r9, ip
90007fde:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
90007fe2:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007fe4:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90007fe8:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90007fec:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90007ff0:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
90007ff2:	d07c      	beq.n	900080ee <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90007ff4:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90007ff8:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007ffc:	f003 0903 	and.w	r9, r3, #3
90008000:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008002:	f042 0202 	orr.w	r2, r2, #2
90008006:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000800a:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000800e:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
90008012:	f508 6880 	add.w	r8, r8, #1024	; 0x400
90008016:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000801a:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000801e:	f002 0202 	and.w	r2, r2, #2
90008022:	9201      	str	r2, [sp, #4]
90008024:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
90008026:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
9000802a:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000802e:	4e6c      	ldr	r6, [pc, #432]	; (900081e0 <HAL_GPIO_Init+0x240>)
90008030:	42b0      	cmp	r0, r6
90008032:	d028      	beq.n	90008086 <HAL_GPIO_Init+0xe6>
90008034:	f506 6680 	add.w	r6, r6, #1024	; 0x400
90008038:	42b0      	cmp	r0, r6
9000803a:	f000 80ac 	beq.w	90008196 <HAL_GPIO_Init+0x1f6>
9000803e:	4e69      	ldr	r6, [pc, #420]	; (900081e4 <HAL_GPIO_Init+0x244>)
90008040:	42b0      	cmp	r0, r6
90008042:	f000 80ad 	beq.w	900081a0 <HAL_GPIO_Init+0x200>
90008046:	4e68      	ldr	r6, [pc, #416]	; (900081e8 <HAL_GPIO_Init+0x248>)
90008048:	42b0      	cmp	r0, r6
9000804a:	f000 809f 	beq.w	9000818c <HAL_GPIO_Init+0x1ec>
9000804e:	4e67      	ldr	r6, [pc, #412]	; (900081ec <HAL_GPIO_Init+0x24c>)
90008050:	42b0      	cmp	r0, r6
90008052:	f000 80af 	beq.w	900081b4 <HAL_GPIO_Init+0x214>
90008056:	4e66      	ldr	r6, [pc, #408]	; (900081f0 <HAL_GPIO_Init+0x250>)
90008058:	42b0      	cmp	r0, r6
9000805a:	f000 80b0 	beq.w	900081be <HAL_GPIO_Init+0x21e>
9000805e:	4e65      	ldr	r6, [pc, #404]	; (900081f4 <HAL_GPIO_Init+0x254>)
90008060:	42b0      	cmp	r0, r6
90008062:	f000 80a2 	beq.w	900081aa <HAL_GPIO_Init+0x20a>
90008066:	4e64      	ldr	r6, [pc, #400]	; (900081f8 <HAL_GPIO_Init+0x258>)
90008068:	42b0      	cmp	r0, r6
9000806a:	f000 80ad 	beq.w	900081c8 <HAL_GPIO_Init+0x228>
9000806e:	4e63      	ldr	r6, [pc, #396]	; (900081fc <HAL_GPIO_Init+0x25c>)
90008070:	42b0      	cmp	r0, r6
90008072:	f000 80ae 	beq.w	900081d2 <HAL_GPIO_Init+0x232>
90008076:	4e62      	ldr	r6, [pc, #392]	; (90008200 <HAL_GPIO_Init+0x260>)
90008078:	42b0      	cmp	r0, r6
9000807a:	bf0c      	ite	eq
9000807c:	2609      	moveq	r6, #9
9000807e:	260a      	movne	r6, #10
90008080:	fa06 f609 	lsl.w	r6, r6, r9
90008084:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
90008086:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
9000808a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000808e:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
90008092:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
90008096:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90008098:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000809c:	bf0c      	ite	eq
9000809e:	4032      	andeq	r2, r6
          temp |= iocurrent;
900080a0:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900080a4:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
900080a8:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
900080ac:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
900080b0:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900080b4:	bf0c      	ite	eq
900080b6:	4032      	andeq	r2, r6
          temp |= iocurrent;
900080b8:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
900080bc:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
900080c0:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
900080c4:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
900080c8:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
900080cc:	bf0c      	ite	eq
900080ce:	4032      	andeq	r2, r6
          temp |= iocurrent;
900080d0:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
900080d4:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
900080d6:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
900080da:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
900080de:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
900080e2:	bf54      	ite	pl
900080e4:	4032      	andpl	r2, r6
          temp |= iocurrent;
900080e6:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
900080ea:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
900080ee:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
900080f0:	f10c 0c02 	add.w	ip, ip, #2
900080f4:	fa34 f203 	lsrs.w	r2, r4, r3
900080f8:	f47f af5d 	bne.w	90007fb6 <HAL_GPIO_Init+0x16>
  }
}
900080fc:	b003      	add	sp, #12
900080fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008102:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
90008106:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008108:	fa08 f80c 	lsl.w	r8, r8, ip
9000810c:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90008110:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008112:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90008116:	fa06 f60c 	lsl.w	r6, r6, ip
9000811a:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
9000811e:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008120:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
90008124:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008128:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
9000812a:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000812e:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90008130:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
90008132:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90008134:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90008138:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000813a:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000813e:	fa06 f60c 	lsl.w	r6, r6, ip
90008142:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
90008146:	fa09 f20c 	lsl.w	r2, r9, ip
9000814a:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000814c:	f47f af49 	bne.w	90007fe2 <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
90008150:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008154:	f003 0b07 	and.w	fp, r3, #7
90008158:	260f      	movs	r6, #15
9000815a:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000815e:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
90008162:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
90008166:	fa06 f60b 	lsl.w	r6, r6, fp
9000816a:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
9000816e:	690e      	ldr	r6, [r1, #16]
90008170:	fa06 f60b 	lsl.w	r6, r6, fp
90008174:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
90008178:	f8c9 6020 	str.w	r6, [r9, #32]
9000817c:	e731      	b.n	90007fe2 <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000817e:	f04f 0803 	mov.w	r8, #3
90008182:	fa08 f80c 	lsl.w	r8, r8, ip
90008186:	ea6f 0808 	mvn.w	r8, r8
9000818a:	e7d2      	b.n	90008132 <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000818c:	2603      	movs	r6, #3
9000818e:	fa06 f609 	lsl.w	r6, r6, r9
90008192:	4332      	orrs	r2, r6
90008194:	e777      	b.n	90008086 <HAL_GPIO_Init+0xe6>
90008196:	2601      	movs	r6, #1
90008198:	fa06 f609 	lsl.w	r6, r6, r9
9000819c:	4332      	orrs	r2, r6
9000819e:	e772      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081a0:	2602      	movs	r6, #2
900081a2:	fa06 f609 	lsl.w	r6, r6, r9
900081a6:	4332      	orrs	r2, r6
900081a8:	e76d      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081aa:	2606      	movs	r6, #6
900081ac:	fa06 f609 	lsl.w	r6, r6, r9
900081b0:	4332      	orrs	r2, r6
900081b2:	e768      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081b4:	2604      	movs	r6, #4
900081b6:	fa06 f609 	lsl.w	r6, r6, r9
900081ba:	4332      	orrs	r2, r6
900081bc:	e763      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081be:	2605      	movs	r6, #5
900081c0:	fa06 f609 	lsl.w	r6, r6, r9
900081c4:	4332      	orrs	r2, r6
900081c6:	e75e      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081c8:	2607      	movs	r6, #7
900081ca:	fa06 f609 	lsl.w	r6, r6, r9
900081ce:	4332      	orrs	r2, r6
900081d0:	e759      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081d2:	2608      	movs	r6, #8
900081d4:	fa06 f609 	lsl.w	r6, r6, r9
900081d8:	4332      	orrs	r2, r6
900081da:	e754      	b.n	90008086 <HAL_GPIO_Init+0xe6>
900081dc:	58024400 	.word	0x58024400
900081e0:	58020000 	.word	0x58020000
900081e4:	58020800 	.word	0x58020800
900081e8:	58020c00 	.word	0x58020c00
900081ec:	58021000 	.word	0x58021000
900081f0:	58021400 	.word	0x58021400
900081f4:	58021800 	.word	0x58021800
900081f8:	58021c00 	.word	0x58021c00
900081fc:	58022000 	.word	0x58022000
90008200:	58022400 	.word	0x58022400

90008204 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90008204:	2900      	cmp	r1, #0
90008206:	f000 80a4 	beq.w	90008352 <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
9000820a:	2300      	movs	r3, #0
{
9000820c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008210:	f8df 9168 	ldr.w	r9, [pc, #360]	; 9000837c <HAL_GPIO_DeInit+0x178>
90008214:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008216:	f8df 8168 	ldr.w	r8, [pc, #360]	; 90008380 <HAL_GPIO_DeInit+0x17c>
9000821a:	f8df a168 	ldr.w	sl, [pc, #360]	; 90008384 <HAL_GPIO_DeInit+0x180>
9000821e:	f8df b168 	ldr.w	fp, [pc, #360]	; 90008388 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
90008222:	f04f 0e01 	mov.w	lr, #1
90008226:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
9000822a:	ea12 0c01 	ands.w	ip, r2, r1
9000822e:	d06b      	beq.n	90008308 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008230:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008234:	f003 0403 	and.w	r4, r3, #3
90008238:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000823a:	4540      	cmp	r0, r8
9000823c:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000823e:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
90008242:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90008244:	fa06 f604 	lsl.w	r6, r6, r4
90008248:	ea07 0706 	and.w	r7, r7, r6
9000824c:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000824e:	d01f      	beq.n	90008290 <HAL_GPIO_DeInit+0x8c>
90008250:	4550      	cmp	r0, sl
90008252:	d01a      	beq.n	9000828a <HAL_GPIO_DeInit+0x86>
90008254:	4558      	cmp	r0, fp
90008256:	d05e      	beq.n	90008316 <HAL_GPIO_DeInit+0x112>
90008258:	4f43      	ldr	r7, [pc, #268]	; (90008368 <HAL_GPIO_DeInit+0x164>)
9000825a:	42b8      	cmp	r0, r7
9000825c:	d065      	beq.n	9000832a <HAL_GPIO_DeInit+0x126>
9000825e:	4f43      	ldr	r7, [pc, #268]	; (9000836c <HAL_GPIO_DeInit+0x168>)
90008260:	42b8      	cmp	r0, r7
90008262:	d067      	beq.n	90008334 <HAL_GPIO_DeInit+0x130>
90008264:	4f42      	ldr	r7, [pc, #264]	; (90008370 <HAL_GPIO_DeInit+0x16c>)
90008266:	42b8      	cmp	r0, r7
90008268:	d05a      	beq.n	90008320 <HAL_GPIO_DeInit+0x11c>
9000826a:	4f42      	ldr	r7, [pc, #264]	; (90008374 <HAL_GPIO_DeInit+0x170>)
9000826c:	42b8      	cmp	r0, r7
9000826e:	d06b      	beq.n	90008348 <HAL_GPIO_DeInit+0x144>
90008270:	4f41      	ldr	r7, [pc, #260]	; (90008378 <HAL_GPIO_DeInit+0x174>)
90008272:	42b8      	cmp	r0, r7
90008274:	d06e      	beq.n	90008354 <HAL_GPIO_DeInit+0x150>
90008276:	f8df e114 	ldr.w	lr, [pc, #276]	; 9000838c <HAL_GPIO_DeInit+0x188>
9000827a:	4570      	cmp	r0, lr
9000827c:	d05f      	beq.n	9000833e <HAL_GPIO_DeInit+0x13a>
9000827e:	f8df e110 	ldr.w	lr, [pc, #272]	; 90008390 <HAL_GPIO_DeInit+0x18c>
90008282:	4570      	cmp	r0, lr
90008284:	d06b      	beq.n	9000835e <HAL_GPIO_DeInit+0x15a>
90008286:	f04f 0e0a 	mov.w	lr, #10
9000828a:	fa0e f404 	lsl.w	r4, lr, r4
9000828e:	e000      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008290:	2400      	movs	r4, #0
90008292:	9f01      	ldr	r7, [sp, #4]
90008294:	42a7      	cmp	r7, r4
90008296:	d119      	bne.n	900082cc <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008298:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
9000829c:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
900082a0:	ea27 070c 	bic.w	r7, r7, ip
900082a4:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900082a8:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
900082ac:	ea27 070c 	bic.w	r7, r7, ip
900082b0:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
900082b4:	6867      	ldr	r7, [r4, #4]
900082b6:	ea27 070c 	bic.w	r7, r7, ip
900082ba:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
900082bc:	6827      	ldr	r7, [r4, #0]
900082be:	ea27 070c 	bic.w	r7, r7, ip
900082c2:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
900082c4:	68ac      	ldr	r4, [r5, #8]
900082c6:	ea24 0406 	bic.w	r4, r4, r6
900082ca:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900082cc:	005d      	lsls	r5, r3, #1
900082ce:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900082d0:	f003 0607 	and.w	r6, r3, #7
900082d4:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900082d6:	40ac      	lsls	r4, r5
900082d8:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900082da:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900082dc:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900082de:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900082e0:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
900082e2:	08dd      	lsrs	r5, r3, #3
900082e4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
900082e8:	6a2e      	ldr	r6, [r5, #32]
900082ea:	ea26 0607 	bic.w	r6, r6, r7
900082ee:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900082f0:	68c5      	ldr	r5, [r0, #12]
900082f2:	ea25 0504 	bic.w	r5, r5, r4
900082f6:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
900082f8:	6845      	ldr	r5, [r0, #4]
900082fa:	ea25 0202 	bic.w	r2, r5, r2
900082fe:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008300:	6882      	ldr	r2, [r0, #8]
90008302:	ea22 0204 	bic.w	r2, r2, r4
90008306:	6082      	str	r2, [r0, #8]
    }

    position++;
90008308:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000830a:	fa31 f203 	lsrs.w	r2, r1, r3
9000830e:	d188      	bne.n	90008222 <HAL_GPIO_DeInit+0x1e>
  }
}
90008310:	b003      	add	sp, #12
90008312:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90008316:	f04f 0e02 	mov.w	lr, #2
9000831a:	fa0e f404 	lsl.w	r4, lr, r4
9000831e:	e7b8      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008320:	f04f 0e05 	mov.w	lr, #5
90008324:	fa0e f404 	lsl.w	r4, lr, r4
90008328:	e7b3      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
9000832a:	f04f 0e03 	mov.w	lr, #3
9000832e:	fa0e f404 	lsl.w	r4, lr, r4
90008332:	e7ae      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008334:	f04f 0e04 	mov.w	lr, #4
90008338:	fa0e f404 	lsl.w	r4, lr, r4
9000833c:	e7a9      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
9000833e:	f04f 0e08 	mov.w	lr, #8
90008342:	fa0e f404 	lsl.w	r4, lr, r4
90008346:	e7a4      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008348:	f04f 0e06 	mov.w	lr, #6
9000834c:	fa0e f404 	lsl.w	r4, lr, r4
90008350:	e79f      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008352:	4770      	bx	lr
90008354:	f04f 0e07 	mov.w	lr, #7
90008358:	fa0e f404 	lsl.w	r4, lr, r4
9000835c:	e799      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
9000835e:	f04f 0e09 	mov.w	lr, #9
90008362:	fa0e f404 	lsl.w	r4, lr, r4
90008366:	e794      	b.n	90008292 <HAL_GPIO_DeInit+0x8e>
90008368:	58020c00 	.word	0x58020c00
9000836c:	58021000 	.word	0x58021000
90008370:	58021400 	.word	0x58021400
90008374:	58021800 	.word	0x58021800
90008378:	58021c00 	.word	0x58021c00
9000837c:	58000400 	.word	0x58000400
90008380:	58020000 	.word	0x58020000
90008384:	58020400 	.word	0x58020400
90008388:	58020800 	.word	0x58020800
9000838c:	58022000 	.word	0x58022000
90008390:	58022400 	.word	0x58022400

90008394 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
90008394:	6903      	ldr	r3, [r0, #16]
90008396:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90008398:	bf14      	ite	ne
9000839a:	2001      	movne	r0, #1
9000839c:	2000      	moveq	r0, #0
9000839e:	4770      	bx	lr

900083a0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900083a0:	b902      	cbnz	r2, 900083a4 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900083a2:	0409      	lsls	r1, r1, #16
900083a4:	6181      	str	r1, [r0, #24]
  }
}
900083a6:	4770      	bx	lr

900083a8 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900083a8:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900083aa:	ea01 0203 	and.w	r2, r1, r3
900083ae:	ea21 0103 	bic.w	r1, r1, r3
900083b2:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900083b6:	6181      	str	r1, [r0, #24]
}
900083b8:	4770      	bx	lr
900083ba:	bf00      	nop

900083bc <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
900083bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900083c0:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900083c2:	f04f 0820 	mov.w	r8, #32
{
900083c6:	4605      	mov	r5, r0
900083c8:	460e      	mov	r6, r1
900083ca:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
900083cc:	6998      	ldr	r0, [r3, #24]
900083ce:	f010 0902 	ands.w	r9, r0, #2
900083d2:	f040 809e 	bne.w	90008512 <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
900083d6:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900083d8:	f014 0410 	ands.w	r4, r4, #16
900083dc:	d068      	beq.n	900084b0 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900083de:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
900083e0:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
900083e2:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900083e4:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900083e6:	1c71      	adds	r1, r6, #1
900083e8:	699a      	ldr	r2, [r3, #24]
900083ea:	d163      	bne.n	900084b4 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
900083ec:	0690      	lsls	r0, r2, #26
900083ee:	f100 8093 	bmi.w	90008518 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900083f2:	f1ba 0f00 	cmp.w	sl, #0
900083f6:	d104      	bne.n	90008402 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
900083f8:	699c      	ldr	r4, [r3, #24]
900083fa:	06a1      	lsls	r1, r4, #26
900083fc:	d5fc      	bpl.n	900083f8 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900083fe:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90008402:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
90008406:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008408:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
9000840a:	05d0      	lsls	r0, r2, #23
9000840c:	d530      	bpl.n	90008470 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000840e:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008412:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008414:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008418:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000841a:	d504      	bpl.n	90008426 <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000841c:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008420:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008424:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008426:	0591      	lsls	r1, r2, #22
90008428:	d504      	bpl.n	90008434 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000842a:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000842e:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008432:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90008434:	699a      	ldr	r2, [r3, #24]
90008436:	0790      	lsls	r0, r2, #30
90008438:	d501      	bpl.n	9000843e <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
9000843a:	2200      	movs	r2, #0
9000843c:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
9000843e:	699a      	ldr	r2, [r3, #24]
90008440:	07d1      	lsls	r1, r2, #31
90008442:	d403      	bmi.n	9000844c <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90008444:	699a      	ldr	r2, [r3, #24]
90008446:	f042 0201 	orr.w	r2, r2, #1
9000844a:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
9000844c:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000844e:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008450:	4834      	ldr	r0, [pc, #208]	; (90008524 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
90008452:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
90008454:	4002      	ands	r2, r0
      return HAL_ERROR;
90008456:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
90008458:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
9000845a:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
9000845c:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90008460:	4323      	orrs	r3, r4
90008462:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90008464:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008468:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
9000846c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008470:	0550      	lsls	r0, r2, #21
90008472:	d4d3      	bmi.n	9000841c <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008474:	0592      	lsls	r2, r2, #22
90008476:	d4d8      	bmi.n	9000842a <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
90008478:	2900      	cmp	r1, #0
9000847a:	d1db      	bne.n	90008434 <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
9000847c:	1c72      	adds	r2, r6, #1
9000847e:	d0a5      	beq.n	900083cc <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008480:	f7ff fb04 	bl	90007a8c <HAL_GetTick>
90008484:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008486:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008488:	42b0      	cmp	r0, r6
9000848a:	d801      	bhi.n	90008490 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
9000848c:	2e00      	cmp	r6, #0
9000848e:	d19d      	bne.n	900083cc <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90008490:	699a      	ldr	r2, [r3, #24]
90008492:	f012 0202 	ands.w	r2, r2, #2
90008496:	d199      	bne.n	900083cc <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008498:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000849a:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
9000849c:	2001      	movs	r0, #1
9000849e:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900084a2:	430b      	orrs	r3, r1
900084a4:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900084a6:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900084aa:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
900084ae:	e7dd      	b.n	9000846c <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
900084b0:	4621      	mov	r1, r4
900084b2:	e7a9      	b.n	90008408 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900084b4:	0692      	lsls	r2, r2, #26
900084b6:	d42f      	bmi.n	90008518 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
900084b8:	f1ba 0f00 	cmp.w	sl, #0
900084bc:	d1a1      	bne.n	90008402 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900084be:	f7ff fae5 	bl	90007a8c <HAL_GetTick>
900084c2:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900084c4:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
900084c6:	4286      	cmp	r6, r0
900084c8:	d301      	bcc.n	900084ce <I2C_WaitOnTXISFlagUntilTimeout+0x112>
900084ca:	2e00      	cmp	r6, #0
900084cc:	d18b      	bne.n	900083e6 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
900084ce:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
900084d0:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900084d4:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900084d6:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900084d8:	0409      	lsls	r1, r1, #16
900084da:	d50b      	bpl.n	900084f4 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
900084dc:	0441      	lsls	r1, r0, #17
900084de:	d409      	bmi.n	900084f4 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
900084e0:	2a20      	cmp	r2, #32
900084e2:	d007      	beq.n	900084f4 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900084e4:	685a      	ldr	r2, [r3, #4]
900084e6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900084ea:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900084ec:	f7ff face 	bl	90007a8c <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900084f0:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
900084f2:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900084f4:	699a      	ldr	r2, [r3, #24]
900084f6:	0690      	lsls	r0, r2, #26
900084f8:	f53f af75 	bmi.w	900083e6 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900084fc:	f7ff fac6 	bl	90007a8c <HAL_GetTick>
90008500:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008502:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008504:	2819      	cmp	r0, #25
90008506:	d9f5      	bls.n	900084f4 <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008508:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
9000850c:	f04f 0a01 	mov.w	sl, #1
90008510:	e769      	b.n	900083e6 <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
90008512:	2000      	movs	r0, #0
}
90008514:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90008518:	f1ba 0f00 	cmp.w	sl, #0
9000851c:	f43f af6f 	beq.w	900083fe <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90008520:	e76f      	b.n	90008402 <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90008522:	bf00      	nop
90008524:	fe00e800 	.word	0xfe00e800

90008528 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90008528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000852c:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000852e:	6802      	ldr	r2, [r0, #0]
{
90008530:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008532:	6991      	ldr	r1, [r2, #24]
90008534:	068c      	lsls	r4, r1, #26
90008536:	d469      	bmi.n	9000860c <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
90008538:	4606      	mov	r6, r0
9000853a:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000853c:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90008540:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008542:	f014 0410 	ands.w	r4, r4, #16
90008546:	d064      	beq.n	90008612 <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
90008548:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000854a:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
9000854c:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000854e:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
90008552:	46aa      	mov	sl, r5
90008554:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008556:	699a      	ldr	r2, [r3, #24]
90008558:	d15d      	bne.n	90008616 <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
9000855a:	0690      	lsls	r0, r2, #26
9000855c:	f100 8083 	bmi.w	90008666 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90008560:	f1ba 0f00 	cmp.w	sl, #0
90008564:	d104      	bne.n	90008570 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
90008566:	699c      	ldr	r4, [r3, #24]
90008568:	06a1      	lsls	r1, r4, #26
9000856a:	d5fc      	bpl.n	90008566 <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000856c:	2220      	movs	r2, #32
9000856e:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90008570:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
90008574:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90008576:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008578:	05d0      	lsls	r0, r2, #23
9000857a:	d530      	bpl.n	900085de <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
9000857c:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008580:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90008582:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008586:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008588:	d504      	bpl.n	90008594 <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000858a:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
9000858e:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008592:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90008594:	0591      	lsls	r1, r2, #22
90008596:	d504      	bpl.n	900085a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008598:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
9000859c:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
900085a0:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
900085a2:	699a      	ldr	r2, [r3, #24]
900085a4:	0795      	lsls	r5, r2, #30
900085a6:	d501      	bpl.n	900085ac <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
900085a8:	2200      	movs	r2, #0
900085aa:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900085ac:	699a      	ldr	r2, [r3, #24]
900085ae:	07d0      	lsls	r0, r2, #31
900085b0:	d403      	bmi.n	900085ba <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900085b2:	699a      	ldr	r2, [r3, #24]
900085b4:	f042 0201 	orr.w	r2, r2, #1
900085b8:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
900085ba:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
900085bc:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900085be:	4837      	ldr	r0, [pc, #220]	; (9000869c <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
900085c0:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
900085c2:	4002      	ands	r2, r0
      return HAL_ERROR;
900085c4:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900085c6:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900085c8:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
900085ca:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
900085ce:	4323      	orrs	r3, r4
900085d0:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900085d2:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900085d6:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900085da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900085de:	0550      	lsls	r0, r2, #21
900085e0:	d4d3      	bmi.n	9000858a <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900085e2:	0592      	lsls	r2, r2, #22
900085e4:	d4d8      	bmi.n	90008598 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
900085e6:	2900      	cmp	r1, #0
900085e8:	d1db      	bne.n	900085a2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900085ea:	f7ff fa4f 	bl	90007a8c <HAL_GetTick>
900085ee:	eba0 0008 	sub.w	r0, r0, r8
900085f2:	42b8      	cmp	r0, r7
900085f4:	d801      	bhi.n	900085fa <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
900085f6:	2f00      	cmp	r7, #0
900085f8:	d132      	bne.n	90008660 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900085fa:	6832      	ldr	r2, [r6, #0]
900085fc:	6991      	ldr	r1, [r2, #24]
900085fe:	4613      	mov	r3, r2
90008600:	f011 0120 	ands.w	r1, r1, #32
90008604:	d034      	beq.n	90008670 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008606:	6991      	ldr	r1, [r2, #24]
90008608:	0689      	lsls	r1, r1, #26
9000860a:	d599      	bpl.n	90008540 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
9000860c:	2000      	movs	r0, #0
}
9000860e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90008612:	4621      	mov	r1, r4
90008614:	e7af      	b.n	90008576 <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008616:	0692      	lsls	r2, r2, #26
90008618:	d425      	bmi.n	90008666 <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
9000861a:	f1ba 0f00 	cmp.w	sl, #0
9000861e:	d1a7      	bne.n	90008570 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008620:	f7ff fa34 	bl	90007a8c <HAL_GetTick>
90008624:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008626:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008628:	4287      	cmp	r7, r0
9000862a:	d301      	bcc.n	90008630 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
9000862c:	2f00      	cmp	r7, #0
9000862e:	d191      	bne.n	90008554 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008630:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008632:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008636:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90008638:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000863a:	0409      	lsls	r1, r1, #16
9000863c:	d503      	bpl.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
9000863e:	0441      	lsls	r1, r0, #17
90008640:	d401      	bmi.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90008642:	2a20      	cmp	r2, #32
90008644:	d121      	bne.n	9000868a <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008646:	699a      	ldr	r2, [r3, #24]
90008648:	0690      	lsls	r0, r2, #26
9000864a:	d483      	bmi.n	90008554 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000864c:	f7ff fa1e 	bl	90007a8c <HAL_GetTick>
90008650:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90008652:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008654:	2819      	cmp	r0, #25
90008656:	d9f6      	bls.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008658:	2520      	movs	r5, #32
              status = HAL_ERROR;
9000865a:	f04f 0a01 	mov.w	sl, #1
9000865e:	e779      	b.n	90008554 <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008660:	6833      	ldr	r3, [r6, #0]
90008662:	461a      	mov	r2, r3
90008664:	e7cf      	b.n	90008606 <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
90008666:	f1ba 0f00 	cmp.w	sl, #0
9000866a:	f43f af7f 	beq.w	9000856c <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
9000866e:	e77f      	b.n	90008570 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008670:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008672:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
90008674:	2001      	movs	r0, #1
90008676:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000867a:	4313      	orrs	r3, r2
9000867c:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000867e:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008682:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90008686:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000868a:	685a      	ldr	r2, [r3, #4]
9000868c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90008690:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008692:	f7ff f9fb 	bl	90007a8c <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008696:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
90008698:	4604      	mov	r4, r0
9000869a:	e7d4      	b.n	90008646 <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
9000869c:	fe00e800 	.word	0xfe00e800

900086a0 <HAL_I2C_MspInit>:
}
900086a0:	4770      	bx	lr
900086a2:	bf00      	nop

900086a4 <HAL_I2C_Init>:
  if (hi2c == NULL)
900086a4:	2800      	cmp	r0, #0
900086a6:	d04e      	beq.n	90008746 <HAL_I2C_Init+0xa2>
{
900086a8:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
900086aa:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
900086ae:	4604      	mov	r4, r0
900086b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900086b4:	2b00      	cmp	r3, #0
900086b6:	d041      	beq.n	9000873c <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
900086b8:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900086ba:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086bc:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
900086be:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
900086c2:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086c4:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086c8:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
900086ca:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086ce:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
900086d0:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
900086d2:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
900086d4:	689a      	ldr	r2, [r3, #8]
900086d6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
900086da:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
900086dc:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
900086de:	d029      	beq.n	90008734 <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900086e0:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900086e4:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
900086e6:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900086e8:	d102      	bne.n	900086f0 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
900086ea:	f44f 6200 	mov.w	r2, #2048	; 0x800
900086ee:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900086f0:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
900086f2:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900086f6:	4915      	ldr	r1, [pc, #84]	; (9000874c <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
900086f8:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
900086fa:	4301      	orrs	r1, r0
900086fc:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
900086fe:	68d9      	ldr	r1, [r3, #12]
90008700:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
90008704:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008706:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000870a:	4302      	orrs	r2, r0
9000870c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008710:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008714:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008716:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008718:	4301      	orrs	r1, r0
  return HAL_OK;
9000871a:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000871c:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
9000871e:	6819      	ldr	r1, [r3, #0]
90008720:	f041 0101 	orr.w	r1, r1, #1
90008724:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008726:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008728:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
9000872c:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000872e:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
90008732:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008734:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
90008738:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000873a:	e7d9      	b.n	900086f0 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
9000873c:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
90008740:	f7ff ffae 	bl	900086a0 <HAL_I2C_MspInit>
90008744:	e7b8      	b.n	900086b8 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008746:	2001      	movs	r0, #1
}
90008748:	4770      	bx	lr
9000874a:	bf00      	nop
9000874c:	02008000 	.word	0x02008000

90008750 <HAL_I2C_MspDeInit>:
90008750:	4770      	bx	lr
90008752:	bf00      	nop

90008754 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008754:	b1b0      	cbz	r0, 90008784 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008756:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008758:	2324      	movs	r3, #36	; 0x24
{
9000875a:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000875c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
90008760:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008762:	6813      	ldr	r3, [r2, #0]
90008764:	f023 0301 	bic.w	r3, r3, #1
90008768:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000876a:	f7ff fff1 	bl	90008750 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000876e:	2300      	movs	r3, #0
90008770:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
90008772:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008774:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
90008778:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000877c:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000877e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
90008782:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008784:	2001      	movs	r0, #1
}
90008786:	4770      	bx	lr

90008788 <HAL_I2C_Mem_Write>:
{
90008788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000878c:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
9000878e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90008792:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
90008796:	2b20      	cmp	r3, #32
{
90008798:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
9000879a:	d132      	bne.n	90008802 <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
9000879c:	9b08      	ldr	r3, [sp, #32]
9000879e:	4604      	mov	r4, r0
900087a0:	b34b      	cbz	r3, 900087f6 <HAL_I2C_Mem_Write+0x6e>
900087a2:	f1ba 0f00 	cmp.w	sl, #0
900087a6:	d026      	beq.n	900087f6 <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
900087a8:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
900087ac:	2b01      	cmp	r3, #1
900087ae:	d028      	beq.n	90008802 <HAL_I2C_Mem_Write+0x7a>
900087b0:	2301      	movs	r3, #1
900087b2:	460e      	mov	r6, r1
900087b4:	4691      	mov	r9, r2
900087b6:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
900087ba:	f7ff f967 	bl	90007a8c <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900087be:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
900087c0:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900087c2:	699a      	ldr	r2, [r3, #24]
900087c4:	0411      	lsls	r1, r2, #16
900087c6:	d51f      	bpl.n	90008808 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900087c8:	f7ff f960 	bl	90007a8c <HAL_GetTick>
900087cc:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900087ce:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900087d0:	2819      	cmp	r0, #25
900087d2:	d9f6      	bls.n	900087c2 <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
900087d4:	699a      	ldr	r2, [r3, #24]
900087d6:	0412      	lsls	r2, r2, #16
900087d8:	d5f3      	bpl.n	900087c2 <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087da:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900087dc:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
900087de:	2200      	movs	r2, #0
      return HAL_ERROR;
900087e0:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087e2:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
900087e4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087e8:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900087ea:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900087ee:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
900087f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900087f6:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
900087fa:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900087fc:	6463      	str	r3, [r4, #68]	; 0x44
}
900087fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
90008802:	2002      	movs	r0, #2
}
90008804:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008808:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000880a:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
9000880c:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008810:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008812:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008816:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008818:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000881a:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000881c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008820:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008822:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
90008824:	496d      	ldr	r1, [pc, #436]	; (900089dc <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
90008826:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000882a:	685a      	ldr	r2, [r3, #4]
9000882c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000882e:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
90008832:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90008836:	496a      	ldr	r1, [pc, #424]	; (900089e0 <HAL_I2C_Mem_Write+0x258>)
90008838:	4332      	orrs	r2, r6
9000883a:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000883c:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
9000883e:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008840:	4639      	mov	r1, r7
90008842:	f7ff fdbb 	bl	900083bc <I2C_WaitOnTXISFlagUntilTimeout>
90008846:	2800      	cmp	r0, #0
90008848:	d175      	bne.n	90008936 <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000884a:	f1b8 0f01 	cmp.w	r8, #1
9000884e:	d00a      	beq.n	90008866 <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008850:	ea4f 2219 	mov.w	r2, r9, lsr #8
90008854:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008856:	4639      	mov	r1, r7
90008858:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000885a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000885c:	462a      	mov	r2, r5
9000885e:	f7ff fdad 	bl	900083bc <I2C_WaitOnTXISFlagUntilTimeout>
90008862:	2800      	cmp	r0, #0
90008864:	d167      	bne.n	90008936 <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008866:	fa5f f389 	uxtb.w	r3, r9
9000886a:	6822      	ldr	r2, [r4, #0]
9000886c:	6293      	str	r3, [r2, #40]	; 0x28
9000886e:	1c78      	adds	r0, r7, #1
90008870:	d14a      	bne.n	90008908 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008872:	6993      	ldr	r3, [r2, #24]
90008874:	0619      	lsls	r1, r3, #24
90008876:	d5fc      	bpl.n	90008872 <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008878:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
9000887a:	b29b      	uxth	r3, r3
9000887c:	2bff      	cmp	r3, #255	; 0xff
9000887e:	f240 808a 	bls.w	90008996 <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
90008882:	6853      	ldr	r3, [r2, #4]
90008884:	4957      	ldr	r1, [pc, #348]	; (900089e4 <HAL_I2C_Mem_Write+0x25c>)
90008886:	400b      	ands	r3, r1
90008888:	4957      	ldr	r1, [pc, #348]	; (900089e8 <HAL_I2C_Mem_Write+0x260>)
9000888a:	4333      	orrs	r3, r6
9000888c:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
9000888e:	23ff      	movs	r3, #255	; 0xff
90008890:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008892:	6051      	str	r1, [r2, #4]
90008894:	f8df 814c 	ldr.w	r8, [pc, #332]	; 900089e4 <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008898:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
9000889c:	f8df 9148 	ldr.w	r9, [pc, #328]	; 900089e8 <HAL_I2C_Mem_Write+0x260>
900088a0:	e004      	b.n	900088ac <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
900088a2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900088a4:	b29b      	uxth	r3, r3
900088a6:	2b00      	cmp	r3, #0
900088a8:	f000 8083 	beq.w	900089b2 <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900088ac:	462a      	mov	r2, r5
900088ae:	4639      	mov	r1, r7
900088b0:	4620      	mov	r0, r4
900088b2:	f7ff fd83 	bl	900083bc <I2C_WaitOnTXISFlagUntilTimeout>
900088b6:	2800      	cmp	r0, #0
900088b8:	d16b      	bne.n	90008992 <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900088ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
900088bc:	6821      	ldr	r1, [r4, #0]
900088be:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
900088c2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
900088c4:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
900088c6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
900088c8:	3b01      	subs	r3, #1
      hi2c->XferCount--;
900088ca:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
900088cc:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900088ce:	3a01      	subs	r2, #1
      hi2c->XferSize--;
900088d0:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
900088d2:	b292      	uxth	r2, r2
900088d4:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900088d6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
900088d8:	b292      	uxth	r2, r2
900088da:	2a00      	cmp	r2, #0
900088dc:	d0e1      	beq.n	900088a2 <HAL_I2C_Mem_Write+0x11a>
900088de:	2b00      	cmp	r3, #0
900088e0:	d1df      	bne.n	900088a2 <HAL_I2C_Mem_Write+0x11a>
900088e2:	1c78      	adds	r0, r7, #1
900088e4:	d12c      	bne.n	90008940 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900088e6:	698b      	ldr	r3, [r1, #24]
900088e8:	061a      	lsls	r2, r3, #24
900088ea:	d5fc      	bpl.n	900088e6 <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900088ec:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900088ee:	b29b      	uxth	r3, r3
900088f0:	2bff      	cmp	r3, #255	; 0xff
900088f2:	d940      	bls.n	90008976 <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
900088f4:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900088f6:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900088fa:	ea03 0308 	and.w	r3, r3, r8
900088fe:	4333      	orrs	r3, r6
90008900:	ea43 0309 	orr.w	r3, r3, r9
90008904:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008906:	e7cc      	b.n	900088a2 <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008908:	6993      	ldr	r3, [r2, #24]
9000890a:	061b      	lsls	r3, r3, #24
9000890c:	d4b4      	bmi.n	90008878 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000890e:	f7ff f8bd 	bl	90007a8c <HAL_GetTick>
90008912:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008914:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008916:	4287      	cmp	r7, r0
90008918:	d301      	bcc.n	9000891e <HAL_I2C_Mem_Write+0x196>
9000891a:	2f00      	cmp	r7, #0
9000891c:	d1a7      	bne.n	9000886e <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000891e:	6993      	ldr	r3, [r2, #24]
90008920:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008924:	d1a3      	bne.n	9000886e <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008926:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008928:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000892a:	430a      	orrs	r2, r1
9000892c:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000892e:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008932:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008936:	2300      	movs	r3, #0
      return HAL_ERROR;
90008938:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
9000893a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
9000893e:	e75e      	b.n	900087fe <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008940:	698b      	ldr	r3, [r1, #24]
90008942:	061b      	lsls	r3, r3, #24
90008944:	d4d2      	bmi.n	900088ec <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008946:	f7ff f8a1 	bl	90007a8c <HAL_GetTick>
9000894a:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000894c:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000894e:	4287      	cmp	r7, r0
90008950:	d301      	bcc.n	90008956 <HAL_I2C_Mem_Write+0x1ce>
90008952:	2f00      	cmp	r7, #0
90008954:	d1c5      	bne.n	900088e2 <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008956:	698b      	ldr	r3, [r1, #24]
90008958:	f013 0380 	ands.w	r3, r3, #128	; 0x80
9000895c:	d1c1      	bne.n	900088e2 <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000895e:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008960:	2120      	movs	r1, #32
          return HAL_ERROR;
90008962:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008964:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008968:	430a      	orrs	r2, r1
9000896a:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000896c:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008970:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90008974:	e743      	b.n	900087fe <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
90008976:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008978:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000897a:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
9000897c:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000897e:	684b      	ldr	r3, [r1, #4]
90008980:	ea03 0308 	and.w	r3, r3, r8
90008984:	4333      	orrs	r3, r6
90008986:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000898a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
9000898e:	604b      	str	r3, [r1, #4]
}
90008990:	e787      	b.n	900088a2 <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90008992:	2001      	movs	r0, #1
90008994:	e733      	b.n	900087fe <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
90008996:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008998:	4812      	ldr	r0, [pc, #72]	; (900089e4 <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
9000899a:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000899c:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
9000899e:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900089a0:	6853      	ldr	r3, [r2, #4]
900089a2:	4003      	ands	r3, r0
900089a4:	4333      	orrs	r3, r6
900089a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
900089aa:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
900089ae:	6053      	str	r3, [r2, #4]
}
900089b0:	e770      	b.n	90008894 <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
900089b2:	462a      	mov	r2, r5
900089b4:	4639      	mov	r1, r7
900089b6:	4620      	mov	r0, r4
900089b8:	f7ff fdb6 	bl	90008528 <I2C_WaitOnSTOPFlagUntilTimeout>
900089bc:	2800      	cmp	r0, #0
900089be:	d1e8      	bne.n	90008992 <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900089c0:	6823      	ldr	r3, [r4, #0]
900089c2:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
900089c4:	4d09      	ldr	r5, [pc, #36]	; (900089ec <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900089c6:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
900089c8:	685a      	ldr	r2, [r3, #4]
900089ca:	402a      	ands	r2, r5
900089cc:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
900089ce:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
900089d2:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
900089d6:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
900089da:	e710      	b.n	900087fe <HAL_I2C_Mem_Write+0x76>
900089dc:	fc009800 	.word	0xfc009800
900089e0:	01002000 	.word	0x01002000
900089e4:	fc009c00 	.word	0xfc009c00
900089e8:	01ff0000 	.word	0x01ff0000
900089ec:	fe00e800 	.word	0xfe00e800

900089f0 <HAL_I2C_Mem_Read>:
{
900089f0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900089f4:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900089f6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
900089fa:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
900089fe:	2b20      	cmp	r3, #32
{
90008a00:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008a02:	d137      	bne.n	90008a74 <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
90008a04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90008a06:	4683      	mov	fp, r0
90008a08:	b36b      	cbz	r3, 90008a66 <HAL_I2C_Mem_Read+0x76>
90008a0a:	f1b9 0f00 	cmp.w	r9, #0
90008a0e:	d02a      	beq.n	90008a66 <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90008a10:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90008a14:	2b01      	cmp	r3, #1
90008a16:	d02d      	beq.n	90008a74 <HAL_I2C_Mem_Read+0x84>
90008a18:	2301      	movs	r3, #1
90008a1a:	460f      	mov	r7, r1
90008a1c:	4690      	mov	r8, r2
90008a1e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90008a22:	f7ff f833 	bl	90007a8c <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a26:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90008a2a:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a2c:	699a      	ldr	r2, [r3, #24]
90008a2e:	0410      	lsls	r0, r2, #16
90008a30:	d523      	bpl.n	90008a7a <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a32:	f7ff f82b 	bl	90007a8c <HAL_GetTick>
90008a36:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a38:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a3c:	2819      	cmp	r0, #25
90008a3e:	d9f5      	bls.n	90008a2c <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a40:	699a      	ldr	r2, [r3, #24]
90008a42:	0411      	lsls	r1, r2, #16
90008a44:	d5f2      	bpl.n	90008a2c <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a46:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a4a:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a4c:	2200      	movs	r2, #0
      return HAL_ERROR;
90008a4e:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a50:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008a52:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a56:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a5a:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a5e:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90008a62:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008a66:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90008a6a:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008a6c:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90008a70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90008a74:	2002      	movs	r0, #2
}
90008a76:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008a7a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008a7c:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008a7e:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008a82:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008a84:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a88:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008a8a:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a8e:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008a90:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008a94:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008a98:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90008a9c:	4983      	ldr	r1, [pc, #524]	; (90008cac <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90008a9e:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008aa2:	685a      	ldr	r2, [r3, #4]
90008aa4:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008aa6:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
90008aa8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008aac:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008aae:	433a      	orrs	r2, r7
90008ab0:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90008ab4:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ab6:	4632      	mov	r2, r6
90008ab8:	f7ff fc80 	bl	900083bc <I2C_WaitOnTXISFlagUntilTimeout>
90008abc:	2800      	cmp	r0, #0
90008abe:	f040 8091 	bne.w	90008be4 <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008ac2:	2c01      	cmp	r4, #1
90008ac4:	d00c      	beq.n	90008ae0 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008ac6:	ea4f 2218 	mov.w	r2, r8, lsr #8
90008aca:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ace:	4629      	mov	r1, r5
90008ad0:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008ad2:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008ad4:	4632      	mov	r2, r6
90008ad6:	f7ff fc71 	bl	900083bc <I2C_WaitOnTXISFlagUntilTimeout>
90008ada:	2800      	cmp	r0, #0
90008adc:	f040 8082 	bne.w	90008be4 <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008ae0:	fa5f f388 	uxtb.w	r3, r8
90008ae4:	f8db 4000 	ldr.w	r4, [fp]
90008ae8:	62a3      	str	r3, [r4, #40]	; 0x28
90008aea:	1c6a      	adds	r2, r5, #1
90008aec:	d160      	bne.n	90008bb0 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008aee:	69a3      	ldr	r3, [r4, #24]
90008af0:	065b      	lsls	r3, r3, #25
90008af2:	d5fc      	bpl.n	90008aee <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008af4:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008af8:	b29b      	uxth	r3, r3
90008afa:	2bff      	cmp	r3, #255	; 0xff
90008afc:	f240 80ae 	bls.w	90008c5c <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008b00:	6863      	ldr	r3, [r4, #4]
90008b02:	4a6a      	ldr	r2, [pc, #424]	; (90008cac <HAL_I2C_Mem_Read+0x2bc>)
90008b04:	4013      	ands	r3, r2
90008b06:	4a6a      	ldr	r2, [pc, #424]	; (90008cb0 <HAL_I2C_Mem_Read+0x2c0>)
90008b08:	433b      	orrs	r3, r7
90008b0a:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008b0c:	23ff      	movs	r3, #255	; 0xff
90008b0e:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008b12:	6062      	str	r2, [r4, #4]
90008b14:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 90008cbc <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008b18:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008b1c:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 90008cc0 <HAL_I2C_Mem_Read+0x2d0>
90008b20:	1c69      	adds	r1, r5, #1
90008b22:	d127      	bne.n	90008b74 <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b24:	69a3      	ldr	r3, [r4, #24]
90008b26:	075a      	lsls	r2, r3, #29
90008b28:	d5fc      	bpl.n	90008b24 <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008b2a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008b2c:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90008b30:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90008b32:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
90008b36:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
90008b3a:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90008b3c:	3301      	adds	r3, #1
      hi2c->XferCount--;
90008b3e:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90008b40:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90008b44:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
90008b48:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008b4c:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b4e:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008b52:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b54:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90008b56:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008b5a:	b10a      	cbz	r2, 90008b60 <HAL_I2C_Mem_Read+0x170>
90008b5c:	2b00      	cmp	r3, #0
90008b5e:	d046      	beq.n	90008bee <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90008b60:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008b64:	b29b      	uxth	r3, r3
90008b66:	2b00      	cmp	r3, #0
90008b68:	f000 8088 	beq.w	90008c7c <HAL_I2C_Mem_Read+0x28c>
90008b6c:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b6e:	f8db 4000 	ldr.w	r4, [fp]
90008b72:	d0d7      	beq.n	90008b24 <HAL_I2C_Mem_Read+0x134>
90008b74:	69a3      	ldr	r3, [r4, #24]
90008b76:	075b      	lsls	r3, r3, #29
90008b78:	d4d7      	bmi.n	90008b2a <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b7a:	f7fe ff87 	bl	90007a8c <HAL_GetTick>
90008b7e:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b80:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b84:	4285      	cmp	r5, r0
90008b86:	d301      	bcc.n	90008b8c <HAL_I2C_Mem_Read+0x19c>
90008b88:	2d00      	cmp	r5, #0
90008b8a:	d1c9      	bne.n	90008b20 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008b8c:	69a3      	ldr	r3, [r4, #24]
90008b8e:	f013 0304 	ands.w	r3, r3, #4
90008b92:	d1c5      	bne.n	90008b20 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008b94:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008b98:	2120      	movs	r1, #32
          return HAL_ERROR;
90008b9a:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008b9c:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008ba0:	430a      	orrs	r2, r1
90008ba2:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008ba6:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008baa:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90008bae:	e75f      	b.n	90008a70 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008bb0:	69a3      	ldr	r3, [r4, #24]
90008bb2:	0658      	lsls	r0, r3, #25
90008bb4:	d49e      	bmi.n	90008af4 <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008bb6:	f7fe ff69 	bl	90007a8c <HAL_GetTick>
90008bba:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008bbc:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008bc0:	4285      	cmp	r5, r0
90008bc2:	d301      	bcc.n	90008bc8 <HAL_I2C_Mem_Read+0x1d8>
90008bc4:	2d00      	cmp	r5, #0
90008bc6:	d190      	bne.n	90008aea <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008bc8:	69a3      	ldr	r3, [r4, #24]
90008bca:	f013 0340 	ands.w	r3, r3, #64	; 0x40
90008bce:	d18c      	bne.n	90008aea <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bd0:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008bd4:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bd6:	430a      	orrs	r2, r1
90008bd8:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008bdc:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008be0:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008be4:	2300      	movs	r3, #0
      return HAL_ERROR;
90008be6:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90008be8:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
90008bec:	e740      	b.n	90008a70 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008bee:	f8db 2000 	ldr.w	r2, [fp]
90008bf2:	1c68      	adds	r0, r5, #1
90008bf4:	d111      	bne.n	90008c1a <HAL_I2C_Mem_Read+0x22a>
90008bf6:	6993      	ldr	r3, [r2, #24]
90008bf8:	0619      	lsls	r1, r3, #24
90008bfa:	d5fc      	bpl.n	90008bf6 <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008bfc:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008c00:	b29b      	uxth	r3, r3
90008c02:	2bff      	cmp	r3, #255	; 0xff
90008c04:	d91a      	bls.n	90008c3c <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008c06:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008c08:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008c0c:	ea03 0308 	and.w	r3, r3, r8
90008c10:	433b      	orrs	r3, r7
90008c12:	ea43 0309 	orr.w	r3, r3, r9
90008c16:	6053      	str	r3, [r2, #4]
}
90008c18:	e7a2      	b.n	90008b60 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c1a:	6993      	ldr	r3, [r2, #24]
90008c1c:	061b      	lsls	r3, r3, #24
90008c1e:	d4ed      	bmi.n	90008bfc <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c20:	f7fe ff34 	bl	90007a8c <HAL_GetTick>
90008c24:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c26:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008c2a:	4285      	cmp	r5, r0
90008c2c:	d301      	bcc.n	90008c32 <HAL_I2C_Mem_Read+0x242>
90008c2e:	2d00      	cmp	r5, #0
90008c30:	d1df      	bne.n	90008bf2 <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008c32:	6993      	ldr	r3, [r2, #24]
90008c34:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008c38:	d1db      	bne.n	90008bf2 <HAL_I2C_Mem_Read+0x202>
90008c3a:	e7ab      	b.n	90008b94 <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90008c3c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008c40:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008c42:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90008c44:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008c48:	6853      	ldr	r3, [r2, #4]
90008c4a:	ea03 0308 	and.w	r3, r3, r8
90008c4e:	433b      	orrs	r3, r7
90008c50:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008c54:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008c58:	6053      	str	r3, [r2, #4]
}
90008c5a:	e781      	b.n	90008b60 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90008c5c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008c60:	4912      	ldr	r1, [pc, #72]	; (90008cac <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90008c62:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008c64:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90008c66:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008c6a:	6863      	ldr	r3, [r4, #4]
90008c6c:	400b      	ands	r3, r1
90008c6e:	433b      	orrs	r3, r7
90008c70:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008c74:	4a0f      	ldr	r2, [pc, #60]	; (90008cb4 <HAL_I2C_Mem_Read+0x2c4>)
90008c76:	431a      	orrs	r2, r3
90008c78:	6062      	str	r2, [r4, #4]
}
90008c7a:	e74b      	b.n	90008b14 <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008c7c:	4632      	mov	r2, r6
90008c7e:	4629      	mov	r1, r5
90008c80:	4658      	mov	r0, fp
90008c82:	f7ff fc51 	bl	90008528 <I2C_WaitOnSTOPFlagUntilTimeout>
90008c86:	b970      	cbnz	r0, 90008ca6 <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008c88:	f8db 3000 	ldr.w	r3, [fp]
90008c8c:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008c8e:	4c0a      	ldr	r4, [pc, #40]	; (90008cb8 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008c90:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008c92:	685a      	ldr	r2, [r3, #4]
90008c94:	4022      	ands	r2, r4
90008c96:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008c98:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008c9c:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008ca0:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90008ca4:	e6e4      	b.n	90008a70 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
90008ca6:	2001      	movs	r0, #1
90008ca8:	e6e2      	b.n	90008a70 <HAL_I2C_Mem_Read+0x80>
90008caa:	bf00      	nop
90008cac:	fc009800 	.word	0xfc009800
90008cb0:	01ff2400 	.word	0x01ff2400
90008cb4:	02002400 	.word	0x02002400
90008cb8:	fe00e800 	.word	0xfe00e800
90008cbc:	fc009c00 	.word	0xfc009c00
90008cc0:	01ff0000 	.word	0x01ff0000

90008cc4 <HAL_I2C_GetState>:
  return hi2c->State;
90008cc4:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90008cc8:	4770      	bx	lr
90008cca:	bf00      	nop

90008ccc <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008ccc:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90008cce:	4770      	bx	lr

90008cd0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008cd0:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008cd4:	2a20      	cmp	r2, #32
90008cd6:	d123      	bne.n	90008d20 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008cd8:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008cdc:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008ce0:	4603      	mov	r3, r0
90008ce2:	2a01      	cmp	r2, #1
90008ce4:	d01c      	beq.n	90008d20 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008ce6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008ce8:	2024      	movs	r0, #36	; 0x24
{
90008cea:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008cec:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008cf0:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008cf4:	6810      	ldr	r0, [r2, #0]
90008cf6:	f020 0001 	bic.w	r0, r0, #1
90008cfa:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008cfc:	6810      	ldr	r0, [r2, #0]
90008cfe:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
90008d02:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008d04:	6810      	ldr	r0, [r2, #0]
90008d06:	4301      	orrs	r1, r0

    return HAL_OK;
90008d08:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90008d0a:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008d0c:	6811      	ldr	r1, [r2, #0]
90008d0e:	f041 0101 	orr.w	r1, r1, #1
90008d12:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008d14:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008d18:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008d1c:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008d20:	2002      	movs	r0, #2
}
90008d22:	4770      	bx	lr

90008d24 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008d24:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008d28:	2a20      	cmp	r2, #32
90008d2a:	d122      	bne.n	90008d72 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008d2c:	4603      	mov	r3, r0
{
90008d2e:	b500      	push	{lr}
90008d30:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008d34:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008d38:	2a01      	cmp	r2, #1
90008d3a:	d01c      	beq.n	90008d76 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008d3c:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008d3e:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008d40:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008d44:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90008d48:	6810      	ldr	r0, [r2, #0]
90008d4a:	f020 0001 	bic.w	r0, r0, #1
90008d4e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008d50:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008d52:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90008d56:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008d5a:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008d5c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008d5e:	6811      	ldr	r1, [r2, #0]
90008d60:	f041 0101 	orr.w	r1, r1, #1
90008d64:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008d66:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008d6a:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008d6e:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008d72:	2002      	movs	r0, #2
}
90008d74:	4770      	bx	lr
    return HAL_BUSY;
90008d76:	2002      	movs	r0, #2
}
90008d78:	f85d fb04 	ldr.w	pc, [sp], #4

90008d7c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008d80:	460d      	mov	r5, r1
90008d82:	4614      	mov	r4, r2
90008d84:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008d86:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90008d88:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90008d8a:	2701      	movs	r7, #1
  p = 0;
90008d8c:	f04f 0800 	mov.w	r8, #0
90008d90:	e006      	b.n	90008da0 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90008d92:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90008d96:	eb06 0308 	add.w	r3, r6, r8
90008d9a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90008d9e:	d837      	bhi.n	90008e10 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008da0:	eb05 0008 	add.w	r0, r5, r8
90008da4:	4632      	mov	r2, r6
90008da6:	4639      	mov	r1, r7
    while (i != 0UL)
90008da8:	b116      	cbz	r6, 90008db0 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90008daa:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008dac:	f01d fc50 	bl	90026650 <memset>
  for (l = 0; l < 16UL; l++)
90008db0:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008db2:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90008db6:	d1ec      	bne.n	90008d92 <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90008db8:	2300      	movs	r3, #0
90008dba:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90008dbe:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008dc2:	7828      	ldrb	r0, [r5, #0]
90008dc4:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90008dc6:	b300      	cbz	r0, 90008e0a <JPEG_Bits_To_SizeCodes+0x8e>
90008dc8:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008dcc:	2701      	movs	r7, #1
  p = 0;
90008dce:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90008dd0:	4288      	cmp	r0, r1
90008dd2:	d10f      	bne.n	90008df4 <JPEG_Bits_To_SizeCodes+0x78>
90008dd4:	eb02 0008 	add.w	r0, r2, r8
90008dd8:	1c56      	adds	r6, r2, #1
90008dda:	eb05 0c02 	add.w	ip, r5, r2
90008dde:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90008de2:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90008de4:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90008de8:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90008dea:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008dee:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008df0:	458e      	cmp	lr, r1
90008df2:	d0f7      	beq.n	90008de4 <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90008df4:	291f      	cmp	r1, #31
90008df6:	d80b      	bhi.n	90008e10 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008df8:	fa07 f001 	lsl.w	r0, r7, r1
90008dfc:	4298      	cmp	r0, r3
90008dfe:	d907      	bls.n	90008e10 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90008e00:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008e02:	005b      	lsls	r3, r3, #1
    si++;
90008e04:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90008e06:	2800      	cmp	r0, #0
90008e08:	d1e2      	bne.n	90008dd0 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
90008e0a:	2000      	movs	r0, #0
}
90008e0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90008e10:	2001      	movs	r0, #1
}
90008e12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008e16:	bf00      	nop

90008e18 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008e18:	b5f0      	push	{r4, r5, r6, r7, lr}
90008e1a:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
90008e1e:	460d      	mov	r5, r1
90008e20:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008e22:	ab01      	add	r3, sp, #4
90008e24:	aa43      	add	r2, sp, #268	; 0x10c
90008e26:	a902      	add	r1, sp, #8
90008e28:	f7ff ffa8 	bl	90008d7c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008e2c:	b9d0      	cbnz	r0, 90008e64 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008e2e:	9f01      	ldr	r7, [sp, #4]
90008e30:	b1c7      	cbz	r7, 90008e64 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008e32:	370f      	adds	r7, #15
90008e34:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90008e38:	a902      	add	r1, sp, #8
90008e3a:	f104 0c0f 	add.w	ip, r4, #15
90008e3e:	4427      	add	r7, r4
90008e40:	e009      	b.n	90008e56 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e42:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008e46:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e48:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e4c:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e50:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008e52:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008e54:	d006      	beq.n	90008e64 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008e56:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008e5a:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008e5c:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008e60:	d9ef      	bls.n	90008e42 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008e62:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008e64:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90008e68:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008e6a:	bf00      	nop

90008e6c <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008e70:	6804      	ldr	r4, [r0, #0]
{
90008e72:	b093      	sub	sp, #76	; 0x4c
90008e74:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008e76:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
90008e7a:	429a      	cmp	r2, r3
90008e7c:	f000 809d 	beq.w	90008fba <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008e80:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
90008e84:	429a      	cmp	r2, r3
90008e86:	d003      	beq.n	90008e90 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008e88:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008e8a:	b013      	add	sp, #76	; 0x4c
90008e8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008e90:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008e94:	a903      	add	r1, sp, #12
90008e96:	f7ff ffbf 	bl	90008e18 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90008e9a:	2800      	cmp	r0, #0
90008e9c:	d1f5      	bne.n	90008e8a <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90008e9e:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ea2:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ea6:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90008eaa:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eac:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90008eb0:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eb2:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008eb6:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eba:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
90008ebe:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ec2:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
90008ec6:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ec8:	f89d 9015 	ldrb.w	r9, [sp, #21]
90008ecc:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ed0:	f89d c014 	ldrb.w	ip, [sp, #20]
90008ed4:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ed8:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008edc:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ee0:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ee4:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ee6:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008eea:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90008eee:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
90008ef2:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008ef6:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008efa:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008efe:	f89d 7011 	ldrb.w	r7, [sp, #17]
90008f02:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f06:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90008f08:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f0c:	f89d 2010 	ldrb.w	r2, [sp, #16]
90008f10:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f14:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
90008f16:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f1a:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f1c:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90008f20:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f24:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f28:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008f2c:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f30:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f34:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f36:	9b01      	ldr	r3, [sp, #4]
90008f38:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f3c:	f89d 500d 	ldrb.w	r5, [sp, #13]
90008f40:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f44:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008f48:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f4c:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
90008f4e:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f52:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f56:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90008f5a:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f5e:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f62:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f66:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
90008f6a:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
90008f6e:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
90008f72:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f76:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
90008f7a:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f7c:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
90008f80:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
90008f82:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90008f86:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f8a:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
90008f8e:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f90:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008f94:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90008f96:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90008f9a:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008f9e:	f89d 301c 	ldrb.w	r3, [sp, #28]
90008fa2:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008fa4:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008fa8:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008fac:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90008fb0:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008fb4:	b013      	add	sp, #76	; 0x4c
90008fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008fba:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
90008fbe:	e769      	b.n	90008e94 <JPEG_Set_HuffDC_Mem+0x28>

90008fc0 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90008fc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008fc4:	6804      	ldr	r4, [r0, #0]
{
90008fc6:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
90008fca:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90008fcc:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90008fd0:	429a      	cmp	r2, r3
90008fd2:	d042      	beq.n	9000905a <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
90008fd4:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
90008fd8:	429a      	cmp	r2, r3
90008fda:	d004      	beq.n	90008fe6 <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008fdc:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008fde:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90008fe2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008fe6:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008fea:	4628      	mov	r0, r5
90008fec:	466b      	mov	r3, sp
90008fee:	f20d 4234 	addw	r2, sp, #1076	; 0x434
90008ff2:	a901      	add	r1, sp, #4
90008ff4:	f7ff fec2 	bl	90008d7c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008ff8:	2800      	cmp	r0, #0
90008ffa:	d1f0      	bne.n	90008fde <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90008ffc:	9b00      	ldr	r3, [sp, #0]
90008ffe:	b37b      	cbz	r3, 90009060 <JPEG_Set_HuffAC_Mem+0xa0>
90009000:	330f      	adds	r3, #15
90009002:	f20d 4734 	addw	r7, sp, #1076	; 0x434
90009006:	f10d 0c04 	add.w	ip, sp, #4
9000900a:	f105 020f 	add.w	r2, r5, #15
9000900e:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009012:	ae42      	add	r6, sp, #264	; 0x108
90009014:	e011      	b.n	9000903a <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
90009016:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
9000901a:	2ba1      	cmp	r3, #161	; 0xa1
9000901c:	d8de      	bhi.n	90008fdc <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000901e:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009022:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90009026:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
9000902a:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000902c:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009030:	4631      	mov	r1, r6
90009032:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009036:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90009038:	d013      	beq.n	90009062 <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
9000903a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
9000903e:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
90009040:	2900      	cmp	r1, #0
90009042:	d0ec      	beq.n	9000901e <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
90009044:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90009046:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000904a:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
9000904c:	eb05 0585 	add.w	r5, r5, r5, lsl #2
90009050:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90009054:	d1df      	bne.n	90009016 <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
90009056:	23a1      	movs	r3, #161	; 0xa1
90009058:	e7e1      	b.n	9000901e <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000905a:	f204 6444 	addw	r4, r4, #1604	; 0x644
9000905e:	e7c4      	b.n	90008fea <JPEG_Set_HuffAC_Mem+0x2a>
90009060:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
90009062:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
90009066:	4a1a      	ldr	r2, [pc, #104]	; (900090d0 <JPEG_Set_HuffAC_Mem+0x110>)
90009068:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
9000906c:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
90009070:	6023      	str	r3, [r4, #0]
90009072:	6063      	str	r3, [r4, #4]
90009074:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
90009078:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
9000907a:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000907e:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
90009080:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
90009084:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
90009088:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
9000908a:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
9000908e:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
90009090:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
90009094:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009096:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000909a:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000909e:	0212      	lsls	r2, r2, #8
900090a0:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900090a4:	021b      	lsls	r3, r3, #8
900090a6:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900090aa:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
900090ae:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900090b0:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900090b4:	433a      	orrs	r2, r7
    while (i > 1UL)
900090b6:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900090b8:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
900090bc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900090c0:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900090c4:	d1e7      	bne.n	90009096 <JPEG_Set_HuffAC_Mem+0xd6>
}
900090c6:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
900090ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900090ce:	bf00      	nop
900090d0:	0fd10fd0 	.word	0x0fd10fd0

900090d4 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900090d4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900090d6:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
900090da:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900090dc:	6d43      	ldr	r3, [r0, #84]	; 0x54
900090de:	f003 0303 	and.w	r3, r3, #3
900090e2:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900090e4:	6803      	ldr	r3, [r0, #0]
900090e6:	685a      	ldr	r2, [r3, #4]
900090e8:	bf0c      	ite	eq
900090ea:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
900090ee:	f022 0208 	bicne.w	r2, r2, #8
900090f2:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090f4:	681a      	ldr	r2, [r3, #0]
900090f6:	f022 0201 	bic.w	r2, r2, #1
900090fa:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900090fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900090fe:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009102:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009104:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009106:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
9000910a:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
9000910c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000910e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90009112:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009114:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009116:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000911a:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
9000911c:	681a      	ldr	r2, [r3, #0]
9000911e:	f042 0201 	orr.w	r2, r2, #1
90009122:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009124:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009126:	f002 020c 	and.w	r2, r2, #12
9000912a:	2a08      	cmp	r2, #8
9000912c:	d00a      	beq.n	90009144 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000912e:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009130:	f002 020c 	and.w	r2, r2, #12
90009134:	2a0c      	cmp	r2, #12
90009136:	d000      	beq.n	9000913a <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90009138:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000913a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000913c:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009140:	631a      	str	r2, [r3, #48]	; 0x30
}
90009142:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90009144:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009146:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
9000914a:	631a      	str	r2, [r3, #48]	; 0x30
9000914c:	4770      	bx	lr
9000914e:	bf00      	nop

90009150 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009150:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009152:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
90009154:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009156:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
90009158:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000915a:	42aa      	cmp	r2, r5
9000915c:	d32d      	bcc.n	900091ba <JPEG_DMA_StartProcess+0x6a>
9000915e:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009160:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009162:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009164:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90009166:	42b3      	cmp	r3, r6
90009168:	d327      	bcc.n	900091ba <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000916a:	4f1b      	ldr	r7, [pc, #108]	; (900091d8 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000916c:	f8df c074 	ldr.w	ip, [pc, #116]	; 900091e4 <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90009170:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90009172:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90009176:	4919      	ldr	r1, [pc, #100]	; (900091dc <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90009178:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
9000917a:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
9000917c:	4918      	ldr	r1, [pc, #96]	; (900091e0 <JPEG_DMA_StartProcess+0x90>)
9000917e:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
90009180:	b1a5      	cbz	r5, 900091ac <JPEG_DMA_StartProcess+0x5c>
90009182:	b19e      	cbz	r6, 900091ac <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009184:	fbb2 f1f5 	udiv	r1, r2, r5
90009188:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000918c:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000918e:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009190:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009192:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009194:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90009196:	fbb3 f2f6 	udiv	r2, r3, r6
9000919a:	fb06 3212 	mls	r2, r6, r2, r3
9000919e:	1a9b      	subs	r3, r3, r2
900091a0:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900091a2:	9500      	str	r5, [sp, #0]
900091a4:	69e2      	ldr	r2, [r4, #28]
900091a6:	f001 fbb5 	bl	9000a914 <HAL_MDMA_Start_IT>
900091aa:	b148      	cbz	r0, 900091c0 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900091ac:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
900091ae:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900091b0:	f043 0304 	orr.w	r3, r3, #4
900091b4:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
900091b6:	b003      	add	sp, #12
900091b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
900091ba:	2001      	movs	r0, #1
}
900091bc:	b003      	add	sp, #12
900091be:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900091c0:	6822      	ldr	r2, [r4, #0]
900091c2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900091c4:	69a1      	ldr	r1, [r4, #24]
900091c6:	3240      	adds	r2, #64	; 0x40
900091c8:	9500      	str	r5, [sp, #0]
900091ca:	6b20      	ldr	r0, [r4, #48]	; 0x30
900091cc:	f001 fba2 	bl	9000a914 <HAL_MDMA_Start_IT>
900091d0:	2800      	cmp	r0, #0
900091d2:	d0f3      	beq.n	900091bc <JPEG_DMA_StartProcess+0x6c>
900091d4:	e7ea      	b.n	900091ac <JPEG_DMA_StartProcess+0x5c>
900091d6:	bf00      	nop
900091d8:	90009709 	.word	0x90009709
900091dc:	90009981 	.word	0x90009981
900091e0:	90009a01 	.word	0x90009a01
900091e4:	90009735 	.word	0x90009735

900091e8 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900091e8:	6803      	ldr	r3, [r0, #0]
900091ea:	685a      	ldr	r2, [r3, #4]
900091ec:	f002 0203 	and.w	r2, r2, #3
900091f0:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
900091f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900091f6:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900091f8:	f000 8094 	beq.w	90009324 <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
900091fc:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900091fe:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009200:	f014 0403 	ands.w	r4, r4, #3
90009204:	d172      	bne.n	900092ec <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009206:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009208:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000920a:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000920c:	68da      	ldr	r2, [r3, #12]
9000920e:	0c12      	lsrs	r2, r2, #16
90009210:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90009212:	4a5f      	ldr	r2, [pc, #380]	; (90009390 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
90009214:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009218:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
9000921c:	2600      	movs	r6, #0
9000921e:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009222:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90009226:	f241 3488 	movw	r4, #5000	; 0x1388
9000922a:	e033      	b.n	90009294 <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000922c:	f892 8001 	ldrb.w	r8, [r2, #1]
90009230:	fb0e f707 	mul.w	r7, lr, r7
90009234:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90009236:	f811 8008 	ldrb.w	r8, [r1, r8]
9000923a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
9000923e:	2f64      	cmp	r7, #100	; 0x64
90009240:	d961      	bls.n	90009306 <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
90009242:	fbb4 f7f7 	udiv	r7, r4, r7
90009246:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009248:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
9000924c:	2f01      	cmp	r7, #1
9000924e:	d03d      	beq.n	900092cc <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009250:	f892 8002 	ldrb.w	r8, [r2, #2]
90009254:	fb0e f707 	mul.w	r7, lr, r7
90009258:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000925a:	f811 8008 	ldrb.w	r8, [r1, r8]
9000925e:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009262:	2f64      	cmp	r7, #100	; 0x64
90009264:	d94a      	bls.n	900092fc <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
90009266:	fbb4 f7f7 	udiv	r7, r4, r7
9000926a:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000926c:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
9000926e:	2b01      	cmp	r3, #1
90009270:	d030      	beq.n	900092d4 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009272:	78d7      	ldrb	r7, [r2, #3]
90009274:	fb0e f303 	mul.w	r3, lr, r3
90009278:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000927a:	5dcf      	ldrb	r7, [r1, r7]
9000927c:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90009280:	2b64      	cmp	r3, #100	; 0x64
90009282:	d94a      	bls.n	9000931a <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
90009284:	fbb4 f3f3 	udiv	r3, r4, r3
90009288:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000928a:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
9000928c:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009290:	4295      	cmp	r5, r2
90009292:	d025      	beq.n	900092e0 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
90009294:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009298:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
9000929a:	2f01      	cmp	r7, #1
9000929c:	d02c      	beq.n	900092f8 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000929e:	f892 8000 	ldrb.w	r8, [r2]
900092a2:	fb0e f707 	mul.w	r7, lr, r7
900092a6:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
900092a8:	f811 8008 	ldrb.w	r8, [r1, r8]
900092ac:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900092b0:	2f64      	cmp	r7, #100	; 0x64
900092b2:	d92d      	bls.n	90009310 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
900092b4:	fbb4 f7f7 	udiv	r7, r4, r7
900092b8:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092ba:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
900092be:	2f01      	cmp	r7, #1
900092c0:	d1b4      	bne.n	9000922c <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092c2:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
900092c6:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
900092c8:	2f01      	cmp	r7, #1
900092ca:	d1c1      	bne.n	90009250 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900092cc:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
900092ce:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
900092d0:	2b01      	cmp	r3, #1
900092d2:	d1ce      	bne.n	90009272 <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900092d4:	3204      	adds	r2, #4
        quality += 100UL;
900092d6:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
900092d8:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900092dc:	4295      	cmp	r5, r2
900092de:	d1d9      	bne.n	90009294 <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
900092e0:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
900092e2:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
900092e4:	f8c9 6010 	str.w	r6, [r9, #16]
}
900092e8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
900092ec:	f002 0203 	and.w	r2, r2, #3
900092f0:	2a03      	cmp	r2, #3
900092f2:	d14a      	bne.n	9000938a <HAL_JPEG_GetInfo.part.0+0x1a2>
900092f4:	2430      	movs	r4, #48	; 0x30
900092f6:	e016      	b.n	90009326 <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
900092f8:	3664      	adds	r6, #100	; 0x64
900092fa:	e7de      	b.n	900092ba <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
900092fc:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009300:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009304:	e7b2      	b.n	9000926c <HAL_JPEG_GetInfo.part.0+0x84>
90009306:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000930a:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000930e:	e79b      	b.n	90009248 <HAL_JPEG_GetInfo.part.0+0x60>
90009310:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009314:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009318:	e7cf      	b.n	900092ba <HAL_JPEG_GetInfo.part.0+0xd2>
9000931a:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
9000931e:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90009322:	e7b2      	b.n	9000928a <HAL_JPEG_GetInfo.part.0+0xa2>
90009324:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009326:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009328:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000932c:	0c12      	lsrs	r2, r2, #16
9000932e:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009332:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009334:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009336:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009338:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
9000933a:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
9000933c:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009340:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90009344:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90009348:	ea4f 1215 	mov.w	r2, r5, lsr #4
9000934c:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90009350:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009354:	d108      	bne.n	90009368 <HAL_JPEG_GetInfo.part.0+0x180>
90009356:	2d01      	cmp	r5, #1
90009358:	d106      	bne.n	90009368 <HAL_JPEG_GetInfo.part.0+0x180>
9000935a:	f016 0f0f 	tst.w	r6, #15
9000935e:	bf0c      	ite	eq
90009360:	2401      	moveq	r4, #1
90009362:	2400      	movne	r4, #0
90009364:	0064      	lsls	r4, r4, #1
90009366:	e754      	b.n	90009212 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009368:	ea42 020c 	orr.w	r2, r2, ip
9000936c:	f012 040f 	ands.w	r4, r2, #15
90009370:	f43f af4f 	beq.w	90009212 <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90009374:	ea4c 0206 	orr.w	r2, ip, r6
90009378:	f3c2 0203 	ubfx	r2, r2, #0, #4
9000937c:	2d03      	cmp	r5, #3
9000937e:	bf08      	it	eq
90009380:	2a00      	cmpeq	r2, #0
90009382:	bf0c      	ite	eq
90009384:	2401      	moveq	r4, #1
90009386:	2400      	movne	r4, #0
90009388:	e743      	b.n	90009212 <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
9000938a:	2001      	movs	r0, #1
}
9000938c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009390:	90029ecc 	.word	0x90029ecc

90009394 <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90009394:	2800      	cmp	r0, #0
90009396:	f000 810b 	beq.w	900095b0 <HAL_JPEG_Init+0x21c>
{
9000939a:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
9000939c:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
900093a0:	4604      	mov	r4, r0
900093a2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
900093a6:	2b00      	cmp	r3, #0
900093a8:	f000 80fd 	beq.w	900095a6 <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
900093ac:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900093ae:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
900093b0:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900093b2:	4880      	ldr	r0, [pc, #512]	; (900095b4 <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
900093b4:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
900093b8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900093ba:	f041 0101 	orr.w	r1, r1, #1
900093be:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093c0:	6811      	ldr	r1, [r2, #0]
900093c2:	f021 0101 	bic.w	r1, r1, #1
900093c6:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900093c8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900093ca:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
900093ce:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900093d0:	6b11      	ldr	r1, [r2, #48]	; 0x30
900093d2:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
900093d6:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900093d8:	6b11      	ldr	r1, [r2, #48]	; 0x30
900093da:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
900093de:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900093e0:	6b91      	ldr	r1, [r2, #56]	; 0x38
900093e2:	f041 0160 	orr.w	r1, r1, #96	; 0x60
900093e6:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900093e8:	4973      	ldr	r1, [pc, #460]	; (900095b8 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
900093ea:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093ec:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
900093ee:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
900093f0:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
900093f4:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
900093f8:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
900093fc:	4b6f      	ldr	r3, [pc, #444]	; (900095bc <HAL_JPEG_Init+0x228>)
900093fe:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
90009402:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009406:	486e      	ldr	r0, [pc, #440]	; (900095c0 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009408:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000940c:	4b6d      	ldr	r3, [pc, #436]	; (900095c4 <HAL_JPEG_Init+0x230>)
9000940e:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
90009412:	496d      	ldr	r1, [pc, #436]	; (900095c8 <HAL_JPEG_Init+0x234>)
90009414:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009418:	4b6c      	ldr	r3, [pc, #432]	; (900095cc <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000941a:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000941e:	486c      	ldr	r0, [pc, #432]	; (900095d0 <HAL_JPEG_Init+0x23c>)
90009420:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
90009424:	496b      	ldr	r1, [pc, #428]	; (900095d4 <HAL_JPEG_Init+0x240>)
90009426:	4b6c      	ldr	r3, [pc, #432]	; (900095d8 <HAL_JPEG_Init+0x244>)
90009428:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
9000942c:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
90009430:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009434:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
90009438:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
9000943c:	4967      	ldr	r1, [pc, #412]	; (900095dc <HAL_JPEG_Init+0x248>)
9000943e:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90009440:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90009444:	430b      	orrs	r3, r1
  *address = value;
90009446:	4966      	ldr	r1, [pc, #408]	; (900095e0 <HAL_JPEG_Init+0x24c>)
90009448:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
9000944c:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90009450:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
90009454:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009456:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
9000945a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
9000945c:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90009460:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
90009464:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009466:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
9000946a:	ea43 030c 	orr.w	r3, r3, ip
9000946e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009472:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
90009476:	d1eb      	bne.n	90009450 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
90009478:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000947c:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
90009480:	4856      	ldr	r0, [pc, #344]	; (900095dc <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009482:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
90009484:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90009486:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
9000948a:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
9000948e:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
90009492:	4003      	ands	r3, r0
  *address = value;
90009494:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009498:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
9000949c:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
900094a0:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900094a4:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
900094a8:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
900094ac:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
900094ae:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
900094b2:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
900094b6:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
900094ba:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
900094bc:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900094be:	4b49      	ldr	r3, [pc, #292]	; (900095e4 <HAL_JPEG_Init+0x250>)
  *address = value;
900094c0:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900094c4:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900094c8:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
900094cc:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
900094d0:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
900094d4:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
900094d8:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
900094da:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
900094de:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
900094e2:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
900094e6:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094e8:	483f      	ldr	r0, [pc, #252]	; (900095e8 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
900094ea:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094ec:	4b3f      	ldr	r3, [pc, #252]	; (900095ec <HAL_JPEG_Init+0x258>)
  *address = value;
900094ee:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094f2:	493f      	ldr	r1, [pc, #252]	; (900095f0 <HAL_JPEG_Init+0x25c>)
900094f4:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
900094f8:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900094fc:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
90009500:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
90009504:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009508:	493a      	ldr	r1, [pc, #232]	; (900095f4 <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
9000950a:	b29b      	uxth	r3, r3
9000950c:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009510:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
90009514:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009518:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
9000951c:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000951e:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009522:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90009524:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009528:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
9000952c:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
9000952e:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
90009532:	ea43 030e 	orr.w	r3, r3, lr
90009536:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
9000953a:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
9000953e:	d1eb      	bne.n	90009518 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90009540:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
90009544:	4926      	ldr	r1, [pc, #152]	; (900095e0 <HAL_JPEG_Init+0x24c>)
90009546:	4620      	mov	r0, r4
90009548:	f7ff fd3a 	bl	90008fc0 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
9000954c:	b118      	cbz	r0, 90009556 <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
9000954e:	2301      	movs	r3, #1
    return HAL_ERROR;
90009550:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90009552:	6523      	str	r3, [r4, #80]	; 0x50
}
90009554:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
90009556:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90009558:	4620      	mov	r0, r4
9000955a:	4926      	ldr	r1, [pc, #152]	; (900095f4 <HAL_JPEG_Init+0x260>)
9000955c:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
90009560:	f7ff fd2e 	bl	90008fc0 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90009564:	2800      	cmp	r0, #0
90009566:	d1f2      	bne.n	9000954e <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
90009568:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
9000956a:	4620      	mov	r0, r4
9000956c:	4922      	ldr	r1, [pc, #136]	; (900095f8 <HAL_JPEG_Init+0x264>)
9000956e:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
90009572:	f7ff fc7b 	bl	90008e6c <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90009576:	2800      	cmp	r0, #0
90009578:	d1e9      	bne.n	9000954e <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
9000957a:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
9000957c:	4620      	mov	r0, r4
9000957e:	491f      	ldr	r1, [pc, #124]	; (900095fc <HAL_JPEG_Init+0x268>)
90009580:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
90009584:	f7ff fc72 	bl	90008e6c <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90009588:	2800      	cmp	r0, #0
9000958a:	d1e0      	bne.n	9000954e <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
9000958c:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
9000958e:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90009590:	6853      	ldr	r3, [r2, #4]
90009592:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90009596:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
90009598:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
9000959a:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
9000959c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
900095a0:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
900095a2:	6560      	str	r0, [r4, #84]	; 0x54
}
900095a4:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
900095a6:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
900095aa:	f7f9 fe35 	bl	90003218 <HAL_JPEG_MspInit>
900095ae:	e6fd      	b.n	900093ac <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
900095b0:	2001      	movs	r0, #1
}
900095b2:	4770      	bx	lr
900095b4:	90029e8c 	.word	0x90029e8c
900095b8:	90029e14 	.word	0x90029e14
900095bc:	01050100 	.word	0x01050100
900095c0:	0b0a0908 	.word	0x0b0a0908
900095c4:	07060504 	.word	0x07060504
900095c8:	03020100 	.word	0x03020100
900095cc:	7d010000 	.word	0x7d010000
900095d0:	04040505 	.word	0x04040505
900095d4:	03040203 	.word	0x03040203
900095d8:	03010200 	.word	0x03010200
900095dc:	ffff0000 	.word	0xffff0000
900095e0:	90029d60 	.word	0x90029d60
900095e4:	09080706 	.word	0x09080706
900095e8:	01000404 	.word	0x01000404
900095ec:	04040201 	.word	0x04040201
900095f0:	05070403 	.word	0x05070403
900095f4:	90029cac 	.word	0x90029cac
900095f8:	90029e70 	.word	0x90029e70
900095fc:	90029e54 	.word	0x90029e54

90009600 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009600:	2b00      	cmp	r3, #0
90009602:	bf18      	it	ne
90009604:	2900      	cmpne	r1, #0
90009606:	d03b      	beq.n	90009680 <HAL_JPEG_Decode_DMA+0x80>
{
90009608:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
9000960a:	fab0 f580 	clz	r5, r0
9000960e:	4604      	mov	r4, r0
90009610:	096d      	lsrs	r5, r5, #5
90009612:	b330      	cbz	r0, 90009662 <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
90009614:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
90009618:	f1bc 0f01 	cmp.w	ip, #1
9000961c:	d02e      	beq.n	9000967c <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000961e:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
90009622:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009626:	45f4      	cmp	ip, lr
90009628:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
9000962c:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009630:	d119      	bne.n	90009666 <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
90009632:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90009634:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90009638:	9b04      	ldr	r3, [sp, #16]
9000963a:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
9000963c:	2304      	movs	r3, #4
9000963e:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90009642:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009644:	f023 030f 	bic.w	r3, r3, #15
90009648:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
9000964a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000964c:	f043 030e 	orr.w	r3, r3, #14
90009650:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
90009652:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90009654:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
90009656:	f7ff fd3d 	bl	900090d4 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
9000965a:	f7ff fd79 	bl	90009150 <JPEG_DMA_StartProcess>
9000965e:	b930      	cbnz	r0, 9000966e <HAL_JPEG_Decode_DMA+0x6e>
}
90009660:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90009662:	2001      	movs	r0, #1
}
90009664:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
90009666:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
90009668:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
9000966c:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
9000966e:	2306      	movs	r3, #6
      return HAL_ERROR;
90009670:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
90009672:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90009676:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
9000967a:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
9000967c:	2002      	movs	r0, #2
}
9000967e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
90009680:	2001      	movs	r0, #1
}
90009682:	4770      	bx	lr

90009684 <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009684:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009686:	f003 030c 	and.w	r3, r3, #12
9000968a:	2b0c      	cmp	r3, #12
9000968c:	d01a      	beq.n	900096c4 <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000968e:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009690:	f003 030c 	and.w	r3, r3, #12
90009694:	2b08      	cmp	r3, #8
90009696:	d001      	beq.n	9000969c <HAL_JPEG_Pause+0x18>
}
90009698:	2000      	movs	r0, #0
9000969a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000969c:	07ca      	lsls	r2, r1, #31
9000969e:	d41f      	bmi.n	900096e0 <HAL_JPEG_Pause+0x5c>
900096a0:	f04f 3cff 	mov.w	ip, #4294967295
900096a4:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900096a8:	078b      	lsls	r3, r1, #30
900096aa:	d504      	bpl.n	900096b6 <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900096ac:	6d43      	ldr	r3, [r0, #84]	; 0x54
900096ae:	4694      	mov	ip, r2
900096b0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
900096b4:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900096b6:	6802      	ldr	r2, [r0, #0]
}
900096b8:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900096ba:	6b13      	ldr	r3, [r2, #48]	; 0x30
900096bc:	ea03 030c 	and.w	r3, r3, ip
900096c0:	6313      	str	r3, [r2, #48]	; 0x30
}
900096c2:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900096c4:	07cb      	lsls	r3, r1, #31
900096c6:	d503      	bpl.n	900096d0 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900096c8:	6d43      	ldr	r3, [r0, #84]	; 0x54
900096ca:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900096ce:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900096d0:	0789      	lsls	r1, r1, #30
900096d2:	d5e1      	bpl.n	90009698 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
900096d4:	6d43      	ldr	r3, [r0, #84]	; 0x54
900096d6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
900096da:	6543      	str	r3, [r0, #84]	; 0x54
}
900096dc:	2000      	movs	r0, #0
900096de:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900096e0:	6d43      	ldr	r3, [r0, #84]	; 0x54
900096e2:	f06f 0c06 	mvn.w	ip, #6
900096e6:	f06f 022e 	mvn.w	r2, #46	; 0x2e
900096ea:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
900096ee:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900096f0:	e7da      	b.n	900096a8 <HAL_JPEG_Pause+0x24>
900096f2:	bf00      	nop

900096f4 <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
900096f4:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
900096f6:	6282      	str	r2, [r0, #40]	; 0x28
}
900096f8:	4770      	bx	lr
900096fa:	bf00      	nop

900096fc <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
900096fc:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
900096fe:	62c2      	str	r2, [r0, #44]	; 0x2c
}
90009700:	4770      	bx	lr
90009702:	bf00      	nop

90009704 <HAL_JPEG_EncodeCpltCallback>:
90009704:	4770      	bx	lr
90009706:	bf00      	nop

90009708 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009708:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
9000970a:	2101      	movs	r1, #1
{
9000970c:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000970e:	6803      	ldr	r3, [r0, #0]
90009710:	681a      	ldr	r2, [r3, #0]
90009712:	f022 0201 	bic.w	r2, r2, #1
90009716:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000971a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000971e:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009720:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009724:	6d03      	ldr	r3, [r0, #80]	; 0x50
90009726:	f043 0304 	orr.w	r3, r3, #4
9000972a:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
9000972c:	f7f8 f8c2 	bl	900018b4 <HAL_JPEG_ErrorCallback>
}
90009730:	bd08      	pop	{r3, pc}
90009732:	bf00      	nop

90009734 <JPEG_MDMAInCpltCallback>:
{
90009734:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009736:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009738:	f248 010c 	movw	r1, #32780	; 0x800c
{
9000973c:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000973e:	6822      	ldr	r2, [r4, #0]
90009740:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009742:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
90009746:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90009748:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000974a:	400b      	ands	r3, r1
9000974c:	2b0c      	cmp	r3, #12
9000974e:	d001      	beq.n	90009754 <JPEG_MDMAInCpltCallback+0x20>
}
90009750:	b003      	add	sp, #12
90009752:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009754:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009756:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009758:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000975a:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000975c:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000975e:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009762:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009764:	1a9b      	subs	r3, r3, r2
90009766:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009768:	6a21      	ldr	r1, [r4, #32]
9000976a:	f7f8 f82f 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000976e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009770:	42ab      	cmp	r3, r5
90009772:	d311      	bcc.n	90009798 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009774:	b305      	cbz	r5, 900097b8 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009776:	fbb3 f2f5 	udiv	r2, r3, r5
9000977a:	fb05 3212 	mls	r2, r5, r2, r3
9000977e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009780:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009782:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009784:	04d1      	lsls	r1, r2, #19
90009786:	d400      	bmi.n	9000978a <JPEG_MDMAInCpltCallback+0x56>
90009788:	b963      	cbnz	r3, 900097a4 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000978a:	6822      	ldr	r2, [r4, #0]
9000978c:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000978e:	f043 0360 	orr.w	r3, r3, #96	; 0x60
90009792:	6313      	str	r3, [r2, #48]	; 0x30
}
90009794:	b003      	add	sp, #12
90009796:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009798:	b1cb      	cbz	r3, 900097ce <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000979a:	0798      	lsls	r0, r3, #30
9000979c:	d119      	bne.n	900097d2 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000979e:	6d62      	ldr	r2, [r4, #84]	; 0x54
900097a0:	04d2      	lsls	r2, r2, #19
900097a2:	d4f2      	bmi.n	9000978a <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900097a4:	6822      	ldr	r2, [r4, #0]
900097a6:	2501      	movs	r5, #1
900097a8:	69a1      	ldr	r1, [r4, #24]
900097aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
900097ac:	3240      	adds	r2, #64	; 0x40
900097ae:	9500      	str	r5, [sp, #0]
900097b0:	f001 f8b0 	bl	9000a914 <HAL_MDMA_Start_IT>
900097b4:	2800      	cmp	r0, #0
900097b6:	d0e8      	beq.n	9000978a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900097b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900097ba:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
900097bc:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900097be:	f043 0304 	orr.w	r3, r3, #4
900097c2:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
900097c4:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
900097c8:	f7f8 f874 	bl	900018b4 <HAL_JPEG_ErrorCallback>
        return;
900097cc:	e7c0      	b.n	90009750 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900097ce:	6d63      	ldr	r3, [r4, #84]	; 0x54
900097d0:	e7db      	b.n	9000978a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
900097d2:	f023 0303 	bic.w	r3, r3, #3
900097d6:	3304      	adds	r3, #4
900097d8:	e7d2      	b.n	90009780 <JPEG_MDMAInCpltCallback+0x4c>
900097da:	bf00      	nop

900097dc <JPEG_DMA_PollResidualData>:
{
900097dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900097de:	6802      	ldr	r2, [r0, #0]
900097e0:	2610      	movs	r6, #16
{
900097e2:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900097e4:	6d65      	ldr	r5, [r4, #84]	; 0x54
900097e6:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
900097ea:	d11d      	bne.n	90009828 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
900097ec:	6b53      	ldr	r3, [r2, #52]	; 0x34
900097ee:	06df      	lsls	r7, r3, #27
900097f0:	d51a      	bpl.n	90009828 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
900097f2:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900097f4:	69e7      	ldr	r7, [r4, #28]
900097f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900097f8:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900097fa:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
900097fc:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900097fe:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009800:	6a67      	ldr	r7, [r4, #36]	; 0x24
90009802:	69e2      	ldr	r2, [r4, #28]
90009804:	443a      	add	r2, r7
90009806:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009808:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000980a:	69e2      	ldr	r2, [r4, #28]
9000980c:	4402      	add	r2, r0
9000980e:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009810:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009812:	69e2      	ldr	r2, [r4, #28]
90009814:	440a      	add	r2, r1
90009816:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009818:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000981a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
9000981c:	3304      	adds	r3, #4
9000981e:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009820:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009822:	4293      	cmp	r3, r2
90009824:	d021      	beq.n	9000986a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009826:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009828:	3e01      	subs	r6, #1
9000982a:	d1db      	bne.n	900097e4 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
9000982c:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000982e:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009830:	06d8      	lsls	r0, r3, #27
90009832:	d501      	bpl.n	90009838 <JPEG_DMA_PollResidualData+0x5c>
90009834:	048b      	lsls	r3, r1, #18
90009836:	d417      	bmi.n	90009868 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009838:	6813      	ldr	r3, [r2, #0]
9000983a:	f023 0301 	bic.w	r3, r3, #1
9000983e:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
90009840:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009842:	b9eb      	cbnz	r3, 90009880 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
90009844:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009846:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009848:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000984a:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000984c:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009850:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009854:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009858:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000985a:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000985c:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000985e:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009862:	d00a      	beq.n	9000987a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009864:	f7ff ff4e 	bl	90009704 <HAL_JPEG_EncodeCpltCallback>
}
90009868:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000986a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000986c:	4620      	mov	r0, r4
9000986e:	69e1      	ldr	r1, [r4, #28]
90009870:	f7f7 ffcc 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009874:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009876:	6265      	str	r5, [r4, #36]	; 0x24
90009878:	e7d6      	b.n	90009828 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000987a:	f7f8 f81d 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
9000987e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009880:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009882:	4620      	mov	r0, r4
90009884:	69e1      	ldr	r1, [r4, #28]
90009886:	f7f7 ffc1 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000988a:	2300      	movs	r3, #0
9000988c:	6263      	str	r3, [r4, #36]	; 0x24
9000988e:	e7d9      	b.n	90009844 <JPEG_DMA_PollResidualData+0x68>

90009890 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009890:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009892:	f413 5f40 	tst.w	r3, #12288	; 0x3000
90009896:	d028      	beq.n	900098ea <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009898:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000989a:	f003 030c 	and.w	r3, r3, #12
9000989e:	2b0c      	cmp	r3, #12
{
900098a0:	b570      	push	{r4, r5, r6, lr}
900098a2:	4604      	mov	r4, r0
900098a4:	b082      	sub	sp, #8
900098a6:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900098a8:	d007      	beq.n	900098ba <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900098aa:	6d43      	ldr	r3, [r0, #84]	; 0x54
900098ac:	f003 030c 	and.w	r3, r3, #12
900098b0:	2b08      	cmp	r3, #8
900098b2:	d037      	beq.n	90009924 <HAL_JPEG_Resume+0x94>
  return HAL_OK;
900098b4:	2000      	movs	r0, #0
}
900098b6:	b002      	add	sp, #8
900098b8:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900098ba:	07c8      	lsls	r0, r1, #31
900098bc:	d417      	bmi.n	900098ee <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900098be:	07a9      	lsls	r1, r5, #30
900098c0:	d5f8      	bpl.n	900098b4 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900098c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
900098c4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
900098c8:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900098ca:	6d63      	ldr	r3, [r4, #84]	; 0x54
900098cc:	041a      	lsls	r2, r3, #16
900098ce:	d453      	bmi.n	90009978 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900098d0:	6b60      	ldr	r0, [r4, #52]	; 0x34
900098d2:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
900098d4:	2a00      	cmp	r2, #0
900098d6:	d13e      	bne.n	90009956 <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900098d8:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900098da:	2206      	movs	r2, #6
          return HAL_ERROR;
900098dc:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900098de:	f043 0304 	orr.w	r3, r3, #4
900098e2:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900098e4:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
900098e8:	e7e5      	b.n	900098b6 <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
900098ea:	2001      	movs	r0, #1
}
900098ec:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900098ee:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900098f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098f6:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900098f8:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
900098fa:	2a00      	cmp	r2, #0
900098fc:	d0ec      	beq.n	900098d8 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
900098fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009900:	fbb3 f1f2 	udiv	r1, r3, r2
90009904:	fb02 3211 	mls	r2, r2, r1, r3
90009908:	1a9b      	subs	r3, r3, r2
9000990a:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
9000990c:	2b00      	cmp	r3, #0
9000990e:	d0d6      	beq.n	900098be <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009910:	6822      	ldr	r2, [r4, #0]
90009912:	2601      	movs	r6, #1
90009914:	3240      	adds	r2, #64	; 0x40
90009916:	9600      	str	r6, [sp, #0]
90009918:	69a1      	ldr	r1, [r4, #24]
9000991a:	f000 fffb 	bl	9000a914 <HAL_MDMA_Start_IT>
9000991e:	2800      	cmp	r0, #0
90009920:	d0cd      	beq.n	900098be <HAL_JPEG_Resume+0x2e>
90009922:	e7d9      	b.n	900098d8 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009924:	f011 0101 	ands.w	r1, r1, #1
90009928:	d013      	beq.n	90009952 <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000992a:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000992c:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
9000992e:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009930:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90009934:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009936:	07ab      	lsls	r3, r5, #30
90009938:	d504      	bpl.n	90009944 <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000993a:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
9000993c:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
9000993e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009942:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009944:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
90009946:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009948:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000994a:	430b      	orrs	r3, r1
9000994c:	6313      	str	r3, [r2, #48]	; 0x30
}
9000994e:	b002      	add	sp, #8
90009950:	bd70      	pop	{r4, r5, r6, pc}
90009952:	2228      	movs	r2, #40	; 0x28
90009954:	e7ef      	b.n	90009936 <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009956:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009958:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
9000995a:	fbb3 f1f2 	udiv	r1, r3, r2
9000995e:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009962:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009964:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009966:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009968:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000996a:	9500      	str	r5, [sp, #0]
9000996c:	69e2      	ldr	r2, [r4, #28]
9000996e:	f000 ffd1 	bl	9000a914 <HAL_MDMA_Start_IT>
90009972:	2800      	cmp	r0, #0
90009974:	d09e      	beq.n	900098b4 <HAL_JPEG_Resume+0x24>
90009976:	e7af      	b.n	900098d8 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009978:	4620      	mov	r0, r4
9000997a:	f7ff ff2f 	bl	900097dc <JPEG_DMA_PollResidualData>
9000997e:	e799      	b.n	900098b4 <HAL_JPEG_Resume+0x24>

90009980 <JPEG_MDMAOutCpltCallback>:
{
90009980:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009982:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009984:	f248 010c 	movw	r1, #32780	; 0x800c
{
90009988:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000998a:	6823      	ldr	r3, [r4, #0]
9000998c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000998e:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009992:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009994:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009996:	400a      	ands	r2, r1
90009998:	2a0c      	cmp	r2, #12
9000999a:	d001      	beq.n	900099a0 <JPEG_MDMAOutCpltCallback+0x20>
}
9000999c:	b003      	add	sp, #12
9000999e:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
900099a0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900099a2:	0692      	lsls	r2, r2, #26
900099a4:	d505      	bpl.n	900099b2 <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900099a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900099a8:	f042 0260 	orr.w	r2, r2, #96	; 0x60
900099ac:	631a      	str	r2, [r3, #48]	; 0x30
}
900099ae:	b003      	add	sp, #12
900099b0:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900099b2:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099b4:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900099b6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900099b8:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099ba:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900099bc:	f3c2 0210 	ubfx	r2, r2, #0, #17
900099c0:	1a9b      	subs	r3, r3, r2
900099c2:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
900099c6:	f7f7 ff21 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900099ca:	6d63      	ldr	r3, [r4, #84]	; 0x54
900099cc:	049b      	lsls	r3, r3, #18
900099ce:	d501      	bpl.n	900099d4 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900099d0:	6823      	ldr	r3, [r4, #0]
900099d2:	e7e8      	b.n	900099a6 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900099d4:	6821      	ldr	r1, [r4, #0]
900099d6:	2501      	movs	r5, #1
900099d8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
900099da:	69e2      	ldr	r2, [r4, #28]
900099dc:	3144      	adds	r1, #68	; 0x44
900099de:	6b60      	ldr	r0, [r4, #52]	; 0x34
900099e0:	9500      	str	r5, [sp, #0]
900099e2:	f000 ff97 	bl	9000a914 <HAL_MDMA_Start_IT>
900099e6:	2800      	cmp	r0, #0
900099e8:	d0f2      	beq.n	900099d0 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900099ea:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900099ec:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
900099ee:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
900099f0:	f043 0304 	orr.w	r3, r3, #4
900099f4:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
900099f6:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
900099fa:	f7f7 ff5b 	bl	900018b4 <HAL_JPEG_ErrorCallback>
          return;
900099fe:	e7cd      	b.n	9000999c <JPEG_MDMAOutCpltCallback+0x1c>

90009a00 <JPEG_MDMAOutAbortCallback>:
{
90009a00:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009a02:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009a04:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009a06:	041a      	lsls	r2, r3, #16
90009a08:	d400      	bmi.n	90009a0c <JPEG_MDMAOutAbortCallback+0xc>
}
90009a0a:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009a0c:	6b63      	ldr	r3, [r4, #52]	; 0x34
90009a0e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009a10:	681b      	ldr	r3, [r3, #0]
90009a12:	695b      	ldr	r3, [r3, #20]
90009a14:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009a18:	1ad3      	subs	r3, r2, r3
90009a1a:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009a1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009a1e:	429a      	cmp	r2, r3
90009a20:	d025      	beq.n	90009a6e <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009a22:	6822      	ldr	r2, [r4, #0]
90009a24:	6b55      	ldr	r5, [r2, #52]	; 0x34
90009a26:	f015 0510 	ands.w	r5, r5, #16
90009a2a:	d118      	bne.n	90009a5e <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009a2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009a2e:	bb4b      	cbnz	r3, 90009a84 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a30:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009a32:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009a34:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a36:	f023 0301 	bic.w	r3, r3, #1
90009a3a:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009a3c:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a3e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a40:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009a44:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a48:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009a4c:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a4e:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009a50:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009a52:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a56:	d012      	beq.n	90009a7e <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009a58:	f7ff fe54 	bl	90009704 <HAL_JPEG_EncodeCpltCallback>
}
90009a5c:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009a5e:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009a60:	049b      	lsls	r3, r3, #18
90009a62:	d4d2      	bmi.n	90009a0a <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009a64:	4620      	mov	r0, r4
}
90009a66:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009a6a:	f7ff beb7 	b.w	900097dc <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a6e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009a70:	4620      	mov	r0, r4
90009a72:	69e1      	ldr	r1, [r4, #28]
90009a74:	f7f7 feca 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009a78:	2300      	movs	r3, #0
90009a7a:	6263      	str	r3, [r4, #36]	; 0x24
90009a7c:	e7d1      	b.n	90009a22 <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009a7e:	f7f7 ff1b 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009a82:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009a84:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009a86:	4620      	mov	r0, r4
90009a88:	69e1      	ldr	r1, [r4, #28]
90009a8a:	f7f7 febf 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009a8e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009a90:	6265      	str	r5, [r4, #36]	; 0x24
90009a92:	e7cd      	b.n	90009a30 <JPEG_MDMAOutAbortCallback+0x30>

90009a94 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009a94:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009a96:	f003 0303 	and.w	r3, r3, #3
90009a9a:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009a9c:	6803      	ldr	r3, [r0, #0]
{
90009a9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009aa2:	4604      	mov	r4, r0
90009aa4:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009aa6:	d01f      	beq.n	90009ae8 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009aa8:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009aaa:	04d7      	lsls	r7, r2, #19
90009aac:	d407      	bmi.n	90009abe <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009aae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009ab0:	0796      	lsls	r6, r2, #30
90009ab2:	f100 811d 	bmi.w	90009cf0 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009ab6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009ab8:	0750      	lsls	r0, r2, #29
90009aba:	f100 81b1 	bmi.w	90009e20 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009abe:	6d65      	ldr	r5, [r4, #84]	; 0x54
90009ac0:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
90009ac4:	d107      	bne.n	90009ad6 <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009ac6:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90009ac8:	f016 0608 	ands.w	r6, r6, #8
90009acc:	d14c      	bne.n	90009b68 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009ace:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009ad0:	06d2      	lsls	r2, r2, #27
90009ad2:	f100 81e3 	bmi.w	90009e9c <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009ad6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009ad8:	f002 0238 	and.w	r2, r2, #56	; 0x38
90009adc:	2a20      	cmp	r2, #32
90009ade:	d01a      	beq.n	90009b16 <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
90009ae0:	2000      	movs	r0, #0
}
90009ae2:	b002      	add	sp, #8
90009ae4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009ae8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009aea:	0652      	lsls	r2, r2, #25
90009aec:	d5dc      	bpl.n	90009aa8 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009aee:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009af0:	9101      	str	r1, [sp, #4]
90009af2:	f7ff fb79 	bl	900091e8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009af6:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009af8:	9901      	ldr	r1, [sp, #4]
90009afa:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009afc:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009afe:	f7f7 fe2f 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009b02:	6823      	ldr	r3, [r4, #0]
90009b04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009b06:	f022 0240 	bic.w	r2, r2, #64	; 0x40
90009b0a:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009b0c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009b0e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90009b12:	639a      	str	r2, [r3, #56]	; 0x38
90009b14:	e7c8      	b.n	90009aa8 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b16:	681a      	ldr	r2, [r3, #0]
90009b18:	f022 0201 	bic.w	r2, r2, #1
90009b1c:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009b1e:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009b20:	f002 020c 	and.w	r2, r2, #12
90009b24:	2a08      	cmp	r2, #8
90009b26:	f000 81e6 	beq.w	90009ef6 <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009b2a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009b2c:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009b30:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009b32:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009b34:	2b00      	cmp	r3, #0
90009b36:	f040 81e3 	bne.w	90009f00 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
90009b3a:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009b3c:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009b3e:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009b40:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b42:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009b46:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009b48:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
90009b4c:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b50:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009b52:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009b54:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009b58:	f000 81c9 	beq.w	90009eee <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009b5c:	f7ff fdd2 	bl	90009704 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009b60:	4628      	mov	r0, r5
}
90009b62:	b002      	add	sp, #8
90009b64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009b68:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009b6a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009b6c:	3220      	adds	r2, #32
90009b6e:	4296      	cmp	r6, r2
90009b70:	f0c0 81e4 	bcc.w	90009f3c <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
90009b74:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009b76:	69e1      	ldr	r1, [r4, #28]
90009b78:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009b7a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009b7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009b7e:	69e2      	ldr	r2, [r4, #28]
90009b80:	440a      	add	r2, r1
90009b82:	0a19      	lsrs	r1, r3, #8
90009b84:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009b86:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009b88:	69e2      	ldr	r2, [r4, #28]
90009b8a:	440a      	add	r2, r1
90009b8c:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009b8e:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009b90:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009b92:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009b94:	69e2      	ldr	r2, [r4, #28]
90009b96:	440a      	add	r2, r1
90009b98:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009b9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009b9c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009b9e:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009ba0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009ba2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009ba4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009ba6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009ba8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009baa:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bac:	69e2      	ldr	r2, [r4, #28]
90009bae:	440a      	add	r2, r1
90009bb0:	0a19      	lsrs	r1, r3, #8
90009bb2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bb4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bb6:	69e2      	ldr	r2, [r4, #28]
90009bb8:	440a      	add	r2, r1
90009bba:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bbc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bbe:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bc0:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bc2:	69e2      	ldr	r2, [r4, #28]
90009bc4:	440a      	add	r2, r1
90009bc6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009bc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009bca:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009bcc:	3304      	adds	r3, #4
90009bce:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009bd0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009bd2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009bd4:	69e1      	ldr	r1, [r4, #28]
90009bd6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009bd8:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bda:	69e2      	ldr	r2, [r4, #28]
90009bdc:	440a      	add	r2, r1
90009bde:	0a19      	lsrs	r1, r3, #8
90009be0:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009be2:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009be4:	69e2      	ldr	r2, [r4, #28]
90009be6:	440a      	add	r2, r1
90009be8:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bea:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009bec:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009bee:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009bf0:	69e2      	ldr	r2, [r4, #28]
90009bf2:	440a      	add	r2, r1
90009bf4:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009bf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009bf8:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009bfa:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009bfc:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009bfe:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009c00:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c02:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c04:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c06:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c08:	69e2      	ldr	r2, [r4, #28]
90009c0a:	440a      	add	r2, r1
90009c0c:	0a19      	lsrs	r1, r3, #8
90009c0e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c10:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c12:	69e2      	ldr	r2, [r4, #28]
90009c14:	440a      	add	r2, r1
90009c16:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c18:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c1a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c1e:	69e2      	ldr	r2, [r4, #28]
90009c20:	440a      	add	r2, r1
90009c22:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c24:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c26:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c28:	3304      	adds	r3, #4
90009c2a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009c2c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c2e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c30:	69e1      	ldr	r1, [r4, #28]
90009c32:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c34:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c36:	69e2      	ldr	r2, [r4, #28]
90009c38:	440a      	add	r2, r1
90009c3a:	0a19      	lsrs	r1, r3, #8
90009c3c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c3e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c40:	69e2      	ldr	r2, [r4, #28]
90009c42:	440a      	add	r2, r1
90009c44:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c46:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c48:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c4c:	69e2      	ldr	r2, [r4, #28]
90009c4e:	440a      	add	r2, r1
90009c50:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c52:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c54:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c56:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c58:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009c5a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009c5c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c5e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c60:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c62:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c64:	69e2      	ldr	r2, [r4, #28]
90009c66:	440a      	add	r2, r1
90009c68:	0a19      	lsrs	r1, r3, #8
90009c6a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c6c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c6e:	69e2      	ldr	r2, [r4, #28]
90009c70:	440a      	add	r2, r1
90009c72:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c74:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c76:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009c78:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c7a:	69e2      	ldr	r2, [r4, #28]
90009c7c:	440a      	add	r2, r1
90009c7e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009c80:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c82:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009c84:	3304      	adds	r3, #4
90009c86:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009c88:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009c8a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009c8c:	69e1      	ldr	r1, [r4, #28]
90009c8e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009c90:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c92:	69e2      	ldr	r2, [r4, #28]
90009c94:	440a      	add	r2, r1
90009c96:	0a19      	lsrs	r1, r3, #8
90009c98:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009c9a:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009c9c:	69e2      	ldr	r2, [r4, #28]
90009c9e:	440a      	add	r2, r1
90009ca0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ca2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ca4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ca6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ca8:	69e2      	ldr	r2, [r4, #28]
90009caa:	440a      	add	r2, r1
90009cac:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009cae:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009cb0:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009cb2:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009cb4:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009cb6:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009cb8:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009cba:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cbc:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009cbe:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009cc0:	69e2      	ldr	r2, [r4, #28]
90009cc2:	440a      	add	r2, r1
90009cc4:	0a19      	lsrs	r1, r3, #8
90009cc6:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cc8:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009cca:	69e2      	ldr	r2, [r4, #28]
90009ccc:	440a      	add	r2, r1
90009cce:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cd0:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cd2:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cd4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009cd6:	69e2      	ldr	r2, [r4, #28]
90009cd8:	440a      	add	r2, r1
90009cda:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009cdc:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009cde:	3304      	adds	r3, #4
90009ce0:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009ce2:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009ce4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009ce6:	429a      	cmp	r2, r3
90009ce8:	f000 82ae 	beq.w	9000a248 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009cec:	6823      	ldr	r3, [r4, #0]
90009cee:	e6f2      	b.n	90009ad6 <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009cf0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009cf2:	2a00      	cmp	r2, #0
90009cf4:	f000 810c 	beq.w	90009f10 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009cf8:	6a21      	ldr	r1, [r4, #32]
90009cfa:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009cfc:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009cfe:	f240 81a4 	bls.w	9000a04a <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009d02:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009d04:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009d06:	04cd      	lsls	r5, r1, #19
90009d08:	f53f aed9 	bmi.w	90009abe <JPEG_Process+0x2a>
90009d0c:	2a00      	cmp	r2, #0
90009d0e:	f43f aed6 	beq.w	90009abe <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009d12:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009d14:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
90009d18:	f240 8203 	bls.w	9000a122 <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d1c:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009d1e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d20:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d22:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d24:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d26:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d28:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009d2a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d2c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009d30:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d32:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d36:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009d38:	6a21      	ldr	r1, [r4, #32]
90009d3a:	3104      	adds	r1, #4
90009d3c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009d3e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d40:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d42:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d44:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d46:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d48:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009d4a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d4c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009d50:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d52:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d56:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009d58:	6a21      	ldr	r1, [r4, #32]
90009d5a:	3104      	adds	r1, #4
90009d5c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009d5e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d60:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d62:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d64:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d66:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d68:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009d6a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d6c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009d70:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d72:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d76:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009d78:	6a21      	ldr	r1, [r4, #32]
90009d7a:	3104      	adds	r1, #4
90009d7c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009d7e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d80:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d82:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d84:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d86:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d88:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009d8a:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009d8c:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009d90:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009d92:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009d96:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009d98:	6a21      	ldr	r1, [r4, #32]
90009d9a:	3104      	adds	r1, #4
90009d9c:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009d9e:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009da0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009da2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009da4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009da6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009da8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009daa:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dac:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009db0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009db2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009db6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009db8:	6a21      	ldr	r1, [r4, #32]
90009dba:	3104      	adds	r1, #4
90009dbc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009dbe:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dc0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009dc2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dc4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dc6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dc8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009dca:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dcc:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009dd0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009dd2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009dd6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009dd8:	6a21      	ldr	r1, [r4, #32]
90009dda:	3104      	adds	r1, #4
90009ddc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009dde:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009de0:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009de2:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009de4:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009de6:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009de8:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009dea:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009dec:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009df0:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009df2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009df6:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009df8:	6a21      	ldr	r1, [r4, #32]
90009dfa:	3104      	adds	r1, #4
90009dfc:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009dfe:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e00:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e02:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e04:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e06:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e08:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e0a:	7849      	ldrb	r1, [r1, #1]
90009e0c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009e10:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e12:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e16:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009e18:	6a22      	ldr	r2, [r4, #32]
90009e1a:	3204      	adds	r2, #4
90009e1c:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009e1e:	e64e      	b.n	90009abe <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009e20:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009e22:	2a00      	cmp	r2, #0
90009e24:	d074      	beq.n	90009f10 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009e26:	6a21      	ldr	r1, [r4, #32]
90009e28:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009e2a:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009e2c:	f200 8164 	bhi.w	9000a0f8 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009e30:	428a      	cmp	r2, r1
90009e32:	f040 810c 	bne.w	9000a04e <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009e36:	6a21      	ldr	r1, [r4, #32]
90009e38:	4620      	mov	r0, r4
90009e3a:	f7f7 fcc7 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009e3e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009e40:	2a04      	cmp	r2, #4
90009e42:	d902      	bls.n	90009e4a <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009e44:	f022 0203 	bic.w	r2, r2, #3
90009e48:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
90009e4a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e4c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009e4e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009e50:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009e52:	04c9      	lsls	r1, r1, #19
90009e54:	f53f ae33 	bmi.w	90009abe <JPEG_Process+0x2a>
90009e58:	2a00      	cmp	r2, #0
90009e5a:	f43f ae30 	beq.w	90009abe <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009e5e:	0891      	lsrs	r1, r2, #2
90009e60:	f040 8203 	bne.w	9000a26a <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e64:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009e66:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009e68:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e6a:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009e6c:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e70:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
90009e72:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009e74:	d010      	beq.n	90009e98 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e76:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009e78:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e7a:	5c69      	ldrb	r1, [r5, r1]
90009e7c:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
90009e80:	6a21      	ldr	r1, [r4, #32]
90009e82:	f101 0101 	add.w	r1, r1, #1
90009e86:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009e88:	d106      	bne.n	90009e98 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e8a:	6a22      	ldr	r2, [r4, #32]
90009e8c:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
90009e8e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009e90:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009e94:	3201      	adds	r2, #1
90009e96:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009e98:	6418      	str	r0, [r3, #64]	; 0x40
90009e9a:	e610      	b.n	90009abe <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009e9c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009e9e:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
90009ea0:	3204      	adds	r2, #4
90009ea2:	4295      	cmp	r5, r2
90009ea4:	f0c0 80d5 	bcc.w	9000a052 <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
90009ea8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009eaa:	69e1      	ldr	r1, [r4, #28]
90009eac:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009eae:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009eb0:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009eb2:	69e2      	ldr	r2, [r4, #28]
90009eb4:	440a      	add	r2, r1
90009eb6:	0a19      	lsrs	r1, r3, #8
90009eb8:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009eba:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ebc:	69e2      	ldr	r2, [r4, #28]
90009ebe:	440a      	add	r2, r1
90009ec0:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ec2:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009ec4:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ec6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ec8:	69e2      	ldr	r2, [r4, #28]
90009eca:	440a      	add	r2, r1
90009ecc:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009ece:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009ed0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
90009ed2:	3304      	adds	r3, #4
90009ed4:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009ed6:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009ed8:	429a      	cmp	r2, r3
90009eda:	f47f af07 	bne.w	90009cec <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009ede:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009ee0:	4620      	mov	r0, r4
90009ee2:	69e1      	ldr	r1, [r4, #28]
90009ee4:	f7f7 fc92 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009ee8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009eea:	6266      	str	r6, [r4, #36]	; 0x24
90009eec:	e5f3      	b.n	90009ad6 <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009eee:	f7f7 fce3 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009ef2:	4628      	mov	r0, r5
90009ef4:	e5f5      	b.n	90009ae2 <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009ef6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009ef8:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009efc:	631a      	str	r2, [r3, #48]	; 0x30
90009efe:	e614      	b.n	90009b2a <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009f00:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009f02:	4620      	mov	r0, r4
90009f04:	69e1      	ldr	r1, [r4, #28]
90009f06:	f7f7 fc81 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009f0a:	2300      	movs	r3, #0
90009f0c:	6263      	str	r3, [r4, #36]	; 0x24
90009f0e:	e614      	b.n	90009b3a <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009f10:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009f12:	f002 020c 	and.w	r2, r2, #12
90009f16:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009f18:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009f1a:	f000 80fd 	beq.w	9000a118 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009f1e:	f002 020c 	and.w	r2, r2, #12
90009f22:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009f24:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009f26:	f47f adca 	bne.w	90009abe <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009f2a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90009f2e:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009f30:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009f32:	f022 0206 	bic.w	r2, r2, #6
90009f36:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009f38:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009f3a:	e5c0      	b.n	90009abe <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009f3c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009f3e:	4296      	cmp	r6, r2
90009f40:	f67f adc9 	bls.w	90009ad6 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009f44:	6a60      	ldr	r0, [r4, #36]	; 0x24
90009f46:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009f48:	0880      	lsrs	r0, r0, #2
90009f4a:	d020      	beq.n	90009f8e <JPEG_Process+0x4fa>
90009f4c:	4629      	mov	r1, r5
90009f4e:	e000      	b.n	90009f52 <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
90009f50:	6823      	ldr	r3, [r4, #0]
90009f52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
90009f54:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009f56:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009f58:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009f5a:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009f5c:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009f5e:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009f60:	69e2      	ldr	r2, [r4, #28]
90009f62:	4432      	add	r2, r6
90009f64:	ea4f 2613 	mov.w	r6, r3, lsr #8
90009f68:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009f6a:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009f6c:	69e2      	ldr	r2, [r4, #28]
90009f6e:	4432      	add	r2, r6
90009f70:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009f74:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009f78:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009f7a:	6a66      	ldr	r6, [r4, #36]	; 0x24
90009f7c:	69e2      	ldr	r2, [r4, #28]
90009f7e:	4432      	add	r2, r6
90009f80:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009f82:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009f84:	f103 0304 	add.w	r3, r3, #4
90009f88:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
90009f8a:	d1e1      	bne.n	90009f50 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009f8c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009f8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009f90:	42b3      	cmp	r3, r6
90009f92:	f000 8161 	beq.w	9000a258 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009f96:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009f9a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009f9c:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
90009fa0:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
90009fa2:	d00e      	beq.n	90009fc2 <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009fa4:	f005 0303 	and.w	r3, r5, #3
90009fa8:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009faa:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
90009fac:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009fae:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009fb0:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009fb2:	fa27 f303 	lsr.w	r3, r7, r3
90009fb6:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009fb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009fba:	f103 0301 	add.w	r3, r3, #1
90009fbe:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
90009fc0:	d1f0      	bne.n	90009fa4 <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
90009fc2:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009fc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009fc8:	69e1      	ldr	r1, [r4, #28]
90009fca:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
90009fcc:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009fd0:	f7f7 fc1c 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009fd4:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
90009fd6:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
90009fda:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009fdc:	f63f ae86 	bhi.w	90009cec <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009fe0:	ea4f 03c8 	mov.w	r3, r8, lsl #3
90009fe4:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009fe6:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
90009fe8:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009fec:	fa27 f003 	lsr.w	r0, r7, r3
90009ff0:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
90009ff2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009ff4:	f102 0201 	add.w	r2, r2, #1
90009ff8:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009ffa:	f43f ae77 	beq.w	90009cec <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
90009ffe:	f103 0208 	add.w	r2, r3, #8
9000a002:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a004:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a006:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a00a:	fa27 f202 	lsr.w	r2, r7, r2
9000a00e:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a010:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a012:	f102 0201 	add.w	r2, r2, #1
9000a016:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a018:	f108 0202 	add.w	r2, r8, #2
9000a01c:	f43f ae66 	beq.w	90009cec <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a020:	3310      	adds	r3, #16
9000a022:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a024:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a026:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a028:	fa27 f303 	lsr.w	r3, r7, r3
9000a02c:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000a02e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a030:	f103 0301 	add.w	r3, r3, #1
9000a034:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a036:	f47f ae59 	bne.w	90009cec <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a03a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a03c:	0e3f      	lsrs	r7, r7, #24
9000a03e:	69e2      	ldr	r2, [r4, #28]
9000a040:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a042:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a044:	3301      	adds	r3, #1
9000a046:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a048:	e650      	b.n	90009cec <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a04a:	428a      	cmp	r2, r1
9000a04c:	d056      	beq.n	9000a0fc <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a04e:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a050:	e535      	b.n	90009abe <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a052:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a054:	4295      	cmp	r5, r2
9000a056:	f67f ad3e 	bls.w	90009ad6 <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a05a:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a05c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a05e:	0880      	lsrs	r0, r0, #2
9000a060:	d020      	beq.n	9000a0a4 <JPEG_Process+0x610>
9000a062:	4631      	mov	r1, r6
9000a064:	e000      	b.n	9000a068 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000a066:	6823      	ldr	r3, [r4, #0]
9000a068:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000a06a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a06c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a06e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a070:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a072:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a074:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a076:	69e2      	ldr	r2, [r4, #28]
9000a078:	442a      	add	r2, r5
9000a07a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a07e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a080:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a082:	69e2      	ldr	r2, [r4, #28]
9000a084:	442a      	add	r2, r5
9000a086:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a08a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a08e:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a090:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a092:	69e2      	ldr	r2, [r4, #28]
9000a094:	442a      	add	r2, r5
9000a096:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a098:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a09a:	f103 0304 	add.w	r3, r3, #4
9000a09e:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000a0a0:	d1e1      	bne.n	9000a066 <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a0a2:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000a0a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a0a6:	429d      	cmp	r5, r3
9000a0a8:	f000 80d6 	beq.w	9000a258 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a0ac:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000a0b0:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a0b2:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a0b6:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000a0b8:	d00e      	beq.n	9000a0d8 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a0ba:	f006 0303 	and.w	r3, r6, #3
9000a0be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0c0:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000a0c2:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a0c4:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a0c6:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a0c8:	fa27 f303 	lsr.w	r3, r7, r3
9000a0cc:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a0ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a0d0:	f103 0301 	add.w	r3, r3, #1
9000a0d4:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000a0d6:	d1f0      	bne.n	9000a0ba <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000a0d8:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0dc:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0de:	69e1      	ldr	r1, [r4, #28]
9000a0e0:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a0e2:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a0e6:	f7f7 fb91 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a0ea:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a0ec:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000a0f0:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a0f2:	f67f af75 	bls.w	90009fe0 <JPEG_Process+0x54c>
9000a0f6:	e5f9      	b.n	90009cec <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a0f8:	1a52      	subs	r2, r2, r1
9000a0fa:	e6a9      	b.n	90009e50 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a0fc:	6a21      	ldr	r1, [r4, #32]
9000a0fe:	4620      	mov	r0, r4
9000a100:	f7f7 fb64 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a104:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000a106:	2a04      	cmp	r2, #4
9000a108:	d902      	bls.n	9000a110 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a10a:	f022 0203 	bic.w	r2, r2, #3
9000a10e:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000a110:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a112:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a114:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a116:	e5f5      	b.n	90009d04 <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a118:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000a11c:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a11e:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a120:	e4cd      	b.n	90009abe <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000a122:	2a03      	cmp	r2, #3
9000a124:	f240 80a4 	bls.w	9000a270 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000a128:	2900      	cmp	r1, #0
9000a12a:	f43f acc8 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a12e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a130:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a132:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a134:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a138:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a13a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a13c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a13e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a142:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a144:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a148:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a14c:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a150:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a152:	6a20      	ldr	r0, [r4, #32]
9000a154:	f100 0004 	add.w	r0, r0, #4
9000a158:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a15a:	f43f acb0 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a15e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a160:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a162:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a166:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a168:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a16a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a16c:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a170:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a172:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a176:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a17a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a17e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a180:	6a20      	ldr	r0, [r4, #32]
9000a182:	f100 0004 	add.w	r0, r0, #4
9000a186:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a188:	f43f ac99 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a18c:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a18e:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a190:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a194:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a196:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a198:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a19a:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a19e:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1a0:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a1a4:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1a8:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1ac:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a1ae:	6a20      	ldr	r0, [r4, #32]
9000a1b0:	f100 0004 	add.w	r0, r0, #4
9000a1b4:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a1b6:	f43f ac82 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a1ba:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a1bc:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1be:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1c2:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1c4:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1c6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1c8:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a1cc:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1ce:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a1d2:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1d6:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1da:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a1dc:	6a20      	ldr	r0, [r4, #32]
9000a1de:	f100 0004 	add.w	r0, r0, #4
9000a1e2:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a1e4:	f43f ac6b 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a1e8:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a1ea:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1ec:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a1f0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1f2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1f4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a1f6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a1fa:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a1fc:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a200:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a204:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a208:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a20a:	6a20      	ldr	r0, [r4, #32]
9000a20c:	f100 0004 	add.w	r0, r0, #4
9000a210:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a212:	f43f ac54 	beq.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a216:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a218:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a21a:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a21e:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a220:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a222:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a224:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a228:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a22a:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a22e:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a232:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a236:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a238:	6a20      	ldr	r0, [r4, #32]
9000a23a:	f100 0004 	add.w	r0, r0, #4
9000a23e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a240:	f47f ac3d 	bne.w	90009abe <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a244:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a246:	e5db      	b.n	90009e00 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a248:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a24a:	4620      	mov	r0, r4
9000a24c:	69e1      	ldr	r1, [r4, #28]
9000a24e:	f7f7 fadd 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a252:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a254:	6265      	str	r5, [r4, #36]	; 0x24
9000a256:	e43e      	b.n	90009ad6 <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a258:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a25a:	4620      	mov	r0, r4
9000a25c:	69e1      	ldr	r1, [r4, #28]
9000a25e:	f7f7 fad5 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a262:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a264:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a266:	6262      	str	r2, [r4, #36]	; 0x24
9000a268:	e435      	b.n	90009ad6 <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000a26a:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a26c:	69a0      	ldr	r0, [r4, #24]
9000a26e:	e5c7      	b.n	90009e00 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a270:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a272:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a274:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a276:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a278:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a27c:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a27e:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a280:	d010      	beq.n	9000a2a4 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a282:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a284:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a286:	5c28      	ldrb	r0, [r5, r0]
9000a288:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a28c:	6a20      	ldr	r0, [r4, #32]
9000a28e:	f100 0001 	add.w	r0, r0, #1
9000a292:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a294:	d106      	bne.n	9000a2a4 <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a296:	6a22      	ldr	r2, [r4, #32]
9000a298:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a29a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a29c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a2a0:	3201      	adds	r2, #1
9000a2a2:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a2a4:	6419      	str	r1, [r3, #64]	; 0x40
9000a2a6:	e40a      	b.n	90009abe <JPEG_Process+0x2a>

9000a2a8 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000a2a8:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a2ac:	3b03      	subs	r3, #3
9000a2ae:	2b01      	cmp	r3, #1
9000a2b0:	d900      	bls.n	9000a2b4 <HAL_JPEG_IRQHandler+0xc>
9000a2b2:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a2b4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a2b6:	f003 030c 	and.w	r3, r3, #12
9000a2ba:	2b08      	cmp	r3, #8
{
9000a2bc:	b530      	push	{r4, r5, lr}
9000a2be:	4604      	mov	r4, r0
9000a2c0:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a2c2:	d006      	beq.n	9000a2d2 <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a2c4:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a2c6:	f003 030c 	and.w	r3, r3, #12
9000a2ca:	2b0c      	cmp	r3, #12
9000a2cc:	d006      	beq.n	9000a2dc <HAL_JPEG_IRQHandler+0x34>
}
9000a2ce:	b003      	add	sp, #12
9000a2d0:	bd30      	pop	{r4, r5, pc}
9000a2d2:	b003      	add	sp, #12
9000a2d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a2d8:	f7ff bbdc 	b.w	90009a94 <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2dc:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a2de:	f003 0303 	and.w	r3, r3, #3
9000a2e2:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a2e4:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a2e6:	d045      	beq.n	9000a374 <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a2e8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a2ea:	0692      	lsls	r2, r2, #26
9000a2ec:	d5ef      	bpl.n	9000a2ce <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a2ee:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a2f0:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a2f2:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000a2f6:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a2f8:	681a      	ldr	r2, [r3, #0]
9000a2fa:	f022 0201 	bic.w	r2, r2, #1
9000a2fe:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a300:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a302:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a306:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a308:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a30a:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a30e:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a310:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a314:	2b02      	cmp	r3, #2
9000a316:	d052      	beq.n	9000a3be <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a318:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a31a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a31e:	2b02      	cmp	r3, #2
9000a320:	d03f      	beq.n	9000a3a2 <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a322:	6803      	ldr	r3, [r0, #0]
9000a324:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000a326:	695b      	ldr	r3, [r3, #20]
9000a328:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a32c:	1ad3      	subs	r3, r2, r3
9000a32e:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a330:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a332:	429a      	cmp	r2, r3
9000a334:	d046      	beq.n	9000a3c4 <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a336:	6822      	ldr	r2, [r4, #0]
9000a338:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000a33a:	f015 0510 	ands.w	r5, r5, #16
9000a33e:	d135      	bne.n	9000a3ac <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000a340:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a342:	2b00      	cmp	r3, #0
9000a344:	d149      	bne.n	9000a3da <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a346:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a348:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a34a:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a34c:	f023 0301 	bic.w	r3, r3, #1
9000a350:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a352:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a354:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a356:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a35a:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a35e:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a362:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a364:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a366:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a368:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a36c:	d032      	beq.n	9000a3d4 <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a36e:	f7ff f9c9 	bl	90009704 <HAL_JPEG_EncodeCpltCallback>
9000a372:	e7ac      	b.n	9000a2ce <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a374:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a376:	0651      	lsls	r1, r2, #25
9000a378:	d5b6      	bpl.n	9000a2e8 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a37a:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a37c:	9101      	str	r1, [sp, #4]
9000a37e:	f7fe ff33 	bl	900091e8 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a382:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a384:	9901      	ldr	r1, [sp, #4]
9000a386:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a388:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a38a:	f7f7 f9e9 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a38e:	6823      	ldr	r3, [r4, #0]
9000a390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a392:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a396:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a398:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a39a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a39e:	639a      	str	r2, [r3, #56]	; 0x38
9000a3a0:	e7a2      	b.n	9000a2e8 <HAL_JPEG_IRQHandler+0x40>
}
9000a3a2:	b003      	add	sp, #12
9000a3a4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a3a8:	f000 bb30 	b.w	9000aa0c <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a3ac:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a3ae:	049b      	lsls	r3, r3, #18
9000a3b0:	d48d      	bmi.n	9000a2ce <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000a3b2:	4620      	mov	r0, r4
}
9000a3b4:	b003      	add	sp, #12
9000a3b6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a3ba:	f7ff ba0f 	b.w	900097dc <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a3be:	f000 fb25 	bl	9000aa0c <HAL_MDMA_Abort_IT>
9000a3c2:	e7a9      	b.n	9000a318 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a3c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a3c6:	4620      	mov	r0, r4
9000a3c8:	69e1      	ldr	r1, [r4, #28]
9000a3ca:	f7f7 fa1f 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a3ce:	2300      	movs	r3, #0
9000a3d0:	6263      	str	r3, [r4, #36]	; 0x24
9000a3d2:	e7b0      	b.n	9000a336 <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a3d4:	f7f7 fa70 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
9000a3d8:	e779      	b.n	9000a2ce <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a3da:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a3dc:	4620      	mov	r0, r4
9000a3de:	69e1      	ldr	r1, [r4, #28]
9000a3e0:	f7f7 fa14 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a3e4:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a3e6:	6265      	str	r5, [r4, #36]	; 0x24
9000a3e8:	e7ad      	b.n	9000a346 <HAL_JPEG_IRQHandler+0x9e>
9000a3ea:	bf00      	nop

9000a3ec <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a3ec:	2800      	cmp	r0, #0
9000a3ee:	d067      	beq.n	9000a4c0 <HAL_LTDC_Init+0xd4>
{
9000a3f0:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a3f2:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000a3f6:	4604      	mov	r4, r0
9000a3f8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a3fc:	2b00      	cmp	r3, #0
9000a3fe:	d05a      	beq.n	9000a4b6 <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a400:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a402:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a404:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a408:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a40c:	4302      	orrs	r2, r0
9000a40e:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a410:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a412:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a414:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a416:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a41a:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a41c:	4929      	ldr	r1, [pc, #164]	; (9000a4c4 <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a41e:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a420:	6998      	ldr	r0, [r3, #24]
9000a422:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a424:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a426:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a428:	689a      	ldr	r2, [r3, #8]
9000a42a:	400a      	ands	r2, r1
9000a42c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a42e:	689a      	ldr	r2, [r3, #8]
9000a430:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a434:	69a0      	ldr	r0, [r4, #24]
9000a436:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a438:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a43a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a43c:	68da      	ldr	r2, [r3, #12]
9000a43e:	400a      	ands	r2, r1
9000a440:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a442:	68da      	ldr	r2, [r3, #12]
9000a444:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a448:	6a20      	ldr	r0, [r4, #32]
9000a44a:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a44c:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a44e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a450:	691a      	ldr	r2, [r3, #16]
9000a452:	400a      	ands	r2, r1
9000a454:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a456:	691a      	ldr	r2, [r3, #16]
9000a458:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a45c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a45e:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a460:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a462:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a464:	695a      	ldr	r2, [r3, #20]
9000a466:	400a      	ands	r2, r1
9000a468:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a46a:	695a      	ldr	r2, [r3, #20]
9000a46c:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000a46e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a472:	430a      	orrs	r2, r1
9000a474:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a476:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a478:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a47c:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a480:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a484:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a486:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000a488:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000a48c:	432a      	orrs	r2, r5
9000a48e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a492:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a494:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a498:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a49a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a49c:	f042 0206 	orr.w	r2, r2, #6
9000a4a0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a4a2:	699a      	ldr	r2, [r3, #24]
9000a4a4:	f042 0201 	orr.w	r2, r2, #1
9000a4a8:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a4aa:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a4ac:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a4b0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000a4b4:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a4b6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a4ba:	f7f8 ff39 	bl	90003330 <HAL_LTDC_MspInit>
9000a4be:	e79f      	b.n	9000a400 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a4c0:	2001      	movs	r0, #1
}
9000a4c2:	4770      	bx	lr
9000a4c4:	f000f800 	.word	0xf000f800

9000a4c8 <HAL_LTDC_ErrorCallback>:
9000a4c8:	4770      	bx	lr
9000a4ca:	bf00      	nop

9000a4cc <HAL_LTDC_ReloadEventCallback>:
9000a4cc:	4770      	bx	lr
9000a4ce:	bf00      	nop

9000a4d0 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a4d0:	6803      	ldr	r3, [r0, #0]
{
9000a4d2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a4d4:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000a4d6:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a4d8:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a4da:	076a      	lsls	r2, r5, #29
9000a4dc:	d501      	bpl.n	9000a4e2 <HAL_LTDC_IRQHandler+0x12>
9000a4de:	0771      	lsls	r1, r6, #29
9000a4e0:	d41d      	bmi.n	9000a51e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a4e2:	07aa      	lsls	r2, r5, #30
9000a4e4:	d501      	bpl.n	9000a4ea <HAL_LTDC_IRQHandler+0x1a>
9000a4e6:	07b3      	lsls	r3, r6, #30
9000a4e8:	d42d      	bmi.n	9000a546 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a4ea:	07e8      	lsls	r0, r5, #31
9000a4ec:	d501      	bpl.n	9000a4f2 <HAL_LTDC_IRQHandler+0x22>
9000a4ee:	07f1      	lsls	r1, r6, #31
9000a4f0:	d440      	bmi.n	9000a574 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a4f2:	072a      	lsls	r2, r5, #28
9000a4f4:	d501      	bpl.n	9000a4fa <HAL_LTDC_IRQHandler+0x2a>
9000a4f6:	0733      	lsls	r3, r6, #28
9000a4f8:	d400      	bmi.n	9000a4fc <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000a4fa:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a4fc:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a4fe:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a500:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a502:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a504:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a506:	f022 0208 	bic.w	r2, r2, #8
9000a50a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a50c:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a50e:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a510:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a514:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a518:	f7ff ffd8 	bl	9000a4cc <HAL_LTDC_ReloadEventCallback>
}
9000a51c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a51e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a520:	f022 0204 	bic.w	r2, r2, #4
9000a524:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a526:	2204      	movs	r2, #4
9000a528:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a52a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000a52e:	f043 0301 	orr.w	r3, r3, #1
9000a532:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a536:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a538:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a53c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a540:	f7ff ffc2 	bl	9000a4c8 <HAL_LTDC_ErrorCallback>
9000a544:	e7cd      	b.n	9000a4e2 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a546:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a548:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a54a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a54c:	f022 0202 	bic.w	r2, r2, #2
9000a550:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a552:	2202      	movs	r2, #2
9000a554:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a556:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a558:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000a55c:	f043 0302 	orr.w	r3, r3, #2
9000a560:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a564:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a566:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a56a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a56e:	f7ff ffab 	bl	9000a4c8 <HAL_LTDC_ErrorCallback>
9000a572:	e7ba      	b.n	9000a4ea <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a574:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a576:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a578:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a57a:	f022 0201 	bic.w	r2, r2, #1
9000a57e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a580:	2201      	movs	r2, #1
9000a582:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000a584:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a586:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a58a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a58e:	f7f8 f9f3 	bl	90002978 <HAL_LTDC_LineEventCallback>
9000a592:	e7ae      	b.n	9000a4f2 <HAL_LTDC_IRQHandler+0x22>

9000a594 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a594:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000a598:	2b01      	cmp	r3, #1
9000a59a:	f000 80c0 	beq.w	9000a71e <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a59e:	2302      	movs	r3, #2
{
9000a5a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5a4:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a5a8:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a5ac:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000a5b0:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5b2:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a5b6:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a5b8:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5bc:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a5be:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000a5c2:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a5c4:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a5c8:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a5ca:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5ce:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a5d2:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000a734 <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a5d6:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a5da:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000a5de:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a5e2:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a5e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a5e8:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5ea:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a5ee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a5f0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a5f4:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a5f6:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a5f8:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a5fc:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a5fe:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a600:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a604:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a608:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a60a:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a60c:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a610:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a614:	440b      	add	r3, r1
9000a616:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a61a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a61e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a622:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a626:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a62a:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a62e:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a630:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a634:	68ab      	ldr	r3, [r5, #8]
9000a636:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a63a:	3301      	adds	r3, #1
9000a63c:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a640:	4403      	add	r3, r0
9000a642:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a646:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a648:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a64c:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a650:	f023 0307 	bic.w	r3, r3, #7
9000a654:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a658:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a65c:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a660:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a662:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a666:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a66a:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a66e:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000a672:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a676:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a67a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a67e:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a682:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a686:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000a68a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a68e:	696b      	ldr	r3, [r5, #20]
9000a690:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a694:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a698:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a69a:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a69e:	6a28      	ldr	r0, [r5, #32]
9000a6a0:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a6a2:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a6a6:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a6aa:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000a6ae:	2300      	movs	r3, #0
9000a6b0:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a6b4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000a6b6:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a6ba:	bb59      	cbnz	r1, 9000a714 <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000a6bc:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a6be:	1abf      	subs	r7, r7, r2
9000a6c0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000a6c2:	fb03 f707 	mul.w	r7, r3, r7
9000a6c6:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a6ca:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a6cc:	3707      	adds	r7, #7
9000a6ce:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a6d2:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000a6d6:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000a6da:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a6de:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a6e2:	4b12      	ldr	r3, [pc, #72]	; (9000a72c <HAL_LTDC_ConfigLayer+0x198>)
9000a6e4:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000a6e8:	400b      	ands	r3, r1
9000a6ea:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a6ee:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a6f2:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a6f4:	f859 3006 	ldr.w	r3, [r9, r6]
9000a6f8:	4313      	orrs	r3, r2
9000a6fa:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a6fe:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a700:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000a704:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a706:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000a70a:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000a70e:	b003      	add	sp, #12
9000a710:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a714:	3901      	subs	r1, #1
9000a716:	2906      	cmp	r1, #6
9000a718:	d903      	bls.n	9000a722 <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a71a:	2301      	movs	r3, #1
9000a71c:	e7cf      	b.n	9000a6be <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000a71e:	2002      	movs	r0, #2
}
9000a720:	4770      	bx	lr
9000a722:	4b03      	ldr	r3, [pc, #12]	; (9000a730 <HAL_LTDC_ConfigLayer+0x19c>)
9000a724:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000a728:	e7c9      	b.n	9000a6be <HAL_LTDC_ConfigLayer+0x12a>
9000a72a:	bf00      	nop
9000a72c:	fffff800 	.word	0xfffff800
9000a730:	90029f0c 	.word	0x90029f0c
9000a734:	fffff8f8 	.word	0xfffff8f8

9000a738 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a738:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000a73c:	2a01      	cmp	r2, #1
9000a73e:	d019      	beq.n	9000a774 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a740:	6802      	ldr	r2, [r0, #0]
9000a742:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a744:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a746:	f04f 0c00 	mov.w	ip, #0
{
9000a74a:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a74c:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a750:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a752:	4c09      	ldr	r4, [pc, #36]	; (9000a778 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a754:	f020 0001 	bic.w	r0, r0, #1
9000a758:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a75a:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a75c:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a75e:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000a760:	4301      	orrs	r1, r0
9000a762:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a764:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000a768:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a76a:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000a76e:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a772:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a774:	2002      	movs	r0, #2
}
9000a776:	4770      	bx	lr
9000a778:	50001000 	.word	0x50001000

9000a77c <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a77c:	b538      	push	{r3, r4, r5, lr}
9000a77e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a780:	f7fd f984 	bl	90007a8c <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a784:	2c00      	cmp	r4, #0
9000a786:	d05a      	beq.n	9000a83e <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a788:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a78a:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a78c:	2100      	movs	r1, #0
9000a78e:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a790:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000a794:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a798:	68da      	ldr	r2, [r3, #12]
9000a79a:	f022 0201 	bic.w	r2, r2, #1
9000a79e:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a7a0:	e005      	b.n	9000a7ae <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a7a2:	f7fd f973 	bl	90007a8c <HAL_GetTick>
9000a7a6:	1b43      	subs	r3, r0, r5
9000a7a8:	2b05      	cmp	r3, #5
9000a7aa:	d841      	bhi.n	9000a830 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a7ac:	6823      	ldr	r3, [r4, #0]
9000a7ae:	68da      	ldr	r2, [r3, #12]
9000a7b0:	07d2      	lsls	r2, r2, #31
9000a7b2:	d4f6      	bmi.n	9000a7a2 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a7b4:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a7b8:	69e0      	ldr	r0, [r4, #28]
9000a7ba:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a7bc:	68e1      	ldr	r1, [r4, #12]
9000a7be:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a7c0:	4302      	orrs	r2, r0
9000a7c2:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a7c4:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a7c6:	4302      	orrs	r2, r0
9000a7c8:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a7ca:	4302      	orrs	r2, r0
9000a7cc:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000a7ce:	4302      	orrs	r2, r0
9000a7d0:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a7d2:	4302      	orrs	r2, r0
9000a7d4:	68a0      	ldr	r0, [r4, #8]
9000a7d6:	4302      	orrs	r2, r0
9000a7d8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a7da:	3801      	subs	r0, #1
9000a7dc:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a7e0:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a7e2:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a7e4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a7e8:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a7ea:	d103      	bne.n	9000a7f4 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a7ec:	691a      	ldr	r2, [r3, #16]
9000a7ee:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000a7f2:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a7f4:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a7f6:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000a7f8:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a7fa:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a7fc:	db30      	blt.n	9000a860 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a7fe:	b292      	uxth	r2, r2
9000a800:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a802:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000a804:	2a00      	cmp	r2, #0
9000a806:	db1c      	blt.n	9000a842 <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a808:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a80a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a80e:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a812:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a814:	d021      	beq.n	9000a85a <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a816:	b2c0      	uxtb	r0, r0
9000a818:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a81a:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a81c:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a81e:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000a820:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a822:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a824:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a826:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000a82a:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000a82e:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a830:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a832:	2303      	movs	r3, #3
      return HAL_ERROR;
9000a834:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a836:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a838:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000a83c:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a83e:	2001      	movs	r0, #1
}
9000a840:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a842:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a844:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a846:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a84a:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000a84e:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a850:	6a19      	ldr	r1, [r3, #32]
9000a852:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a856:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a858:	d1dd      	bne.n	9000a816 <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a85a:	2200      	movs	r2, #0
9000a85c:	629a      	str	r2, [r3, #40]	; 0x28
9000a85e:	e7dc      	b.n	9000a81a <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a860:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a862:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a864:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a868:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a86a:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a86c:	621a      	str	r2, [r3, #32]
9000a86e:	e7c8      	b.n	9000a802 <HAL_MDMA_Init+0x86>

9000a870 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a870:	b1f8      	cbz	r0, 9000a8b2 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a872:	6802      	ldr	r2, [r0, #0]
9000a874:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a876:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a878:	68d0      	ldr	r0, [r2, #12]
{
9000a87a:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a87c:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a880:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a882:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a884:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a886:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a888:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a88a:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a88c:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a88e:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a890:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a892:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000a894:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000a896:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000a898:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a89a:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a89c:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000a89e:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a8a2:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000a8a6:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a8aa:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000a8ac:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000a8b0:	4770      	bx	lr
    return HAL_ERROR;
9000a8b2:	2001      	movs	r0, #1
}
9000a8b4:	4770      	bx	lr
9000a8b6:	bf00      	nop

9000a8b8 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a8b8:	b310      	cbz	r0, 9000a900 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000a8ba:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a8bc:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000a8c0:	2801      	cmp	r0, #1
9000a8c2:	d01f      	beq.n	9000a904 <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000a8c4:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a8c6:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a8ca:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000a8ce:	45f4      	cmp	ip, lr
9000a8d0:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a8d4:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a8d8:	d004      	beq.n	9000a8e4 <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000a8da:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a8dc:	2200      	movs	r2, #0
9000a8de:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000a8e2:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a8e4:	681d      	ldr	r5, [r3, #0]
9000a8e6:	692c      	ldr	r4, [r5, #16]
9000a8e8:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000a8ec:	d1f6      	bne.n	9000a8dc <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a8ee:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000a8f0:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a8f2:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000a8f4:	b941      	cbnz	r1, 9000a908 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a8f6:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000a8fa:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a8fc:	612a      	str	r2, [r5, #16]
9000a8fe:	e7ed      	b.n	9000a8dc <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a900:	2001      	movs	r0, #1
9000a902:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a904:	2002      	movs	r0, #2
}
9000a906:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a908:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000a90c:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a90e:	612a      	str	r2, [r5, #16]
9000a910:	e7e4      	b.n	9000a8dc <HAL_MDMA_ConfigPostRequestMask+0x24>
9000a912:	bf00      	nop

9000a914 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a914:	2800      	cmp	r0, #0
9000a916:	d06f      	beq.n	9000a9f8 <HAL_MDMA_Start_IT+0xe4>
9000a918:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000a91a:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000a91e:	2801      	cmp	r0, #1
9000a920:	d072      	beq.n	9000aa08 <HAL_MDMA_Start_IT+0xf4>
9000a922:	2001      	movs	r0, #1
9000a924:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a928:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000a92c:	2801      	cmp	r0, #1
9000a92e:	d004      	beq.n	9000a93a <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000a930:	2300      	movs	r3, #0
    return HAL_BUSY;
9000a932:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000a934:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000a938:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a93a:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a93c:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a940:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000a944:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a946:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a948:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a94c:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000a950:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a954:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a958:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a95c:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000a960:	68e5      	ldr	r5, [r4, #12]
9000a962:	f025 0501 	bic.w	r5, r5, #1
9000a966:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a968:	6965      	ldr	r5, [r4, #20]
9000a96a:	ea00 0005 	and.w	r0, r0, r5
9000a96e:	ea40 0003 	orr.w	r0, r0, r3
9000a972:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a974:	6963      	ldr	r3, [r4, #20]
9000a976:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a97a:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000a97e:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a980:	f04f 031f 	mov.w	r3, #31
9000a984:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a986:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a988:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a98a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a98c:	bf0c      	ite	eq
9000a98e:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a992:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a996:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a99a:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a99e:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a9a0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000a9a2:	bf0c      	ite	eq
9000a9a4:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a9a8:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000a9ac:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a9ae:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000a9b2:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a9b4:	68e3      	ldr	r3, [r4, #12]
9000a9b6:	f043 0306 	orr.w	r3, r3, #6
9000a9ba:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a9bc:	b11a      	cbz	r2, 9000a9c6 <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a9be:	68e3      	ldr	r3, [r4, #12]
9000a9c0:	f043 0310 	orr.w	r3, r3, #16
9000a9c4:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a9c6:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000a9ca:	b11b      	cbz	r3, 9000a9d4 <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a9cc:	68e3      	ldr	r3, [r4, #12]
9000a9ce:	f043 0308 	orr.w	r3, r3, #8
9000a9d2:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a9d4:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000a9d8:	b11b      	cbz	r3, 9000a9e2 <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a9da:	68e3      	ldr	r3, [r4, #12]
9000a9dc:	f043 0320 	orr.w	r3, r3, #32
9000a9e0:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a9e2:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a9e4:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a9e8:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a9ec:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a9f0:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a9f2:	d003      	beq.n	9000a9fc <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000a9f4:	2000      	movs	r0, #0
}
9000a9f6:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000a9f8:	2001      	movs	r0, #1
9000a9fa:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a9fc:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000a9fe:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000aa00:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000aa04:	60e3      	str	r3, [r4, #12]
}
9000aa06:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000aa08:	2002      	movs	r0, #2
}
9000aa0a:	4770      	bx	lr

9000aa0c <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000aa0c:	4603      	mov	r3, r0
9000aa0e:	b188      	cbz	r0, 9000aa34 <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000aa10:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000aa14:	2a02      	cmp	r2, #2
9000aa16:	d003      	beq.n	9000aa20 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000aa18:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000aa1a:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000aa1c:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000aa1e:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000aa20:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000aa22:	2104      	movs	r1, #4
  return HAL_OK;
9000aa24:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000aa26:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000aa2a:	68d3      	ldr	r3, [r2, #12]
9000aa2c:	f023 0301 	bic.w	r3, r3, #1
9000aa30:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000aa32:	4770      	bx	lr
    return HAL_ERROR;
9000aa34:	2001      	movs	r0, #1
}
9000aa36:	4770      	bx	lr

9000aa38 <HAL_MDMA_IRQHandler>:
{
9000aa38:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000aa3a:	2300      	movs	r3, #0
{
9000aa3c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000aa3e:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000aa42:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000aa44:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000aa46:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000aa48:	4b57      	ldr	r3, [pc, #348]	; (9000aba8 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000aa4a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000aa4c:	4a57      	ldr	r2, [pc, #348]	; (9000abac <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000aa4e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000aa50:	6823      	ldr	r3, [r4, #0]
9000aa52:	441a      	add	r2, r3
9000aa54:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000aa58:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000aa5c:	4202      	tst	r2, r0
9000aa5e:	f000 80a0 	beq.w	9000aba2 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000aa62:	681a      	ldr	r2, [r3, #0]
9000aa64:	07d1      	lsls	r1, r2, #31
9000aa66:	d529      	bpl.n	9000aabc <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000aa68:	68da      	ldr	r2, [r3, #12]
9000aa6a:	0792      	lsls	r2, r2, #30
9000aa6c:	d526      	bpl.n	9000aabc <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000aa6e:	68da      	ldr	r2, [r3, #12]
9000aa70:	f022 0202 	bic.w	r2, r2, #2
9000aa74:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000aa76:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000aa78:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000aa7a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000aa7c:	bf54      	ite	pl
9000aa7e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000aa82:	f041 0102 	orrmi.w	r1, r1, #2
9000aa86:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000aa88:	0591      	lsls	r1, r2, #22
9000aa8a:	d503      	bpl.n	9000aa94 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000aa8c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000aa8e:	f041 0104 	orr.w	r1, r1, #4
9000aa92:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000aa94:	05d0      	lsls	r0, r2, #23
9000aa96:	d503      	bpl.n	9000aaa0 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000aa98:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000aa9a:	f041 0108 	orr.w	r1, r1, #8
9000aa9e:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000aaa0:	0551      	lsls	r1, r2, #21
9000aaa2:	d503      	bpl.n	9000aaac <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000aaa4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000aaa6:	f041 0110 	orr.w	r1, r1, #16
9000aaaa:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000aaac:	0510      	lsls	r0, r2, #20
9000aaae:	d503      	bpl.n	9000aab8 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000aab0:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000aab2:	f042 0220 	orr.w	r2, r2, #32
9000aab6:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000aab8:	2201      	movs	r2, #1
9000aaba:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000aabc:	681a      	ldr	r2, [r3, #0]
9000aabe:	06d1      	lsls	r1, r2, #27
9000aac0:	d509      	bpl.n	9000aad6 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000aac2:	68da      	ldr	r2, [r3, #12]
9000aac4:	0692      	lsls	r2, r2, #26
9000aac6:	d506      	bpl.n	9000aad6 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000aac8:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000aaca:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000aacc:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000aace:	b112      	cbz	r2, 9000aad6 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000aad0:	4620      	mov	r0, r4
9000aad2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000aad4:	6823      	ldr	r3, [r4, #0]
9000aad6:	681a      	ldr	r2, [r3, #0]
9000aad8:	0710      	lsls	r0, r2, #28
9000aada:	d509      	bpl.n	9000aaf0 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000aadc:	68da      	ldr	r2, [r3, #12]
9000aade:	06d1      	lsls	r1, r2, #27
9000aae0:	d506      	bpl.n	9000aaf0 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000aae2:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000aae4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000aae6:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000aae8:	b112      	cbz	r2, 9000aaf0 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000aaea:	4620      	mov	r0, r4
9000aaec:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000aaee:	6823      	ldr	r3, [r4, #0]
9000aaf0:	681a      	ldr	r2, [r3, #0]
9000aaf2:	0752      	lsls	r2, r2, #29
9000aaf4:	d509      	bpl.n	9000ab0a <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000aaf6:	68da      	ldr	r2, [r3, #12]
9000aaf8:	0710      	lsls	r0, r2, #28
9000aafa:	d506      	bpl.n	9000ab0a <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000aafc:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000aafe:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ab00:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ab02:	b112      	cbz	r2, 9000ab0a <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000ab04:	4620      	mov	r0, r4
9000ab06:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000ab08:	6823      	ldr	r3, [r4, #0]
9000ab0a:	681a      	ldr	r2, [r3, #0]
9000ab0c:	0791      	lsls	r1, r2, #30
9000ab0e:	d516      	bpl.n	9000ab3e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000ab10:	68da      	ldr	r2, [r3, #12]
9000ab12:	0752      	lsls	r2, r2, #29
9000ab14:	d513      	bpl.n	9000ab3e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ab16:	68da      	ldr	r2, [r3, #12]
9000ab18:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000ab1c:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000ab1e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000ab22:	2a04      	cmp	r2, #4
9000ab24:	d034      	beq.n	9000ab90 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ab26:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000ab28:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ab2a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000ab2c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000ab2e:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000ab30:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000ab34:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000ab38:	b10b      	cbz	r3, 9000ab3e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000ab3a:	4620      	mov	r0, r4
9000ab3c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000ab3e:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000ab40:	2b00      	cmp	r3, #0
9000ab42:	d02e      	beq.n	9000aba2 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000ab44:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab46:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000ab48:	4b19      	ldr	r3, [pc, #100]	; (9000abb0 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab4a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000ab4e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000ab52:	68cb      	ldr	r3, [r1, #12]
9000ab54:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000ab58:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000ab5a:	60cb      	str	r3, [r1, #12]
9000ab5c:	e002      	b.n	9000ab64 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000ab5e:	68cb      	ldr	r3, [r1, #12]
9000ab60:	07d8      	lsls	r0, r3, #31
9000ab62:	d504      	bpl.n	9000ab6e <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000ab64:	9b01      	ldr	r3, [sp, #4]
9000ab66:	3301      	adds	r3, #1
9000ab68:	4293      	cmp	r3, r2
9000ab6a:	9301      	str	r3, [sp, #4]
9000ab6c:	d9f7      	bls.n	9000ab5e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000ab6e:	2300      	movs	r3, #0
9000ab70:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000ab74:	68cb      	ldr	r3, [r1, #12]
9000ab76:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ab78:	bf4c      	ite	mi
9000ab7a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000ab7c:	2301      	movpl	r3, #1
9000ab7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000ab82:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000ab84:	b16b      	cbz	r3, 9000aba2 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000ab86:	4620      	mov	r0, r4
}
9000ab88:	b003      	add	sp, #12
9000ab8a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000ab8e:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000ab90:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000ab92:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000ab94:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000ab96:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000ab9a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000ab9e:	2b00      	cmp	r3, #0
9000aba0:	d1f1      	bne.n	9000ab86 <HAL_MDMA_IRQHandler+0x14e>
}
9000aba2:	b003      	add	sp, #12
9000aba4:	bd30      	pop	{r4, r5, pc}
9000aba6:	bf00      	nop
9000aba8:	24000060 	.word	0x24000060
9000abac:	adffffc0 	.word	0xadffffc0
9000abb0:	1b4e81b5 	.word	0x1b4e81b5

9000abb4 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000abb4:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000abb6:	4c10      	ldr	r4, [pc, #64]	; (9000abf8 <HAL_PWREx_ConfigSupply+0x44>)
9000abb8:	68e3      	ldr	r3, [r4, #12]
9000abba:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000abbe:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000abc0:	d105      	bne.n	9000abce <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000abc2:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000abc6:	1a18      	subs	r0, r3, r0
9000abc8:	bf18      	it	ne
9000abca:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000abcc:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000abce:	f023 0307 	bic.w	r3, r3, #7
9000abd2:	4303      	orrs	r3, r0
9000abd4:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000abd6:	f7fc ff59 	bl	90007a8c <HAL_GetTick>
9000abda:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000abdc:	e005      	b.n	9000abea <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000abde:	f7fc ff55 	bl	90007a8c <HAL_GetTick>
9000abe2:	1b40      	subs	r0, r0, r5
9000abe4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000abe8:	d804      	bhi.n	9000abf4 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000abea:	6863      	ldr	r3, [r4, #4]
9000abec:	049b      	lsls	r3, r3, #18
9000abee:	d5f6      	bpl.n	9000abde <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000abf0:	2000      	movs	r0, #0
}
9000abf2:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000abf4:	2001      	movs	r0, #1
}
9000abf6:	bd38      	pop	{r3, r4, r5, pc}
9000abf8:	58024800 	.word	0x58024800

9000abfc <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000abfc:	4b3b      	ldr	r3, [pc, #236]	; (9000acec <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000abfe:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac00:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac02:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac04:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000ac06:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac0a:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ac0c:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ac10:	d038      	beq.n	9000ac84 <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac12:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ac16:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ac1a:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ac1e:	fb05 f101 	mul.w	r1, r5, r1
9000ac22:	2a01      	cmp	r2, #1
9000ac24:	ee07 1a90 	vmov	s15, r1
9000ac28:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000ac2c:	d002      	beq.n	9000ac34 <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000ac2e:	2a02      	cmp	r2, #2
9000ac30:	d04e      	beq.n	9000acd0 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000ac32:	b34a      	cbz	r2, 9000ac88 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac34:	ee07 0a90 	vmov	s15, r0
9000ac38:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000acf0 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000ac3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ac40:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000ac42:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000ac46:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000acf4 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000ac4a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ac4e:	ee07 3a90 	vmov	s15, r3
9000ac52:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000ac56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ac5a:	eee7 7a25 	vfma.f32	s15, s14, s11
9000ac5e:	ee77 7a86 	vadd.f32	s15, s15, s12
9000ac62:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ac66:	4b21      	ldr	r3, [pc, #132]	; (9000acec <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000ac68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000ac6a:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ac6e:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ac70:	ee07 3a90 	vmov	s15, r3
9000ac74:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000ac78:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000ac7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ac80:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000ac84:	bc30      	pop	{r4, r5}
9000ac86:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac88:	681a      	ldr	r2, [r3, #0]
9000ac8a:	0692      	lsls	r2, r2, #26
9000ac8c:	d527      	bpl.n	9000acde <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac8e:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac90:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac94:	4a18      	ldr	r2, [pc, #96]	; (9000acf8 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac96:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000ac9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac9c:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000aca0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000aca4:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000acf4 <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000aca8:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000acac:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acae:	ee06 3a90 	vmov	s13, r3
9000acb2:	ee06 2a10 	vmov	s12, r2
9000acb6:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000acba:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000acbe:	eee7 6a05 	vfma.f32	s13, s14, s10
9000acc2:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000acc6:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000acca:	ee66 6a87 	vmul.f32	s13, s13, s14
9000acce:	e7ca      	b.n	9000ac66 <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acd0:	ee07 0a90 	vmov	s15, r0
9000acd4:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000acfc <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000acd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000acdc:	e7b0      	b.n	9000ac40 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000acde:	ee07 0a90 	vmov	s15, r0
9000ace2:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000ad00 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000ace6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000acea:	e7a9      	b.n	9000ac40 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000acec:	58024400 	.word	0x58024400
9000acf0:	4a742400 	.word	0x4a742400
9000acf4:	39000000 	.word	0x39000000
9000acf8:	03d09000 	.word	0x03d09000
9000acfc:	4bbebc20 	.word	0x4bbebc20
9000ad00:	4c742400 	.word	0x4c742400

9000ad04 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000ad04:	2800      	cmp	r0, #0
9000ad06:	f000 81e8 	beq.w	9000b0da <HAL_RCC_OscConfig+0x3d6>
{
9000ad0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000ad0c:	6803      	ldr	r3, [r0, #0]
9000ad0e:	4604      	mov	r4, r0
9000ad10:	07d9      	lsls	r1, r3, #31
9000ad12:	d52e      	bpl.n	9000ad72 <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ad14:	49a4      	ldr	r1, [pc, #656]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ad16:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ad18:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ad1a:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ad1e:	2a10      	cmp	r2, #16
9000ad20:	f000 8107 	beq.w	9000af32 <HAL_RCC_OscConfig+0x22e>
9000ad24:	2a18      	cmp	r2, #24
9000ad26:	f000 80ff 	beq.w	9000af28 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ad2a:	6863      	ldr	r3, [r4, #4]
9000ad2c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000ad30:	f000 812a 	beq.w	9000af88 <HAL_RCC_OscConfig+0x284>
9000ad34:	2b00      	cmp	r3, #0
9000ad36:	f000 8168 	beq.w	9000b00a <HAL_RCC_OscConfig+0x306>
9000ad3a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000ad3e:	4b9a      	ldr	r3, [pc, #616]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ad40:	681a      	ldr	r2, [r3, #0]
9000ad42:	f000 8289 	beq.w	9000b258 <HAL_RCC_OscConfig+0x554>
9000ad46:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000ad4a:	601a      	str	r2, [r3, #0]
9000ad4c:	681a      	ldr	r2, [r3, #0]
9000ad4e:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000ad52:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000ad54:	f7fc fe9a 	bl	90007a8c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ad58:	4e93      	ldr	r6, [pc, #588]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000ad5a:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ad5c:	e005      	b.n	9000ad6a <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000ad5e:	f7fc fe95 	bl	90007a8c <HAL_GetTick>
9000ad62:	1b40      	subs	r0, r0, r5
9000ad64:	2864      	cmp	r0, #100	; 0x64
9000ad66:	f200 814e 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ad6a:	6833      	ldr	r3, [r6, #0]
9000ad6c:	039b      	lsls	r3, r3, #14
9000ad6e:	d5f6      	bpl.n	9000ad5e <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000ad70:	6823      	ldr	r3, [r4, #0]
9000ad72:	079d      	lsls	r5, r3, #30
9000ad74:	f100 808a 	bmi.w	9000ae8c <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000ad78:	06d9      	lsls	r1, r3, #27
9000ad7a:	d533      	bpl.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ad7c:	4a8a      	ldr	r2, [pc, #552]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ad7e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ad80:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ad82:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000ad86:	2b08      	cmp	r3, #8
9000ad88:	f000 80e3 	beq.w	9000af52 <HAL_RCC_OscConfig+0x24e>
9000ad8c:	2b18      	cmp	r3, #24
9000ad8e:	f000 80db 	beq.w	9000af48 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000ad92:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000ad94:	4d84      	ldr	r5, [pc, #528]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000ad96:	2b00      	cmp	r3, #0
9000ad98:	f000 816f 	beq.w	9000b07a <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000ad9c:	682b      	ldr	r3, [r5, #0]
9000ad9e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000ada2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000ada4:	f7fc fe72 	bl	90007a8c <HAL_GetTick>
9000ada8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000adaa:	e005      	b.n	9000adb8 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000adac:	f7fc fe6e 	bl	90007a8c <HAL_GetTick>
9000adb0:	1b80      	subs	r0, r0, r6
9000adb2:	2802      	cmp	r0, #2
9000adb4:	f200 8127 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000adb8:	682b      	ldr	r3, [r5, #0]
9000adba:	05db      	lsls	r3, r3, #23
9000adbc:	d5f6      	bpl.n	9000adac <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000adbe:	f7fc fe6b 	bl	90007a98 <HAL_GetREVID>
9000adc2:	f241 0303 	movw	r3, #4099	; 0x1003
9000adc6:	4298      	cmp	r0, r3
9000adc8:	f200 826d 	bhi.w	9000b2a6 <HAL_RCC_OscConfig+0x5a2>
9000adcc:	6a22      	ldr	r2, [r4, #32]
9000adce:	686b      	ldr	r3, [r5, #4]
9000add0:	2a20      	cmp	r2, #32
9000add2:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000add6:	bf0c      	ite	eq
9000add8:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000addc:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000ade0:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ade2:	6823      	ldr	r3, [r4, #0]
9000ade4:	071d      	lsls	r5, r3, #28
9000ade6:	d516      	bpl.n	9000ae16 <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000ade8:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000adea:	4d6f      	ldr	r5, [pc, #444]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000adec:	2b00      	cmp	r3, #0
9000adee:	f000 8122 	beq.w	9000b036 <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000adf2:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000adf4:	f043 0301 	orr.w	r3, r3, #1
9000adf8:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000adfa:	f7fc fe47 	bl	90007a8c <HAL_GetTick>
9000adfe:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000ae00:	e005      	b.n	9000ae0e <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000ae02:	f7fc fe43 	bl	90007a8c <HAL_GetTick>
9000ae06:	1b80      	subs	r0, r0, r6
9000ae08:	2802      	cmp	r0, #2
9000ae0a:	f200 80fc 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000ae0e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000ae10:	0798      	lsls	r0, r3, #30
9000ae12:	d5f6      	bpl.n	9000ae02 <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000ae14:	6823      	ldr	r3, [r4, #0]
9000ae16:	069a      	lsls	r2, r3, #26
9000ae18:	d516      	bpl.n	9000ae48 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000ae1a:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000ae1c:	4d62      	ldr	r5, [pc, #392]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000ae1e:	2b00      	cmp	r3, #0
9000ae20:	f000 811a 	beq.w	9000b058 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000ae24:	682b      	ldr	r3, [r5, #0]
9000ae26:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000ae2a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000ae2c:	f7fc fe2e 	bl	90007a8c <HAL_GetTick>
9000ae30:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000ae32:	e005      	b.n	9000ae40 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000ae34:	f7fc fe2a 	bl	90007a8c <HAL_GetTick>
9000ae38:	1b80      	subs	r0, r0, r6
9000ae3a:	2802      	cmp	r0, #2
9000ae3c:	f200 80e3 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000ae40:	682b      	ldr	r3, [r5, #0]
9000ae42:	049f      	lsls	r7, r3, #18
9000ae44:	d5f6      	bpl.n	9000ae34 <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000ae46:	6823      	ldr	r3, [r4, #0]
9000ae48:	0759      	lsls	r1, r3, #29
9000ae4a:	f100 80a3 	bmi.w	9000af94 <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000ae4e:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000ae50:	b1d0      	cbz	r0, 9000ae88 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000ae52:	4d55      	ldr	r5, [pc, #340]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ae54:	692b      	ldr	r3, [r5, #16]
9000ae56:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000ae5a:	2b18      	cmp	r3, #24
9000ae5c:	f000 81ae 	beq.w	9000b1bc <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000ae60:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ae62:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000ae64:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000ae68:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000ae6a:	f000 8142 	beq.w	9000b0f2 <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000ae6e:	f7fc fe0d 	bl	90007a8c <HAL_GetTick>
9000ae72:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ae74:	e005      	b.n	9000ae82 <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000ae76:	f7fc fe09 	bl	90007a8c <HAL_GetTick>
9000ae7a:	1b00      	subs	r0, r0, r4
9000ae7c:	2802      	cmp	r0, #2
9000ae7e:	f200 80c2 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000ae82:	682b      	ldr	r3, [r5, #0]
9000ae84:	019b      	lsls	r3, r3, #6
9000ae86:	d4f6      	bmi.n	9000ae76 <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000ae88:	2000      	movs	r0, #0
}
9000ae8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ae8c:	4a46      	ldr	r2, [pc, #280]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ae8e:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ae90:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000ae92:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000ae96:	d12d      	bne.n	9000aef4 <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000ae98:	4b43      	ldr	r3, [pc, #268]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000ae9a:	68e2      	ldr	r2, [r4, #12]
9000ae9c:	681b      	ldr	r3, [r3, #0]
9000ae9e:	0759      	lsls	r1, r3, #29
9000aea0:	d501      	bpl.n	9000aea6 <HAL_RCC_OscConfig+0x1a2>
9000aea2:	2a00      	cmp	r2, #0
9000aea4:	d04e      	beq.n	9000af44 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000aea6:	4d40      	ldr	r5, [pc, #256]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000aea8:	682b      	ldr	r3, [r5, #0]
9000aeaa:	f023 0319 	bic.w	r3, r3, #25
9000aeae:	4313      	orrs	r3, r2
9000aeb0:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aeb2:	f7fc fdeb 	bl	90007a8c <HAL_GetTick>
9000aeb6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000aeb8:	e005      	b.n	9000aec6 <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000aeba:	f7fc fde7 	bl	90007a8c <HAL_GetTick>
9000aebe:	1b80      	subs	r0, r0, r6
9000aec0:	2802      	cmp	r0, #2
9000aec2:	f200 80a0 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000aec6:	682b      	ldr	r3, [r5, #0]
9000aec8:	075b      	lsls	r3, r3, #29
9000aeca:	d5f6      	bpl.n	9000aeba <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000aecc:	f7fc fde4 	bl	90007a98 <HAL_GetREVID>
9000aed0:	f241 0303 	movw	r3, #4099	; 0x1003
9000aed4:	4298      	cmp	r0, r3
9000aed6:	f200 80f7 	bhi.w	9000b0c8 <HAL_RCC_OscConfig+0x3c4>
9000aeda:	6922      	ldr	r2, [r4, #16]
9000aedc:	686b      	ldr	r3, [r5, #4]
9000aede:	2a40      	cmp	r2, #64	; 0x40
9000aee0:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000aee4:	bf0c      	ite	eq
9000aee6:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000aeea:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000aeee:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aef0:	6823      	ldr	r3, [r4, #0]
9000aef2:	e741      	b.n	9000ad78 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000aef4:	2b18      	cmp	r3, #24
9000aef6:	f000 80e3 	beq.w	9000b0c0 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000aefa:	4d2b      	ldr	r5, [pc, #172]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000aefc:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000aefe:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000af00:	2a00      	cmp	r2, #0
9000af02:	f000 80cc 	beq.w	9000b09e <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000af06:	f023 0319 	bic.w	r3, r3, #25
9000af0a:	4313      	orrs	r3, r2
9000af0c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000af0e:	f7fc fdbd 	bl	90007a8c <HAL_GetTick>
9000af12:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000af14:	e004      	b.n	9000af20 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000af16:	f7fc fdb9 	bl	90007a8c <HAL_GetTick>
9000af1a:	1b80      	subs	r0, r0, r6
9000af1c:	2802      	cmp	r0, #2
9000af1e:	d872      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000af20:	682b      	ldr	r3, [r5, #0]
9000af22:	075f      	lsls	r7, r3, #29
9000af24:	d5f7      	bpl.n	9000af16 <HAL_RCC_OscConfig+0x212>
9000af26:	e7d1      	b.n	9000aecc <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000af28:	f001 0103 	and.w	r1, r1, #3
9000af2c:	2902      	cmp	r1, #2
9000af2e:	f47f aefc 	bne.w	9000ad2a <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000af32:	4a1d      	ldr	r2, [pc, #116]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000af34:	6812      	ldr	r2, [r2, #0]
9000af36:	0392      	lsls	r2, r2, #14
9000af38:	f57f af1b 	bpl.w	9000ad72 <HAL_RCC_OscConfig+0x6e>
9000af3c:	6862      	ldr	r2, [r4, #4]
9000af3e:	2a00      	cmp	r2, #0
9000af40:	f47f af17 	bne.w	9000ad72 <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000af44:	2001      	movs	r0, #1
}
9000af46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000af48:	f002 0203 	and.w	r2, r2, #3
9000af4c:	2a01      	cmp	r2, #1
9000af4e:	f47f af20 	bne.w	9000ad92 <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000af52:	4b15      	ldr	r3, [pc, #84]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000af54:	681b      	ldr	r3, [r3, #0]
9000af56:	05da      	lsls	r2, r3, #23
9000af58:	d502      	bpl.n	9000af60 <HAL_RCC_OscConfig+0x25c>
9000af5a:	69e3      	ldr	r3, [r4, #28]
9000af5c:	2b80      	cmp	r3, #128	; 0x80
9000af5e:	d1f1      	bne.n	9000af44 <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000af60:	f7fc fd9a 	bl	90007a98 <HAL_GetREVID>
9000af64:	f241 0303 	movw	r3, #4099	; 0x1003
9000af68:	4298      	cmp	r0, r3
9000af6a:	f200 80b8 	bhi.w	9000b0de <HAL_RCC_OscConfig+0x3da>
9000af6e:	6a22      	ldr	r2, [r4, #32]
9000af70:	2a20      	cmp	r2, #32
9000af72:	f000 81a7 	beq.w	9000b2c4 <HAL_RCC_OscConfig+0x5c0>
9000af76:	490c      	ldr	r1, [pc, #48]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000af78:	684b      	ldr	r3, [r1, #4]
9000af7a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000af7e:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000af82:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000af84:	6823      	ldr	r3, [r4, #0]
9000af86:	e72d      	b.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000af88:	4a07      	ldr	r2, [pc, #28]	; (9000afa8 <HAL_RCC_OscConfig+0x2a4>)
9000af8a:	6813      	ldr	r3, [r2, #0]
9000af8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000af90:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000af92:	e6df      	b.n	9000ad54 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000af94:	4d05      	ldr	r5, [pc, #20]	; (9000afac <HAL_RCC_OscConfig+0x2a8>)
9000af96:	682b      	ldr	r3, [r5, #0]
9000af98:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000af9c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000af9e:	f7fc fd75 	bl	90007a8c <HAL_GetTick>
9000afa2:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000afa4:	e009      	b.n	9000afba <HAL_RCC_OscConfig+0x2b6>
9000afa6:	bf00      	nop
9000afa8:	58024400 	.word	0x58024400
9000afac:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000afb0:	f7fc fd6c 	bl	90007a8c <HAL_GetTick>
9000afb4:	1b80      	subs	r0, r0, r6
9000afb6:	2864      	cmp	r0, #100	; 0x64
9000afb8:	d825      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000afba:	682b      	ldr	r3, [r5, #0]
9000afbc:	05da      	lsls	r2, r3, #23
9000afbe:	d5f7      	bpl.n	9000afb0 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000afc0:	68a3      	ldr	r3, [r4, #8]
9000afc2:	2b01      	cmp	r3, #1
9000afc4:	f000 8178 	beq.w	9000b2b8 <HAL_RCC_OscConfig+0x5b4>
9000afc8:	2b00      	cmp	r3, #0
9000afca:	f000 8153 	beq.w	9000b274 <HAL_RCC_OscConfig+0x570>
9000afce:	2b05      	cmp	r3, #5
9000afd0:	4ba5      	ldr	r3, [pc, #660]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
9000afd2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000afd4:	f000 817f 	beq.w	9000b2d6 <HAL_RCC_OscConfig+0x5d2>
9000afd8:	f022 0201 	bic.w	r2, r2, #1
9000afdc:	671a      	str	r2, [r3, #112]	; 0x70
9000afde:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000afe0:	f022 0204 	bic.w	r2, r2, #4
9000afe4:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000afe6:	f7fc fd51 	bl	90007a8c <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000afea:	4e9f      	ldr	r6, [pc, #636]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000afec:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000aff0:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000aff2:	e004      	b.n	9000affe <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000aff4:	f7fc fd4a 	bl	90007a8c <HAL_GetTick>
9000aff8:	1b40      	subs	r0, r0, r5
9000affa:	42b8      	cmp	r0, r7
9000affc:	d803      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000affe:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000b000:	079b      	lsls	r3, r3, #30
9000b002:	d5f7      	bpl.n	9000aff4 <HAL_RCC_OscConfig+0x2f0>
9000b004:	e723      	b.n	9000ae4e <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000b006:	2003      	movs	r0, #3
}
9000b008:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b00a:	4d97      	ldr	r5, [pc, #604]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
9000b00c:	682b      	ldr	r3, [r5, #0]
9000b00e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000b012:	602b      	str	r3, [r5, #0]
9000b014:	682b      	ldr	r3, [r5, #0]
9000b016:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000b01a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b01c:	f7fc fd36 	bl	90007a8c <HAL_GetTick>
9000b020:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b022:	e004      	b.n	9000b02e <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b024:	f7fc fd32 	bl	90007a8c <HAL_GetTick>
9000b028:	1b80      	subs	r0, r0, r6
9000b02a:	2864      	cmp	r0, #100	; 0x64
9000b02c:	d8eb      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b02e:	682b      	ldr	r3, [r5, #0]
9000b030:	039f      	lsls	r7, r3, #14
9000b032:	d4f7      	bmi.n	9000b024 <HAL_RCC_OscConfig+0x320>
9000b034:	e69c      	b.n	9000ad70 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b036:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b038:	f023 0301 	bic.w	r3, r3, #1
9000b03c:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000b03e:	f7fc fd25 	bl	90007a8c <HAL_GetTick>
9000b042:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b044:	e004      	b.n	9000b050 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b046:	f7fc fd21 	bl	90007a8c <HAL_GetTick>
9000b04a:	1b80      	subs	r0, r0, r6
9000b04c:	2802      	cmp	r0, #2
9000b04e:	d8da      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b050:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b052:	0799      	lsls	r1, r3, #30
9000b054:	d4f7      	bmi.n	9000b046 <HAL_RCC_OscConfig+0x342>
9000b056:	e6dd      	b.n	9000ae14 <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000b058:	682b      	ldr	r3, [r5, #0]
9000b05a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000b05e:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b060:	f7fc fd14 	bl	90007a8c <HAL_GetTick>
9000b064:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b066:	e004      	b.n	9000b072 <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b068:	f7fc fd10 	bl	90007a8c <HAL_GetTick>
9000b06c:	1b80      	subs	r0, r0, r6
9000b06e:	2802      	cmp	r0, #2
9000b070:	d8c9      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b072:	682b      	ldr	r3, [r5, #0]
9000b074:	0498      	lsls	r0, r3, #18
9000b076:	d4f7      	bmi.n	9000b068 <HAL_RCC_OscConfig+0x364>
9000b078:	e6e5      	b.n	9000ae46 <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000b07a:	682b      	ldr	r3, [r5, #0]
9000b07c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000b080:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b082:	f7fc fd03 	bl	90007a8c <HAL_GetTick>
9000b086:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b088:	e004      	b.n	9000b094 <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b08a:	f7fc fcff 	bl	90007a8c <HAL_GetTick>
9000b08e:	1b80      	subs	r0, r0, r6
9000b090:	2802      	cmp	r0, #2
9000b092:	d8b8      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b094:	682b      	ldr	r3, [r5, #0]
9000b096:	05df      	lsls	r7, r3, #23
9000b098:	d4f7      	bmi.n	9000b08a <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b09a:	6823      	ldr	r3, [r4, #0]
9000b09c:	e6a2      	b.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000b09e:	f023 0301 	bic.w	r3, r3, #1
9000b0a2:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b0a4:	f7fc fcf2 	bl	90007a8c <HAL_GetTick>
9000b0a8:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b0aa:	e004      	b.n	9000b0b6 <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b0ac:	f7fc fcee 	bl	90007a8c <HAL_GetTick>
9000b0b0:	1b80      	subs	r0, r0, r6
9000b0b2:	2802      	cmp	r0, #2
9000b0b4:	d8a7      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b0b6:	682b      	ldr	r3, [r5, #0]
9000b0b8:	0758      	lsls	r0, r3, #29
9000b0ba:	d4f7      	bmi.n	9000b0ac <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b0bc:	6823      	ldr	r3, [r4, #0]
9000b0be:	e65b      	b.n	9000ad78 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b0c0:	0790      	lsls	r0, r2, #30
9000b0c2:	f47f af1a 	bne.w	9000aefa <HAL_RCC_OscConfig+0x1f6>
9000b0c6:	e6e7      	b.n	9000ae98 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b0c8:	686b      	ldr	r3, [r5, #4]
9000b0ca:	6922      	ldr	r2, [r4, #16]
9000b0cc:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000b0d0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b0d4:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b0d6:	6823      	ldr	r3, [r4, #0]
9000b0d8:	e64e      	b.n	9000ad78 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000b0da:	2001      	movs	r0, #1
}
9000b0dc:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b0de:	4a62      	ldr	r2, [pc, #392]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
9000b0e0:	6a21      	ldr	r1, [r4, #32]
9000b0e2:	68d3      	ldr	r3, [r2, #12]
9000b0e4:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b0e8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b0ec:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b0ee:	6823      	ldr	r3, [r4, #0]
9000b0f0:	e678      	b.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000b0f2:	f7fc fccb 	bl	90007a8c <HAL_GetTick>
9000b0f6:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b0f8:	e004      	b.n	9000b104 <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b0fa:	f7fc fcc7 	bl	90007a8c <HAL_GetTick>
9000b0fe:	1b80      	subs	r0, r0, r6
9000b100:	2802      	cmp	r0, #2
9000b102:	d880      	bhi.n	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b104:	682b      	ldr	r3, [r5, #0]
9000b106:	0199      	lsls	r1, r3, #6
9000b108:	d4f7      	bmi.n	9000b0fa <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b10a:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000b10c:	4b57      	ldr	r3, [pc, #348]	; (9000b26c <HAL_RCC_OscConfig+0x568>)
9000b10e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b110:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b112:	4957      	ldr	r1, [pc, #348]	; (9000b270 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b114:	4e54      	ldr	r6, [pc, #336]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b116:	4313      	orrs	r3, r2
9000b118:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b11a:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b11e:	62ab      	str	r3, [r5, #40]	; 0x28
9000b120:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000b124:	3b01      	subs	r3, #1
9000b126:	3a01      	subs	r2, #1
9000b128:	025b      	lsls	r3, r3, #9
9000b12a:	0412      	lsls	r2, r2, #16
9000b12c:	b29b      	uxth	r3, r3
9000b12e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b132:	4313      	orrs	r3, r2
9000b134:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000b136:	3a01      	subs	r2, #1
9000b138:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b13c:	4313      	orrs	r3, r2
9000b13e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000b140:	3a01      	subs	r2, #1
9000b142:	0612      	lsls	r2, r2, #24
9000b144:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b148:	4313      	orrs	r3, r2
9000b14a:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b14c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b14e:	f023 0301 	bic.w	r3, r3, #1
9000b152:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b154:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000b156:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000b158:	4011      	ands	r1, r2
9000b15a:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000b15e:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b160:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b162:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000b164:	f023 030c 	bic.w	r3, r3, #12
9000b168:	4313      	orrs	r3, r2
9000b16a:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000b16c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b16e:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000b170:	f023 0302 	bic.w	r3, r3, #2
9000b174:	4313      	orrs	r3, r2
9000b176:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000b178:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b17a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b17e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b180:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b182:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000b186:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000b188:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b18a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000b18e:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000b190:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b192:	f043 0301 	orr.w	r3, r3, #1
9000b196:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000b198:	682b      	ldr	r3, [r5, #0]
9000b19a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000b19e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b1a0:	f7fc fc74 	bl	90007a8c <HAL_GetTick>
9000b1a4:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b1a6:	e005      	b.n	9000b1b4 <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b1a8:	f7fc fc70 	bl	90007a8c <HAL_GetTick>
9000b1ac:	1b00      	subs	r0, r0, r4
9000b1ae:	2802      	cmp	r0, #2
9000b1b0:	f63f af29 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b1b4:	6833      	ldr	r3, [r6, #0]
9000b1b6:	019a      	lsls	r2, r3, #6
9000b1b8:	d5f6      	bpl.n	9000b1a8 <HAL_RCC_OscConfig+0x4a4>
9000b1ba:	e665      	b.n	9000ae88 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b1bc:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000b1be:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000b1c0:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b1c2:	f43f ae62 	beq.w	9000ae8a <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b1c6:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b1ca:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000b1cc:	428b      	cmp	r3, r1
9000b1ce:	f47f aeb9 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b1d2:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b1d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b1d8:	429a      	cmp	r2, r3
9000b1da:	f47f aeb3 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b1de:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000b1e0:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000b1e4:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b1e6:	429a      	cmp	r2, r3
9000b1e8:	f47f aeac 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b1ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000b1ee:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000b1f2:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b1f4:	429a      	cmp	r2, r3
9000b1f6:	f47f aea5 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b1fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000b1fc:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000b200:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b202:	429a      	cmp	r2, r3
9000b204:	f47f ae9e 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000b208:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000b20a:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000b20e:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b210:	429e      	cmp	r6, r3
9000b212:	f47f ae97 	bne.w	9000af44 <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b216:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b218:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b21a:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b21e:	429a      	cmp	r2, r3
9000b220:	f43f ae32 	beq.w	9000ae88 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000b224:	4a10      	ldr	r2, [pc, #64]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
9000b226:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b228:	f023 0301 	bic.w	r3, r3, #1
9000b22c:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000b22e:	f7fc fc2d 	bl	90007a8c <HAL_GetTick>
9000b232:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000b234:	f7fc fc2a 	bl	90007a8c <HAL_GetTick>
9000b238:	42a8      	cmp	r0, r5
9000b23a:	d0fb      	beq.n	9000b234 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b23c:	4a0a      	ldr	r2, [pc, #40]	; (9000b268 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000b23e:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b240:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000b242:	4b0b      	ldr	r3, [pc, #44]	; (9000b270 <HAL_RCC_OscConfig+0x56c>)
9000b244:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000b246:	4023      	ands	r3, r4
9000b248:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000b24c:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000b24e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b250:	f043 0301 	orr.w	r3, r3, #1
9000b254:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000b256:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b258:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000b25c:	601a      	str	r2, [r3, #0]
9000b25e:	681a      	ldr	r2, [r3, #0]
9000b260:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000b264:	601a      	str	r2, [r3, #0]
9000b266:	e575      	b.n	9000ad54 <HAL_RCC_OscConfig+0x50>
9000b268:	58024400 	.word	0x58024400
9000b26c:	fffffc0c 	.word	0xfffffc0c
9000b270:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b274:	4d1c      	ldr	r5, [pc, #112]	; (9000b2e8 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b276:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b27a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b27c:	f023 0301 	bic.w	r3, r3, #1
9000b280:	672b      	str	r3, [r5, #112]	; 0x70
9000b282:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b284:	f023 0304 	bic.w	r3, r3, #4
9000b288:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000b28a:	f7fc fbff 	bl	90007a8c <HAL_GetTick>
9000b28e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b290:	e005      	b.n	9000b29e <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b292:	f7fc fbfb 	bl	90007a8c <HAL_GetTick>
9000b296:	1b80      	subs	r0, r0, r6
9000b298:	42b8      	cmp	r0, r7
9000b29a:	f63f aeb4 	bhi.w	9000b006 <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b29e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b2a0:	0798      	lsls	r0, r3, #30
9000b2a2:	d4f6      	bmi.n	9000b292 <HAL_RCC_OscConfig+0x58e>
9000b2a4:	e5d3      	b.n	9000ae4e <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b2a6:	68eb      	ldr	r3, [r5, #12]
9000b2a8:	6a22      	ldr	r2, [r4, #32]
9000b2aa:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b2ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b2b2:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b2b4:	6823      	ldr	r3, [r4, #0]
9000b2b6:	e595      	b.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b2b8:	4a0b      	ldr	r2, [pc, #44]	; (9000b2e8 <HAL_RCC_OscConfig+0x5e4>)
9000b2ba:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000b2bc:	f043 0301 	orr.w	r3, r3, #1
9000b2c0:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b2c2:	e690      	b.n	9000afe6 <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b2c4:	4a08      	ldr	r2, [pc, #32]	; (9000b2e8 <HAL_RCC_OscConfig+0x5e4>)
9000b2c6:	6853      	ldr	r3, [r2, #4]
9000b2c8:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000b2cc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000b2d0:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b2d2:	6823      	ldr	r3, [r4, #0]
9000b2d4:	e586      	b.n	9000ade4 <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b2d6:	f042 0204 	orr.w	r2, r2, #4
9000b2da:	671a      	str	r2, [r3, #112]	; 0x70
9000b2dc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b2de:	f042 0201 	orr.w	r2, r2, #1
9000b2e2:	671a      	str	r2, [r3, #112]	; 0x70
9000b2e4:	e67f      	b.n	9000afe6 <HAL_RCC_OscConfig+0x2e2>
9000b2e6:	bf00      	nop
9000b2e8:	58024400 	.word	0x58024400

9000b2ec <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b2ec:	4a47      	ldr	r2, [pc, #284]	; (9000b40c <HAL_RCC_GetSysClockFreq+0x120>)
9000b2ee:	6913      	ldr	r3, [r2, #16]
9000b2f0:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b2f4:	2b10      	cmp	r3, #16
9000b2f6:	d004      	beq.n	9000b302 <HAL_RCC_GetSysClockFreq+0x16>
9000b2f8:	2b18      	cmp	r3, #24
9000b2fa:	d00d      	beq.n	9000b318 <HAL_RCC_GetSysClockFreq+0x2c>
9000b2fc:	b11b      	cbz	r3, 9000b306 <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000b2fe:	4844      	ldr	r0, [pc, #272]	; (9000b410 <HAL_RCC_GetSysClockFreq+0x124>)
9000b300:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b302:	4844      	ldr	r0, [pc, #272]	; (9000b414 <HAL_RCC_GetSysClockFreq+0x128>)
9000b304:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b306:	6813      	ldr	r3, [r2, #0]
9000b308:	0699      	lsls	r1, r3, #26
9000b30a:	d54a      	bpl.n	9000b3a2 <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b30c:	6813      	ldr	r3, [r2, #0]
9000b30e:	4842      	ldr	r0, [pc, #264]	; (9000b418 <HAL_RCC_GetSysClockFreq+0x12c>)
9000b310:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b314:	40d8      	lsrs	r0, r3
9000b316:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b318:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000b31a:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b31c:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b31e:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000b320:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b324:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b326:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b32a:	d038      	beq.n	9000b39e <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b32c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b330:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b334:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b338:	fb05 f101 	mul.w	r1, r5, r1
9000b33c:	2b01      	cmp	r3, #1
9000b33e:	ee07 1a90 	vmov	s15, r1
9000b342:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000b346:	d002      	beq.n	9000b34e <HAL_RCC_GetSysClockFreq+0x62>
9000b348:	2b02      	cmp	r3, #2
9000b34a:	d02c      	beq.n	9000b3a6 <HAL_RCC_GetSysClockFreq+0xba>
9000b34c:	b393      	cbz	r3, 9000b3b4 <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b34e:	ee07 0a90 	vmov	s15, r0
9000b352:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000b41c <HAL_RCC_GetSysClockFreq+0x130>
9000b356:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b35a:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b35c:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000b360:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000b420 <HAL_RCC_GetSysClockFreq+0x134>
9000b364:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b368:	ee07 3a90 	vmov	s15, r3
9000b36c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000b370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b374:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b378:	ee77 7a86 	vadd.f32	s15, s15, s12
9000b37c:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b380:	4b22      	ldr	r3, [pc, #136]	; (9000b40c <HAL_RCC_GetSysClockFreq+0x120>)
9000b382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000b384:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b388:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b38a:	ee07 3a90 	vmov	s15, r3
9000b38e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b392:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000b396:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b39a:	ee17 0a90 	vmov	r0, s15
}
9000b39e:	bc30      	pop	{r4, r5}
9000b3a0:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b3a2:	481d      	ldr	r0, [pc, #116]	; (9000b418 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000b3a4:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3a6:	ee07 0a90 	vmov	s15, r0
9000b3aa:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000b424 <HAL_RCC_GetSysClockFreq+0x138>
9000b3ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b3b2:	e7d2      	b.n	9000b35a <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b3b4:	6813      	ldr	r3, [r2, #0]
9000b3b6:	069b      	lsls	r3, r3, #26
9000b3b8:	d520      	bpl.n	9000b3fc <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3ba:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3bc:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3c0:	4915      	ldr	r1, [pc, #84]	; (9000b418 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3c2:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000b3c6:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3c8:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b3d0:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000b420 <HAL_RCC_GetSysClockFreq+0x134>
9000b3d4:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b3d8:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3da:	ee06 3a90 	vmov	s13, r3
9000b3de:	ee06 1a10 	vmov	s12, r1
9000b3e2:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000b3e6:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b3ea:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b3ee:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b3f2:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000b3f6:	ee66 6a87 	vmul.f32	s13, s13, s14
9000b3fa:	e7c1      	b.n	9000b380 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b3fc:	ee07 0a90 	vmov	s15, r0
9000b400:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000b428 <HAL_RCC_GetSysClockFreq+0x13c>
9000b404:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b408:	e7a7      	b.n	9000b35a <HAL_RCC_GetSysClockFreq+0x6e>
9000b40a:	bf00      	nop
9000b40c:	58024400 	.word	0x58024400
9000b410:	003d0900 	.word	0x003d0900
9000b414:	017d7840 	.word	0x017d7840
9000b418:	03d09000 	.word	0x03d09000
9000b41c:	4a742400 	.word	0x4a742400
9000b420:	39000000 	.word	0x39000000
9000b424:	4bbebc20 	.word	0x4bbebc20
9000b428:	4c742400 	.word	0x4c742400

9000b42c <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b42c:	2800      	cmp	r0, #0
9000b42e:	f000 810c 	beq.w	9000b64a <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b432:	4a8c      	ldr	r2, [pc, #560]	; (9000b664 <HAL_RCC_ClockConfig+0x238>)
9000b434:	6813      	ldr	r3, [r2, #0]
9000b436:	f003 030f 	and.w	r3, r3, #15
9000b43a:	428b      	cmp	r3, r1
{
9000b43c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b440:	4604      	mov	r4, r0
9000b442:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b444:	d20c      	bcs.n	9000b460 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b446:	6813      	ldr	r3, [r2, #0]
9000b448:	f023 030f 	bic.w	r3, r3, #15
9000b44c:	430b      	orrs	r3, r1
9000b44e:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b450:	6813      	ldr	r3, [r2, #0]
9000b452:	f003 030f 	and.w	r3, r3, #15
9000b456:	428b      	cmp	r3, r1
9000b458:	d002      	beq.n	9000b460 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b45a:	2001      	movs	r0, #1
}
9000b45c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b460:	6823      	ldr	r3, [r4, #0]
9000b462:	075f      	lsls	r7, r3, #29
9000b464:	d50b      	bpl.n	9000b47e <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b466:	4980      	ldr	r1, [pc, #512]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b468:	6920      	ldr	r0, [r4, #16]
9000b46a:	698a      	ldr	r2, [r1, #24]
9000b46c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b470:	4290      	cmp	r0, r2
9000b472:	d904      	bls.n	9000b47e <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b474:	698a      	ldr	r2, [r1, #24]
9000b476:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b47a:	4302      	orrs	r2, r0
9000b47c:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b47e:	071e      	lsls	r6, r3, #28
9000b480:	d50b      	bpl.n	9000b49a <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b482:	4979      	ldr	r1, [pc, #484]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b484:	6960      	ldr	r0, [r4, #20]
9000b486:	69ca      	ldr	r2, [r1, #28]
9000b488:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b48c:	4290      	cmp	r0, r2
9000b48e:	d904      	bls.n	9000b49a <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b490:	69ca      	ldr	r2, [r1, #28]
9000b492:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b496:	4302      	orrs	r2, r0
9000b498:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b49a:	06d8      	lsls	r0, r3, #27
9000b49c:	d50b      	bpl.n	9000b4b6 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b49e:	4972      	ldr	r1, [pc, #456]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b4a0:	69a0      	ldr	r0, [r4, #24]
9000b4a2:	69ca      	ldr	r2, [r1, #28]
9000b4a4:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b4a8:	4290      	cmp	r0, r2
9000b4aa:	d904      	bls.n	9000b4b6 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b4ac:	69ca      	ldr	r2, [r1, #28]
9000b4ae:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b4b2:	4302      	orrs	r2, r0
9000b4b4:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b4b6:	0699      	lsls	r1, r3, #26
9000b4b8:	d50b      	bpl.n	9000b4d2 <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b4ba:	496b      	ldr	r1, [pc, #428]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b4bc:	69e0      	ldr	r0, [r4, #28]
9000b4be:	6a0a      	ldr	r2, [r1, #32]
9000b4c0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b4c4:	4290      	cmp	r0, r2
9000b4c6:	d904      	bls.n	9000b4d2 <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b4c8:	6a0a      	ldr	r2, [r1, #32]
9000b4ca:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b4ce:	4302      	orrs	r2, r0
9000b4d0:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b4d2:	079a      	lsls	r2, r3, #30
9000b4d4:	f140 80ab 	bpl.w	9000b62e <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b4d8:	4863      	ldr	r0, [pc, #396]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b4da:	68e1      	ldr	r1, [r4, #12]
9000b4dc:	6982      	ldr	r2, [r0, #24]
9000b4de:	f002 020f 	and.w	r2, r2, #15
9000b4e2:	4291      	cmp	r1, r2
9000b4e4:	d904      	bls.n	9000b4f0 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b4e6:	6982      	ldr	r2, [r0, #24]
9000b4e8:	f022 020f 	bic.w	r2, r2, #15
9000b4ec:	430a      	orrs	r2, r1
9000b4ee:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b4f0:	07d8      	lsls	r0, r3, #31
9000b4f2:	d530      	bpl.n	9000b556 <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b4f4:	4a5c      	ldr	r2, [pc, #368]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b4f6:	68a1      	ldr	r1, [r4, #8]
9000b4f8:	6993      	ldr	r3, [r2, #24]
9000b4fa:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000b4fe:	430b      	orrs	r3, r1
9000b500:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b502:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b504:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b506:	2902      	cmp	r1, #2
9000b508:	f000 80a1 	beq.w	9000b64e <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b50c:	2903      	cmp	r1, #3
9000b50e:	f000 8098 	beq.w	9000b642 <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b512:	2901      	cmp	r1, #1
9000b514:	f000 80a1 	beq.w	9000b65a <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b518:	0758      	lsls	r0, r3, #29
9000b51a:	d59e      	bpl.n	9000b45a <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b51c:	4e52      	ldr	r6, [pc, #328]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b51e:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b522:	6933      	ldr	r3, [r6, #16]
9000b524:	f023 0307 	bic.w	r3, r3, #7
9000b528:	430b      	orrs	r3, r1
9000b52a:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b52c:	f7fc faae 	bl	90007a8c <HAL_GetTick>
9000b530:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b532:	e005      	b.n	9000b540 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b534:	f7fc faaa 	bl	90007a8c <HAL_GetTick>
9000b538:	1bc0      	subs	r0, r0, r7
9000b53a:	4540      	cmp	r0, r8
9000b53c:	f200 808b 	bhi.w	9000b656 <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b540:	6933      	ldr	r3, [r6, #16]
9000b542:	6862      	ldr	r2, [r4, #4]
9000b544:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b548:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b54c:	d1f2      	bne.n	9000b534 <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b54e:	6823      	ldr	r3, [r4, #0]
9000b550:	0799      	lsls	r1, r3, #30
9000b552:	d506      	bpl.n	9000b562 <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b554:	68e1      	ldr	r1, [r4, #12]
9000b556:	4844      	ldr	r0, [pc, #272]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b558:	6982      	ldr	r2, [r0, #24]
9000b55a:	f002 020f 	and.w	r2, r2, #15
9000b55e:	428a      	cmp	r2, r1
9000b560:	d869      	bhi.n	9000b636 <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b562:	4940      	ldr	r1, [pc, #256]	; (9000b664 <HAL_RCC_ClockConfig+0x238>)
9000b564:	680a      	ldr	r2, [r1, #0]
9000b566:	f002 020f 	and.w	r2, r2, #15
9000b56a:	42aa      	cmp	r2, r5
9000b56c:	d90a      	bls.n	9000b584 <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b56e:	680a      	ldr	r2, [r1, #0]
9000b570:	f022 020f 	bic.w	r2, r2, #15
9000b574:	432a      	orrs	r2, r5
9000b576:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b578:	680a      	ldr	r2, [r1, #0]
9000b57a:	f002 020f 	and.w	r2, r2, #15
9000b57e:	42aa      	cmp	r2, r5
9000b580:	f47f af6b 	bne.w	9000b45a <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b584:	075a      	lsls	r2, r3, #29
9000b586:	d50b      	bpl.n	9000b5a0 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b588:	4937      	ldr	r1, [pc, #220]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b58a:	6920      	ldr	r0, [r4, #16]
9000b58c:	698a      	ldr	r2, [r1, #24]
9000b58e:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b592:	4290      	cmp	r0, r2
9000b594:	d204      	bcs.n	9000b5a0 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b596:	698a      	ldr	r2, [r1, #24]
9000b598:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b59c:	4302      	orrs	r2, r0
9000b59e:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b5a0:	071f      	lsls	r7, r3, #28
9000b5a2:	d50b      	bpl.n	9000b5bc <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b5a4:	4930      	ldr	r1, [pc, #192]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b5a6:	6960      	ldr	r0, [r4, #20]
9000b5a8:	69ca      	ldr	r2, [r1, #28]
9000b5aa:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b5ae:	4290      	cmp	r0, r2
9000b5b0:	d204      	bcs.n	9000b5bc <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b5b2:	69ca      	ldr	r2, [r1, #28]
9000b5b4:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b5b8:	4302      	orrs	r2, r0
9000b5ba:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b5bc:	06de      	lsls	r6, r3, #27
9000b5be:	d50b      	bpl.n	9000b5d8 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b5c0:	4929      	ldr	r1, [pc, #164]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b5c2:	69a0      	ldr	r0, [r4, #24]
9000b5c4:	69ca      	ldr	r2, [r1, #28]
9000b5c6:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b5ca:	4290      	cmp	r0, r2
9000b5cc:	d204      	bcs.n	9000b5d8 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b5ce:	69ca      	ldr	r2, [r1, #28]
9000b5d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b5d4:	4302      	orrs	r2, r0
9000b5d6:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b5d8:	069d      	lsls	r5, r3, #26
9000b5da:	d50b      	bpl.n	9000b5f4 <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b5dc:	4a22      	ldr	r2, [pc, #136]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b5de:	69e1      	ldr	r1, [r4, #28]
9000b5e0:	6a13      	ldr	r3, [r2, #32]
9000b5e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000b5e6:	4299      	cmp	r1, r3
9000b5e8:	d204      	bcs.n	9000b5f4 <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b5ea:	6a13      	ldr	r3, [r2, #32]
9000b5ec:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000b5f0:	430b      	orrs	r3, r1
9000b5f2:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b5f4:	f7ff fe7a 	bl	9000b2ec <HAL_RCC_GetSysClockFreq>
9000b5f8:	4a1b      	ldr	r2, [pc, #108]	; (9000b668 <HAL_RCC_ClockConfig+0x23c>)
9000b5fa:	4603      	mov	r3, r0
9000b5fc:	481b      	ldr	r0, [pc, #108]	; (9000b66c <HAL_RCC_ClockConfig+0x240>)
9000b5fe:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b600:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b602:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b606:	4d1a      	ldr	r5, [pc, #104]	; (9000b670 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b608:	f002 020f 	and.w	r2, r2, #15
9000b60c:	4c19      	ldr	r4, [pc, #100]	; (9000b674 <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b60e:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b610:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b612:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b616:	4818      	ldr	r0, [pc, #96]	; (9000b678 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b618:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b61c:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b61e:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b620:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b622:	40d3      	lsrs	r3, r2
9000b624:	6023      	str	r3, [r4, #0]
}
9000b626:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b62a:	f7f7 bfe1 	b.w	900035f0 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b62e:	07da      	lsls	r2, r3, #31
9000b630:	f53f af60 	bmi.w	9000b4f4 <HAL_RCC_ClockConfig+0xc8>
9000b634:	e795      	b.n	9000b562 <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b636:	6982      	ldr	r2, [r0, #24]
9000b638:	f022 020f 	bic.w	r2, r2, #15
9000b63c:	430a      	orrs	r2, r1
9000b63e:	6182      	str	r2, [r0, #24]
9000b640:	e78f      	b.n	9000b562 <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b642:	019f      	lsls	r7, r3, #6
9000b644:	f53f af6a 	bmi.w	9000b51c <HAL_RCC_ClockConfig+0xf0>
9000b648:	e707      	b.n	9000b45a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b64a:	2001      	movs	r0, #1
}
9000b64c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b64e:	039b      	lsls	r3, r3, #14
9000b650:	f53f af64 	bmi.w	9000b51c <HAL_RCC_ClockConfig+0xf0>
9000b654:	e701      	b.n	9000b45a <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b656:	2003      	movs	r0, #3
9000b658:	e700      	b.n	9000b45c <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b65a:	05de      	lsls	r6, r3, #23
9000b65c:	f53f af5e 	bmi.w	9000b51c <HAL_RCC_ClockConfig+0xf0>
9000b660:	e6fb      	b.n	9000b45a <HAL_RCC_ClockConfig+0x2e>
9000b662:	bf00      	nop
9000b664:	52002000 	.word	0x52002000
9000b668:	58024400 	.word	0x58024400
9000b66c:	90029c9c 	.word	0x90029c9c
9000b670:	24000060 	.word	0x24000060
9000b674:	24000064 	.word	0x24000064
9000b678:	2400006c 	.word	0x2400006c

9000b67c <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b67c:	4a1c      	ldr	r2, [pc, #112]	; (9000b6f0 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b67e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b680:	6913      	ldr	r3, [r2, #16]
9000b682:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b686:	2b10      	cmp	r3, #16
9000b688:	d021      	beq.n	9000b6ce <HAL_RCC_GetPCLK1Freq+0x52>
9000b68a:	2b18      	cmp	r3, #24
9000b68c:	d02a      	beq.n	9000b6e4 <HAL_RCC_GetPCLK1Freq+0x68>
9000b68e:	b303      	cbz	r3, 9000b6d2 <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b690:	4818      	ldr	r0, [pc, #96]	; (9000b6f4 <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b692:	4a17      	ldr	r2, [pc, #92]	; (9000b6f0 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b694:	4918      	ldr	r1, [pc, #96]	; (9000b6f8 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b696:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b698:	4c18      	ldr	r4, [pc, #96]	; (9000b6fc <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b69a:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b69e:	4d18      	ldr	r5, [pc, #96]	; (9000b700 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b6a0:	5ccb      	ldrb	r3, [r1, r3]
9000b6a2:	f003 031f 	and.w	r3, r3, #31
9000b6a6:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6a8:	6993      	ldr	r3, [r2, #24]
9000b6aa:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b6ae:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b6b0:	5ccb      	ldrb	r3, [r1, r3]
9000b6b2:	f003 031f 	and.w	r3, r3, #31
9000b6b6:	fa20 f303 	lsr.w	r3, r0, r3
9000b6ba:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b6bc:	69d2      	ldr	r2, [r2, #28]
9000b6be:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b6c2:	5c88      	ldrb	r0, [r1, r2]
9000b6c4:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b6c8:	fa23 f000 	lsr.w	r0, r3, r0
9000b6cc:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b6ce:	480d      	ldr	r0, [pc, #52]	; (9000b704 <HAL_RCC_GetPCLK1Freq+0x88>)
9000b6d0:	e7df      	b.n	9000b692 <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b6d2:	6813      	ldr	r3, [r2, #0]
9000b6d4:	069b      	lsls	r3, r3, #26
9000b6d6:	d508      	bpl.n	9000b6ea <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b6d8:	6813      	ldr	r3, [r2, #0]
9000b6da:	480b      	ldr	r0, [pc, #44]	; (9000b708 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b6dc:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b6e0:	40d8      	lsrs	r0, r3
9000b6e2:	e7d6      	b.n	9000b692 <HAL_RCC_GetPCLK1Freq+0x16>
9000b6e4:	f7ff fa8a 	bl	9000abfc <HAL_RCC_GetSysClockFreq.part.0>
9000b6e8:	e7d3      	b.n	9000b692 <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b6ea:	4807      	ldr	r0, [pc, #28]	; (9000b708 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b6ec:	e7d1      	b.n	9000b692 <HAL_RCC_GetPCLK1Freq+0x16>
9000b6ee:	bf00      	nop
9000b6f0:	58024400 	.word	0x58024400
9000b6f4:	003d0900 	.word	0x003d0900
9000b6f8:	90029c9c 	.word	0x90029c9c
9000b6fc:	24000064 	.word	0x24000064
9000b700:	24000060 	.word	0x24000060
9000b704:	017d7840 	.word	0x017d7840
9000b708:	03d09000 	.word	0x03d09000

9000b70c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b70c:	4a1c      	ldr	r2, [pc, #112]	; (9000b780 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b70e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b710:	6913      	ldr	r3, [r2, #16]
9000b712:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b716:	2b10      	cmp	r3, #16
9000b718:	d021      	beq.n	9000b75e <HAL_RCC_GetPCLK2Freq+0x52>
9000b71a:	2b18      	cmp	r3, #24
9000b71c:	d02a      	beq.n	9000b774 <HAL_RCC_GetPCLK2Freq+0x68>
9000b71e:	b303      	cbz	r3, 9000b762 <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b720:	4818      	ldr	r0, [pc, #96]	; (9000b784 <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b722:	4a17      	ldr	r2, [pc, #92]	; (9000b780 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b724:	4918      	ldr	r1, [pc, #96]	; (9000b788 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b726:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b728:	4c18      	ldr	r4, [pc, #96]	; (9000b78c <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b72a:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b72e:	4d18      	ldr	r5, [pc, #96]	; (9000b790 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b730:	5ccb      	ldrb	r3, [r1, r3]
9000b732:	f003 031f 	and.w	r3, r3, #31
9000b736:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b738:	6993      	ldr	r3, [r2, #24]
9000b73a:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b73e:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b740:	5ccb      	ldrb	r3, [r1, r3]
9000b742:	f003 031f 	and.w	r3, r3, #31
9000b746:	fa20 f303 	lsr.w	r3, r0, r3
9000b74a:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b74c:	69d2      	ldr	r2, [r2, #28]
9000b74e:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b752:	5c88      	ldrb	r0, [r1, r2]
9000b754:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b758:	fa23 f000 	lsr.w	r0, r3, r0
9000b75c:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b75e:	480d      	ldr	r0, [pc, #52]	; (9000b794 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b760:	e7df      	b.n	9000b722 <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b762:	6813      	ldr	r3, [r2, #0]
9000b764:	069b      	lsls	r3, r3, #26
9000b766:	d508      	bpl.n	9000b77a <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b768:	6813      	ldr	r3, [r2, #0]
9000b76a:	480b      	ldr	r0, [pc, #44]	; (9000b798 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b76c:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b770:	40d8      	lsrs	r0, r3
9000b772:	e7d6      	b.n	9000b722 <HAL_RCC_GetPCLK2Freq+0x16>
9000b774:	f7ff fa42 	bl	9000abfc <HAL_RCC_GetSysClockFreq.part.0>
9000b778:	e7d3      	b.n	9000b722 <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b77a:	4807      	ldr	r0, [pc, #28]	; (9000b798 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b77c:	e7d1      	b.n	9000b722 <HAL_RCC_GetPCLK2Freq+0x16>
9000b77e:	bf00      	nop
9000b780:	58024400 	.word	0x58024400
9000b784:	003d0900 	.word	0x003d0900
9000b788:	90029c9c 	.word	0x90029c9c
9000b78c:	24000064 	.word	0x24000064
9000b790:	24000060 	.word	0x24000060
9000b794:	017d7840 	.word	0x017d7840
9000b798:	03d09000 	.word	0x03d09000

9000b79c <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b79c:	4b13      	ldr	r3, [pc, #76]	; (9000b7ec <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b79e:	223f      	movs	r2, #63	; 0x3f
9000b7a0:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b7a2:	691a      	ldr	r2, [r3, #16]
9000b7a4:	f002 0207 	and.w	r2, r2, #7
9000b7a8:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b7aa:	699a      	ldr	r2, [r3, #24]
9000b7ac:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000b7b0:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b7b2:	699a      	ldr	r2, [r3, #24]
9000b7b4:	f002 020f 	and.w	r2, r2, #15
9000b7b8:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b7ba:	699a      	ldr	r2, [r3, #24]
9000b7bc:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b7c0:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b7c2:	69da      	ldr	r2, [r3, #28]
9000b7c4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b7c8:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b7ca:	69da      	ldr	r2, [r3, #28]
9000b7cc:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b7d0:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b7d2:	6a1b      	ldr	r3, [r3, #32]
{
9000b7d4:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b7d6:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b7da:	4c05      	ldr	r4, [pc, #20]	; (9000b7f0 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b7dc:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b7de:	6823      	ldr	r3, [r4, #0]
}
9000b7e0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b7e4:	f003 030f 	and.w	r3, r3, #15
9000b7e8:	600b      	str	r3, [r1, #0]
}
9000b7ea:	4770      	bx	lr
9000b7ec:	58024400 	.word	0x58024400
9000b7f0:	52002000 	.word	0x52002000

9000b7f4 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000b7f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7f6:	4c3a      	ldr	r4, [pc, #232]	; (9000b8e0 <RCCEx_PLL2_Config+0xec>)
9000b7f8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b7fa:	f003 0303 	and.w	r3, r3, #3
9000b7fe:	2b03      	cmp	r3, #3
9000b800:	d067      	beq.n	9000b8d2 <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b802:	6823      	ldr	r3, [r4, #0]
9000b804:	4606      	mov	r6, r0
9000b806:	460f      	mov	r7, r1
9000b808:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000b80c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b80e:	f7fc f93d 	bl	90007a8c <HAL_GetTick>
9000b812:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b814:	e004      	b.n	9000b820 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b816:	f7fc f939 	bl	90007a8c <HAL_GetTick>
9000b81a:	1b43      	subs	r3, r0, r5
9000b81c:	2b02      	cmp	r3, #2
9000b81e:	d856      	bhi.n	9000b8ce <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b820:	6823      	ldr	r3, [r4, #0]
9000b822:	011a      	lsls	r2, r3, #4
9000b824:	d4f7      	bmi.n	9000b816 <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b826:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b828:	6832      	ldr	r2, [r6, #0]
9000b82a:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000b82e:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b832:	62a3      	str	r3, [r4, #40]	; 0x28
9000b834:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b838:	3b01      	subs	r3, #1
9000b83a:	3a01      	subs	r2, #1
9000b83c:	025b      	lsls	r3, r3, #9
9000b83e:	0412      	lsls	r2, r2, #16
9000b840:	b29b      	uxth	r3, r3
9000b842:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b846:	4313      	orrs	r3, r2
9000b848:	6872      	ldr	r2, [r6, #4]
9000b84a:	3a01      	subs	r2, #1
9000b84c:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b850:	4313      	orrs	r3, r2
9000b852:	6932      	ldr	r2, [r6, #16]
9000b854:	3a01      	subs	r2, #1
9000b856:	0612      	lsls	r2, r2, #24
9000b858:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b85c:	4313      	orrs	r3, r2
9000b85e:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b860:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b862:	6972      	ldr	r2, [r6, #20]
9000b864:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000b868:	4313      	orrs	r3, r2
9000b86a:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b86c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b86e:	69b3      	ldr	r3, [r6, #24]
9000b870:	f022 0220 	bic.w	r2, r2, #32
9000b874:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b876:	4b1b      	ldr	r3, [pc, #108]	; (9000b8e4 <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b878:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b87a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b87c:	f022 0210 	bic.w	r2, r2, #16
9000b880:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b882:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000b884:	69f2      	ldr	r2, [r6, #28]
9000b886:	400b      	ands	r3, r1
9000b888:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b88c:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b88e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b890:	f043 0310 	orr.w	r3, r3, #16
9000b894:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b896:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b898:	b1ef      	cbz	r7, 9000b8d6 <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b89a:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b89c:	bf0c      	ite	eq
9000b89e:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b8a2:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000b8a6:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b8a8:	4c0d      	ldr	r4, [pc, #52]	; (9000b8e0 <RCCEx_PLL2_Config+0xec>)
9000b8aa:	6823      	ldr	r3, [r4, #0]
9000b8ac:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000b8b0:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b8b2:	f7fc f8eb 	bl	90007a8c <HAL_GetTick>
9000b8b6:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b8b8:	e004      	b.n	9000b8c4 <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b8ba:	f7fc f8e7 	bl	90007a8c <HAL_GetTick>
9000b8be:	1b40      	subs	r0, r0, r5
9000b8c0:	2802      	cmp	r0, #2
9000b8c2:	d804      	bhi.n	9000b8ce <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b8c4:	6823      	ldr	r3, [r4, #0]
9000b8c6:	011b      	lsls	r3, r3, #4
9000b8c8:	d5f7      	bpl.n	9000b8ba <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000b8ca:	2000      	movs	r0, #0
}
9000b8cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b8ce:	2003      	movs	r0, #3
}
9000b8d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000b8d2:	2001      	movs	r0, #1
}
9000b8d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b8d6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000b8da:	62e3      	str	r3, [r4, #44]	; 0x2c
9000b8dc:	e7e4      	b.n	9000b8a8 <RCCEx_PLL2_Config+0xb4>
9000b8de:	bf00      	nop
9000b8e0:	58024400 	.word	0x58024400
9000b8e4:	ffff0007 	.word	0xffff0007

9000b8e8 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000b8e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b8ea:	4c3a      	ldr	r4, [pc, #232]	; (9000b9d4 <RCCEx_PLL3_Config+0xec>)
9000b8ec:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b8ee:	f003 0303 	and.w	r3, r3, #3
9000b8f2:	2b03      	cmp	r3, #3
9000b8f4:	d067      	beq.n	9000b9c6 <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b8f6:	6823      	ldr	r3, [r4, #0]
9000b8f8:	4606      	mov	r6, r0
9000b8fa:	460f      	mov	r7, r1
9000b8fc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000b900:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b902:	f7fc f8c3 	bl	90007a8c <HAL_GetTick>
9000b906:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b908:	e004      	b.n	9000b914 <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b90a:	f7fc f8bf 	bl	90007a8c <HAL_GetTick>
9000b90e:	1b43      	subs	r3, r0, r5
9000b910:	2b02      	cmp	r3, #2
9000b912:	d856      	bhi.n	9000b9c2 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b914:	6823      	ldr	r3, [r4, #0]
9000b916:	009a      	lsls	r2, r3, #2
9000b918:	d4f7      	bmi.n	9000b90a <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b91a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b91c:	6832      	ldr	r2, [r6, #0]
9000b91e:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000b922:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b926:	62a3      	str	r3, [r4, #40]	; 0x28
9000b928:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b92c:	3b01      	subs	r3, #1
9000b92e:	3a01      	subs	r2, #1
9000b930:	025b      	lsls	r3, r3, #9
9000b932:	0412      	lsls	r2, r2, #16
9000b934:	b29b      	uxth	r3, r3
9000b936:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b93a:	4313      	orrs	r3, r2
9000b93c:	6872      	ldr	r2, [r6, #4]
9000b93e:	3a01      	subs	r2, #1
9000b940:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b944:	4313      	orrs	r3, r2
9000b946:	6932      	ldr	r2, [r6, #16]
9000b948:	3a01      	subs	r2, #1
9000b94a:	0612      	lsls	r2, r2, #24
9000b94c:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b950:	4313      	orrs	r3, r2
9000b952:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b954:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b956:	6972      	ldr	r2, [r6, #20]
9000b958:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000b95c:	4313      	orrs	r3, r2
9000b95e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b960:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b962:	69b3      	ldr	r3, [r6, #24]
9000b964:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000b968:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b96a:	4b1b      	ldr	r3, [pc, #108]	; (9000b9d8 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b96c:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b96e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b970:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000b974:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b976:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000b978:	69f2      	ldr	r2, [r6, #28]
9000b97a:	400b      	ands	r3, r1
9000b97c:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b980:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b982:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b984:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000b988:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b98a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b98c:	b1ef      	cbz	r7, 9000b9ca <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b98e:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b990:	bf0c      	ite	eq
9000b992:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b996:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000b99a:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b99c:	4c0d      	ldr	r4, [pc, #52]	; (9000b9d4 <RCCEx_PLL3_Config+0xec>)
9000b99e:	6823      	ldr	r3, [r4, #0]
9000b9a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000b9a4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b9a6:	f7fc f871 	bl	90007a8c <HAL_GetTick>
9000b9aa:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b9ac:	e004      	b.n	9000b9b8 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b9ae:	f7fc f86d 	bl	90007a8c <HAL_GetTick>
9000b9b2:	1b40      	subs	r0, r0, r5
9000b9b4:	2802      	cmp	r0, #2
9000b9b6:	d804      	bhi.n	9000b9c2 <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b9b8:	6823      	ldr	r3, [r4, #0]
9000b9ba:	009b      	lsls	r3, r3, #2
9000b9bc:	d5f7      	bpl.n	9000b9ae <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000b9be:	2000      	movs	r0, #0
}
9000b9c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b9c2:	2003      	movs	r0, #3
}
9000b9c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000b9c6:	2001      	movs	r0, #1
}
9000b9c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b9ca:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000b9ce:	62e3      	str	r3, [r4, #44]	; 0x2c
9000b9d0:	e7e4      	b.n	9000b99c <RCCEx_PLL3_Config+0xb4>
9000b9d2:	bf00      	nop
9000b9d4:	58024400 	.word	0x58024400
9000b9d8:	ffff0007 	.word	0xffff0007

9000b9dc <HAL_RCCEx_PeriphCLKConfig>:
{
9000b9dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b9e0:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b9e4:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b9e6:	011d      	lsls	r5, r3, #4
9000b9e8:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000b9ec:	d523      	bpl.n	9000ba36 <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b9ee:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000b9f0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000b9f4:	f000 8553 	beq.w	9000c49e <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000b9f8:	d812      	bhi.n	9000ba20 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000b9fa:	2900      	cmp	r1, #0
9000b9fc:	f000 85a9 	beq.w	9000c552 <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000ba00:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000ba04:	f040 85a2 	bne.w	9000c54c <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000ba08:	2102      	movs	r1, #2
9000ba0a:	3008      	adds	r0, #8
9000ba0c:	f7ff fef2 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000ba10:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000ba12:	2e00      	cmp	r6, #0
9000ba14:	f040 8522 	bne.w	9000c45c <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000ba18:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000ba1a:	e9d4 3200 	ldrd	r3, r2, [r4]
9000ba1e:	e003      	b.n	9000ba28 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000ba20:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000ba24:	f040 8592 	bne.w	9000c54c <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000ba28:	4dae      	ldr	r5, [pc, #696]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ba2a:	2600      	movs	r6, #0
9000ba2c:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000ba2e:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000ba32:	4301      	orrs	r1, r0
9000ba34:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000ba36:	05d8      	lsls	r0, r3, #23
9000ba38:	d50a      	bpl.n	9000ba50 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000ba3a:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000ba3c:	2904      	cmp	r1, #4
9000ba3e:	d806      	bhi.n	9000ba4e <HAL_RCCEx_PeriphCLKConfig+0x72>
9000ba40:	e8df f011 	tbh	[pc, r1, lsl #1]
9000ba44:	053d0536 	.word	0x053d0536
9000ba48:	0323051a 	.word	0x0323051a
9000ba4c:	0323      	.short	0x0323
9000ba4e:	2601      	movs	r6, #1
9000ba50:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000ba52:	0599      	lsls	r1, r3, #22
9000ba54:	d51d      	bpl.n	9000ba92 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000ba56:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000ba58:	2980      	cmp	r1, #128	; 0x80
9000ba5a:	f000 8516 	beq.w	9000c48a <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000ba5e:	f200 80f9 	bhi.w	9000bc54 <HAL_RCCEx_PeriphCLKConfig+0x278>
9000ba62:	2900      	cmp	r1, #0
9000ba64:	f000 8433 	beq.w	9000c2ce <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000ba68:	2940      	cmp	r1, #64	; 0x40
9000ba6a:	f040 80fa 	bne.w	9000bc62 <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000ba6e:	2100      	movs	r1, #0
9000ba70:	f104 0008 	add.w	r0, r4, #8
9000ba74:	f7ff febe 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000ba78:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000ba7a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba7e:	2d00      	cmp	r5, #0
9000ba80:	f040 83fe 	bne.w	9000c280 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000ba84:	4f97      	ldr	r7, [pc, #604]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000ba86:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000ba88:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000ba8a:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000ba8e:	4301      	orrs	r1, r0
9000ba90:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000ba92:	055f      	lsls	r7, r3, #21
9000ba94:	d521      	bpl.n	9000bada <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000ba96:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000ba9a:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000ba9e:	f000 8521 	beq.w	9000c4e4 <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000baa2:	f200 80e1 	bhi.w	9000bc68 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000baa6:	2900      	cmp	r1, #0
9000baa8:	f000 8418 	beq.w	9000c2dc <HAL_RCCEx_PeriphCLKConfig+0x900>
9000baac:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bab0:	f040 80e2 	bne.w	9000bc78 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bab4:	2100      	movs	r1, #0
9000bab6:	f104 0008 	add.w	r0, r4, #8
9000baba:	f7ff fe9b 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000babe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bac0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bac4:	2d00      	cmp	r5, #0
9000bac6:	f040 83e2 	bne.w	9000c28e <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000baca:	4f86      	ldr	r7, [pc, #536]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bacc:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000bad0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bad2:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000bad6:	4301      	orrs	r1, r0
9000bad8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bada:	0518      	lsls	r0, r3, #20
9000badc:	d521      	bpl.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bade:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000bae2:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000bae6:	f000 84bd 	beq.w	9000c464 <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000baea:	f200 80c8 	bhi.w	9000bc7e <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000baee:	2900      	cmp	r1, #0
9000baf0:	f000 83e7 	beq.w	9000c2c2 <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000baf4:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000baf8:	f040 80c9 	bne.w	9000bc8e <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bafc:	2100      	movs	r1, #0
9000bafe:	f104 0008 	add.w	r0, r4, #8
9000bb02:	f7ff fe77 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bb06:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bb08:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb0c:	2d00      	cmp	r5, #0
9000bb0e:	f040 83b5 	bne.w	9000c27c <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000bb12:	4f74      	ldr	r7, [pc, #464]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bb14:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000bb18:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bb1a:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000bb1e:	4301      	orrs	r1, r0
9000bb20:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bb22:	0199      	lsls	r1, r3, #6
9000bb24:	d518      	bpl.n	9000bb58 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000bb26:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000bb28:	2920      	cmp	r1, #32
9000bb2a:	f000 841f 	beq.w	9000c36c <HAL_RCCEx_PeriphCLKConfig+0x990>
9000bb2e:	f200 80b1 	bhi.w	9000bc94 <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000bb32:	b139      	cbz	r1, 9000bb44 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000bb34:	2910      	cmp	r1, #16
9000bb36:	f040 80b0 	bne.w	9000bc9a <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb3a:	486a      	ldr	r0, [pc, #424]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bb3c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bb3e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bb42:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000bb44:	2d00      	cmp	r5, #0
9000bb46:	f040 83d8 	bne.w	9000c2fa <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000bb4a:	4f66      	ldr	r7, [pc, #408]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bb4c:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000bb4e:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bb50:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000bb54:	4301      	orrs	r1, r0
9000bb56:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bb58:	04df      	lsls	r7, r3, #19
9000bb5a:	d51f      	bpl.n	9000bb9c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bb5c:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000bb5e:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000bb62:	f000 84b5 	beq.w	9000c4d0 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000bb66:	f200 809b 	bhi.w	9000bca0 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000bb6a:	2900      	cmp	r1, #0
9000bb6c:	f000 83a3 	beq.w	9000c2b6 <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000bb70:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000bb74:	f040 809c 	bne.w	9000bcb0 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bb78:	2100      	movs	r1, #0
9000bb7a:	f104 0008 	add.w	r0, r4, #8
9000bb7e:	f7ff fe39 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bb82:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bb84:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bb88:	2d00      	cmp	r5, #0
9000bb8a:	f040 837b 	bne.w	9000c284 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000bb8e:	4f55      	ldr	r7, [pc, #340]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bb90:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000bb92:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bb94:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000bb98:	4301      	orrs	r1, r0
9000bb9a:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bb9c:	0498      	lsls	r0, r3, #18
9000bb9e:	d51d      	bpl.n	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bba0:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000bba2:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000bba6:	f000 8410 	beq.w	9000c3ca <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000bbaa:	f200 8084 	bhi.w	9000bcb6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000bbae:	b159      	cbz	r1, 9000bbc8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bbb0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bbb4:	f040 8087 	bne.w	9000bcc6 <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bbb8:	2101      	movs	r1, #1
9000bbba:	f104 0008 	add.w	r0, r4, #8
9000bbbe:	f7ff fe19 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bbc2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bbc4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bbc8:	2d00      	cmp	r5, #0
9000bbca:	f040 839a 	bne.w	9000c302 <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000bbce:	4f45      	ldr	r7, [pc, #276]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bbd0:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000bbd2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bbd4:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000bbd8:	4301      	orrs	r1, r0
9000bbda:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bbdc:	0459      	lsls	r1, r3, #17
9000bbde:	d51d      	bpl.n	9000bc1c <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bbe0:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000bbe4:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000bbe8:	f000 83fb 	beq.w	9000c3e2 <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000bbec:	d86e      	bhi.n	9000bccc <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000bbee:	b151      	cbz	r1, 9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000bbf0:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000bbf4:	d172      	bne.n	9000bcdc <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bbf6:	2101      	movs	r1, #1
9000bbf8:	f104 0008 	add.w	r0, r4, #8
9000bbfc:	f7ff fdfa 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bc00:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bc02:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc06:	2d00      	cmp	r5, #0
9000bc08:	f040 837f 	bne.w	9000c30a <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000bc0c:	4f35      	ldr	r7, [pc, #212]	; (9000bce4 <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bc0e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000bc12:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bc14:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000bc18:	4301      	orrs	r1, r0
9000bc1a:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bc1c:	041f      	lsls	r7, r3, #16
9000bc1e:	d50d      	bpl.n	9000bc3c <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000bc20:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000bc22:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000bc26:	f000 83c8 	beq.w	9000c3ba <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000bc2a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000bc2e:	f000 823b 	beq.w	9000c0a8 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000bc32:	2900      	cmp	r1, #0
9000bc34:	f000 8240 	beq.w	9000c0b8 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000bc38:	2601      	movs	r6, #1
9000bc3a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bc3c:	01d8      	lsls	r0, r3, #7
9000bc3e:	d562      	bpl.n	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000bc40:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000bc42:	2903      	cmp	r1, #3
9000bc44:	f200 84bf 	bhi.w	9000c5c6 <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000bc48:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bc4c:	004e0053 	.word	0x004e0053
9000bc50:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000bc54:	29c0      	cmp	r1, #192	; 0xc0
9000bc56:	f43f af12 	beq.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000bc5a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000bc5e:	f43f af0e 	beq.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000bc62:	2601      	movs	r6, #1
9000bc64:	4635      	mov	r5, r6
9000bc66:	e714      	b.n	9000ba92 <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bc68:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000bc6c:	f43f af2a 	beq.w	9000bac4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000bc70:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000bc74:	f43f af26 	beq.w	9000bac4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000bc78:	2601      	movs	r6, #1
9000bc7a:	4635      	mov	r5, r6
9000bc7c:	e72d      	b.n	9000bada <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bc7e:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000bc82:	f43f af43 	beq.w	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000bc86:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000bc8a:	f43f af3f 	beq.w	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x130>
9000bc8e:	2601      	movs	r6, #1
9000bc90:	4635      	mov	r5, r6
9000bc92:	e746      	b.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000bc94:	2930      	cmp	r1, #48	; 0x30
9000bc96:	f43f af55 	beq.w	9000bb44 <HAL_RCCEx_PeriphCLKConfig+0x168>
9000bc9a:	2601      	movs	r6, #1
9000bc9c:	4635      	mov	r5, r6
9000bc9e:	e75b      	b.n	9000bb58 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bca0:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000bca4:	f43f af70 	beq.w	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000bca8:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000bcac:	f43f af6c 	beq.w	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000bcb0:	2601      	movs	r6, #1
9000bcb2:	4635      	mov	r5, r6
9000bcb4:	e772      	b.n	9000bb9c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bcb6:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000bcba:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000bcbe:	d083      	beq.n	9000bbc8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bcc0:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000bcc4:	d080      	beq.n	9000bbc8 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bcc6:	2601      	movs	r6, #1
9000bcc8:	4635      	mov	r5, r6
9000bcca:	e787      	b.n	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bccc:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000bcd0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000bcd4:	d097      	beq.n	9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000bcd6:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000bcda:	d094      	beq.n	9000bc06 <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000bcdc:	2601      	movs	r6, #1
9000bcde:	4635      	mov	r5, r6
9000bce0:	e79c      	b.n	9000bc1c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000bce2:	bf00      	nop
9000bce4:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bce8:	4839      	ldr	r0, [pc, #228]	; (9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bcea:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bcec:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bcf0:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000bcf2:	2d00      	cmp	r5, #0
9000bcf4:	f040 8303 	bne.w	9000c2fe <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bcf8:	4f35      	ldr	r7, [pc, #212]	; (9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bcfa:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000bcfc:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bcfe:	f021 0103 	bic.w	r1, r1, #3
9000bd02:	4301      	orrs	r1, r0
9000bd04:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bd06:	0259      	lsls	r1, r3, #9
9000bd08:	f100 826a 	bmi.w	9000c1e0 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bd0c:	07d8      	lsls	r0, r3, #31
9000bd0e:	d52f      	bpl.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000bd10:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000bd12:	2928      	cmp	r1, #40	; 0x28
9000bd14:	d82a      	bhi.n	9000bd6c <HAL_RCCEx_PeriphCLKConfig+0x390>
9000bd16:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bd1a:	020a      	.short	0x020a
9000bd1c:	00290029 	.word	0x00290029
9000bd20:	00290029 	.word	0x00290029
9000bd24:	00290029 	.word	0x00290029
9000bd28:	02020029 	.word	0x02020029
9000bd2c:	00290029 	.word	0x00290029
9000bd30:	00290029 	.word	0x00290029
9000bd34:	00290029 	.word	0x00290029
9000bd38:	04070029 	.word	0x04070029
9000bd3c:	00290029 	.word	0x00290029
9000bd40:	00290029 	.word	0x00290029
9000bd44:	00290029 	.word	0x00290029
9000bd48:	020a0029 	.word	0x020a0029
9000bd4c:	00290029 	.word	0x00290029
9000bd50:	00290029 	.word	0x00290029
9000bd54:	00290029 	.word	0x00290029
9000bd58:	020a0029 	.word	0x020a0029
9000bd5c:	00290029 	.word	0x00290029
9000bd60:	00290029 	.word	0x00290029
9000bd64:	00290029 	.word	0x00290029
9000bd68:	020a0029 	.word	0x020a0029
9000bd6c:	2601      	movs	r6, #1
9000bd6e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bd70:	0799      	lsls	r1, r3, #30
9000bd72:	d51d      	bpl.n	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000bd74:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000bd76:	2905      	cmp	r1, #5
9000bd78:	f200 8421 	bhi.w	9000c5be <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000bd7c:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bd80:	0006000e 	.word	0x0006000e
9000bd84:	000e03c8 	.word	0x000e03c8
9000bd88:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bd8c:	2101      	movs	r1, #1
9000bd8e:	f104 0008 	add.w	r0, r4, #8
9000bd92:	f7ff fd2f 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bd96:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bd98:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd9c:	2d00      	cmp	r5, #0
9000bd9e:	f040 82b8 	bne.w	9000c312 <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bda2:	4f0b      	ldr	r7, [pc, #44]	; (9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bda4:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000bda6:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bda8:	f021 0107 	bic.w	r1, r1, #7
9000bdac:	4301      	orrs	r1, r0
9000bdae:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bdb0:	075f      	lsls	r7, r3, #29
9000bdb2:	d522      	bpl.n	9000bdfa <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000bdb4:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000bdb8:	2905      	cmp	r1, #5
9000bdba:	f200 8408 	bhi.w	9000c5ce <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000bdbe:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bdc2:	0011      	.short	0x0011
9000bdc4:	039b0009 	.word	0x039b0009
9000bdc8:	00110011 	.word	0x00110011
9000bdcc:	0011      	.short	0x0011
9000bdce:	bf00      	nop
9000bdd0:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bdd4:	2101      	movs	r1, #1
9000bdd6:	f104 0008 	add.w	r0, r4, #8
9000bdda:	f7ff fd0b 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000bdde:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bde0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bde4:	2d00      	cmp	r5, #0
9000bde6:	f040 8286 	bne.w	9000c2f6 <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bdea:	4fae      	ldr	r7, [pc, #696]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bdec:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000bdf0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bdf2:	f021 0107 	bic.w	r1, r1, #7
9000bdf6:	4301      	orrs	r1, r0
9000bdf8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bdfa:	0698      	lsls	r0, r3, #26
9000bdfc:	d51f      	bpl.n	9000be3e <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bdfe:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000be02:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000be06:	f000 82f7 	beq.w	9000c3f8 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000be0a:	f200 810b 	bhi.w	9000c024 <HAL_RCCEx_PeriphCLKConfig+0x648>
9000be0e:	b159      	cbz	r1, 9000be28 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000be10:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000be14:	f040 8110 	bne.w	9000c038 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000be18:	2100      	movs	r1, #0
9000be1a:	f104 0008 	add.w	r0, r4, #8
9000be1e:	f7ff fce9 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000be22:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000be24:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be28:	2d00      	cmp	r5, #0
9000be2a:	f040 8260 	bne.w	9000c2ee <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000be2e:	4f9d      	ldr	r7, [pc, #628]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000be30:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000be34:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000be36:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000be3a:	4301      	orrs	r1, r0
9000be3c:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000be3e:	0659      	lsls	r1, r3, #25
9000be40:	d51f      	bpl.n	9000be82 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000be42:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000be46:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000be4a:	f000 829b 	beq.w	9000c384 <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000be4e:	f200 80f6 	bhi.w	9000c03e <HAL_RCCEx_PeriphCLKConfig+0x662>
9000be52:	b159      	cbz	r1, 9000be6c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000be54:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000be58:	f040 80fb 	bne.w	9000c052 <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000be5c:	2100      	movs	r1, #0
9000be5e:	f104 0008 	add.w	r0, r4, #8
9000be62:	f7ff fcc7 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000be66:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000be68:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be6c:	2d00      	cmp	r5, #0
9000be6e:	f040 824e 	bne.w	9000c30e <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000be72:	4f8c      	ldr	r7, [pc, #560]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000be74:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000be78:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000be7a:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000be7e:	4301      	orrs	r1, r0
9000be80:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000be82:	061f      	lsls	r7, r3, #24
9000be84:	d51f      	bpl.n	9000bec6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000be86:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000be8a:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000be8e:	f000 8289 	beq.w	9000c3a4 <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000be92:	f200 80e1 	bhi.w	9000c058 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000be96:	b159      	cbz	r1, 9000beb0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000be98:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000be9c:	f040 80e6 	bne.w	9000c06c <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bea0:	2100      	movs	r1, #0
9000bea2:	f104 0008 	add.w	r0, r4, #8
9000bea6:	f7ff fca5 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000beaa:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000beac:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000beb0:	2d00      	cmp	r5, #0
9000beb2:	f040 8228 	bne.w	9000c306 <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000beb6:	4f7b      	ldr	r7, [pc, #492]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000beb8:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000bebc:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bebe:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000bec2:	4301      	orrs	r1, r0
9000bec4:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bec6:	0718      	lsls	r0, r3, #28
9000bec8:	d50b      	bpl.n	9000bee2 <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000beca:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000bece:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000bed2:	f000 82a9 	beq.w	9000c428 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bed6:	4f73      	ldr	r7, [pc, #460]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bed8:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000beda:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000bede:	4301      	orrs	r1, r0
9000bee0:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bee2:	06d9      	lsls	r1, r3, #27
9000bee4:	d50b      	bpl.n	9000befe <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000bee6:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000beea:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000beee:	f000 82a8 	beq.w	9000c442 <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bef2:	4f6c      	ldr	r7, [pc, #432]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bef4:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bef6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000befa:	4301      	orrs	r1, r0
9000befc:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000befe:	031f      	lsls	r7, r3, #12
9000bf00:	d50e      	bpl.n	9000bf20 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000bf02:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000bf06:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bf0a:	f000 80f4 	beq.w	9000c0f6 <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000bf0e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000bf12:	f000 80f8 	beq.w	9000c106 <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000bf16:	2900      	cmp	r1, #0
9000bf18:	f000 821c 	beq.w	9000c354 <HAL_RCCEx_PeriphCLKConfig+0x978>
9000bf1c:	2601      	movs	r6, #1
9000bf1e:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bf20:	0358      	lsls	r0, r3, #13
9000bf22:	d50f      	bpl.n	9000bf44 <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000bf24:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000bf28:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bf2c:	f000 80cf 	beq.w	9000c0ce <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000bf30:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000bf34:	f000 80d3 	beq.w	9000c0de <HAL_RCCEx_PeriphCLKConfig+0x702>
9000bf38:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000bf3c:	f000 8202 	beq.w	9000c344 <HAL_RCCEx_PeriphCLKConfig+0x968>
9000bf40:	2601      	movs	r6, #1
9000bf42:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bf44:	03d9      	lsls	r1, r3, #15
9000bf46:	d509      	bpl.n	9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000bf48:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000bf4a:	2900      	cmp	r1, #0
9000bf4c:	f000 81f1 	beq.w	9000c332 <HAL_RCCEx_PeriphCLKConfig+0x956>
9000bf50:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bf54:	f000 819d 	beq.w	9000c292 <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000bf58:	2601      	movs	r6, #1
9000bf5a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000bf5c:	009f      	lsls	r7, r3, #2
9000bf5e:	f100 80f1 	bmi.w	9000c144 <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000bf62:	0398      	lsls	r0, r3, #14
9000bf64:	d50c      	bpl.n	9000bf80 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000bf66:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000bf6a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000bf6e:	f000 81d8 	beq.w	9000c322 <HAL_RCCEx_PeriphCLKConfig+0x946>
9000bf72:	d97e      	bls.n	9000c072 <HAL_RCCEx_PeriphCLKConfig+0x696>
9000bf74:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000bf78:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000bf7c:	d07b      	beq.n	9000c076 <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000bf7e:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000bf80:	02d9      	lsls	r1, r3, #11
9000bf82:	d506      	bpl.n	9000bf92 <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000bf84:	4847      	ldr	r0, [pc, #284]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bf86:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000bf88:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000bf8a:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000bf8e:	4329      	orrs	r1, r5
9000bf90:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000bf92:	00df      	lsls	r7, r3, #3
9000bf94:	d507      	bpl.n	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000bf96:	4843      	ldr	r0, [pc, #268]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bf98:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000bf9c:	6901      	ldr	r1, [r0, #16]
9000bf9e:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000bfa2:	4329      	orrs	r1, r5
9000bfa4:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000bfa6:	029d      	lsls	r5, r3, #10
9000bfa8:	d506      	bpl.n	9000bfb8 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000bfaa:	483e      	ldr	r0, [pc, #248]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bfac:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000bfae:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000bfb0:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000bfb4:	4329      	orrs	r1, r5
9000bfb6:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000bfb8:	0058      	lsls	r0, r3, #1
9000bfba:	d509      	bpl.n	9000bfd0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000bfbc:	4939      	ldr	r1, [pc, #228]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bfbe:	6908      	ldr	r0, [r1, #16]
9000bfc0:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000bfc4:	6108      	str	r0, [r1, #16]
9000bfc6:	6908      	ldr	r0, [r1, #16]
9000bfc8:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000bfcc:	4328      	orrs	r0, r5
9000bfce:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000bfd0:	2b00      	cmp	r3, #0
9000bfd2:	da06      	bge.n	9000bfe2 <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000bfd4:	4833      	ldr	r0, [pc, #204]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bfd6:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000bfd8:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000bfda:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000bfde:	4329      	orrs	r1, r5
9000bfe0:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000bfe2:	0219      	lsls	r1, r3, #8
9000bfe4:	d507      	bpl.n	9000bff6 <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000bfe6:	492f      	ldr	r1, [pc, #188]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bfe8:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000bfec:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000bfee:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000bff2:	4303      	orrs	r3, r0
9000bff4:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000bff6:	07d3      	lsls	r3, r2, #31
9000bff8:	f100 80b0 	bmi.w	9000c15c <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000bffc:	0797      	lsls	r7, r2, #30
9000bffe:	f100 80ba 	bmi.w	9000c176 <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c002:	0755      	lsls	r5, r2, #29
9000c004:	f100 80c4 	bmi.w	9000c190 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c008:	0710      	lsls	r0, r2, #28
9000c00a:	f100 80ce 	bmi.w	9000c1aa <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c00e:	06d1      	lsls	r1, r2, #27
9000c010:	f100 80d8 	bmi.w	9000c1c4 <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c014:	0692      	lsls	r2, r2, #26
9000c016:	f100 8125 	bmi.w	9000c264 <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000c01a:	1e30      	subs	r0, r6, #0
9000c01c:	bf18      	it	ne
9000c01e:	2001      	movne	r0, #1
}
9000c020:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c024:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000c028:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000c02c:	f43f aefc 	beq.w	9000be28 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c030:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000c034:	f43f aef8 	beq.w	9000be28 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c038:	2601      	movs	r6, #1
9000c03a:	4635      	mov	r5, r6
9000c03c:	e6ff      	b.n	9000be3e <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c03e:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000c042:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000c046:	f43f af11 	beq.w	9000be6c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c04a:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000c04e:	f43f af0d 	beq.w	9000be6c <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c052:	2601      	movs	r6, #1
9000c054:	4635      	mov	r5, r6
9000c056:	e714      	b.n	9000be82 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c058:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000c05c:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000c060:	f43f af26 	beq.w	9000beb0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c064:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000c068:	f43f af22 	beq.w	9000beb0 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c06c:	2601      	movs	r6, #1
9000c06e:	4635      	mov	r5, r6
9000c070:	e729      	b.n	9000bec6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000c072:	2900      	cmp	r1, #0
9000c074:	d183      	bne.n	9000bf7e <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000c076:	2d00      	cmp	r5, #0
9000c078:	f040 8151 	bne.w	9000c31e <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000c07c:	4d09      	ldr	r5, [pc, #36]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c07e:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000c080:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000c084:	4301      	orrs	r1, r0
9000c086:	6569      	str	r1, [r5, #84]	; 0x54
9000c088:	e77a      	b.n	9000bf80 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c08a:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c08c:	2d00      	cmp	r5, #0
9000c08e:	f040 80fb 	bne.w	9000c288 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c092:	4f04      	ldr	r7, [pc, #16]	; (9000c0a4 <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c094:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000c096:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c098:	f021 0107 	bic.w	r1, r1, #7
9000c09c:	4301      	orrs	r1, r0
9000c09e:	6539      	str	r1, [r7, #80]	; 0x50
9000c0a0:	e4d7      	b.n	9000ba52 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c0a2:	bf00      	nop
9000c0a4:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c0a8:	2101      	movs	r1, #1
9000c0aa:	f104 0008 	add.w	r0, r4, #8
9000c0ae:	f7ff fba1 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c0b2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c0b4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0b8:	2d00      	cmp	r5, #0
9000c0ba:	f040 811a 	bne.w	9000c2f2 <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000c0be:	4fb7      	ldr	r7, [pc, #732]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c0c0:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000c0c2:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c0c4:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000c0c8:	4301      	orrs	r1, r0
9000c0ca:	6539      	str	r1, [r7, #80]	; 0x50
9000c0cc:	e5b6      	b.n	9000bc3c <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c0ce:	2101      	movs	r1, #1
9000c0d0:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c0d4:	f7ff fc08 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c0d8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c0da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0de:	2d00      	cmp	r5, #0
9000c0e0:	f040 811b 	bne.w	9000c31a <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000c0e4:	4fad      	ldr	r7, [pc, #692]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c0e6:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000c0ea:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c0ec:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000c0f0:	4301      	orrs	r1, r0
9000c0f2:	6579      	str	r1, [r7, #84]	; 0x54
9000c0f4:	e726      	b.n	9000bf44 <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c0f6:	2102      	movs	r1, #2
9000c0f8:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c0fc:	f7ff fbf4 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c100:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c102:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c106:	2d00      	cmp	r5, #0
9000c108:	f040 8105 	bne.w	9000c316 <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c10c:	4fa3      	ldr	r7, [pc, #652]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c10e:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000c112:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c114:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000c118:	4301      	orrs	r1, r0
9000c11a:	65b9      	str	r1, [r7, #88]	; 0x58
9000c11c:	e700      	b.n	9000bf20 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c11e:	2101      	movs	r1, #1
9000c120:	f104 0008 	add.w	r0, r4, #8
9000c124:	f7ff fb66 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c128:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c12a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c12e:	2d00      	cmp	r5, #0
9000c130:	f040 80db 	bne.w	9000c2ea <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000c134:	4f99      	ldr	r7, [pc, #612]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c136:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000c138:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c13a:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000c13e:	4301      	orrs	r1, r0
9000c140:	6579      	str	r1, [r7, #84]	; 0x54
9000c142:	e615      	b.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c144:	2102      	movs	r1, #2
9000c146:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c14a:	f7ff fbcd 	bl	9000b8e8 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c14e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c152:	2800      	cmp	r0, #0
9000c154:	f43f af05 	beq.w	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000c158:	2601      	movs	r6, #1
9000c15a:	e702      	b.n	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c15c:	2100      	movs	r1, #0
9000c15e:	f104 0008 	add.w	r0, r4, #8
9000c162:	f7ff fb47 	bl	9000b7f4 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c166:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c168:	2800      	cmp	r0, #0
9000c16a:	f43f af47 	beq.w	9000bffc <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c16e:	0797      	lsls	r7, r2, #30
9000c170:	4606      	mov	r6, r0
9000c172:	f57f af46 	bpl.w	9000c002 <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c176:	2101      	movs	r1, #1
9000c178:	f104 0008 	add.w	r0, r4, #8
9000c17c:	f7ff fb3a 	bl	9000b7f4 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c180:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c182:	2800      	cmp	r0, #0
9000c184:	f43f af3d 	beq.w	9000c002 <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c188:	0755      	lsls	r5, r2, #29
9000c18a:	4606      	mov	r6, r0
9000c18c:	f57f af3c 	bpl.w	9000c008 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c190:	2102      	movs	r1, #2
9000c192:	f104 0008 	add.w	r0, r4, #8
9000c196:	f7ff fb2d 	bl	9000b7f4 <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c19a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c19c:	2800      	cmp	r0, #0
9000c19e:	f43f af33 	beq.w	9000c008 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c1a2:	4606      	mov	r6, r0
9000c1a4:	0710      	lsls	r0, r2, #28
9000c1a6:	f57f af32 	bpl.w	9000c00e <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c1aa:	2100      	movs	r1, #0
9000c1ac:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c1b0:	f7ff fb9a 	bl	9000b8e8 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c1b4:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c1b6:	2800      	cmp	r0, #0
9000c1b8:	f43f af29 	beq.w	9000c00e <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c1bc:	06d1      	lsls	r1, r2, #27
9000c1be:	4606      	mov	r6, r0
9000c1c0:	f57f af28 	bpl.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c1c4:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000c1c8:	2101      	movs	r1, #1
9000c1ca:	4628      	mov	r0, r5
9000c1cc:	f7ff fb8c 	bl	9000b8e8 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c1d0:	2800      	cmp	r0, #0
9000c1d2:	f000 80c9 	beq.w	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c1d6:	6863      	ldr	r3, [r4, #4]
9000c1d8:	069b      	lsls	r3, r3, #26
9000c1da:	d54c      	bpl.n	9000c276 <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000c1dc:	4606      	mov	r6, r0
9000c1de:	e043      	b.n	9000c268 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000c1e0:	4f6f      	ldr	r7, [pc, #444]	; (9000c3a0 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000c1e2:	683b      	ldr	r3, [r7, #0]
9000c1e4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c1e8:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c1ea:	f7fb fc4f 	bl	90007a8c <HAL_GetTick>
9000c1ee:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c1f0:	e006      	b.n	9000c200 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c1f2:	f7fb fc4b 	bl	90007a8c <HAL_GetTick>
9000c1f6:	eba0 0008 	sub.w	r0, r0, r8
9000c1fa:	2864      	cmp	r0, #100	; 0x64
9000c1fc:	f200 81a0 	bhi.w	9000c540 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c200:	683b      	ldr	r3, [r7, #0]
9000c202:	05da      	lsls	r2, r3, #23
9000c204:	d5f5      	bpl.n	9000c1f2 <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000c206:	2d00      	cmp	r5, #0
9000c208:	f040 81d4 	bne.w	9000c5b4 <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c20c:	4a63      	ldr	r2, [pc, #396]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c20e:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c212:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000c214:	4059      	eors	r1, r3
9000c216:	f411 7f40 	tst.w	r1, #768	; 0x300
9000c21a:	d00b      	beq.n	9000c234 <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c21c:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c21e:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c220:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c224:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000c228:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c22a:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000c22c:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000c230:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000c232:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c234:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000c238:	f000 819e 	beq.w	9000c578 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c23c:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000c240:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000c244:	f000 81ac 	beq.w	9000c5a0 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000c248:	4954      	ldr	r1, [pc, #336]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c24a:	690a      	ldr	r2, [r1, #16]
9000c24c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000c250:	610a      	str	r2, [r1, #16]
9000c252:	4852      	ldr	r0, [pc, #328]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c254:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c258:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000c25a:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c25c:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c260:	6701      	str	r1, [r0, #112]	; 0x70
9000c262:	e553      	b.n	9000bd0c <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c264:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c268:	2102      	movs	r1, #2
9000c26a:	4628      	mov	r0, r5
9000c26c:	f7ff fb3c 	bl	9000b8e8 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c270:	2800      	cmp	r0, #0
9000c272:	f43f aed2 	beq.w	9000c01a <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000c276:	2001      	movs	r0, #1
}
9000c278:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000c27c:	462e      	mov	r6, r5
9000c27e:	e450      	b.n	9000bb22 <HAL_RCCEx_PeriphCLKConfig+0x146>
9000c280:	462e      	mov	r6, r5
9000c282:	e406      	b.n	9000ba92 <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000c284:	462e      	mov	r6, r5
9000c286:	e489      	b.n	9000bb9c <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000c288:	462e      	mov	r6, r5
9000c28a:	f7ff bbe2 	b.w	9000ba52 <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c28e:	462e      	mov	r6, r5
9000c290:	e423      	b.n	9000bada <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c292:	2102      	movs	r1, #2
9000c294:	f104 0008 	add.w	r0, r4, #8
9000c298:	f7ff faac 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c29c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c29e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c2a2:	2d00      	cmp	r5, #0
9000c2a4:	d14c      	bne.n	9000c340 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c2a6:	4f3d      	ldr	r7, [pc, #244]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2a8:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000c2aa:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000c2ac:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000c2b0:	4301      	orrs	r1, r0
9000c2b2:	64f9      	str	r1, [r7, #76]	; 0x4c
9000c2b4:	e652      	b.n	9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2b6:	4839      	ldr	r0, [pc, #228]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2b8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c2ba:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c2be:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c2c0:	e462      	b.n	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2c2:	4836      	ldr	r0, [pc, #216]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2c4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c2c6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c2ca:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c2cc:	e41e      	b.n	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2ce:	4833      	ldr	r0, [pc, #204]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2d0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c2d2:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c2d6:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c2d8:	f7ff bbd1 	b.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c2dc:	482f      	ldr	r0, [pc, #188]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c2de:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c2e0:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c2e4:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c2e6:	f7ff bbed 	b.w	9000bac4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000c2ea:	462e      	mov	r6, r5
9000c2ec:	e540      	b.n	9000bd70 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000c2ee:	462e      	mov	r6, r5
9000c2f0:	e5a5      	b.n	9000be3e <HAL_RCCEx_PeriphCLKConfig+0x462>
9000c2f2:	462e      	mov	r6, r5
9000c2f4:	e4a2      	b.n	9000bc3c <HAL_RCCEx_PeriphCLKConfig+0x260>
9000c2f6:	462e      	mov	r6, r5
9000c2f8:	e57f      	b.n	9000bdfa <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c2fa:	462e      	mov	r6, r5
9000c2fc:	e42c      	b.n	9000bb58 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000c2fe:	462e      	mov	r6, r5
9000c300:	e501      	b.n	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000c302:	462e      	mov	r6, r5
9000c304:	e46a      	b.n	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x200>
9000c306:	462e      	mov	r6, r5
9000c308:	e5dd      	b.n	9000bec6 <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000c30a:	462e      	mov	r6, r5
9000c30c:	e486      	b.n	9000bc1c <HAL_RCCEx_PeriphCLKConfig+0x240>
9000c30e:	462e      	mov	r6, r5
9000c310:	e5b7      	b.n	9000be82 <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000c312:	462e      	mov	r6, r5
9000c314:	e54c      	b.n	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000c316:	462e      	mov	r6, r5
9000c318:	e602      	b.n	9000bf20 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000c31a:	462e      	mov	r6, r5
9000c31c:	e612      	b.n	9000bf44 <HAL_RCCEx_PeriphCLKConfig+0x568>
9000c31e:	462e      	mov	r6, r5
9000c320:	e62e      	b.n	9000bf80 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c322:	4f1e      	ldr	r7, [pc, #120]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c324:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000c326:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c32a:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000c32c:	2d00      	cmp	r5, #0
9000c32e:	d1f6      	bne.n	9000c31e <HAL_RCCEx_PeriphCLKConfig+0x942>
9000c330:	e6a4      	b.n	9000c07c <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c332:	481a      	ldr	r0, [pc, #104]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c334:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c336:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c33a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c33c:	2d00      	cmp	r5, #0
9000c33e:	d0b2      	beq.n	9000c2a6 <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000c340:	462e      	mov	r6, r5
9000c342:	e60b      	b.n	9000bf5c <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c344:	4815      	ldr	r0, [pc, #84]	; (9000c39c <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c346:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c348:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c34c:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c34e:	2d00      	cmp	r5, #0
9000c350:	d1e3      	bne.n	9000c31a <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000c352:	e6c7      	b.n	9000c0e4 <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c354:	f104 0008 	add.w	r0, r4, #8
9000c358:	f7ff fa4c 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c35c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c35e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c362:	2d00      	cmp	r5, #0
9000c364:	d1d7      	bne.n	9000c316 <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000c366:	e6d1      	b.n	9000c10c <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c368:	6862      	ldr	r2, [r4, #4]
9000c36a:	e653      	b.n	9000c014 <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c36c:	2102      	movs	r1, #2
9000c36e:	f104 0008 	add.w	r0, r4, #8
9000c372:	f7ff fa3f 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c376:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c378:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c37c:	2d00      	cmp	r5, #0
9000c37e:	d1bc      	bne.n	9000c2fa <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000c380:	f7ff bbe3 	b.w	9000bb4a <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c384:	2102      	movs	r1, #2
9000c386:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c38a:	f7ff faad 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c38e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c390:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c394:	2d00      	cmp	r5, #0
9000c396:	d1ba      	bne.n	9000c30e <HAL_RCCEx_PeriphCLKConfig+0x932>
9000c398:	e56b      	b.n	9000be72 <HAL_RCCEx_PeriphCLKConfig+0x496>
9000c39a:	bf00      	nop
9000c39c:	58024400 	.word	0x58024400
9000c3a0:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c3a4:	2102      	movs	r1, #2
9000c3a6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c3aa:	f7ff fa9d 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c3ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c3b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3b4:	2d00      	cmp	r5, #0
9000c3b6:	d1a6      	bne.n	9000c306 <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000c3b8:	e57d      	b.n	9000beb6 <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c3ba:	4886      	ldr	r0, [pc, #536]	; (9000c5d4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c3bc:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c3be:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c3c2:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c3c4:	2d00      	cmp	r5, #0
9000c3c6:	d194      	bne.n	9000c2f2 <HAL_RCCEx_PeriphCLKConfig+0x916>
9000c3c8:	e679      	b.n	9000c0be <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c3ca:	2101      	movs	r1, #1
9000c3cc:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c3d0:	f7ff fa8a 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c3d4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c3d6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3da:	2d00      	cmp	r5, #0
9000c3dc:	d191      	bne.n	9000c302 <HAL_RCCEx_PeriphCLKConfig+0x926>
9000c3de:	f7ff bbf6 	b.w	9000bbce <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c3e2:	2101      	movs	r1, #1
9000c3e4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c3e8:	f7ff fa7e 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c3ec:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c3ee:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c3f2:	2d00      	cmp	r5, #0
9000c3f4:	d189      	bne.n	9000c30a <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000c3f6:	e409      	b.n	9000bc0c <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c3f8:	2102      	movs	r1, #2
9000c3fa:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c3fe:	f7ff fa73 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c402:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c404:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c408:	2d00      	cmp	r5, #0
9000c40a:	f47f af70 	bne.w	9000c2ee <HAL_RCCEx_PeriphCLKConfig+0x912>
9000c40e:	e50e      	b.n	9000be2e <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c410:	2102      	movs	r1, #2
9000c412:	f104 0008 	add.w	r0, r4, #8
9000c416:	f7ff f9ed 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c41a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c41c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c420:	2d00      	cmp	r5, #0
9000c422:	f47f af6c 	bne.w	9000c2fe <HAL_RCCEx_PeriphCLKConfig+0x922>
9000c426:	e467      	b.n	9000bcf8 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c428:	2102      	movs	r1, #2
9000c42a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c42e:	f7ff fa5b 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c432:	2800      	cmp	r0, #0
9000c434:	f040 8094 	bne.w	9000c560 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c438:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c43c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c440:	e549      	b.n	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c442:	2102      	movs	r1, #2
9000c444:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c448:	f7ff fa4e 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c44c:	2800      	cmp	r0, #0
9000c44e:	f040 808d 	bne.w	9000c56c <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c452:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c456:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c45a:	e54a      	b.n	9000bef2 <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c45c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c460:	f7ff bae9 	b.w	9000ba36 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c464:	2100      	movs	r1, #0
9000c466:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c46a:	f7ff fa3d 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c46e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c470:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c474:	f7ff bb4a 	b.w	9000bb0c <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c478:	2100      	movs	r1, #0
9000c47a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c47e:	f7ff fa33 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c482:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c484:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c488:	e600      	b.n	9000c08c <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c48a:	2100      	movs	r1, #0
9000c48c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c490:	f7ff fa2a 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c494:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c496:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c49a:	f7ff baf0 	b.w	9000ba7e <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c49e:	2102      	movs	r1, #2
9000c4a0:	3028      	adds	r0, #40	; 0x28
9000c4a2:	f7ff fa21 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c4a6:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000c4a8:	2e00      	cmp	r6, #0
9000c4aa:	f43f aab5 	beq.w	9000ba18 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000c4ae:	e7d5      	b.n	9000c45c <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4b0:	4848      	ldr	r0, [pc, #288]	; (9000c5d4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000c4b2:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4b4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c4b6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4ba:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c4bc:	e5e6      	b.n	9000c08c <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c4be:	2100      	movs	r1, #0
9000c4c0:	f104 0008 	add.w	r0, r4, #8
9000c4c4:	f7ff f996 	bl	9000b7f4 <RCCEx_PLL2_Config>
9000c4c8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c4ca:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c4ce:	e5dd      	b.n	9000c08c <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c4d0:	2100      	movs	r1, #0
9000c4d2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c4d6:	f7ff fa07 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c4da:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c4dc:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c4e0:	f7ff bb52 	b.w	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c4e4:	2100      	movs	r1, #0
9000c4e6:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c4ea:	f7ff f9fd 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c4ee:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c4f0:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c4f4:	f7ff bae6 	b.w	9000bac4 <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c4f8:	2101      	movs	r1, #1
9000c4fa:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c4fe:	f7ff f9f3 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c502:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c504:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c508:	2d00      	cmp	r5, #0
9000c50a:	f47f aef4 	bne.w	9000c2f6 <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000c50e:	e46c      	b.n	9000bdea <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c510:	2101      	movs	r1, #1
9000c512:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c516:	f7ff f9e7 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c51a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c51c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c520:	2d00      	cmp	r5, #0
9000c522:	f47f aef6 	bne.w	9000c312 <HAL_RCCEx_PeriphCLKConfig+0x936>
9000c526:	e43c      	b.n	9000bda2 <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c528:	2101      	movs	r1, #1
9000c52a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c52e:	f7ff f9db 	bl	9000b8e8 <RCCEx_PLL3_Config>
9000c532:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c534:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c538:	2d00      	cmp	r5, #0
9000c53a:	f47f aed6 	bne.w	9000c2ea <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000c53e:	e5f9      	b.n	9000c134 <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000c540:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c542:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c546:	4635      	mov	r5, r6
9000c548:	f7ff bbe0 	b.w	9000bd0c <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c54c:	2601      	movs	r6, #1
9000c54e:	f7ff ba72 	b.w	9000ba36 <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c552:	4d20      	ldr	r5, [pc, #128]	; (9000c5d4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c554:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000c556:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c55a:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000c55c:	f7ff ba64 	b.w	9000ba28 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c560:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000c564:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c566:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c56a:	e4b4      	b.n	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c56c:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000c570:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c572:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c576:	e4bc      	b.n	9000bef2 <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000c578:	f7fb fa88 	bl	90007a8c <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c57c:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000c5d4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000c580:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c582:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c586:	e004      	b.n	9000c592 <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c588:	f7fb fa80 	bl	90007a8c <HAL_GetTick>
9000c58c:	1bc0      	subs	r0, r0, r7
9000c58e:	4548      	cmp	r0, r9
9000c590:	d8d6      	bhi.n	9000c540 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c592:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000c596:	079b      	lsls	r3, r3, #30
9000c598:	d5f6      	bpl.n	9000c588 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c59a:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c59e:	e64d      	b.n	9000c23c <HAL_RCCEx_PeriphCLKConfig+0x860>
9000c5a0:	480c      	ldr	r0, [pc, #48]	; (9000c5d4 <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c5a2:	4a0d      	ldr	r2, [pc, #52]	; (9000c5d8 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000c5a4:	6901      	ldr	r1, [r0, #16]
9000c5a6:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c5aa:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000c5ae:	430a      	orrs	r2, r1
9000c5b0:	6102      	str	r2, [r0, #16]
9000c5b2:	e64e      	b.n	9000c252 <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c5b4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c5b8:	462e      	mov	r6, r5
9000c5ba:	f7ff bba7 	b.w	9000bd0c <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c5be:	2601      	movs	r6, #1
9000c5c0:	4635      	mov	r5, r6
9000c5c2:	f7ff bbf5 	b.w	9000bdb0 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000c5c6:	2601      	movs	r6, #1
9000c5c8:	4635      	mov	r5, r6
9000c5ca:	f7ff bb9c 	b.w	9000bd06 <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c5ce:	2601      	movs	r6, #1
9000c5d0:	4635      	mov	r5, r6
9000c5d2:	e412      	b.n	9000bdfa <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c5d4:	58024400 	.word	0x58024400
9000c5d8:	00ffffcf 	.word	0x00ffffcf

9000c5dc <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c5dc:	b318      	cbz	r0, 9000c626 <HAL_SDRAM_Init+0x4a>
{
9000c5de:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c5e0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000c5e4:	4604      	mov	r4, r0
9000c5e6:	460d      	mov	r5, r1
9000c5e8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c5ec:	b1b3      	cbz	r3, 9000c61c <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c5ee:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c5f0:	2302      	movs	r3, #2
9000c5f2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c5f6:	f851 0b04 	ldr.w	r0, [r1], #4
9000c5fa:	f000 fa39 	bl	9000ca70 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c5fe:	6862      	ldr	r2, [r4, #4]
9000c600:	4629      	mov	r1, r5
9000c602:	6820      	ldr	r0, [r4, #0]
9000c604:	f000 fa72 	bl	9000caec <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c608:	4a08      	ldr	r2, [pc, #32]	; (9000c62c <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c60a:	2101      	movs	r1, #1

  return HAL_OK;
9000c60c:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c60e:	6813      	ldr	r3, [r2, #0]
9000c610:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000c614:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c616:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000c61a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c61c:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c620:	f7f6 ff34 	bl	9000348c <HAL_SDRAM_MspInit>
9000c624:	e7e3      	b.n	9000c5ee <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c626:	2001      	movs	r0, #1
}
9000c628:	4770      	bx	lr
9000c62a:	bf00      	nop
9000c62c:	52004000 	.word	0x52004000

9000c630 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c630:	b510      	push	{r4, lr}
9000c632:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c634:	f7f6 ffa6 	bl	90003584 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c638:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c63c:	f000 faa4 	bl	9000cb88 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c640:	2000      	movs	r0, #0
9000c642:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c646:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000c64a:	bd10      	pop	{r4, pc}

9000c64c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c64c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c64e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c652:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c654:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c656:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c658:	d004      	beq.n	9000c664 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c65a:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000c65e:	2e01      	cmp	r6, #1
9000c660:	d001      	beq.n	9000c666 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c662:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c664:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c666:	2302      	movs	r3, #2
9000c668:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c66a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c66c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c670:	f000 fa9e 	bl	9000cbb0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c674:	682b      	ldr	r3, [r5, #0]
9000c676:	2b02      	cmp	r3, #2
9000c678:	d003      	beq.n	9000c682 <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000c67a:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c67c:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000c680:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c682:	2305      	movs	r3, #5
  return HAL_OK;
9000c684:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c686:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000c68a:	bd70      	pop	{r4, r5, r6, pc}

9000c68c <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c68c:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c68e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c692:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c694:	2b02      	cmp	r3, #2
9000c696:	b2d8      	uxtb	r0, r3
9000c698:	d005      	beq.n	9000c6a6 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c69a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000c69e:	2b01      	cmp	r3, #1
9000c6a0:	b2dd      	uxtb	r5, r3
9000c6a2:	d001      	beq.n	9000c6a8 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c6a4:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c6a6:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c6a8:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c6aa:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c6ac:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c6b0:	f000 fa96 	bl	9000cbe0 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c6b4:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c6b6:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000c6ba:	bd38      	pop	{r3, r4, r5, pc}

9000c6bc <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c6bc:	4770      	bx	lr
9000c6be:	bf00      	nop

9000c6c0 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c6c0:	2800      	cmp	r0, #0
9000c6c2:	f000 80a5 	beq.w	9000c810 <HAL_TIM_Base_Init+0x150>
{
9000c6c6:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c6c8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c6cc:	4604      	mov	r4, r0
9000c6ce:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c6d2:	2b00      	cmp	r3, #0
9000c6d4:	d076      	beq.n	9000c7c4 <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c6d6:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c6d8:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c6da:	494e      	ldr	r1, [pc, #312]	; (9000c814 <HAL_TIM_Base_Init+0x154>)
9000c6dc:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000c6e0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c6e4:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000c6e8:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c6ea:	fab1 f181 	clz	r1, r1
9000c6ee:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000c6f2:	d027      	beq.n	9000c744 <HAL_TIM_Base_Init+0x84>
9000c6f4:	bb31      	cbnz	r1, 9000c744 <HAL_TIM_Base_Init+0x84>
9000c6f6:	4848      	ldr	r0, [pc, #288]	; (9000c818 <HAL_TIM_Base_Init+0x158>)
9000c6f8:	4d48      	ldr	r5, [pc, #288]	; (9000c81c <HAL_TIM_Base_Init+0x15c>)
9000c6fa:	4282      	cmp	r2, r0
9000c6fc:	d067      	beq.n	9000c7ce <HAL_TIM_Base_Init+0x10e>
9000c6fe:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c702:	4282      	cmp	r2, r0
9000c704:	d063      	beq.n	9000c7ce <HAL_TIM_Base_Init+0x10e>
9000c706:	1b55      	subs	r5, r2, r5
9000c708:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c70c:	fab5 f585 	clz	r5, r5
9000c710:	4282      	cmp	r2, r0
9000c712:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000c716:	d063      	beq.n	9000c7e0 <HAL_TIM_Base_Init+0x120>
9000c718:	2d00      	cmp	r5, #0
9000c71a:	d161      	bne.n	9000c7e0 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c71c:	4840      	ldr	r0, [pc, #256]	; (9000c820 <HAL_TIM_Base_Init+0x160>)
9000c71e:	4941      	ldr	r1, [pc, #260]	; (9000c824 <HAL_TIM_Base_Init+0x164>)
9000c720:	428a      	cmp	r2, r1
9000c722:	bf18      	it	ne
9000c724:	4282      	cmpne	r2, r0
9000c726:	d065      	beq.n	9000c7f4 <HAL_TIM_Base_Init+0x134>
9000c728:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000c72c:	428a      	cmp	r2, r1
9000c72e:	d061      	beq.n	9000c7f4 <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c730:	69a0      	ldr	r0, [r4, #24]
9000c732:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c736:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c738:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c73a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c73c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c73e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c740:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c742:	e023      	b.n	9000c78c <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c744:	4d35      	ldr	r5, [pc, #212]	; (9000c81c <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c746:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c74a:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c74c:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000c74e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c750:	fab5 f585 	clz	r5, r5
9000c754:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c756:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c758:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c75c:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c75e:	69a0      	ldr	r0, [r4, #24]
9000c760:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c764:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c766:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c768:	68e3      	ldr	r3, [r4, #12]
9000c76a:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c76c:	6863      	ldr	r3, [r4, #4]
9000c76e:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c770:	b951      	cbnz	r1, 9000c788 <HAL_TIM_Base_Init+0xc8>
9000c772:	b94d      	cbnz	r5, 9000c788 <HAL_TIM_Base_Init+0xc8>
9000c774:	492a      	ldr	r1, [pc, #168]	; (9000c820 <HAL_TIM_Base_Init+0x160>)
9000c776:	4b2b      	ldr	r3, [pc, #172]	; (9000c824 <HAL_TIM_Base_Init+0x164>)
9000c778:	429a      	cmp	r2, r3
9000c77a:	bf18      	it	ne
9000c77c:	428a      	cmpne	r2, r1
9000c77e:	d003      	beq.n	9000c788 <HAL_TIM_Base_Init+0xc8>
9000c780:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000c784:	429a      	cmp	r2, r3
9000c786:	d101      	bne.n	9000c78c <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c788:	6963      	ldr	r3, [r4, #20]
9000c78a:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c78c:	2301      	movs	r3, #1
  return HAL_OK;
9000c78e:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000c790:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c792:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c796:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000c79a:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000c79e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000c7a2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000c7a6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000c7aa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c7ae:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000c7b2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000c7b6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000c7ba:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c7be:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000c7c2:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000c7c4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c7c8:	f7ff ff78 	bl	9000c6bc <HAL_TIM_Base_MspInit>
9000c7cc:	e783      	b.n	9000c6d6 <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c7ce:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c7d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c7d4:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c7d6:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000c7da:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c7dc:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c7de:	e7ba      	b.n	9000c756 <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000c7e0:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c7e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c7e6:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c7e8:	480f      	ldr	r0, [pc, #60]	; (9000c828 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c7ea:	4282      	cmp	r2, r0
9000c7ec:	d0b3      	beq.n	9000c756 <HAL_TIM_Base_Init+0x96>
9000c7ee:	2d00      	cmp	r5, #0
9000c7f0:	d1b1      	bne.n	9000c756 <HAL_TIM_Base_Init+0x96>
9000c7f2:	e793      	b.n	9000c71c <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c7f4:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c7f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c7fa:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c7fc:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c7fe:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c800:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c804:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000c806:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000c808:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c80a:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c80c:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c80e:	e7b1      	b.n	9000c774 <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000c810:	2001      	movs	r0, #1
}
9000c812:	4770      	bx	lr
9000c814:	40010000 	.word	0x40010000
9000c818:	40000400 	.word	0x40000400
9000c81c:	40010400 	.word	0x40010400
9000c820:	40014000 	.word	0x40014000
9000c824:	40014400 	.word	0x40014400
9000c828:	40000c00 	.word	0x40000c00

9000c82c <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c82c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c830:	2b01      	cmp	r3, #1
9000c832:	d141      	bne.n	9000c8b8 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c834:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c836:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c838:	4b24      	ldr	r3, [pc, #144]	; (9000c8cc <HAL_TIM_Base_Start_IT+0xa0>)
9000c83a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000c83e:	bf18      	it	ne
9000c840:	429a      	cmpne	r2, r3
{
9000c842:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c844:	bf0c      	ite	eq
9000c846:	2301      	moveq	r3, #1
9000c848:	2300      	movne	r3, #0
9000c84a:	4d21      	ldr	r5, [pc, #132]	; (9000c8d0 <HAL_TIM_Base_Start_IT+0xa4>)
9000c84c:	4c21      	ldr	r4, [pc, #132]	; (9000c8d4 <HAL_TIM_Base_Start_IT+0xa8>)
9000c84e:	42aa      	cmp	r2, r5
9000c850:	bf08      	it	eq
9000c852:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c856:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c85a:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c85c:	42a2      	cmp	r2, r4
9000c85e:	bf08      	it	eq
9000c860:	f043 0301 	orreq.w	r3, r3, #1
9000c864:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c868:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c86c:	481a      	ldr	r0, [pc, #104]	; (9000c8d8 <HAL_TIM_Base_Start_IT+0xac>)
9000c86e:	42a2      	cmp	r2, r4
9000c870:	bf08      	it	eq
9000c872:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c876:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c878:	4282      	cmp	r2, r0
9000c87a:	bf08      	it	eq
9000c87c:	f043 0301 	orreq.w	r3, r3, #1
9000c880:	4916      	ldr	r1, [pc, #88]	; (9000c8dc <HAL_TIM_Base_Start_IT+0xb0>)
9000c882:	428a      	cmp	r2, r1
9000c884:	bf08      	it	eq
9000c886:	f043 0301 	orreq.w	r3, r3, #1
9000c88a:	b933      	cbnz	r3, 9000c89a <HAL_TIM_Base_Start_IT+0x6e>
9000c88c:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000c890:	1a10      	subs	r0, r2, r0
9000c892:	fab0 f080 	clz	r0, r0
9000c896:	0940      	lsrs	r0, r0, #5
9000c898:	b198      	cbz	r0, 9000c8c2 <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c89a:	6891      	ldr	r1, [r2, #8]
9000c89c:	4b10      	ldr	r3, [pc, #64]	; (9000c8e0 <HAL_TIM_Base_Start_IT+0xb4>)
9000c89e:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c8a0:	2b06      	cmp	r3, #6
9000c8a2:	d00b      	beq.n	9000c8bc <HAL_TIM_Base_Start_IT+0x90>
9000c8a4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000c8a8:	d008      	beq.n	9000c8bc <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000c8aa:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000c8ac:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000c8ae:	f043 0301 	orr.w	r3, r3, #1
9000c8b2:	6013      	str	r3, [r2, #0]
}
9000c8b4:	bc30      	pop	{r4, r5}
9000c8b6:	4770      	bx	lr
    return HAL_ERROR;
9000c8b8:	2001      	movs	r0, #1
}
9000c8ba:	4770      	bx	lr
  return HAL_OK;
9000c8bc:	2000      	movs	r0, #0
}
9000c8be:	bc30      	pop	{r4, r5}
9000c8c0:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000c8c2:	6813      	ldr	r3, [r2, #0]
9000c8c4:	f043 0301 	orr.w	r3, r3, #1
9000c8c8:	6013      	str	r3, [r2, #0]
9000c8ca:	e7f3      	b.n	9000c8b4 <HAL_TIM_Base_Start_IT+0x88>
9000c8cc:	40010000 	.word	0x40010000
9000c8d0:	40000400 	.word	0x40000400
9000c8d4:	40000800 	.word	0x40000800
9000c8d8:	40010400 	.word	0x40010400
9000c8dc:	40001800 	.word	0x40001800
9000c8e0:	00010007 	.word	0x00010007

9000c8e4 <HAL_TIM_OC_DelayElapsedCallback>:
9000c8e4:	4770      	bx	lr
9000c8e6:	bf00      	nop

9000c8e8 <HAL_TIM_IC_CaptureCallback>:
9000c8e8:	4770      	bx	lr
9000c8ea:	bf00      	nop

9000c8ec <HAL_TIM_PWM_PulseFinishedCallback>:
9000c8ec:	4770      	bx	lr
9000c8ee:	bf00      	nop

9000c8f0 <HAL_TIM_TriggerCallback>:
9000c8f0:	4770      	bx	lr
9000c8f2:	bf00      	nop

9000c8f4 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000c8f4:	6803      	ldr	r3, [r0, #0]
9000c8f6:	691a      	ldr	r2, [r3, #16]
9000c8f8:	0791      	lsls	r1, r2, #30
{
9000c8fa:	b510      	push	{r4, lr}
9000c8fc:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000c8fe:	d502      	bpl.n	9000c906 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000c900:	68da      	ldr	r2, [r3, #12]
9000c902:	0792      	lsls	r2, r2, #30
9000c904:	d468      	bmi.n	9000c9d8 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000c906:	691a      	ldr	r2, [r3, #16]
9000c908:	0752      	lsls	r2, r2, #29
9000c90a:	d502      	bpl.n	9000c912 <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000c90c:	68da      	ldr	r2, [r3, #12]
9000c90e:	0750      	lsls	r0, r2, #29
9000c910:	d44f      	bmi.n	9000c9b2 <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000c912:	691a      	ldr	r2, [r3, #16]
9000c914:	0711      	lsls	r1, r2, #28
9000c916:	d502      	bpl.n	9000c91e <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000c918:	68da      	ldr	r2, [r3, #12]
9000c91a:	0712      	lsls	r2, r2, #28
9000c91c:	d437      	bmi.n	9000c98e <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000c91e:	691a      	ldr	r2, [r3, #16]
9000c920:	06d0      	lsls	r0, r2, #27
9000c922:	d502      	bpl.n	9000c92a <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000c924:	68da      	ldr	r2, [r3, #12]
9000c926:	06d1      	lsls	r1, r2, #27
9000c928:	d41e      	bmi.n	9000c968 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000c92a:	691a      	ldr	r2, [r3, #16]
9000c92c:	07d2      	lsls	r2, r2, #31
9000c92e:	d502      	bpl.n	9000c936 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000c930:	68da      	ldr	r2, [r3, #12]
9000c932:	07d0      	lsls	r0, r2, #31
9000c934:	d469      	bmi.n	9000ca0a <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000c936:	691a      	ldr	r2, [r3, #16]
9000c938:	0611      	lsls	r1, r2, #24
9000c93a:	d502      	bpl.n	9000c942 <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000c93c:	68da      	ldr	r2, [r3, #12]
9000c93e:	0612      	lsls	r2, r2, #24
9000c940:	d46b      	bmi.n	9000ca1a <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000c942:	691a      	ldr	r2, [r3, #16]
9000c944:	05d0      	lsls	r0, r2, #23
9000c946:	d502      	bpl.n	9000c94e <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000c948:	68da      	ldr	r2, [r3, #12]
9000c94a:	0611      	lsls	r1, r2, #24
9000c94c:	d46d      	bmi.n	9000ca2a <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000c94e:	691a      	ldr	r2, [r3, #16]
9000c950:	0652      	lsls	r2, r2, #25
9000c952:	d502      	bpl.n	9000c95a <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000c954:	68da      	ldr	r2, [r3, #12]
9000c956:	0650      	lsls	r0, r2, #25
9000c958:	d46f      	bmi.n	9000ca3a <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000c95a:	691a      	ldr	r2, [r3, #16]
9000c95c:	0691      	lsls	r1, r2, #26
9000c95e:	d502      	bpl.n	9000c966 <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000c960:	68da      	ldr	r2, [r3, #12]
9000c962:	0692      	lsls	r2, r2, #26
9000c964:	d449      	bmi.n	9000c9fa <HAL_TIM_IRQHandler+0x106>
}
9000c966:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000c968:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c96c:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c96e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000c970:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c972:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c974:	69db      	ldr	r3, [r3, #28]
9000c976:	f413 7f40 	tst.w	r3, #768	; 0x300
9000c97a:	d16f      	bne.n	9000ca5c <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c97c:	f7ff ffb2 	bl	9000c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c980:	4620      	mov	r0, r4
9000c982:	f7ff ffb3 	bl	9000c8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c986:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000c988:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c98a:	7722      	strb	r2, [r4, #28]
9000c98c:	e7cd      	b.n	9000c92a <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000c98e:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c992:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c994:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000c996:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c998:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c99a:	69db      	ldr	r3, [r3, #28]
9000c99c:	079b      	lsls	r3, r3, #30
9000c99e:	d15a      	bne.n	9000ca56 <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c9a0:	f7ff ffa0 	bl	9000c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c9a4:	4620      	mov	r0, r4
9000c9a6:	f7ff ffa1 	bl	9000c8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9aa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000c9ac:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9ae:	7722      	strb	r2, [r4, #28]
9000c9b0:	e7b5      	b.n	9000c91e <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000c9b2:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c9b6:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000c9b8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000c9ba:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c9bc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c9be:	699b      	ldr	r3, [r3, #24]
9000c9c0:	f413 7f40 	tst.w	r3, #768	; 0x300
9000c9c4:	d144      	bne.n	9000ca50 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c9c6:	f7ff ff8d 	bl	9000c8e4 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c9ca:	4620      	mov	r0, r4
9000c9cc:	f7ff ff8e 	bl	9000c8ec <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9d0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000c9d2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9d4:	7722      	strb	r2, [r4, #28]
9000c9d6:	e79c      	b.n	9000c912 <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000c9d8:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c9dc:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000c9de:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c9e0:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c9e2:	699b      	ldr	r3, [r3, #24]
9000c9e4:	0799      	lsls	r1, r3, #30
9000c9e6:	d130      	bne.n	9000ca4a <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c9e8:	f7ff ff7c 	bl	9000c8e4 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c9ec:	4620      	mov	r0, r4
9000c9ee:	f7ff ff7d 	bl	9000c8ec <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9f2:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000c9f4:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c9f6:	7722      	strb	r2, [r4, #28]
9000c9f8:	e785      	b.n	9000c906 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000c9fa:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c9fe:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000ca00:	611a      	str	r2, [r3, #16]
}
9000ca02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000ca06:	f000 b82d 	b.w	9000ca64 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000ca0a:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000ca0e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000ca10:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000ca12:	f7f6 fb9f 	bl	90003154 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000ca16:	6823      	ldr	r3, [r4, #0]
9000ca18:	e78d      	b.n	9000c936 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000ca1a:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000ca1e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000ca20:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000ca22:	f000 f821 	bl	9000ca68 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000ca26:	6823      	ldr	r3, [r4, #0]
9000ca28:	e78b      	b.n	9000c942 <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000ca2a:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000ca2e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000ca30:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000ca32:	f000 f81b 	bl	9000ca6c <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000ca36:	6823      	ldr	r3, [r4, #0]
9000ca38:	e789      	b.n	9000c94e <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000ca3a:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000ca3e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000ca40:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000ca42:	f7ff ff55 	bl	9000c8f0 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000ca46:	6823      	ldr	r3, [r4, #0]
9000ca48:	e787      	b.n	9000c95a <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000ca4a:	f7ff ff4d 	bl	9000c8e8 <HAL_TIM_IC_CaptureCallback>
9000ca4e:	e7d0      	b.n	9000c9f2 <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000ca50:	f7ff ff4a 	bl	9000c8e8 <HAL_TIM_IC_CaptureCallback>
9000ca54:	e7bc      	b.n	9000c9d0 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000ca56:	f7ff ff47 	bl	9000c8e8 <HAL_TIM_IC_CaptureCallback>
9000ca5a:	e7a6      	b.n	9000c9aa <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000ca5c:	f7ff ff44 	bl	9000c8e8 <HAL_TIM_IC_CaptureCallback>
9000ca60:	e791      	b.n	9000c986 <HAL_TIM_IRQHandler+0x92>
9000ca62:	bf00      	nop

9000ca64 <HAL_TIMEx_CommutCallback>:
9000ca64:	4770      	bx	lr
9000ca66:	bf00      	nop

9000ca68 <HAL_TIMEx_BreakCallback>:
9000ca68:	4770      	bx	lr
9000ca6a:	bf00      	nop

9000ca6c <HAL_TIMEx_Break2Callback>:
9000ca6c:	4770      	bx	lr
9000ca6e:	bf00      	nop

9000ca70 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000ca70:	680b      	ldr	r3, [r1, #0]
{
9000ca72:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000ca74:	b9d3      	cbnz	r3, 9000caac <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000ca76:	6804      	ldr	r4, [r0, #0]
9000ca78:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000ca7c:	684a      	ldr	r2, [r1, #4]
9000ca7e:	4023      	ands	r3, r4
9000ca80:	4313      	orrs	r3, r2
9000ca82:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000ca86:	4323      	orrs	r3, r4
9000ca88:	4313      	orrs	r3, r2
9000ca8a:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000ca8e:	4323      	orrs	r3, r4
9000ca90:	4313      	orrs	r3, r2
9000ca92:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000ca96:	4323      	orrs	r3, r4
9000ca98:	4313      	orrs	r3, r2
9000ca9a:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000ca9e:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000caa0:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000caa4:	4313      	orrs	r3, r2
9000caa6:	6003      	str	r3, [r0, #0]
}
9000caa8:	2000      	movs	r0, #0
9000caaa:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000caac:	6802      	ldr	r2, [r0, #0]
9000caae:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000cab2:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000cab6:	4322      	orrs	r2, r4
9000cab8:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000caba:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cabc:	4b0a      	ldr	r3, [pc, #40]	; (9000cae8 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cabe:	4322      	orrs	r2, r4
9000cac0:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cac2:	6842      	ldr	r2, [r0, #4]
9000cac4:	4013      	ands	r3, r2
9000cac6:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000caca:	4323      	orrs	r3, r4
9000cacc:	4313      	orrs	r3, r2
9000cace:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000cad2:	4323      	orrs	r3, r4
9000cad4:	4313      	orrs	r3, r2
9000cad6:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000cada:	4323      	orrs	r3, r4
}
9000cadc:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cae0:	4313      	orrs	r3, r2
9000cae2:	6043      	str	r3, [r0, #4]
}
9000cae4:	2000      	movs	r0, #0
9000cae6:	4770      	bx	lr
9000cae8:	ffff8000 	.word	0xffff8000

9000caec <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000caec:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000caee:	bb0a      	cbnz	r2, 9000cb34 <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000caf0:	6883      	ldr	r3, [r0, #8]
9000caf2:	e9d1 2400 	ldrd	r2, r4, [r1]
9000caf6:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000cafa:	3c01      	subs	r4, #1
9000cafc:	3a01      	subs	r2, #1
9000cafe:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cb02:	4313      	orrs	r3, r2
9000cb04:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000cb08:	3c01      	subs	r4, #1
9000cb0a:	3a01      	subs	r2, #1
9000cb0c:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000cb10:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000cb14:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000cb18:	698a      	ldr	r2, [r1, #24]
9000cb1a:	3d01      	subs	r5, #1
9000cb1c:	1e61      	subs	r1, r4, #1
9000cb1e:	3a01      	subs	r2, #1
9000cb20:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000cb24:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000cb28:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000cb2c:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cb2e:	6083      	str	r3, [r0, #8]
}
9000cb30:	2000      	movs	r0, #0
9000cb32:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cb34:	6885      	ldr	r5, [r0, #8]
9000cb36:	68ca      	ldr	r2, [r1, #12]
9000cb38:	4b12      	ldr	r3, [pc, #72]	; (9000cb84 <FMC_SDRAM_Timing_Init+0x98>)
9000cb3a:	1e54      	subs	r4, r2, #1
9000cb3c:	694a      	ldr	r2, [r1, #20]
9000cb3e:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cb40:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cb42:	3a01      	subs	r2, #1
9000cb44:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cb48:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cb4c:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cb50:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cb54:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cb56:	68c3      	ldr	r3, [r0, #12]
9000cb58:	3c01      	subs	r4, #1
9000cb5a:	3a01      	subs	r2, #1
9000cb5c:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000cb60:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cb64:	690c      	ldr	r4, [r1, #16]
9000cb66:	4313      	orrs	r3, r2
9000cb68:	698a      	ldr	r2, [r1, #24]
9000cb6a:	1e61      	subs	r1, r4, #1
9000cb6c:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000cb70:	3a01      	subs	r2, #1
9000cb72:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000cb76:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000cb7a:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cb7c:	60c3      	str	r3, [r0, #12]
}
9000cb7e:	2000      	movs	r0, #0
9000cb80:	4770      	bx	lr
9000cb82:	bf00      	nop
9000cb84:	ff0f0fff 	.word	0xff0f0fff

9000cb88 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000cb88:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000cb8a:	2200      	movs	r2, #0
{
9000cb8c:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000cb8e:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cb92:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000cb96:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000cb9a:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000cb9e:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cba0:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000cba4:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000cba6:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000cba8:	619a      	str	r2, [r3, #24]
}
9000cbaa:	bc30      	pop	{r4, r5}
9000cbac:	4770      	bx	lr
9000cbae:	bf00      	nop

9000cbb0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000cbb0:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cbb2:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000cbb6:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cbb8:	6900      	ldr	r0, [r0, #16]
9000cbba:	4323      	orrs	r3, r4
9000cbbc:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000cbc0:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000cbc4:	4c05      	ldr	r4, [pc, #20]	; (9000cbdc <FMC_SDRAM_SendCommand+0x2c>)
9000cbc6:	3901      	subs	r1, #1
9000cbc8:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000cbca:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cbcc:	4323      	orrs	r3, r4
}
9000cbce:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cbd2:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000cbd6:	6113      	str	r3, [r2, #16]
}
9000cbd8:	4770      	bx	lr
9000cbda:	bf00      	nop
9000cbdc:	ffc00000 	.word	0xffc00000

9000cbe0 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000cbe0:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cbe2:	4b05      	ldr	r3, [pc, #20]	; (9000cbf8 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000cbe4:	2000      	movs	r0, #0
{
9000cbe6:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cbe8:	6954      	ldr	r4, [r2, #20]
9000cbea:	4023      	ands	r3, r4
}
9000cbec:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cbf0:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000cbf4:	6151      	str	r1, [r2, #20]
}
9000cbf6:	4770      	bx	lr
9000cbf8:	ffffc001 	.word	0xffffc001

9000cbfc <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000cbfc:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000cbfe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cc02:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000cc04:	f002 fd04 	bl	9000f610 <xTaskGetSchedulerState>
9000cc08:	2801      	cmp	r0, #1
9000cc0a:	d100      	bne.n	9000cc0e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000cc0c:	bd08      	pop	{r3, pc}
9000cc0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000cc12:	f000 bcdf 	b.w	9000d5d4 <xPortSysTickHandler>
9000cc16:	bf00      	nop

9000cc18 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000cc18:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000cc1c:	b92b      	cbnz	r3, 9000cc2a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000cc1e:	4b06      	ldr	r3, [pc, #24]	; (9000cc38 <osKernelInitialize+0x20>)
9000cc20:	6818      	ldr	r0, [r3, #0]
9000cc22:	b928      	cbnz	r0, 9000cc30 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000cc24:	2201      	movs	r2, #1
9000cc26:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000cc28:	4770      	bx	lr
    stat = osErrorISR;
9000cc2a:	f06f 0005 	mvn.w	r0, #5
9000cc2e:	4770      	bx	lr
    } else {
      stat = osError;
9000cc30:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000cc34:	4770      	bx	lr
9000cc36:	bf00      	nop
9000cc38:	2400a3cc 	.word	0x2400a3cc

9000cc3c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000cc3c:	b510      	push	{r4, lr}
9000cc3e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000cc42:	b974      	cbnz	r4, 9000cc62 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000cc44:	4b08      	ldr	r3, [pc, #32]	; (9000cc68 <osKernelStart+0x2c>)
9000cc46:	681a      	ldr	r2, [r3, #0]
9000cc48:	2a01      	cmp	r2, #1
9000cc4a:	d107      	bne.n	9000cc5c <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000cc4c:	4907      	ldr	r1, [pc, #28]	; (9000cc6c <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000cc4e:	2202      	movs	r2, #2
9000cc50:	77cc      	strb	r4, [r1, #31]
9000cc52:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000cc54:	f002 fa6a 	bl	9000f12c <vTaskStartScheduler>
      stat = osOK;
9000cc58:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000cc5a:	bd10      	pop	{r4, pc}
      stat = osError;
9000cc5c:	f04f 30ff 	mov.w	r0, #4294967295
}
9000cc60:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cc62:	f06f 0005 	mvn.w	r0, #5
}
9000cc66:	bd10      	pop	{r4, pc}
9000cc68:	2400a3cc 	.word	0x2400a3cc
9000cc6c:	e000ed00 	.word	0xe000ed00

9000cc70 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cc70:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000cc72:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cc74:	b087      	sub	sp, #28
9000cc76:	4614      	mov	r4, r2
  hTask = NULL;
9000cc78:	9505      	str	r5, [sp, #20]
9000cc7a:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000cc7e:	bb5a      	cbnz	r2, 9000ccd8 <osThreadNew+0x68>
9000cc80:	4606      	mov	r6, r0
9000cc82:	b348      	cbz	r0, 9000ccd8 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000cc84:	b1e4      	cbz	r4, 9000ccc0 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000cc86:	69a7      	ldr	r7, [r4, #24]
9000cc88:	bb4f      	cbnz	r7, 9000ccde <osThreadNew+0x6e>
9000cc8a:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000cc8c:	6863      	ldr	r3, [r4, #4]
9000cc8e:	07db      	lsls	r3, r3, #31
9000cc90:	d422      	bmi.n	9000ccd8 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000cc92:	6963      	ldr	r3, [r4, #20]
9000cc94:	b33b      	cbz	r3, 9000cce6 <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000cc96:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000cc9a:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000cc9c:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000cc9e:	b338      	cbz	r0, 9000ccf0 <osThreadNew+0x80>
9000cca0:	68e2      	ldr	r2, [r4, #12]
9000cca2:	2a5f      	cmp	r2, #95	; 0x5f
9000cca4:	d918      	bls.n	9000ccd8 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000cca6:	6924      	ldr	r4, [r4, #16]
9000cca8:	b1b3      	cbz	r3, 9000ccd8 <osThreadNew+0x68>
9000ccaa:	b1ac      	cbz	r4, 9000ccd8 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000ccac:	460b      	mov	r3, r1
9000ccae:	4662      	mov	r2, ip
9000ccb0:	4629      	mov	r1, r5
9000ccb2:	9700      	str	r7, [sp, #0]
9000ccb4:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000ccb8:	4630      	mov	r0, r6
9000ccba:	f002 f89b 	bl	9000edf4 <xTaskCreateStatic>
9000ccbe:	e00c      	b.n	9000ccda <osThreadNew+0x6a>
9000ccc0:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000ccc2:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000ccc4:	460b      	mov	r3, r1
9000ccc6:	4621      	mov	r1, r4
9000ccc8:	ac05      	add	r4, sp, #20
9000ccca:	4630      	mov	r0, r6
9000cccc:	9700      	str	r7, [sp, #0]
9000ccce:	9401      	str	r4, [sp, #4]
9000ccd0:	f002 f93a 	bl	9000ef48 <xTaskCreate>
9000ccd4:	2801      	cmp	r0, #1
9000ccd6:	d009      	beq.n	9000ccec <osThreadNew+0x7c>
        return (NULL);
9000ccd8:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000ccda:	b007      	add	sp, #28
9000ccdc:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000ccde:	1e7a      	subs	r2, r7, #1
9000cce0:	2a37      	cmp	r2, #55	; 0x37
9000cce2:	d9d3      	bls.n	9000cc8c <osThreadNew+0x1c>
9000cce4:	e7f8      	b.n	9000ccd8 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000cce6:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000ccea:	e7d6      	b.n	9000cc9a <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000ccec:	9805      	ldr	r0, [sp, #20]
9000ccee:	e7f4      	b.n	9000ccda <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000ccf0:	68e3      	ldr	r3, [r4, #12]
9000ccf2:	2b00      	cmp	r3, #0
9000ccf4:	d1f1      	bne.n	9000ccda <osThreadNew+0x6a>
9000ccf6:	6923      	ldr	r3, [r4, #16]
9000ccf8:	2b00      	cmp	r3, #0
9000ccfa:	d1ee      	bne.n	9000ccda <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000ccfc:	fa1f f28c 	uxth.w	r2, ip
9000cd00:	462c      	mov	r4, r5
9000cd02:	e7df      	b.n	9000ccc4 <osThreadNew+0x54>

9000cd04 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000cd04:	b510      	push	{r4, lr}
9000cd06:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000cd0a:	b92c      	cbnz	r4, 9000cd18 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000cd0c:	b900      	cbnz	r0, 9000cd10 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000cd0e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000cd10:	f002 f9b6 	bl	9000f080 <vTaskDelay>
    stat = osOK;
9000cd14:	4620      	mov	r0, r4
}
9000cd16:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cd18:	f06f 0005 	mvn.w	r0, #5
}
9000cd1c:	bd10      	pop	{r4, pc}
9000cd1e:	bf00      	nop

9000cd20 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000cd20:	b570      	push	{r4, r5, r6, lr}
9000cd22:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000cd26:	b9db      	cbnz	r3, 9000cd60 <osMutexNew+0x40>
    if (attr != NULL) {
9000cd28:	4604      	mov	r4, r0
9000cd2a:	b1e0      	cbz	r0, 9000cd66 <osMutexNew+0x46>
      type = attr->attr_bits;
9000cd2c:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000cd2e:	0733      	lsls	r3, r6, #28
9000cd30:	d416      	bmi.n	9000cd60 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cd32:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000cd34:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cd38:	68c3      	ldr	r3, [r0, #12]
9000cd3a:	b181      	cbz	r1, 9000cd5e <osMutexNew+0x3e>
9000cd3c:	2b4f      	cmp	r3, #79	; 0x4f
9000cd3e:	d90f      	bls.n	9000cd60 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000cd40:	b31e      	cbz	r6, 9000cd8a <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000cd42:	2004      	movs	r0, #4
9000cd44:	f001 f858 	bl	9000ddf8 <xQueueCreateMutexStatic>
9000cd48:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000cd4a:	b14d      	cbz	r5, 9000cd60 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000cd4c:	6821      	ldr	r1, [r4, #0]
9000cd4e:	4628      	mov	r0, r5
9000cd50:	f001 fdac 	bl	9000e8ac <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cd54:	b12e      	cbz	r6, 9000cd62 <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000cd56:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000cd5a:	4628      	mov	r0, r5
9000cd5c:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000cd5e:	b163      	cbz	r3, 9000cd7a <osMutexNew+0x5a>
  hMutex = NULL;
9000cd60:	2500      	movs	r5, #0
}
9000cd62:	4628      	mov	r0, r5
9000cd64:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000cd66:	2001      	movs	r0, #1
9000cd68:	f001 f8b6 	bl	9000ded8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cd6c:	4605      	mov	r5, r0
9000cd6e:	2800      	cmp	r0, #0
9000cd70:	d0f6      	beq.n	9000cd60 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000cd72:	4621      	mov	r1, r4
9000cd74:	f001 fd9a 	bl	9000e8ac <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cd78:	e7f3      	b.n	9000cd62 <osMutexNew+0x42>
            if (rmtx != 0U) {
9000cd7a:	b15e      	cbz	r6, 9000cd94 <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000cd7c:	2004      	movs	r0, #4
9000cd7e:	f001 f8ab 	bl	9000ded8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cd82:	4605      	mov	r5, r0
9000cd84:	2800      	cmp	r0, #0
9000cd86:	d1e1      	bne.n	9000cd4c <osMutexNew+0x2c>
9000cd88:	e7ea      	b.n	9000cd60 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000cd8a:	2001      	movs	r0, #1
9000cd8c:	f001 f834 	bl	9000ddf8 <xQueueCreateMutexStatic>
9000cd90:	4605      	mov	r5, r0
9000cd92:	e7da      	b.n	9000cd4a <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000cd94:	2001      	movs	r0, #1
9000cd96:	f001 f89f 	bl	9000ded8 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cd9a:	4605      	mov	r5, r0
9000cd9c:	e7d5      	b.n	9000cd4a <osMutexNew+0x2a>
9000cd9e:	bf00      	nop

9000cda0 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000cda0:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000cda4:	f000 0301 	and.w	r3, r0, #1
9000cda8:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000cdac:	b9a8      	cbnz	r0, 9000cdda <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cdae:	b1ba      	cbz	r2, 9000cde0 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cdb0:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000cdb2:	b510      	push	{r4, lr}
9000cdb4:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000cdb6:	b953      	cbnz	r3, 9000cdce <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000cdb8:	f001 fb06 	bl	9000e3c8 <xQueueSemaphoreTake>
9000cdbc:	2801      	cmp	r0, #1
9000cdbe:	d00a      	beq.n	9000cdd6 <osMutexAcquire+0x36>
          stat = osErrorResource;
9000cdc0:	2c00      	cmp	r4, #0
9000cdc2:	bf14      	ite	ne
9000cdc4:	f06f 0001 	mvnne.w	r0, #1
9000cdc8:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000cdcc:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cdce:	f001 fc83 	bl	9000e6d8 <xQueueTakeMutexRecursive>
9000cdd2:	2801      	cmp	r0, #1
9000cdd4:	d1f4      	bne.n	9000cdc0 <osMutexAcquire+0x20>
  stat = osOK;
9000cdd6:	2000      	movs	r0, #0
}
9000cdd8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cdda:	f06f 0005 	mvn.w	r0, #5
9000cdde:	4770      	bx	lr
    stat = osErrorParameter;
9000cde0:	f06f 0003 	mvn.w	r0, #3
}
9000cde4:	4770      	bx	lr
9000cde6:	bf00      	nop

9000cde8 <osMutexRelease>:
9000cde8:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000cdec:	b9ba      	cbnz	r2, 9000ce1e <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000cdee:	b510      	push	{r4, lr}
9000cdf0:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cdf4:	b1b4      	cbz	r4, 9000ce24 <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000cdf6:	f000 0301 	and.w	r3, r0, #1
9000cdfa:	b943      	cbnz	r3, 9000ce0e <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000cdfc:	461a      	mov	r2, r3
9000cdfe:	4619      	mov	r1, r3
9000ce00:	4620      	mov	r0, r4
9000ce02:	f000 fe77 	bl	9000daf4 <xQueueGenericSend>
9000ce06:	2801      	cmp	r0, #1
9000ce08:	d106      	bne.n	9000ce18 <osMutexRelease+0x30>
  stat = osOK;
9000ce0a:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000ce0c:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000ce0e:	4620      	mov	r0, r4
9000ce10:	f001 f842 	bl	9000de98 <xQueueGiveMutexRecursive>
9000ce14:	2801      	cmp	r0, #1
9000ce16:	d0f8      	beq.n	9000ce0a <osMutexRelease+0x22>
        stat = osErrorResource;
9000ce18:	f06f 0002 	mvn.w	r0, #2
}
9000ce1c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ce1e:	f06f 0005 	mvn.w	r0, #5
}
9000ce22:	4770      	bx	lr
    stat = osErrorParameter;
9000ce24:	f06f 0003 	mvn.w	r0, #3
}
9000ce28:	bd10      	pop	{r4, pc}
9000ce2a:	bf00      	nop

9000ce2c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000ce2c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000ce2e:	b083      	sub	sp, #12
9000ce30:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000ce34:	b98e      	cbnz	r6, 9000ce5a <osSemaphoreNew+0x2e>
9000ce36:	4605      	mov	r5, r0
9000ce38:	b178      	cbz	r0, 9000ce5a <osSemaphoreNew+0x2e>
9000ce3a:	4288      	cmp	r0, r1
9000ce3c:	460f      	mov	r7, r1
9000ce3e:	d30c      	bcc.n	9000ce5a <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000ce40:	4614      	mov	r4, r2
9000ce42:	b182      	cbz	r2, 9000ce66 <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ce44:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000ce48:	b15a      	cbz	r2, 9000ce62 <osSemaphoreNew+0x36>
9000ce4a:	2b4f      	cmp	r3, #79	; 0x4f
9000ce4c:	d905      	bls.n	9000ce5a <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000ce4e:	2801      	cmp	r0, #1
9000ce50:	d032      	beq.n	9000ceb8 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000ce52:	f000 fda7 	bl	9000d9a4 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000ce56:	4605      	mov	r5, r0
9000ce58:	b978      	cbnz	r0, 9000ce7a <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000ce5a:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000ce5c:	4628      	mov	r0, r5
9000ce5e:	b003      	add	sp, #12
9000ce60:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000ce62:	2b00      	cmp	r3, #0
9000ce64:	d1f9      	bne.n	9000ce5a <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000ce66:	2d01      	cmp	r5, #1
9000ce68:	d00f      	beq.n	9000ce8a <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000ce6a:	4628      	mov	r0, r5
9000ce6c:	4639      	mov	r1, r7
9000ce6e:	f000 fdfb 	bl	9000da68 <xQueueCreateCountingSemaphore>
9000ce72:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000ce74:	2d00      	cmp	r5, #0
9000ce76:	d0f0      	beq.n	9000ce5a <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000ce78:	b104      	cbz	r4, 9000ce7c <osSemaphoreNew+0x50>
          name = attr->name;
9000ce7a:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000ce7c:	4628      	mov	r0, r5
9000ce7e:	4621      	mov	r1, r4
9000ce80:	f001 fd14 	bl	9000e8ac <vQueueAddToRegistry>
}
9000ce84:	4628      	mov	r0, r5
9000ce86:	b003      	add	sp, #12
9000ce88:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000ce8a:	4628      	mov	r0, r5
9000ce8c:	2203      	movs	r2, #3
9000ce8e:	2100      	movs	r1, #0
9000ce90:	f000 fd46 	bl	9000d920 <xQueueGenericCreate>
9000ce94:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000ce96:	2d00      	cmp	r5, #0
9000ce98:	d0df      	beq.n	9000ce5a <osSemaphoreNew+0x2e>
9000ce9a:	2f00      	cmp	r7, #0
9000ce9c:	d0ea      	beq.n	9000ce74 <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000ce9e:	2300      	movs	r3, #0
9000cea0:	4628      	mov	r0, r5
9000cea2:	461a      	mov	r2, r3
9000cea4:	4619      	mov	r1, r3
9000cea6:	f000 fe25 	bl	9000daf4 <xQueueGenericSend>
9000ceaa:	2801      	cmp	r0, #1
9000ceac:	d0e4      	beq.n	9000ce78 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000ceae:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000ceb0:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000ceb2:	f001 fcb5 	bl	9000e820 <vQueueDelete>
      if (hSemaphore != NULL) {
9000ceb6:	e7d1      	b.n	9000ce5c <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000ceb8:	4613      	mov	r3, r2
9000ceba:	2203      	movs	r2, #3
9000cebc:	4631      	mov	r1, r6
9000cebe:	9200      	str	r2, [sp, #0]
9000cec0:	4632      	mov	r2, r6
9000cec2:	f000 fcc1 	bl	9000d848 <xQueueGenericCreateStatic>
9000cec6:	4605      	mov	r5, r0
9000cec8:	e7e5      	b.n	9000ce96 <osSemaphoreNew+0x6a>
9000ceca:	bf00      	nop

9000cecc <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000cecc:	b370      	cbz	r0, 9000cf2c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000cece:	b510      	push	{r4, lr}
9000ced0:	460c      	mov	r4, r1
9000ced2:	b082      	sub	sp, #8
9000ced4:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000ced8:	b1c3      	cbz	r3, 9000cf0c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000ceda:	bb21      	cbnz	r1, 9000cf26 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000cedc:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000cede:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000cee0:	f001 fc1a 	bl	9000e718 <xQueueReceiveFromISR>
9000cee4:	2801      	cmp	r0, #1
9000cee6:	d11a      	bne.n	9000cf1e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000cee8:	9b01      	ldr	r3, [sp, #4]
9000ceea:	b913      	cbnz	r3, 9000cef2 <osSemaphoreAcquire+0x26>
  stat = osOK;
9000ceec:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000ceee:	b002      	add	sp, #8
9000cef0:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000cef2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cef6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000cefa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000cefe:	f3bf 8f4f 	dsb	sy
9000cf02:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000cf06:	4620      	mov	r0, r4
}
9000cf08:	b002      	add	sp, #8
9000cf0a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000cf0c:	f001 fa5c 	bl	9000e3c8 <xQueueSemaphoreTake>
9000cf10:	2801      	cmp	r0, #1
9000cf12:	d0eb      	beq.n	9000ceec <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000cf14:	b11c      	cbz	r4, 9000cf1e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000cf16:	f06f 0001 	mvn.w	r0, #1
}
9000cf1a:	b002      	add	sp, #8
9000cf1c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000cf1e:	f06f 0002 	mvn.w	r0, #2
}
9000cf22:	b002      	add	sp, #8
9000cf24:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000cf26:	f06f 0003 	mvn.w	r0, #3
9000cf2a:	e7e0      	b.n	9000ceee <osSemaphoreAcquire+0x22>
9000cf2c:	f06f 0003 	mvn.w	r0, #3
}
9000cf30:	4770      	bx	lr
9000cf32:	bf00      	nop

9000cf34 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000cf34:	b330      	cbz	r0, 9000cf84 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000cf36:	b510      	push	{r4, lr}
9000cf38:	b082      	sub	sp, #8
9000cf3a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000cf3e:	b1ab      	cbz	r3, 9000cf6c <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000cf40:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000cf42:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000cf44:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000cf46:	f001 f869 	bl	9000e01c <xQueueGiveFromISR>
9000cf4a:	2801      	cmp	r0, #1
9000cf4c:	d117      	bne.n	9000cf7e <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000cf4e:	9b01      	ldr	r3, [sp, #4]
9000cf50:	b193      	cbz	r3, 9000cf78 <osSemaphoreRelease+0x44>
9000cf52:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cf56:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000cf5a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000cf5e:	f3bf 8f4f 	dsb	sy
9000cf62:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000cf66:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000cf68:	b002      	add	sp, #8
9000cf6a:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000cf6c:	461a      	mov	r2, r3
9000cf6e:	4619      	mov	r1, r3
9000cf70:	f000 fdc0 	bl	9000daf4 <xQueueGenericSend>
9000cf74:	2801      	cmp	r0, #1
9000cf76:	d102      	bne.n	9000cf7e <osSemaphoreRelease+0x4a>
  stat = osOK;
9000cf78:	2000      	movs	r0, #0
}
9000cf7a:	b002      	add	sp, #8
9000cf7c:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000cf7e:	f06f 0002 	mvn.w	r0, #2
9000cf82:	e7fa      	b.n	9000cf7a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000cf84:	f06f 0003 	mvn.w	r0, #3
}
9000cf88:	4770      	bx	lr
9000cf8a:	bf00      	nop

9000cf8c <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
9000cf8c:	b130      	cbz	r0, 9000cf9c <osSemaphoreGetCount+0x10>
9000cf8e:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
9000cf92:	b10b      	cbz	r3, 9000cf98 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
9000cf94:	f001 bc36 	b.w	9000e804 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
9000cf98:	f001 bc1e 	b.w	9000e7d8 <uxQueueMessagesWaiting>
  }

  return (count);
}
9000cf9c:	4770      	bx	lr
9000cf9e:	bf00      	nop

9000cfa0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000cfa0:	b5f0      	push	{r4, r5, r6, r7, lr}
9000cfa2:	b083      	sub	sp, #12
9000cfa4:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000cfa8:	b987      	cbnz	r7, 9000cfcc <osMessageQueueNew+0x2c>
9000cfaa:	4605      	mov	r5, r0
9000cfac:	b170      	cbz	r0, 9000cfcc <osMessageQueueNew+0x2c>
9000cfae:	b169      	cbz	r1, 9000cfcc <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000cfb0:	4614      	mov	r4, r2
9000cfb2:	b17a      	cbz	r2, 9000cfd4 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000cfb4:	6893      	ldr	r3, [r2, #8]
9000cfb6:	b1cb      	cbz	r3, 9000cfec <osMessageQueueNew+0x4c>
9000cfb8:	68d2      	ldr	r2, [r2, #12]
9000cfba:	2a4f      	cmp	r2, #79	; 0x4f
9000cfbc:	d906      	bls.n	9000cfcc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000cfbe:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000cfc0:	b122      	cbz	r2, 9000cfcc <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000cfc2:	fb01 f505 	mul.w	r5, r1, r5
9000cfc6:	6966      	ldr	r6, [r4, #20]
9000cfc8:	42ae      	cmp	r6, r5
9000cfca:	d21f      	bcs.n	9000d00c <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000cfcc:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000cfce:	4628      	mov	r0, r5
9000cfd0:	b003      	add	sp, #12
9000cfd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000cfd4:	f000 fca4 	bl	9000d920 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000cfd8:	4605      	mov	r5, r0
9000cfda:	2800      	cmp	r0, #0
9000cfdc:	d0f6      	beq.n	9000cfcc <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000cfde:	4628      	mov	r0, r5
9000cfe0:	4621      	mov	r1, r4
9000cfe2:	f001 fc63 	bl	9000e8ac <vQueueAddToRegistry>
}
9000cfe6:	4628      	mov	r0, r5
9000cfe8:	b003      	add	sp, #12
9000cfea:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000cfec:	68d3      	ldr	r3, [r2, #12]
9000cfee:	2b00      	cmp	r3, #0
9000cff0:	d1ec      	bne.n	9000cfcc <osMessageQueueNew+0x2c>
9000cff2:	6913      	ldr	r3, [r2, #16]
9000cff4:	2b00      	cmp	r3, #0
9000cff6:	d1e9      	bne.n	9000cfcc <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000cff8:	6952      	ldr	r2, [r2, #20]
9000cffa:	2a00      	cmp	r2, #0
9000cffc:	d1e6      	bne.n	9000cfcc <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000cffe:	f000 fc8f 	bl	9000d920 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d002:	4605      	mov	r5, r0
9000d004:	2800      	cmp	r0, #0
9000d006:	d0e1      	beq.n	9000cfcc <osMessageQueueNew+0x2c>
        name = attr->name;
9000d008:	6824      	ldr	r4, [r4, #0]
9000d00a:	e7e8      	b.n	9000cfde <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d00c:	9700      	str	r7, [sp, #0]
9000d00e:	f000 fc1b 	bl	9000d848 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d012:	4605      	mov	r5, r0
9000d014:	2800      	cmp	r0, #0
9000d016:	d1f7      	bne.n	9000d008 <osMessageQueueNew+0x68>
9000d018:	e7d8      	b.n	9000cfcc <osMessageQueueNew+0x2c>
9000d01a:	bf00      	nop

9000d01c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d01c:	b530      	push	{r4, r5, lr}
9000d01e:	461c      	mov	r4, r3
9000d020:	b083      	sub	sp, #12
9000d022:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d026:	b30b      	cbz	r3, 9000d06c <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d028:	3c00      	subs	r4, #0
9000d02a:	bf18      	it	ne
9000d02c:	2401      	movne	r4, #1
9000d02e:	2900      	cmp	r1, #0
9000d030:	bf08      	it	eq
9000d032:	f044 0401 	orreq.w	r4, r4, #1
9000d036:	bb7c      	cbnz	r4, 9000d098 <osMessageQueuePut+0x7c>
9000d038:	fab0 f480 	clz	r4, r0
9000d03c:	0964      	lsrs	r4, r4, #5
9000d03e:	b358      	cbz	r0, 9000d098 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d040:	4623      	mov	r3, r4
9000d042:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d044:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d046:	f000 ff7f 	bl	9000df48 <xQueueGenericSendFromISR>
9000d04a:	2801      	cmp	r0, #1
9000d04c:	d120      	bne.n	9000d090 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d04e:	9b01      	ldr	r3, [sp, #4]
9000d050:	b1db      	cbz	r3, 9000d08a <osMessageQueuePut+0x6e>
9000d052:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d056:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d05a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d05e:	f3bf 8f4f 	dsb	sy
9000d062:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d066:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d068:	b003      	add	sp, #12
9000d06a:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d06c:	b1a0      	cbz	r0, 9000d098 <osMessageQueuePut+0x7c>
9000d06e:	fab1 f381 	clz	r3, r1
9000d072:	095b      	lsrs	r3, r3, #5
9000d074:	b181      	cbz	r1, 9000d098 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d076:	4622      	mov	r2, r4
9000d078:	f000 fd3c 	bl	9000daf4 <xQueueGenericSend>
9000d07c:	2801      	cmp	r0, #1
9000d07e:	d004      	beq.n	9000d08a <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000d080:	b134      	cbz	r4, 9000d090 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000d082:	f06f 0001 	mvn.w	r0, #1
}
9000d086:	b003      	add	sp, #12
9000d088:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d08a:	2000      	movs	r0, #0
}
9000d08c:	b003      	add	sp, #12
9000d08e:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d090:	f06f 0002 	mvn.w	r0, #2
}
9000d094:	b003      	add	sp, #12
9000d096:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d098:	f06f 0003 	mvn.w	r0, #3
9000d09c:	e7e4      	b.n	9000d068 <osMessageQueuePut+0x4c>
9000d09e:	bf00      	nop

9000d0a0 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d0a0:	b530      	push	{r4, r5, lr}
9000d0a2:	461c      	mov	r4, r3
9000d0a4:	b083      	sub	sp, #12
9000d0a6:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d0aa:	b303      	cbz	r3, 9000d0ee <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d0ac:	3c00      	subs	r4, #0
9000d0ae:	bf18      	it	ne
9000d0b0:	2401      	movne	r4, #1
9000d0b2:	2900      	cmp	r1, #0
9000d0b4:	bf08      	it	eq
9000d0b6:	f044 0401 	orreq.w	r4, r4, #1
9000d0ba:	bb5c      	cbnz	r4, 9000d114 <osMessageQueueGet+0x74>
9000d0bc:	fab0 f480 	clz	r4, r0
9000d0c0:	0964      	lsrs	r4, r4, #5
9000d0c2:	b338      	cbz	r0, 9000d114 <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d0c4:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d0c6:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d0c8:	f001 fb26 	bl	9000e718 <xQueueReceiveFromISR>
9000d0cc:	2801      	cmp	r0, #1
9000d0ce:	d11d      	bne.n	9000d10c <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d0d0:	9b01      	ldr	r3, [sp, #4]
9000d0d2:	b1c3      	cbz	r3, 9000d106 <osMessageQueueGet+0x66>
9000d0d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d0d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d0dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d0e0:	f3bf 8f4f 	dsb	sy
9000d0e4:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d0e8:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d0ea:	b003      	add	sp, #12
9000d0ec:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d0ee:	b188      	cbz	r0, 9000d114 <osMessageQueueGet+0x74>
9000d0f0:	b181      	cbz	r1, 9000d114 <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d0f2:	4622      	mov	r2, r4
9000d0f4:	f000 ffea 	bl	9000e0cc <xQueueReceive>
9000d0f8:	2801      	cmp	r0, #1
9000d0fa:	d004      	beq.n	9000d106 <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000d0fc:	b134      	cbz	r4, 9000d10c <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000d0fe:	f06f 0001 	mvn.w	r0, #1
}
9000d102:	b003      	add	sp, #12
9000d104:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d106:	2000      	movs	r0, #0
}
9000d108:	b003      	add	sp, #12
9000d10a:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d10c:	f06f 0002 	mvn.w	r0, #2
}
9000d110:	b003      	add	sp, #12
9000d112:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d114:	f06f 0003 	mvn.w	r0, #3
9000d118:	e7e7      	b.n	9000d0ea <osMessageQueueGet+0x4a>
9000d11a:	bf00      	nop

9000d11c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d11c:	4b04      	ldr	r3, [pc, #16]	; (9000d130 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d11e:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d120:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d122:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d124:	4c03      	ldr	r4, [pc, #12]	; (9000d134 <vApplicationGetIdleTaskMemory+0x18>)
9000d126:	600c      	str	r4, [r1, #0]
}
9000d128:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d12c:	6013      	str	r3, [r2, #0]
}
9000d12e:	4770      	bx	lr
9000d130:	2400a36c 	.word	0x2400a36c
9000d134:	2400a16c 	.word	0x2400a16c

9000d138 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d138:	4b05      	ldr	r3, [pc, #20]	; (9000d150 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d13a:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d13c:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d13e:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d142:	4c04      	ldr	r4, [pc, #16]	; (9000d154 <vApplicationGetTimerTaskMemory+0x1c>)
9000d144:	600c      	str	r4, [r1, #0]
}
9000d146:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d14a:	6013      	str	r3, [r2, #0]
}
9000d14c:	4770      	bx	lr
9000d14e:	bf00      	nop
9000d150:	2400a7d0 	.word	0x2400a7d0
9000d154:	2400a3d0 	.word	0x2400a3d0

9000d158 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d158:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d15c:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d15e:	f002 f881 	bl	9000f264 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d162:	4a54      	ldr	r2, [pc, #336]	; (9000d2b4 <pvPortMalloc+0x15c>)
9000d164:	6816      	ldr	r6, [r2, #0]
9000d166:	2e00      	cmp	r6, #0
9000d168:	d06f      	beq.n	9000d24a <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d16a:	4b53      	ldr	r3, [pc, #332]	; (9000d2b8 <pvPortMalloc+0x160>)
9000d16c:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d16e:	423d      	tst	r5, r7
9000d170:	d12e      	bne.n	9000d1d0 <pvPortMalloc+0x78>
9000d172:	b36d      	cbz	r5, 9000d1d0 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000d174:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d178:	076d      	lsls	r5, r5, #29
9000d17a:	d002      	beq.n	9000d182 <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d17c:	f024 0407 	bic.w	r4, r4, #7
9000d180:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d182:	b32c      	cbz	r4, 9000d1d0 <pvPortMalloc+0x78>
9000d184:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000d2d0 <pvPortMalloc+0x178>
9000d188:	f8dc 5000 	ldr.w	r5, [ip]
9000d18c:	42a5      	cmp	r5, r4
9000d18e:	d31f      	bcc.n	9000d1d0 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d190:	484a      	ldr	r0, [pc, #296]	; (9000d2bc <pvPortMalloc+0x164>)
9000d192:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d194:	e003      	b.n	9000d19e <pvPortMalloc+0x46>
9000d196:	681a      	ldr	r2, [r3, #0]
9000d198:	b122      	cbz	r2, 9000d1a4 <pvPortMalloc+0x4c>
9000d19a:	4618      	mov	r0, r3
9000d19c:	4613      	mov	r3, r2
9000d19e:	6859      	ldr	r1, [r3, #4]
9000d1a0:	42a1      	cmp	r1, r4
9000d1a2:	d3f8      	bcc.n	9000d196 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d1a4:	42b3      	cmp	r3, r6
9000d1a6:	d013      	beq.n	9000d1d0 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d1a8:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d1aa:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d1ac:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d1b0:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d1b2:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d1b6:	d929      	bls.n	9000d20c <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d1b8:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d1ba:	0748      	lsls	r0, r1, #29
9000d1bc:	d00f      	beq.n	9000d1de <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d1be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d1c2:	f383 8811 	msr	BASEPRI, r3
9000d1c6:	f3bf 8f6f 	isb	sy
9000d1ca:	f3bf 8f4f 	dsb	sy
9000d1ce:	e7fe      	b.n	9000d1ce <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d1d0:	f04f 0800 	mov.w	r8, #0
9000d1d4:	f002 f84e 	bl	9000f274 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d1d8:	4640      	mov	r0, r8
9000d1da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d1de:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d1e0:	4a36      	ldr	r2, [pc, #216]	; (9000d2bc <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000d1e2:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d1e4:	4614      	mov	r4, r2
9000d1e6:	6812      	ldr	r2, [r2, #0]
9000d1e8:	4291      	cmp	r1, r2
9000d1ea:	d8fb      	bhi.n	9000d1e4 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d1ec:	6860      	ldr	r0, [r4, #4]
9000d1ee:	eb04 0e00 	add.w	lr, r4, r0
9000d1f2:	4571      	cmp	r1, lr
9000d1f4:	d04a      	beq.n	9000d28c <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d1f6:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d1fa:	eb01 000e 	add.w	r0, r1, lr
9000d1fe:	4282      	cmp	r2, r0
9000d200:	d050      	beq.n	9000d2a4 <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d202:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d204:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d206:	bf18      	it	ne
9000d208:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d20a:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d20c:	4a2c      	ldr	r2, [pc, #176]	; (9000d2c0 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d20e:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d210:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d212:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d214:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d218:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000d21a:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d21e:	bf38      	it	cc
9000d220:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000d222:	4a28      	ldr	r2, [pc, #160]	; (9000d2c4 <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000d224:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000d228:	6813      	ldr	r3, [r2, #0]
9000d22a:	3301      	adds	r3, #1
9000d22c:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000d22e:	f002 f821 	bl	9000f274 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d232:	f018 0f07 	tst.w	r8, #7
9000d236:	d0cf      	beq.n	9000d1d8 <pvPortMalloc+0x80>
9000d238:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d23c:	f383 8811 	msr	BASEPRI, r3
9000d240:	f3bf 8f6f 	isb	sy
9000d244:	f3bf 8f4f 	dsb	sy
9000d248:	e7fe      	b.n	9000d248 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000d24a:	4b1f      	ldr	r3, [pc, #124]	; (9000d2c8 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d24c:	075e      	lsls	r6, r3, #29
9000d24e:	d117      	bne.n	9000d280 <pvPortMalloc+0x128>
9000d250:	4e1e      	ldr	r6, [pc, #120]	; (9000d2cc <pvPortMalloc+0x174>)
9000d252:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000d254:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d256:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d25a:	4818      	ldr	r0, [pc, #96]	; (9000d2bc <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d25c:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000d260:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d262:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d264:	4a16      	ldr	r2, [pc, #88]	; (9000d2c0 <pvPortMalloc+0x168>)
9000d266:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d268:	4a19      	ldr	r2, [pc, #100]	; (9000d2d0 <pvPortMalloc+0x178>)
9000d26a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d26c:	4a12      	ldr	r2, [pc, #72]	; (9000d2b8 <pvPortMalloc+0x160>)
9000d26e:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d270:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d272:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000d276:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d27a:	e9c1 6300 	strd	r6, r3, [r1]
}
9000d27e:	e776      	b.n	9000d16e <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d280:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000d282:	4e12      	ldr	r6, [pc, #72]	; (9000d2cc <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000d284:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d288:	460b      	mov	r3, r1
9000d28a:	e7e3      	b.n	9000d254 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d28c:	6849      	ldr	r1, [r1, #4]
9000d28e:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d292:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d296:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d29a:	428a      	cmp	r2, r1
9000d29c:	d001      	beq.n	9000d2a2 <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d29e:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000d2a0:	e7b3      	b.n	9000d20a <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d2a2:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d2a4:	42b2      	cmp	r2, r6
9000d2a6:	d0ac      	beq.n	9000d202 <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d2a8:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d2aa:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d2ac:	4470      	add	r0, lr
9000d2ae:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d2b0:	e7a7      	b.n	9000d202 <pvPortMalloc+0xaa>
9000d2b2:	bf00      	nop
9000d2b4:	2400a830 	.word	0x2400a830
9000d2b8:	24022ed4 	.word	0x24022ed4
9000d2bc:	24022ee8 	.word	0x24022ee8
9000d2c0:	24022edc 	.word	0x24022edc
9000d2c4:	24022ee0 	.word	0x24022ee0
9000d2c8:	2400a834 	.word	0x2400a834
9000d2cc:	24022ed4 	.word	0x24022ed4
9000d2d0:	24022ed8 	.word	0x24022ed8

9000d2d4 <vPortFree>:
	if( pv != NULL )
9000d2d4:	b1d0      	cbz	r0, 9000d30c <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d2d6:	4a2c      	ldr	r2, [pc, #176]	; (9000d388 <vPortFree+0xb4>)
9000d2d8:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d2dc:	6812      	ldr	r2, [r2, #0]
9000d2de:	4213      	tst	r3, r2
9000d2e0:	d00b      	beq.n	9000d2fa <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d2e2:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d2e6:	b191      	cbz	r1, 9000d30e <vPortFree+0x3a>
9000d2e8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d2ec:	f383 8811 	msr	BASEPRI, r3
9000d2f0:	f3bf 8f6f 	isb	sy
9000d2f4:	f3bf 8f4f 	dsb	sy
9000d2f8:	e7fe      	b.n	9000d2f8 <vPortFree+0x24>
9000d2fa:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d2fe:	f383 8811 	msr	BASEPRI, r3
9000d302:	f3bf 8f6f 	isb	sy
9000d306:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d30a:	e7fe      	b.n	9000d30a <vPortFree+0x36>
9000d30c:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d30e:	ea23 0302 	bic.w	r3, r3, r2
{
9000d312:	b530      	push	{r4, r5, lr}
9000d314:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d316:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d31a:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d31e:	4d1b      	ldr	r5, [pc, #108]	; (9000d38c <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d320:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d322:	f001 ff9f 	bl	9000f264 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d326:	9801      	ldr	r0, [sp, #4]
9000d328:	682a      	ldr	r2, [r5, #0]
9000d32a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d32e:	4b18      	ldr	r3, [pc, #96]	; (9000d390 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d330:	440a      	add	r2, r1
9000d332:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d334:	461a      	mov	r2, r3
9000d336:	681b      	ldr	r3, [r3, #0]
9000d338:	429c      	cmp	r4, r3
9000d33a:	d8fb      	bhi.n	9000d334 <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d33c:	6850      	ldr	r0, [r2, #4]
9000d33e:	eb02 0c00 	add.w	ip, r2, r0
9000d342:	4564      	cmp	r4, ip
9000d344:	d00f      	beq.n	9000d366 <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d346:	1860      	adds	r0, r4, r1
9000d348:	4283      	cmp	r3, r0
9000d34a:	d014      	beq.n	9000d376 <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000d34c:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d34e:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d350:	bf18      	it	ne
9000d352:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d354:	4a0f      	ldr	r2, [pc, #60]	; (9000d394 <vPortFree+0xc0>)
9000d356:	6813      	ldr	r3, [r2, #0]
9000d358:	3301      	adds	r3, #1
9000d35a:	6013      	str	r3, [r2, #0]
}
9000d35c:	b003      	add	sp, #12
9000d35e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d362:	f001 bf87 	b.w	9000f274 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d366:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d368:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d36a:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d36c:	4283      	cmp	r3, r0
9000d36e:	d001      	beq.n	9000d374 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d370:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000d372:	e7ef      	b.n	9000d354 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d374:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d376:	4808      	ldr	r0, [pc, #32]	; (9000d398 <vPortFree+0xc4>)
9000d378:	6800      	ldr	r0, [r0, #0]
9000d37a:	4283      	cmp	r3, r0
9000d37c:	d0e6      	beq.n	9000d34c <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d37e:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d382:	4401      	add	r1, r0
9000d384:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d386:	e7e1      	b.n	9000d34c <vPortFree+0x78>
9000d388:	24022ed4 	.word	0x24022ed4
9000d38c:	24022ed8 	.word	0x24022ed8
9000d390:	24022ee8 	.word	0x24022ee8
9000d394:	24022ee4 	.word	0x24022ee4
9000d398:	2400a830 	.word	0x2400a830

9000d39c <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d39c:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d3a0:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d3a4:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d3a6:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d3a8:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d3aa:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d3ac:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d3b0:	4770      	bx	lr
9000d3b2:	bf00      	nop

9000d3b4 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d3b4:	2300      	movs	r3, #0
9000d3b6:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d3b8:	4770      	bx	lr
9000d3ba:	bf00      	nop

9000d3bc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000d3bc:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d3be:	6802      	ldr	r2, [r0, #0]
{
9000d3c0:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d3c2:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000d3c4:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000d3c6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d3c8:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d3ca:	689c      	ldr	r4, [r3, #8]
9000d3cc:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d3ce:	6099      	str	r1, [r3, #8]
}
9000d3d0:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d3d4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d3d6:	6002      	str	r2, [r0, #0]
}
9000d3d8:	4770      	bx	lr
9000d3da:	bf00      	nop

9000d3dc <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d3dc:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d3de:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d3e0:	1c6b      	adds	r3, r5, #1
9000d3e2:	d010      	beq.n	9000d406 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d3e4:	f100 0308 	add.w	r3, r0, #8
9000d3e8:	461c      	mov	r4, r3
9000d3ea:	685b      	ldr	r3, [r3, #4]
9000d3ec:	681a      	ldr	r2, [r3, #0]
9000d3ee:	42aa      	cmp	r2, r5
9000d3f0:	d9fa      	bls.n	9000d3e8 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d3f2:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d3f4:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d3f6:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d3f8:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d3fa:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d3fc:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d3fe:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d400:	6002      	str	r2, [r0, #0]
}
9000d402:	bc30      	pop	{r4, r5}
9000d404:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d406:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d408:	6863      	ldr	r3, [r4, #4]
9000d40a:	e7f2      	b.n	9000d3f2 <vListInsert+0x16>

9000d40c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d40c:	6903      	ldr	r3, [r0, #16]
{
9000d40e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d410:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d412:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d416:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d418:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d41c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d41e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d420:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d424:	bf08      	it	eq
9000d426:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d428:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d42a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d42c:	3a01      	subs	r2, #1
9000d42e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d430:	6818      	ldr	r0, [r3, #0]
}
9000d432:	4770      	bx	lr

9000d434 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d434:	4808      	ldr	r0, [pc, #32]	; (9000d458 <prvPortStartFirstTask+0x24>)
9000d436:	6800      	ldr	r0, [r0, #0]
9000d438:	6800      	ldr	r0, [r0, #0]
9000d43a:	f380 8808 	msr	MSP, r0
9000d43e:	f04f 0000 	mov.w	r0, #0
9000d442:	f380 8814 	msr	CONTROL, r0
9000d446:	b662      	cpsie	i
9000d448:	b661      	cpsie	f
9000d44a:	f3bf 8f4f 	dsb	sy
9000d44e:	f3bf 8f6f 	isb	sy
9000d452:	df00      	svc	0
9000d454:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d456:	0000      	.short	0x0000
9000d458:	e000ed08 	.word	0xe000ed08

9000d45c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d45c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000d46c <vPortEnableVFP+0x10>
9000d460:	6801      	ldr	r1, [r0, #0]
9000d462:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000d466:	6001      	str	r1, [r0, #0]
9000d468:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d46a:	0000      	.short	0x0000
9000d46c:	e000ed88 	.word	0xe000ed88

9000d470 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d470:	4b0e      	ldr	r3, [pc, #56]	; (9000d4ac <prvTaskExitError+0x3c>)
{
9000d472:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d474:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d476:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d478:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d47a:	3301      	adds	r3, #1
9000d47c:	d008      	beq.n	9000d490 <prvTaskExitError+0x20>
9000d47e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d482:	f383 8811 	msr	BASEPRI, r3
9000d486:	f3bf 8f6f 	isb	sy
9000d48a:	f3bf 8f4f 	dsb	sy
9000d48e:	e7fe      	b.n	9000d48e <prvTaskExitError+0x1e>
9000d490:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d494:	f383 8811 	msr	BASEPRI, r3
9000d498:	f3bf 8f6f 	isb	sy
9000d49c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d4a0:	9b01      	ldr	r3, [sp, #4]
9000d4a2:	2b00      	cmp	r3, #0
9000d4a4:	d0fc      	beq.n	9000d4a0 <prvTaskExitError+0x30>
}
9000d4a6:	b002      	add	sp, #8
9000d4a8:	4770      	bx	lr
9000d4aa:	bf00      	nop
9000d4ac:	24000070 	.word	0x24000070

9000d4b0 <pxPortInitialiseStack>:
{
9000d4b0:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d4b2:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d4b6:	4809      	ldr	r0, [pc, #36]	; (9000d4dc <pxPortInitialiseStack+0x2c>)
{
9000d4b8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d4ba:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d4be:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d4c2:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d4c6:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d4ca:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d4ce:	f06f 0102 	mvn.w	r1, #2
}
9000d4d2:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d4d6:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d4da:	4770      	bx	lr
9000d4dc:	9000d471 	.word	0x9000d471

9000d4e0 <SVC_Handler>:
	__asm volatile (
9000d4e0:	4b07      	ldr	r3, [pc, #28]	; (9000d500 <pxCurrentTCBConst2>)
9000d4e2:	6819      	ldr	r1, [r3, #0]
9000d4e4:	6808      	ldr	r0, [r1, #0]
9000d4e6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d4ea:	f380 8809 	msr	PSP, r0
9000d4ee:	f3bf 8f6f 	isb	sy
9000d4f2:	f04f 0000 	mov.w	r0, #0
9000d4f6:	f380 8811 	msr	BASEPRI, r0
9000d4fa:	4770      	bx	lr
9000d4fc:	f3af 8000 	nop.w

9000d500 <pxCurrentTCBConst2>:
9000d500:	24022f38 	.word	0x24022f38

9000d504 <vPortEnterCritical>:
9000d504:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d508:	f383 8811 	msr	BASEPRI, r3
9000d50c:	f3bf 8f6f 	isb	sy
9000d510:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d514:	4a0b      	ldr	r2, [pc, #44]	; (9000d544 <vPortEnterCritical+0x40>)
9000d516:	6813      	ldr	r3, [r2, #0]
9000d518:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d51a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d51c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d51e:	d000      	beq.n	9000d522 <vPortEnterCritical+0x1e>
}
9000d520:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d522:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d526:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000d52a:	b2db      	uxtb	r3, r3
9000d52c:	2b00      	cmp	r3, #0
9000d52e:	d0f7      	beq.n	9000d520 <vPortEnterCritical+0x1c>
9000d530:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d534:	f383 8811 	msr	BASEPRI, r3
9000d538:	f3bf 8f6f 	isb	sy
9000d53c:	f3bf 8f4f 	dsb	sy
9000d540:	e7fe      	b.n	9000d540 <vPortEnterCritical+0x3c>
9000d542:	bf00      	nop
9000d544:	24000070 	.word	0x24000070

9000d548 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d548:	4a08      	ldr	r2, [pc, #32]	; (9000d56c <vPortExitCritical+0x24>)
9000d54a:	6813      	ldr	r3, [r2, #0]
9000d54c:	b943      	cbnz	r3, 9000d560 <vPortExitCritical+0x18>
9000d54e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d552:	f383 8811 	msr	BASEPRI, r3
9000d556:	f3bf 8f6f 	isb	sy
9000d55a:	f3bf 8f4f 	dsb	sy
9000d55e:	e7fe      	b.n	9000d55e <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d560:	3b01      	subs	r3, #1
9000d562:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d564:	b90b      	cbnz	r3, 9000d56a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d566:	f383 8811 	msr	BASEPRI, r3
}
9000d56a:	4770      	bx	lr
9000d56c:	24000070 	.word	0x24000070

9000d570 <PendSV_Handler>:
	__asm volatile
9000d570:	f3ef 8009 	mrs	r0, PSP
9000d574:	f3bf 8f6f 	isb	sy
9000d578:	4b15      	ldr	r3, [pc, #84]	; (9000d5d0 <pxCurrentTCBConst>)
9000d57a:	681a      	ldr	r2, [r3, #0]
9000d57c:	f01e 0f10 	tst.w	lr, #16
9000d580:	bf08      	it	eq
9000d582:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d586:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d58a:	6010      	str	r0, [r2, #0]
9000d58c:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d590:	f04f 0050 	mov.w	r0, #80	; 0x50
9000d594:	f380 8811 	msr	BASEPRI, r0
9000d598:	f3bf 8f4f 	dsb	sy
9000d59c:	f3bf 8f6f 	isb	sy
9000d5a0:	f001 fea4 	bl	9000f2ec <vTaskSwitchContext>
9000d5a4:	f04f 0000 	mov.w	r0, #0
9000d5a8:	f380 8811 	msr	BASEPRI, r0
9000d5ac:	bc09      	pop	{r0, r3}
9000d5ae:	6819      	ldr	r1, [r3, #0]
9000d5b0:	6808      	ldr	r0, [r1, #0]
9000d5b2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d5b6:	f01e 0f10 	tst.w	lr, #16
9000d5ba:	bf08      	it	eq
9000d5bc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d5c0:	f380 8809 	msr	PSP, r0
9000d5c4:	f3bf 8f6f 	isb	sy
9000d5c8:	4770      	bx	lr
9000d5ca:	bf00      	nop
9000d5cc:	f3af 8000 	nop.w

9000d5d0 <pxCurrentTCBConst>:
9000d5d0:	24022f38 	.word	0x24022f38

9000d5d4 <xPortSysTickHandler>:
{
9000d5d4:	b508      	push	{r3, lr}
	__asm volatile
9000d5d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5da:	f383 8811 	msr	BASEPRI, r3
9000d5de:	f3bf 8f6f 	isb	sy
9000d5e2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d5e6:	f001 fe5b 	bl	9000f2a0 <xTaskIncrementTick>
9000d5ea:	b128      	cbz	r0, 9000d5f8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d5ec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d5f0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d5f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000d5f8:	2300      	movs	r3, #0
9000d5fa:	f383 8811 	msr	BASEPRI, r3
}
9000d5fe:	bd08      	pop	{r3, pc}

9000d600 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d600:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000d604:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d606:	4806      	ldr	r0, [pc, #24]	; (9000d620 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d608:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d60a:	4906      	ldr	r1, [pc, #24]	; (9000d624 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d60c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d60e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d610:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d612:	fba1 1303 	umull	r1, r3, r1, r3
9000d616:	099b      	lsrs	r3, r3, #6
9000d618:	3b01      	subs	r3, #1
9000d61a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d61c:	6110      	str	r0, [r2, #16]
}
9000d61e:	4770      	bx	lr
9000d620:	24000060 	.word	0x24000060
9000d624:	10624dd3 	.word	0x10624dd3

9000d628 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d628:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d62c:	4a48      	ldr	r2, [pc, #288]	; (9000d750 <xPortStartScheduler+0x128>)
9000d62e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000d632:	4291      	cmp	r1, r2
9000d634:	d041      	beq.n	9000d6ba <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d636:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000d63a:	4b46      	ldr	r3, [pc, #280]	; (9000d754 <xPortStartScheduler+0x12c>)
9000d63c:	429a      	cmp	r2, r3
9000d63e:	d033      	beq.n	9000d6a8 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d640:	4b45      	ldr	r3, [pc, #276]	; (9000d758 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d642:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d644:	4945      	ldr	r1, [pc, #276]	; (9000d75c <xPortStartScheduler+0x134>)
{
9000d646:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d648:	781a      	ldrb	r2, [r3, #0]
{
9000d64a:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d64c:	4c44      	ldr	r4, [pc, #272]	; (9000d760 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d64e:	b2d2      	uxtb	r2, r2
9000d650:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d652:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d654:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d656:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d658:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d65a:	b2db      	uxtb	r3, r3
9000d65c:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d660:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d664:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d668:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d66c:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d66e:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d670:	d511      	bpl.n	9000d696 <xPortStartScheduler+0x6e>
9000d672:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d674:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d678:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d67a:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d67c:	005b      	lsls	r3, r3, #1
9000d67e:	b2db      	uxtb	r3, r3
9000d680:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d684:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000d688:	0609      	lsls	r1, r1, #24
9000d68a:	d4f3      	bmi.n	9000d674 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d68c:	2803      	cmp	r0, #3
9000d68e:	6020      	str	r0, [r4, #0]
9000d690:	f88d 3007 	strb.w	r3, [sp, #7]
9000d694:	d01a      	beq.n	9000d6cc <xPortStartScheduler+0xa4>
	__asm volatile
9000d696:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d69a:	f383 8811 	msr	BASEPRI, r3
9000d69e:	f3bf 8f6f 	isb	sy
9000d6a2:	f3bf 8f4f 	dsb	sy
9000d6a6:	e7fe      	b.n	9000d6a6 <xPortStartScheduler+0x7e>
9000d6a8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6ac:	f383 8811 	msr	BASEPRI, r3
9000d6b0:	f3bf 8f6f 	isb	sy
9000d6b4:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d6b8:	e7fe      	b.n	9000d6b8 <xPortStartScheduler+0x90>
9000d6ba:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6be:	f383 8811 	msr	BASEPRI, r3
9000d6c2:	f3bf 8f6f 	isb	sy
9000d6c6:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d6ca:	e7fe      	b.n	9000d6ca <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d6cc:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d6ce:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d6d2:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d6d6:	4a20      	ldr	r2, [pc, #128]	; (9000d758 <xPortStartScheduler+0x130>)
9000d6d8:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d6da:	4e22      	ldr	r6, [pc, #136]	; (9000d764 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d6dc:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000d6de:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d6e0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d6e2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d6e6:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000d6ea:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d6ee:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d6f2:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000d6f6:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000d6fa:	f7ff ff81 	bl	9000d600 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d6fe:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000d700:	f7ff feac 	bl	9000d45c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d704:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000d708:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000d70c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000d710:	f7ff fe90 	bl	9000d434 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d714:	f001 fdea 	bl	9000f2ec <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d718:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d71a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d71c:	3301      	adds	r3, #1
9000d71e:	d008      	beq.n	9000d732 <xPortStartScheduler+0x10a>
9000d720:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d724:	f383 8811 	msr	BASEPRI, r3
9000d728:	f3bf 8f6f 	isb	sy
9000d72c:	f3bf 8f4f 	dsb	sy
9000d730:	e7fe      	b.n	9000d730 <xPortStartScheduler+0x108>
9000d732:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d736:	f383 8811 	msr	BASEPRI, r3
9000d73a:	f3bf 8f6f 	isb	sy
9000d73e:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d742:	9b03      	ldr	r3, [sp, #12]
9000d744:	2b00      	cmp	r3, #0
9000d746:	d0fc      	beq.n	9000d742 <xPortStartScheduler+0x11a>
}
9000d748:	2000      	movs	r0, #0
9000d74a:	b004      	add	sp, #16
9000d74c:	bd70      	pop	{r4, r5, r6, pc}
9000d74e:	bf00      	nop
9000d750:	410fc271 	.word	0x410fc271
9000d754:	410fc270 	.word	0x410fc270
9000d758:	e000e400 	.word	0xe000e400
9000d75c:	24022ef0 	.word	0x24022ef0
9000d760:	24022ef4 	.word	0x24022ef4
9000d764:	24000070 	.word	0x24000070

9000d768 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d768:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d76c:	2b0f      	cmp	r3, #15
9000d76e:	d90e      	bls.n	9000d78e <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d770:	4911      	ldr	r1, [pc, #68]	; (9000d7b8 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d772:	4a12      	ldr	r2, [pc, #72]	; (9000d7bc <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d774:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d776:	7812      	ldrb	r2, [r2, #0]
9000d778:	429a      	cmp	r2, r3
9000d77a:	d908      	bls.n	9000d78e <vPortValidateInterruptPriority+0x26>
9000d77c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d780:	f383 8811 	msr	BASEPRI, r3
9000d784:	f3bf 8f6f 	isb	sy
9000d788:	f3bf 8f4f 	dsb	sy
9000d78c:	e7fe      	b.n	9000d78c <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d78e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d792:	4a0b      	ldr	r2, [pc, #44]	; (9000d7c0 <vPortValidateInterruptPriority+0x58>)
9000d794:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000d798:	6812      	ldr	r2, [r2, #0]
9000d79a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000d79e:	4293      	cmp	r3, r2
9000d7a0:	d908      	bls.n	9000d7b4 <vPortValidateInterruptPriority+0x4c>
9000d7a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d7a6:	f383 8811 	msr	BASEPRI, r3
9000d7aa:	f3bf 8f6f 	isb	sy
9000d7ae:	f3bf 8f4f 	dsb	sy
9000d7b2:	e7fe      	b.n	9000d7b2 <vPortValidateInterruptPriority+0x4a>
	}
9000d7b4:	4770      	bx	lr
9000d7b6:	bf00      	nop
9000d7b8:	e000e3f0 	.word	0xe000e3f0
9000d7bc:	24022ef0 	.word	0x24022ef0
9000d7c0:	24022ef4 	.word	0x24022ef4

9000d7c4 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d7c4:	b570      	push	{r4, r5, r6, lr}
9000d7c6:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d7c8:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000d7ca:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d7cc:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d7ce:	b92a      	cbnz	r2, 9000d7dc <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d7d0:	6805      	ldr	r5, [r0, #0]
9000d7d2:	b365      	cbz	r5, 9000d82e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d7d4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d7d6:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d7d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000d7da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d7dc:	b97d      	cbnz	r5, 9000d7fe <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d7de:	6840      	ldr	r0, [r0, #4]
9000d7e0:	f019 f817 	bl	90026812 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d7e4:	6863      	ldr	r3, [r4, #4]
9000d7e6:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d7e8:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d7ea:	68a2      	ldr	r2, [r4, #8]
9000d7ec:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d7ee:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d7f0:	d319      	bcc.n	9000d826 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d7f2:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d7f4:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d7f6:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d7f8:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d7fa:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d7fc:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000d7fe:	68c0      	ldr	r0, [r0, #12]
9000d800:	f019 f807 	bl	90026812 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d804:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d806:	68e3      	ldr	r3, [r4, #12]
9000d808:	4251      	negs	r1, r2
9000d80a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d80c:	6822      	ldr	r2, [r4, #0]
9000d80e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d810:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d812:	d202      	bcs.n	9000d81a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000d814:	68a3      	ldr	r3, [r4, #8]
9000d816:	440b      	add	r3, r1
9000d818:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000d81a:	2d02      	cmp	r5, #2
9000d81c:	d00d      	beq.n	9000d83a <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d81e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d820:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d822:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d824:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d826:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d828:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d82a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d82c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d82e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d830:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d832:	f001 ff43 	bl	9000f6bc <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000d836:	60a5      	str	r5, [r4, #8]
9000d838:	e7ce      	b.n	9000d7d8 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d83a:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000d83c:	f04f 0000 	mov.w	r0, #0
9000d840:	bf38      	it	cc
9000d842:	2601      	movcc	r6, #1
9000d844:	e7c8      	b.n	9000d7d8 <prvCopyDataToQueue+0x14>
9000d846:	bf00      	nop

9000d848 <xQueueGenericCreateStatic>:
	{
9000d848:	b530      	push	{r4, r5, lr}
9000d84a:	b083      	sub	sp, #12
9000d84c:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d850:	b940      	cbnz	r0, 9000d864 <xQueueGenericCreateStatic+0x1c>
9000d852:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d856:	f383 8811 	msr	BASEPRI, r3
9000d85a:	f3bf 8f6f 	isb	sy
9000d85e:	f3bf 8f4f 	dsb	sy
9000d862:	e7fe      	b.n	9000d862 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000d864:	461d      	mov	r5, r3
9000d866:	b153      	cbz	r3, 9000d87e <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000d868:	b30a      	cbz	r2, 9000d8ae <xQueueGenericCreateStatic+0x66>
9000d86a:	b989      	cbnz	r1, 9000d890 <xQueueGenericCreateStatic+0x48>
9000d86c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d870:	f383 8811 	msr	BASEPRI, r3
9000d874:	f3bf 8f6f 	isb	sy
9000d878:	f3bf 8f4f 	dsb	sy
9000d87c:	e7fe      	b.n	9000d87c <xQueueGenericCreateStatic+0x34>
9000d87e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d882:	f383 8811 	msr	BASEPRI, r3
9000d886:	f3bf 8f6f 	isb	sy
9000d88a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d88e:	e7fe      	b.n	9000d88e <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d890:	b16a      	cbz	r2, 9000d8ae <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d892:	2350      	movs	r3, #80	; 0x50
9000d894:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d896:	9b01      	ldr	r3, [sp, #4]
9000d898:	2b50      	cmp	r3, #80	; 0x50
9000d89a:	d013      	beq.n	9000d8c4 <xQueueGenericCreateStatic+0x7c>
9000d89c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8a0:	f383 8811 	msr	BASEPRI, r3
9000d8a4:	f3bf 8f6f 	isb	sy
9000d8a8:	f3bf 8f4f 	dsb	sy
9000d8ac:	e7fe      	b.n	9000d8ac <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000d8ae:	2900      	cmp	r1, #0
9000d8b0:	d0ef      	beq.n	9000d892 <xQueueGenericCreateStatic+0x4a>
9000d8b2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8b6:	f383 8811 	msr	BASEPRI, r3
9000d8ba:	f3bf 8f6f 	isb	sy
9000d8be:	f3bf 8f4f 	dsb	sy
9000d8c2:	e7fe      	b.n	9000d8c2 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000d8c4:	2900      	cmp	r1, #0
9000d8c6:	bf08      	it	eq
9000d8c8:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000d8ca:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000d8cc:	6429      	str	r1, [r5, #64]	; 0x40
9000d8ce:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000d8d0:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d8d2:	2201      	movs	r2, #1
9000d8d4:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000d8d8:	f7ff fe14 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8dc:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d8de:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d8e0:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d8e2:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8e4:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000d8e8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8ec:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8ee:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8f0:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8f2:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000d8f4:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d8f6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d8fa:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000d8fc:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d900:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d904:	f7ff fd4a 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d908:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000d90c:	f7ff fd46 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000d910:	f7ff fe1a 	bl	9000d548 <vPortExitCritical>
	}
9000d914:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000d916:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000d91a:	b003      	add	sp, #12
9000d91c:	bd30      	pop	{r4, r5, pc}
9000d91e:	bf00      	nop

9000d920 <xQueueGenericCreate>:
	{
9000d920:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d922:	b940      	cbnz	r0, 9000d936 <xQueueGenericCreate+0x16>
9000d924:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d928:	f383 8811 	msr	BASEPRI, r3
9000d92c:	f3bf 8f6f 	isb	sy
9000d930:	f3bf 8f4f 	dsb	sy
9000d934:	e7fe      	b.n	9000d934 <xQueueGenericCreate+0x14>
9000d936:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000d938:	fb01 f000 	mul.w	r0, r1, r0
9000d93c:	460e      	mov	r6, r1
9000d93e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000d940:	3050      	adds	r0, #80	; 0x50
9000d942:	f7ff fc09 	bl	9000d158 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000d946:	4604      	mov	r4, r0
9000d948:	b340      	cbz	r0, 9000d99c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000d94a:	2300      	movs	r3, #0
9000d94c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000d950:	b336      	cbz	r6, 9000d9a0 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d952:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000d956:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000d958:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000d95c:	f7ff fdd2 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d960:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d962:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000d966:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d968:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000d96c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d970:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d972:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d974:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d976:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d978:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000d97a:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000d97c:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000d97e:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000d980:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000d984:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000d988:	f7ff fd08 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000d98c:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000d990:	f7ff fd04 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000d994:	f7ff fdd8 	bl	9000d548 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000d998:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000d99c:	4620      	mov	r0, r4
9000d99e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000d9a0:	4603      	mov	r3, r0
9000d9a2:	e7d8      	b.n	9000d956 <xQueueGenericCreate+0x36>

9000d9a4 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000d9a4:	b940      	cbnz	r0, 9000d9b8 <xQueueCreateCountingSemaphoreStatic+0x14>
9000d9a6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9aa:	f383 8811 	msr	BASEPRI, r3
9000d9ae:	f3bf 8f6f 	isb	sy
9000d9b2:	f3bf 8f4f 	dsb	sy
9000d9b6:	e7fe      	b.n	9000d9b6 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000d9b8:	4288      	cmp	r0, r1
9000d9ba:	d208      	bcs.n	9000d9ce <xQueueCreateCountingSemaphoreStatic+0x2a>
9000d9bc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9c0:	f383 8811 	msr	BASEPRI, r3
9000d9c4:	f3bf 8f6f 	isb	sy
9000d9c8:	f3bf 8f4f 	dsb	sy
9000d9cc:	e7fe      	b.n	9000d9cc <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000d9ce:	b530      	push	{r4, r5, lr}
9000d9d0:	4615      	mov	r5, r2
9000d9d2:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000d9d4:	2a00      	cmp	r2, #0
9000d9d6:	d03d      	beq.n	9000da54 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000d9d8:	2350      	movs	r3, #80	; 0x50
9000d9da:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000d9dc:	9b03      	ldr	r3, [sp, #12]
9000d9de:	2b50      	cmp	r3, #80	; 0x50
9000d9e0:	d008      	beq.n	9000d9f4 <xQueueCreateCountingSemaphoreStatic+0x50>
9000d9e2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9e6:	f383 8811 	msr	BASEPRI, r3
9000d9ea:	f3bf 8f6f 	isb	sy
9000d9ee:	f3bf 8f4f 	dsb	sy
9000d9f2:	e7fe      	b.n	9000d9f2 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000d9f4:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d9f6:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000d9f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000d9fa:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000d9fc:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000da00:	6414      	str	r4, [r2, #64]	; 0x40
9000da02:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000da04:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000da06:	f7ff fd7d 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da0a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000da0c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000da0e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da10:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000da14:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da18:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da1c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da1e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da20:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000da22:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da24:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da28:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000da2c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000da30:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da34:	f7ff fcb2 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000da38:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000da3c:	f7ff fcae 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000da40:	f7ff fd82 	bl	9000d548 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000da44:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000da46:	9901      	ldr	r1, [sp, #4]
	}
9000da48:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000da4a:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000da4e:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000da50:	b005      	add	sp, #20
9000da52:	bd30      	pop	{r4, r5, pc}
9000da54:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da58:	f383 8811 	msr	BASEPRI, r3
9000da5c:	f3bf 8f6f 	isb	sy
9000da60:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000da64:	e7fe      	b.n	9000da64 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000da66:	bf00      	nop

9000da68 <xQueueCreateCountingSemaphore>:
	{
9000da68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000da6a:	b940      	cbnz	r0, 9000da7e <xQueueCreateCountingSemaphore+0x16>
9000da6c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da70:	f383 8811 	msr	BASEPRI, r3
9000da74:	f3bf 8f6f 	isb	sy
9000da78:	f3bf 8f4f 	dsb	sy
9000da7c:	e7fe      	b.n	9000da7c <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000da7e:	4288      	cmp	r0, r1
9000da80:	4604      	mov	r4, r0
9000da82:	460e      	mov	r6, r1
9000da84:	d208      	bcs.n	9000da98 <xQueueCreateCountingSemaphore+0x30>
9000da86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da8a:	f383 8811 	msr	BASEPRI, r3
9000da8e:	f3bf 8f6f 	isb	sy
9000da92:	f3bf 8f4f 	dsb	sy
9000da96:	e7fe      	b.n	9000da96 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000da98:	2050      	movs	r0, #80	; 0x50
9000da9a:	f7ff fb5d 	bl	9000d158 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000da9e:	4605      	mov	r5, r0
9000daa0:	b330      	cbz	r0, 9000daf0 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000daa2:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000daa4:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000daa6:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000daa8:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000daac:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000daae:	f7ff fd29 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dab2:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dab4:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dab6:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000daba:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dabc:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000dac0:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dac4:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dac6:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dac8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000daca:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dacc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dace:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dad0:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dad4:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dad8:	f7ff fc60 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dadc:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000dae0:	f7ff fc5c 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000dae4:	f7ff fd30 	bl	9000d548 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dae8:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000daea:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000daec:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000daf0:	4628      	mov	r0, r5
9000daf2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000daf4 <xQueueGenericSend>:
{
9000daf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000daf8:	b084      	sub	sp, #16
9000dafa:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000dafc:	2800      	cmp	r0, #0
9000dafe:	f000 8103 	beq.w	9000dd08 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000db02:	4688      	mov	r8, r1
9000db04:	4604      	mov	r4, r0
9000db06:	461f      	mov	r7, r3
9000db08:	2900      	cmp	r1, #0
9000db0a:	f000 8097 	beq.w	9000dc3c <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000db0e:	2f02      	cmp	r7, #2
9000db10:	d10b      	bne.n	9000db2a <xQueueGenericSend+0x36>
9000db12:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000db14:	2b01      	cmp	r3, #1
9000db16:	d008      	beq.n	9000db2a <xQueueGenericSend+0x36>
9000db18:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db1c:	f383 8811 	msr	BASEPRI, r3
9000db20:	f3bf 8f6f 	isb	sy
9000db24:	f3bf 8f4f 	dsb	sy
9000db28:	e7fe      	b.n	9000db28 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000db2a:	f001 fd71 	bl	9000f610 <xTaskGetSchedulerState>
9000db2e:	2800      	cmp	r0, #0
9000db30:	f000 80f3 	beq.w	9000dd1a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000db34:	f1a7 0902 	sub.w	r9, r7, #2
9000db38:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000db3a:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000db3e:	fab9 f989 	clz	r9, r9
9000db42:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000db46:	f7ff fcdd 	bl	9000d504 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000db4a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000db4c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000db4e:	429a      	cmp	r2, r3
9000db50:	f0c0 80f0 	bcc.w	9000dd34 <xQueueGenericSend+0x240>
9000db54:	f1b9 0f00 	cmp.w	r9, #0
9000db58:	f040 80ec 	bne.w	9000dd34 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000db5c:	9b01      	ldr	r3, [sp, #4]
9000db5e:	2b00      	cmp	r3, #0
9000db60:	f000 8101 	beq.w	9000dd66 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000db64:	2d00      	cmp	r5, #0
9000db66:	f000 80cb 	beq.w	9000dd00 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000db6a:	f7ff fced 	bl	9000d548 <vPortExitCritical>
		vTaskSuspendAll();
9000db6e:	f001 fb79 	bl	9000f264 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000db72:	f7ff fcc7 	bl	9000d504 <vPortEnterCritical>
9000db76:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000db7a:	2bff      	cmp	r3, #255	; 0xff
9000db7c:	d102      	bne.n	9000db84 <xQueueGenericSend+0x90>
9000db7e:	2300      	movs	r3, #0
9000db80:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000db84:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000db88:	2bff      	cmp	r3, #255	; 0xff
9000db8a:	d102      	bne.n	9000db92 <xQueueGenericSend+0x9e>
9000db8c:	2300      	movs	r3, #0
9000db8e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000db92:	f7ff fcd9 	bl	9000d548 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000db96:	a901      	add	r1, sp, #4
9000db98:	a802      	add	r0, sp, #8
9000db9a:	f001 fce5 	bl	9000f568 <xTaskCheckForTimeOut>
9000db9e:	2800      	cmp	r0, #0
9000dba0:	f040 80e5 	bne.w	9000dd6e <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000dba4:	f7ff fcae 	bl	9000d504 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000dba8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000dbaa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dbac:	429a      	cmp	r2, r3
9000dbae:	d052      	beq.n	9000dc56 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000dbb0:	f7ff fcca 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dbb4:	f7ff fca6 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dbb8:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000dbbc:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dbbe:	2d00      	cmp	r5, #0
9000dbc0:	dc04      	bgt.n	9000dbcc <xQueueGenericSend+0xd8>
9000dbc2:	e011      	b.n	9000dbe8 <xQueueGenericSend+0xf4>
			--cTxLock;
9000dbc4:	1e6a      	subs	r2, r5, #1
9000dbc6:	b2d3      	uxtb	r3, r2
9000dbc8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dbca:	b16b      	cbz	r3, 9000dbe8 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dbcc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dbce:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dbd0:	b153      	cbz	r3, 9000dbe8 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dbd2:	f001 fc73 	bl	9000f4bc <xTaskRemoveFromEventList>
9000dbd6:	2800      	cmp	r0, #0
9000dbd8:	d0f4      	beq.n	9000dbc4 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000dbda:	f001 fd0d 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000dbde:	1e6a      	subs	r2, r5, #1
9000dbe0:	b2d3      	uxtb	r3, r2
9000dbe2:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dbe4:	2b00      	cmp	r3, #0
9000dbe6:	d1f1      	bne.n	9000dbcc <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000dbe8:	23ff      	movs	r3, #255	; 0xff
9000dbea:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dbee:	f7ff fcab 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dbf2:	f7ff fc87 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dbf6:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000dbfa:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dbfc:	2d00      	cmp	r5, #0
9000dbfe:	dd14      	ble.n	9000dc2a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dc00:	f104 0a10 	add.w	sl, r4, #16
9000dc04:	e003      	b.n	9000dc0e <xQueueGenericSend+0x11a>
				--cRxLock;
9000dc06:	1e6a      	subs	r2, r5, #1
9000dc08:	b2d3      	uxtb	r3, r2
9000dc0a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dc0c:	b16b      	cbz	r3, 9000dc2a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dc0e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dc10:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dc12:	b153      	cbz	r3, 9000dc2a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dc14:	f001 fc52 	bl	9000f4bc <xTaskRemoveFromEventList>
9000dc18:	2800      	cmp	r0, #0
9000dc1a:	d0f4      	beq.n	9000dc06 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000dc1c:	f001 fcec 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000dc20:	1e6a      	subs	r2, r5, #1
9000dc22:	b2d3      	uxtb	r3, r2
9000dc24:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dc26:	2b00      	cmp	r3, #0
9000dc28:	d1f1      	bne.n	9000dc0e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000dc2a:	23ff      	movs	r3, #255	; 0xff
9000dc2c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000dc30:	f7ff fc8a 	bl	9000d548 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000dc34:	f001 fb1e 	bl	9000f274 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dc38:	2501      	movs	r5, #1
9000dc3a:	e784      	b.n	9000db46 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dc3c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000dc3e:	2b00      	cmp	r3, #0
9000dc40:	f43f af65 	beq.w	9000db0e <xQueueGenericSend+0x1a>
9000dc44:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc48:	f383 8811 	msr	BASEPRI, r3
9000dc4c:	f3bf 8f6f 	isb	sy
9000dc50:	f3bf 8f4f 	dsb	sy
9000dc54:	e7fe      	b.n	9000dc54 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000dc56:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000dc5a:	f7ff fc75 	bl	9000d548 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000dc5e:	9901      	ldr	r1, [sp, #4]
9000dc60:	4650      	mov	r0, sl
9000dc62:	f001 fb9d 	bl	9000f3a0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000dc66:	f7ff fc4d 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dc6a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dc6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dc70:	2d00      	cmp	r5, #0
9000dc72:	dc04      	bgt.n	9000dc7e <xQueueGenericSend+0x18a>
9000dc74:	e011      	b.n	9000dc9a <xQueueGenericSend+0x1a6>
			--cTxLock;
9000dc76:	1e6b      	subs	r3, r5, #1
9000dc78:	b2da      	uxtb	r2, r3
9000dc7a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dc7c:	b16a      	cbz	r2, 9000dc9a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dc7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dc80:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dc82:	b153      	cbz	r3, 9000dc9a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dc84:	f001 fc1a 	bl	9000f4bc <xTaskRemoveFromEventList>
9000dc88:	2800      	cmp	r0, #0
9000dc8a:	d0f4      	beq.n	9000dc76 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000dc8c:	f001 fcb4 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000dc90:	1e6b      	subs	r3, r5, #1
9000dc92:	b2da      	uxtb	r2, r3
9000dc94:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dc96:	2a00      	cmp	r2, #0
9000dc98:	d1f1      	bne.n	9000dc7e <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000dc9a:	23ff      	movs	r3, #255	; 0xff
9000dc9c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dca0:	f7ff fc52 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dca4:	f7ff fc2e 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dca8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dcac:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dcae:	2d00      	cmp	r5, #0
9000dcb0:	dc04      	bgt.n	9000dcbc <xQueueGenericSend+0x1c8>
9000dcb2:	e011      	b.n	9000dcd8 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000dcb4:	1e6b      	subs	r3, r5, #1
9000dcb6:	b2da      	uxtb	r2, r3
9000dcb8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dcba:	b16a      	cbz	r2, 9000dcd8 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dcbc:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dcbe:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dcc0:	b153      	cbz	r3, 9000dcd8 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dcc2:	f001 fbfb 	bl	9000f4bc <xTaskRemoveFromEventList>
9000dcc6:	2800      	cmp	r0, #0
9000dcc8:	d0f4      	beq.n	9000dcb4 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000dcca:	f001 fc95 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000dcce:	1e6b      	subs	r3, r5, #1
9000dcd0:	b2da      	uxtb	r2, r3
9000dcd2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dcd4:	2a00      	cmp	r2, #0
9000dcd6:	d1f1      	bne.n	9000dcbc <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000dcd8:	23ff      	movs	r3, #255	; 0xff
9000dcda:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000dcde:	f7ff fc33 	bl	9000d548 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000dce2:	f001 fac7 	bl	9000f274 <xTaskResumeAll>
9000dce6:	2800      	cmp	r0, #0
9000dce8:	d1a6      	bne.n	9000dc38 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000dcea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000dcee:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000dcf2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000dcf6:	f3bf 8f4f 	dsb	sy
9000dcfa:	f3bf 8f6f 	isb	sy
9000dcfe:	e79b      	b.n	9000dc38 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000dd00:	a802      	add	r0, sp, #8
9000dd02:	f001 fc25 	bl	9000f550 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000dd06:	e730      	b.n	9000db6a <xQueueGenericSend+0x76>
9000dd08:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd0c:	f383 8811 	msr	BASEPRI, r3
9000dd10:	f3bf 8f6f 	isb	sy
9000dd14:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000dd18:	e7fe      	b.n	9000dd18 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dd1a:	9b01      	ldr	r3, [sp, #4]
9000dd1c:	2b00      	cmp	r3, #0
9000dd1e:	f43f af09 	beq.w	9000db34 <xQueueGenericSend+0x40>
9000dd22:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dd26:	f383 8811 	msr	BASEPRI, r3
9000dd2a:	f3bf 8f6f 	isb	sy
9000dd2e:	f3bf 8f4f 	dsb	sy
9000dd32:	e7fe      	b.n	9000dd32 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dd34:	463a      	mov	r2, r7
9000dd36:	4641      	mov	r1, r8
9000dd38:	4620      	mov	r0, r4
9000dd3a:	f7ff fd43 	bl	9000d7c4 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000dd40:	2b00      	cmp	r3, #0
9000dd42:	d152      	bne.n	9000ddea <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000dd44:	b148      	cbz	r0, 9000dd5a <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000dd46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000dd4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000dd4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000dd52:	f3bf 8f4f 	dsb	sy
9000dd56:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000dd5a:	f7ff fbf5 	bl	9000d548 <vPortExitCritical>
				return pdPASS;
9000dd5e:	2001      	movs	r0, #1
}
9000dd60:	b004      	add	sp, #16
9000dd62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000dd66:	f7ff fbef 	bl	9000d548 <vPortExitCritical>
					return errQUEUE_FULL;
9000dd6a:	4648      	mov	r0, r9
9000dd6c:	e7f8      	b.n	9000dd60 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000dd6e:	f7ff fbc9 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dd72:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dd76:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd78:	2d00      	cmp	r5, #0
9000dd7a:	dd10      	ble.n	9000dd9e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd7c:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000dd80:	e003      	b.n	9000dd8a <xQueueGenericSend+0x296>
			--cTxLock;
9000dd82:	1e6b      	subs	r3, r5, #1
9000dd84:	b2da      	uxtb	r2, r3
9000dd86:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd88:	b14a      	cbz	r2, 9000dd9e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd8c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd8e:	b133      	cbz	r3, 9000dd9e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd90:	f001 fb94 	bl	9000f4bc <xTaskRemoveFromEventList>
9000dd94:	2800      	cmp	r0, #0
9000dd96:	d0f4      	beq.n	9000dd82 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000dd98:	f001 fc2e 	bl	9000f5f8 <vTaskMissedYield>
9000dd9c:	e7f1      	b.n	9000dd82 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000dd9e:	23ff      	movs	r3, #255	; 0xff
9000dda0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dda4:	f7ff fbd0 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dda8:	f7ff fbac 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ddac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000ddb0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ddb2:	2d00      	cmp	r5, #0
9000ddb4:	dd10      	ble.n	9000ddd8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ddb6:	f104 0610 	add.w	r6, r4, #16
9000ddba:	e003      	b.n	9000ddc4 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000ddbc:	1e6b      	subs	r3, r5, #1
9000ddbe:	b2da      	uxtb	r2, r3
9000ddc0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ddc2:	b14a      	cbz	r2, 9000ddd8 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ddc4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ddc6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ddc8:	b133      	cbz	r3, 9000ddd8 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ddca:	f001 fb77 	bl	9000f4bc <xTaskRemoveFromEventList>
9000ddce:	2800      	cmp	r0, #0
9000ddd0:	d0f4      	beq.n	9000ddbc <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000ddd2:	f001 fc11 	bl	9000f5f8 <vTaskMissedYield>
9000ddd6:	e7f1      	b.n	9000ddbc <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000ddd8:	23ff      	movs	r3, #255	; 0xff
9000ddda:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000ddde:	f7ff fbb3 	bl	9000d548 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000dde2:	f001 fa47 	bl	9000f274 <xTaskResumeAll>
			return errQUEUE_FULL;
9000dde6:	2000      	movs	r0, #0
9000dde8:	e7ba      	b.n	9000dd60 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddea:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000ddee:	f001 fb65 	bl	9000f4bc <xTaskRemoveFromEventList>
9000ddf2:	2800      	cmp	r0, #0
9000ddf4:	d0b1      	beq.n	9000dd5a <xQueueGenericSend+0x266>
9000ddf6:	e7a6      	b.n	9000dd46 <xQueueGenericSend+0x252>

9000ddf8 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000ddf8:	b179      	cbz	r1, 9000de1a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000ddfa:	2350      	movs	r3, #80	; 0x50
	{
9000ddfc:	b570      	push	{r4, r5, r6, lr}
9000ddfe:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000de00:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000de02:	9b01      	ldr	r3, [sp, #4]
9000de04:	2b50      	cmp	r3, #80	; 0x50
9000de06:	d011      	beq.n	9000de2c <xQueueCreateMutexStatic+0x34>
9000de08:	f04f 0350 	mov.w	r3, #80	; 0x50
9000de0c:	f383 8811 	msr	BASEPRI, r3
9000de10:	f3bf 8f6f 	isb	sy
9000de14:	f3bf 8f4f 	dsb	sy
9000de18:	e7fe      	b.n	9000de18 <xQueueCreateMutexStatic+0x20>
9000de1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000de1e:	f383 8811 	msr	BASEPRI, r3
9000de22:	f3bf 8f6f 	isb	sy
9000de26:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000de2a:	e7fe      	b.n	9000de2a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000de2c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de2e:	2301      	movs	r3, #1
9000de30:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000de32:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de34:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000de38:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000de3a:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000de3c:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000de40:	f7ff fb60 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de44:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000de46:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000de48:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000de4a:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000de4c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000de50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de54:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000de58:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de5c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de5e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de60:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de62:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de66:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de6a:	f7ff fa97 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000de6e:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000de72:	f7ff fa93 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000de76:	f7ff fb67 	bl	9000d548 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000de7a:	4633      	mov	r3, r6
9000de7c:	4632      	mov	r2, r6
9000de7e:	4631      	mov	r1, r6
9000de80:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000de82:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000de86:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000de88:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000de8a:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000de8c:	f7ff fe32 	bl	9000daf4 <xQueueGenericSend>
	}
9000de90:	4620      	mov	r0, r4
9000de92:	b002      	add	sp, #8
9000de94:	bd70      	pop	{r4, r5, r6, pc}
9000de96:	bf00      	nop

9000de98 <xQueueGiveMutexRecursive>:
	{
9000de98:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000de9a:	b138      	cbz	r0, 9000deac <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000de9c:	6885      	ldr	r5, [r0, #8]
9000de9e:	4604      	mov	r4, r0
9000dea0:	f001 fbb0 	bl	9000f604 <xTaskGetCurrentTaskHandle>
9000dea4:	4285      	cmp	r5, r0
9000dea6:	d00a      	beq.n	9000debe <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000dea8:	2000      	movs	r0, #0
	}
9000deaa:	bd38      	pop	{r3, r4, r5, pc}
9000deac:	f04f 0350 	mov.w	r3, #80	; 0x50
9000deb0:	f383 8811 	msr	BASEPRI, r3
9000deb4:	f3bf 8f6f 	isb	sy
9000deb8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000debc:	e7fe      	b.n	9000debc <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000debe:	68e3      	ldr	r3, [r4, #12]
9000dec0:	3b01      	subs	r3, #1
9000dec2:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000dec4:	b10b      	cbz	r3, 9000deca <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000dec6:	2001      	movs	r0, #1
	}
9000dec8:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000deca:	461a      	mov	r2, r3
9000decc:	4619      	mov	r1, r3
9000dece:	4620      	mov	r0, r4
9000ded0:	f7ff fe10 	bl	9000daf4 <xQueueGenericSend>
			xReturn = pdPASS;
9000ded4:	2001      	movs	r0, #1
	}
9000ded6:	bd38      	pop	{r3, r4, r5, pc}

9000ded8 <xQueueCreateMutex>:
	{
9000ded8:	b570      	push	{r4, r5, r6, lr}
9000deda:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dedc:	2050      	movs	r0, #80	; 0x50
9000dede:	f7ff f93b 	bl	9000d158 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dee2:	4604      	mov	r4, r0
9000dee4:	b370      	cbz	r0, 9000df44 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dee6:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000dee8:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000deea:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000deec:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000def0:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000def4:	f7ff fb06 	bl	9000d504 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000def8:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000defa:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000defc:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000df00:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df02:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000df06:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df0a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df0c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df0e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000df10:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df12:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000df16:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000df1a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000df1e:	f7ff fa3d 	bl	9000d39c <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000df22:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000df26:	f7ff fa39 	bl	9000d39c <vListInitialise>
	taskEXIT_CRITICAL();
9000df2a:	f7ff fb0d 	bl	9000d548 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000df2e:	4633      	mov	r3, r6
9000df30:	4632      	mov	r2, r6
9000df32:	4631      	mov	r1, r6
9000df34:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000df36:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000df3a:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000df3c:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000df3e:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000df40:	f7ff fdd8 	bl	9000daf4 <xQueueGenericSend>
	}
9000df44:	4620      	mov	r0, r4
9000df46:	bd70      	pop	{r4, r5, r6, pc}

9000df48 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000df48:	2800      	cmp	r0, #0
9000df4a:	d04e      	beq.n	9000dfea <xQueueGenericSendFromISR+0xa2>
{
9000df4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000df50:	460e      	mov	r6, r1
9000df52:	4604      	mov	r4, r0
9000df54:	4617      	mov	r7, r2
9000df56:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df58:	b339      	cbz	r1, 9000dfaa <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000df5a:	2d02      	cmp	r5, #2
9000df5c:	d10b      	bne.n	9000df76 <xQueueGenericSendFromISR+0x2e>
9000df5e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000df60:	2b01      	cmp	r3, #1
9000df62:	d008      	beq.n	9000df76 <xQueueGenericSendFromISR+0x2e>
9000df64:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df68:	f383 8811 	msr	BASEPRI, r3
9000df6c:	f3bf 8f6f 	isb	sy
9000df70:	f3bf 8f4f 	dsb	sy
9000df74:	e7fe      	b.n	9000df74 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000df76:	f7ff fbf7 	bl	9000d768 <vPortValidateInterruptPriority>
	__asm volatile
9000df7a:	f3ef 8811 	mrs	r8, BASEPRI
9000df7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df82:	f383 8811 	msr	BASEPRI, r3
9000df86:	f3bf 8f6f 	isb	sy
9000df8a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000df8e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000df90:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000df92:	429a      	cmp	r2, r3
9000df94:	d315      	bcc.n	9000dfc2 <xQueueGenericSendFromISR+0x7a>
9000df96:	f1a5 0002 	sub.w	r0, r5, #2
9000df9a:	fab0 f080 	clz	r0, r0
9000df9e:	0940      	lsrs	r0, r0, #5
9000dfa0:	b978      	cbnz	r0, 9000dfc2 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000dfa2:	f388 8811 	msr	BASEPRI, r8
}
9000dfa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dfaa:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000dfac:	2b00      	cmp	r3, #0
9000dfae:	d0d4      	beq.n	9000df5a <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000dfb0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dfb4:	f383 8811 	msr	BASEPRI, r3
9000dfb8:	f3bf 8f6f 	isb	sy
9000dfbc:	f3bf 8f4f 	dsb	sy
9000dfc0:	e7fe      	b.n	9000dfc0 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfc2:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000dfc4:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfc8:	4631      	mov	r1, r6
9000dfca:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000dfcc:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dfce:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dfd0:	f7ff fbf8 	bl	9000d7c4 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000dfd4:	1c6b      	adds	r3, r5, #1
9000dfd6:	d011      	beq.n	9000dffc <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dfd8:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000dfda:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000dfdc:	b25b      	sxtb	r3, r3
9000dfde:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000dfe2:	f388 8811 	msr	BASEPRI, r8
}
9000dfe6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000dfea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dfee:	f383 8811 	msr	BASEPRI, r3
9000dff2:	f3bf 8f6f 	isb	sy
9000dff6:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000dffa:	e7fe      	b.n	9000dffa <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dffc:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000dffe:	b90b      	cbnz	r3, 9000e004 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000e000:	2001      	movs	r0, #1
9000e002:	e7ce      	b.n	9000dfa2 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e004:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e008:	f001 fa58 	bl	9000f4bc <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e00c:	2800      	cmp	r0, #0
9000e00e:	d0f7      	beq.n	9000e000 <xQueueGenericSendFromISR+0xb8>
9000e010:	2f00      	cmp	r7, #0
9000e012:	d0f5      	beq.n	9000e000 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e014:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e016:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e018:	603b      	str	r3, [r7, #0]
9000e01a:	e7c2      	b.n	9000dfa2 <xQueueGenericSendFromISR+0x5a>

9000e01c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e01c:	b360      	cbz	r0, 9000e078 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e01e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000e020:	b570      	push	{r4, r5, r6, lr}
9000e022:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e024:	b143      	cbz	r3, 9000e038 <xQueueGiveFromISR+0x1c>
9000e026:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e02a:	f383 8811 	msr	BASEPRI, r3
9000e02e:	f3bf 8f6f 	isb	sy
9000e032:	f3bf 8f4f 	dsb	sy
9000e036:	e7fe      	b.n	9000e036 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e038:	6803      	ldr	r3, [r0, #0]
9000e03a:	460d      	mov	r5, r1
9000e03c:	b32b      	cbz	r3, 9000e08a <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e03e:	f7ff fb93 	bl	9000d768 <vPortValidateInterruptPriority>
	__asm volatile
9000e042:	f3ef 8611 	mrs	r6, BASEPRI
9000e046:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e04a:	f383 8811 	msr	BASEPRI, r3
9000e04e:	f3bf 8f6f 	isb	sy
9000e052:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e056:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e058:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000e05a:	429a      	cmp	r2, r3
9000e05c:	d921      	bls.n	9000e0a2 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e05e:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e062:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e064:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e066:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e068:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e06a:	d01e      	beq.n	9000e0aa <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e06c:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000e06e:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e070:	b25b      	sxtb	r3, r3
9000e072:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e076:	e015      	b.n	9000e0a4 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e078:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e07c:	f383 8811 	msr	BASEPRI, r3
9000e080:	f3bf 8f6f 	isb	sy
9000e084:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e088:	e7fe      	b.n	9000e088 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e08a:	6883      	ldr	r3, [r0, #8]
9000e08c:	2b00      	cmp	r3, #0
9000e08e:	d0d6      	beq.n	9000e03e <xQueueGiveFromISR+0x22>
9000e090:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e094:	f383 8811 	msr	BASEPRI, r3
9000e098:	f3bf 8f6f 	isb	sy
9000e09c:	f3bf 8f4f 	dsb	sy
9000e0a0:	e7fe      	b.n	9000e0a0 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e0a2:	2000      	movs	r0, #0
	__asm volatile
9000e0a4:	f386 8811 	msr	BASEPRI, r6
}
9000e0a8:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e0aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000e0ac:	b90b      	cbnz	r3, 9000e0b2 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000e0ae:	2001      	movs	r0, #1
9000e0b0:	e7f8      	b.n	9000e0a4 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e0b2:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e0b6:	f001 fa01 	bl	9000f4bc <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e0ba:	2d00      	cmp	r5, #0
9000e0bc:	d0f7      	beq.n	9000e0ae <xQueueGiveFromISR+0x92>
9000e0be:	2800      	cmp	r0, #0
9000e0c0:	d0f5      	beq.n	9000e0ae <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e0c2:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e0c4:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e0c6:	602b      	str	r3, [r5, #0]
9000e0c8:	e7ec      	b.n	9000e0a4 <xQueueGiveFromISR+0x88>
9000e0ca:	bf00      	nop

9000e0cc <xQueueReceive>:
{
9000e0cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e0d0:	b085      	sub	sp, #20
9000e0d2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e0d4:	2800      	cmp	r0, #0
9000e0d6:	f000 815c 	beq.w	9000e392 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e0da:	460f      	mov	r7, r1
9000e0dc:	4604      	mov	r4, r0
9000e0de:	2900      	cmp	r1, #0
9000e0e0:	d079      	beq.n	9000e1d6 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e0e2:	f001 fa95 	bl	9000f610 <xTaskGetSchedulerState>
9000e0e6:	2800      	cmp	r0, #0
9000e0e8:	f000 8081 	beq.w	9000e1ee <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000e0ec:	f7ff fa0a 	bl	9000d504 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e0f0:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e0f2:	2d00      	cmp	r5, #0
9000e0f4:	f040 8138 	bne.w	9000e368 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e0f8:	9b01      	ldr	r3, [sp, #4]
9000e0fa:	2b00      	cmp	r3, #0
9000e0fc:	f000 80d5 	beq.w	9000e2aa <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000e100:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e102:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e106:	a802      	add	r0, sp, #8
9000e108:	f001 fa22 	bl	9000f550 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e10c:	f7ff fa1c 	bl	9000d548 <vPortExitCritical>
		vTaskSuspendAll();
9000e110:	f001 f8a8 	bl	9000f264 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e114:	f7ff f9f6 	bl	9000d504 <vPortEnterCritical>
9000e118:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e11c:	2bff      	cmp	r3, #255	; 0xff
9000e11e:	d101      	bne.n	9000e124 <xQueueReceive+0x58>
9000e120:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000e124:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e128:	2bff      	cmp	r3, #255	; 0xff
9000e12a:	d101      	bne.n	9000e130 <xQueueReceive+0x64>
9000e12c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000e130:	f7ff fa0a 	bl	9000d548 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e134:	a901      	add	r1, sp, #4
9000e136:	a802      	add	r0, sp, #8
9000e138:	f001 fa16 	bl	9000f568 <xTaskCheckForTimeOut>
9000e13c:	2800      	cmp	r0, #0
9000e13e:	d163      	bne.n	9000e208 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000e140:	f7ff f9e0 	bl	9000d504 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e144:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e146:	2b00      	cmp	r3, #0
9000e148:	f000 80b5 	beq.w	9000e2b6 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000e14c:	f7ff f9fc 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e150:	f7ff f9d8 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e154:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e158:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e15a:	2d00      	cmp	r5, #0
9000e15c:	dc04      	bgt.n	9000e168 <xQueueReceive+0x9c>
9000e15e:	e011      	b.n	9000e184 <xQueueReceive+0xb8>
			--cTxLock;
9000e160:	1e6b      	subs	r3, r5, #1
9000e162:	b2da      	uxtb	r2, r3
9000e164:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e166:	b16a      	cbz	r2, 9000e184 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e168:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e16a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e16c:	b153      	cbz	r3, 9000e184 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e16e:	f001 f9a5 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e172:	2800      	cmp	r0, #0
9000e174:	d0f4      	beq.n	9000e160 <xQueueReceive+0x94>
						vTaskMissedYield();
9000e176:	f001 fa3f 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000e17a:	1e6b      	subs	r3, r5, #1
9000e17c:	b2da      	uxtb	r2, r3
9000e17e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e180:	2a00      	cmp	r2, #0
9000e182:	d1f1      	bne.n	9000e168 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000e184:	23ff      	movs	r3, #255	; 0xff
9000e186:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e18a:	f7ff f9dd 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e18e:	f7ff f9b9 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e192:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e196:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e198:	2d00      	cmp	r5, #0
9000e19a:	dd14      	ble.n	9000e1c6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e19c:	f104 0910 	add.w	r9, r4, #16
9000e1a0:	e003      	b.n	9000e1aa <xQueueReceive+0xde>
				--cRxLock;
9000e1a2:	1e6b      	subs	r3, r5, #1
9000e1a4:	b2da      	uxtb	r2, r3
9000e1a6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1a8:	b16a      	cbz	r2, 9000e1c6 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1aa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1ac:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e1ae:	b153      	cbz	r3, 9000e1c6 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e1b0:	f001 f984 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e1b4:	2800      	cmp	r0, #0
9000e1b6:	d0f4      	beq.n	9000e1a2 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000e1b8:	f001 fa1e 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000e1bc:	1e6b      	subs	r3, r5, #1
9000e1be:	b2da      	uxtb	r2, r3
9000e1c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e1c2:	2a00      	cmp	r2, #0
9000e1c4:	d1f1      	bne.n	9000e1aa <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000e1c6:	23ff      	movs	r3, #255	; 0xff
9000e1c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e1cc:	f7ff f9bc 	bl	9000d548 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e1d0:	f001 f850 	bl	9000f274 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e1d4:	e060      	b.n	9000e298 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e1d6:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e1d8:	2b00      	cmp	r3, #0
9000e1da:	d082      	beq.n	9000e0e2 <xQueueReceive+0x16>
	__asm volatile
9000e1dc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1e0:	f383 8811 	msr	BASEPRI, r3
9000e1e4:	f3bf 8f6f 	isb	sy
9000e1e8:	f3bf 8f4f 	dsb	sy
9000e1ec:	e7fe      	b.n	9000e1ec <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e1ee:	9b01      	ldr	r3, [sp, #4]
9000e1f0:	2b00      	cmp	r3, #0
9000e1f2:	f43f af7b 	beq.w	9000e0ec <xQueueReceive+0x20>
9000e1f6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1fa:	f383 8811 	msr	BASEPRI, r3
9000e1fe:	f3bf 8f6f 	isb	sy
9000e202:	f3bf 8f4f 	dsb	sy
9000e206:	e7fe      	b.n	9000e206 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000e208:	f7ff f97c 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e20c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e210:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e212:	2d00      	cmp	r5, #0
9000e214:	dc04      	bgt.n	9000e220 <xQueueReceive+0x154>
9000e216:	e011      	b.n	9000e23c <xQueueReceive+0x170>
			--cTxLock;
9000e218:	1e6b      	subs	r3, r5, #1
9000e21a:	b2da      	uxtb	r2, r3
9000e21c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e21e:	b16a      	cbz	r2, 9000e23c <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e220:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e222:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e224:	b153      	cbz	r3, 9000e23c <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e226:	f001 f949 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e22a:	2800      	cmp	r0, #0
9000e22c:	d0f4      	beq.n	9000e218 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000e22e:	f001 f9e3 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000e232:	1e6b      	subs	r3, r5, #1
9000e234:	b2da      	uxtb	r2, r3
9000e236:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e238:	2a00      	cmp	r2, #0
9000e23a:	d1f1      	bne.n	9000e220 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000e23c:	23ff      	movs	r3, #255	; 0xff
9000e23e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e242:	f7ff f981 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e246:	f7ff f95d 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e24a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e24e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e250:	2d00      	cmp	r5, #0
9000e252:	dd14      	ble.n	9000e27e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e254:	f104 0910 	add.w	r9, r4, #16
9000e258:	e003      	b.n	9000e262 <xQueueReceive+0x196>
				--cRxLock;
9000e25a:	1e6b      	subs	r3, r5, #1
9000e25c:	b2da      	uxtb	r2, r3
9000e25e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e260:	b16a      	cbz	r2, 9000e27e <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e262:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e264:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e266:	b153      	cbz	r3, 9000e27e <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e268:	f001 f928 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e26c:	2800      	cmp	r0, #0
9000e26e:	d0f4      	beq.n	9000e25a <xQueueReceive+0x18e>
					vTaskMissedYield();
9000e270:	f001 f9c2 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000e274:	1e6b      	subs	r3, r5, #1
9000e276:	b2da      	uxtb	r2, r3
9000e278:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e27a:	2a00      	cmp	r2, #0
9000e27c:	d1f1      	bne.n	9000e262 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000e27e:	23ff      	movs	r3, #255	; 0xff
9000e280:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e284:	f7ff f960 	bl	9000d548 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e288:	f000 fff4 	bl	9000f274 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e28c:	f7ff f93a 	bl	9000d504 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e290:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e292:	b153      	cbz	r3, 9000e2aa <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000e294:	f7ff f958 	bl	9000d548 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e298:	f7ff f934 	bl	9000d504 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e29c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e29e:	2d00      	cmp	r5, #0
9000e2a0:	d162      	bne.n	9000e368 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e2a2:	9b01      	ldr	r3, [sp, #4]
9000e2a4:	2b00      	cmp	r3, #0
9000e2a6:	f47f af31 	bne.w	9000e10c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e2aa:	f7ff f94d 	bl	9000d548 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e2ae:	2000      	movs	r0, #0
}
9000e2b0:	b005      	add	sp, #20
9000e2b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000e2b6:	f7ff f947 	bl	9000d548 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e2ba:	9901      	ldr	r1, [sp, #4]
9000e2bc:	4630      	mov	r0, r6
9000e2be:	f001 f86f 	bl	9000f3a0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e2c2:	f7ff f91f 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e2c6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e2ca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2cc:	2d00      	cmp	r5, #0
9000e2ce:	dc04      	bgt.n	9000e2da <xQueueReceive+0x20e>
9000e2d0:	e011      	b.n	9000e2f6 <xQueueReceive+0x22a>
			--cTxLock;
9000e2d2:	1e6b      	subs	r3, r5, #1
9000e2d4:	b2da      	uxtb	r2, r3
9000e2d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2d8:	b16a      	cbz	r2, 9000e2f6 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2da:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2dc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2de:	b153      	cbz	r3, 9000e2f6 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2e0:	f001 f8ec 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e2e4:	2800      	cmp	r0, #0
9000e2e6:	d0f4      	beq.n	9000e2d2 <xQueueReceive+0x206>
						vTaskMissedYield();
9000e2e8:	f001 f986 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000e2ec:	1e6b      	subs	r3, r5, #1
9000e2ee:	b2da      	uxtb	r2, r3
9000e2f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2f2:	2a00      	cmp	r2, #0
9000e2f4:	d1f1      	bne.n	9000e2da <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e2f6:	23ff      	movs	r3, #255	; 0xff
9000e2f8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e2fc:	f7ff f924 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e300:	f7ff f900 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e304:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e308:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e30a:	2d00      	cmp	r5, #0
9000e30c:	dd14      	ble.n	9000e338 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e30e:	f104 0910 	add.w	r9, r4, #16
9000e312:	e003      	b.n	9000e31c <xQueueReceive+0x250>
				--cRxLock;
9000e314:	1e6b      	subs	r3, r5, #1
9000e316:	b2da      	uxtb	r2, r3
9000e318:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e31a:	b16a      	cbz	r2, 9000e338 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e31c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e31e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e320:	b153      	cbz	r3, 9000e338 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e322:	f001 f8cb 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e326:	2800      	cmp	r0, #0
9000e328:	d0f4      	beq.n	9000e314 <xQueueReceive+0x248>
					vTaskMissedYield();
9000e32a:	f001 f965 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000e32e:	1e6b      	subs	r3, r5, #1
9000e330:	b2da      	uxtb	r2, r3
9000e332:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e334:	2a00      	cmp	r2, #0
9000e336:	d1f1      	bne.n	9000e31c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000e338:	23ff      	movs	r3, #255	; 0xff
9000e33a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e33e:	f7ff f903 	bl	9000d548 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e342:	f000 ff97 	bl	9000f274 <xTaskResumeAll>
9000e346:	2800      	cmp	r0, #0
9000e348:	d1a6      	bne.n	9000e298 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000e34a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e34e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e352:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e356:	f3bf 8f4f 	dsb	sy
9000e35a:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e35e:	f7ff f8d1 	bl	9000d504 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e362:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e364:	2d00      	cmp	r5, #0
9000e366:	d09c      	beq.n	9000e2a2 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e368:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e36a:	b152      	cbz	r2, 9000e382 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e36c:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e36e:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e370:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e372:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e374:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e376:	d301      	bcc.n	9000e37c <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e378:	6821      	ldr	r1, [r4, #0]
9000e37a:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e37c:	4638      	mov	r0, r7
9000e37e:	f018 fa48 	bl	90026812 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e382:	3d01      	subs	r5, #1
9000e384:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e386:	6923      	ldr	r3, [r4, #16]
9000e388:	b963      	cbnz	r3, 9000e3a4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e38a:	f7ff f8dd 	bl	9000d548 <vPortExitCritical>
				return pdPASS;
9000e38e:	2001      	movs	r0, #1
9000e390:	e78e      	b.n	9000e2b0 <xQueueReceive+0x1e4>
9000e392:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e396:	f383 8811 	msr	BASEPRI, r3
9000e39a:	f3bf 8f6f 	isb	sy
9000e39e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e3a2:	e7fe      	b.n	9000e3a2 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3a4:	f104 0010 	add.w	r0, r4, #16
9000e3a8:	f001 f888 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e3ac:	2800      	cmp	r0, #0
9000e3ae:	d0ec      	beq.n	9000e38a <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000e3b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e3b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e3b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e3bc:	f3bf 8f4f 	dsb	sy
9000e3c0:	f3bf 8f6f 	isb	sy
9000e3c4:	e7e1      	b.n	9000e38a <xQueueReceive+0x2be>
9000e3c6:	bf00      	nop

9000e3c8 <xQueueSemaphoreTake>:
{
9000e3c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e3cc:	b084      	sub	sp, #16
9000e3ce:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e3d0:	2800      	cmp	r0, #0
9000e3d2:	d05c      	beq.n	9000e48e <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e3d4:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000e3d6:	4604      	mov	r4, r0
9000e3d8:	b147      	cbz	r7, 9000e3ec <xQueueSemaphoreTake+0x24>
9000e3da:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e3de:	f383 8811 	msr	BASEPRI, r3
9000e3e2:	f3bf 8f6f 	isb	sy
9000e3e6:	f3bf 8f4f 	dsb	sy
9000e3ea:	e7fe      	b.n	9000e3ea <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e3ec:	f001 f910 	bl	9000f610 <xTaskGetSchedulerState>
9000e3f0:	4605      	mov	r5, r0
9000e3f2:	2800      	cmp	r0, #0
9000e3f4:	d054      	beq.n	9000e4a0 <xQueueSemaphoreTake+0xd8>
9000e3f6:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e3f8:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000e3fc:	f7ff f882 	bl	9000d504 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e400:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e402:	2b00      	cmp	r3, #0
9000e404:	f040 8149 	bne.w	9000e69a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e408:	9b01      	ldr	r3, [sp, #4]
9000e40a:	2b00      	cmp	r3, #0
9000e40c:	f000 813a 	beq.w	9000e684 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000e410:	2d00      	cmp	r5, #0
9000e412:	f000 809d 	beq.w	9000e550 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000e416:	f7ff f897 	bl	9000d548 <vPortExitCritical>
		vTaskSuspendAll();
9000e41a:	f000 ff23 	bl	9000f264 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e41e:	f7ff f871 	bl	9000d504 <vPortEnterCritical>
9000e422:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e426:	2bff      	cmp	r3, #255	; 0xff
9000e428:	d102      	bne.n	9000e430 <xQueueSemaphoreTake+0x68>
9000e42a:	2300      	movs	r3, #0
9000e42c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000e430:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e434:	2bff      	cmp	r3, #255	; 0xff
9000e436:	d102      	bne.n	9000e43e <xQueueSemaphoreTake+0x76>
9000e438:	2300      	movs	r3, #0
9000e43a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e43e:	f7ff f883 	bl	9000d548 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e442:	a901      	add	r1, sp, #4
9000e444:	a802      	add	r0, sp, #8
9000e446:	f001 f88f 	bl	9000f568 <xTaskCheckForTimeOut>
9000e44a:	2800      	cmp	r0, #0
9000e44c:	d135      	bne.n	9000e4ba <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000e44e:	f7ff f859 	bl	9000d504 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e452:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e454:	2b00      	cmp	r3, #0
9000e456:	f000 80a4 	beq.w	9000e5a2 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000e45a:	f7ff f875 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e45e:	f7ff f851 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e462:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e466:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e468:	2d00      	cmp	r5, #0
9000e46a:	dc05      	bgt.n	9000e478 <xQueueSemaphoreTake+0xb0>
9000e46c:	e074      	b.n	9000e558 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000e46e:	1e6b      	subs	r3, r5, #1
9000e470:	b2da      	uxtb	r2, r3
9000e472:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e474:	2a00      	cmp	r2, #0
9000e476:	d06f      	beq.n	9000e558 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e478:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e47a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e47c:	2b00      	cmp	r3, #0
9000e47e:	d06b      	beq.n	9000e558 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e480:	f001 f81c 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e484:	2800      	cmp	r0, #0
9000e486:	d0f2      	beq.n	9000e46e <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000e488:	f001 f8b6 	bl	9000f5f8 <vTaskMissedYield>
9000e48c:	e7ef      	b.n	9000e46e <xQueueSemaphoreTake+0xa6>
9000e48e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e492:	f383 8811 	msr	BASEPRI, r3
9000e496:	f3bf 8f6f 	isb	sy
9000e49a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e49e:	e7fe      	b.n	9000e49e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e4a0:	9b01      	ldr	r3, [sp, #4]
9000e4a2:	2b00      	cmp	r3, #0
9000e4a4:	f000 80d4 	beq.w	9000e650 <xQueueSemaphoreTake+0x288>
9000e4a8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e4ac:	f383 8811 	msr	BASEPRI, r3
9000e4b0:	f3bf 8f6f 	isb	sy
9000e4b4:	f3bf 8f4f 	dsb	sy
9000e4b8:	e7fe      	b.n	9000e4b8 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000e4ba:	f7ff f823 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e4be:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e4c2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4c4:	2d00      	cmp	r5, #0
9000e4c6:	dc04      	bgt.n	9000e4d2 <xQueueSemaphoreTake+0x10a>
9000e4c8:	e011      	b.n	9000e4ee <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000e4ca:	1e6b      	subs	r3, r5, #1
9000e4cc:	b2da      	uxtb	r2, r3
9000e4ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4d0:	b16a      	cbz	r2, 9000e4ee <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4d4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e4d6:	b153      	cbz	r3, 9000e4ee <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e4d8:	f000 fff0 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e4dc:	2800      	cmp	r0, #0
9000e4de:	d0f4      	beq.n	9000e4ca <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000e4e0:	f001 f88a 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000e4e4:	1e6b      	subs	r3, r5, #1
9000e4e6:	b2da      	uxtb	r2, r3
9000e4e8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e4ea:	2a00      	cmp	r2, #0
9000e4ec:	d1f1      	bne.n	9000e4d2 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e4ee:	23ff      	movs	r3, #255	; 0xff
9000e4f0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e4f4:	f7ff f828 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e4f8:	f7ff f804 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e4fc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e500:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e502:	2d00      	cmp	r5, #0
9000e504:	dd14      	ble.n	9000e530 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e506:	f104 0810 	add.w	r8, r4, #16
9000e50a:	e003      	b.n	9000e514 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000e50c:	1e6b      	subs	r3, r5, #1
9000e50e:	b2da      	uxtb	r2, r3
9000e510:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e512:	b16a      	cbz	r2, 9000e530 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e514:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e516:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e518:	b153      	cbz	r3, 9000e530 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e51a:	f000 ffcf 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e51e:	2800      	cmp	r0, #0
9000e520:	d0f4      	beq.n	9000e50c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000e522:	f001 f869 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000e526:	1e6b      	subs	r3, r5, #1
9000e528:	b2da      	uxtb	r2, r3
9000e52a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e52c:	2a00      	cmp	r2, #0
9000e52e:	d1f1      	bne.n	9000e514 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000e530:	23ff      	movs	r3, #255	; 0xff
9000e532:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e536:	f7ff f807 	bl	9000d548 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e53a:	f000 fe9b 	bl	9000f274 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e53e:	f7fe ffe1 	bl	9000d504 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e542:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e544:	2b00      	cmp	r3, #0
9000e546:	d07c      	beq.n	9000e642 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000e548:	f7fe fffe 	bl	9000d548 <vPortExitCritical>
	return xReturn;
9000e54c:	2501      	movs	r5, #1
9000e54e:	e755      	b.n	9000e3fc <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e550:	a802      	add	r0, sp, #8
9000e552:	f000 fffd 	bl	9000f550 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e556:	e75e      	b.n	9000e416 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e558:	23ff      	movs	r3, #255	; 0xff
9000e55a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e55e:	f7fe fff3 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e562:	f7fe ffcf 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e566:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e56a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e56c:	2d00      	cmp	r5, #0
9000e56e:	dd10      	ble.n	9000e592 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e570:	f104 0810 	add.w	r8, r4, #16
9000e574:	e003      	b.n	9000e57e <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000e576:	1e6b      	subs	r3, r5, #1
9000e578:	b2da      	uxtb	r2, r3
9000e57a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e57c:	b14a      	cbz	r2, 9000e592 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e57e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e580:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e582:	b133      	cbz	r3, 9000e592 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e584:	f000 ff9a 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e588:	2800      	cmp	r0, #0
9000e58a:	d0f4      	beq.n	9000e576 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000e58c:	f001 f834 	bl	9000f5f8 <vTaskMissedYield>
9000e590:	e7f1      	b.n	9000e576 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000e592:	23ff      	movs	r3, #255	; 0xff
9000e594:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e598:	f7fe ffd6 	bl	9000d548 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e59c:	f000 fe6a 	bl	9000f274 <xTaskResumeAll>
9000e5a0:	e7d4      	b.n	9000e54c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e5a2:	f7fe ffd1 	bl	9000d548 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e5a6:	6823      	ldr	r3, [r4, #0]
9000e5a8:	2b00      	cmp	r3, #0
9000e5aa:	d062      	beq.n	9000e672 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e5ac:	9901      	ldr	r1, [sp, #4]
9000e5ae:	4630      	mov	r0, r6
9000e5b0:	f000 fef6 	bl	9000f3a0 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e5b4:	f7fe ffa6 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e5bc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5be:	2d00      	cmp	r5, #0
9000e5c0:	dc04      	bgt.n	9000e5cc <xQueueSemaphoreTake+0x204>
9000e5c2:	e00d      	b.n	9000e5e0 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000e5c4:	1e6b      	subs	r3, r5, #1
9000e5c6:	b2da      	uxtb	r2, r3
9000e5c8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5ca:	b14a      	cbz	r2, 9000e5e0 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5ce:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5d0:	b133      	cbz	r3, 9000e5e0 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5d2:	f000 ff73 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e5d6:	2800      	cmp	r0, #0
9000e5d8:	d0f4      	beq.n	9000e5c4 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000e5da:	f001 f80d 	bl	9000f5f8 <vTaskMissedYield>
9000e5de:	e7f1      	b.n	9000e5c4 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000e5e0:	23ff      	movs	r3, #255	; 0xff
9000e5e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e5e6:	f7fe ffaf 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e5ea:	f7fe ff8b 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e5ee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e5f2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e5f4:	2d00      	cmp	r5, #0
9000e5f6:	dd10      	ble.n	9000e61a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e5f8:	f104 0810 	add.w	r8, r4, #16
9000e5fc:	e003      	b.n	9000e606 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000e5fe:	1e6b      	subs	r3, r5, #1
9000e600:	b2da      	uxtb	r2, r3
9000e602:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e604:	b14a      	cbz	r2, 9000e61a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e606:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e608:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e60a:	b133      	cbz	r3, 9000e61a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e60c:	f000 ff56 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e610:	2800      	cmp	r0, #0
9000e612:	d0f4      	beq.n	9000e5fe <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000e614:	f000 fff0 	bl	9000f5f8 <vTaskMissedYield>
9000e618:	e7f1      	b.n	9000e5fe <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000e61a:	23ff      	movs	r3, #255	; 0xff
9000e61c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e620:	f7fe ff92 	bl	9000d548 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e624:	f000 fe26 	bl	9000f274 <xTaskResumeAll>
9000e628:	2800      	cmp	r0, #0
9000e62a:	d18f      	bne.n	9000e54c <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000e62c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e630:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e634:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e638:	f3bf 8f4f 	dsb	sy
9000e63c:	f3bf 8f6f 	isb	sy
9000e640:	e784      	b.n	9000e54c <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e642:	f7fe ff81 	bl	9000d548 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e646:	b92f      	cbnz	r7, 9000e654 <xQueueSemaphoreTake+0x28c>
}
9000e648:	4638      	mov	r0, r7
9000e64a:	b004      	add	sp, #16
9000e64c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e650:	4607      	mov	r7, r0
9000e652:	e6d1      	b.n	9000e3f8 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e654:	f7fe ff56 	bl	9000d504 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e658:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000e65a:	b119      	cbz	r1, 9000e664 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e65c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e65e:	6819      	ldr	r1, [r3, #0]
9000e660:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e664:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000e666:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e668:	f001 f86e 	bl	9000f748 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e66c:	f7fe ff6c 	bl	9000d548 <vPortExitCritical>
9000e670:	e7ea      	b.n	9000e648 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000e672:	f7fe ff47 	bl	9000d504 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e676:	68a0      	ldr	r0, [r4, #8]
9000e678:	f000 ffda 	bl	9000f630 <xTaskPriorityInherit>
9000e67c:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e67e:	f7fe ff63 	bl	9000d548 <vPortExitCritical>
9000e682:	e793      	b.n	9000e5ac <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e684:	2f00      	cmp	r7, #0
9000e686:	d0f1      	beq.n	9000e66c <xQueueSemaphoreTake+0x2a4>
9000e688:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e68c:	f383 8811 	msr	BASEPRI, r3
9000e690:	f3bf 8f6f 	isb	sy
9000e694:	f3bf 8f4f 	dsb	sy
9000e698:	e7fe      	b.n	9000e698 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e69a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e69c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e69e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e6a0:	b12a      	cbz	r2, 9000e6ae <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6a2:	6923      	ldr	r3, [r4, #16]
9000e6a4:	b93b      	cbnz	r3, 9000e6b6 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000e6a6:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000e6a8:	f7fe ff4e 	bl	9000d548 <vPortExitCritical>
				return pdPASS;
9000e6ac:	e7cc      	b.n	9000e648 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e6ae:	f001 f89f 	bl	9000f7f0 <pvTaskIncrementMutexHeldCount>
9000e6b2:	60a0      	str	r0, [r4, #8]
9000e6b4:	e7f5      	b.n	9000e6a2 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6b6:	f104 0010 	add.w	r0, r4, #16
9000e6ba:	f000 feff 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e6be:	2800      	cmp	r0, #0
9000e6c0:	d0f1      	beq.n	9000e6a6 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000e6c2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e6c6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e6ca:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e6ce:	f3bf 8f4f 	dsb	sy
9000e6d2:	f3bf 8f6f 	isb	sy
9000e6d6:	e7e6      	b.n	9000e6a6 <xQueueSemaphoreTake+0x2de>

9000e6d8 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000e6d8:	b1a8      	cbz	r0, 9000e706 <xQueueTakeMutexRecursive+0x2e>
	{
9000e6da:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e6dc:	6886      	ldr	r6, [r0, #8]
9000e6de:	4604      	mov	r4, r0
9000e6e0:	460d      	mov	r5, r1
9000e6e2:	f000 ff8f 	bl	9000f604 <xTaskGetCurrentTaskHandle>
9000e6e6:	4286      	cmp	r6, r0
9000e6e8:	d008      	beq.n	9000e6fc <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000e6ea:	4629      	mov	r1, r5
9000e6ec:	4620      	mov	r0, r4
9000e6ee:	f7ff fe6b 	bl	9000e3c8 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000e6f2:	b110      	cbz	r0, 9000e6fa <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e6f4:	68e3      	ldr	r3, [r4, #12]
9000e6f6:	3301      	adds	r3, #1
9000e6f8:	60e3      	str	r3, [r4, #12]
	}
9000e6fa:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e6fc:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000e6fe:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e700:	4403      	add	r3, r0
9000e702:	60e3      	str	r3, [r4, #12]
	}
9000e704:	bd70      	pop	{r4, r5, r6, pc}
9000e706:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e70a:	f383 8811 	msr	BASEPRI, r3
9000e70e:	f3bf 8f6f 	isb	sy
9000e712:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e716:	e7fe      	b.n	9000e716 <xQueueTakeMutexRecursive+0x3e>

9000e718 <xQueueReceiveFromISR>:
{
9000e718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e71c:	b310      	cbz	r0, 9000e764 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e71e:	460e      	mov	r6, r1
9000e720:	4604      	mov	r4, r0
9000e722:	4617      	mov	r7, r2
9000e724:	b191      	cbz	r1, 9000e74c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e726:	f7ff f81f 	bl	9000d768 <vPortValidateInterruptPriority>
	__asm volatile
9000e72a:	f3ef 8911 	mrs	r9, BASEPRI
9000e72e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e732:	f383 8811 	msr	BASEPRI, r3
9000e736:	f3bf 8f6f 	isb	sy
9000e73a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e73e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e740:	b9cd      	cbnz	r5, 9000e776 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e742:	4628      	mov	r0, r5
	__asm volatile
9000e744:	f389 8811 	msr	BASEPRI, r9
}
9000e748:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e74c:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e74e:	2b00      	cmp	r3, #0
9000e750:	d0e9      	beq.n	9000e726 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e752:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e756:	f383 8811 	msr	BASEPRI, r3
9000e75a:	f3bf 8f6f 	isb	sy
9000e75e:	f3bf 8f4f 	dsb	sy
9000e762:	e7fe      	b.n	9000e762 <xQueueReceiveFromISR+0x4a>
9000e764:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e768:	f383 8811 	msr	BASEPRI, r3
9000e76c:	f3bf 8f6f 	isb	sy
9000e770:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e774:	e7fe      	b.n	9000e774 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e776:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e77a:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e77c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e780:	b142      	cbz	r2, 9000e794 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e782:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e784:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e786:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e788:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e78a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e78c:	d215      	bcs.n	9000e7ba <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e78e:	4630      	mov	r0, r6
9000e790:	f018 f83f 	bl	90026812 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e794:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e796:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e79a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000e79c:	d009      	beq.n	9000e7b2 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e79e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000e7a2:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e7a4:	b25b      	sxtb	r3, r3
9000e7a6:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000e7aa:	f389 8811 	msr	BASEPRI, r9
}
9000e7ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e7b2:	6923      	ldr	r3, [r4, #16]
9000e7b4:	b923      	cbnz	r3, 9000e7c0 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000e7b6:	2001      	movs	r0, #1
9000e7b8:	e7c4      	b.n	9000e744 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e7ba:	6821      	ldr	r1, [r4, #0]
9000e7bc:	60e1      	str	r1, [r4, #12]
9000e7be:	e7e6      	b.n	9000e78e <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e7c0:	f104 0010 	add.w	r0, r4, #16
9000e7c4:	f000 fe7a 	bl	9000f4bc <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e7c8:	2f00      	cmp	r7, #0
9000e7ca:	d0f4      	beq.n	9000e7b6 <xQueueReceiveFromISR+0x9e>
9000e7cc:	2800      	cmp	r0, #0
9000e7ce:	d0f2      	beq.n	9000e7b6 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e7d0:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e7d2:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e7d4:	603b      	str	r3, [r7, #0]
9000e7d6:	e7b5      	b.n	9000e744 <xQueueReceiveFromISR+0x2c>

9000e7d8 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
9000e7d8:	b158      	cbz	r0, 9000e7f2 <uxQueueMessagesWaiting+0x1a>
{
9000e7da:	b510      	push	{r4, lr}
9000e7dc:	4604      	mov	r4, r0
9000e7de:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
9000e7e0:	f7fe fe90 	bl	9000d504 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
9000e7e4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9000e7e6:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000e7e8:	f7fe feae 	bl	9000d548 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e7ec:	9801      	ldr	r0, [sp, #4]
9000e7ee:	b002      	add	sp, #8
9000e7f0:	bd10      	pop	{r4, pc}
	__asm volatile
9000e7f2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7f6:	f383 8811 	msr	BASEPRI, r3
9000e7fa:	f3bf 8f6f 	isb	sy
9000e7fe:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
9000e802:	e7fe      	b.n	9000e802 <uxQueueMessagesWaiting+0x2a>

9000e804 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
9000e804:	b108      	cbz	r0, 9000e80a <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
9000e806:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e808:	4770      	bx	lr
9000e80a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e80e:	f383 8811 	msr	BASEPRI, r3
9000e812:	f3bf 8f6f 	isb	sy
9000e816:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e81a:	e7fe      	b.n	9000e81a <uxQueueMessagesWaitingFromISR+0x16>
9000e81c:	0000      	movs	r0, r0
	...

9000e820 <vQueueDelete>:
	configASSERT( pxQueue );
9000e820:	b1e0      	cbz	r0, 9000e85c <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000e822:	4b21      	ldr	r3, [pc, #132]	; (9000e8a8 <vQueueDelete+0x88>)
9000e824:	685a      	ldr	r2, [r3, #4]
9000e826:	4290      	cmp	r0, r2
9000e828:	d02b      	beq.n	9000e882 <vQueueDelete+0x62>
9000e82a:	68da      	ldr	r2, [r3, #12]
9000e82c:	4290      	cmp	r0, r2
9000e82e:	d02a      	beq.n	9000e886 <vQueueDelete+0x66>
9000e830:	695a      	ldr	r2, [r3, #20]
9000e832:	4290      	cmp	r0, r2
9000e834:	d029      	beq.n	9000e88a <vQueueDelete+0x6a>
9000e836:	69da      	ldr	r2, [r3, #28]
9000e838:	4290      	cmp	r0, r2
9000e83a:	d028      	beq.n	9000e88e <vQueueDelete+0x6e>
9000e83c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000e83e:	4290      	cmp	r0, r2
9000e840:	d027      	beq.n	9000e892 <vQueueDelete+0x72>
9000e842:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000e844:	4290      	cmp	r0, r2
9000e846:	d014      	beq.n	9000e872 <vQueueDelete+0x52>
9000e848:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000e84a:	4290      	cmp	r0, r2
9000e84c:	d023      	beq.n	9000e896 <vQueueDelete+0x76>
9000e84e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000e850:	4290      	cmp	r0, r2
9000e852:	d022      	beq.n	9000e89a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e854:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000e858:	b14b      	cbz	r3, 9000e86e <vQueueDelete+0x4e>
}
9000e85a:	4770      	bx	lr
9000e85c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e860:	f383 8811 	msr	BASEPRI, r3
9000e864:	f3bf 8f6f 	isb	sy
9000e868:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e86c:	e7fe      	b.n	9000e86c <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e86e:	f7fe bd31 	b.w	9000d2d4 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e872:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e874:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e878:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000e8a0 <vQueueDelete+0x80>
9000e87c:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e880:	e7e8      	b.n	9000e854 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e882:	2200      	movs	r2, #0
9000e884:	e7f6      	b.n	9000e874 <vQueueDelete+0x54>
9000e886:	2201      	movs	r2, #1
9000e888:	e7f4      	b.n	9000e874 <vQueueDelete+0x54>
9000e88a:	2202      	movs	r2, #2
9000e88c:	e7f2      	b.n	9000e874 <vQueueDelete+0x54>
9000e88e:	2203      	movs	r2, #3
9000e890:	e7f0      	b.n	9000e874 <vQueueDelete+0x54>
9000e892:	2204      	movs	r2, #4
9000e894:	e7ee      	b.n	9000e874 <vQueueDelete+0x54>
9000e896:	2206      	movs	r2, #6
9000e898:	e7ec      	b.n	9000e874 <vQueueDelete+0x54>
9000e89a:	2207      	movs	r2, #7
9000e89c:	e7ea      	b.n	9000e874 <vQueueDelete+0x54>
9000e89e:	bf00      	nop
	...
9000e8a8:	24022ef8 	.word	0x24022ef8

9000e8ac <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000e8ac:	4b12      	ldr	r3, [pc, #72]	; (9000e8f8 <vQueueAddToRegistry+0x4c>)
9000e8ae:	681a      	ldr	r2, [r3, #0]
9000e8b0:	b17a      	cbz	r2, 9000e8d2 <vQueueAddToRegistry+0x26>
9000e8b2:	689a      	ldr	r2, [r3, #8]
9000e8b4:	b162      	cbz	r2, 9000e8d0 <vQueueAddToRegistry+0x24>
9000e8b6:	691a      	ldr	r2, [r3, #16]
9000e8b8:	b192      	cbz	r2, 9000e8e0 <vQueueAddToRegistry+0x34>
9000e8ba:	699a      	ldr	r2, [r3, #24]
9000e8bc:	b192      	cbz	r2, 9000e8e4 <vQueueAddToRegistry+0x38>
9000e8be:	6a1a      	ldr	r2, [r3, #32]
9000e8c0:	b192      	cbz	r2, 9000e8e8 <vQueueAddToRegistry+0x3c>
9000e8c2:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000e8c4:	b192      	cbz	r2, 9000e8ec <vQueueAddToRegistry+0x40>
9000e8c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000e8c8:	b192      	cbz	r2, 9000e8f0 <vQueueAddToRegistry+0x44>
9000e8ca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000e8cc:	b192      	cbz	r2, 9000e8f4 <vQueueAddToRegistry+0x48>
	}
9000e8ce:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e8d0:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e8d2:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000e8d6:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000e8da:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000e8de:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e8e0:	2202      	movs	r2, #2
9000e8e2:	e7f6      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8e4:	2203      	movs	r2, #3
9000e8e6:	e7f4      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8e8:	2204      	movs	r2, #4
9000e8ea:	e7f2      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8ec:	2205      	movs	r2, #5
9000e8ee:	e7f0      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8f0:	2206      	movs	r2, #6
9000e8f2:	e7ee      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8f4:	2207      	movs	r2, #7
9000e8f6:	e7ec      	b.n	9000e8d2 <vQueueAddToRegistry+0x26>
9000e8f8:	24022ef8 	.word	0x24022ef8

9000e8fc <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000e8fc:	b570      	push	{r4, r5, r6, lr}
9000e8fe:	4605      	mov	r5, r0
9000e900:	460e      	mov	r6, r1
9000e902:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000e904:	f7fe fdfe 	bl	9000d504 <vPortEnterCritical>
9000e908:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000e90c:	2bff      	cmp	r3, #255	; 0xff
9000e90e:	d102      	bne.n	9000e916 <vQueueWaitForMessageRestricted+0x1a>
9000e910:	2300      	movs	r3, #0
9000e912:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000e916:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000e91a:	2bff      	cmp	r3, #255	; 0xff
9000e91c:	d102      	bne.n	9000e924 <vQueueWaitForMessageRestricted+0x28>
9000e91e:	2300      	movs	r3, #0
9000e920:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000e924:	f7fe fe10 	bl	9000d548 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000e928:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000e92a:	2b00      	cmp	r3, #0
9000e92c:	d043      	beq.n	9000e9b6 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000e92e:	f7fe fde9 	bl	9000d504 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e932:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000e936:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e938:	2c00      	cmp	r4, #0
9000e93a:	dd14      	ble.n	9000e966 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e93c:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000e940:	e003      	b.n	9000e94a <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000e942:	1e63      	subs	r3, r4, #1
9000e944:	b2da      	uxtb	r2, r3
9000e946:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e948:	b16a      	cbz	r2, 9000e966 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e94a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e94c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e94e:	b153      	cbz	r3, 9000e966 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e950:	f000 fdb4 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e954:	2800      	cmp	r0, #0
9000e956:	d0f4      	beq.n	9000e942 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000e958:	f000 fe4e 	bl	9000f5f8 <vTaskMissedYield>
			--cTxLock;
9000e95c:	1e63      	subs	r3, r4, #1
9000e95e:	b2da      	uxtb	r2, r3
9000e960:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e962:	2a00      	cmp	r2, #0
9000e964:	d1f1      	bne.n	9000e94a <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e966:	23ff      	movs	r3, #255	; 0xff
9000e968:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e96c:	f7fe fdec 	bl	9000d548 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e970:	f7fe fdc8 	bl	9000d504 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e974:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000e978:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e97a:	2c00      	cmp	r4, #0
9000e97c:	dd14      	ble.n	9000e9a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e97e:	f105 0610 	add.w	r6, r5, #16
9000e982:	e003      	b.n	9000e98c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000e984:	1e63      	subs	r3, r4, #1
9000e986:	b2da      	uxtb	r2, r3
9000e988:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e98a:	b16a      	cbz	r2, 9000e9a8 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e98c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e98e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e990:	b153      	cbz	r3, 9000e9a8 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e992:	f000 fd93 	bl	9000f4bc <xTaskRemoveFromEventList>
9000e996:	2800      	cmp	r0, #0
9000e998:	d0f4      	beq.n	9000e984 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000e99a:	f000 fe2d 	bl	9000f5f8 <vTaskMissedYield>
				--cRxLock;
9000e99e:	1e63      	subs	r3, r4, #1
9000e9a0:	b2da      	uxtb	r2, r3
9000e9a2:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e9a4:	2a00      	cmp	r2, #0
9000e9a6:	d1f1      	bne.n	9000e98c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000e9a8:	23ff      	movs	r3, #255	; 0xff
9000e9aa:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000e9ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000e9b2:	f7fe bdc9 	b.w	9000d548 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000e9b6:	4622      	mov	r2, r4
9000e9b8:	4631      	mov	r1, r6
9000e9ba:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000e9be:	f000 fd33 	bl	9000f428 <vTaskPlaceOnEventListRestricted>
9000e9c2:	e7b4      	b.n	9000e92e <vQueueWaitForMessageRestricted+0x32>

9000e9c4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000e9c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000e9c8:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000e9ca:	f7fe fd9b 	bl	9000d504 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000e9ce:	4a34      	ldr	r2, [pc, #208]	; (9000eaa0 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000e9d0:	4e34      	ldr	r6, [pc, #208]	; (9000eaa4 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000e9d2:	6813      	ldr	r3, [r2, #0]
9000e9d4:	3301      	adds	r3, #1
9000e9d6:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000e9d8:	6833      	ldr	r3, [r6, #0]
9000e9da:	2b00      	cmp	r3, #0
9000e9dc:	d032      	beq.n	9000ea44 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000e9de:	4c32      	ldr	r4, [pc, #200]	; (9000eaa8 <prvAddNewTaskToReadyList+0xe4>)
9000e9e0:	6823      	ldr	r3, [r4, #0]
9000e9e2:	b33b      	cbz	r3, 9000ea34 <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000e9e4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000e9e6:	4f31      	ldr	r7, [pc, #196]	; (9000eaac <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000e9e8:	4a31      	ldr	r2, [pc, #196]	; (9000eab0 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000e9ea:	4932      	ldr	r1, [pc, #200]	; (9000eab4 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000e9ec:	6813      	ldr	r3, [r2, #0]
9000e9ee:	3301      	adds	r3, #1
9000e9f0:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000e9f2:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000e9f4:	680b      	ldr	r3, [r1, #0]
9000e9f6:	4283      	cmp	r3, r0
9000e9f8:	d200      	bcs.n	9000e9fc <prvAddNewTaskToReadyList+0x38>
9000e9fa:	6008      	str	r0, [r1, #0]
9000e9fc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ea00:	1d29      	adds	r1, r5, #4
9000ea02:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000ea06:	f7fe fcd9 	bl	9000d3bc <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000ea0a:	f7fe fd9d 	bl	9000d548 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000ea0e:	6823      	ldr	r3, [r4, #0]
9000ea10:	b173      	cbz	r3, 9000ea30 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000ea12:	6832      	ldr	r2, [r6, #0]
9000ea14:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000ea16:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000ea18:	429a      	cmp	r2, r3
9000ea1a:	d209      	bcs.n	9000ea30 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000ea1c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ea20:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ea24:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ea28:	f3bf 8f4f 	dsb	sy
9000ea2c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ea30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ea34:	6833      	ldr	r3, [r6, #0]
9000ea36:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ea38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ea3a:	4f1c      	ldr	r7, [pc, #112]	; (9000eaac <prvAddNewTaskToReadyList+0xe8>)
9000ea3c:	4283      	cmp	r3, r0
9000ea3e:	d8d3      	bhi.n	9000e9e8 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ea40:	6035      	str	r5, [r6, #0]
9000ea42:	e7d1      	b.n	9000e9e8 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000ea44:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000ea46:	6813      	ldr	r3, [r2, #0]
9000ea48:	2b01      	cmp	r3, #1
9000ea4a:	d003      	beq.n	9000ea54 <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ea4c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ea4e:	4f17      	ldr	r7, [pc, #92]	; (9000eaac <prvAddNewTaskToReadyList+0xe8>)
9000ea50:	4c15      	ldr	r4, [pc, #84]	; (9000eaa8 <prvAddNewTaskToReadyList+0xe4>)
9000ea52:	e7c9      	b.n	9000e9e8 <prvAddNewTaskToReadyList+0x24>
9000ea54:	4f15      	ldr	r7, [pc, #84]	; (9000eaac <prvAddNewTaskToReadyList+0xe8>)
9000ea56:	463c      	mov	r4, r7
9000ea58:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ea5c:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ea5e:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ea60:	f7fe fc9c 	bl	9000d39c <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ea64:	45a0      	cmp	r8, r4
9000ea66:	d1f9      	bne.n	9000ea5c <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000ea68:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000eacc <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ea6c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000ead0 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000ea70:	4648      	mov	r0, r9
9000ea72:	4c0d      	ldr	r4, [pc, #52]	; (9000eaa8 <prvAddNewTaskToReadyList+0xe4>)
9000ea74:	f7fe fc92 	bl	9000d39c <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ea78:	4640      	mov	r0, r8
9000ea7a:	f7fe fc8f 	bl	9000d39c <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ea7e:	480e      	ldr	r0, [pc, #56]	; (9000eab8 <prvAddNewTaskToReadyList+0xf4>)
9000ea80:	f7fe fc8c 	bl	9000d39c <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000ea84:	480d      	ldr	r0, [pc, #52]	; (9000eabc <prvAddNewTaskToReadyList+0xf8>)
9000ea86:	f7fe fc89 	bl	9000d39c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ea8a:	480d      	ldr	r0, [pc, #52]	; (9000eac0 <prvAddNewTaskToReadyList+0xfc>)
9000ea8c:	f7fe fc86 	bl	9000d39c <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ea90:	4b0c      	ldr	r3, [pc, #48]	; (9000eac4 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ea92:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ea94:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ea98:	4b0b      	ldr	r3, [pc, #44]	; (9000eac8 <prvAddNewTaskToReadyList+0x104>)
9000ea9a:	f8c3 8000 	str.w	r8, [r3]
}
9000ea9e:	e7a3      	b.n	9000e9e8 <prvAddNewTaskToReadyList+0x24>
9000eaa0:	240233a4 	.word	0x240233a4
9000eaa4:	24022f38 	.word	0x24022f38
9000eaa8:	24023400 	.word	0x24023400
9000eaac:	24022f44 	.word	0x24022f44
9000eab0:	240233b0 	.word	0x240233b0
9000eab4:	240233b4 	.word	0x240233b4
9000eab8:	240233ec 	.word	0x240233ec
9000eabc:	24023418 	.word	0x24023418
9000eac0:	24023404 	.word	0x24023404
9000eac4:	24022f3c 	.word	0x24022f3c
9000eac8:	24022f40 	.word	0x24022f40
9000eacc:	240233b8 	.word	0x240233b8
9000ead0:	240233cc 	.word	0x240233cc

9000ead4 <prvIdleTask>:
{
9000ead4:	b580      	push	{r7, lr}
9000ead6:	4c22      	ldr	r4, [pc, #136]	; (9000eb60 <prvIdleTask+0x8c>)
				taskYIELD();
9000ead8:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000eadc:	4e21      	ldr	r6, [pc, #132]	; (9000eb64 <prvIdleTask+0x90>)
9000eade:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000eae2:	4d21      	ldr	r5, [pc, #132]	; (9000eb68 <prvIdleTask+0x94>)
9000eae4:	4f21      	ldr	r7, [pc, #132]	; (9000eb6c <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000eae6:	6823      	ldr	r3, [r4, #0]
9000eae8:	b353      	cbz	r3, 9000eb40 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000eaea:	f7fe fd0b 	bl	9000d504 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eaee:	68f3      	ldr	r3, [r6, #12]
9000eaf0:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000eaf4:	f10a 0004 	add.w	r0, sl, #4
9000eaf8:	f7fe fc88 	bl	9000d40c <uxListRemove>
				--uxCurrentNumberOfTasks;
9000eafc:	682b      	ldr	r3, [r5, #0]
9000eafe:	3b01      	subs	r3, #1
9000eb00:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000eb02:	6823      	ldr	r3, [r4, #0]
9000eb04:	3b01      	subs	r3, #1
9000eb06:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000eb08:	f7fe fd1e 	bl	9000d548 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000eb0c:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000eb10:	b163      	cbz	r3, 9000eb2c <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000eb12:	2b01      	cmp	r3, #1
9000eb14:	d020      	beq.n	9000eb58 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000eb16:	2b02      	cmp	r3, #2
9000eb18:	d0e5      	beq.n	9000eae6 <prvIdleTask+0x12>
9000eb1a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000eb1e:	f383 8811 	msr	BASEPRI, r3
9000eb22:	f3bf 8f6f 	isb	sy
9000eb26:	f3bf 8f4f 	dsb	sy
9000eb2a:	e7fe      	b.n	9000eb2a <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000eb2c:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000eb30:	f7fe fbd0 	bl	9000d2d4 <vPortFree>
				vPortFree( pxTCB );
9000eb34:	4650      	mov	r0, sl
9000eb36:	f7fe fbcd 	bl	9000d2d4 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000eb3a:	6823      	ldr	r3, [r4, #0]
9000eb3c:	2b00      	cmp	r3, #0
9000eb3e:	d1d4      	bne.n	9000eaea <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000eb40:	683b      	ldr	r3, [r7, #0]
9000eb42:	2b01      	cmp	r3, #1
9000eb44:	d905      	bls.n	9000eb52 <prvIdleTask+0x7e>
				taskYIELD();
9000eb46:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000eb4a:	f3bf 8f4f 	dsb	sy
9000eb4e:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000eb52:	f7f3 ffdd 	bl	90002b10 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000eb56:	e7c6      	b.n	9000eae6 <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000eb58:	4650      	mov	r0, sl
9000eb5a:	f7fe fbbb 	bl	9000d2d4 <vPortFree>
9000eb5e:	e7c2      	b.n	9000eae6 <prvIdleTask+0x12>
9000eb60:	240233a8 	.word	0x240233a8
9000eb64:	24023418 	.word	0x24023418
9000eb68:	240233a4 	.word	0x240233a4
9000eb6c:	24022f44 	.word	0x24022f44

9000eb70 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb70:	4b4a      	ldr	r3, [pc, #296]	; (9000ec9c <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000eb72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb76:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000eb78:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000eb7a:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000eb7c:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000eb7e:	2e00      	cmp	r6, #0
9000eb80:	d040      	beq.n	9000ec04 <xTaskIncrementTick.part.0+0x94>
9000eb82:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000ecb0 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000eb86:	f8db 3000 	ldr.w	r3, [fp]
9000eb8a:	429e      	cmp	r6, r3
9000eb8c:	d347      	bcc.n	9000ec1e <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eb8e:	4f44      	ldr	r7, [pc, #272]	; (9000eca0 <xTaskIncrementTick.part.0+0x130>)
9000eb90:	683b      	ldr	r3, [r7, #0]
9000eb92:	681d      	ldr	r5, [r3, #0]
9000eb94:	2d00      	cmp	r5, #0
9000eb96:	d077      	beq.n	9000ec88 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000eb98:	2500      	movs	r5, #0
9000eb9a:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000ecb4 <xTaskIncrementTick.part.0+0x144>
9000eb9e:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000ecb8 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000eba2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000ecbc <xTaskIncrementTick.part.0+0x14c>
9000eba6:	e022      	b.n	9000ebee <xTaskIncrementTick.part.0+0x7e>
9000eba8:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ebaa:	f7fe fc2f 	bl	9000d40c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ebae:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ebb0:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ebb4:	9901      	ldr	r1, [sp, #4]
9000ebb6:	b113      	cbz	r3, 9000ebbe <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ebb8:	f7fe fc28 	bl	9000d40c <uxListRemove>
9000ebbc:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000ebbe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ebc0:	f8d8 2000 	ldr.w	r2, [r8]
9000ebc4:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ebc8:	4293      	cmp	r3, r2
9000ebca:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ebce:	d901      	bls.n	9000ebd4 <xTaskIncrementTick.part.0+0x64>
9000ebd0:	f8c8 3000 	str.w	r3, [r8]
9000ebd4:	f7fe fbf2 	bl	9000d3bc <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ebd8:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ebdc:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ebde:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000ebe0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ebe2:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ebe4:	4291      	cmp	r1, r2
9000ebe6:	bf28      	it	cs
9000ebe8:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ebea:	2b00      	cmp	r3, #0
9000ebec:	d050      	beq.n	9000ec90 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ebee:	683b      	ldr	r3, [r7, #0]
9000ebf0:	68db      	ldr	r3, [r3, #12]
9000ebf2:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ebf4:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ebf6:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000ebf8:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ebfa:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000ebfc:	d2d4      	bcs.n	9000eba8 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000ebfe:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000ec02:	e011      	b.n	9000ec28 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000ec04:	4b26      	ldr	r3, [pc, #152]	; (9000eca0 <xTaskIncrementTick.part.0+0x130>)
9000ec06:	681a      	ldr	r2, [r3, #0]
9000ec08:	6812      	ldr	r2, [r2, #0]
9000ec0a:	b30a      	cbz	r2, 9000ec50 <xTaskIncrementTick.part.0+0xe0>
9000ec0c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec10:	f383 8811 	msr	BASEPRI, r3
9000ec14:	f3bf 8f6f 	isb	sy
9000ec18:	f3bf 8f4f 	dsb	sy
9000ec1c:	e7fe      	b.n	9000ec1c <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000ec1e:	2500      	movs	r5, #0
9000ec20:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000ecb4 <xTaskIncrementTick.part.0+0x144>
9000ec24:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000ecb8 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ec28:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ec2c:	491d      	ldr	r1, [pc, #116]	; (9000eca4 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ec2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ec30:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000ec34:	009b      	lsls	r3, r3, #2
9000ec36:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000ec3a:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000ec3c:	2a02      	cmp	r2, #2
9000ec3e:	bf28      	it	cs
9000ec40:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000ec42:	2b00      	cmp	r3, #0
}
9000ec44:	bf0c      	ite	eq
9000ec46:	4628      	moveq	r0, r5
9000ec48:	2001      	movne	r0, #1
9000ec4a:	b003      	add	sp, #12
9000ec4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000ec50:	4a15      	ldr	r2, [pc, #84]	; (9000eca8 <xTaskIncrementTick.part.0+0x138>)
9000ec52:	6818      	ldr	r0, [r3, #0]
9000ec54:	6811      	ldr	r1, [r2, #0]
9000ec56:	6019      	str	r1, [r3, #0]
9000ec58:	4914      	ldr	r1, [pc, #80]	; (9000ecac <xTaskIncrementTick.part.0+0x13c>)
9000ec5a:	6010      	str	r0, [r2, #0]
9000ec5c:	680a      	ldr	r2, [r1, #0]
9000ec5e:	3201      	adds	r2, #1
9000ec60:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ec62:	681a      	ldr	r2, [r3, #0]
9000ec64:	6812      	ldr	r2, [r2, #0]
9000ec66:	b932      	cbnz	r2, 9000ec76 <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000ec68:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000ecb0 <xTaskIncrementTick.part.0+0x140>
9000ec6c:	f04f 33ff 	mov.w	r3, #4294967295
9000ec70:	f8cb 3000 	str.w	r3, [fp]
9000ec74:	e787      	b.n	9000eb86 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec76:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ec78:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000ecb0 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec7c:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ec7e:	68db      	ldr	r3, [r3, #12]
9000ec80:	685b      	ldr	r3, [r3, #4]
9000ec82:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000ec86:	e77e      	b.n	9000eb86 <xTaskIncrementTick.part.0+0x16>
9000ec88:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000ecb4 <xTaskIncrementTick.part.0+0x144>
9000ec8c:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000ecb8 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ec90:	f04f 33ff 	mov.w	r3, #4294967295
9000ec94:	f8cb 3000 	str.w	r3, [fp]
					break;
9000ec98:	e7c6      	b.n	9000ec28 <xTaskIncrementTick.part.0+0xb8>
9000ec9a:	bf00      	nop
9000ec9c:	2402342c 	.word	0x2402342c
9000eca0:	24022f3c 	.word	0x24022f3c
9000eca4:	24023430 	.word	0x24023430
9000eca8:	24022f40 	.word	0x24022f40
9000ecac:	240233e4 	.word	0x240233e4
9000ecb0:	240233e0 	.word	0x240233e0
9000ecb4:	24022f44 	.word	0x24022f44
9000ecb8:	24022f38 	.word	0x24022f38
9000ecbc:	240233b4 	.word	0x240233b4

9000ecc0 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000ecc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000ecc4:	4d41      	ldr	r5, [pc, #260]	; (9000edcc <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000ecc6:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000ecc8:	f7fe fc1c 	bl	9000d504 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000eccc:	682b      	ldr	r3, [r5, #0]
9000ecce:	3b01      	subs	r3, #1
9000ecd0:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ecd2:	682b      	ldr	r3, [r5, #0]
9000ecd4:	2b00      	cmp	r3, #0
9000ecd6:	d161      	bne.n	9000ed9c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ecd8:	4b3d      	ldr	r3, [pc, #244]	; (9000edd0 <xTaskResumeAll.part.0+0x110>)
9000ecda:	681b      	ldr	r3, [r3, #0]
9000ecdc:	2b00      	cmp	r3, #0
9000ecde:	d05d      	beq.n	9000ed9c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ece0:	4e3c      	ldr	r6, [pc, #240]	; (9000edd4 <xTaskResumeAll.part.0+0x114>)
9000ece2:	6833      	ldr	r3, [r6, #0]
9000ece4:	2b00      	cmp	r3, #0
9000ece6:	d06e      	beq.n	9000edc6 <xTaskResumeAll.part.0+0x106>
9000ece8:	4f3b      	ldr	r7, [pc, #236]	; (9000edd8 <xTaskResumeAll.part.0+0x118>)
9000ecea:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000ede8 <xTaskResumeAll.part.0+0x128>
9000ecee:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000edec <xTaskResumeAll.part.0+0x12c>
9000ecf2:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000edf0 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ecf6:	68f3      	ldr	r3, [r6, #12]
9000ecf8:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ecfa:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ecfe:	f104 0018 	add.w	r0, r4, #24
9000ed02:	f7fe fb83 	bl	9000d40c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed06:	4658      	mov	r0, fp
9000ed08:	f7fe fb80 	bl	9000d40c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ed0c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ed0e:	683a      	ldr	r2, [r7, #0]
9000ed10:	4659      	mov	r1, fp
9000ed12:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ed16:	4293      	cmp	r3, r2
9000ed18:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ed1c:	d900      	bls.n	9000ed20 <xTaskResumeAll.part.0+0x60>
9000ed1e:	603b      	str	r3, [r7, #0]
9000ed20:	f7fe fb4c 	bl	9000d3bc <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ed24:	f8d8 3000 	ldr.w	r3, [r8]
9000ed28:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ed2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ed2c:	429a      	cmp	r2, r3
9000ed2e:	d33d      	bcc.n	9000edac <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000ed30:	2301      	movs	r3, #1
9000ed32:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ed36:	6833      	ldr	r3, [r6, #0]
9000ed38:	2b00      	cmp	r3, #0
9000ed3a:	d1dc      	bne.n	9000ecf6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed3c:	4b27      	ldr	r3, [pc, #156]	; (9000eddc <xTaskResumeAll.part.0+0x11c>)
9000ed3e:	681a      	ldr	r2, [r3, #0]
9000ed40:	6812      	ldr	r2, [r2, #0]
9000ed42:	2a00      	cmp	r2, #0
9000ed44:	d03a      	beq.n	9000edbc <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed46:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ed48:	4b25      	ldr	r3, [pc, #148]	; (9000ede0 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed4a:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ed4c:	68d2      	ldr	r2, [r2, #12]
9000ed4e:	6852      	ldr	r2, [r2, #4]
9000ed50:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000ed52:	4e24      	ldr	r6, [pc, #144]	; (9000ede4 <xTaskResumeAll.part.0+0x124>)
9000ed54:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000ed56:	b194      	cbz	r4, 9000ed7e <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000ed58:	2701      	movs	r7, #1
9000ed5a:	e006      	b.n	9000ed6a <xTaskResumeAll.part.0+0xaa>
9000ed5c:	f7ff ff08 	bl	9000eb70 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000ed60:	b108      	cbz	r0, 9000ed66 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000ed62:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ed66:	3c01      	subs	r4, #1
9000ed68:	d008      	beq.n	9000ed7c <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ed6a:	682b      	ldr	r3, [r5, #0]
9000ed6c:	2b00      	cmp	r3, #0
9000ed6e:	d0f5      	beq.n	9000ed5c <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000ed70:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ed72:	3c01      	subs	r4, #1
		++xPendedTicks;
9000ed74:	f103 0301 	add.w	r3, r3, #1
9000ed78:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000ed7a:	d1f6      	bne.n	9000ed6a <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000ed7c:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000ed7e:	f8da 3000 	ldr.w	r3, [sl]
9000ed82:	b15b      	cbz	r3, 9000ed9c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000ed84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000ed88:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000ed8c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ed90:	f3bf 8f4f 	dsb	sy
9000ed94:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000ed98:	2001      	movs	r0, #1
9000ed9a:	e000      	b.n	9000ed9e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000ed9c:	2000      	movs	r0, #0
9000ed9e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000eda0:	f7fe fbd2 	bl	9000d548 <vPortExitCritical>
}
9000eda4:	9801      	ldr	r0, [sp, #4]
9000eda6:	b003      	add	sp, #12
9000eda8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000edac:	6833      	ldr	r3, [r6, #0]
9000edae:	2b00      	cmp	r3, #0
9000edb0:	d1a1      	bne.n	9000ecf6 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000edb2:	4b0a      	ldr	r3, [pc, #40]	; (9000eddc <xTaskResumeAll.part.0+0x11c>)
9000edb4:	681a      	ldr	r2, [r3, #0]
9000edb6:	6812      	ldr	r2, [r2, #0]
9000edb8:	2a00      	cmp	r2, #0
9000edba:	d1c4      	bne.n	9000ed46 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000edbc:	4b08      	ldr	r3, [pc, #32]	; (9000ede0 <xTaskResumeAll.part.0+0x120>)
9000edbe:	f04f 32ff 	mov.w	r2, #4294967295
9000edc2:	601a      	str	r2, [r3, #0]
9000edc4:	e7c5      	b.n	9000ed52 <xTaskResumeAll.part.0+0x92>
9000edc6:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000edf0 <xTaskResumeAll.part.0+0x130>
9000edca:	e7c2      	b.n	9000ed52 <xTaskResumeAll.part.0+0x92>
9000edcc:	240233ac 	.word	0x240233ac
9000edd0:	240233a4 	.word	0x240233a4
9000edd4:	240233ec 	.word	0x240233ec
9000edd8:	240233b4 	.word	0x240233b4
9000eddc:	24022f3c 	.word	0x24022f3c
9000ede0:	240233e0 	.word	0x240233e0
9000ede4:	240233e8 	.word	0x240233e8
9000ede8:	24022f44 	.word	0x24022f44
9000edec:	24022f38 	.word	0x24022f38
9000edf0:	24023430 	.word	0x24023430

9000edf4 <xTaskCreateStatic>:
	{
9000edf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000edf8:	b083      	sub	sp, #12
9000edfa:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000edfc:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000ee00:	b1bb      	cbz	r3, 9000ee32 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000ee02:	b16c      	cbz	r4, 9000ee20 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000ee04:	2360      	movs	r3, #96	; 0x60
9000ee06:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000ee08:	9b01      	ldr	r3, [sp, #4]
9000ee0a:	2b60      	cmp	r3, #96	; 0x60
9000ee0c:	d01a      	beq.n	9000ee44 <xTaskCreateStatic+0x50>
9000ee0e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee12:	f383 8811 	msr	BASEPRI, r3
9000ee16:	f3bf 8f6f 	isb	sy
9000ee1a:	f3bf 8f4f 	dsb	sy
9000ee1e:	e7fe      	b.n	9000ee1e <xTaskCreateStatic+0x2a>
9000ee20:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee24:	f383 8811 	msr	BASEPRI, r3
9000ee28:	f3bf 8f6f 	isb	sy
9000ee2c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000ee30:	e7fe      	b.n	9000ee30 <xTaskCreateStatic+0x3c>
9000ee32:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ee36:	f383 8811 	msr	BASEPRI, r3
9000ee3a:	f3bf 8f6f 	isb	sy
9000ee3e:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000ee42:	e7fe      	b.n	9000ee42 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ee44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ee46:	0096      	lsls	r6, r2, #2
9000ee48:	4607      	mov	r7, r0
9000ee4a:	460d      	mov	r5, r1
9000ee4c:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000ee4e:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000ee50:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ee52:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ee54:	4632      	mov	r2, r6
9000ee56:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000ee58:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ee5c:	f017 fbf8 	bl	90026650 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ee60:	1f32      	subs	r2, r6, #4
9000ee62:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000ee64:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000ee66:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000ee6a:	2d00      	cmp	r5, #0
9000ee6c:	d069      	beq.n	9000ef42 <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee6e:	782b      	ldrb	r3, [r5, #0]
9000ee70:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ee74:	2b00      	cmp	r3, #0
9000ee76:	d03b      	beq.n	9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee78:	786b      	ldrb	r3, [r5, #1]
9000ee7a:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ee7e:	2b00      	cmp	r3, #0
9000ee80:	d036      	beq.n	9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee82:	78ab      	ldrb	r3, [r5, #2]
9000ee84:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000ee88:	b393      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee8a:	78eb      	ldrb	r3, [r5, #3]
9000ee8c:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000ee90:	b373      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee92:	792b      	ldrb	r3, [r5, #4]
9000ee94:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000ee98:	b353      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ee9a:	796b      	ldrb	r3, [r5, #5]
9000ee9c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000eea0:	b333      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eea2:	79ab      	ldrb	r3, [r5, #6]
9000eea4:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000eea8:	b313      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeaa:	79eb      	ldrb	r3, [r5, #7]
9000eeac:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000eeb0:	b1f3      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeb2:	7a2b      	ldrb	r3, [r5, #8]
9000eeb4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000eeb8:	b1d3      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeba:	7a6b      	ldrb	r3, [r5, #9]
9000eebc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000eec0:	b1b3      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eec2:	7aab      	ldrb	r3, [r5, #10]
9000eec4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000eec8:	b193      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeca:	7aeb      	ldrb	r3, [r5, #11]
9000eecc:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000eed0:	b173      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eed2:	7b2b      	ldrb	r3, [r5, #12]
9000eed4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000eed8:	b153      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeda:	7b6b      	ldrb	r3, [r5, #13]
9000eedc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000eee0:	b133      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eee2:	7bab      	ldrb	r3, [r5, #14]
9000eee4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000eee8:	b113      	cbz	r3, 9000eef0 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eeea:	7beb      	ldrb	r3, [r5, #15]
9000eeec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000eef0:	2300      	movs	r3, #0
9000eef2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000eef6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000eef8:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000eefa:	1d20      	adds	r0, r4, #4
9000eefc:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000eefe:	6526      	str	r6, [r4, #80]	; 0x50
9000ef00:	bf28      	it	cs
9000ef02:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000ef04:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000ef06:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ef08:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000ef0c:	f7fe fa52 	bl	9000d3b4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000ef10:	f104 0018 	add.w	r0, r4, #24
9000ef14:	f7fe fa4e 	bl	9000d3b4 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ef18:	4642      	mov	r2, r8
9000ef1a:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000ef1c:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ef1e:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ef20:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000ef22:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000ef24:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000ef26:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000ef28:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ef2c:	f7fe fac0 	bl	9000d4b0 <pxPortInitialiseStack>
9000ef30:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000ef32:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000ef34:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000ef36:	f7ff fd45 	bl	9000e9c4 <prvAddNewTaskToReadyList>
	}
9000ef3a:	4620      	mov	r0, r4
9000ef3c:	b003      	add	sp, #12
9000ef3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000ef42:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000ef46:	e7d6      	b.n	9000eef6 <xTaskCreateStatic+0x102>

9000ef48 <xTaskCreate>:
	{
9000ef48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ef4c:	0096      	lsls	r6, r2, #2
	{
9000ef4e:	4680      	mov	r8, r0
9000ef50:	460d      	mov	r5, r1
9000ef52:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000ef54:	4630      	mov	r0, r6
9000ef56:	f7fe f8ff 	bl	9000d158 <pvPortMalloc>
			if( pxStack != NULL )
9000ef5a:	2800      	cmp	r0, #0
9000ef5c:	f000 8083 	beq.w	9000f066 <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000ef60:	4607      	mov	r7, r0
9000ef62:	2060      	movs	r0, #96	; 0x60
9000ef64:	f7fe f8f8 	bl	9000d158 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000ef68:	4604      	mov	r4, r0
9000ef6a:	2800      	cmp	r0, #0
9000ef6c:	d07f      	beq.n	9000f06e <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ef6e:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000ef70:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef72:	4632      	mov	r2, r6
9000ef74:	4638      	mov	r0, r7
9000ef76:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000ef78:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000ef7c:	f017 fb68 	bl	90026650 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000ef80:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000ef84:	2d00      	cmp	r5, #0
9000ef86:	d078      	beq.n	9000f07a <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef88:	782b      	ldrb	r3, [r5, #0]
9000ef8a:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000ef8e:	2b00      	cmp	r3, #0
9000ef90:	d03b      	beq.n	9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef92:	786b      	ldrb	r3, [r5, #1]
9000ef94:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000ef98:	2b00      	cmp	r3, #0
9000ef9a:	d036      	beq.n	9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000ef9c:	78ab      	ldrb	r3, [r5, #2]
9000ef9e:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000efa2:	b393      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efa4:	78eb      	ldrb	r3, [r5, #3]
9000efa6:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000efaa:	b373      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efac:	792b      	ldrb	r3, [r5, #4]
9000efae:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000efb2:	b353      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efb4:	796b      	ldrb	r3, [r5, #5]
9000efb6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000efba:	b333      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efbc:	79ab      	ldrb	r3, [r5, #6]
9000efbe:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000efc2:	b313      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efc4:	79eb      	ldrb	r3, [r5, #7]
9000efc6:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000efca:	b1f3      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efcc:	7a2b      	ldrb	r3, [r5, #8]
9000efce:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000efd2:	b1d3      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efd4:	7a6b      	ldrb	r3, [r5, #9]
9000efd6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000efda:	b1b3      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efdc:	7aab      	ldrb	r3, [r5, #10]
9000efde:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000efe2:	b193      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efe4:	7aeb      	ldrb	r3, [r5, #11]
9000efe6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000efea:	b173      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efec:	7b2b      	ldrb	r3, [r5, #12]
9000efee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000eff2:	b153      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eff4:	7b6b      	ldrb	r3, [r5, #13]
9000eff6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000effa:	b133      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000effc:	7bab      	ldrb	r3, [r5, #14]
9000effe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000f002:	b113      	cbz	r3, 9000f00a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f004:	7beb      	ldrb	r3, [r5, #15]
9000f006:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f00a:	2300      	movs	r3, #0
9000f00c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f010:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f012:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f014:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f016:	3e04      	subs	r6, #4
9000f018:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f01a:	6527      	str	r7, [r4, #80]	; 0x50
9000f01c:	bf28      	it	cs
9000f01e:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f020:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f022:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f024:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f028:	f7fe f9c4 	bl	9000d3b4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f02c:	f104 0018 	add.w	r0, r4, #24
9000f030:	f7fe f9c0 	bl	9000d3b4 <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f034:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
9000f038:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f03a:	464a      	mov	r2, r9
9000f03c:	4641      	mov	r1, r8
9000f03e:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f042:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f044:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f046:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f048:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f04a:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f04e:	f7fe fa2f 	bl	9000d4b0 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f052:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f054:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f056:	b103      	cbz	r3, 9000f05a <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f058:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f05a:	4620      	mov	r0, r4
9000f05c:	f7ff fcb2 	bl	9000e9c4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f060:	2001      	movs	r0, #1
	}
9000f062:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f066:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f06a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
9000f06e:	4638      	mov	r0, r7
9000f070:	f7fe f930 	bl	9000d2d4 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f074:	f04f 30ff 	mov.w	r0, #4294967295
9000f078:	e7f3      	b.n	9000f062 <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f07a:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000f07e:	e7c7      	b.n	9000f010 <xTaskCreate+0xc8>

9000f080 <vTaskDelay>:
	{
9000f080:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f082:	b950      	cbnz	r0, 9000f09a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f084:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f088:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f08c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f090:	f3bf 8f4f 	dsb	sy
9000f094:	f3bf 8f6f 	isb	sy
	}
9000f098:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f09a:	4d1e      	ldr	r5, [pc, #120]	; (9000f114 <vTaskDelay+0x94>)
9000f09c:	682b      	ldr	r3, [r5, #0]
9000f09e:	b143      	cbz	r3, 9000f0b2 <vTaskDelay+0x32>
9000f0a0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f0a4:	f383 8811 	msr	BASEPRI, r3
9000f0a8:	f3bf 8f6f 	isb	sy
9000f0ac:	f3bf 8f4f 	dsb	sy
9000f0b0:	e7fe      	b.n	9000f0b0 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f0b2:	682b      	ldr	r3, [r5, #0]
9000f0b4:	4604      	mov	r4, r0
9000f0b6:	3301      	adds	r3, #1
9000f0b8:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f0ba:	4b17      	ldr	r3, [pc, #92]	; (9000f118 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f0bc:	4e17      	ldr	r6, [pc, #92]	; (9000f11c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f0be:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f0c0:	6830      	ldr	r0, [r6, #0]
9000f0c2:	3004      	adds	r0, #4
9000f0c4:	f7fe f9a2 	bl	9000d40c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f0c8:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f0ca:	6833      	ldr	r3, [r6, #0]
9000f0cc:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f0ce:	d315      	bcc.n	9000f0fc <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f0d0:	4b13      	ldr	r3, [pc, #76]	; (9000f120 <vTaskDelay+0xa0>)
9000f0d2:	6818      	ldr	r0, [r3, #0]
9000f0d4:	6831      	ldr	r1, [r6, #0]
9000f0d6:	3104      	adds	r1, #4
9000f0d8:	f7fe f980 	bl	9000d3dc <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f0dc:	682b      	ldr	r3, [r5, #0]
9000f0de:	b943      	cbnz	r3, 9000f0f2 <vTaskDelay+0x72>
9000f0e0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f0e4:	f383 8811 	msr	BASEPRI, r3
9000f0e8:	f3bf 8f6f 	isb	sy
9000f0ec:	f3bf 8f4f 	dsb	sy
9000f0f0:	e7fe      	b.n	9000f0f0 <vTaskDelay+0x70>
9000f0f2:	f7ff fde5 	bl	9000ecc0 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f0f6:	2800      	cmp	r0, #0
9000f0f8:	d0c4      	beq.n	9000f084 <vTaskDelay+0x4>
	}
9000f0fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f0fc:	4b09      	ldr	r3, [pc, #36]	; (9000f124 <vTaskDelay+0xa4>)
9000f0fe:	6818      	ldr	r0, [r3, #0]
9000f100:	6831      	ldr	r1, [r6, #0]
9000f102:	3104      	adds	r1, #4
9000f104:	f7fe f96a 	bl	9000d3dc <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f108:	4b07      	ldr	r3, [pc, #28]	; (9000f128 <vTaskDelay+0xa8>)
9000f10a:	681a      	ldr	r2, [r3, #0]
9000f10c:	4294      	cmp	r4, r2
9000f10e:	d2e5      	bcs.n	9000f0dc <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f110:	601c      	str	r4, [r3, #0]
9000f112:	e7e3      	b.n	9000f0dc <vTaskDelay+0x5c>
9000f114:	240233ac 	.word	0x240233ac
9000f118:	2402342c 	.word	0x2402342c
9000f11c:	24022f38 	.word	0x24022f38
9000f120:	24022f40 	.word	0x24022f40
9000f124:	24022f3c 	.word	0x24022f3c
9000f128:	240233e0 	.word	0x240233e0

9000f12c <vTaskStartScheduler>:
{
9000f12c:	b570      	push	{r4, r5, r6, lr}
9000f12e:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f130:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f132:	4668      	mov	r0, sp
9000f134:	aa02      	add	r2, sp, #8
9000f136:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f138:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f13c:	f7fd ffee 	bl	9000d11c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f140:	9d00      	ldr	r5, [sp, #0]
9000f142:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f146:	b1b8      	cbz	r0, 9000f178 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f148:	b16d      	cbz	r5, 9000f166 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f14a:	2260      	movs	r2, #96	; 0x60
9000f14c:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f14e:	9a03      	ldr	r2, [sp, #12]
9000f150:	2a60      	cmp	r2, #96	; 0x60
9000f152:	d01a      	beq.n	9000f18a <vTaskStartScheduler+0x5e>
9000f154:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f158:	f383 8811 	msr	BASEPRI, r3
9000f15c:	f3bf 8f6f 	isb	sy
9000f160:	f3bf 8f4f 	dsb	sy
9000f164:	e7fe      	b.n	9000f164 <vTaskStartScheduler+0x38>
9000f166:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f16a:	f383 8811 	msr	BASEPRI, r3
9000f16e:	f3bf 8f6f 	isb	sy
9000f172:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f176:	e7fe      	b.n	9000f176 <vTaskStartScheduler+0x4a>
9000f178:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f17c:	f383 8811 	msr	BASEPRI, r3
9000f180:	f3bf 8f6f 	isb	sy
9000f184:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f188:	e7fe      	b.n	9000f188 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f18a:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f18c:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f18e:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f190:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f192:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f194:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f198:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f19a:	f017 fa59 	bl	90026650 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f19e:	1f33      	subs	r3, r6, #4
9000f1a0:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1a2:	492a      	ldr	r1, [pc, #168]	; (9000f24c <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f1a4:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1a6:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f1a8:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
9000f1ac:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f1ae:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f1b2:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f1b6:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f1b8:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f1bc:	f7fe f8fa 	bl	9000d3b4 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f1c0:	f105 0018 	add.w	r0, r5, #24
9000f1c4:	f7fe f8f6 	bl	9000d3b4 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f1c8:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1ca:	4622      	mov	r2, r4
9000f1cc:	4920      	ldr	r1, [pc, #128]	; (9000f250 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f1ce:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1d0:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f1d2:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f1d4:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f1d6:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f1d8:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f1da:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1de:	f7fe f967 	bl	9000d4b0 <pxPortInitialiseStack>
9000f1e2:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f1e4:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1e6:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f1e8:	f7ff fbec 	bl	9000e9c4 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f1ec:	f000 fca4 	bl	9000fb38 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f1f0:	2801      	cmp	r0, #1
9000f1f2:	d00c      	beq.n	9000f20e <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f1f4:	3001      	adds	r0, #1
9000f1f6:	d001      	beq.n	9000f1fc <vTaskStartScheduler+0xd0>
}
9000f1f8:	b004      	add	sp, #16
9000f1fa:	bd70      	pop	{r4, r5, r6, pc}
9000f1fc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f200:	f383 8811 	msr	BASEPRI, r3
9000f204:	f3bf 8f6f 	isb	sy
9000f208:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f20c:	e7fe      	b.n	9000f20c <vTaskStartScheduler+0xe0>
9000f20e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f212:	f383 8811 	msr	BASEPRI, r3
9000f216:	f3bf 8f6f 	isb	sy
9000f21a:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f21e:	4b0d      	ldr	r3, [pc, #52]	; (9000f254 <vTaskStartScheduler+0x128>)
9000f220:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f224:	490c      	ldr	r1, [pc, #48]	; (9000f258 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f226:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f228:	4b0c      	ldr	r3, [pc, #48]	; (9000f25c <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f22a:	4a0d      	ldr	r2, [pc, #52]	; (9000f260 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f22c:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f22e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f230:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f232:	b143      	cbz	r3, 9000f246 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f234:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f236:	b10b      	cbz	r3, 9000f23c <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f238:	2000      	movs	r0, #0
9000f23a:	4798      	blx	r3
}
9000f23c:	b004      	add	sp, #16
9000f23e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f242:	f7fe b9f1 	b.w	9000d628 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f246:	6813      	ldr	r3, [r2, #0]
9000f248:	e7f4      	b.n	9000f234 <vTaskStartScheduler+0x108>
9000f24a:	bf00      	nop
9000f24c:	454c4449 	.word	0x454c4449
9000f250:	9000ead5 	.word	0x9000ead5
9000f254:	240233e0 	.word	0x240233e0
9000f258:	24023400 	.word	0x24023400
9000f25c:	2402342c 	.word	0x2402342c
9000f260:	24022f38 	.word	0x24022f38

9000f264 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f264:	4a02      	ldr	r2, [pc, #8]	; (9000f270 <vTaskSuspendAll+0xc>)
9000f266:	6813      	ldr	r3, [r2, #0]
9000f268:	3301      	adds	r3, #1
9000f26a:	6013      	str	r3, [r2, #0]
}
9000f26c:	4770      	bx	lr
9000f26e:	bf00      	nop
9000f270:	240233ac 	.word	0x240233ac

9000f274 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f274:	4b06      	ldr	r3, [pc, #24]	; (9000f290 <xTaskResumeAll+0x1c>)
9000f276:	681b      	ldr	r3, [r3, #0]
9000f278:	b943      	cbnz	r3, 9000f28c <xTaskResumeAll+0x18>
9000f27a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f27e:	f383 8811 	msr	BASEPRI, r3
9000f282:	f3bf 8f6f 	isb	sy
9000f286:	f3bf 8f4f 	dsb	sy
9000f28a:	e7fe      	b.n	9000f28a <xTaskResumeAll+0x16>
9000f28c:	f7ff bd18 	b.w	9000ecc0 <xTaskResumeAll.part.0>
9000f290:	240233ac 	.word	0x240233ac

9000f294 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f294:	4b01      	ldr	r3, [pc, #4]	; (9000f29c <xTaskGetTickCount+0x8>)
9000f296:	6818      	ldr	r0, [r3, #0]
}
9000f298:	4770      	bx	lr
9000f29a:	bf00      	nop
9000f29c:	2402342c 	.word	0x2402342c

9000f2a0 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f2a0:	4b05      	ldr	r3, [pc, #20]	; (9000f2b8 <xTaskIncrementTick+0x18>)
9000f2a2:	681b      	ldr	r3, [r3, #0]
9000f2a4:	b90b      	cbnz	r3, 9000f2aa <xTaskIncrementTick+0xa>
9000f2a6:	f7ff bc63 	b.w	9000eb70 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f2aa:	4a04      	ldr	r2, [pc, #16]	; (9000f2bc <xTaskIncrementTick+0x1c>)
}
9000f2ac:	2000      	movs	r0, #0
		++xPendedTicks;
9000f2ae:	6813      	ldr	r3, [r2, #0]
9000f2b0:	3301      	adds	r3, #1
9000f2b2:	6013      	str	r3, [r2, #0]
}
9000f2b4:	4770      	bx	lr
9000f2b6:	bf00      	nop
9000f2b8:	240233ac 	.word	0x240233ac
9000f2bc:	240233e8 	.word	0x240233e8

9000f2c0 <vTaskSetApplicationTaskTag>:
	{
9000f2c0:	b538      	push	{r3, r4, r5, lr}
9000f2c2:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f2c4:	b138      	cbz	r0, 9000f2d6 <vTaskSetApplicationTaskTag+0x16>
9000f2c6:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f2c8:	f7fe f91c 	bl	9000d504 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f2cc:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f2ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f2d2:	f7fe b939 	b.w	9000d548 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f2d6:	4b04      	ldr	r3, [pc, #16]	; (9000f2e8 <vTaskSetApplicationTaskTag+0x28>)
9000f2d8:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f2da:	f7fe f913 	bl	9000d504 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f2de:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f2e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f2e4:	f7fe b930 	b.w	9000d548 <vPortExitCritical>
9000f2e8:	24022f38 	.word	0x24022f38

9000f2ec <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f2ec:	4b27      	ldr	r3, [pc, #156]	; (9000f38c <vTaskSwitchContext+0xa0>)
9000f2ee:	681b      	ldr	r3, [r3, #0]
9000f2f0:	b11b      	cbz	r3, 9000f2fa <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f2f2:	4b27      	ldr	r3, [pc, #156]	; (9000f390 <vTaskSwitchContext+0xa4>)
9000f2f4:	2201      	movs	r2, #1
9000f2f6:	601a      	str	r2, [r3, #0]
9000f2f8:	4770      	bx	lr
{
9000f2fa:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f2fc:	4a24      	ldr	r2, [pc, #144]	; (9000f390 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f2fe:	4c25      	ldr	r4, [pc, #148]	; (9000f394 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f300:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f302:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f304:	2b00      	cmp	r3, #0
9000f306:	d036      	beq.n	9000f376 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f308:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f30a:	b10b      	cbz	r3, 9000f310 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f30c:	2001      	movs	r0, #1
9000f30e:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f310:	4d21      	ldr	r5, [pc, #132]	; (9000f398 <vTaskSwitchContext+0xac>)
9000f312:	4922      	ldr	r1, [pc, #136]	; (9000f39c <vTaskSwitchContext+0xb0>)
9000f314:	682b      	ldr	r3, [r5, #0]
9000f316:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f31a:	0098      	lsls	r0, r3, #2
9000f31c:	0092      	lsls	r2, r2, #2
9000f31e:	588a      	ldr	r2, [r1, r2]
9000f320:	b942      	cbnz	r2, 9000f334 <vTaskSwitchContext+0x48>
9000f322:	b1fb      	cbz	r3, 9000f364 <vTaskSwitchContext+0x78>
9000f324:	3b01      	subs	r3, #1
9000f326:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f32a:	0098      	lsls	r0, r3, #2
9000f32c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f330:	2a00      	cmp	r2, #0
9000f332:	d0f6      	beq.n	9000f322 <vTaskSwitchContext+0x36>
9000f334:	4418      	add	r0, r3
9000f336:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f33a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f33e:	4662      	mov	r2, ip
9000f340:	6849      	ldr	r1, [r1, #4]
9000f342:	3208      	adds	r2, #8
9000f344:	4291      	cmp	r1, r2
9000f346:	f8cc 1004 	str.w	r1, [ip, #4]
9000f34a:	d01b      	beq.n	9000f384 <vTaskSwitchContext+0x98>
9000f34c:	68ca      	ldr	r2, [r1, #12]
9000f34e:	6022      	str	r2, [r4, #0]
9000f350:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f352:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f354:	b1a3      	cbz	r3, 9000f380 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f356:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f358:	b11b      	cbz	r3, 9000f362 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f35a:	2000      	movs	r0, #0
}
9000f35c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f360:	4718      	bx	r3
}
9000f362:	bd70      	pop	{r4, r5, r6, pc}
9000f364:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f368:	f383 8811 	msr	BASEPRI, r3
9000f36c:	f3bf 8f6f 	isb	sy
9000f370:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f374:	e7fe      	b.n	9000f374 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f376:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f378:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f37a:	2b00      	cmp	r3, #0
9000f37c:	d1c6      	bne.n	9000f30c <vTaskSwitchContext+0x20>
9000f37e:	e7c7      	b.n	9000f310 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f380:	6823      	ldr	r3, [r4, #0]
9000f382:	e7e8      	b.n	9000f356 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f384:	6849      	ldr	r1, [r1, #4]
9000f386:	f8cc 1004 	str.w	r1, [ip, #4]
9000f38a:	e7df      	b.n	9000f34c <vTaskSwitchContext+0x60>
9000f38c:	240233ac 	.word	0x240233ac
9000f390:	24023430 	.word	0x24023430
9000f394:	24022f38 	.word	0x24022f38
9000f398:	240233b4 	.word	0x240233b4
9000f39c:	24022f44 	.word	0x24022f44

9000f3a0 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f3a0:	b1f0      	cbz	r0, 9000f3e0 <vTaskPlaceOnEventList+0x40>
{
9000f3a2:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f3a4:	4d1a      	ldr	r5, [pc, #104]	; (9000f410 <vTaskPlaceOnEventList+0x70>)
9000f3a6:	460c      	mov	r4, r1
9000f3a8:	6829      	ldr	r1, [r5, #0]
9000f3aa:	3118      	adds	r1, #24
9000f3ac:	f7fe f816 	bl	9000d3dc <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f3b0:	4b18      	ldr	r3, [pc, #96]	; (9000f414 <vTaskPlaceOnEventList+0x74>)
9000f3b2:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f3b4:	6828      	ldr	r0, [r5, #0]
9000f3b6:	3004      	adds	r0, #4
9000f3b8:	f7fe f828 	bl	9000d40c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f3bc:	1c63      	adds	r3, r4, #1
9000f3be:	d020      	beq.n	9000f402 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f3c0:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f3c2:	682b      	ldr	r3, [r5, #0]
9000f3c4:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f3c6:	d214      	bcs.n	9000f3f2 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3c8:	4b13      	ldr	r3, [pc, #76]	; (9000f418 <vTaskPlaceOnEventList+0x78>)
9000f3ca:	6818      	ldr	r0, [r3, #0]
9000f3cc:	6829      	ldr	r1, [r5, #0]
9000f3ce:	3104      	adds	r1, #4
9000f3d0:	f7fe f804 	bl	9000d3dc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f3d4:	4b11      	ldr	r3, [pc, #68]	; (9000f41c <vTaskPlaceOnEventList+0x7c>)
9000f3d6:	681a      	ldr	r2, [r3, #0]
9000f3d8:	4294      	cmp	r4, r2
9000f3da:	d200      	bcs.n	9000f3de <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f3dc:	601c      	str	r4, [r3, #0]
}
9000f3de:	bd70      	pop	{r4, r5, r6, pc}
9000f3e0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3e4:	f383 8811 	msr	BASEPRI, r3
9000f3e8:	f3bf 8f6f 	isb	sy
9000f3ec:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f3f0:	e7fe      	b.n	9000f3f0 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3f2:	4b0b      	ldr	r3, [pc, #44]	; (9000f420 <vTaskPlaceOnEventList+0x80>)
9000f3f4:	6818      	ldr	r0, [r3, #0]
9000f3f6:	6829      	ldr	r1, [r5, #0]
}
9000f3f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f3fc:	3104      	adds	r1, #4
9000f3fe:	f7fd bfed 	b.w	9000d3dc <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f402:	6829      	ldr	r1, [r5, #0]
9000f404:	4807      	ldr	r0, [pc, #28]	; (9000f424 <vTaskPlaceOnEventList+0x84>)
9000f406:	3104      	adds	r1, #4
}
9000f408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f40c:	f7fd bfd6 	b.w	9000d3bc <vListInsertEnd>
9000f410:	24022f38 	.word	0x24022f38
9000f414:	2402342c 	.word	0x2402342c
9000f418:	24022f3c 	.word	0x24022f3c
9000f41c:	240233e0 	.word	0x240233e0
9000f420:	24022f40 	.word	0x24022f40
9000f424:	24023404 	.word	0x24023404

9000f428 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f428:	b358      	cbz	r0, 9000f482 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f42a:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f42c:	4e1d      	ldr	r6, [pc, #116]	; (9000f4a4 <vTaskPlaceOnEventListRestricted+0x7c>)
9000f42e:	460c      	mov	r4, r1
9000f430:	4615      	mov	r5, r2
9000f432:	6831      	ldr	r1, [r6, #0]
9000f434:	3118      	adds	r1, #24
9000f436:	f7fd ffc1 	bl	9000d3bc <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f43a:	b165      	cbz	r5, 9000f456 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f43c:	4b1a      	ldr	r3, [pc, #104]	; (9000f4a8 <vTaskPlaceOnEventListRestricted+0x80>)
9000f43e:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f440:	6830      	ldr	r0, [r6, #0]
9000f442:	3004      	adds	r0, #4
9000f444:	f7fd ffe2 	bl	9000d40c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f448:	6831      	ldr	r1, [r6, #0]
9000f44a:	4818      	ldr	r0, [pc, #96]	; (9000f4ac <vTaskPlaceOnEventListRestricted+0x84>)
9000f44c:	3104      	adds	r1, #4
	}
9000f44e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f452:	f7fd bfb3 	b.w	9000d3bc <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f456:	4b14      	ldr	r3, [pc, #80]	; (9000f4a8 <vTaskPlaceOnEventListRestricted+0x80>)
9000f458:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f45a:	6830      	ldr	r0, [r6, #0]
9000f45c:	3004      	adds	r0, #4
9000f45e:	f7fd ffd5 	bl	9000d40c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f462:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f464:	6833      	ldr	r3, [r6, #0]
9000f466:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f468:	d214      	bcs.n	9000f494 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f46a:	4b11      	ldr	r3, [pc, #68]	; (9000f4b0 <vTaskPlaceOnEventListRestricted+0x88>)
9000f46c:	6818      	ldr	r0, [r3, #0]
9000f46e:	6831      	ldr	r1, [r6, #0]
9000f470:	3104      	adds	r1, #4
9000f472:	f7fd ffb3 	bl	9000d3dc <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f476:	4b0f      	ldr	r3, [pc, #60]	; (9000f4b4 <vTaskPlaceOnEventListRestricted+0x8c>)
9000f478:	681a      	ldr	r2, [r3, #0]
9000f47a:	4294      	cmp	r4, r2
9000f47c:	d200      	bcs.n	9000f480 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f47e:	601c      	str	r4, [r3, #0]
	}
9000f480:	bd70      	pop	{r4, r5, r6, pc}
9000f482:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f486:	f383 8811 	msr	BASEPRI, r3
9000f48a:	f3bf 8f6f 	isb	sy
9000f48e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f492:	e7fe      	b.n	9000f492 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f494:	4b08      	ldr	r3, [pc, #32]	; (9000f4b8 <vTaskPlaceOnEventListRestricted+0x90>)
9000f496:	6818      	ldr	r0, [r3, #0]
9000f498:	6831      	ldr	r1, [r6, #0]
	}
9000f49a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f49e:	3104      	adds	r1, #4
9000f4a0:	f7fd bf9c 	b.w	9000d3dc <vListInsert>
9000f4a4:	24022f38 	.word	0x24022f38
9000f4a8:	2402342c 	.word	0x2402342c
9000f4ac:	24023404 	.word	0x24023404
9000f4b0:	24022f3c 	.word	0x24022f3c
9000f4b4:	240233e0 	.word	0x240233e0
9000f4b8:	24022f40 	.word	0x24022f40

9000f4bc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f4bc:	68c3      	ldr	r3, [r0, #12]
{
9000f4be:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f4c0:	68dc      	ldr	r4, [r3, #12]
{
9000f4c2:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9000f4c4:	b35c      	cbz	r4, 9000f51e <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f4c6:	f104 0518 	add.w	r5, r4, #24
9000f4ca:	4628      	mov	r0, r5
9000f4cc:	f7fd ff9e 	bl	9000d40c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f4d0:	4b19      	ldr	r3, [pc, #100]	; (9000f538 <xTaskRemoveFromEventList+0x7c>)
9000f4d2:	681b      	ldr	r3, [r3, #0]
9000f4d4:	b17b      	cbz	r3, 9000f4f6 <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f4d6:	4629      	mov	r1, r5
9000f4d8:	4818      	ldr	r0, [pc, #96]	; (9000f53c <xTaskRemoveFromEventList+0x80>)
9000f4da:	f7fd ff6f 	bl	9000d3bc <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f4de:	4b18      	ldr	r3, [pc, #96]	; (9000f540 <xTaskRemoveFromEventList+0x84>)
9000f4e0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f4e2:	681b      	ldr	r3, [r3, #0]
9000f4e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f4e6:	429a      	cmp	r2, r3
9000f4e8:	d922      	bls.n	9000f530 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
9000f4ea:	2301      	movs	r3, #1
9000f4ec:	4a15      	ldr	r2, [pc, #84]	; (9000f544 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
9000f4ee:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f4f0:	6013      	str	r3, [r2, #0]
}
9000f4f2:	b003      	add	sp, #12
9000f4f4:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f4f6:	1d21      	adds	r1, r4, #4
9000f4f8:	4608      	mov	r0, r1
9000f4fa:	9101      	str	r1, [sp, #4]
9000f4fc:	f7fd ff86 	bl	9000d40c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f500:	4a11      	ldr	r2, [pc, #68]	; (9000f548 <xTaskRemoveFromEventList+0x8c>)
9000f502:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000f504:	6810      	ldr	r0, [r2, #0]
9000f506:	9901      	ldr	r1, [sp, #4]
9000f508:	4283      	cmp	r3, r0
9000f50a:	d900      	bls.n	9000f50e <xTaskRemoveFromEventList+0x52>
9000f50c:	6013      	str	r3, [r2, #0]
9000f50e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f512:	480e      	ldr	r0, [pc, #56]	; (9000f54c <xTaskRemoveFromEventList+0x90>)
9000f514:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f518:	f7fd ff50 	bl	9000d3bc <vListInsertEnd>
9000f51c:	e7df      	b.n	9000f4de <xTaskRemoveFromEventList+0x22>
9000f51e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f522:	f383 8811 	msr	BASEPRI, r3
9000f526:	f3bf 8f6f 	isb	sy
9000f52a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f52e:	e7fe      	b.n	9000f52e <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
9000f530:	2000      	movs	r0, #0
}
9000f532:	b003      	add	sp, #12
9000f534:	bd30      	pop	{r4, r5, pc}
9000f536:	bf00      	nop
9000f538:	240233ac 	.word	0x240233ac
9000f53c:	240233ec 	.word	0x240233ec
9000f540:	24022f38 	.word	0x24022f38
9000f544:	24023430 	.word	0x24023430
9000f548:	240233b4 	.word	0x240233b4
9000f54c:	24022f44 	.word	0x24022f44

9000f550 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f550:	4a03      	ldr	r2, [pc, #12]	; (9000f560 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f552:	4b04      	ldr	r3, [pc, #16]	; (9000f564 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f554:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f556:	681b      	ldr	r3, [r3, #0]
9000f558:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f55c:	4770      	bx	lr
9000f55e:	bf00      	nop
9000f560:	240233e4 	.word	0x240233e4
9000f564:	2402342c 	.word	0x2402342c

9000f568 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
9000f568:	b328      	cbz	r0, 9000f5b6 <xTaskCheckForTimeOut+0x4e>
{
9000f56a:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f56c:	460d      	mov	r5, r1
9000f56e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
9000f570:	b1c1      	cbz	r1, 9000f5a4 <xTaskCheckForTimeOut+0x3c>
9000f572:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f574:	f7fd ffc6 	bl	9000d504 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f578:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f57a:	4a1d      	ldr	r2, [pc, #116]	; (9000f5f0 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f57c:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f57e:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f580:	d030      	beq.n	9000f5e4 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f582:	f8df c070 	ldr.w	ip, [pc, #112]	; 9000f5f4 <xTaskCheckForTimeOut+0x8c>
9000f586:	6826      	ldr	r6, [r4, #0]
9000f588:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f58c:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f58e:	42be      	cmp	r6, r7
9000f590:	d01a      	beq.n	9000f5c8 <xTaskCheckForTimeOut+0x60>
9000f592:	4288      	cmp	r0, r1
9000f594:	d818      	bhi.n	9000f5c8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9000f596:	2001      	movs	r0, #1
9000f598:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000f59a:	f7fd ffd5 	bl	9000d548 <vPortExitCritical>
}
9000f59e:	9801      	ldr	r0, [sp, #4]
9000f5a0:	b003      	add	sp, #12
9000f5a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f5a4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5a8:	f383 8811 	msr	BASEPRI, r3
9000f5ac:	f3bf 8f6f 	isb	sy
9000f5b0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f5b4:	e7fe      	b.n	9000f5b4 <xTaskCheckForTimeOut+0x4c>
9000f5b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5ba:	f383 8811 	msr	BASEPRI, r3
9000f5be:	f3bf 8f6f 	isb	sy
9000f5c2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f5c6:	e7fe      	b.n	9000f5c6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f5c8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f5cc:	4573      	cmp	r3, lr
9000f5ce:	d90b      	bls.n	9000f5e8 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
9000f5d0:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f5d2:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f5d6:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f5d8:	4403      	add	r3, r0
			xReturn = pdFALSE;
9000f5da:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
9000f5dc:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f5de:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9000f5e2:	e7d9      	b.n	9000f598 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9000f5e4:	2000      	movs	r0, #0
9000f5e6:	e7d7      	b.n	9000f598 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
9000f5e8:	2300      	movs	r3, #0
			xReturn = pdTRUE;
9000f5ea:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
9000f5ec:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f5ee:	e7d3      	b.n	9000f598 <xTaskCheckForTimeOut+0x30>
9000f5f0:	2402342c 	.word	0x2402342c
9000f5f4:	240233e4 	.word	0x240233e4

9000f5f8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f5f8:	4b01      	ldr	r3, [pc, #4]	; (9000f600 <vTaskMissedYield+0x8>)
9000f5fa:	2201      	movs	r2, #1
9000f5fc:	601a      	str	r2, [r3, #0]
}
9000f5fe:	4770      	bx	lr
9000f600:	24023430 	.word	0x24023430

9000f604 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9000f604:	4b01      	ldr	r3, [pc, #4]	; (9000f60c <xTaskGetCurrentTaskHandle+0x8>)
9000f606:	6818      	ldr	r0, [r3, #0]
	}
9000f608:	4770      	bx	lr
9000f60a:	bf00      	nop
9000f60c:	24022f38 	.word	0x24022f38

9000f610 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f610:	4b05      	ldr	r3, [pc, #20]	; (9000f628 <xTaskGetSchedulerState+0x18>)
9000f612:	681b      	ldr	r3, [r3, #0]
9000f614:	b133      	cbz	r3, 9000f624 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f616:	4b05      	ldr	r3, [pc, #20]	; (9000f62c <xTaskGetSchedulerState+0x1c>)
9000f618:	6818      	ldr	r0, [r3, #0]
9000f61a:	fab0 f080 	clz	r0, r0
9000f61e:	0940      	lsrs	r0, r0, #5
9000f620:	0040      	lsls	r0, r0, #1
9000f622:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f624:	2001      	movs	r0, #1
	}
9000f626:	4770      	bx	lr
9000f628:	24023400 	.word	0x24023400
9000f62c:	240233ac 	.word	0x240233ac

9000f630 <xTaskPriorityInherit>:
	{
9000f630:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9000f632:	4604      	mov	r4, r0
	{
9000f634:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9000f636:	b1c8      	cbz	r0, 9000f66c <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f638:	4d1d      	ldr	r5, [pc, #116]	; (9000f6b0 <xTaskPriorityInherit+0x80>)
9000f63a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000f63c:	682a      	ldr	r2, [r5, #0]
9000f63e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f640:	4293      	cmp	r3, r2
9000f642:	d215      	bcs.n	9000f670 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f644:	6982      	ldr	r2, [r0, #24]
9000f646:	2a00      	cmp	r2, #0
9000f648:	db04      	blt.n	9000f654 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f64a:	682a      	ldr	r2, [r5, #0]
9000f64c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f64e:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9000f652:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f654:	4e17      	ldr	r6, [pc, #92]	; (9000f6b4 <xTaskPriorityInherit+0x84>)
9000f656:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f65a:	6962      	ldr	r2, [r4, #20]
9000f65c:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f660:	429a      	cmp	r2, r3
9000f662:	d00e      	beq.n	9000f682 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f664:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9000f666:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f668:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f66a:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
9000f66c:	b002      	add	sp, #8
9000f66e:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f670:	682b      	ldr	r3, [r5, #0]
9000f672:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9000f674:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f676:	4298      	cmp	r0, r3
9000f678:	bf2c      	ite	cs
9000f67a:	2000      	movcs	r0, #0
9000f67c:	2001      	movcc	r0, #1
	}
9000f67e:	b002      	add	sp, #8
9000f680:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f682:	1d21      	adds	r1, r4, #4
9000f684:	4608      	mov	r0, r1
9000f686:	9101      	str	r1, [sp, #4]
9000f688:	f7fd fec0 	bl	9000d40c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f68c:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f68e:	4b0a      	ldr	r3, [pc, #40]	; (9000f6b8 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f690:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f692:	681a      	ldr	r2, [r3, #0]
9000f694:	9901      	ldr	r1, [sp, #4]
9000f696:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f698:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f69a:	d900      	bls.n	9000f69e <xTaskPriorityInherit+0x6e>
9000f69c:	6018      	str	r0, [r3, #0]
9000f69e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f6a2:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f6a6:	f7fd fe89 	bl	9000d3bc <vListInsertEnd>
				xReturn = pdTRUE;
9000f6aa:	2001      	movs	r0, #1
9000f6ac:	e7de      	b.n	9000f66c <xTaskPriorityInherit+0x3c>
9000f6ae:	bf00      	nop
9000f6b0:	24022f38 	.word	0x24022f38
9000f6b4:	24022f44 	.word	0x24022f44
9000f6b8:	240233b4 	.word	0x240233b4

9000f6bc <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f6bc:	b318      	cbz	r0, 9000f706 <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
9000f6be:	4b1f      	ldr	r3, [pc, #124]	; (9000f73c <xTaskPriorityDisinherit+0x80>)
	{
9000f6c0:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f6c2:	681c      	ldr	r4, [r3, #0]
	{
9000f6c4:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9000f6c6:	4284      	cmp	r4, r0
9000f6c8:	d008      	beq.n	9000f6dc <xTaskPriorityDisinherit+0x20>
9000f6ca:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f6ce:	f383 8811 	msr	BASEPRI, r3
9000f6d2:	f3bf 8f6f 	isb	sy
9000f6d6:	f3bf 8f4f 	dsb	sy
9000f6da:	e7fe      	b.n	9000f6da <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f6dc:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000f6de:	b14b      	cbz	r3, 9000f6f4 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f6e0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f6e2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f6e4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f6e6:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f6e8:	4291      	cmp	r1, r2
9000f6ea:	d000      	beq.n	9000f6ee <xTaskPriorityDisinherit+0x32>
9000f6ec:	b16b      	cbz	r3, 9000f70a <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
9000f6ee:	2000      	movs	r0, #0
	}
9000f6f0:	b002      	add	sp, #8
9000f6f2:	bd10      	pop	{r4, pc}
9000f6f4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f6f8:	f383 8811 	msr	BASEPRI, r3
9000f6fc:	f3bf 8f6f 	isb	sy
9000f700:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f704:	e7fe      	b.n	9000f704 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9000f706:	2000      	movs	r0, #0
	}
9000f708:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f70a:	1d21      	adds	r1, r4, #4
9000f70c:	4608      	mov	r0, r1
9000f70e:	9101      	str	r1, [sp, #4]
9000f710:	f7fd fe7c 	bl	9000d40c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f714:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f716:	4b0a      	ldr	r3, [pc, #40]	; (9000f740 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f718:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
9000f71c:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f71e:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f720:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f722:	681a      	ldr	r2, [r3, #0]
9000f724:	4290      	cmp	r0, r2
9000f726:	d900      	bls.n	9000f72a <xTaskPriorityDisinherit+0x6e>
9000f728:	6018      	str	r0, [r3, #0]
9000f72a:	4b06      	ldr	r3, [pc, #24]	; (9000f744 <xTaskPriorityDisinherit+0x88>)
9000f72c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f730:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f734:	f7fd fe42 	bl	9000d3bc <vListInsertEnd>
					xReturn = pdTRUE;
9000f738:	2001      	movs	r0, #1
		return xReturn;
9000f73a:	e7d9      	b.n	9000f6f0 <xTaskPriorityDisinherit+0x34>
9000f73c:	24022f38 	.word	0x24022f38
9000f740:	240233b4 	.word	0x240233b4
9000f744:	24022f44 	.word	0x24022f44

9000f748 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f748:	2800      	cmp	r0, #0
9000f74a:	d040      	beq.n	9000f7ce <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
9000f74c:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
9000f74e:	b530      	push	{r4, r5, lr}
9000f750:	4604      	mov	r4, r0
9000f752:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9000f754:	b153      	cbz	r3, 9000f76c <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f756:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f758:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f75a:	4281      	cmp	r1, r0
9000f75c:	bf38      	it	cc
9000f75e:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f760:	2b01      	cmp	r3, #1
9000f762:	d101      	bne.n	9000f768 <vTaskPriorityDisinheritAfterTimeout+0x20>
9000f764:	428a      	cmp	r2, r1
9000f766:	d10a      	bne.n	9000f77e <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
9000f768:	b003      	add	sp, #12
9000f76a:	bd30      	pop	{r4, r5, pc}
9000f76c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f770:	f383 8811 	msr	BASEPRI, r3
9000f774:	f3bf 8f6f 	isb	sy
9000f778:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f77c:	e7fe      	b.n	9000f77c <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
9000f77e:	4b19      	ldr	r3, [pc, #100]	; (9000f7e4 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f780:	681b      	ldr	r3, [r3, #0]
9000f782:	42a3      	cmp	r3, r4
9000f784:	d024      	beq.n	9000f7d0 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f786:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f788:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f78a:	2b00      	cmp	r3, #0
9000f78c:	db02      	blt.n	9000f794 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f78e:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9000f792:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f794:	4d14      	ldr	r5, [pc, #80]	; (9000f7e8 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000f796:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f79a:	6961      	ldr	r1, [r4, #20]
9000f79c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f7a0:	4299      	cmp	r1, r3
9000f7a2:	d1e1      	bne.n	9000f768 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f7a4:	1d21      	adds	r1, r4, #4
9000f7a6:	4608      	mov	r0, r1
9000f7a8:	9101      	str	r1, [sp, #4]
9000f7aa:	f7fd fe2f 	bl	9000d40c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f7ae:	4b0f      	ldr	r3, [pc, #60]	; (9000f7ec <vTaskPriorityDisinheritAfterTimeout+0xa4>)
9000f7b0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000f7b2:	681a      	ldr	r2, [r3, #0]
9000f7b4:	9901      	ldr	r1, [sp, #4]
9000f7b6:	4290      	cmp	r0, r2
9000f7b8:	d900      	bls.n	9000f7bc <vTaskPriorityDisinheritAfterTimeout+0x74>
9000f7ba:	6018      	str	r0, [r3, #0]
9000f7bc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f7c0:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f7c4:	b003      	add	sp, #12
9000f7c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9000f7ca:	f7fd bdf7 	b.w	9000d3bc <vListInsertEnd>
9000f7ce:	4770      	bx	lr
9000f7d0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f7d4:	f383 8811 	msr	BASEPRI, r3
9000f7d8:	f3bf 8f6f 	isb	sy
9000f7dc:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000f7e0:	e7fe      	b.n	9000f7e0 <vTaskPriorityDisinheritAfterTimeout+0x98>
9000f7e2:	bf00      	nop
9000f7e4:	24022f38 	.word	0x24022f38
9000f7e8:	24022f44 	.word	0x24022f44
9000f7ec:	240233b4 	.word	0x240233b4

9000f7f0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000f7f0:	4b04      	ldr	r3, [pc, #16]	; (9000f804 <pvTaskIncrementMutexHeldCount+0x14>)
9000f7f2:	681a      	ldr	r2, [r3, #0]
9000f7f4:	b11a      	cbz	r2, 9000f7fe <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000f7f6:	6819      	ldr	r1, [r3, #0]
9000f7f8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9000f7fa:	3201      	adds	r2, #1
9000f7fc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9000f7fe:	6818      	ldr	r0, [r3, #0]
	}
9000f800:	4770      	bx	lr
9000f802:	bf00      	nop
9000f804:	24022f38 	.word	0x24022f38

9000f808 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000f808:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f80c:	4e22      	ldr	r6, [pc, #136]	; (9000f898 <prvSwitchTimerLists+0x90>)
9000f80e:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
9000f810:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9000f8a0 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9000f814:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f818:	e00d      	b.n	9000f836 <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f81a:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f81c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f81e:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f820:	1d25      	adds	r5, r4, #4
9000f822:	4628      	mov	r0, r5
9000f824:	f7fd fdf2 	bl	9000d40c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f828:	6a23      	ldr	r3, [r4, #32]
9000f82a:	4620      	mov	r0, r4
9000f82c:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f82e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000f832:	075b      	lsls	r3, r3, #29
9000f834:	d40a      	bmi.n	9000f84c <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f836:	6833      	ldr	r3, [r6, #0]
9000f838:	681a      	ldr	r2, [r3, #0]
9000f83a:	2a00      	cmp	r2, #0
9000f83c:	d1ed      	bne.n	9000f81a <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000f83e:	4a17      	ldr	r2, [pc, #92]	; (9000f89c <prvSwitchTimerLists+0x94>)
9000f840:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000f842:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000f844:	6031      	str	r1, [r6, #0]
}
9000f846:	b005      	add	sp, #20
9000f848:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f84c:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f84e:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f850:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000f852:	429f      	cmp	r7, r3
9000f854:	d205      	bcs.n	9000f862 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f856:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000f858:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f85a:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f85c:	f7fd fdbe 	bl	9000d3dc <vListInsert>
9000f860:	e7e9      	b.n	9000f836 <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9000f862:	f8d9 3000 	ldr.w	r3, [r9]
9000f866:	b16b      	cbz	r3, 9000f884 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f868:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f86a:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f86e:	f7ff fecf 	bl	9000f610 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f872:	2300      	movs	r3, #0
9000f874:	4669      	mov	r1, sp
9000f876:	f8d9 0000 	ldr.w	r0, [r9]
9000f87a:	461a      	mov	r2, r3
9000f87c:	f7fe f93a 	bl	9000daf4 <xQueueGenericSend>
				configASSERT( xResult );
9000f880:	2800      	cmp	r0, #0
9000f882:	d1d8      	bne.n	9000f836 <prvSwitchTimerLists+0x2e>
9000f884:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f888:	f383 8811 	msr	BASEPRI, r3
9000f88c:	f3bf 8f6f 	isb	sy
9000f890:	f3bf 8f4f 	dsb	sy
9000f894:	e7fe      	b.n	9000f894 <prvSwitchTimerLists+0x8c>
9000f896:	bf00      	nop
9000f898:	24023434 	.word	0x24023434
9000f89c:	24023438 	.word	0x24023438
9000f8a0:	24023558 	.word	0x24023558

9000f8a4 <prvTimerTask>:
{
9000f8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000f8a8:	4e9f      	ldr	r6, [pc, #636]	; (9000fb28 <prvTimerTask+0x284>)
9000f8aa:	b089      	sub	sp, #36	; 0x24
9000f8ac:	4d9f      	ldr	r5, [pc, #636]	; (9000fb2c <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000f8ae:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000f8b2:	4c9f      	ldr	r4, [pc, #636]	; (9000fb30 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000f8b4:	6833      	ldr	r3, [r6, #0]
9000f8b6:	681f      	ldr	r7, [r3, #0]
9000f8b8:	2f00      	cmp	r7, #0
9000f8ba:	f000 80b2 	beq.w	9000fa22 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f8be:	68db      	ldr	r3, [r3, #12]
9000f8c0:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000f8c2:	f7ff fccf 	bl	9000f264 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000f8c6:	f7ff fce5 	bl	9000f294 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f8ca:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f8cc:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000f8ce:	4290      	cmp	r0, r2
9000f8d0:	f0c0 80af 	bcc.w	9000fa32 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f8d4:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000f8d6:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000f8d8:	f200 80d0 	bhi.w	9000fa7c <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000f8dc:	f7ff fcca 	bl	9000f274 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f8e0:	6832      	ldr	r2, [r6, #0]
9000f8e2:	68d2      	ldr	r2, [r2, #12]
9000f8e4:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f8e8:	f10b 0804 	add.w	r8, fp, #4
9000f8ec:	4640      	mov	r0, r8
9000f8ee:	f7fd fd8d 	bl	9000d40c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f8f2:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9000f8f6:	0741      	lsls	r1, r0, #29
9000f8f8:	f100 80d0 	bmi.w	9000fa9c <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f8fc:	f020 0001 	bic.w	r0, r0, #1
9000f900:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f904:	f8db 3020 	ldr.w	r3, [fp, #32]
9000f908:	4658      	mov	r0, fp
9000f90a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000f90c:	2200      	movs	r2, #0
9000f90e:	4669      	mov	r1, sp
9000f910:	6820      	ldr	r0, [r4, #0]
9000f912:	f7fe fbdb 	bl	9000e0cc <xQueueReceive>
9000f916:	2800      	cmp	r0, #0
9000f918:	d0cc      	beq.n	9000f8b4 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000f91a:	9b00      	ldr	r3, [sp, #0]
9000f91c:	2b00      	cmp	r3, #0
9000f91e:	db77      	blt.n	9000fa10 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000f920:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000f922:	697b      	ldr	r3, [r7, #20]
9000f924:	b113      	cbz	r3, 9000f92c <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f926:	1d38      	adds	r0, r7, #4
9000f928:	f7fd fd70 	bl	9000d40c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000f92c:	f7ff fcb2 	bl	9000f294 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000f930:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000f932:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9000f934:	4298      	cmp	r0, r3
9000f936:	f0c0 8083 	bcc.w	9000fa40 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000f93a:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000f93c:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
9000f940:	2b09      	cmp	r3, #9
9000f942:	d8e3      	bhi.n	9000f90c <prvTimerTask+0x68>
9000f944:	e8df f003 	tbb	[pc, r3]
9000f948:	54050505 	.word	0x54050505
9000f94c:	05055b3e 	.word	0x05055b3e
9000f950:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f952:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f956:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f958:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f95c:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f95e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000f962:	9b01      	ldr	r3, [sp, #4]
9000f964:	1899      	adds	r1, r3, r2
9000f966:	bf2c      	ite	cs
9000f968:	2001      	movcs	r0, #1
9000f96a:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000f96c:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f96e:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f970:	f200 8086 	bhi.w	9000fa80 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f974:	eba8 0303 	sub.w	r3, r8, r3
9000f978:	429a      	cmp	r2, r3
9000f97a:	f200 80c0 	bhi.w	9000fafe <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f97e:	6a3b      	ldr	r3, [r7, #32]
9000f980:	4638      	mov	r0, r7
9000f982:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f984:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f988:	075b      	lsls	r3, r3, #29
9000f98a:	d5bf      	bpl.n	9000f90c <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000f98c:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f98e:	9901      	ldr	r1, [sp, #4]
9000f990:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9000f992:	b172      	cbz	r2, 9000f9b2 <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000f994:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f996:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000f99a:	2300      	movs	r3, #0
9000f99c:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f99e:	f7ff fe37 	bl	9000f610 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f9a2:	2300      	movs	r3, #0
9000f9a4:	a904      	add	r1, sp, #16
9000f9a6:	6820      	ldr	r0, [r4, #0]
9000f9a8:	461a      	mov	r2, r3
9000f9aa:	f7fe f8a3 	bl	9000daf4 <xQueueGenericSend>
							configASSERT( xResult );
9000f9ae:	2800      	cmp	r0, #0
9000f9b0:	d1ac      	bne.n	9000f90c <prvTimerTask+0x68>
9000f9b2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9b6:	f383 8811 	msr	BASEPRI, r3
9000f9ba:	f3bf 8f6f 	isb	sy
9000f9be:	f3bf 8f4f 	dsb	sy
9000f9c2:	e7fe      	b.n	9000f9c2 <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000f9c4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f9c8:	f043 0301 	orr.w	r3, r3, #1
9000f9cc:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000f9d0:	9b01      	ldr	r3, [sp, #4]
9000f9d2:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000f9d4:	2b00      	cmp	r3, #0
9000f9d6:	f000 809e 	beq.w	9000fb16 <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000f9da:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f9dc:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f9de:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000f9e0:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000f9e2:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000f9e4:	d856      	bhi.n	9000fa94 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000f9e6:	4b53      	ldr	r3, [pc, #332]	; (9000fb34 <prvTimerTask+0x290>)
9000f9e8:	6818      	ldr	r0, [r3, #0]
9000f9ea:	f7fd fcf7 	bl	9000d3dc <vListInsert>
	return xProcessTimerNow;
9000f9ee:	e78d      	b.n	9000f90c <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000f9f0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000f9f4:	f023 0301 	bic.w	r3, r3, #1
9000f9f8:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
9000f9fc:	e786      	b.n	9000f90c <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000f9fe:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fa02:	079a      	lsls	r2, r3, #30
9000fa04:	d572      	bpl.n	9000faec <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fa06:	f023 0301 	bic.w	r3, r3, #1
9000fa0a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
9000fa0e:	e77d      	b.n	9000f90c <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fa10:	9b01      	ldr	r3, [sp, #4]
9000fa12:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
9000fa16:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fa18:	9b00      	ldr	r3, [sp, #0]
9000fa1a:	2b00      	cmp	r3, #0
9000fa1c:	f6ff af76 	blt.w	9000f90c <prvTimerTask+0x68>
9000fa20:	e77e      	b.n	9000f920 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9000fa22:	f7ff fc1f 	bl	9000f264 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fa26:	f7ff fc35 	bl	9000f294 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fa2a:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fa2c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fa2e:	4282      	cmp	r2, r0
9000fa30:	d909      	bls.n	9000fa46 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fa32:	f7ff fee9 	bl	9000f808 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fa36:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fa3a:	f7ff fc1b 	bl	9000f274 <xTaskResumeAll>
9000fa3e:	e765      	b.n	9000f90c <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fa40:	f7ff fee2 	bl	9000f808 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000fa44:	e779      	b.n	9000f93a <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fa46:	4b3b      	ldr	r3, [pc, #236]	; (9000fb34 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000fa48:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fa4c:	681a      	ldr	r2, [r3, #0]
9000fa4e:	6812      	ldr	r2, [r2, #0]
9000fa50:	fab2 f282 	clz	r2, r2
9000fa54:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fa56:	eba7 010a 	sub.w	r1, r7, sl
9000fa5a:	6820      	ldr	r0, [r4, #0]
9000fa5c:	f7fe ff4e 	bl	9000e8fc <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fa60:	f7ff fc08 	bl	9000f274 <xTaskResumeAll>
9000fa64:	2800      	cmp	r0, #0
9000fa66:	f47f af51 	bne.w	9000f90c <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fa6a:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000fa6e:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9000fa72:	f3bf 8f4f 	dsb	sy
9000fa76:	f3bf 8f6f 	isb	sy
9000fa7a:	e747      	b.n	9000f90c <prvTimerTask+0x68>
9000fa7c:	2200      	movs	r2, #0
9000fa7e:	e7ea      	b.n	9000fa56 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fa80:	4543      	cmp	r3, r8
9000fa82:	d902      	bls.n	9000fa8a <prvTimerTask+0x1e6>
9000fa84:	2800      	cmp	r0, #0
9000fa86:	f43f af7a 	beq.w	9000f97e <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa8a:	1d39      	adds	r1, r7, #4
9000fa8c:	6830      	ldr	r0, [r6, #0]
9000fa8e:	f7fd fca5 	bl	9000d3dc <vListInsert>
	return xProcessTimerNow;
9000fa92:	e73b      	b.n	9000f90c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa94:	6830      	ldr	r0, [r6, #0]
9000fa96:	f7fd fca1 	bl	9000d3dc <vListInsert>
9000fa9a:	e737      	b.n	9000f90c <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fa9c:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000faa0:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000faa4:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000faa6:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000faa8:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000faac:	d322      	bcc.n	9000faf4 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000faae:	ebaa 0307 	sub.w	r3, sl, r7
9000fab2:	429a      	cmp	r2, r3
9000fab4:	d829      	bhi.n	9000fb0a <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9000fab6:	6823      	ldr	r3, [r4, #0]
9000fab8:	b17b      	cbz	r3, 9000fada <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
9000faba:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fabc:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fabe:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9000fac2:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fac4:	f7ff fda4 	bl	9000f610 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fac8:	2300      	movs	r3, #0
9000faca:	a904      	add	r1, sp, #16
9000facc:	6820      	ldr	r0, [r4, #0]
9000face:	461a      	mov	r2, r3
9000fad0:	f7fe f810 	bl	9000daf4 <xQueueGenericSend>
			configASSERT( xResult );
9000fad4:	2800      	cmp	r0, #0
9000fad6:	f47f af15 	bne.w	9000f904 <prvTimerTask+0x60>
9000fada:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fade:	f383 8811 	msr	BASEPRI, r3
9000fae2:	f3bf 8f6f 	isb	sy
9000fae6:	f3bf 8f4f 	dsb	sy
9000faea:	e7fe      	b.n	9000faea <prvTimerTask+0x246>
							vPortFree( pxTimer );
9000faec:	4638      	mov	r0, r7
9000faee:	f7fd fbf1 	bl	9000d2d4 <vPortFree>
9000faf2:	e70b      	b.n	9000f90c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000faf4:	4641      	mov	r1, r8
9000faf6:	6830      	ldr	r0, [r6, #0]
9000faf8:	f7fd fc70 	bl	9000d3dc <vListInsert>
	return xProcessTimerNow;
9000fafc:	e702      	b.n	9000f904 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fafe:	4b0d      	ldr	r3, [pc, #52]	; (9000fb34 <prvTimerTask+0x290>)
9000fb00:	1d39      	adds	r1, r7, #4
9000fb02:	6818      	ldr	r0, [r3, #0]
9000fb04:	f7fd fc6a 	bl	9000d3dc <vListInsert>
	return xProcessTimerNow;
9000fb08:	e700      	b.n	9000f90c <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fb0a:	4b0a      	ldr	r3, [pc, #40]	; (9000fb34 <prvTimerTask+0x290>)
9000fb0c:	4641      	mov	r1, r8
9000fb0e:	6818      	ldr	r0, [r3, #0]
9000fb10:	f7fd fc64 	bl	9000d3dc <vListInsert>
	return xProcessTimerNow;
9000fb14:	e6f6      	b.n	9000f904 <prvTimerTask+0x60>
9000fb16:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fb1a:	f383 8811 	msr	BASEPRI, r3
9000fb1e:	f3bf 8f6f 	isb	sy
9000fb22:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fb26:	e7fe      	b.n	9000fb26 <prvTimerTask+0x282>
9000fb28:	24023434 	.word	0x24023434
9000fb2c:	24023504 	.word	0x24023504
9000fb30:	24023558 	.word	0x24023558
9000fb34:	24023438 	.word	0x24023438

9000fb38 <xTimerCreateTimerTask>:
{
9000fb38:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fb3a:	4c23      	ldr	r4, [pc, #140]	; (9000fbc8 <xTimerCreateTimerTask+0x90>)
{
9000fb3c:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
9000fb3e:	f7fd fce1 	bl	9000d504 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fb42:	6825      	ldr	r5, [r4, #0]
9000fb44:	b335      	cbz	r5, 9000fb94 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fb46:	f7fd fcff 	bl	9000d548 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fb4a:	6823      	ldr	r3, [r4, #0]
9000fb4c:	b1cb      	cbz	r3, 9000fb82 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fb4e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fb50:	aa07      	add	r2, sp, #28
9000fb52:	a906      	add	r1, sp, #24
9000fb54:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fb56:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fb58:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fb5c:	f7fd faec 	bl	9000d138 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fb60:	4623      	mov	r3, r4
9000fb62:	9a07      	ldr	r2, [sp, #28]
9000fb64:	9500      	str	r5, [sp, #0]
9000fb66:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fb6a:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fb6e:	4917      	ldr	r1, [pc, #92]	; (9000fbcc <xTimerCreateTimerTask+0x94>)
9000fb70:	4817      	ldr	r0, [pc, #92]	; (9000fbd0 <xTimerCreateTimerTask+0x98>)
9000fb72:	f7ff f93f 	bl	9000edf4 <xTaskCreateStatic>
9000fb76:	4b17      	ldr	r3, [pc, #92]	; (9000fbd4 <xTimerCreateTimerTask+0x9c>)
9000fb78:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fb7a:	b110      	cbz	r0, 9000fb82 <xTimerCreateTimerTask+0x4a>
}
9000fb7c:	2001      	movs	r0, #1
9000fb7e:	b009      	add	sp, #36	; 0x24
9000fb80:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fb82:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fb86:	f383 8811 	msr	BASEPRI, r3
9000fb8a:	f3bf 8f6f 	isb	sy
9000fb8e:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fb92:	e7fe      	b.n	9000fb92 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fb94:	4f10      	ldr	r7, [pc, #64]	; (9000fbd8 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fb96:	4e11      	ldr	r6, [pc, #68]	; (9000fbdc <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fb98:	4638      	mov	r0, r7
9000fb9a:	f7fd fbff 	bl	9000d39c <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fb9e:	4630      	mov	r0, r6
9000fba0:	f7fd fbfc 	bl	9000d39c <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fba4:	4a0e      	ldr	r2, [pc, #56]	; (9000fbe0 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fba6:	9500      	str	r5, [sp, #0]
9000fba8:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fbaa:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fbac:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fbae:	4a0d      	ldr	r2, [pc, #52]	; (9000fbe4 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fbb0:	4b0d      	ldr	r3, [pc, #52]	; (9000fbe8 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fbb2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fbb4:	4a0d      	ldr	r2, [pc, #52]	; (9000fbec <xTimerCreateTimerTask+0xb4>)
9000fbb6:	f7fd fe47 	bl	9000d848 <xQueueGenericCreateStatic>
9000fbba:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fbbc:	2800      	cmp	r0, #0
9000fbbe:	d0c2      	beq.n	9000fb46 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fbc0:	490b      	ldr	r1, [pc, #44]	; (9000fbf0 <xTimerCreateTimerTask+0xb8>)
9000fbc2:	f7fe fe73 	bl	9000e8ac <vQueueAddToRegistry>
9000fbc6:	e7be      	b.n	9000fb46 <xTimerCreateTimerTask+0xe>
9000fbc8:	24023558 	.word	0x24023558
9000fbcc:	90029f30 	.word	0x90029f30
9000fbd0:	9000f8a5 	.word	0x9000f8a5
9000fbd4:	2402355c 	.word	0x2402355c
9000fbd8:	240234dc 	.word	0x240234dc
9000fbdc:	240234f0 	.word	0x240234f0
9000fbe0:	24023434 	.word	0x24023434
9000fbe4:	24023438 	.word	0x24023438
9000fbe8:	24023508 	.word	0x24023508
9000fbec:	2402343c 	.word	0x2402343c
9000fbf0:	90029f28 	.word	0x90029f28

9000fbf4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fbf4:	8880      	ldrh	r0, [r0, #4]
9000fbf6:	4770      	bx	lr

9000fbf8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fbf8:	b570      	push	{r4, r5, r6, lr}
9000fbfa:	6803      	ldr	r3, [r0, #0]
9000fbfc:	460c      	mov	r4, r1
9000fbfe:	2100      	movs	r1, #0
9000fc00:	4605      	mov	r5, r0
9000fc02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fc04:	4798      	blx	r3
9000fc06:	4606      	mov	r6, r0
9000fc08:	682b      	ldr	r3, [r5, #0]
9000fc0a:	4628      	mov	r0, r5
9000fc0c:	1ba4      	subs	r4, r4, r6
9000fc0e:	6a1b      	ldr	r3, [r3, #32]
9000fc10:	b2a4      	uxth	r4, r4
9000fc12:	4798      	blx	r3
9000fc14:	fbb4 f0f0 	udiv	r0, r4, r0
9000fc18:	bd70      	pop	{r4, r5, r6, pc}

9000fc1a <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fc1a:	2300      	movs	r3, #0
9000fc1c:	8083      	strh	r3, [r0, #4]
9000fc1e:	4770      	bx	lr

9000fc20 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fc20:	b510      	push	{r4, lr}
9000fc22:	6803      	ldr	r3, [r0, #0]
9000fc24:	4604      	mov	r4, r0
9000fc26:	8881      	ldrh	r1, [r0, #4]
9000fc28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fc2a:	4798      	blx	r3
9000fc2c:	88a3      	ldrh	r3, [r4, #4]
9000fc2e:	3301      	adds	r3, #1
9000fc30:	80a3      	strh	r3, [r4, #4]
9000fc32:	bd10      	pop	{r4, pc}

9000fc34 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fc34:	6803      	ldr	r3, [r0, #0]
9000fc36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fc38:	4718      	bx	r3

9000fc3a <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fc3a:	4770      	bx	lr

9000fc3c <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fc3c:	4a02      	ldr	r2, [pc, #8]	; (9000fc48 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fc3e:	6002      	str	r2, [r0, #0]
9000fc40:	2200      	movs	r2, #0
9000fc42:	8082      	strh	r2, [r0, #4]
9000fc44:	4770      	bx	lr
9000fc46:	bf00      	nop
9000fc48:	90029f40 	.word	0x90029f40

9000fc4c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fc4c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fc4e:	2000      	movs	r0, #0
9000fc50:	b12b      	cbz	r3, 9000fc5e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fc52:	b920      	cbnz	r0, 9000fc5e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fc54:	1a5a      	subs	r2, r3, r1
9000fc56:	699b      	ldr	r3, [r3, #24]
9000fc58:	4250      	negs	r0, r2
9000fc5a:	4150      	adcs	r0, r2
9000fc5c:	e7f8      	b.n	9000fc50 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fc5e:	4770      	bx	lr

9000fc60 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fc60:	2300      	movs	r3, #0
9000fc62:	6148      	str	r0, [r1, #20]
9000fc64:	618b      	str	r3, [r1, #24]
9000fc66:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fc68:	b913      	cbnz	r3, 9000fc70 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fc6a:	6281      	str	r1, [r0, #40]	; 0x28
9000fc6c:	4770      	bx	lr
9000fc6e:	4613      	mov	r3, r2
9000fc70:	699a      	ldr	r2, [r3, #24]
9000fc72:	2a00      	cmp	r2, #0
9000fc74:	d1fb      	bne.n	9000fc6e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fc76:	6199      	str	r1, [r3, #24]
9000fc78:	4770      	bx	lr

9000fc7a <_ZN8touchgfx9Container9removeAllEv>:
9000fc7a:	2200      	movs	r2, #0
9000fc7c:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fc7e:	b123      	cbz	r3, 9000fc8a <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fc80:	6999      	ldr	r1, [r3, #24]
9000fc82:	6281      	str	r1, [r0, #40]	; 0x28
9000fc84:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fc88:	e7f8      	b.n	9000fc7c <_ZN8touchgfx9Container9removeAllEv+0x2>
9000fc8a:	4770      	bx	lr

9000fc8c <_ZN8touchgfx9Container6unlinkEv>:
9000fc8c:	2300      	movs	r3, #0
9000fc8e:	6283      	str	r3, [r0, #40]	; 0x28
9000fc90:	4770      	bx	lr

9000fc92 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fc92:	2200      	movs	r2, #0
9000fc94:	8002      	strh	r2, [r0, #0]
9000fc96:	8042      	strh	r2, [r0, #2]
9000fc98:	8082      	strh	r2, [r0, #4]
9000fc9a:	80c2      	strh	r2, [r0, #6]
9000fc9c:	4770      	bx	lr

9000fc9e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fc9e:	b570      	push	{r4, r5, r6, lr}
9000fca0:	460d      	mov	r5, r1
9000fca2:	4616      	mov	r6, r2
9000fca4:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fca6:	b13c      	cbz	r4, 9000fcb8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fca8:	6823      	ldr	r3, [r4, #0]
9000fcaa:	4620      	mov	r0, r4
9000fcac:	4632      	mov	r2, r6
9000fcae:	4629      	mov	r1, r5
9000fcb0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fcb2:	4798      	blx	r3
9000fcb4:	69a4      	ldr	r4, [r4, #24]
9000fcb6:	e7f6      	b.n	9000fca6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fcb8:	bd70      	pop	{r4, r5, r6, pc}

9000fcba <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000fcba:	b538      	push	{r3, r4, r5, lr}
9000fcbc:	460d      	mov	r5, r1
9000fcbe:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fcc0:	b134      	cbz	r4, 9000fcd0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fcc2:	682b      	ldr	r3, [r5, #0]
9000fcc4:	4621      	mov	r1, r4
9000fcc6:	4628      	mov	r0, r5
9000fcc8:	689b      	ldr	r3, [r3, #8]
9000fcca:	4798      	blx	r3
9000fccc:	69a4      	ldr	r4, [r4, #24]
9000fcce:	e7f7      	b.n	9000fcc0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fcd0:	bd38      	pop	{r3, r4, r5, pc}

9000fcd2 <_ZN8touchgfx9ContainerD1Ev>:
9000fcd2:	4770      	bx	lr

9000fcd4 <_ZN8touchgfx9ContainerD0Ev>:
9000fcd4:	b510      	push	{r4, lr}
9000fcd6:	4604      	mov	r4, r0
9000fcd8:	212c      	movs	r1, #44	; 0x2c
9000fcda:	f016 f9b2 	bl	90026042 <_ZdlPvj>
9000fcde:	4620      	mov	r0, r4
9000fce0:	bd10      	pop	{r4, pc}

9000fce2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fce2:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fce4:	b19b      	cbz	r3, 9000fd0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fce6:	428b      	cmp	r3, r1
9000fce8:	d109      	bne.n	9000fcfe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fcea:	699a      	ldr	r2, [r3, #24]
9000fcec:	2100      	movs	r1, #0
9000fcee:	6159      	str	r1, [r3, #20]
9000fcf0:	6282      	str	r2, [r0, #40]	; 0x28
9000fcf2:	b902      	cbnz	r2, 9000fcf6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000fcf4:	4770      	bx	lr
9000fcf6:	6199      	str	r1, [r3, #24]
9000fcf8:	4770      	bx	lr
9000fcfa:	4613      	mov	r3, r2
9000fcfc:	b13a      	cbz	r2, 9000fd0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fcfe:	699a      	ldr	r2, [r3, #24]
9000fd00:	428a      	cmp	r2, r1
9000fd02:	d1fa      	bne.n	9000fcfa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000fd04:	698a      	ldr	r2, [r1, #24]
9000fd06:	619a      	str	r2, [r3, #24]
9000fd08:	2300      	movs	r3, #0
9000fd0a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000fd0e:	4770      	bx	lr

9000fd10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000fd10:	b410      	push	{r4}
9000fd12:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fd14:	4604      	mov	r4, r0
9000fd16:	b92b      	cbnz	r3, 9000fd24 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000fd18:	6803      	ldr	r3, [r0, #0]
9000fd1a:	4611      	mov	r1, r2
9000fd1c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fd20:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000fd22:	4718      	bx	r3
9000fd24:	b941      	cbnz	r1, 9000fd38 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000fd26:	6193      	str	r3, [r2, #24]
9000fd28:	6282      	str	r2, [r0, #40]	; 0x28
9000fd2a:	6154      	str	r4, [r2, #20]
9000fd2c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fd30:	4770      	bx	lr
9000fd32:	4603      	mov	r3, r0
9000fd34:	2800      	cmp	r0, #0
9000fd36:	d0f9      	beq.n	9000fd2c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000fd38:	4299      	cmp	r1, r3
9000fd3a:	6998      	ldr	r0, [r3, #24]
9000fd3c:	d1f9      	bne.n	9000fd32 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000fd3e:	6190      	str	r0, [r2, #24]
9000fd40:	618a      	str	r2, [r1, #24]
9000fd42:	e7f2      	b.n	9000fd2a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000fd44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000fd44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fd48:	461f      	mov	r7, r3
9000fd4a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000fd4e:	460d      	mov	r5, r1
9000fd50:	4616      	mov	r6, r2
9000fd52:	b103      	cbz	r3, 9000fd56 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000fd54:	6038      	str	r0, [r7, #0]
9000fd56:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fd58:	b314      	cbz	r4, 9000fda0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000fd5a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000fd5e:	b1eb      	cbz	r3, 9000fd9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fd60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000fd64:	428d      	cmp	r5, r1
9000fd66:	db19      	blt.n	9000fd9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fd68:	b289      	uxth	r1, r1
9000fd6a:	8923      	ldrh	r3, [r4, #8]
9000fd6c:	440b      	add	r3, r1
9000fd6e:	b21b      	sxth	r3, r3
9000fd70:	429d      	cmp	r5, r3
9000fd72:	da13      	bge.n	9000fd9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fd74:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000fd78:	4296      	cmp	r6, r2
9000fd7a:	db0f      	blt.n	9000fd9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fd7c:	b292      	uxth	r2, r2
9000fd7e:	8963      	ldrh	r3, [r4, #10]
9000fd80:	4413      	add	r3, r2
9000fd82:	b21b      	sxth	r3, r3
9000fd84:	429e      	cmp	r6, r3
9000fd86:	da09      	bge.n	9000fd9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fd88:	6823      	ldr	r3, [r4, #0]
9000fd8a:	1ab2      	subs	r2, r6, r2
9000fd8c:	1a69      	subs	r1, r5, r1
9000fd8e:	4620      	mov	r0, r4
9000fd90:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9000fd94:	b212      	sxth	r2, r2
9000fd96:	463b      	mov	r3, r7
9000fd98:	b209      	sxth	r1, r1
9000fd9a:	47c0      	blx	r8
9000fd9c:	69a4      	ldr	r4, [r4, #24]
9000fd9e:	e7db      	b.n	9000fd58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000fda0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000fda4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000fda4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fda8:	4c6d      	ldr	r4, [pc, #436]	; (9000ff60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000fdaa:	b0a1      	sub	sp, #132	; 0x84
9000fdac:	4606      	mov	r6, r0
9000fdae:	6824      	ldr	r4, [r4, #0]
9000fdb0:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9000fdb2:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9000fdb6:	2400      	movs	r4, #0
9000fdb8:	9303      	str	r3, [sp, #12]
9000fdba:	802c      	strh	r4, [r5, #0]
9000fdbc:	9d2b      	ldr	r5, [sp, #172]	; 0xac
9000fdbe:	802c      	strh	r4, [r5, #0]
9000fdc0:	601c      	str	r4, [r3, #0]
9000fdc2:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000fdc6:	f7ff ffbd 	bl	9000fd44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fdca:	f1b9 0f03 	cmp.w	r9, #3
9000fdce:	f340 80c1 	ble.w	9000ff54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000fdd2:	4631      	mov	r1, r6
9000fdd4:	a80c      	add	r0, sp, #48	; 0x30
9000fdd6:	f006 f8fb 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fdda:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9000fdde:	9306      	str	r3, [sp, #24]
9000fde0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9000fde4:	9307      	str	r3, [sp, #28]
9000fde6:	9b03      	ldr	r3, [sp, #12]
9000fde8:	f8d3 a000 	ldr.w	sl, [r3]
9000fdec:	f1ba 0f00 	cmp.w	sl, #0
9000fdf0:	f000 80b3 	beq.w	9000ff5a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000fdf4:	4651      	mov	r1, sl
9000fdf6:	a810      	add	r0, sp, #64	; 0x40
9000fdf8:	f006 f8ea 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000fdfc:	2002      	movs	r0, #2
9000fdfe:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
9000fe02:	9b01      	ldr	r3, [sp, #4]
9000fe04:	9a06      	ldr	r2, [sp, #24]
9000fe06:	fb91 f1f0 	sdiv	r1, r1, r0
9000fe0a:	189d      	adds	r5, r3, r2
9000fe0c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
9000fe10:	9a07      	ldr	r2, [sp, #28]
9000fe12:	4419      	add	r1, r3
9000fe14:	9b02      	ldr	r3, [sp, #8]
9000fe16:	4413      	add	r3, r2
9000fe18:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
9000fe1c:	1a6d      	subs	r5, r5, r1
9000fe1e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
9000fe22:	fb92 f2f0 	sdiv	r2, r2, r0
9000fe26:	440a      	add	r2, r1
9000fe28:	1a9b      	subs	r3, r3, r2
9000fe2a:	435b      	muls	r3, r3
9000fe2c:	fb05 3505 	mla	r5, r5, r5, r3
9000fe30:	4f4c      	ldr	r7, [pc, #304]	; (9000ff64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000fe32:	ac10      	add	r4, sp, #64	; 0x40
9000fe34:	f1b9 0f0c 	cmp.w	r9, #12
9000fe38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fe3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fe3c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fe3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fe40:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000fe42:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000fe44:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000fe48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000fe4c:	f04f 0303 	mov.w	r3, #3
9000fe50:	bfd8      	it	le
9000fe52:	f109 32ff 	addle.w	r2, r9, #4294967295
9000fe56:	f04f 0400 	mov.w	r4, #0
9000fe5a:	f8cd 9000 	str.w	r9, [sp]
9000fe5e:	bfcc      	ite	gt
9000fe60:	4698      	movgt	r8, r3
9000fe62:	fb92 f8f3 	sdivle	r8, r2, r3
9000fe66:	1c63      	adds	r3, r4, #1
9000fe68:	aa10      	add	r2, sp, #64	; 0x40
9000fe6a:	f004 0401 	and.w	r4, r4, #1
9000fe6e:	f04f 0b00 	mov.w	fp, #0
9000fe72:	9308      	str	r3, [sp, #32]
9000fe74:	9b00      	ldr	r3, [sp, #0]
9000fe76:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000fe7a:	fb93 f3f8 	sdiv	r3, r3, r8
9000fe7e:	3404      	adds	r4, #4
9000fe80:	b29b      	uxth	r3, r3
9000fe82:	9304      	str	r3, [sp, #16]
9000fe84:	9a04      	ldr	r2, [sp, #16]
9000fe86:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000fe8a:	fb13 f302 	smulbb	r3, r3, r2
9000fe8e:	9a01      	ldr	r2, [sp, #4]
9000fe90:	b29b      	uxth	r3, r3
9000fe92:	1899      	adds	r1, r3, r2
9000fe94:	9305      	str	r3, [sp, #20]
9000fe96:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9000fe9a:	b209      	sxth	r1, r1
9000fe9c:	4299      	cmp	r1, r3
9000fe9e:	db4d      	blt.n	9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fea0:	8932      	ldrh	r2, [r6, #8]
9000fea2:	4413      	add	r3, r2
9000fea4:	b21b      	sxth	r3, r3
9000fea6:	4299      	cmp	r1, r3
9000fea8:	da48      	bge.n	9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000feaa:	9b04      	ldr	r3, [sp, #16]
9000feac:	6827      	ldr	r7, [r4, #0]
9000feae:	fb17 f703 	smulbb	r7, r7, r3
9000feb2:	9b02      	ldr	r3, [sp, #8]
9000feb4:	b2bf      	uxth	r7, r7
9000feb6:	18fa      	adds	r2, r7, r3
9000feb8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9000febc:	b212      	sxth	r2, r2
9000febe:	429a      	cmp	r2, r3
9000fec0:	db3c      	blt.n	9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fec2:	8970      	ldrh	r0, [r6, #10]
9000fec4:	4403      	add	r3, r0
9000fec6:	b21b      	sxth	r3, r3
9000fec8:	429a      	cmp	r2, r3
9000feca:	da37      	bge.n	9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fecc:	2300      	movs	r3, #0
9000fece:	4630      	mov	r0, r6
9000fed0:	930b      	str	r3, [sp, #44]	; 0x2c
9000fed2:	ab0b      	add	r3, sp, #44	; 0x2c
9000fed4:	f7ff ff36 	bl	9000fd44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fed8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9000feda:	b37a      	cbz	r2, 9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fedc:	4552      	cmp	r2, sl
9000fede:	d02d      	beq.n	9000ff3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9000fee0:	4611      	mov	r1, r2
9000fee2:	a80e      	add	r0, sp, #56	; 0x38
9000fee4:	9209      	str	r2, [sp, #36]	; 0x24
9000fee6:	f006 f873 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000feea:	f04f 0e02 	mov.w	lr, #2
9000feee:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
9000fef2:	9a06      	ldr	r2, [sp, #24]
9000fef4:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
9000fef8:	9b01      	ldr	r3, [sp, #4]
9000fefa:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
9000fefe:	4413      	add	r3, r2
9000ff00:	9a07      	ldr	r2, [sp, #28]
9000ff02:	fb91 f1fe 	sdiv	r1, r1, lr
9000ff06:	fb9c fcfe 	sdiv	ip, ip, lr
9000ff0a:	4401      	add	r1, r0
9000ff0c:	1a58      	subs	r0, r3, r1
9000ff0e:	9b02      	ldr	r3, [sp, #8]
9000ff10:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
9000ff14:	4413      	add	r3, r2
9000ff16:	9a09      	ldr	r2, [sp, #36]	; 0x24
9000ff18:	448c      	add	ip, r1
9000ff1a:	eba3 030c 	sub.w	r3, r3, ip
9000ff1e:	435b      	muls	r3, r3
9000ff20:	fb00 3300 	mla	r3, r0, r0, r3
9000ff24:	42ab      	cmp	r3, r5
9000ff26:	d208      	bcs.n	9000ff3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
9000ff28:	990b      	ldr	r1, [sp, #44]	; 0x2c
9000ff2a:	461d      	mov	r5, r3
9000ff2c:	9803      	ldr	r0, [sp, #12]
9000ff2e:	6001      	str	r1, [r0, #0]
9000ff30:	992a      	ldr	r1, [sp, #168]	; 0xa8
9000ff32:	9805      	ldr	r0, [sp, #20]
9000ff34:	8008      	strh	r0, [r1, #0]
9000ff36:	992b      	ldr	r1, [sp, #172]	; 0xac
9000ff38:	800f      	strh	r7, [r1, #0]
9000ff3a:	4692      	mov	sl, r2
9000ff3c:	f10b 0b01 	add.w	fp, fp, #1
9000ff40:	3408      	adds	r4, #8
9000ff42:	f1bb 0f04 	cmp.w	fp, #4
9000ff46:	d19d      	bne.n	9000fe84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
9000ff48:	9b00      	ldr	r3, [sp, #0]
9000ff4a:	9c08      	ldr	r4, [sp, #32]
9000ff4c:	444b      	add	r3, r9
9000ff4e:	4544      	cmp	r4, r8
9000ff50:	9300      	str	r3, [sp, #0]
9000ff52:	d188      	bne.n	9000fe66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
9000ff54:	b021      	add	sp, #132	; 0x84
9000ff56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000ff5a:	f04f 35ff 	mov.w	r5, #4294967295
9000ff5e:	e767      	b.n	9000fe30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
9000ff60:	2402356c 	.word	0x2402356c
9000ff64:	900271c4 	.word	0x900271c4

9000ff68 <_ZN8touchgfx4RectaNERKS0_>:
9000ff68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ff6c:	f9b1 7000 	ldrsh.w	r7, [r1]
9000ff70:	888c      	ldrh	r4, [r1, #4]
9000ff72:	f9b0 9000 	ldrsh.w	r9, [r0]
9000ff76:	443c      	add	r4, r7
9000ff78:	b2a4      	uxth	r4, r4
9000ff7a:	fa0f f884 	sxth.w	r8, r4
9000ff7e:	45c1      	cmp	r9, r8
9000ff80:	da2f      	bge.n	9000ffe2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000ff82:	8882      	ldrh	r2, [r0, #4]
9000ff84:	444a      	add	r2, r9
9000ff86:	b292      	uxth	r2, r2
9000ff88:	fa0f fe82 	sxth.w	lr, r2
9000ff8c:	4577      	cmp	r7, lr
9000ff8e:	da28      	bge.n	9000ffe2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000ff90:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
9000ff94:	88cb      	ldrh	r3, [r1, #6]
9000ff96:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9000ff9a:	442b      	add	r3, r5
9000ff9c:	b21b      	sxth	r3, r3
9000ff9e:	429e      	cmp	r6, r3
9000ffa0:	da1f      	bge.n	9000ffe2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000ffa2:	88c3      	ldrh	r3, [r0, #6]
9000ffa4:	4433      	add	r3, r6
9000ffa6:	b29b      	uxth	r3, r3
9000ffa8:	fa0f fc83 	sxth.w	ip, r3
9000ffac:	4565      	cmp	r5, ip
9000ffae:	da18      	bge.n	9000ffe2 <_ZN8touchgfx4RectaNERKS0_+0x7a>
9000ffb0:	454f      	cmp	r7, r9
9000ffb2:	bfb8      	it	lt
9000ffb4:	464f      	movlt	r7, r9
9000ffb6:	42b5      	cmp	r5, r6
9000ffb8:	bfb8      	it	lt
9000ffba:	4635      	movlt	r5, r6
9000ffbc:	45f0      	cmp	r8, lr
9000ffbe:	bfd8      	it	le
9000ffc0:	4622      	movle	r2, r4
9000ffc2:	1bd2      	subs	r2, r2, r7
9000ffc4:	8082      	strh	r2, [r0, #4]
9000ffc6:	884a      	ldrh	r2, [r1, #2]
9000ffc8:	88c9      	ldrh	r1, [r1, #6]
9000ffca:	8007      	strh	r7, [r0, #0]
9000ffcc:	440a      	add	r2, r1
9000ffce:	8045      	strh	r5, [r0, #2]
9000ffd0:	b292      	uxth	r2, r2
9000ffd2:	b211      	sxth	r1, r2
9000ffd4:	458c      	cmp	ip, r1
9000ffd6:	bfa8      	it	ge
9000ffd8:	4613      	movge	r3, r2
9000ffda:	1b5b      	subs	r3, r3, r5
9000ffdc:	80c3      	strh	r3, [r0, #6]
9000ffde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9000ffe2:	2300      	movs	r3, #0
9000ffe4:	8003      	strh	r3, [r0, #0]
9000ffe6:	8043      	strh	r3, [r0, #2]
9000ffe8:	8083      	strh	r3, [r0, #4]
9000ffea:	80c3      	strh	r3, [r0, #6]
9000ffec:	e7f7      	b.n	9000ffde <_ZN8touchgfx4RectaNERKS0_+0x76>

9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>:
9000ffee:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9000fff2:	2b00      	cmp	r3, #0
9000fff4:	dd06      	ble.n	90010004 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
9000fff6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9000fffa:	2800      	cmp	r0, #0
9000fffc:	bfcc      	ite	gt
9000fffe:	2000      	movgt	r0, #0
90010000:	2001      	movle	r0, #1
90010002:	4770      	bx	lr
90010004:	2001      	movs	r0, #1
90010006:	4770      	bx	lr

90010008 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001000c:	2300      	movs	r3, #0
9001000e:	4604      	mov	r4, r0
90010010:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90010012:	8003      	strh	r3, [r0, #0]
90010014:	8043      	strh	r3, [r0, #2]
90010016:	8083      	strh	r3, [r0, #4]
90010018:	80c3      	strh	r3, [r0, #6]
9001001a:	2d00      	cmp	r5, #0
9001001c:	d040      	beq.n	900100a0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001001e:	1d28      	adds	r0, r5, #4
90010020:	f7ff ffe5 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90010024:	b988      	cbnz	r0, 9001004a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010026:	4620      	mov	r0, r4
90010028:	f7ff ffe1 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001002c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010030:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010034:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010038:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001003c:	b138      	cbz	r0, 9001004e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001003e:	8022      	strh	r2, [r4, #0]
90010040:	8063      	strh	r3, [r4, #2]
90010042:	f8a4 e004 	strh.w	lr, [r4, #4]
90010046:	f8a4 c006 	strh.w	ip, [r4, #6]
9001004a:	69ad      	ldr	r5, [r5, #24]
9001004c:	e7e5      	b.n	9001001a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001004e:	f9b4 0000 	ldrsh.w	r0, [r4]
90010052:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010056:	4290      	cmp	r0, r2
90010058:	4607      	mov	r7, r0
9001005a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001005e:	460e      	mov	r6, r1
90010060:	bfa8      	it	ge
90010062:	4617      	movge	r7, r2
90010064:	4299      	cmp	r1, r3
90010066:	4472      	add	r2, lr
90010068:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9001006c:	bfa8      	it	ge
9001006e:	461e      	movge	r6, r3
90010070:	4440      	add	r0, r8
90010072:	4471      	add	r1, lr
90010074:	4463      	add	r3, ip
90010076:	b200      	sxth	r0, r0
90010078:	8027      	strh	r7, [r4, #0]
9001007a:	b212      	sxth	r2, r2
9001007c:	8066      	strh	r6, [r4, #2]
9001007e:	b209      	sxth	r1, r1
90010080:	b21b      	sxth	r3, r3
90010082:	4290      	cmp	r0, r2
90010084:	bfac      	ite	ge
90010086:	ebc7 0200 	rsbge	r2, r7, r0
9001008a:	ebc7 0202 	rsblt	r2, r7, r2
9001008e:	4299      	cmp	r1, r3
90010090:	bfac      	ite	ge
90010092:	ebc6 0301 	rsbge	r3, r6, r1
90010096:	ebc6 0303 	rsblt	r3, r6, r3
9001009a:	80a2      	strh	r2, [r4, #4]
9001009c:	80e3      	strh	r3, [r4, #6]
9001009e:	e7d4      	b.n	9001004a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900100a0:	4620      	mov	r0, r4
900100a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900100a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900100a6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900100aa:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
900100ae:	b383      	cbz	r3, 90010112 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900100b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
900100b2:	b374      	cbz	r4, 90010112 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900100b4:	f9b1 5000 	ldrsh.w	r5, [r1]
900100b8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900100bc:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900100c0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900100c4:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
900100c8:	b303      	cbz	r3, 9001010c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900100ca:	4668      	mov	r0, sp
900100cc:	1d21      	adds	r1, r4, #4
900100ce:	f8ad 5000 	strh.w	r5, [sp]
900100d2:	f8ad 6002 	strh.w	r6, [sp, #2]
900100d6:	f8ad 7004 	strh.w	r7, [sp, #4]
900100da:	f8ad 8006 	strh.w	r8, [sp, #6]
900100de:	f7ff ff43 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
900100e2:	4668      	mov	r0, sp
900100e4:	f7ff ff83 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
900100e8:	b980      	cbnz	r0, 9001010c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900100ea:	f8bd 3000 	ldrh.w	r3, [sp]
900100ee:	4669      	mov	r1, sp
900100f0:	88a2      	ldrh	r2, [r4, #4]
900100f2:	4620      	mov	r0, r4
900100f4:	1a9b      	subs	r3, r3, r2
900100f6:	88e2      	ldrh	r2, [r4, #6]
900100f8:	f8ad 3000 	strh.w	r3, [sp]
900100fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010100:	1a9b      	subs	r3, r3, r2
90010102:	f8ad 3002 	strh.w	r3, [sp, #2]
90010106:	6823      	ldr	r3, [r4, #0]
90010108:	689b      	ldr	r3, [r3, #8]
9001010a:	4798      	blx	r3
9001010c:	69a4      	ldr	r4, [r4, #24]
9001010e:	2c00      	cmp	r4, #0
90010110:	d1d8      	bne.n	900100c4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010112:	b002      	add	sp, #8
90010114:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010118 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010118:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001011a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9001011e:	460d      	mov	r5, r1
90010120:	4616      	mov	r6, r2
90010122:	b323      	cbz	r3, 9001016e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010124:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010126:	b314      	cbz	r4, 9001016e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010128:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9001012c:	b1eb      	cbz	r3, 9001016a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001012e:	6828      	ldr	r0, [r5, #0]
90010130:	466b      	mov	r3, sp
90010132:	6869      	ldr	r1, [r5, #4]
90010134:	c303      	stmia	r3!, {r0, r1}
90010136:	4668      	mov	r0, sp
90010138:	1d21      	adds	r1, r4, #4
9001013a:	f7ff ff15 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001013e:	4668      	mov	r0, sp
90010140:	f7ff ff55 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90010144:	b988      	cbnz	r0, 9001016a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010146:	f8bd 3000 	ldrh.w	r3, [sp]
9001014a:	4669      	mov	r1, sp
9001014c:	88a2      	ldrh	r2, [r4, #4]
9001014e:	4620      	mov	r0, r4
90010150:	1a9b      	subs	r3, r3, r2
90010152:	88e2      	ldrh	r2, [r4, #6]
90010154:	f8ad 3000 	strh.w	r3, [sp]
90010158:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001015c:	1a9b      	subs	r3, r3, r2
9001015e:	4632      	mov	r2, r6
90010160:	f8ad 3002 	strh.w	r3, [sp, #2]
90010164:	6823      	ldr	r3, [r4, #0]
90010166:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90010168:	4798      	blx	r3
9001016a:	69a4      	ldr	r4, [r4, #24]
9001016c:	e7db      	b.n	90010126 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001016e:	b002      	add	sp, #8
90010170:	bd70      	pop	{r4, r5, r6, pc}

90010172 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
90010172:	6803      	ldr	r3, [r0, #0]
90010174:	b513      	push	{r0, r1, r4, lr}
90010176:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
9001017a:	2300      	movs	r3, #0
9001017c:	e9cd 3300 	strd	r3, r3, [sp]
90010180:	466b      	mov	r3, sp
90010182:	47a0      	blx	r4
90010184:	b002      	add	sp, #8
90010186:	bd10      	pop	{r4, pc}

90010188 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
90010188:	2301      	movs	r3, #1
9001018a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9001018e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90010192:	4770      	bx	lr

90010194 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90010194:	2301      	movs	r3, #1
90010196:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9001019a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001019e:	4770      	bx	lr

900101a0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900101a0:	6843      	ldr	r3, [r0, #4]
900101a2:	2201      	movs	r2, #1
900101a4:	725a      	strb	r2, [r3, #9]
900101a6:	6840      	ldr	r0, [r0, #4]
900101a8:	6803      	ldr	r3, [r0, #0]
900101aa:	691b      	ldr	r3, [r3, #16]
900101ac:	4718      	bx	r3

900101ae <_ZN8touchgfx3HAL8flushDMAEv>:
900101ae:	6840      	ldr	r0, [r0, #4]
900101b0:	6803      	ldr	r3, [r0, #0]
900101b2:	689b      	ldr	r3, [r3, #8]
900101b4:	4718      	bx	r3

900101b6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900101b6:	b530      	push	{r4, r5, lr}
900101b8:	b08b      	sub	sp, #44	; 0x2c
900101ba:	6804      	ldr	r4, [r0, #0]
900101bc:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900101c0:	9509      	str	r5, [sp, #36]	; 0x24
900101c2:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
900101c6:	9508      	str	r5, [sp, #32]
900101c8:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
900101cc:	9507      	str	r5, [sp, #28]
900101ce:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
900101d2:	9506      	str	r5, [sp, #24]
900101d4:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
900101d8:	9505      	str	r5, [sp, #20]
900101da:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
900101de:	9504      	str	r5, [sp, #16]
900101e0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
900101e4:	9503      	str	r5, [sp, #12]
900101e6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
900101ea:	9502      	str	r5, [sp, #8]
900101ec:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
900101f0:	e9cd 3500 	strd	r3, r5, [sp]
900101f4:	4613      	mov	r3, r2
900101f6:	6be4      	ldr	r4, [r4, #60]	; 0x3c
900101f8:	2200      	movs	r2, #0
900101fa:	47a0      	blx	r4
900101fc:	b00b      	add	sp, #44	; 0x2c
900101fe:	bd30      	pop	{r4, r5, pc}

90010200 <_ZN8touchgfx3HAL10beginFrameEv>:
90010200:	4b04      	ldr	r3, [pc, #16]	; (90010214 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010202:	781b      	ldrb	r3, [r3, #0]
90010204:	b123      	cbz	r3, 90010210 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010206:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
9001020a:	f080 0001 	eor.w	r0, r0, #1
9001020e:	4770      	bx	lr
90010210:	2001      	movs	r0, #1
90010212:	4770      	bx	lr
90010214:	2402356a 	.word	0x2402356a

90010218 <_ZN8touchgfx3HAL8endFrameEv>:
90010218:	b510      	push	{r4, lr}
9001021a:	4604      	mov	r4, r0
9001021c:	6840      	ldr	r0, [r0, #4]
9001021e:	6803      	ldr	r3, [r0, #0]
90010220:	689b      	ldr	r3, [r3, #8]
90010222:	4798      	blx	r3
90010224:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90010228:	b113      	cbz	r3, 90010230 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001022a:	2301      	movs	r3, #1
9001022c:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010230:	bd10      	pop	{r4, pc}

90010232 <_ZN8touchgfx3HAL10initializeEv>:
90010232:	b510      	push	{r4, lr}
90010234:	4604      	mov	r4, r0
90010236:	f7f1 fbaf 	bl	90001998 <_ZN8touchgfx10OSWrappers10initializeEv>
9001023a:	f7f0 f961 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
9001023e:	6860      	ldr	r0, [r4, #4]
90010240:	6803      	ldr	r3, [r0, #0]
90010242:	68db      	ldr	r3, [r3, #12]
90010244:	4798      	blx	r3
90010246:	68e0      	ldr	r0, [r4, #12]
90010248:	6803      	ldr	r3, [r0, #0]
9001024a:	689b      	ldr	r3, [r3, #8]
9001024c:	4798      	blx	r3
9001024e:	6823      	ldr	r3, [r4, #0]
90010250:	4620      	mov	r0, r4
90010252:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90010254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010258:	4718      	bx	r3
	...

9001025c <_ZN8touchgfx3HAL4tickEv>:
9001025c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001025e:	6803      	ldr	r3, [r0, #0]
90010260:	4604      	mov	r4, r0
90010262:	4d5b      	ldr	r5, [pc, #364]	; (900103d0 <_ZN8touchgfx3HAL4tickEv+0x174>)
90010264:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
90010268:	4798      	blx	r3
9001026a:	2800      	cmp	r0, #0
9001026c:	f000 8095 	beq.w	9001039a <_ZN8touchgfx3HAL4tickEv+0x13e>
90010270:	2001      	movs	r0, #1
90010272:	2600      	movs	r6, #0
90010274:	f7f0 f96e 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010278:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
9001027c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
90010280:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90010284:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
90010288:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
9001028c:	b133      	cbz	r3, 9001029c <_ZN8touchgfx3HAL4tickEv+0x40>
9001028e:	6823      	ldr	r3, [r4, #0]
90010290:	4620      	mov	r0, r4
90010292:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90010296:	4798      	blx	r3
90010298:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
9001029c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
900102a0:	2601      	movs	r6, #1
900102a2:	6862      	ldr	r2, [r4, #4]
900102a4:	f083 0301 	eor.w	r3, r3, #1
900102a8:	702e      	strb	r6, [r5, #0]
900102aa:	7253      	strb	r3, [r2, #9]
900102ac:	f004 fd7c 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
900102b0:	6803      	ldr	r3, [r0, #0]
900102b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900102b4:	4798      	blx	r3
900102b6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900102ba:	b90b      	cbnz	r3, 900102c0 <_ZN8touchgfx3HAL4tickEv+0x64>
900102bc:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
900102c0:	f004 fd72 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
900102c4:	6803      	ldr	r3, [r0, #0]
900102c6:	695b      	ldr	r3, [r3, #20]
900102c8:	4798      	blx	r3
900102ca:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900102cc:	6803      	ldr	r3, [r0, #0]
900102ce:	691b      	ldr	r3, [r3, #16]
900102d0:	4798      	blx	r3
900102d2:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
900102d6:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
900102da:	3b01      	subs	r3, #1
900102dc:	b2db      	uxtb	r3, r3
900102de:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900102e2:	b10a      	cbz	r2, 900102e8 <_ZN8touchgfx3HAL4tickEv+0x8c>
900102e4:	2b00      	cmp	r3, #0
900102e6:	d1eb      	bne.n	900102c0 <_ZN8touchgfx3HAL4tickEv+0x64>
900102e8:	4a3a      	ldr	r2, [pc, #232]	; (900103d4 <_ZN8touchgfx3HAL4tickEv+0x178>)
900102ea:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
900102ee:	7813      	ldrb	r3, [r2, #0]
900102f0:	3301      	adds	r3, #1
900102f2:	b25b      	sxtb	r3, r3
900102f4:	4299      	cmp	r1, r3
900102f6:	7013      	strb	r3, [r2, #0]
900102f8:	dc10      	bgt.n	9001031c <_ZN8touchgfx3HAL4tickEv+0xc0>
900102fa:	2300      	movs	r3, #0
900102fc:	68e0      	ldr	r0, [r4, #12]
900102fe:	a902      	add	r1, sp, #8
90010300:	7013      	strb	r3, [r2, #0]
90010302:	aa03      	add	r2, sp, #12
90010304:	6803      	ldr	r3, [r0, #0]
90010306:	68db      	ldr	r3, [r3, #12]
90010308:	4798      	blx	r3
9001030a:	6823      	ldr	r3, [r4, #0]
9001030c:	2800      	cmp	r0, #0
9001030e:	d050      	beq.n	900103b2 <_ZN8touchgfx3HAL4tickEv+0x156>
90010310:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90010314:	4620      	mov	r0, r4
90010316:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001031a:	4798      	blx	r3
9001031c:	2300      	movs	r3, #0
9001031e:	6960      	ldr	r0, [r4, #20]
90010320:	f88d 3007 	strb.w	r3, [sp, #7]
90010324:	b158      	cbz	r0, 9001033e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010326:	6803      	ldr	r3, [r0, #0]
90010328:	f10d 0107 	add.w	r1, sp, #7
9001032c:	68db      	ldr	r3, [r3, #12]
9001032e:	4798      	blx	r3
90010330:	b128      	cbz	r0, 9001033e <_ZN8touchgfx3HAL4tickEv+0xe2>
90010332:	6de0      	ldr	r0, [r4, #92]	; 0x5c
90010334:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010338:	6803      	ldr	r3, [r0, #0]
9001033a:	68db      	ldr	r3, [r3, #12]
9001033c:	4798      	blx	r3
9001033e:	f104 001c 	add.w	r0, r4, #28
90010342:	f015 fa0b 	bl	9002575c <_ZN8touchgfx8Gestures4tickEv>
90010346:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
9001034a:	b30b      	cbz	r3, 90010390 <_ZN8touchgfx3HAL4tickEv+0x134>
9001034c:	6920      	ldr	r0, [r4, #16]
9001034e:	6803      	ldr	r3, [r0, #0]
90010350:	691b      	ldr	r3, [r3, #16]
90010352:	4798      	blx	r3
90010354:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010356:	4606      	mov	r6, r0
90010358:	b903      	cbnz	r3, 9001035c <_ZN8touchgfx3HAL4tickEv+0x100>
9001035a:	6760      	str	r0, [r4, #116]	; 0x74
9001035c:	6f63      	ldr	r3, [r4, #116]	; 0x74
9001035e:	4a1e      	ldr	r2, [pc, #120]	; (900103d8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
90010360:	1af3      	subs	r3, r6, r3
90010362:	4293      	cmp	r3, r2
90010364:	d914      	bls.n	90010390 <_ZN8touchgfx3HAL4tickEv+0x134>
90010366:	6920      	ldr	r0, [r4, #16]
90010368:	6803      	ldr	r3, [r0, #0]
9001036a:	699b      	ldr	r3, [r3, #24]
9001036c:	4798      	blx	r3
9001036e:	6f63      	ldr	r3, [r4, #116]	; 0x74
90010370:	2264      	movs	r2, #100	; 0x64
90010372:	1af3      	subs	r3, r6, r3
90010374:	fbb3 f3f2 	udiv	r3, r3, r2
90010378:	fbb0 f0f3 	udiv	r0, r0, r3
9001037c:	2800      	cmp	r0, #0
9001037e:	dc1d      	bgt.n	900103bc <_ZN8touchgfx3HAL4tickEv+0x160>
90010380:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
90010384:	6920      	ldr	r0, [r4, #16]
90010386:	2100      	movs	r1, #0
90010388:	6803      	ldr	r3, [r0, #0]
9001038a:	69db      	ldr	r3, [r3, #28]
9001038c:	4798      	blx	r3
9001038e:	6766      	str	r6, [r4, #116]	; 0x74
90010390:	f004 fd0a 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90010394:	6803      	ldr	r3, [r0, #0]
90010396:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010398:	4798      	blx	r3
9001039a:	6823      	ldr	r3, [r4, #0]
9001039c:	4620      	mov	r0, r4
9001039e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
900103a2:	4798      	blx	r3
900103a4:	2001      	movs	r0, #1
900103a6:	f7f0 f909 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900103aa:	2300      	movs	r3, #0
900103ac:	702b      	strb	r3, [r5, #0]
900103ae:	b004      	add	sp, #16
900103b0:	bd70      	pop	{r4, r5, r6, pc}
900103b2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
900103b6:	4620      	mov	r0, r4
900103b8:	4798      	blx	r3
900103ba:	e7af      	b.n	9001031c <_ZN8touchgfx3HAL4tickEv+0xc0>
900103bc:	2863      	cmp	r0, #99	; 0x63
900103be:	bfcb      	itete	gt
900103c0:	2300      	movgt	r3, #0
900103c2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
900103c6:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
900103ca:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
900103ce:	e7d9      	b.n	90010384 <_ZN8touchgfx3HAL4tickEv+0x128>
900103d0:	24023570 	.word	0x24023570
900103d4:	24023571 	.word	0x24023571
900103d8:	05f5e100 	.word	0x05f5e100

900103dc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
900103dc:	b510      	push	{r4, lr}
900103de:	4604      	mov	r4, r0
900103e0:	f7f1 fb0c 	bl	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
900103e4:	2200      	movs	r2, #0
900103e6:	6863      	ldr	r3, [r4, #4]
900103e8:	729a      	strb	r2, [r3, #10]
900103ea:	bd10      	pop	{r4, pc}

900103ec <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
900103ec:	65c1      	str	r1, [r0, #92]	; 0x5c
900103ee:	301c      	adds	r0, #28
900103f0:	f015 b9b2 	b.w	90025758 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

900103f4 <_ZN8touchgfx3HAL5touchEll>:
900103f4:	b530      	push	{r4, r5, lr}
900103f6:	b087      	sub	sp, #28
900103f8:	4604      	mov	r4, r0
900103fa:	a804      	add	r0, sp, #16
900103fc:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010400:	f004 fa9c 	bl	9001493c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010404:	9b04      	ldr	r3, [sp, #16]
90010406:	a906      	add	r1, sp, #24
90010408:	a803      	add	r0, sp, #12
9001040a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001040e:	9b05      	ldr	r3, [sp, #20]
90010410:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010414:	f004 fae4 	bl	900149e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010418:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
9001041c:	f104 001c 	add.w	r0, r4, #28
90010420:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010424:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010428:	b189      	cbz	r1, 9001044e <_ZN8touchgfx3HAL5touchEll+0x5a>
9001042a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
9001042e:	9300      	str	r3, [sp, #0]
90010430:	4613      	mov	r3, r2
90010432:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
90010436:	462a      	mov	r2, r5
90010438:	f015 f99e 	bl	90025778 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
9001043c:	b128      	cbz	r0, 9001044a <_ZN8touchgfx3HAL5touchEll+0x56>
9001043e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90010442:	6623      	str	r3, [r4, #96]	; 0x60
90010444:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010448:	6663      	str	r3, [r4, #100]	; 0x64
9001044a:	b007      	add	sp, #28
9001044c:	bd30      	pop	{r4, r5, pc}
9001044e:	f015 f9d3 	bl	900257f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010452:	2301      	movs	r3, #1
90010454:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010458:	e7f1      	b.n	9001043e <_ZN8touchgfx3HAL5touchEll+0x4a>

9001045a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
9001045a:	b510      	push	{r4, lr}
9001045c:	2b00      	cmp	r3, #0
9001045e:	d046      	beq.n	900104ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010460:	ea81 0002 	eor.w	r0, r1, r2
90010464:	07c4      	lsls	r4, r0, #31
90010466:	d508      	bpl.n	9001047a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
90010468:	440b      	add	r3, r1
9001046a:	3a01      	subs	r2, #1
9001046c:	428b      	cmp	r3, r1
9001046e:	d93e      	bls.n	900104ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010470:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010474:	f801 0b01 	strb.w	r0, [r1], #1
90010478:	e7f8      	b.n	9001046c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
9001047a:	07d0      	lsls	r0, r2, #31
9001047c:	bf42      	ittt	mi
9001047e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
90010482:	f103 33ff 	addmi.w	r3, r3, #4294967295
90010486:	f801 0b01 	strbmi.w	r0, [r1], #1
9001048a:	2b01      	cmp	r3, #1
9001048c:	d911      	bls.n	900104b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001048e:	ea81 0402 	eor.w	r4, r1, r2
90010492:	4610      	mov	r0, r2
90010494:	07a4      	lsls	r4, r4, #30
90010496:	d022      	beq.n	900104de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90010498:	f023 0401 	bic.w	r4, r3, #1
9001049c:	440c      	add	r4, r1
9001049e:	428c      	cmp	r4, r1
900104a0:	4602      	mov	r2, r0
900104a2:	d904      	bls.n	900104ae <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900104a4:	8812      	ldrh	r2, [r2, #0]
900104a6:	3002      	adds	r0, #2
900104a8:	f821 2b02 	strh.w	r2, [r1], #2
900104ac:	e7f7      	b.n	9001049e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900104ae:	f003 0301 	and.w	r3, r3, #1
900104b2:	f023 0003 	bic.w	r0, r3, #3
900104b6:	4408      	add	r0, r1
900104b8:	4288      	cmp	r0, r1
900104ba:	4614      	mov	r4, r2
900104bc:	d904      	bls.n	900104c8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
900104be:	6824      	ldr	r4, [r4, #0]
900104c0:	3204      	adds	r2, #4
900104c2:	f841 4b04 	str.w	r4, [r1], #4
900104c6:	e7f7      	b.n	900104b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
900104c8:	f003 0303 	and.w	r3, r3, #3
900104cc:	3a01      	subs	r2, #1
900104ce:	440b      	add	r3, r1
900104d0:	428b      	cmp	r3, r1
900104d2:	d90c      	bls.n	900104ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900104d4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900104d8:	f801 0b01 	strb.w	r0, [r1], #1
900104dc:	e7f8      	b.n	900104d0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
900104de:	0790      	lsls	r0, r2, #30
900104e0:	d0e7      	beq.n	900104b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900104e2:	f832 0b02 	ldrh.w	r0, [r2], #2
900104e6:	3b02      	subs	r3, #2
900104e8:	f821 0b02 	strh.w	r0, [r1], #2
900104ec:	e7e1      	b.n	900104b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900104ee:	2001      	movs	r0, #1
900104f0:	bd10      	pop	{r4, pc}

900104f2 <_ZN8touchgfx3HAL7noTouchEv>:
900104f2:	b510      	push	{r4, lr}
900104f4:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
900104f8:	4604      	mov	r4, r0
900104fa:	b153      	cbz	r3, 90010512 <_ZN8touchgfx3HAL7noTouchEv+0x20>
900104fc:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90010500:	2101      	movs	r1, #1
90010502:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
90010506:	301c      	adds	r0, #28
90010508:	f015 f976 	bl	900257f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001050c:	2300      	movs	r3, #0
9001050e:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010512:	bd10      	pop	{r4, pc}

90010514 <_ZN8touchgfx8Drawable5setXYEss>:
90010514:	b570      	push	{r4, r5, r6, lr}
90010516:	6803      	ldr	r3, [r0, #0]
90010518:	4604      	mov	r4, r0
9001051a:	4615      	mov	r5, r2
9001051c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001051e:	4798      	blx	r3
90010520:	6823      	ldr	r3, [r4, #0]
90010522:	4629      	mov	r1, r5
90010524:	4620      	mov	r0, r4
90010526:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010528:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001052c:	4718      	bx	r3
	...

90010530 <_ZN8touchgfx3HAL3lcdEv>:
90010530:	4b04      	ldr	r3, [pc, #16]	; (90010544 <_ZN8touchgfx3HAL3lcdEv+0x14>)
90010532:	681b      	ldr	r3, [r3, #0]
90010534:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90010538:	b10a      	cbz	r2, 9001053e <_ZN8touchgfx3HAL3lcdEv+0xe>
9001053a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9001053c:	b900      	cbnz	r0, 90010540 <_ZN8touchgfx3HAL3lcdEv+0x10>
9001053e:	6898      	ldr	r0, [r3, #8]
90010540:	4770      	bx	lr
90010542:	bf00      	nop
90010544:	2402356c 	.word	0x2402356c

90010548 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010548:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001054c:	b085      	sub	sp, #20
9001054e:	4604      	mov	r4, r0
90010550:	2000      	movs	r0, #0
90010552:	4699      	mov	r9, r3
90010554:	ad04      	add	r5, sp, #16
90010556:	460f      	mov	r7, r1
90010558:	4690      	mov	r8, r2
9001055a:	f845 0d04 	str.w	r0, [r5, #-4]!
9001055e:	69a0      	ldr	r0, [r4, #24]
90010560:	6806      	ldr	r6, [r0, #0]
90010562:	9501      	str	r5, [sp, #4]
90010564:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
90010568:	9500      	str	r5, [sp, #0]
9001056a:	6835      	ldr	r5, [r6, #0]
9001056c:	47a8      	blx	r5
9001056e:	4d10      	ldr	r5, [pc, #64]	; (900105b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
90010570:	4606      	mov	r6, r0
90010572:	f8a5 9000 	strh.w	r9, [r5]
90010576:	f7ff ffdb 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
9001057a:	6803      	ldr	r3, [r0, #0]
9001057c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001057e:	4798      	blx	r3
90010580:	b128      	cbz	r0, 9001058e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
90010582:	2801      	cmp	r0, #1
90010584:	d00b      	beq.n	9001059e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
90010586:	4630      	mov	r0, r6
90010588:	b005      	add	sp, #20
9001058a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001058e:	882b      	ldrh	r3, [r5, #0]
90010590:	fb08 7203 	mla	r2, r8, r3, r7
90010594:	9b03      	ldr	r3, [sp, #12]
90010596:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001059a:	63e3      	str	r3, [r4, #60]	; 0x3c
9001059c:	e7f3      	b.n	90010586 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001059e:	882a      	ldrh	r2, [r5, #0]
900105a0:	9b03      	ldr	r3, [sp, #12]
900105a2:	fb08 7202 	mla	r2, r8, r2, r7
900105a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900105aa:	1a9a      	subs	r2, r3, r2
900105ac:	63e2      	str	r2, [r4, #60]	; 0x3c
900105ae:	e7ea      	b.n	90010586 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900105b0:	24023566 	.word	0x24023566

900105b4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
900105b4:	b5f0      	push	{r4, r5, r6, r7, lr}
900105b6:	b08b      	sub	sp, #44	; 0x2c
900105b8:	4617      	mov	r7, r2
900105ba:	4604      	mov	r4, r0
900105bc:	460e      	mov	r6, r1
900105be:	461d      	mov	r5, r3
900105c0:	f7ff ffb6 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
900105c4:	6803      	ldr	r3, [r0, #0]
900105c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900105c8:	4798      	blx	r3
900105ca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900105ce:	9007      	str	r0, [sp, #28]
900105d0:	4631      	mov	r1, r6
900105d2:	6822      	ldr	r2, [r4, #0]
900105d4:	e9cd 0308 	strd	r0, r3, [sp, #32]
900105d8:	4b0c      	ldr	r3, [pc, #48]	; (9001060c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
900105da:	4620      	mov	r0, r4
900105dc:	881b      	ldrh	r3, [r3, #0]
900105de:	9306      	str	r3, [sp, #24]
900105e0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
900105e4:	9305      	str	r3, [sp, #20]
900105e6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
900105ea:	9304      	str	r3, [sp, #16]
900105ec:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900105f0:	9303      	str	r3, [sp, #12]
900105f2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900105f6:	9302      	str	r3, [sp, #8]
900105f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900105fc:	e9cd 5300 	strd	r5, r3, [sp]
90010600:	463b      	mov	r3, r7
90010602:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90010604:	2200      	movs	r2, #0
90010606:	47a8      	blx	r5
90010608:	b00b      	add	sp, #44	; 0x2c
9001060a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001060c:	24023566 	.word	0x24023566

90010610 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010610:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010614:	4698      	mov	r8, r3
90010616:	6803      	ldr	r3, [r0, #0]
90010618:	b08b      	sub	sp, #44	; 0x2c
9001061a:	4617      	mov	r7, r2
9001061c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
9001061e:	460e      	mov	r6, r1
90010620:	4b13      	ldr	r3, [pc, #76]	; (90010670 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010622:	4604      	mov	r4, r0
90010624:	f8b3 9000 	ldrh.w	r9, [r3]
90010628:	f7ff ff82 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
9001062c:	6803      	ldr	r3, [r0, #0]
9001062e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010630:	4798      	blx	r3
90010632:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010636:	2200      	movs	r2, #0
90010638:	4631      	mov	r1, r6
9001063a:	e9cd 0308 	strd	r0, r3, [sp, #32]
9001063e:	2302      	movs	r3, #2
90010640:	4620      	mov	r0, r4
90010642:	e9cd 9306 	strd	r9, r3, [sp, #24]
90010646:	2301      	movs	r3, #1
90010648:	9305      	str	r3, [sp, #20]
9001064a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001064e:	9304      	str	r3, [sp, #16]
90010650:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010654:	9303      	str	r3, [sp, #12]
90010656:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
9001065a:	9302      	str	r3, [sp, #8]
9001065c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010660:	e9cd 8300 	strd	r8, r3, [sp]
90010664:	463b      	mov	r3, r7
90010666:	47a8      	blx	r5
90010668:	b00b      	add	sp, #44	; 0x2c
9001066a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001066e:	bf00      	nop
90010670:	24023566 	.word	0x24023566

90010674 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010674:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010678:	4698      	mov	r8, r3
9001067a:	6803      	ldr	r3, [r0, #0]
9001067c:	b087      	sub	sp, #28
9001067e:	460e      	mov	r6, r1
90010680:	6d9d      	ldr	r5, [r3, #88]	; 0x58
90010682:	4617      	mov	r7, r2
90010684:	4b0f      	ldr	r3, [pc, #60]	; (900106c4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010686:	4604      	mov	r4, r0
90010688:	f8b3 9000 	ldrh.w	r9, [r3]
9001068c:	f7ff ff50 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010690:	6803      	ldr	r3, [r0, #0]
90010692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010694:	4798      	blx	r3
90010696:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
9001069a:	463a      	mov	r2, r7
9001069c:	4631      	mov	r1, r6
9001069e:	f8cd 900c 	str.w	r9, [sp, #12]
900106a2:	e9cd 0304 	strd	r0, r3, [sp, #16]
900106a6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
900106aa:	4620      	mov	r0, r4
900106ac:	9302      	str	r3, [sp, #8]
900106ae:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
900106b2:	9301      	str	r3, [sp, #4]
900106b4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900106b8:	9300      	str	r3, [sp, #0]
900106ba:	4643      	mov	r3, r8
900106bc:	47a8      	blx	r5
900106be:	b007      	add	sp, #28
900106c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900106c4:	24023566 	.word	0x24023566

900106c8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
900106c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900106cc:	4604      	mov	r4, r0
900106ce:	b08f      	sub	sp, #60	; 0x3c
900106d0:	4610      	mov	r0, r2
900106d2:	460d      	mov	r5, r1
900106d4:	4691      	mov	r9, r2
900106d6:	461e      	mov	r6, r3
900106d8:	f007 fc12 	bl	90017f00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900106dc:	2800      	cmp	r0, #0
900106de:	f000 809d 	beq.w	9001081c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
900106e2:	6823      	ldr	r3, [r4, #0]
900106e4:	4620      	mov	r0, r4
900106e6:	f8df b198 	ldr.w	fp, [pc, #408]	; 90010880 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
900106ea:	f10d 0838 	add.w	r8, sp, #56	; 0x38
900106ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900106f0:	4798      	blx	r3
900106f2:	6823      	ldr	r3, [r4, #0]
900106f4:	4620      	mov	r0, r4
900106f6:	f8df a18c 	ldr.w	sl, [pc, #396]	; 90010884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900106fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106fc:	4798      	blx	r3
900106fe:	f8bb 3000 	ldrh.w	r3, [fp]
90010702:	4f5c      	ldr	r7, [pc, #368]	; (90010874 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010704:	9301      	str	r3, [sp, #4]
90010706:	f8ba 3000 	ldrh.w	r3, [sl]
9001070a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001070e:	4640      	mov	r0, r8
90010710:	9302      	str	r3, [sp, #8]
90010712:	883b      	ldrh	r3, [r7, #0]
90010714:	9303      	str	r3, [sp, #12]
90010716:	4b58      	ldr	r3, [pc, #352]	; (90010878 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010718:	881a      	ldrh	r2, [r3, #0]
9001071a:	9305      	str	r3, [sp, #20]
9001071c:	9204      	str	r2, [sp, #16]
9001071e:	f007 fc83 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010722:	8038      	strh	r0, [r7, #0]
90010724:	4640      	mov	r0, r8
90010726:	f007 fcb3 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001072a:	9b05      	ldr	r3, [sp, #20]
9001072c:	b280      	uxth	r0, r0
9001072e:	8018      	strh	r0, [r3, #0]
90010730:	4b52      	ldr	r3, [pc, #328]	; (9001087c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
90010732:	781b      	ldrb	r3, [r3, #0]
90010734:	2b00      	cmp	r3, #0
90010736:	d174      	bne.n	90010822 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
90010738:	883b      	ldrh	r3, [r7, #0]
9001073a:	f8aa 0000 	strh.w	r0, [sl]
9001073e:	f8ab 3000 	strh.w	r3, [fp]
90010742:	4648      	mov	r0, r9
90010744:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
90010748:	f007 fbda 	bl	90017f00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001074c:	2200      	movs	r2, #0
9001074e:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
90010752:	4611      	mov	r1, r2
90010754:	4628      	mov	r0, r5
90010756:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
9001075a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
9001075e:	f7ff fed9 	bl	90010514 <_ZN8touchgfx8Drawable5setXYEss>
90010762:	2301      	movs	r3, #1
90010764:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
90010768:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
9001076c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010770:	2b00      	cmp	r3, #0
90010772:	dd5c      	ble.n	9001082e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010774:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010778:	2b00      	cmp	r3, #0
9001077a:	dd58      	ble.n	9001082e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
9001077c:	462a      	mov	r2, r5
9001077e:	ab0a      	add	r3, sp, #40	; 0x28
90010780:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010784:	6851      	ldr	r1, [r2, #4]
90010786:	c303      	stmia	r3!, {r0, r1}
90010788:	4631      	mov	r1, r6
9001078a:	a80a      	add	r0, sp, #40	; 0x28
9001078c:	f7ff fbec 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90010790:	4b38      	ldr	r3, [pc, #224]	; (90010874 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010792:	2100      	movs	r1, #0
90010794:	f9b3 2000 	ldrsh.w	r2, [r3]
90010798:	4b37      	ldr	r3, [pc, #220]	; (90010878 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001079a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001079e:	aa0a      	add	r2, sp, #40	; 0x28
900107a0:	f9b3 3000 	ldrsh.w	r3, [r3]
900107a4:	910c      	str	r1, [sp, #48]	; 0x30
900107a6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900107aa:	ab08      	add	r3, sp, #32
900107ac:	e892 0003 	ldmia.w	r2, {r0, r1}
900107b0:	e883 0003 	stmia.w	r3, {r0, r1}
900107b4:	4618      	mov	r0, r3
900107b6:	a90c      	add	r1, sp, #48	; 0x30
900107b8:	f7ff fbd6 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
900107bc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
900107be:	2b00      	cmp	r3, #0
900107c0:	d13c      	bne.n	9001083c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
900107c2:	2000      	movs	r0, #0
900107c4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
900107c8:	2600      	movs	r6, #0
900107ca:	696b      	ldr	r3, [r5, #20]
900107cc:	a908      	add	r1, sp, #32
900107ce:	682a      	ldr	r2, [r5, #0]
900107d0:	4628      	mov	r0, r5
900107d2:	9305      	str	r3, [sp, #20]
900107d4:	616e      	str	r6, [r5, #20]
900107d6:	6892      	ldr	r2, [r2, #8]
900107d8:	4790      	blx	r2
900107da:	9b05      	ldr	r3, [sp, #20]
900107dc:	4652      	mov	r2, sl
900107de:	4649      	mov	r1, r9
900107e0:	616b      	str	r3, [r5, #20]
900107e2:	4628      	mov	r0, r5
900107e4:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
900107e8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
900107ec:	f7ff fe92 	bl	90010514 <_ZN8touchgfx8Drawable5setXYEss>
900107f0:	9a01      	ldr	r2, [sp, #4]
900107f2:	4b23      	ldr	r3, [pc, #140]	; (90010880 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
900107f4:	4620      	mov	r0, r4
900107f6:	801a      	strh	r2, [r3, #0]
900107f8:	9a02      	ldr	r2, [sp, #8]
900107fa:	4b22      	ldr	r3, [pc, #136]	; (90010884 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
900107fc:	801a      	strh	r2, [r3, #0]
900107fe:	9a03      	ldr	r2, [sp, #12]
90010800:	4b1c      	ldr	r3, [pc, #112]	; (90010874 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010802:	801a      	strh	r2, [r3, #0]
90010804:	4b1c      	ldr	r3, [pc, #112]	; (90010878 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010806:	9a04      	ldr	r2, [sp, #16]
90010808:	801a      	strh	r2, [r3, #0]
9001080a:	6823      	ldr	r3, [r4, #0]
9001080c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90010810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010812:	4798      	blx	r3
90010814:	6823      	ldr	r3, [r4, #0]
90010816:	4620      	mov	r0, r4
90010818:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001081a:	4798      	blx	r3
9001081c:	b00f      	add	sp, #60	; 0x3c
9001081e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010822:	883b      	ldrh	r3, [r7, #0]
90010824:	f8ab 0000 	strh.w	r0, [fp]
90010828:	f8aa 3000 	strh.w	r3, [sl]
9001082c:	e789      	b.n	90010742 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001082e:	462a      	mov	r2, r5
90010830:	ab0a      	add	r3, sp, #40	; 0x28
90010832:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010836:	6851      	ldr	r1, [r2, #4]
90010838:	c303      	stmia	r3!, {r0, r1}
9001083a:	e7a9      	b.n	90010790 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
9001083c:	a807      	add	r0, sp, #28
9001083e:	f007 fd63 	bl	90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>
90010842:	4606      	mov	r6, r0
90010844:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
90010846:	6803      	ldr	r3, [r0, #0]
90010848:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001084a:	4798      	blx	r3
9001084c:	4286      	cmp	r6, r0
9001084e:	d1b8      	bne.n	900107c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010850:	f7ff fe6e 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010854:	6803      	ldr	r3, [r0, #0]
90010856:	4606      	mov	r6, r0
90010858:	a807      	add	r0, sp, #28
9001085a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9001085c:	9305      	str	r3, [sp, #20]
9001085e:	f007 fd53 	bl	90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>
90010862:	9b05      	ldr	r3, [sp, #20]
90010864:	4601      	mov	r1, r0
90010866:	4630      	mov	r0, r6
90010868:	4798      	blx	r3
9001086a:	f080 0001 	eor.w	r0, r0, #1
9001086e:	b2c0      	uxtb	r0, r0
90010870:	e7a8      	b.n	900107c4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010872:	bf00      	nop
90010874:	24023560 	.word	0x24023560
90010878:	24023562 	.word	0x24023562
9001087c:	24023564 	.word	0x24023564
90010880:	24023566 	.word	0x24023566
90010884:	24023568 	.word	0x24023568

90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010888:	4b07      	ldr	r3, [pc, #28]	; (900108a8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
9001088a:	b510      	push	{r4, lr}
9001088c:	781b      	ldrb	r3, [r3, #0]
9001088e:	4604      	mov	r4, r0
90010890:	b13b      	cbz	r3, 900108a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010892:	6803      	ldr	r3, [r0, #0]
90010894:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010896:	4798      	blx	r3
90010898:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9001089a:	4283      	cmp	r3, r0
9001089c:	d101      	bne.n	900108a2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
9001089e:	6c20      	ldr	r0, [r4, #64]	; 0x40
900108a0:	bd10      	pop	{r4, pc}
900108a2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
900108a4:	e7fc      	b.n	900108a0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
900108a6:	bf00      	nop
900108a8:	2402356a 	.word	0x2402356a

900108ac <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
900108ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900108b0:	461d      	mov	r5, r3
900108b2:	b08a      	sub	sp, #40	; 0x28
900108b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
900108b8:	4690      	mov	r8, r2
900108ba:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
900108be:	2400      	movs	r4, #0
900108c0:	4607      	mov	r7, r0
900108c2:	fb06 8505 	mla	r5, r6, r5, r8
900108c6:	9404      	str	r4, [sp, #16]
900108c8:	f88d 4020 	strb.w	r4, [sp, #32]
900108cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
900108d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
900108d4:	f8ad 3018 	strh.w	r3, [sp, #24]
900108d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900108dc:	f8ad 301a 	strh.w	r3, [sp, #26]
900108e0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900108e4:	f8ad 301c 	strh.w	r3, [sp, #28]
900108e8:	f7ff ffce 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900108ec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
900108f0:	6878      	ldr	r0, [r7, #4]
900108f2:	f8ad 601e 	strh.w	r6, [sp, #30]
900108f6:	a901      	add	r1, sp, #4
900108f8:	9505      	str	r5, [sp, #20]
900108fa:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900108fe:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
90010902:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90010906:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
9001090a:	6803      	ldr	r3, [r0, #0]
9001090c:	685b      	ldr	r3, [r3, #4]
9001090e:	4798      	blx	r3
90010910:	b00a      	add	sp, #40	; 0x28
90010912:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010916 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010916:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001091a:	b08b      	sub	sp, #44	; 0x2c
9001091c:	2400      	movs	r4, #0
9001091e:	4691      	mov	r9, r2
90010920:	461d      	mov	r5, r3
90010922:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90010926:	f44f 6300 	mov.w	r3, #2048	; 0x800
9001092a:	4688      	mov	r8, r1
9001092c:	4607      	mov	r7, r0
9001092e:	9404      	str	r4, [sp, #16]
90010930:	fb06 9505 	mla	r5, r6, r5, r9
90010934:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010938:	f7ff ffa6 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001093c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010940:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010944:	6878      	ldr	r0, [r7, #4]
90010946:	f8ad 3018 	strh.w	r3, [sp, #24]
9001094a:	a901      	add	r1, sp, #4
9001094c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010950:	9505      	str	r5, [sp, #20]
90010952:	f8ad 301a 	strh.w	r3, [sp, #26]
90010956:	f8ad 401c 	strh.w	r4, [sp, #28]
9001095a:	f8ad 601e 	strh.w	r6, [sp, #30]
9001095e:	f8cd 8010 	str.w	r8, [sp, #16]
90010962:	f8ad 4020 	strh.w	r4, [sp, #32]
90010966:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
9001096a:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
9001096e:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010972:	6803      	ldr	r3, [r0, #0]
90010974:	685b      	ldr	r3, [r3, #4]
90010976:	4798      	blx	r3
90010978:	b00b      	add	sp, #44	; 0x2c
9001097a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010980 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010984:	b08a      	sub	sp, #40	; 0x28
90010986:	4698      	mov	r8, r3
90010988:	2300      	movs	r3, #0
9001098a:	4606      	mov	r6, r0
9001098c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90010990:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90010994:	2d0b      	cmp	r5, #11
90010996:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
9001099a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
9001099e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
900109a2:	9304      	str	r3, [sp, #16]
900109a4:	d137      	bne.n	90010a16 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
900109a6:	2380      	movs	r3, #128	; 0x80
900109a8:	f88d 0020 	strb.w	r0, [sp, #32]
900109ac:	4630      	mov	r0, r6
900109ae:	9203      	str	r2, [sp, #12]
900109b0:	e9cd 3101 	strd	r3, r1, [sp, #4]
900109b4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
900109b8:	f8ad 3018 	strh.w	r3, [sp, #24]
900109bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900109c0:	f8ad 301a 	strh.w	r3, [sp, #26]
900109c4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900109c8:	f8ad 301c 	strh.w	r3, [sp, #28]
900109cc:	f7ff ff5c 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
900109d0:	2c0b      	cmp	r4, #11
900109d2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
900109d6:	f8ad 701e 	strh.w	r7, [sp, #30]
900109da:	bf94      	ite	ls
900109dc:	4b19      	ldrls	r3, [pc, #100]	; (90010a44 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
900109de:	2100      	movhi	r1, #0
900109e0:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
900109e4:	bf98      	it	ls
900109e6:	5d19      	ldrbls	r1, [r3, r4]
900109e8:	fb02 8307 	mla	r3, r2, r7, r8
900109ec:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
900109f0:	10c9      	asrs	r1, r1, #3
900109f2:	fb01 0003 	mla	r0, r1, r3, r0
900109f6:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
900109fa:	a901      	add	r1, sp, #4
900109fc:	9005      	str	r0, [sp, #20]
900109fe:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010a02:	2300      	movs	r3, #0
90010a04:	6870      	ldr	r0, [r6, #4]
90010a06:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010a0a:	6803      	ldr	r3, [r0, #0]
90010a0c:	685b      	ldr	r3, [r3, #4]
90010a0e:	4798      	blx	r3
90010a10:	b00a      	add	sp, #40	; 0x28
90010a12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010a16:	2d02      	cmp	r5, #2
90010a18:	d109      	bne.n	90010a2e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010a1a:	28ff      	cmp	r0, #255	; 0xff
90010a1c:	d105      	bne.n	90010a2a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010a1e:	f1bc 0f00 	cmp.w	ip, #0
90010a22:	bf14      	ite	ne
90010a24:	2340      	movne	r3, #64	; 0x40
90010a26:	2320      	moveq	r3, #32
90010a28:	e7be      	b.n	900109a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a2a:	2340      	movs	r3, #64	; 0x40
90010a2c:	e7bc      	b.n	900109a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a2e:	28ff      	cmp	r0, #255	; 0xff
90010a30:	d105      	bne.n	90010a3e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010a32:	f1bc 0f00 	cmp.w	ip, #0
90010a36:	bf14      	ite	ne
90010a38:	2304      	movne	r3, #4
90010a3a:	2301      	moveq	r3, #1
90010a3c:	e7b4      	b.n	900109a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a3e:	2304      	movs	r3, #4
90010a40:	e7b2      	b.n	900109a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010a42:	bf00      	nop
90010a44:	90029ffc 	.word	0x90029ffc

90010a48 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010a4c:	b08b      	sub	sp, #44	; 0x2c
90010a4e:	461d      	mov	r5, r3
90010a50:	2400      	movs	r4, #0
90010a52:	4688      	mov	r8, r1
90010a54:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90010a58:	4693      	mov	fp, r2
90010a5a:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90010a5e:	4607      	mov	r7, r0
90010a60:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90010a64:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90010a68:	9404      	str	r4, [sp, #16]
90010a6a:	bf14      	ite	ne
90010a6c:	2308      	movne	r3, #8
90010a6e:	2302      	moveq	r3, #2
90010a70:	fb05 b50a 	mla	r5, r5, sl, fp
90010a74:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010a78:	f7ff ff06 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010a7c:	2e0b      	cmp	r6, #11
90010a7e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90010a82:	a901      	add	r1, sp, #4
90010a84:	bf98      	it	ls
90010a86:	4b13      	ldrls	r3, [pc, #76]	; (90010ad4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010a88:	f8ad a01e 	strh.w	sl, [sp, #30]
90010a8c:	bf98      	it	ls
90010a8e:	5d9c      	ldrbls	r4, [r3, r6]
90010a90:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010a94:	10e4      	asrs	r4, r4, #3
90010a96:	f8cd 8010 	str.w	r8, [sp, #16]
90010a9a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010a9e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010aa2:	fb04 0405 	mla	r4, r4, r5, r0
90010aa6:	6878      	ldr	r0, [r7, #4]
90010aa8:	f8ad 301a 	strh.w	r3, [sp, #26]
90010aac:	2300      	movs	r3, #0
90010aae:	9405      	str	r4, [sp, #20]
90010ab0:	f8ad 301c 	strh.w	r3, [sp, #28]
90010ab4:	f88d 9020 	strb.w	r9, [sp, #32]
90010ab8:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90010abc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010ac0:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90010ac4:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90010ac8:	6803      	ldr	r3, [r0, #0]
90010aca:	685b      	ldr	r3, [r3, #4]
90010acc:	4798      	blx	r3
90010ace:	b00b      	add	sp, #44	; 0x2c
90010ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010ad4:	90029ffc 	.word	0x90029ffc

90010ad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010ad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010adc:	461e      	mov	r6, r3
90010ade:	4b0a      	ldr	r3, [pc, #40]	; (90010b08 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010ae0:	460f      	mov	r7, r1
90010ae2:	4690      	mov	r8, r2
90010ae4:	881d      	ldrh	r5, [r3, #0]
90010ae6:	f7ff fd23 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010aea:	6803      	ldr	r3, [r0, #0]
90010aec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010aee:	4798      	blx	r3
90010af0:	280b      	cmp	r0, #11
90010af2:	bf96      	itet	ls
90010af4:	4b05      	ldrls	r3, [pc, #20]	; (90010b0c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010af6:	2400      	movhi	r4, #0
90010af8:	5c1c      	ldrbls	r4, [r3, r0]
90010afa:	fb08 7005 	mla	r0, r8, r5, r7
90010afe:	10e4      	asrs	r4, r4, #3
90010b00:	fb04 6000 	mla	r0, r4, r0, r6
90010b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010b08:	24023566 	.word	0x24023566
90010b0c:	90029ffc 	.word	0x90029ffc

90010b10 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010b10:	b5f0      	push	{r4, r5, r6, r7, lr}
90010b12:	b08b      	sub	sp, #44	; 0x2c
90010b14:	461f      	mov	r7, r3
90010b16:	4604      	mov	r4, r0
90010b18:	4616      	mov	r6, r2
90010b1a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010b1e:	2500      	movs	r5, #0
90010b20:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010b24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010b28:	9504      	str	r5, [sp, #16]
90010b2a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010b2e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010b32:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b36:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010b3a:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b3e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010b42:	f88d 3020 	strb.w	r3, [sp, #32]
90010b46:	f7ff fe9f 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b4a:	463a      	mov	r2, r7
90010b4c:	4631      	mov	r1, r6
90010b4e:	4603      	mov	r3, r0
90010b50:	4620      	mov	r0, r4
90010b52:	f7ff ffc1 	bl	90010ad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010b56:	4b0e      	ldr	r3, [pc, #56]	; (90010b90 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010b58:	9005      	str	r0, [sp, #20]
90010b5a:	881b      	ldrh	r3, [r3, #0]
90010b5c:	f8ad 301e 	strh.w	r3, [sp, #30]
90010b60:	f7ff fce6 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010b64:	6803      	ldr	r3, [r0, #0]
90010b66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010b68:	4798      	blx	r3
90010b6a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90010b6c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90010b70:	a901      	add	r1, sp, #4
90010b72:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90010b76:	9304      	str	r3, [sp, #16]
90010b78:	6860      	ldr	r0, [r4, #4]
90010b7a:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010b7e:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90010b82:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010b86:	6803      	ldr	r3, [r0, #0]
90010b88:	685b      	ldr	r3, [r3, #4]
90010b8a:	4798      	blx	r3
90010b8c:	b00b      	add	sp, #44	; 0x2c
90010b8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010b90:	24023566 	.word	0x24023566

90010b94 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010b94:	b5f0      	push	{r4, r5, r6, r7, lr}
90010b96:	b08d      	sub	sp, #52	; 0x34
90010b98:	2501      	movs	r5, #1
90010b9a:	4604      	mov	r4, r0
90010b9c:	466b      	mov	r3, sp
90010b9e:	9503      	str	r5, [sp, #12]
90010ba0:	e883 0006 	stmia.w	r3, {r1, r2}
90010ba4:	2300      	movs	r3, #0
90010ba6:	f8bd 6000 	ldrh.w	r6, [sp]
90010baa:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010bae:	9306      	str	r3, [sp, #24]
90010bb0:	6803      	ldr	r3, [r0, #0]
90010bb2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010bb4:	4798      	blx	r3
90010bb6:	463a      	mov	r2, r7
90010bb8:	4631      	mov	r1, r6
90010bba:	4603      	mov	r3, r0
90010bbc:	4620      	mov	r0, r4
90010bbe:	f7ff ff8b 	bl	90010ad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010bc2:	6c63      	ldr	r3, [r4, #68]	; 0x44
90010bc4:	9004      	str	r0, [sp, #16]
90010bc6:	9307      	str	r3, [sp, #28]
90010bc8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010bcc:	f8ad 3020 	strh.w	r3, [sp, #32]
90010bd0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010bd4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010bd8:	4b0e      	ldr	r3, [pc, #56]	; (90010c14 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010bda:	881b      	ldrh	r3, [r3, #0]
90010bdc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010be0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010be4:	f7ff fca4 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010be8:	6803      	ldr	r3, [r0, #0]
90010bea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010bec:	4798      	blx	r3
90010bee:	23ff      	movs	r3, #255	; 0xff
90010bf0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010bf4:	a903      	add	r1, sp, #12
90010bf6:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010bfa:	6860      	ldr	r0, [r4, #4]
90010bfc:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010c00:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010c04:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010c08:	6803      	ldr	r3, [r0, #0]
90010c0a:	685b      	ldr	r3, [r3, #4]
90010c0c:	4798      	blx	r3
90010c0e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90010c10:	b00d      	add	sp, #52	; 0x34
90010c12:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010c14:	24023566 	.word	0x24023566

90010c18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010c18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c1c:	b08c      	sub	sp, #48	; 0x30
90010c1e:	461e      	mov	r6, r3
90010c20:	2300      	movs	r3, #0
90010c22:	4604      	mov	r4, r0
90010c24:	466d      	mov	r5, sp
90010c26:	9306      	str	r3, [sp, #24]
90010c28:	6803      	ldr	r3, [r0, #0]
90010c2a:	e885 0006 	stmia.w	r5, {r1, r2}
90010c2e:	2501      	movs	r5, #1
90010c30:	f8bd 7000 	ldrh.w	r7, [sp]
90010c34:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010c38:	9503      	str	r5, [sp, #12]
90010c3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010c3c:	4798      	blx	r3
90010c3e:	4642      	mov	r2, r8
90010c40:	4639      	mov	r1, r7
90010c42:	4603      	mov	r3, r0
90010c44:	4620      	mov	r0, r4
90010c46:	f7ff ff47 	bl	90010ad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010c4a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010c4e:	9004      	str	r0, [sp, #16]
90010c50:	f8ad 3020 	strh.w	r3, [sp, #32]
90010c54:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010c58:	9607      	str	r6, [sp, #28]
90010c5a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010c5e:	4b10      	ldr	r3, [pc, #64]	; (90010ca0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010c60:	881b      	ldrh	r3, [r3, #0]
90010c62:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010c66:	9b12      	ldr	r3, [sp, #72]	; 0x48
90010c68:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010c6c:	f7ff fc60 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90010c70:	6803      	ldr	r3, [r0, #0]
90010c72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010c74:	4798      	blx	r3
90010c76:	23ff      	movs	r3, #255	; 0xff
90010c78:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010c7c:	a903      	add	r1, sp, #12
90010c7e:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010c82:	6860      	ldr	r0, [r4, #4]
90010c84:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010c88:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010c8c:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010c90:	6803      	ldr	r3, [r0, #0]
90010c92:	685b      	ldr	r3, [r3, #4]
90010c94:	4798      	blx	r3
90010c96:	4630      	mov	r0, r6
90010c98:	b00c      	add	sp, #48	; 0x30
90010c9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010c9e:	bf00      	nop
90010ca0:	24023566 	.word	0x24023566

90010ca4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010ca4:	b5f0      	push	{r4, r5, r6, r7, lr}
90010ca6:	b085      	sub	sp, #20
90010ca8:	4605      	mov	r5, r0
90010caa:	ac02      	add	r4, sp, #8
90010cac:	e884 0006 	stmia.w	r4, {r1, r2}
90010cb0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010cb4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010cb8:	f7ff fde6 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010cbc:	4631      	mov	r1, r6
90010cbe:	4603      	mov	r3, r0
90010cc0:	463a      	mov	r2, r7
90010cc2:	4628      	mov	r0, r5
90010cc4:	f7ff ff08 	bl	90010ad8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010cc8:	4a05      	ldr	r2, [pc, #20]	; (90010ce0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010cca:	682b      	ldr	r3, [r5, #0]
90010ccc:	8812      	ldrh	r2, [r2, #0]
90010cce:	9200      	str	r2, [sp, #0]
90010cd0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90010cd2:	4603      	mov	r3, r0
90010cd4:	4628      	mov	r0, r5
90010cd6:	e894 0006 	ldmia.w	r4, {r1, r2}
90010cda:	47b0      	blx	r6
90010cdc:	b005      	add	sp, #20
90010cde:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010ce0:	24023566 	.word	0x24023566

90010ce4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010ce4:	b570      	push	{r4, r5, r6, lr}
90010ce6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90010cea:	4604      	mov	r4, r0
90010cec:	b19b      	cbz	r3, 90010d16 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010cee:	2002      	movs	r0, #2
90010cf0:	f7ef fc98 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010cf4:	2300      	movs	r3, #0
90010cf6:	4620      	mov	r0, r4
90010cf8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010cfc:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90010d00:	6823      	ldr	r3, [r4, #0]
90010d02:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90010d06:	f7ff fdbf 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d0a:	4601      	mov	r1, r0
90010d0c:	4620      	mov	r0, r4
90010d0e:	462b      	mov	r3, r5
90010d10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d14:	4718      	bx	r3
90010d16:	bd70      	pop	{r4, r5, r6, pc}

90010d18 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010d18:	b570      	push	{r4, r5, r6, lr}
90010d1a:	4605      	mov	r5, r0
90010d1c:	460c      	mov	r4, r1
90010d1e:	2003      	movs	r0, #3
90010d20:	b149      	cbz	r1, 90010d36 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010d22:	f7ef fc17 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010d26:	6928      	ldr	r0, [r5, #16]
90010d28:	b168      	cbz	r0, 90010d46 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010d2a:	6803      	ldr	r3, [r0, #0]
90010d2c:	2101      	movs	r1, #1
90010d2e:	695b      	ldr	r3, [r3, #20]
90010d30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010d34:	4718      	bx	r3
90010d36:	f7ef fc41 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010d3a:	6928      	ldr	r0, [r5, #16]
90010d3c:	b118      	cbz	r0, 90010d46 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010d3e:	6803      	ldr	r3, [r0, #0]
90010d40:	4621      	mov	r1, r4
90010d42:	695b      	ldr	r3, [r3, #20]
90010d44:	e7f4      	b.n	90010d30 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010d46:	bd70      	pop	{r4, r5, r6, pc}

90010d48 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010d48:	b538      	push	{r3, r4, r5, lr}
90010d4a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90010d4e:	4604      	mov	r4, r0
90010d50:	460d      	mov	r5, r1
90010d52:	428b      	cmp	r3, r1
90010d54:	d006      	beq.n	90010d64 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010d56:	6803      	ldr	r3, [r0, #0]
90010d58:	b929      	cbnz	r1, 90010d66 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010d5a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90010d5e:	4798      	blx	r3
90010d60:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90010d64:	bd38      	pop	{r3, r4, r5, pc}
90010d66:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90010d6a:	e7f8      	b.n	90010d5e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010d6c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010d6c:	4b0d      	ldr	r3, [pc, #52]	; (90010da4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010d6e:	b510      	push	{r4, lr}
90010d70:	781b      	ldrb	r3, [r3, #0]
90010d72:	4604      	mov	r4, r0
90010d74:	b95b      	cbnz	r3, 90010d8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010d76:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90010d7a:	2b02      	cmp	r3, #2
90010d7c:	d007      	beq.n	90010d8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010d7e:	6840      	ldr	r0, [r0, #4]
90010d80:	f000 f91a 	bl	90010fb8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010d84:	b118      	cbz	r0, 90010d8e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010d86:	6862      	ldr	r2, [r4, #4]
90010d88:	7a53      	ldrb	r3, [r2, #9]
90010d8a:	2b00      	cmp	r3, #0
90010d8c:	d0fc      	beq.n	90010d88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010d8e:	f7f0 fe2d 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010d92:	4620      	mov	r0, r4
90010d94:	2100      	movs	r1, #0
90010d96:	f7ff ffd7 	bl	90010d48 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010d9a:	4620      	mov	r0, r4
90010d9c:	f7ff fd74 	bl	90010888 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010da0:	bd10      	pop	{r4, pc}
90010da2:	bf00      	nop
90010da4:	2402356a 	.word	0x2402356a

90010da8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010da8:	b570      	push	{r4, r5, r6, lr}
90010daa:	4604      	mov	r4, r0
90010dac:	6803      	ldr	r3, [r0, #0]
90010dae:	b919      	cbnz	r1, 90010db8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010db0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010db2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010db6:	4718      	bx	r3
90010db8:	2200      	movs	r2, #0
90010dba:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90010dbe:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90010dc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010dc4:	4798      	blx	r3
90010dc6:	6863      	ldr	r3, [r4, #4]
90010dc8:	2101      	movs	r1, #1
90010dca:	4605      	mov	r5, r0
90010dcc:	4620      	mov	r0, r4
90010dce:	7299      	strb	r1, [r3, #10]
90010dd0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90010dd4:	f7ff ffb8 	bl	90010d48 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010dd8:	4628      	mov	r0, r5
90010dda:	bd70      	pop	{r4, r5, r6, pc}

90010ddc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010ddc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010de0:	1a13      	subs	r3, r2, r0
90010de2:	4258      	negs	r0, r3
90010de4:	4158      	adcs	r0, r3
90010de6:	4770      	bx	lr

90010de8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010de8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010dec:	1a9b      	subs	r3, r3, r2
90010dee:	2b00      	cmp	r3, #0
90010df0:	bfdc      	itt	le
90010df2:	6882      	ldrle	r2, [r0, #8]
90010df4:	189b      	addle	r3, r3, r2
90010df6:	2b01      	cmp	r3, #1
90010df8:	bfcc      	ite	gt
90010dfa:	2000      	movgt	r0, #0
90010dfc:	2001      	movle	r0, #1
90010dfe:	4770      	bx	lr

90010e00 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010e00:	6902      	ldr	r2, [r0, #16]
90010e02:	6843      	ldr	r3, [r0, #4]
90010e04:	2024      	movs	r0, #36	; 0x24
90010e06:	fb00 3002 	mla	r0, r0, r2, r3
90010e0a:	4770      	bx	lr

90010e0c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010e0c:	6803      	ldr	r3, [r0, #0]
90010e0e:	691b      	ldr	r3, [r3, #16]
90010e10:	4718      	bx	r3

90010e12 <_ZN8touchgfx13DMA_Interface7executeEv>:
90010e12:	2301      	movs	r3, #1
90010e14:	b570      	push	{r4, r5, r6, lr}
90010e16:	7203      	strb	r3, [r0, #8]
90010e18:	4604      	mov	r4, r0
90010e1a:	6840      	ldr	r0, [r0, #4]
90010e1c:	6803      	ldr	r3, [r0, #0]
90010e1e:	699b      	ldr	r3, [r3, #24]
90010e20:	4798      	blx	r3
90010e22:	6803      	ldr	r3, [r0, #0]
90010e24:	4605      	mov	r5, r0
90010e26:	2b40      	cmp	r3, #64	; 0x40
90010e28:	d00c      	beq.n	90010e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e2a:	d810      	bhi.n	90010e4e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010e2c:	2b04      	cmp	r3, #4
90010e2e:	d01d      	beq.n	90010e6c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010e30:	d804      	bhi.n	90010e3c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010e32:	2b01      	cmp	r3, #1
90010e34:	d006      	beq.n	90010e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e36:	2b02      	cmp	r3, #2
90010e38:	d02c      	beq.n	90010e94 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010e3a:	bd70      	pop	{r4, r5, r6, pc}
90010e3c:	2b08      	cmp	r3, #8
90010e3e:	d01d      	beq.n	90010e7c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010e40:	2b20      	cmp	r3, #32
90010e42:	d1fa      	bne.n	90010e3a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010e44:	6823      	ldr	r3, [r4, #0]
90010e46:	4620      	mov	r0, r4
90010e48:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90010e4a:	4798      	blx	r3
90010e4c:	e013      	b.n	90010e76 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010e4e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90010e52:	d0f7      	beq.n	90010e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e54:	d804      	bhi.n	90010e60 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010e56:	2b80      	cmp	r3, #128	; 0x80
90010e58:	d0f4      	beq.n	90010e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e5a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90010e5e:	e7f0      	b.n	90010e42 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010e60:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90010e64:	d0ee      	beq.n	90010e44 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010e66:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90010e6a:	e7e5      	b.n	90010e38 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010e6c:	6823      	ldr	r3, [r4, #0]
90010e6e:	7f01      	ldrb	r1, [r0, #28]
90010e70:	4620      	mov	r0, r4
90010e72:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010e74:	4798      	blx	r3
90010e76:	6823      	ldr	r3, [r4, #0]
90010e78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010e7a:	e006      	b.n	90010e8a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010e7c:	6823      	ldr	r3, [r4, #0]
90010e7e:	7f01      	ldrb	r1, [r0, #28]
90010e80:	4620      	mov	r0, r4
90010e82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010e84:	4798      	blx	r3
90010e86:	6823      	ldr	r3, [r4, #0]
90010e88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010e8a:	4629      	mov	r1, r5
90010e8c:	4620      	mov	r0, r4
90010e8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e92:	4718      	bx	r3
90010e94:	6823      	ldr	r3, [r4, #0]
90010e96:	4620      	mov	r0, r4
90010e98:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90010e9a:	4798      	blx	r3
90010e9c:	e7f3      	b.n	90010e86 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90010e9e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90010e9e:	4770      	bx	lr

90010ea0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90010ea0:	4770      	bx	lr

90010ea2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90010ea2:	4770      	bx	lr

90010ea4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90010ea4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90010ea8:	b510      	push	{r4, lr}
90010eaa:	1ad2      	subs	r2, r2, r3
90010eac:	2a00      	cmp	r2, #0
90010eae:	bfdc      	itt	le
90010eb0:	6884      	ldrle	r4, [r0, #8]
90010eb2:	1912      	addle	r2, r2, r4
90010eb4:	2a01      	cmp	r2, #1
90010eb6:	dd16      	ble.n	90010ee6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90010eb8:	6842      	ldr	r2, [r0, #4]
90010eba:	2424      	movs	r4, #36	; 0x24
90010ebc:	fb04 2303 	mla	r3, r4, r3, r2
90010ec0:	f101 0220 	add.w	r2, r1, #32
90010ec4:	f851 4b04 	ldr.w	r4, [r1], #4
90010ec8:	4291      	cmp	r1, r2
90010eca:	f843 4b04 	str.w	r4, [r3], #4
90010ece:	d1f9      	bne.n	90010ec4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90010ed0:	780a      	ldrb	r2, [r1, #0]
90010ed2:	701a      	strb	r2, [r3, #0]
90010ed4:	68c3      	ldr	r3, [r0, #12]
90010ed6:	6882      	ldr	r2, [r0, #8]
90010ed8:	f3bf 8f5b 	dmb	ish
90010edc:	3301      	adds	r3, #1
90010ede:	429a      	cmp	r2, r3
90010ee0:	bfd8      	it	le
90010ee2:	1a9b      	suble	r3, r3, r2
90010ee4:	60c3      	str	r3, [r0, #12]
90010ee6:	bd10      	pop	{r4, pc}

90010ee8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90010ee8:	6903      	ldr	r3, [r0, #16]
90010eea:	6882      	ldr	r2, [r0, #8]
90010eec:	f3bf 8f5b 	dmb	ish
90010ef0:	3301      	adds	r3, #1
90010ef2:	429a      	cmp	r2, r3
90010ef4:	bfd8      	it	le
90010ef6:	1a9b      	suble	r3, r3, r2
90010ef8:	6103      	str	r3, [r0, #16]
90010efa:	4770      	bx	lr

90010efc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
90010efc:	b570      	push	{r4, r5, r6, lr}
90010efe:	4604      	mov	r4, r0
90010f00:	460e      	mov	r6, r1
90010f02:	6860      	ldr	r0, [r4, #4]
90010f04:	6803      	ldr	r3, [r0, #0]
90010f06:	685b      	ldr	r3, [r3, #4]
90010f08:	4798      	blx	r3
90010f0a:	2800      	cmp	r0, #0
90010f0c:	d1f9      	bne.n	90010f02 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
90010f0e:	4d0d      	ldr	r5, [pc, #52]	; (90010f44 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90010f10:	6828      	ldr	r0, [r5, #0]
90010f12:	6803      	ldr	r3, [r0, #0]
90010f14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90010f16:	4798      	blx	r3
90010f18:	f7f0 fd76 	bl	90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
90010f1c:	6828      	ldr	r0, [r5, #0]
90010f1e:	2101      	movs	r1, #1
90010f20:	f7ff ff12 	bl	90010d48 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010f24:	6860      	ldr	r0, [r4, #4]
90010f26:	4631      	mov	r1, r6
90010f28:	6803      	ldr	r3, [r0, #0]
90010f2a:	689b      	ldr	r3, [r3, #8]
90010f2c:	4798      	blx	r3
90010f2e:	6823      	ldr	r3, [r4, #0]
90010f30:	4620      	mov	r0, r4
90010f32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010f34:	4798      	blx	r3
90010f36:	6828      	ldr	r0, [r5, #0]
90010f38:	6803      	ldr	r3, [r0, #0]
90010f3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f3e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90010f40:	4718      	bx	r3
90010f42:	bf00      	nop
90010f44:	2402356c 	.word	0x2402356c

90010f48 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
90010f48:	b508      	push	{r3, lr}
90010f4a:	f7f0 fd4f 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010f4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
90010f52:	f7f0 bd53 	b.w	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

90010f56 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
90010f56:	b510      	push	{r4, lr}
90010f58:	4604      	mov	r4, r0
90010f5a:	2114      	movs	r1, #20
90010f5c:	f015 f871 	bl	90026042 <_ZdlPvj>
90010f60:	4620      	mov	r0, r4
90010f62:	bd10      	pop	{r4, pc}

90010f64 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
90010f64:	b570      	push	{r4, r5, r6, lr}
90010f66:	4604      	mov	r4, r0
90010f68:	6840      	ldr	r0, [r0, #4]
90010f6a:	6803      	ldr	r3, [r0, #0]
90010f6c:	681b      	ldr	r3, [r3, #0]
90010f6e:	4798      	blx	r3
90010f70:	4605      	mov	r5, r0
90010f72:	b930      	cbnz	r0, 90010f82 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010f74:	7a23      	ldrb	r3, [r4, #8]
90010f76:	b123      	cbz	r3, 90010f82 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90010f78:	6860      	ldr	r0, [r4, #4]
90010f7a:	6803      	ldr	r3, [r0, #0]
90010f7c:	695b      	ldr	r3, [r3, #20]
90010f7e:	4798      	blx	r3
90010f80:	7225      	strb	r5, [r4, #8]
90010f82:	6860      	ldr	r0, [r4, #4]
90010f84:	6803      	ldr	r3, [r0, #0]
90010f86:	681b      	ldr	r3, [r3, #0]
90010f88:	4798      	blx	r3
90010f8a:	b928      	cbnz	r0, 90010f98 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90010f8c:	6823      	ldr	r3, [r4, #0]
90010f8e:	4620      	mov	r0, r4
90010f90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90010f92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f96:	4718      	bx	r3
90010f98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f9c:	f7f0 bd3c 	b.w	90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90010fa0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90010fa0:	b510      	push	{r4, lr}
90010fa2:	6082      	str	r2, [r0, #8]
90010fa4:	2200      	movs	r2, #0
90010fa6:	4c03      	ldr	r4, [pc, #12]	; (90010fb4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90010fa8:	e9c0 2203 	strd	r2, r2, [r0, #12]
90010fac:	e9c0 4100 	strd	r4, r1, [r0]
90010fb0:	bd10      	pop	{r4, pc}
90010fb2:	bf00      	nop
90010fb4:	9002a010 	.word	0x9002a010

90010fb8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90010fb8:	6840      	ldr	r0, [r0, #4]
90010fba:	6803      	ldr	r3, [r0, #0]
90010fbc:	681b      	ldr	r3, [r3, #0]
90010fbe:	4718      	bx	r3

90010fc0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90010fc0:	094a      	lsrs	r2, r1, #5
90010fc2:	4b06      	ldr	r3, [pc, #24]	; (90010fdc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90010fc4:	60c1      	str	r1, [r0, #12]
90010fc6:	ea03 2311 	and.w	r3, r3, r1, lsr #8
90010fca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90010fce:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90010fd2:	4313      	orrs	r3, r2
90010fd4:	4319      	orrs	r1, r3
90010fd6:	8201      	strh	r1, [r0, #16]
90010fd8:	4770      	bx	lr
90010fda:	bf00      	nop
90010fdc:	fffff800 	.word	0xfffff800

90010fe0 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90010fe0:	f1a0 0008 	sub.w	r0, r0, #8
90010fe4:	e7ec      	b.n	90010fc0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90010fe6:	bf00      	nop

90010fe8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90010fe8:	b508      	push	{r3, lr}
90010fea:	4b05      	ldr	r3, [pc, #20]	; (90011000 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
90010fec:	6818      	ldr	r0, [r3, #0]
90010fee:	6803      	ldr	r3, [r0, #0]
90010ff0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90010ff4:	4798      	blx	r3
90010ff6:	1e43      	subs	r3, r0, #1
90010ff8:	4258      	negs	r0, r3
90010ffa:	4158      	adcs	r0, r3
90010ffc:	bd08      	pop	{r3, pc}
90010ffe:	bf00      	nop
90011000:	2402356c 	.word	0x2402356c

90011004 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011004:	4770      	bx	lr

90011006 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011006:	3808      	subs	r0, #8
90011008:	4770      	bx	lr

9001100a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
9001100a:	b430      	push	{r4, r5}
9001100c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011010:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011014:	8a02      	ldrh	r2, [r0, #16]
90011016:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001101a:	4629      	mov	r1, r5
9001101c:	9202      	str	r2, [sp, #8]
9001101e:	68c2      	ldr	r2, [r0, #12]
90011020:	4620      	mov	r0, r4
90011022:	bc30      	pop	{r4, r5}
90011024:	f7f0 bfd0 	b.w	90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011028 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011028:	f7f0 bfc4 	b.w	90001fb4 <_ZN8touchgfx5paint8tearDownEv>

9001102c <_ZN8touchgfx13PainterRGB565D0Ev>:
9001102c:	b510      	push	{r4, lr}
9001102e:	4604      	mov	r4, r0
90011030:	2114      	movs	r1, #20
90011032:	f015 f806 	bl	90026042 <_ZdlPvj>
90011036:	4620      	mov	r0, r4
90011038:	bd10      	pop	{r4, pc}

9001103a <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
9001103a:	f1a0 0008 	sub.w	r0, r0, #8
9001103e:	e7f5      	b.n	9001102c <_ZN8touchgfx13PainterRGB565D0Ev>

90011040 <_ZNK8touchgfx13AbstractShape14getMinimalRectEv>:
90011040:	f101 0344 	add.w	r3, r1, #68	; 0x44
90011044:	4602      	mov	r2, r0
90011046:	cb03      	ldmia	r3!, {r0, r1}
90011048:	6010      	str	r0, [r2, #0]
9001104a:	4610      	mov	r0, r2
9001104c:	6051      	str	r1, [r2, #4]
9001104e:	4770      	bx	lr

90011050 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
90011050:	b507      	push	{r0, r1, r2, lr}
90011052:	f44f 4200 	mov.w	r2, #32768	; 0x8000
90011056:	ab01      	add	r3, sp, #4
90011058:	6809      	ldr	r1, [r1, #0]
9001105a:	6800      	ldr	r0, [r0, #0]
9001105c:	f005 f8ea 	bl	90016234 <_ZN8touchgfx6muldivElllRl>
90011060:	b003      	add	sp, #12
90011062:	f85d fb04 	ldr.w	pc, [sp], #4
	...

90011068 <_ZN8touchgfx7CWRUtil4sineEi>:
90011068:	f44f 73b4 	mov.w	r3, #360	; 0x168
9001106c:	fb90 f2f3 	sdiv	r2, r0, r3
90011070:	fb02 0013 	mls	r0, r2, r3, r0
90011074:	2800      	cmp	r0, #0
90011076:	bfb8      	it	lt
90011078:	18c0      	addlt	r0, r0, r3
9001107a:	4b0a      	ldr	r3, [pc, #40]	; (900110a4 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
9001107c:	285a      	cmp	r0, #90	; 0x5a
9001107e:	dc02      	bgt.n	90011086 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
90011080:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90011084:	4770      	bx	lr
90011086:	28b4      	cmp	r0, #180	; 0xb4
90011088:	dc02      	bgt.n	90011090 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
9001108a:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
9001108e:	e7f7      	b.n	90011080 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90011090:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90011094:	bfd4      	ite	le
90011096:	38b4      	suble	r0, #180	; 0xb4
90011098:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001109c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900110a0:	4240      	negs	r0, r0
900110a2:	4770      	bx	lr
900110a4:	9002a064 	.word	0x9002a064

900110a8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
900110a8:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
900110ac:	fb90 f2f3 	sdiv	r2, r0, r3
900110b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
900110b2:	fb02 0013 	mls	r0, r2, r3, r0
900110b6:	2800      	cmp	r0, #0
900110b8:	bfb8      	it	lt
900110ba:	18c0      	addlt	r0, r0, r3
900110bc:	1144      	asrs	r4, r0, #5
900110be:	f000 061f 	and.w	r6, r0, #31
900110c2:	4620      	mov	r0, r4
900110c4:	f7ff ffd0 	bl	90011068 <_ZN8touchgfx7CWRUtil4sineEi>
900110c8:	4605      	mov	r5, r0
900110ca:	b90e      	cbnz	r6, 900110d0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
900110cc:	b002      	add	sp, #8
900110ce:	bd70      	pop	{r4, r5, r6, pc}
900110d0:	1c60      	adds	r0, r4, #1
900110d2:	f7ff ffc9 	bl	90011068 <_ZN8touchgfx7CWRUtil4sineEi>
900110d6:	ab01      	add	r3, sp, #4
900110d8:	2220      	movs	r2, #32
900110da:	4631      	mov	r1, r6
900110dc:	1b40      	subs	r0, r0, r5
900110de:	f005 f8a9 	bl	90016234 <_ZN8touchgfx6muldivElllRl>
900110e2:	4428      	add	r0, r5
900110e4:	e7f2      	b.n	900110cc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

900110e6 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>:
900110e6:	b507      	push	{r0, r1, r2, lr}
900110e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
900110ec:	ab01      	add	r3, sp, #4
900110ee:	0140      	lsls	r0, r0, #5
900110f0:	f005 f8a0 	bl	90016234 <_ZN8touchgfx6muldivElllRl>
900110f4:	2320      	movs	r3, #32
900110f6:	fb90 f0f3 	sdiv	r0, r0, r3
900110fa:	b003      	add	sp, #12
900110fc:	f85d fb04 	ldr.w	pc, [sp], #4

90011100 <_ZN8touchgfx13AbstractShapeC1Ev>:
90011100:	b510      	push	{r4, lr}
90011102:	4604      	mov	r4, r0
90011104:	f000 f9a0 	bl	90011448 <_ZN8touchgfx12CanvasWidgetC1Ev>
90011108:	4b08      	ldr	r3, [pc, #32]	; (9001112c <_ZN8touchgfx13AbstractShapeC1Ev+0x2c>)
9001110a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001110e:	4620      	mov	r0, r4
90011110:	6023      	str	r3, [r4, #0]
90011112:	2300      	movs	r3, #0
90011114:	e9c4 220f 	strd	r2, r2, [r4, #60]	; 0x3c
90011118:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
9001111c:	63a3      	str	r3, [r4, #56]	; 0x38
9001111e:	60a3      	str	r3, [r4, #8]
90011120:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
90011124:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90011128:	bd10      	pop	{r4, pc}
9001112a:	bf00      	nop
9001112c:	9002a124 	.word	0x9002a124

90011130 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>:
90011130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011134:	6803      	ldr	r3, [r0, #0]
90011136:	b087      	sub	sp, #28
90011138:	4604      	mov	r4, r0
9001113a:	2500      	movs	r5, #0
9001113c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9001113e:	4798      	blx	r3
90011140:	9000      	str	r0, [sp, #0]
90011142:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90011144:	462e      	mov	r6, r5
90011146:	46a8      	mov	r8, r5
90011148:	462f      	mov	r7, r5
9001114a:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
9001114e:	46a9      	mov	r9, r5
90011150:	f7ff ffaa 	bl	900110a8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
90011154:	9002      	str	r0, [sp, #8]
90011156:	6ba0      	ldr	r0, [r4, #56]	; 0x38
90011158:	f7ff ffa6 	bl	900110a8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
9001115c:	9003      	str	r0, [sp, #12]
9001115e:	9b00      	ldr	r3, [sp, #0]
90011160:	429d      	cmp	r5, r3
90011162:	da6d      	bge.n	90011240 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x110>
90011164:	6823      	ldr	r3, [r4, #0]
90011166:	4629      	mov	r1, r5
90011168:	4620      	mov	r0, r4
9001116a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
9001116c:	4798      	blx	r3
9001116e:	6823      	ldr	r3, [r4, #0]
90011170:	4682      	mov	sl, r0
90011172:	4629      	mov	r1, r5
90011174:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011176:	4620      	mov	r0, r4
90011178:	4798      	blx	r3
9001117a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001117c:	4683      	mov	fp, r0
9001117e:	4650      	mov	r0, sl
90011180:	f7ff ffb1 	bl	900110e6 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90011184:	a902      	add	r1, sp, #8
90011186:	9004      	str	r0, [sp, #16]
90011188:	a804      	add	r0, sp, #16
9001118a:	f7ff ff61 	bl	90011050 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001118e:	6b22      	ldr	r2, [r4, #48]	; 0x30
90011190:	6c21      	ldr	r1, [r4, #64]	; 0x40
90011192:	4402      	add	r2, r0
90011194:	4658      	mov	r0, fp
90011196:	9201      	str	r2, [sp, #4]
90011198:	f7ff ffa5 	bl	900110e6 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
9001119c:	ab06      	add	r3, sp, #24
9001119e:	a903      	add	r1, sp, #12
900111a0:	f843 0d04 	str.w	r0, [r3, #-4]!
900111a4:	4618      	mov	r0, r3
900111a6:	f7ff ff53 	bl	90011050 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900111aa:	9a01      	ldr	r2, [sp, #4]
900111ac:	1a12      	subs	r2, r2, r0
900111ae:	b125      	cbz	r5, 900111ba <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x8a>
900111b0:	2320      	movs	r3, #32
900111b2:	fb92 f3f3 	sdiv	r3, r2, r3
900111b6:	429f      	cmp	r7, r3
900111b8:	da03      	bge.n	900111c2 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x92>
900111ba:	2720      	movs	r7, #32
900111bc:	fb92 f7f7 	sdiv	r7, r2, r7
900111c0:	b125      	cbz	r5, 900111cc <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x9c>
900111c2:	2320      	movs	r3, #32
900111c4:	fb92 f3f3 	sdiv	r3, r2, r3
900111c8:	4599      	cmp	r9, r3
900111ca:	dd03      	ble.n	900111d4 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xa4>
900111cc:	f04f 0920 	mov.w	r9, #32
900111d0:	fb92 f9f9 	sdiv	r9, r2, r9
900111d4:	6c21      	ldr	r1, [r4, #64]	; 0x40
900111d6:	4658      	mov	r0, fp
900111d8:	9201      	str	r2, [sp, #4]
900111da:	f7ff ff84 	bl	900110e6 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900111de:	a902      	add	r1, sp, #8
900111e0:	9004      	str	r0, [sp, #16]
900111e2:	a804      	add	r0, sp, #16
900111e4:	f7ff ff34 	bl	90011050 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900111e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
900111ea:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900111ec:	eb00 0b03 	add.w	fp, r0, r3
900111f0:	4650      	mov	r0, sl
900111f2:	f7ff ff78 	bl	900110e6 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900111f6:	ab06      	add	r3, sp, #24
900111f8:	a903      	add	r1, sp, #12
900111fa:	f843 0d04 	str.w	r0, [r3, #-4]!
900111fe:	4618      	mov	r0, r3
90011200:	f7ff ff26 	bl	90011050 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011204:	9a01      	ldr	r2, [sp, #4]
90011206:	eb00 030b 	add.w	r3, r0, fp
9001120a:	b125      	cbz	r5, 90011216 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xe6>
9001120c:	2120      	movs	r1, #32
9001120e:	fb93 f1f1 	sdiv	r1, r3, r1
90011212:	428e      	cmp	r6, r1
90011214:	da03      	bge.n	9001121e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xee>
90011216:	2620      	movs	r6, #32
90011218:	fb93 f6f6 	sdiv	r6, r3, r6
9001121c:	b125      	cbz	r5, 90011228 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xf8>
9001121e:	2120      	movs	r1, #32
90011220:	fb93 f1f1 	sdiv	r1, r3, r1
90011224:	4588      	cmp	r8, r1
90011226:	dd03      	ble.n	90011230 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x100>
90011228:	f04f 0820 	mov.w	r8, #32
9001122c:	fb93 f8f8 	sdiv	r8, r3, r8
90011230:	6821      	ldr	r1, [r4, #0]
90011232:	4620      	mov	r0, r4
90011234:	f8d1 a080 	ldr.w	sl, [r1, #128]	; 0x80
90011238:	4629      	mov	r1, r5
9001123a:	47d0      	blx	sl
9001123c:	3501      	adds	r5, #1
9001123e:	e78e      	b.n	9001115e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x2e>
90011240:	3701      	adds	r7, #1
90011242:	3601      	adds	r6, #1
90011244:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
90011248:	f8a4 8046 	strh.w	r8, [r4, #70]	; 0x46
9001124c:	eba7 0909 	sub.w	r9, r7, r9
90011250:	eba6 0808 	sub.w	r8, r6, r8
90011254:	f8a4 9048 	strh.w	r9, [r4, #72]	; 0x48
90011258:	f8a4 804a 	strh.w	r8, [r4, #74]	; 0x4a
9001125c:	b007      	add	sp, #28
9001125e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90011264 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE>:
90011264:	b5f0      	push	{r4, r5, r6, r7, lr}
90011266:	6803      	ldr	r3, [r0, #0]
90011268:	b0a3      	sub	sp, #140	; 0x8c
9001126a:	4604      	mov	r4, r0
9001126c:	460f      	mov	r7, r1
9001126e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90011270:	4798      	blx	r3
90011272:	4606      	mov	r6, r0
90011274:	2800      	cmp	r0, #0
90011276:	d04f      	beq.n	90011318 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb4>
90011278:	4621      	mov	r1, r4
9001127a:	a803      	add	r0, sp, #12
9001127c:	6aa5      	ldr	r5, [r4, #40]	; 0x28
9001127e:	f004 fea7 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011282:	6823      	ldr	r3, [r4, #0]
90011284:	4620      	mov	r0, r4
90011286:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90011288:	4798      	blx	r3
9001128a:	aa03      	add	r2, sp, #12
9001128c:	4629      	mov	r1, r5
9001128e:	9000      	str	r0, [sp, #0]
90011290:	463b      	mov	r3, r7
90011292:	a805      	add	r0, sp, #20
90011294:	f014 fbfe 	bl	90025a94 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90011298:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001129c:	2100      	movs	r1, #0
9001129e:	4620      	mov	r0, r4
900112a0:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
900112a4:	6823      	ldr	r3, [r4, #0]
900112a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900112aa:	4798      	blx	r3
900112ac:	6823      	ldr	r3, [r4, #0]
900112ae:	4605      	mov	r5, r0
900112b0:	2100      	movs	r1, #0
900112b2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
900112b6:	4620      	mov	r0, r4
900112b8:	4798      	blx	r3
900112ba:	4629      	mov	r1, r5
900112bc:	2501      	movs	r5, #1
900112be:	4602      	mov	r2, r0
900112c0:	a805      	add	r0, sp, #20
900112c2:	f014 fd33 	bl	90025d2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
900112c6:	42b5      	cmp	r5, r6
900112c8:	da17      	bge.n	900112fa <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x96>
900112ca:	6823      	ldr	r3, [r4, #0]
900112cc:	4629      	mov	r1, r5
900112ce:	4620      	mov	r0, r4
900112d0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900112d4:	4798      	blx	r3
900112d6:	6823      	ldr	r3, [r4, #0]
900112d8:	4607      	mov	r7, r0
900112da:	4629      	mov	r1, r5
900112dc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
900112e0:	4620      	mov	r0, r4
900112e2:	4798      	blx	r3
900112e4:	4639      	mov	r1, r7
900112e6:	4602      	mov	r2, r0
900112e8:	a805      	add	r0, sp, #20
900112ea:	f014 fd6c 	bl	90025dc6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
900112ee:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900112f2:	429a      	cmp	r2, r3
900112f4:	d30e      	bcc.n	90011314 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb0>
900112f6:	3501      	adds	r5, #1
900112f8:	e7e5      	b.n	900112c6 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x62>
900112fa:	21ff      	movs	r1, #255	; 0xff
900112fc:	a805      	add	r0, sp, #20
900112fe:	f014 fc5d 	bl	90025bbc <_ZN8touchgfx6Canvas6renderEh>
90011302:	4604      	mov	r4, r0
90011304:	4b05      	ldr	r3, [pc, #20]	; (9001131c <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb8>)
90011306:	a80a      	add	r0, sp, #40	; 0x28
90011308:	9305      	str	r3, [sp, #20]
9001130a:	f001 f9af 	bl	9001266c <_ZN8touchgfx7OutlineD1Ev>
9001130e:	4620      	mov	r0, r4
90011310:	b023      	add	sp, #140	; 0x8c
90011312:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011314:	2400      	movs	r4, #0
90011316:	e7f5      	b.n	90011304 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xa0>
90011318:	2401      	movs	r4, #1
9001131a:	e7f8      	b.n	9001130e <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xaa>
9001131c:	9002a970 	.word	0x9002a970

90011320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90011320:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011322:	6803      	ldr	r3, [r0, #0]
90011324:	460d      	mov	r5, r1
90011326:	4604      	mov	r4, r0
90011328:	4601      	mov	r1, r0
9001132a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001132c:	a802      	add	r0, sp, #8
9001132e:	4798      	blx	r3
90011330:	6828      	ldr	r0, [r5, #0]
90011332:	6869      	ldr	r1, [r5, #4]
90011334:	466b      	mov	r3, sp
90011336:	c303      	stmia	r3!, {r0, r1}
90011338:	4668      	mov	r0, sp
9001133a:	4619      	mov	r1, r3
9001133c:	f7fe fe14 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90011340:	6aa0      	ldr	r0, [r4, #40]	; 0x28
90011342:	b188      	cbz	r0, 90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011344:	6803      	ldr	r3, [r0, #0]
90011346:	1d21      	adds	r1, r4, #4
90011348:	68db      	ldr	r3, [r3, #12]
9001134a:	4798      	blx	r3
9001134c:	b160      	cbz	r0, 90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001134e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90011352:	2b00      	cmp	r3, #0
90011354:	dd08      	ble.n	90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90011356:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
9001135a:	2d00      	cmp	r5, #0
9001135c:	dd04      	ble.n	90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001135e:	4a2b      	ldr	r2, [pc, #172]	; (9001140c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90011360:	7812      	ldrb	r2, [r2, #0]
90011362:	b11a      	cbz	r2, 9001136c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90011364:	2a01      	cmp	r2, #1
90011366:	d029      	beq.n	900113bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90011368:	b004      	add	sp, #16
9001136a:	bd70      	pop	{r4, r5, r6, pc}
9001136c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011370:	441d      	add	r5, r3
90011372:	b2ad      	uxth	r5, r5
90011374:	b22e      	sxth	r6, r5
90011376:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
9001137a:	42b3      	cmp	r3, r6
9001137c:	daf4      	bge.n	90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001137e:	6823      	ldr	r3, [r4, #0]
90011380:	4669      	mov	r1, sp
90011382:	4620      	mov	r0, r4
90011384:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011386:	4798      	blx	r3
90011388:	b940      	cbnz	r0, 9001139c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
9001138a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
9001138e:	2b01      	cmp	r3, #1
90011390:	d004      	beq.n	9001139c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90011392:	3301      	adds	r3, #1
90011394:	105b      	asrs	r3, r3, #1
90011396:	f8ad 3006 	strh.w	r3, [sp, #6]
9001139a:	e7f0      	b.n	9001137e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001139c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
900113a0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900113a4:	4413      	add	r3, r2
900113a6:	b29b      	uxth	r3, r3
900113a8:	441a      	add	r2, r3
900113aa:	f8ad 3002 	strh.w	r3, [sp, #2]
900113ae:	b212      	sxth	r2, r2
900113b0:	4296      	cmp	r6, r2
900113b2:	dae0      	bge.n	90011376 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900113b4:	1aeb      	subs	r3, r5, r3
900113b6:	f8ad 3006 	strh.w	r3, [sp, #6]
900113ba:	e7dc      	b.n	90011376 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
900113bc:	f8bd 5000 	ldrh.w	r5, [sp]
900113c0:	441d      	add	r5, r3
900113c2:	b2ad      	uxth	r5, r5
900113c4:	b22e      	sxth	r6, r5
900113c6:	f9bd 3000 	ldrsh.w	r3, [sp]
900113ca:	42b3      	cmp	r3, r6
900113cc:	dacc      	bge.n	90011368 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900113ce:	6823      	ldr	r3, [r4, #0]
900113d0:	4669      	mov	r1, sp
900113d2:	4620      	mov	r0, r4
900113d4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900113d6:	4798      	blx	r3
900113d8:	b940      	cbnz	r0, 900113ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900113da:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900113de:	2b01      	cmp	r3, #1
900113e0:	d004      	beq.n	900113ec <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
900113e2:	3301      	adds	r3, #1
900113e4:	105b      	asrs	r3, r3, #1
900113e6:	f8ad 3004 	strh.w	r3, [sp, #4]
900113ea:	e7f0      	b.n	900113ce <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
900113ec:	f8bd 2004 	ldrh.w	r2, [sp, #4]
900113f0:	f8bd 3000 	ldrh.w	r3, [sp]
900113f4:	4413      	add	r3, r2
900113f6:	b29b      	uxth	r3, r3
900113f8:	441a      	add	r2, r3
900113fa:	f8ad 3000 	strh.w	r3, [sp]
900113fe:	b212      	sxth	r2, r2
90011400:	4296      	cmp	r6, r2
90011402:	dae0      	bge.n	900113c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90011404:	1aeb      	subs	r3, r5, r3
90011406:	f8ad 3004 	strh.w	r3, [sp, #4]
9001140a:	e7dc      	b.n	900113c6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001140c:	24023564 	.word	0x24023564

90011410 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90011410:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90011412:	6803      	ldr	r3, [r0, #0]
90011414:	4604      	mov	r4, r0
90011416:	4601      	mov	r1, r0
90011418:	4668      	mov	r0, sp
9001141a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001141c:	4798      	blx	r3
9001141e:	2100      	movs	r1, #0
90011420:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011424:	4668      	mov	r0, sp
90011426:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001142a:	9102      	str	r1, [sp, #8]
9001142c:	a902      	add	r1, sp, #8
9001142e:	f8ad 200c 	strh.w	r2, [sp, #12]
90011432:	f8ad 300e 	strh.w	r3, [sp, #14]
90011436:	f7fe fd97 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001143a:	6823      	ldr	r3, [r4, #0]
9001143c:	4669      	mov	r1, sp
9001143e:	4620      	mov	r0, r4
90011440:	691b      	ldr	r3, [r3, #16]
90011442:	4798      	blx	r3
90011444:	b004      	add	sp, #16
90011446:	bd10      	pop	{r4, pc}

90011448 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90011448:	2101      	movs	r1, #1
9001144a:	2200      	movs	r2, #0
9001144c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90011450:	490a      	ldr	r1, [pc, #40]	; (9001147c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90011452:	8082      	strh	r2, [r0, #4]
90011454:	6001      	str	r1, [r0, #0]
90011456:	21ff      	movs	r1, #255	; 0xff
90011458:	80c2      	strh	r2, [r0, #6]
9001145a:	8102      	strh	r2, [r0, #8]
9001145c:	8142      	strh	r2, [r0, #10]
9001145e:	8182      	strh	r2, [r0, #12]
90011460:	81c2      	strh	r2, [r0, #14]
90011462:	8202      	strh	r2, [r0, #16]
90011464:	8242      	strh	r2, [r0, #18]
90011466:	61c2      	str	r2, [r0, #28]
90011468:	8402      	strh	r2, [r0, #32]
9001146a:	8442      	strh	r2, [r0, #34]	; 0x22
9001146c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90011470:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
90011474:	6282      	str	r2, [r0, #40]	; 0x28
90011476:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001147a:	4770      	bx	lr
9001147c:	9002a1b8 	.word	0x9002a1b8

90011480 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
90011480:	b508      	push	{r3, lr}
90011482:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011486:	b10b      	cbz	r3, 9001148c <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
90011488:	f7f0 ffae 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
9001148c:	bd08      	pop	{r3, pc}

9001148e <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
9001148e:	6803      	ldr	r3, [r0, #0]
90011490:	f64f 71fe 	movw	r1, #65534	; 0xfffe
90011494:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90011496:	4718      	bx	r3

90011498 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90011498:	4770      	bx	lr

9001149a <_ZN8touchgfx14SnapshotWidgetD0Ev>:
9001149a:	b510      	push	{r4, lr}
9001149c:	4604      	mov	r4, r0
9001149e:	212c      	movs	r1, #44	; 0x2c
900114a0:	f014 fdcf 	bl	90026042 <_ZdlPvj>
900114a4:	4620      	mov	r0, r4
900114a6:	bd10      	pop	{r4, pc}

900114a8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
900114a8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900114ac:	2bff      	cmp	r3, #255	; 0xff
900114ae:	b510      	push	{r4, lr}
900114b0:	d104      	bne.n	900114bc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
900114b2:	8cca      	ldrh	r2, [r1, #38]	; 0x26
900114b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
900114b8:	429a      	cmp	r2, r3
900114ba:	d105      	bne.n	900114c8 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
900114bc:	2300      	movs	r3, #0
900114be:	8003      	strh	r3, [r0, #0]
900114c0:	8043      	strh	r3, [r0, #2]
900114c2:	8083      	strh	r3, [r0, #4]
900114c4:	80c3      	strh	r3, [r0, #6]
900114c6:	bd10      	pop	{r4, pc}
900114c8:	2300      	movs	r3, #0
900114ca:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
900114ce:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
900114d2:	8003      	strh	r3, [r0, #0]
900114d4:	8043      	strh	r3, [r0, #2]
900114d6:	8084      	strh	r4, [r0, #4]
900114d8:	80c2      	strh	r2, [r0, #6]
900114da:	e7f4      	b.n	900114c6 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

900114dc <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
900114dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900114e0:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900114e4:	b087      	sub	sp, #28
900114e6:	4604      	mov	r4, r0
900114e8:	4689      	mov	r9, r1
900114ea:	b363      	cbz	r3, 90011546 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900114ec:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
900114ee:	f64f 73ff 	movw	r3, #65535	; 0xffff
900114f2:	429a      	cmp	r2, r3
900114f4:	d027      	beq.n	90011546 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
900114f6:	ad06      	add	r5, sp, #24
900114f8:	2700      	movs	r7, #0
900114fa:	f825 2d0c 	strh.w	r2, [r5, #-12]!
900114fe:	4628      	mov	r0, r5
90011500:	f006 fd92 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011504:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011508:	a904      	add	r1, sp, #16
9001150a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001150e:	f8ad 3016 	strh.w	r3, [sp, #22]
90011512:	4620      	mov	r0, r4
90011514:	6823      	ldr	r3, [r4, #0]
90011516:	9704      	str	r7, [sp, #16]
90011518:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001151a:	4798      	blx	r3
9001151c:	f7ff f808 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90011520:	6803      	ldr	r3, [r0, #0]
90011522:	4606      	mov	r6, r0
90011524:	4628      	mov	r0, r5
90011526:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001152a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
9001152c:	f8ad 300c 	strh.w	r3, [sp, #12]
90011530:	f006 fe66 	bl	90018200 <_ZNK8touchgfx6Bitmap7getDataEv>
90011534:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90011538:	4601      	mov	r1, r0
9001153a:	9701      	str	r7, [sp, #4]
9001153c:	aa04      	add	r2, sp, #16
9001153e:	9300      	str	r3, [sp, #0]
90011540:	4630      	mov	r0, r6
90011542:	464b      	mov	r3, r9
90011544:	47c0      	blx	r8
90011546:	b007      	add	sp, #28
90011548:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

9001154c <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
9001154c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001154e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011552:	460d      	mov	r5, r1
90011554:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011558:	2100      	movs	r1, #0
9001155a:	f8ad 3006 	strh.w	r3, [sp, #6]
9001155e:	4604      	mov	r4, r0
90011560:	6803      	ldr	r3, [r0, #0]
90011562:	f8ad 2004 	strh.w	r2, [sp, #4]
90011566:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90011568:	9100      	str	r1, [sp, #0]
9001156a:	4669      	mov	r1, sp
9001156c:	4798      	blx	r3
9001156e:	4621      	mov	r1, r4
90011570:	a802      	add	r0, sp, #8
90011572:	f004 fd2d 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011576:	f7fe ffdb 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
9001157a:	6803      	ldr	r3, [r0, #0]
9001157c:	aa02      	add	r2, sp, #8
9001157e:	4669      	mov	r1, sp
90011580:	695e      	ldr	r6, [r3, #20]
90011582:	462b      	mov	r3, r5
90011584:	47b0      	blx	r6
90011586:	f64f 73ff 	movw	r3, #65535	; 0xffff
9001158a:	2800      	cmp	r0, #0
9001158c:	bf08      	it	eq
9001158e:	461d      	moveq	r5, r3
90011590:	84e5      	strh	r5, [r4, #38]	; 0x26
90011592:	b004      	add	sp, #16
90011594:	bd70      	pop	{r4, r5, r6, pc}
	...

90011598 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90011598:	2200      	movs	r2, #0
9001159a:	8082      	strh	r2, [r0, #4]
9001159c:	80c2      	strh	r2, [r0, #6]
9001159e:	8102      	strh	r2, [r0, #8]
900115a0:	8142      	strh	r2, [r0, #10]
900115a2:	8182      	strh	r2, [r0, #12]
900115a4:	81c2      	strh	r2, [r0, #14]
900115a6:	8202      	strh	r2, [r0, #16]
900115a8:	8242      	strh	r2, [r0, #18]
900115aa:	61c2      	str	r2, [r0, #28]
900115ac:	8402      	strh	r2, [r0, #32]
900115ae:	8442      	strh	r2, [r0, #34]	; 0x22
900115b0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900115b4:	e9c0 2205 	strd	r2, r2, [r0, #20]
900115b8:	2201      	movs	r2, #1
900115ba:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
900115be:	4a04      	ldr	r2, [pc, #16]	; (900115d0 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
900115c0:	6002      	str	r2, [r0, #0]
900115c2:	f64f 72ff 	movw	r2, #65535	; 0xffff
900115c6:	84c2      	strh	r2, [r0, #38]	; 0x26
900115c8:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
900115cc:	4770      	bx	lr
900115ce:	bf00      	nop
900115d0:	9002a230 	.word	0x9002a230

900115d4 <_ZNK8touchgfx5Image17invalidateContentEv>:
900115d4:	b508      	push	{r3, lr}
900115d6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900115da:	b10b      	cbz	r3, 900115e0 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
900115dc:	f7f0 ff04 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900115e0:	bd08      	pop	{r3, pc}

900115e2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
900115e2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
900115e6:	4770      	bx	lr

900115e8 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
900115e8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
900115ec:	4770      	bx	lr

900115ee <_ZN8touchgfx13ScalableImageD1Ev>:
900115ee:	4770      	bx	lr

900115f0 <_ZN8touchgfx13ScalableImageD0Ev>:
900115f0:	b510      	push	{r4, lr}
900115f2:	4604      	mov	r4, r0
900115f4:	212c      	movs	r1, #44	; 0x2c
900115f6:	f014 fd24 	bl	90026042 <_ZdlPvj>
900115fa:	4620      	mov	r0, r4
900115fc:	bd10      	pop	{r4, pc}

900115fe <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
900115fe:	b5f0      	push	{r4, r5, r6, r7, lr}
90011600:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90011604:	b085      	sub	sp, #20
90011606:	4604      	mov	r4, r0
90011608:	460d      	mov	r5, r1
9001160a:	2bff      	cmp	r3, #255	; 0xff
9001160c:	d128      	bne.n	90011660 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001160e:	f101 0626 	add.w	r6, r1, #38	; 0x26
90011612:	4668      	mov	r0, sp
90011614:	4631      	mov	r1, r6
90011616:	f006 fd6f 	bl	900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001161a:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
9001161e:	4630      	mov	r0, r6
90011620:	f006 fd02 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011624:	4287      	cmp	r7, r0
90011626:	d11b      	bne.n	90011660 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90011628:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
9001162c:	4630      	mov	r0, r6
9001162e:	f006 fd2f 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011632:	4287      	cmp	r7, r0
90011634:	d114      	bne.n	90011660 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90011636:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
9001163a:	2100      	movs	r1, #0
9001163c:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
90011640:	f8ad 300e 	strh.w	r3, [sp, #14]
90011644:	466b      	mov	r3, sp
90011646:	9102      	str	r1, [sp, #8]
90011648:	f8ad 200c 	strh.w	r2, [sp, #12]
9001164c:	cb03      	ldmia	r3!, {r0, r1}
9001164e:	6020      	str	r0, [r4, #0]
90011650:	4620      	mov	r0, r4
90011652:	6061      	str	r1, [r4, #4]
90011654:	4619      	mov	r1, r3
90011656:	f7fe fc87 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001165a:	4620      	mov	r0, r4
9001165c:	b005      	add	sp, #20
9001165e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011660:	2300      	movs	r3, #0
90011662:	8023      	strh	r3, [r4, #0]
90011664:	8063      	strh	r3, [r4, #2]
90011666:	80a3      	strh	r3, [r4, #4]
90011668:	80e3      	strh	r3, [r4, #6]
9001166a:	e7f6      	b.n	9001165a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

9001166c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
9001166c:	b538      	push	{r3, r4, r5, lr}
9001166e:	2300      	movs	r3, #0
90011670:	2501      	movs	r5, #1
90011672:	4604      	mov	r4, r0
90011674:	8083      	strh	r3, [r0, #4]
90011676:	80c3      	strh	r3, [r0, #6]
90011678:	8103      	strh	r3, [r0, #8]
9001167a:	8143      	strh	r3, [r0, #10]
9001167c:	8183      	strh	r3, [r0, #12]
9001167e:	81c3      	strh	r3, [r0, #14]
90011680:	8203      	strh	r3, [r0, #16]
90011682:	8243      	strh	r3, [r0, #18]
90011684:	61c3      	str	r3, [r0, #28]
90011686:	8403      	strh	r3, [r0, #32]
90011688:	8443      	strh	r3, [r0, #34]	; 0x22
9001168a:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
9001168e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90011692:	e9c0 3305 	strd	r3, r3, [r0, #20]
90011696:	4b07      	ldr	r3, [pc, #28]	; (900116b4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90011698:	6003      	str	r3, [r0, #0]
9001169a:	880b      	ldrh	r3, [r1, #0]
9001169c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001169e:	23ff      	movs	r3, #255	; 0xff
900116a0:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
900116a4:	f000 ff6f 	bl	90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
900116a8:	4b03      	ldr	r3, [pc, #12]	; (900116b8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
900116aa:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
900116ae:	4620      	mov	r0, r4
900116b0:	6023      	str	r3, [r4, #0]
900116b2:	bd38      	pop	{r3, r4, r5, pc}
900116b4:	9002a4ec 	.word	0x9002a4ec
900116b8:	9002a2a0 	.word	0x9002a2a0

900116bc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
900116bc:	4603      	mov	r3, r0
900116be:	3026      	adds	r0, #38	; 0x26
900116c0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
900116c4:	b90b      	cbnz	r3, 900116ca <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
900116c6:	f004 bd27 	b.w	90016118 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
900116ca:	f004 bd35 	b.w	90016138 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

900116d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
900116d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900116d4:	4604      	mov	r4, r0
900116d6:	b0b3      	sub	sp, #204	; 0xcc
900116d8:	469b      	mov	fp, r3
900116da:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
900116de:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
900116e2:	2500      	movs	r5, #0
900116e4:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
900116e8:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
900116ec:	ab11      	add	r3, sp, #68	; 0x44
900116ee:	9206      	str	r2, [sp, #24]
900116f0:	4618      	mov	r0, r3
900116f2:	9511      	str	r5, [sp, #68]	; 0x44
900116f4:	9307      	str	r3, [sp, #28]
900116f6:	ad13      	add	r5, sp, #76	; 0x4c
900116f8:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
900116fc:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90011700:	f7fe fc32 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90011704:	9b07      	ldr	r3, [sp, #28]
90011706:	e893 0003 	ldmia.w	r3, {r0, r1}
9001170a:	e885 0003 	stmia.w	r5, {r0, r1}
9001170e:	6821      	ldr	r1, [r4, #0]
90011710:	4620      	mov	r0, r4
90011712:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90011714:	4629      	mov	r1, r5
90011716:	47b0      	blx	r6
90011718:	4621      	mov	r1, r4
9001171a:	a815      	add	r0, sp, #84	; 0x54
9001171c:	1d26      	adds	r6, r4, #4
9001171e:	f004 fc57 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011722:	a815      	add	r0, sp, #84	; 0x54
90011724:	f003 f98a 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90011728:	9b07      	ldr	r3, [sp, #28]
9001172a:	4631      	mov	r1, r6
9001172c:	4618      	mov	r0, r3
9001172e:	f003 f9c9 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90011732:	4628      	mov	r0, r5
90011734:	f104 0526 	add.w	r5, r4, #38	; 0x26
90011738:	f003 f980 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001173c:	4628      	mov	r0, r5
9001173e:	f006 fd5f 	bl	90018200 <_ZNK8touchgfx6Bitmap7getDataEv>
90011742:	9007      	str	r0, [sp, #28]
90011744:	2800      	cmp	r0, #0
90011746:	f000 80ce 	beq.w	900118e6 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
9001174a:	f8db 200c 	ldr.w	r2, [fp, #12]
9001174e:	a809      	add	r0, sp, #36	; 0x24
90011750:	f8db 1000 	ldr.w	r1, [fp]
90011754:	920c      	str	r2, [sp, #48]	; 0x30
90011756:	f8da 2000 	ldr.w	r2, [sl]
9001175a:	9109      	str	r1, [sp, #36]	; 0x24
9001175c:	920d      	str	r2, [sp, #52]	; 0x34
9001175e:	f8da 2004 	ldr.w	r2, [sl, #4]
90011762:	f8db 1004 	ldr.w	r1, [fp, #4]
90011766:	920e      	str	r2, [sp, #56]	; 0x38
90011768:	f8da 2008 	ldr.w	r2, [sl, #8]
9001176c:	910a      	str	r1, [sp, #40]	; 0x28
9001176e:	920f      	str	r2, [sp, #60]	; 0x3c
90011770:	f8db 1008 	ldr.w	r1, [fp, #8]
90011774:	f8da 200c 	ldr.w	r2, [sl, #12]
90011778:	910b      	str	r1, [sp, #44]	; 0x2c
9001177a:	a90d      	add	r1, sp, #52	; 0x34
9001177c:	9210      	str	r2, [sp, #64]	; 0x40
9001177e:	4632      	mov	r2, r6
90011780:	f003 f984 	bl	90014a8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011784:	4632      	mov	r2, r6
90011786:	a90e      	add	r1, sp, #56	; 0x38
90011788:	a80a      	add	r0, sp, #40	; 0x28
9001178a:	f003 f97f 	bl	90014a8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
9001178e:	4632      	mov	r2, r6
90011790:	a90f      	add	r1, sp, #60	; 0x3c
90011792:	a80b      	add	r0, sp, #44	; 0x2c
90011794:	f003 f97a 	bl	90014a8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011798:	4632      	mov	r2, r6
9001179a:	a910      	add	r1, sp, #64	; 0x40
9001179c:	a80c      	add	r0, sp, #48	; 0x30
9001179e:	f003 f975 	bl	90014a8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900117a2:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
900117a6:	ed97 3a00 	vldr	s6, [r7]
900117aa:	eef0 6a67 	vmov.f32	s13, s15
900117ae:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
900117b2:	edd7 4a01 	vldr	s9, [r7, #4]
900117b6:	eeb0 7a67 	vmov.f32	s14, s15
900117ba:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
900117be:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
900117c2:	ed99 2a00 	vldr	s4, [r9]
900117c6:	eeb0 6a67 	vmov.f32	s12, s15
900117ca:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
900117ce:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
900117d2:	edd8 2a00 	vldr	s5, [r8]
900117d6:	edd9 3a01 	vldr	s7, [r9, #4]
900117da:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900117de:	ed98 4a01 	vldr	s8, [r8, #4]
900117e2:	ed99 5a02 	vldr	s10, [r9, #8]
900117e6:	edd8 5a02 	vldr	s11, [r8, #8]
900117ea:	ee16 6a10 	vmov	r6, s12
900117ee:	eeb0 6a67 	vmov.f32	s12, s15
900117f2:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
900117f6:	f8d9 e00c 	ldr.w	lr, [r9, #12]
900117fa:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900117fe:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90011802:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90011806:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
9001180a:	ee16 0a10 	vmov	r0, s12
9001180e:	eeb0 6a67 	vmov.f32	s12, s15
90011812:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90011816:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
9001181a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001181e:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90011822:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90011826:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
9001182a:	ee16 1a10 	vmov	r1, s12
9001182e:	eeb0 6a67 	vmov.f32	s12, s15
90011832:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
90011836:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
9001183a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001183e:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
90011842:	f8d7 a008 	ldr.w	sl, [r7, #8]
90011846:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
9001184a:	68ff      	ldr	r7, [r7, #12]
9001184c:	ee16 2a10 	vmov	r2, s12
90011850:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
90011854:	9624      	str	r6, [sp, #144]	; 0x90
90011856:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001185a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
9001185e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
90011862:	4628      	mov	r0, r5
90011864:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
90011868:	9b06      	ldr	r3, [sp, #24]
9001186a:	922d      	str	r2, [sp, #180]	; 0xb4
9001186c:	4a1f      	ldr	r2, [pc, #124]	; (900118ec <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
9001186e:	9317      	str	r3, [sp, #92]	; 0x5c
90011870:	8812      	ldrh	r2, [r2, #0]
90011872:	9b07      	ldr	r3, [sp, #28]
90011874:	9218      	str	r2, [sp, #96]	; 0x60
90011876:	9319      	str	r3, [sp, #100]	; 0x64
90011878:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
9001187c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
90011880:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
90011884:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
90011888:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
9001188c:	9731      	str	r7, [sp, #196]	; 0xc4
9001188e:	f006 fce7 	bl	90018260 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90011892:	901a      	str	r0, [sp, #104]	; 0x68
90011894:	4628      	mov	r0, r5
90011896:	f006 fbc7 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001189a:	901b      	str	r0, [sp, #108]	; 0x6c
9001189c:	4628      	mov	r0, r5
9001189e:	f006 fbf7 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
900118a2:	901c      	str	r0, [sp, #112]	; 0x70
900118a4:	4628      	mov	r0, r5
900118a6:	f006 fbbf 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
900118aa:	4b11      	ldr	r3, [pc, #68]	; (900118f0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
900118ac:	901d      	str	r0, [sp, #116]	; 0x74
900118ae:	681b      	ldr	r3, [r3, #0]
900118b0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900118b4:	b10a      	cbz	r2, 900118ba <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
900118b6:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
900118b8:	b905      	cbnz	r5, 900118bc <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
900118ba:	689d      	ldr	r5, [r3, #8]
900118bc:	682b      	ldr	r3, [r5, #0]
900118be:	4620      	mov	r0, r4
900118c0:	6c1e      	ldr	r6, [r3, #64]	; 0x40
900118c2:	f7ff fefb 	bl	900116bc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
900118c6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900118ca:	aa1e      	add	r2, sp, #120	; 0x78
900118cc:	a917      	add	r1, sp, #92	; 0x5c
900118ce:	9304      	str	r3, [sp, #16]
900118d0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900118d4:	e9cd 0302 	strd	r0, r3, [sp, #8]
900118d8:	ab13      	add	r3, sp, #76	; 0x4c
900118da:	4628      	mov	r0, r5
900118dc:	9301      	str	r3, [sp, #4]
900118de:	ab15      	add	r3, sp, #84	; 0x54
900118e0:	9300      	str	r3, [sp, #0]
900118e2:	ab19      	add	r3, sp, #100	; 0x64
900118e4:	47b0      	blx	r6
900118e6:	b033      	add	sp, #204	; 0xcc
900118e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900118ec:	24023566 	.word	0x24023566
900118f0:	2402356c 	.word	0x2402356c

900118f4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
900118f4:	b570      	push	{r4, r5, r6, lr}
900118f6:	ed2d 8b04 	vpush	{d8-d9}
900118fa:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900118fe:	b098      	sub	sp, #96	; 0x60
90011900:	4604      	mov	r4, r0
90011902:	460e      	mov	r6, r1
90011904:	2b00      	cmp	r3, #0
90011906:	d065      	beq.n	900119d4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90011908:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001190c:	f100 0526 	add.w	r5, r0, #38	; 0x26
90011910:	ed9f 8a37 	vldr	s16, [pc, #220]	; 900119f0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90011914:	ee09 3a10 	vmov	s18, r3
90011918:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
9001191c:	4628      	mov	r0, r5
9001191e:	ee08 3a90 	vmov	s17, r3
90011922:	4b34      	ldr	r3, [pc, #208]	; (900119f4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90011924:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90011928:	930c      	str	r3, [sp, #48]	; 0x30
9001192a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
9001192e:	930d      	str	r3, [sp, #52]	; 0x34
90011930:	930e      	str	r3, [sp, #56]	; 0x38
90011932:	ee39 9a08 	vadd.f32	s18, s18, s16
90011936:	930f      	str	r3, [sp, #60]	; 0x3c
90011938:	f006 fb76 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001193c:	ee07 0a90 	vmov	s15, r0
90011940:	4628      	mov	r0, r5
90011942:	ee78 8a88 	vadd.f32	s17, s17, s16
90011946:	eef8 9ae7 	vcvt.f32.s32	s19, s15
9001194a:	f006 fba1 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001194e:	4b2a      	ldr	r3, [pc, #168]	; (900119f8 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90011950:	ee07 0a90 	vmov	s15, r0
90011954:	781b      	ldrb	r3, [r3, #0]
90011956:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9001195a:	eef0 7a48 	vmov.f32	s15, s16
9001195e:	2b01      	cmp	r3, #1
90011960:	d13c      	bne.n	900119dc <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90011962:	eef0 6a69 	vmov.f32	s13, s19
90011966:	ee19 3a90 	vmov	r3, s19
9001196a:	eeb0 6a47 	vmov.f32	s12, s14
9001196e:	eef0 5a47 	vmov.f32	s11, s14
90011972:	eef0 9a48 	vmov.f32	s19, s16
90011976:	eeb0 7a48 	vmov.f32	s14, s16
9001197a:	9314      	str	r3, [sp, #80]	; 0x50
9001197c:	ab14      	add	r3, sp, #80	; 0x50
9001197e:	2200      	movs	r2, #0
90011980:	4631      	mov	r1, r6
90011982:	9303      	str	r3, [sp, #12]
90011984:	ab10      	add	r3, sp, #64	; 0x40
90011986:	4620      	mov	r0, r4
90011988:	edcd 7a04 	vstr	s15, [sp, #16]
9001198c:	9302      	str	r3, [sp, #8]
9001198e:	ab0c      	add	r3, sp, #48	; 0x30
90011990:	ed8d 9a05 	vstr	s18, [sp, #20]
90011994:	9301      	str	r3, [sp, #4]
90011996:	ab08      	add	r3, sp, #32
90011998:	ed8d 9a06 	vstr	s18, [sp, #24]
9001199c:	9300      	str	r3, [sp, #0]
9001199e:	ab04      	add	r3, sp, #16
900119a0:	edcd 7a07 	vstr	s15, [sp, #28]
900119a4:	edcd 7a08 	vstr	s15, [sp, #32]
900119a8:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
900119ac:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
900119b0:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
900119b4:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
900119b8:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
900119bc:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
900119c0:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
900119c4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
900119c8:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
900119cc:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
900119d0:	f7ff fe7e 	bl	900116d0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
900119d4:	b018      	add	sp, #96	; 0x60
900119d6:	ecbd 8b04 	vpop	{d8-d9}
900119da:	bd70      	pop	{r4, r5, r6, pc}
900119dc:	eef0 6a47 	vmov.f32	s13, s14
900119e0:	ee18 3a10 	vmov	r3, s16
900119e4:	eef0 5a69 	vmov.f32	s11, s19
900119e8:	eeb0 6a48 	vmov.f32	s12, s16
900119ec:	e7c5      	b.n	9001197a <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
900119ee:	bf00      	nop
900119f0:	00000000 	.word	0x00000000
900119f4:	42c80000 	.word	0x42c80000
900119f8:	24023564 	.word	0x24023564

900119fc <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
900119fc:	2000      	movs	r0, #0
900119fe:	4770      	bx	lr

90011a00 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90011a00:	4b07      	ldr	r3, [pc, #28]	; (90011a20 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90011a02:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011a04:	881b      	ldrh	r3, [r3, #0]
90011a06:	4293      	cmp	r3, r2
90011a08:	bf81      	itttt	hi
90011a0a:	4b06      	ldrhi	r3, [pc, #24]	; (90011a24 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90011a0c:	681b      	ldrhi	r3, [r3, #0]
90011a0e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90011a12:	7858      	ldrbhi	r0, [r3, #1]
90011a14:	bf8c      	ite	hi
90011a16:	f000 0003 	andhi.w	r0, r0, #3
90011a1a:	2000      	movls	r0, #0
90011a1c:	4770      	bx	lr
90011a1e:	bf00      	nop
90011a20:	240235c8 	.word	0x240235c8
90011a24:	240235c4 	.word	0x240235c4

90011a28 <_ZN8touchgfx8TextAreaD1Ev>:
90011a28:	4770      	bx	lr
	...

90011a2c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90011a2c:	4b11      	ldr	r3, [pc, #68]	; (90011a74 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90011a2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011a32:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011a34:	4604      	mov	r4, r0
90011a36:	881b      	ldrh	r3, [r3, #0]
90011a38:	428b      	cmp	r3, r1
90011a3a:	d918      	bls.n	90011a6e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90011a3c:	6803      	ldr	r3, [r0, #0]
90011a3e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90011a40:	4b0d      	ldr	r3, [pc, #52]	; (90011a78 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90011a42:	6818      	ldr	r0, [r3, #0]
90011a44:	f7f2 fe2c 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011a48:	6823      	ldr	r3, [r4, #0]
90011a4a:	4606      	mov	r6, r0
90011a4c:	4620      	mov	r0, r4
90011a4e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011a50:	4798      	blx	r3
90011a52:	6823      	ldr	r3, [r4, #0]
90011a54:	4607      	mov	r7, r0
90011a56:	4620      	mov	r0, r4
90011a58:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011a5c:	4798      	blx	r3
90011a5e:	463a      	mov	r2, r7
90011a60:	4603      	mov	r3, r0
90011a62:	4631      	mov	r1, r6
90011a64:	4620      	mov	r0, r4
90011a66:	46ac      	mov	ip, r5
90011a68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90011a6c:	4760      	bx	ip
90011a6e:	2000      	movs	r0, #0
90011a70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011a74:	240235c8 	.word	0x240235c8
90011a78:	240235d0 	.word	0x240235d0

90011a7c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90011a7c:	4b18      	ldr	r3, [pc, #96]	; (90011ae0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90011a7e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90011a82:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011a84:	4604      	mov	r4, r0
90011a86:	881b      	ldrh	r3, [r3, #0]
90011a88:	428b      	cmp	r3, r1
90011a8a:	d926      	bls.n	90011ada <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90011a8c:	4b15      	ldr	r3, [pc, #84]	; (90011ae4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90011a8e:	681b      	ldr	r3, [r3, #0]
90011a90:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90011a94:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90011a98:	4b13      	ldr	r3, [pc, #76]	; (90011ae8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90011a9a:	7855      	ldrb	r5, [r2, #1]
90011a9c:	681b      	ldr	r3, [r3, #0]
90011a9e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90011aa2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90011aa6:	6833      	ldr	r3, [r6, #0]
90011aa8:	69df      	ldr	r7, [r3, #28]
90011aaa:	4b10      	ldr	r3, [pc, #64]	; (90011aec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90011aac:	6818      	ldr	r0, [r3, #0]
90011aae:	f7f2 fdf7 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011ab2:	6823      	ldr	r3, [r4, #0]
90011ab4:	4680      	mov	r8, r0
90011ab6:	4620      	mov	r0, r4
90011ab8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011aba:	4798      	blx	r3
90011abc:	6823      	ldr	r3, [r4, #0]
90011abe:	4681      	mov	r9, r0
90011ac0:	4620      	mov	r0, r4
90011ac2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011ac6:	4798      	blx	r3
90011ac8:	464b      	mov	r3, r9
90011aca:	9000      	str	r0, [sp, #0]
90011acc:	4642      	mov	r2, r8
90011ace:	4629      	mov	r1, r5
90011ad0:	4630      	mov	r0, r6
90011ad2:	47b8      	blx	r7
90011ad4:	b003      	add	sp, #12
90011ad6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011ada:	2000      	movs	r0, #0
90011adc:	e7fa      	b.n	90011ad4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90011ade:	bf00      	nop
90011ae0:	240235c8 	.word	0x240235c8
90011ae4:	240235c4 	.word	0x240235c4
90011ae8:	240235cc 	.word	0x240235cc
90011aec:	240235d0 	.word	0x240235d0

90011af0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90011af0:	b40e      	push	{r1, r2, r3}
90011af2:	4b30      	ldr	r3, [pc, #192]	; (90011bb4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90011af4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011af8:	881a      	ldrh	r2, [r3, #0]
90011afa:	b09d      	sub	sp, #116	; 0x74
90011afc:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90011afe:	4604      	mov	r4, r0
90011b00:	429a      	cmp	r2, r3
90011b02:	d954      	bls.n	90011bae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90011b04:	aa26      	add	r2, sp, #152	; 0x98
90011b06:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90011bb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90011b0a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90011bbc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90011b0e:	9202      	str	r2, [sp, #8]
90011b10:	f8d9 2000 	ldr.w	r2, [r9]
90011b14:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90011b18:	f8d8 3000 	ldr.w	r3, [r8]
90011b1c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011b20:	682b      	ldr	r3, [r5, #0]
90011b22:	4628      	mov	r0, r5
90011b24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011b26:	4798      	blx	r3
90011b28:	4606      	mov	r6, r0
90011b2a:	b207      	sxth	r7, r0
90011b2c:	a803      	add	r0, sp, #12
90011b2e:	f004 feee 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90011b32:	682b      	ldr	r3, [r5, #0]
90011b34:	4628      	mov	r0, r5
90011b36:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011b38:	4798      	blx	r3
90011b3a:	682b      	ldr	r3, [r5, #0]
90011b3c:	4682      	mov	sl, r0
90011b3e:	4628      	mov	r0, r5
90011b40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011b42:	4798      	blx	r3
90011b44:	4653      	mov	r3, sl
90011b46:	9000      	str	r0, [sp, #0]
90011b48:	a803      	add	r0, sp, #12
90011b4a:	9a02      	ldr	r2, [sp, #8]
90011b4c:	9925      	ldr	r1, [sp, #148]	; 0x94
90011b4e:	f004 ff39 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90011b52:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011b54:	f8d9 3000 	ldr.w	r3, [r9]
90011b58:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90011b5c:	8925      	ldrh	r5, [r4, #8]
90011b5e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90011b62:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90011b66:	eba5 050c 	sub.w	r5, r5, ip
90011b6a:	784a      	ldrb	r2, [r1, #1]
90011b6c:	f8d8 3000 	ldr.w	r3, [r8]
90011b70:	b22d      	sxth	r5, r5
90011b72:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90011b76:	f3c2 0281 	ubfx	r2, r2, #2, #2
90011b7a:	9500      	str	r5, [sp, #0]
90011b7c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90011b80:	a803      	add	r0, sp, #12
90011b82:	f002 fc61 	bl	90014448 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90011b86:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90011b8a:	b203      	sxth	r3, r0
90011b8c:	18b9      	adds	r1, r7, r2
90011b8e:	2900      	cmp	r1, #0
90011b90:	dd0b      	ble.n	90011baa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90011b92:	3b01      	subs	r3, #1
90011b94:	fb13 f302 	smulbb	r3, r3, r2
90011b98:	fb16 3300 	smlabb	r3, r6, r0, r3
90011b9c:	b21f      	sxth	r7, r3
90011b9e:	4638      	mov	r0, r7
90011ba0:	b01d      	add	sp, #116	; 0x74
90011ba2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011ba6:	b003      	add	sp, #12
90011ba8:	4770      	bx	lr
90011baa:	2b00      	cmp	r3, #0
90011bac:	dcf7      	bgt.n	90011b9e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011bae:	2700      	movs	r7, #0
90011bb0:	e7f5      	b.n	90011b9e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011bb2:	bf00      	nop
90011bb4:	240235c8 	.word	0x240235c8
90011bb8:	240235c4 	.word	0x240235c4
90011bbc:	240235cc 	.word	0x240235cc

90011bc0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90011bc0:	4bbd      	ldr	r3, [pc, #756]	; (90011eb8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90011bc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011bc6:	460c      	mov	r4, r1
90011bc8:	881b      	ldrh	r3, [r3, #0]
90011bca:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90011bcc:	b0a9      	sub	sp, #164	; 0xa4
90011bce:	4680      	mov	r8, r0
90011bd0:	428b      	cmp	r3, r1
90011bd2:	d809      	bhi.n	90011be8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90011bd4:	2300      	movs	r3, #0
90011bd6:	f04f 32ff 	mov.w	r2, #4294967295
90011bda:	6083      	str	r3, [r0, #8]
90011bdc:	e9c0 3200 	strd	r3, r2, [r0]
90011be0:	4640      	mov	r0, r8
90011be2:	b029      	add	sp, #164	; 0xa4
90011be4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011be8:	4eb4      	ldr	r6, [pc, #720]	; (90011ebc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90011bea:	6833      	ldr	r3, [r6, #0]
90011bec:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90011bf0:	4bb3      	ldr	r3, [pc, #716]	; (90011ec0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90011bf2:	681b      	ldr	r3, [r3, #0]
90011bf4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011bf8:	4bb2      	ldr	r3, [pc, #712]	; (90011ec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011bfa:	6818      	ldr	r0, [r3, #0]
90011bfc:	f7f2 fd50 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011c00:	682b      	ldr	r3, [r5, #0]
90011c02:	4681      	mov	r9, r0
90011c04:	4628      	mov	r0, r5
90011c06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011c08:	4798      	blx	r3
90011c0a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90011c0c:	b203      	sxth	r3, r0
90011c0e:	4682      	mov	sl, r0
90011c10:	4407      	add	r7, r0
90011c12:	a80f      	add	r0, sp, #60	; 0x3c
90011c14:	9304      	str	r3, [sp, #16]
90011c16:	b2bb      	uxth	r3, r7
90011c18:	9303      	str	r3, [sp, #12]
90011c1a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90011c1e:	2b00      	cmp	r3, #0
90011c20:	f040 80a5 	bne.w	90011d6e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90011c24:	f004 fe73 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90011c28:	682b      	ldr	r3, [r5, #0]
90011c2a:	4628      	mov	r0, r5
90011c2c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011c2e:	4798      	blx	r3
90011c30:	682b      	ldr	r3, [r5, #0]
90011c32:	4606      	mov	r6, r0
90011c34:	4628      	mov	r0, r5
90011c36:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011c38:	4798      	blx	r3
90011c3a:	6823      	ldr	r3, [r4, #0]
90011c3c:	4607      	mov	r7, r0
90011c3e:	4620      	mov	r0, r4
90011c40:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011c42:	4798      	blx	r3
90011c44:	6823      	ldr	r3, [r4, #0]
90011c46:	4683      	mov	fp, r0
90011c48:	4620      	mov	r0, r4
90011c4a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011c4e:	4798      	blx	r3
90011c50:	463b      	mov	r3, r7
90011c52:	4649      	mov	r1, r9
90011c54:	4632      	mov	r2, r6
90011c56:	2600      	movs	r6, #0
90011c58:	e9cd b000 	strd	fp, r0, [sp]
90011c5c:	a80f      	add	r0, sp, #60	; 0x3c
90011c5e:	4637      	mov	r7, r6
90011c60:	f004 fec5 	bl	900169ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011c64:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011c68:	f8df b250 	ldr.w	fp, [pc, #592]	; 90011ebc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90011c6c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011c70:	bf0c      	ite	eq
90011c72:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90011c76:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90011c7a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011c7c:	4629      	mov	r1, r5
90011c7e:	f8db 3000 	ldr.w	r3, [fp]
90011c82:	a80f      	add	r0, sp, #60	; 0x3c
90011c84:	3701      	adds	r7, #1
90011c86:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90011c8a:	f647 72ff 	movw	r2, #32767	; 0x7fff
90011c8e:	b2bf      	uxth	r7, r7
90011c90:	785b      	ldrb	r3, [r3, #1]
90011c92:	f3c3 0381 	ubfx	r3, r3, #2, #2
90011c96:	f002 f8de 	bl	90013e56 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90011c9a:	9b03      	ldr	r3, [sp, #12]
90011c9c:	4286      	cmp	r6, r0
90011c9e:	eba9 0903 	sub.w	r9, r9, r3
90011ca2:	bfb8      	it	lt
90011ca4:	4606      	movlt	r6, r0
90011ca6:	a80f      	add	r0, sp, #60	; 0x3c
90011ca8:	fa0f f989 	sxth.w	r9, r9
90011cac:	b236      	sxth	r6, r6
90011cae:	f004 fe55 	bl	9001695c <_ZN8touchgfx12TextProvider11endOfStringEv>
90011cb2:	b918      	cbnz	r0, 90011cbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011cb4:	7a2b      	ldrb	r3, [r5, #8]
90011cb6:	444b      	add	r3, r9
90011cb8:	2b00      	cmp	r3, #0
90011cba:	dcde      	bgt.n	90011c7a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90011cbc:	9b03      	ldr	r3, [sp, #12]
90011cbe:	4620      	mov	r0, r4
90011cc0:	9a04      	ldr	r2, [sp, #16]
90011cc2:	fb13 f707 	smulbb	r7, r3, r7
90011cc6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90011cc8:	f895 9009 	ldrb.w	r9, [r5, #9]
90011ccc:	1aff      	subs	r7, r7, r3
90011cce:	b2bf      	uxth	r7, r7
90011cd0:	b23b      	sxth	r3, r7
90011cd2:	429a      	cmp	r2, r3
90011cd4:	bfa8      	it	ge
90011cd6:	4657      	movge	r7, sl
90011cd8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011cdc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011ce0:	6823      	ldr	r3, [r4, #0]
90011ce2:	444f      	add	r7, r9
90011ce4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011ce6:	bf08      	it	eq
90011ce8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90011cec:	fa1f f987 	uxth.w	r9, r7
90011cf0:	bf18      	it	ne
90011cf2:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90011cf6:	4798      	blx	r3
90011cf8:	2801      	cmp	r0, #1
90011cfa:	fa0f f789 	sxth.w	r7, r9
90011cfe:	b2b3      	uxth	r3, r6
90011d00:	f000 80e2 	beq.w	90011ec8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90011d04:	2802      	cmp	r0, #2
90011d06:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90011d0a:	f000 80e3 	beq.w	90011ed4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90011d0e:	7aea      	ldrb	r2, [r5, #11]
90011d10:	b236      	sxth	r6, r6
90011d12:	7b2d      	ldrb	r5, [r5, #12]
90011d14:	1ab6      	subs	r6, r6, r2
90011d16:	442a      	add	r2, r5
90011d18:	fa1f fa86 	uxth.w	sl, r6
90011d1c:	4413      	add	r3, r2
90011d1e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90011d22:	fa0f fb8a 	sxth.w	fp, sl
90011d26:	b29b      	uxth	r3, r3
90011d28:	2a02      	cmp	r2, #2
90011d2a:	b21e      	sxth	r6, r3
90011d2c:	f000 80d6 	beq.w	90011edc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90011d30:	2a03      	cmp	r2, #3
90011d32:	f000 80de 	beq.w	90011ef2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90011d36:	2a01      	cmp	r2, #1
90011d38:	f040 80e6 	bne.w	90011f08 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90011d3c:	8925      	ldrh	r5, [r4, #8]
90011d3e:	4633      	mov	r3, r6
90011d40:	463e      	mov	r6, r7
90011d42:	eba5 0909 	sub.w	r9, r5, r9
90011d46:	461f      	mov	r7, r3
90011d48:	465d      	mov	r5, fp
90011d4a:	fa0f fb89 	sxth.w	fp, r9
90011d4e:	4b5d      	ldr	r3, [pc, #372]	; (90011ec4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011d50:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011d52:	6818      	ldr	r0, [r3, #0]
90011d54:	f7f2 fca4 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011d58:	f8a8 b000 	strh.w	fp, [r8]
90011d5c:	f8a8 5002 	strh.w	r5, [r8, #2]
90011d60:	f8a8 6004 	strh.w	r6, [r8, #4]
90011d64:	f8a8 7006 	strh.w	r7, [r8, #6]
90011d68:	f8c8 0008 	str.w	r0, [r8, #8]
90011d6c:	e738      	b.n	90011be0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90011d6e:	f004 fdce 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90011d72:	682b      	ldr	r3, [r5, #0]
90011d74:	4628      	mov	r0, r5
90011d76:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011d78:	4798      	blx	r3
90011d7a:	682b      	ldr	r3, [r5, #0]
90011d7c:	4607      	mov	r7, r0
90011d7e:	4628      	mov	r0, r5
90011d80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011d82:	4798      	blx	r3
90011d84:	6823      	ldr	r3, [r4, #0]
90011d86:	4683      	mov	fp, r0
90011d88:	4620      	mov	r0, r4
90011d8a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011d8c:	4798      	blx	r3
90011d8e:	6822      	ldr	r2, [r4, #0]
90011d90:	9005      	str	r0, [sp, #20]
90011d92:	4620      	mov	r0, r4
90011d94:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90011d98:	4790      	blx	r2
90011d9a:	9b05      	ldr	r3, [sp, #20]
90011d9c:	463a      	mov	r2, r7
90011d9e:	4649      	mov	r1, r9
90011da0:	9001      	str	r0, [sp, #4]
90011da2:	a80f      	add	r0, sp, #60	; 0x3c
90011da4:	9300      	str	r3, [sp, #0]
90011da6:	465b      	mov	r3, fp
90011da8:	f004 fe21 	bl	900169ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011dac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011db0:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90011db4:	af0f      	add	r7, sp, #60	; 0x3c
90011db6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011dba:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011dbe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011dc0:	bf0a      	itet	eq
90011dc2:	464a      	moveq	r2, r9
90011dc4:	461a      	movne	r2, r3
90011dc6:	4699      	moveq	r9, r3
90011dc8:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90011dcc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90011dd0:	1ad2      	subs	r2, r2, r3
90011dd2:	6833      	ldr	r3, [r6, #0]
90011dd4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90011dd8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90011ddc:	7859      	ldrb	r1, [r3, #1]
90011dde:	2300      	movs	r3, #0
90011de0:	9707      	str	r7, [sp, #28]
90011de2:	f3c1 0181 	ubfx	r1, r1, #2, #2
90011de6:	f8ad 3018 	strh.w	r3, [sp, #24]
90011dea:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90011dee:	f88d 1020 	strb.w	r1, [sp, #32]
90011df2:	9509      	str	r5, [sp, #36]	; 0x24
90011df4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90011df8:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90011dfc:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90011e00:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90011e04:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90011e08:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90011e0c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90011e10:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011e14:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011e18:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90011e1c:	b350      	cbz	r0, 90011e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011e1e:	682b      	ldr	r3, [r5, #0]
90011e20:	4628      	mov	r0, r5
90011e22:	695b      	ldr	r3, [r3, #20]
90011e24:	4798      	blx	r3
90011e26:	4607      	mov	r7, r0
90011e28:	b320      	cbz	r0, 90011e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011e2a:	9809      	ldr	r0, [sp, #36]	; 0x24
90011e2c:	4639      	mov	r1, r7
90011e2e:	6803      	ldr	r3, [r0, #0]
90011e30:	68db      	ldr	r3, [r3, #12]
90011e32:	4798      	blx	r3
90011e34:	4606      	mov	r6, r0
90011e36:	b1e8      	cbz	r0, 90011e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011e38:	7b43      	ldrb	r3, [r0, #13]
90011e3a:	7a82      	ldrb	r2, [r0, #10]
90011e3c:	005b      	lsls	r3, r3, #1
90011e3e:	f403 7380 	and.w	r3, r3, #256	; 0x100
90011e42:	4313      	orrs	r3, r2
90011e44:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011e48:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90011e4c:	2b06      	cmp	r3, #6
90011e4e:	d111      	bne.n	90011e74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011e50:	9809      	ldr	r0, [sp, #36]	; 0x24
90011e52:	4632      	mov	r2, r6
90011e54:	4639      	mov	r1, r7
90011e56:	6803      	ldr	r3, [r0, #0]
90011e58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90011e5a:	4798      	blx	r3
90011e5c:	7b73      	ldrb	r3, [r6, #13]
90011e5e:	005b      	lsls	r3, r3, #1
90011e60:	f403 7280 	and.w	r2, r3, #256	; 0x100
90011e64:	7ab3      	ldrb	r3, [r6, #10]
90011e66:	4313      	orrs	r3, r2
90011e68:	4418      	add	r0, r3
90011e6a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011e6e:	4418      	add	r0, r3
90011e70:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90011e74:	2600      	movs	r6, #0
90011e76:	4637      	mov	r7, r6
90011e78:	a806      	add	r0, sp, #24
90011e7a:	3701      	adds	r7, #1
90011e7c:	f002 f9e1 	bl	90014242 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90011e80:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90011e84:	9b03      	ldr	r3, [sp, #12]
90011e86:	b2bf      	uxth	r7, r7
90011e88:	4286      	cmp	r6, r0
90011e8a:	eba9 0903 	sub.w	r9, r9, r3
90011e8e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90011e92:	bfb8      	it	lt
90011e94:	4606      	movlt	r6, r0
90011e96:	fa0f f989 	sxth.w	r9, r9
90011e9a:	b236      	sxth	r6, r6
90011e9c:	2b00      	cmp	r3, #0
90011e9e:	f43f af0d 	beq.w	90011cbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011ea2:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90011ea6:	2b00      	cmp	r3, #0
90011ea8:	f47f af08 	bne.w	90011cbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011eac:	7a2b      	ldrb	r3, [r5, #8]
90011eae:	444b      	add	r3, r9
90011eb0:	2b00      	cmp	r3, #0
90011eb2:	dce1      	bgt.n	90011e78 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90011eb4:	e702      	b.n	90011cbc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011eb6:	bf00      	nop
90011eb8:	240235c8 	.word	0x240235c8
90011ebc:	240235c4 	.word	0x240235c4
90011ec0:	240235cc 	.word	0x240235cc
90011ec4:	240235d0 	.word	0x240235d0
90011ec8:	ebaa 0606 	sub.w	r6, sl, r6
90011ecc:	2002      	movs	r0, #2
90011ece:	fb96 f6f0 	sdiv	r6, r6, r0
90011ed2:	e71c      	b.n	90011d0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90011ed4:	441e      	add	r6, r3
90011ed6:	ebaa 0606 	sub.w	r6, sl, r6
90011eda:	e718      	b.n	90011d0e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90011edc:	8925      	ldrh	r5, [r4, #8]
90011ede:	1aed      	subs	r5, r5, r3
90011ee0:	eba5 050a 	sub.w	r5, r5, sl
90011ee4:	fa0f fb85 	sxth.w	fp, r5
90011ee8:	8965      	ldrh	r5, [r4, #10]
90011eea:	eba5 0509 	sub.w	r5, r5, r9
90011eee:	b22d      	sxth	r5, r5
90011ef0:	e72d      	b.n	90011d4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90011ef2:	8965      	ldrh	r5, [r4, #10]
90011ef4:	f04f 0b00 	mov.w	fp, #0
90011ef8:	1aed      	subs	r5, r5, r3
90011efa:	4633      	mov	r3, r6
90011efc:	463e      	mov	r6, r7
90011efe:	eba5 050a 	sub.w	r5, r5, sl
90011f02:	461f      	mov	r7, r3
90011f04:	b22d      	sxth	r5, r5
90011f06:	e722      	b.n	90011d4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90011f08:	2500      	movs	r5, #0
90011f0a:	e720      	b.n	90011d4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

90011f0c <_ZN8touchgfx8TextAreaD0Ev>:
90011f0c:	b510      	push	{r4, lr}
90011f0e:	4604      	mov	r4, r0
90011f10:	2148      	movs	r1, #72	; 0x48
90011f12:	f014 f896 	bl	90026042 <_ZdlPvj>
90011f16:	4620      	mov	r0, r4
90011f18:	bd10      	pop	{r4, pc}
	...

90011f1c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
90011f1c:	b513      	push	{r0, r1, r4, lr}
90011f1e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90011f22:	4604      	mov	r4, r0
90011f24:	b1fb      	cbz	r3, 90011f66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011f26:	4b16      	ldr	r3, [pc, #88]	; (90011f80 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90011f28:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011f2a:	881b      	ldrh	r3, [r3, #0]
90011f2c:	428b      	cmp	r3, r1
90011f2e:	d91a      	bls.n	90011f66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011f30:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90011f34:	2b00      	cmp	r3, #0
90011f36:	dd16      	ble.n	90011f66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011f38:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011f3c:	2b00      	cmp	r3, #0
90011f3e:	dd12      	ble.n	90011f66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011f40:	4b10      	ldr	r3, [pc, #64]	; (90011f84 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
90011f42:	6818      	ldr	r0, [r3, #0]
90011f44:	f7f2 fbac 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011f48:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90011f4c:	6822      	ldr	r2, [r4, #0]
90011f4e:	2b00      	cmp	r3, #0
90011f50:	db06      	blt.n	90011f60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90011f52:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90011f56:	2b00      	cmp	r3, #0
90011f58:	db02      	blt.n	90011f60 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90011f5a:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011f5c:	4298      	cmp	r0, r3
90011f5e:	d004      	beq.n	90011f6a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90011f60:	6953      	ldr	r3, [r2, #20]
90011f62:	4620      	mov	r0, r4
90011f64:	4798      	blx	r3
90011f66:	b002      	add	sp, #8
90011f68:	bd10      	pop	{r4, pc}
90011f6a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
90011f6e:	466b      	mov	r3, sp
90011f70:	6912      	ldr	r2, [r2, #16]
90011f72:	c903      	ldmia	r1, {r0, r1}
90011f74:	e883 0003 	stmia.w	r3, {r0, r1}
90011f78:	4619      	mov	r1, r3
90011f7a:	4620      	mov	r0, r4
90011f7c:	4790      	blx	r2
90011f7e:	e7f2      	b.n	90011f66 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90011f80:	240235c8 	.word	0x240235c8
90011f84:	240235d0 	.word	0x240235d0

90011f88 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90011f88:	4b45      	ldr	r3, [pc, #276]	; (900120a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90011f8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011f8e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011f90:	b08e      	sub	sp, #56	; 0x38
90011f92:	881b      	ldrh	r3, [r3, #0]
90011f94:	4604      	mov	r4, r0
90011f96:	4293      	cmp	r3, r2
90011f98:	d97e      	bls.n	90012098 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011f9a:	6808      	ldr	r0, [r1, #0]
90011f9c:	ab05      	add	r3, sp, #20
90011f9e:	6849      	ldr	r1, [r1, #4]
90011fa0:	4d40      	ldr	r5, [pc, #256]	; (900120a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90011fa2:	c303      	stmia	r3!, {r0, r1}
90011fa4:	4611      	mov	r1, r2
90011fa6:	6828      	ldr	r0, [r5, #0]
90011fa8:	f7f2 fb7a 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90011fac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90011fb0:	2b00      	cmp	r3, #0
90011fb2:	db11      	blt.n	90011fd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011fb4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90011fb8:	2b00      	cmp	r3, #0
90011fba:	db0d      	blt.n	90011fd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011fbc:	6c63      	ldr	r3, [r4, #68]	; 0x44
90011fbe:	4298      	cmp	r0, r3
90011fc0:	d10a      	bne.n	90011fd8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90011fc2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90011fc6:	ab09      	add	r3, sp, #36	; 0x24
90011fc8:	e892 0003 	ldmia.w	r2, {r0, r1}
90011fcc:	e883 0003 	stmia.w	r3, {r0, r1}
90011fd0:	4619      	mov	r1, r3
90011fd2:	a805      	add	r0, sp, #20
90011fd4:	f7fd ffc8 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90011fd8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90011fdc:	2b00      	cmp	r3, #0
90011fde:	dd5b      	ble.n	90012098 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011fe0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90011fe4:	2b00      	cmp	r3, #0
90011fe6:	dd57      	ble.n	90012098 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011fe8:	4f2f      	ldr	r7, [pc, #188]	; (900120a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
90011fea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011fec:	683b      	ldr	r3, [r7, #0]
90011fee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90011ff2:	4b2e      	ldr	r3, [pc, #184]	; (900120ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90011ff4:	681b      	ldr	r3, [r3, #0]
90011ff6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90011ffa:	2e00      	cmp	r6, #0
90011ffc:	d04c      	beq.n	90012098 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90011ffe:	6823      	ldr	r3, [r4, #0]
90012000:	4620      	mov	r0, r4
90012002:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90012006:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90012008:	4798      	blx	r3
9001200a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001200c:	683b      	ldr	r3, [r7, #0]
9001200e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90012012:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90012016:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
9001201a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
9001201e:	785b      	ldrb	r3, [r3, #1]
90012020:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90012024:	f3c3 0381 	ubfx	r3, r3, #2, #2
90012028:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001202a:	9609      	str	r6, [sp, #36]	; 0x24
9001202c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90012030:	4b1f      	ldr	r3, [pc, #124]	; (900120b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
90012032:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
90012036:	681b      	ldr	r3, [r3, #0]
90012038:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
9001203c:	910b      	str	r1, [sp, #44]	; 0x2c
9001203e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
90012042:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
90012046:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
9001204a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
9001204e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012052:	b10a      	cbz	r2, 90012058 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
90012054:	6cde      	ldr	r6, [r3, #76]	; 0x4c
90012056:	b906      	cbnz	r6, 9001205a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90012058:	689e      	ldr	r6, [r3, #8]
9001205a:	af07      	add	r7, sp, #28
9001205c:	4621      	mov	r1, r4
9001205e:	4638      	mov	r0, r7
90012060:	f003 ffb6 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90012064:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90012066:	6828      	ldr	r0, [r5, #0]
90012068:	f7f2 fb1a 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
9001206c:	6823      	ldr	r3, [r4, #0]
9001206e:	4605      	mov	r5, r0
90012070:	4620      	mov	r0, r4
90012072:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90012074:	4798      	blx	r3
90012076:	6823      	ldr	r3, [r4, #0]
90012078:	4680      	mov	r8, r0
9001207a:	4620      	mov	r0, r4
9001207c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012080:	4798      	blx	r3
90012082:	ab09      	add	r3, sp, #36	; 0x24
90012084:	9501      	str	r5, [sp, #4]
90012086:	9300      	str	r3, [sp, #0]
90012088:	ab05      	add	r3, sp, #20
9001208a:	e9cd 8002 	strd	r8, r0, [sp, #8]
9001208e:	4630      	mov	r0, r6
90012090:	e897 0006 	ldmia.w	r7, {r1, r2}
90012094:	f7f2 fab4 	bl	90004600 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012098:	b00e      	add	sp, #56	; 0x38
9001209a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001209e:	bf00      	nop
900120a0:	240235c8 	.word	0x240235c8
900120a4:	240235d0 	.word	0x240235d0
900120a8:	240235c4 	.word	0x240235c4
900120ac:	240235cc 	.word	0x240235cc
900120b0:	2402356c 	.word	0x2402356c

900120b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
900120b4:	b570      	push	{r4, r5, r6, lr}
900120b6:	6803      	ldr	r3, [r0, #0]
900120b8:	4604      	mov	r4, r0
900120ba:	4615      	mov	r5, r2
900120bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900120be:	4798      	blx	r3
900120c0:	6823      	ldr	r3, [r4, #0]
900120c2:	4629      	mov	r1, r5
900120c4:	4620      	mov	r0, r4
900120c6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900120c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900120cc:	4718      	bx	r3
	...

900120d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
900120d0:	b538      	push	{r3, r4, r5, lr}
900120d2:	4b0e      	ldr	r3, [pc, #56]	; (9001210c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
900120d4:	4604      	mov	r4, r0
900120d6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900120d8:	881b      	ldrh	r3, [r3, #0]
900120da:	429a      	cmp	r2, r3
900120dc:	d214      	bcs.n	90012108 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900120de:	6803      	ldr	r3, [r0, #0]
900120e0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900120e2:	4798      	blx	r3
900120e4:	6823      	ldr	r3, [r4, #0]
900120e6:	4605      	mov	r5, r0
900120e8:	4620      	mov	r0, r4
900120ea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900120ec:	4798      	blx	r3
900120ee:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900120f2:	b22d      	sxth	r5, r5
900120f4:	4601      	mov	r1, r0
900120f6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
900120fa:	bf06      	itte	eq
900120fc:	4602      	moveq	r2, r0
900120fe:	4629      	moveq	r1, r5
90012100:	462a      	movne	r2, r5
90012102:	4620      	mov	r0, r4
90012104:	f7ff ffd6 	bl	900120b4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90012108:	bd38      	pop	{r3, r4, r5, pc}
9001210a:	bf00      	nop
9001210c:	240235c8 	.word	0x240235c8

90012110 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90012110:	b530      	push	{r4, r5, lr}
90012112:	888b      	ldrh	r3, [r1, #4]
90012114:	b085      	sub	sp, #20
90012116:	4604      	mov	r4, r0
90012118:	8583      	strh	r3, [r0, #44]	; 0x2c
9001211a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001211e:	b923      	cbnz	r3, 9001212a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012120:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012124:	b90b      	cbnz	r3, 9001212a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012126:	f7ff ffd3 	bl	900120d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001212a:	6823      	ldr	r3, [r4, #0]
9001212c:	466d      	mov	r5, sp
9001212e:	4621      	mov	r1, r4
90012130:	343c      	adds	r4, #60	; 0x3c
90012132:	4628      	mov	r0, r5
90012134:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90012138:	4798      	blx	r3
9001213a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
9001213e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
90012142:	b005      	add	sp, #20
90012144:	bd30      	pop	{r4, r5, pc}

90012146 <_ZNK8touchgfx3Box12getSolidRectEv>:
90012146:	2300      	movs	r3, #0
90012148:	8083      	strh	r3, [r0, #4]
9001214a:	80c3      	strh	r3, [r0, #6]
9001214c:	8003      	strh	r3, [r0, #0]
9001214e:	8043      	strh	r3, [r0, #2]
90012150:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
90012154:	2bff      	cmp	r3, #255	; 0xff
90012156:	bf01      	itttt	eq
90012158:	890b      	ldrheq	r3, [r1, #8]
9001215a:	8083      	strheq	r3, [r0, #4]
9001215c:	894b      	ldrheq	r3, [r1, #10]
9001215e:	80c3      	strheq	r3, [r0, #6]
90012160:	4770      	bx	lr
	...

90012164 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
90012164:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012166:	4604      	mov	r4, r0
90012168:	466b      	mov	r3, sp
9001216a:	6808      	ldr	r0, [r1, #0]
9001216c:	6849      	ldr	r1, [r1, #4]
9001216e:	c303      	stmia	r3!, {r0, r1}
90012170:	6823      	ldr	r3, [r4, #0]
90012172:	4669      	mov	r1, sp
90012174:	4620      	mov	r0, r4
90012176:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90012178:	4798      	blx	r3
9001217a:	4b08      	ldr	r3, [pc, #32]	; (9001219c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
9001217c:	681b      	ldr	r3, [r3, #0]
9001217e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90012182:	b10a      	cbz	r2, 90012188 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
90012184:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90012186:	b900      	cbnz	r0, 9001218a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90012188:	6898      	ldr	r0, [r3, #8]
9001218a:	6803      	ldr	r3, [r0, #0]
9001218c:	4669      	mov	r1, sp
9001218e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90012190:	6a1d      	ldr	r5, [r3, #32]
90012192:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012196:	47a8      	blx	r5
90012198:	b003      	add	sp, #12
9001219a:	bd30      	pop	{r4, r5, pc}
9001219c:	2402356c 	.word	0x2402356c

900121a0 <_ZN8touchgfx3BoxD1Ev>:
900121a0:	4770      	bx	lr

900121a2 <_ZN8touchgfx3BoxD0Ev>:
900121a2:	b510      	push	{r4, lr}
900121a4:	4604      	mov	r4, r0
900121a6:	212c      	movs	r1, #44	; 0x2c
900121a8:	f013 ff4b 	bl	90026042 <_ZdlPvj>
900121ac:	4620      	mov	r0, r4
900121ae:	bd10      	pop	{r4, pc}

900121b0 <_ZNK8touchgfx3Box17invalidateContentEv>:
900121b0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
900121b4:	b12a      	cbz	r2, 900121c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900121b6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900121ba:	b112      	cbz	r2, 900121c2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
900121bc:	6803      	ldr	r3, [r0, #0]
900121be:	695b      	ldr	r3, [r3, #20]
900121c0:	4718      	bx	r3
900121c2:	4770      	bx	lr

900121c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
900121c4:	4b30      	ldr	r3, [pc, #192]	; (90012288 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
900121c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900121ca:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
900121cc:	b08d      	sub	sp, #52	; 0x34
900121ce:	881b      	ldrh	r3, [r3, #0]
900121d0:	4604      	mov	r4, r0
900121d2:	460f      	mov	r7, r1
900121d4:	4293      	cmp	r3, r2
900121d6:	d954      	bls.n	90012282 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900121d8:	4b2c      	ldr	r3, [pc, #176]	; (9001228c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
900121da:	6819      	ldr	r1, [r3, #0]
900121dc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
900121e0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
900121e4:	4a2a      	ldr	r2, [pc, #168]	; (90012290 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
900121e6:	6812      	ldr	r2, [r2, #0]
900121e8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
900121ec:	2900      	cmp	r1, #0
900121ee:	d048      	beq.n	90012282 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
900121f0:	785a      	ldrb	r2, [r3, #1]
900121f2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
900121f6:	f3c2 0801 	ubfx	r8, r2, #0, #2
900121fa:	f3c2 0281 	ubfx	r2, r2, #2, #2
900121fe:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90012202:	4b24      	ldr	r3, [pc, #144]	; (90012294 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90012204:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90012208:	681a      	ldr	r2, [r3, #0]
9001220a:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
9001220e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90012212:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
90012216:	6b26      	ldr	r6, [r4, #48]	; 0x30
90012218:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
9001221c:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90012220:	9107      	str	r1, [sp, #28]
90012222:	f88d 8020 	strb.w	r8, [sp, #32]
90012226:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9001222a:	9609      	str	r6, [sp, #36]	; 0x24
9001222c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
90012230:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
90012234:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
90012238:	b10b      	cbz	r3, 9001223e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
9001223a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
9001223c:	b905      	cbnz	r5, 90012240 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
9001223e:	6895      	ldr	r5, [r2, #8]
90012240:	ae05      	add	r6, sp, #20
90012242:	4621      	mov	r1, r4
90012244:	4630      	mov	r0, r6
90012246:	f003 fec3 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001224a:	4b13      	ldr	r3, [pc, #76]	; (90012298 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
9001224c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
9001224e:	6818      	ldr	r0, [r3, #0]
90012250:	f7f2 fa26 	bl	900046a0 <_ZNK8touchgfx5Texts7getTextEt>
90012254:	6823      	ldr	r3, [r4, #0]
90012256:	4680      	mov	r8, r0
90012258:	4620      	mov	r0, r4
9001225a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
9001225c:	4798      	blx	r3
9001225e:	6823      	ldr	r3, [r4, #0]
90012260:	4681      	mov	r9, r0
90012262:	4620      	mov	r0, r4
90012264:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90012268:	4798      	blx	r3
9001226a:	ab07      	add	r3, sp, #28
9001226c:	f8cd 8004 	str.w	r8, [sp, #4]
90012270:	9300      	str	r3, [sp, #0]
90012272:	463b      	mov	r3, r7
90012274:	e9cd 9002 	strd	r9, r0, [sp, #8]
90012278:	4628      	mov	r0, r5
9001227a:	e896 0006 	ldmia.w	r6, {r1, r2}
9001227e:	f7f2 f9bf 	bl	90004600 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012282:	b00d      	add	sp, #52	; 0x34
90012284:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012288:	240235c8 	.word	0x240235c8
9001228c:	240235c4 	.word	0x240235c4
90012290:	240235cc 	.word	0x240235cc
90012294:	2402356c 	.word	0x2402356c
90012298:	240235d0 	.word	0x240235d0

9001229c <_ZN8touchgfx13BoxWithBorderD1Ev>:
9001229c:	4770      	bx	lr

9001229e <_ZN8touchgfx13BoxWithBorderD0Ev>:
9001229e:	b510      	push	{r4, lr}
900122a0:	4604      	mov	r4, r0
900122a2:	2134      	movs	r1, #52	; 0x34
900122a4:	f013 fecd 	bl	90026042 <_ZdlPvj>
900122a8:	4620      	mov	r0, r4
900122aa:	bd10      	pop	{r4, pc}

900122ac <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
900122ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900122b0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900122b2:	4604      	mov	r4, r0
900122b4:	460e      	mov	r6, r1
900122b6:	b08e      	sub	sp, #56	; 0x38
900122b8:	b218      	sxth	r0, r3
900122ba:	8921      	ldrh	r1, [r4, #8]
900122bc:	005b      	lsls	r3, r3, #1
900122be:	8962      	ldrh	r2, [r4, #10]
900122c0:	f8ad 0000 	strh.w	r0, [sp]
900122c4:	b29b      	uxth	r3, r3
900122c6:	f8ad 0002 	strh.w	r0, [sp, #2]
900122ca:	1ac9      	subs	r1, r1, r3
900122cc:	1ad3      	subs	r3, r2, r3
900122ce:	b209      	sxth	r1, r1
900122d0:	b21b      	sxth	r3, r3
900122d2:	2900      	cmp	r1, #0
900122d4:	f8ad 1004 	strh.w	r1, [sp, #4]
900122d8:	f8ad 3006 	strh.w	r3, [sp, #6]
900122dc:	dd5e      	ble.n	9001239c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
900122de:	2b00      	cmp	r3, #0
900122e0:	dd5c      	ble.n	9001239c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
900122e2:	6830      	ldr	r0, [r6, #0]
900122e4:	ab02      	add	r3, sp, #8
900122e6:	6871      	ldr	r1, [r6, #4]
900122e8:	c303      	stmia	r3!, {r0, r1}
900122ea:	4669      	mov	r1, sp
900122ec:	a802      	add	r0, sp, #8
900122ee:	f7fd fe3b 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
900122f2:	4620      	mov	r0, r4
900122f4:	a902      	add	r1, sp, #8
900122f6:	f7ff ff35 	bl	90012164 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
900122fa:	8e20      	ldrh	r0, [r4, #48]	; 0x30
900122fc:	2800      	cmp	r0, #0
900122fe:	d05f      	beq.n	900123c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90012300:	8963      	ldrh	r3, [r4, #10]
90012302:	b202      	sxth	r2, r0
90012304:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90012308:	2500      	movs	r5, #0
9001230a:	1a1f      	subs	r7, r3, r0
9001230c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90012310:	f8ad 101c 	strh.w	r1, [sp, #28]
90012314:	b21b      	sxth	r3, r3
90012316:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001231a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
9001231e:	af04      	add	r7, sp, #16
90012320:	1a09      	subs	r1, r1, r0
90012322:	9506      	str	r5, [sp, #24]
90012324:	f8ad 201e 	strh.w	r2, [sp, #30]
90012328:	f8ad 5020 	strh.w	r5, [sp, #32]
9001232c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
90012330:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
90012334:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90012338:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
9001233c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90012340:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
90012344:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90012348:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001234c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90012350:	ab06      	add	r3, sp, #24
90012352:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90012356:	e893 0003 	ldmia.w	r3, {r0, r1}
9001235a:	e887 0003 	stmia.w	r7, {r0, r1}
9001235e:	4631      	mov	r1, r6
90012360:	4638      	mov	r0, r7
90012362:	f7fd fe01 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90012366:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001236a:	2b00      	cmp	r3, #0
9001236c:	dd12      	ble.n	90012394 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
9001236e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90012372:	2b00      	cmp	r3, #0
90012374:	dd0e      	ble.n	90012394 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
90012376:	6823      	ldr	r3, [r4, #0]
90012378:	4639      	mov	r1, r7
9001237a:	4620      	mov	r0, r4
9001237c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001237e:	4798      	blx	r3
90012380:	f7fe f8d6 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90012384:	6803      	ldr	r3, [r0, #0]
90012386:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012388:	4639      	mov	r1, r7
9001238a:	f8d3 8020 	ldr.w	r8, [r3, #32]
9001238e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012392:	47c0      	blx	r8
90012394:	3501      	adds	r5, #1
90012396:	2d04      	cmp	r5, #4
90012398:	d1da      	bne.n	90012350 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001239a:	e011      	b.n	900123c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
9001239c:	6830      	ldr	r0, [r6, #0]
9001239e:	ab06      	add	r3, sp, #24
900123a0:	6871      	ldr	r1, [r6, #4]
900123a2:	c303      	stmia	r3!, {r0, r1}
900123a4:	6823      	ldr	r3, [r4, #0]
900123a6:	a906      	add	r1, sp, #24
900123a8:	4620      	mov	r0, r4
900123aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900123ac:	4798      	blx	r3
900123ae:	f7fe f8bf 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
900123b2:	6803      	ldr	r3, [r0, #0]
900123b4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900123b6:	a906      	add	r1, sp, #24
900123b8:	6a1d      	ldr	r5, [r3, #32]
900123ba:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
900123be:	47a8      	blx	r5
900123c0:	b00e      	add	sp, #56	; 0x38
900123c2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900123c6 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
900123c6:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
900123ca:	4770      	bx	lr

900123cc <_ZNK8touchgfx6Button17invalidateContentEv>:
900123cc:	b508      	push	{r3, lr}
900123ce:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
900123d2:	b10b      	cbz	r3, 900123d8 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
900123d4:	f7f0 f808 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900123d8:	bd08      	pop	{r3, pc}

900123da <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
900123da:	4770      	bx	lr

900123dc <_ZN8touchgfx14ButtonWithIconD1Ev>:
900123dc:	4770      	bx	lr

900123de <_ZN8touchgfx14ButtonWithIconD0Ev>:
900123de:	b510      	push	{r4, lr}
900123e0:	4604      	mov	r4, r0
900123e2:	213c      	movs	r1, #60	; 0x3c
900123e4:	f013 fe2d 	bl	90026042 <_ZdlPvj>
900123e8:	4620      	mov	r0, r4
900123ea:	bd10      	pop	{r4, pc}

900123ec <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
900123ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900123f0:	461c      	mov	r4, r3
900123f2:	4606      	mov	r6, r0
900123f4:	9f06      	ldr	r7, [sp, #24]
900123f6:	f013 fd74 	bl	90025ee2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
900123fa:	8823      	ldrh	r3, [r4, #0]
900123fc:	f04f 0802 	mov.w	r8, #2
90012400:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90012404:	4638      	mov	r0, r7
90012406:	86b3      	strh	r3, [r6, #52]	; 0x34
90012408:	883b      	ldrh	r3, [r7, #0]
9001240a:	fb95 f5f8 	sdiv	r5, r5, r8
9001240e:	86f3      	strh	r3, [r6, #54]	; 0x36
90012410:	b2ad      	uxth	r5, r5
90012412:	f005 fe09 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012416:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001241a:	fb90 f0f8 	sdiv	r0, r0, r8
9001241e:	1a2d      	subs	r5, r5, r0
90012420:	4638      	mov	r0, r7
90012422:	fb94 f4f8 	sdiv	r4, r4, r8
90012426:	8735      	strh	r5, [r6, #56]	; 0x38
90012428:	b2a4      	uxth	r4, r4
9001242a:	f005 fe31 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001242e:	fb90 f0f8 	sdiv	r0, r0, r8
90012432:	1a24      	subs	r4, r4, r0
90012434:	8774      	strh	r4, [r6, #58]	; 0x3a
90012436:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9001243a <_ZN8touchgfx14AbstractButton13executeActionEv>:
9001243a:	b510      	push	{r4, lr}
9001243c:	4604      	mov	r4, r0
9001243e:	6a80      	ldr	r0, [r0, #40]	; 0x28
90012440:	b150      	cbz	r0, 90012458 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
90012442:	6803      	ldr	r3, [r0, #0]
90012444:	68db      	ldr	r3, [r3, #12]
90012446:	4798      	blx	r3
90012448:	b130      	cbz	r0, 90012458 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
9001244a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9001244c:	4621      	mov	r1, r4
9001244e:	6803      	ldr	r3, [r0, #0]
90012450:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90012454:	689b      	ldr	r3, [r3, #8]
90012456:	4718      	bx	r3
90012458:	bd10      	pop	{r4, pc}
	...

9001245c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
9001245c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012460:	4604      	mov	r4, r0
90012462:	b08c      	sub	sp, #48	; 0x30
90012464:	460d      	mov	r5, r1
90012466:	f013 fd6f 	bl	90025f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
9001246a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001246e:	2b00      	cmp	r3, #0
90012470:	d05d      	beq.n	9001252e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
90012472:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90012474:	a805      	add	r0, sp, #20
90012476:	f8ad 3014 	strh.w	r3, [sp, #20]
9001247a:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
9001247e:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
90012482:	f005 fdd1 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012486:	4606      	mov	r6, r0
90012488:	a805      	add	r0, sp, #20
9001248a:	f005 fe01 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001248e:	6869      	ldr	r1, [r5, #4]
90012490:	f8ad 001e 	strh.w	r0, [sp, #30]
90012494:	ab08      	add	r3, sp, #32
90012496:	6828      	ldr	r0, [r5, #0]
90012498:	ad08      	add	r5, sp, #32
9001249a:	f8ad 8018 	strh.w	r8, [sp, #24]
9001249e:	f8ad 701a 	strh.w	r7, [sp, #26]
900124a2:	f8ad 601c 	strh.w	r6, [sp, #28]
900124a6:	c303      	stmia	r3!, {r0, r1}
900124a8:	a906      	add	r1, sp, #24
900124aa:	4628      	mov	r0, r5
900124ac:	f7fd fd5c 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
900124b0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900124b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
900124b8:	429a      	cmp	r2, r3
900124ba:	d035      	beq.n	90012528 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900124bc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900124c0:	2b00      	cmp	r3, #0
900124c2:	dd31      	ble.n	90012528 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900124c4:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
900124c8:	2b00      	cmp	r3, #0
900124ca:	dd2d      	ble.n	90012528 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
900124cc:	2300      	movs	r3, #0
900124ce:	a90a      	add	r1, sp, #40	; 0x28
900124d0:	4620      	mov	r0, r4
900124d2:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
900124d6:	6823      	ldr	r3, [r4, #0]
900124d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900124da:	4798      	blx	r3
900124dc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900124e0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
900124e2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
900124e6:	1a9b      	subs	r3, r3, r2
900124e8:	f8ad 3020 	strh.w	r3, [sp, #32]
900124ec:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
900124ee:	1ac9      	subs	r1, r1, r3
900124f0:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
900124f4:	490f      	ldr	r1, [pc, #60]	; (90012534 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
900124f6:	6809      	ldr	r1, [r1, #0]
900124f8:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
900124fc:	b108      	cbz	r0, 90012502 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
900124fe:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90012500:	b900      	cbnz	r0, 90012504 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90012502:	6888      	ldr	r0, [r1, #8]
90012504:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
90012508:	2601      	movs	r6, #1
9001250a:	440b      	add	r3, r1
9001250c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90012510:	440a      	add	r2, r1
90012512:	6801      	ldr	r1, [r0, #0]
90012514:	9602      	str	r6, [sp, #8]
90012516:	b21b      	sxth	r3, r3
90012518:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9001251c:	b212      	sxth	r2, r2
9001251e:	e9cd 5400 	strd	r5, r4, [sp]
90012522:	688c      	ldr	r4, [r1, #8]
90012524:	a905      	add	r1, sp, #20
90012526:	47a0      	blx	r4
90012528:	b00c      	add	sp, #48	; 0x30
9001252a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001252e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90012530:	e7a0      	b.n	90012474 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
90012532:	bf00      	nop
90012534:	2402356c 	.word	0x2402356c

90012538 <_ZN8touchgfx14ButtonWithIconC1Ev>:
90012538:	2101      	movs	r1, #1
9001253a:	2200      	movs	r2, #0
9001253c:	b510      	push	{r4, lr}
9001253e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
90012542:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
90012546:	f64f 71ff 	movw	r1, #65535	; 0xffff
9001254a:	4c0d      	ldr	r4, [pc, #52]	; (90012580 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
9001254c:	8082      	strh	r2, [r0, #4]
9001254e:	80c2      	strh	r2, [r0, #6]
90012550:	8102      	strh	r2, [r0, #8]
90012552:	8142      	strh	r2, [r0, #10]
90012554:	8182      	strh	r2, [r0, #12]
90012556:	81c2      	strh	r2, [r0, #14]
90012558:	8202      	strh	r2, [r0, #16]
9001255a:	8242      	strh	r2, [r0, #18]
9001255c:	61c2      	str	r2, [r0, #28]
9001255e:	8402      	strh	r2, [r0, #32]
90012560:	8442      	strh	r2, [r0, #34]	; 0x22
90012562:	6282      	str	r2, [r0, #40]	; 0x28
90012564:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
90012568:	85c1      	strh	r1, [r0, #46]	; 0x2e
9001256a:	8601      	strh	r1, [r0, #48]	; 0x30
9001256c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
90012570:	6004      	str	r4, [r0, #0]
90012572:	8681      	strh	r1, [r0, #52]	; 0x34
90012574:	86c1      	strh	r1, [r0, #54]	; 0x36
90012576:	8702      	strh	r2, [r0, #56]	; 0x38
90012578:	8742      	strh	r2, [r0, #58]	; 0x3a
9001257a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001257e:	bd10      	pop	{r4, pc}
90012580:	9002a474 	.word	0x9002a474

90012584 <_ZN8touchgfx5ImageD1Ev>:
90012584:	4770      	bx	lr

90012586 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
90012586:	b570      	push	{r4, r5, r6, lr}
90012588:	880b      	ldrh	r3, [r1, #0]
9001258a:	460d      	mov	r5, r1
9001258c:	4604      	mov	r4, r0
9001258e:	84c3      	strh	r3, [r0, #38]	; 0x26
90012590:	4608      	mov	r0, r1
90012592:	f005 fd49 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012596:	4606      	mov	r6, r0
90012598:	4628      	mov	r0, r5
9001259a:	f005 fd79 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001259e:	6823      	ldr	r3, [r4, #0]
900125a0:	4605      	mov	r5, r0
900125a2:	4631      	mov	r1, r6
900125a4:	4620      	mov	r0, r4
900125a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900125a8:	4798      	blx	r3
900125aa:	6823      	ldr	r3, [r4, #0]
900125ac:	4629      	mov	r1, r5
900125ae:	4620      	mov	r0, r4
900125b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
900125b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900125b6:	4718      	bx	r3

900125b8 <_ZN8touchgfx5ImageD0Ev>:
900125b8:	b510      	push	{r4, lr}
900125ba:	4604      	mov	r4, r0
900125bc:	212c      	movs	r1, #44	; 0x2c
900125be:	f013 fd40 	bl	90026042 <_ZdlPvj>
900125c2:	4620      	mov	r0, r4
900125c4:	bd10      	pop	{r4, pc}

900125c6 <_ZNK8touchgfx5Image12getSolidRectEv>:
900125c6:	b510      	push	{r4, lr}
900125c8:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
900125cc:	4604      	mov	r4, r0
900125ce:	2bff      	cmp	r3, #255	; 0xff
900125d0:	d006      	beq.n	900125e0 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
900125d2:	2300      	movs	r3, #0
900125d4:	8003      	strh	r3, [r0, #0]
900125d6:	8043      	strh	r3, [r0, #2]
900125d8:	8083      	strh	r3, [r0, #4]
900125da:	80c3      	strh	r3, [r0, #6]
900125dc:	4620      	mov	r0, r4
900125de:	bd10      	pop	{r4, pc}
900125e0:	3126      	adds	r1, #38	; 0x26
900125e2:	f005 fd89 	bl	900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900125e6:	e7f9      	b.n	900125dc <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

900125e8 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
900125e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900125ec:	4604      	mov	r4, r0
900125ee:	b088      	sub	sp, #32
900125f0:	2500      	movs	r5, #0
900125f2:	460f      	mov	r7, r1
900125f4:	f854 3b26 	ldr.w	r3, [r4], #38
900125f8:	a904      	add	r1, sp, #16
900125fa:	4606      	mov	r6, r0
900125fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900125fe:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012602:	4798      	blx	r3
90012604:	4620      	mov	r0, r4
90012606:	f005 fd0f 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001260a:	4680      	mov	r8, r0
9001260c:	4620      	mov	r0, r4
9001260e:	f005 fd3f 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012612:	9506      	str	r5, [sp, #24]
90012614:	ad06      	add	r5, sp, #24
90012616:	f8ad 001e 	strh.w	r0, [sp, #30]
9001261a:	4639      	mov	r1, r7
9001261c:	f8ad 801c 	strh.w	r8, [sp, #28]
90012620:	4628      	mov	r0, r5
90012622:	f7fd fca1 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90012626:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001262a:	2b00      	cmp	r3, #0
9001262c:	dd19      	ble.n	90012662 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001262e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90012632:	2b00      	cmp	r3, #0
90012634:	dd15      	ble.n	90012662 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
90012636:	4b0c      	ldr	r3, [pc, #48]	; (90012668 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
90012638:	681b      	ldr	r3, [r3, #0]
9001263a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9001263e:	b10a      	cbz	r2, 90012644 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
90012640:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90012642:	b900      	cbnz	r0, 90012646 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
90012644:	6898      	ldr	r0, [r3, #8]
90012646:	2701      	movs	r7, #1
90012648:	6801      	ldr	r1, [r0, #0]
9001264a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001264e:	9702      	str	r7, [sp, #8]
90012650:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
90012654:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
90012658:	e9cd 5600 	strd	r5, r6, [sp]
9001265c:	688d      	ldr	r5, [r1, #8]
9001265e:	4621      	mov	r1, r4
90012660:	47a8      	blx	r5
90012662:	b008      	add	sp, #32
90012664:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012668:	2402356c 	.word	0x2402356c

9001266c <_ZN8touchgfx7OutlineD1Ev>:
9001266c:	4770      	bx	lr

9001266e <_ZN8touchgfx7OutlineD0Ev>:
9001266e:	b510      	push	{r4, lr}
90012670:	4604      	mov	r4, r0
90012672:	2130      	movs	r1, #48	; 0x30
90012674:	f013 fce5 	bl	90026042 <_ZdlPvj>
90012678:	4620      	mov	r0, r4
9001267a:	bd10      	pop	{r4, pc}

9001267c <_ZN8touchgfx7Outline5resetEv>:
9001267c:	b510      	push	{r4, lr}
9001267e:	4604      	mov	r4, r0
90012680:	f000 fe86 	bl	90013390 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90012684:	60e0      	str	r0, [r4, #12]
90012686:	f000 fe89 	bl	9001339c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
9001268a:	68e3      	ldr	r3, [r4, #12]
9001268c:	08c0      	lsrs	r0, r0, #3
9001268e:	2200      	movs	r2, #0
90012690:	f647 71ff 	movw	r1, #32767	; 0x7fff
90012694:	6123      	str	r3, [r4, #16]
90012696:	3801      	subs	r0, #1
90012698:	60a2      	str	r2, [r4, #8]
9001269a:	6060      	str	r0, [r4, #4]
9001269c:	8019      	strh	r1, [r3, #0]
9001269e:	8059      	strh	r1, [r3, #2]
900126a0:	809a      	strh	r2, [r3, #4]
900126a2:	80da      	strh	r2, [r3, #6]
900126a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
900126a6:	f023 0301 	bic.w	r3, r3, #1
900126aa:	f043 0302 	orr.w	r3, r3, #2
900126ae:	6263      	str	r3, [r4, #36]	; 0x24
900126b0:	bd10      	pop	{r4, pc}
	...

900126b4 <_ZN8touchgfx7OutlineC1Ev>:
900126b4:	4b0a      	ldr	r3, [pc, #40]	; (900126e0 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
900126b6:	b510      	push	{r4, lr}
900126b8:	6003      	str	r3, [r0, #0]
900126ba:	2300      	movs	r3, #0
900126bc:	4604      	mov	r4, r0
900126be:	6243      	str	r3, [r0, #36]	; 0x24
900126c0:	e9c0 3301 	strd	r3, r3, [r0, #4]
900126c4:	e9c0 3303 	strd	r3, r3, [r0, #12]
900126c8:	e9c0 3305 	strd	r3, r3, [r0, #20]
900126cc:	e9c0 3307 	strd	r3, r3, [r0, #28]
900126d0:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
900126d4:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
900126d8:	f7ff ffd0 	bl	9001267c <_ZN8touchgfx7Outline5resetEv>
900126dc:	4620      	mov	r0, r4
900126de:	bd10      	pop	{r4, pc}
900126e0:	9002a558 	.word	0x9002a558

900126e4 <_ZN8touchgfx7Outline10renderLineEiiii>:
900126e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900126e8:	b093      	sub	sp, #76	; 0x4c
900126ea:	1156      	asrs	r6, r2, #5
900126ec:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900126ee:	9305      	str	r3, [sp, #20]
900126f0:	1153      	asrs	r3, r2, #5
900126f2:	f004 051f 	and.w	r5, r4, #31
900126f6:	9303      	str	r3, [sp, #12]
900126f8:	1163      	asrs	r3, r4, #5
900126fa:	9504      	str	r5, [sp, #16]
900126fc:	1165      	asrs	r5, r4, #5
900126fe:	9306      	str	r3, [sp, #24]
90012700:	f002 031f 	and.w	r3, r2, #31
90012704:	42ae      	cmp	r6, r5
90012706:	f040 80f4 	bne.w	900128f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001270a:	9c04      	ldr	r4, [sp, #16]
9001270c:	9a05      	ldr	r2, [sp, #20]
9001270e:	42a3      	cmp	r3, r4
90012710:	ea4f 1e62 	mov.w	lr, r2, asr #5
90012714:	6902      	ldr	r2, [r0, #16]
90012716:	d125      	bne.n	90012764 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90012718:	f9b2 3000 	ldrsh.w	r3, [r2]
9001271c:	459e      	cmp	lr, r3
9001271e:	d103      	bne.n	90012728 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90012720:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012724:	429e      	cmp	r6, r3
90012726:	d035      	beq.n	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012728:	88d1      	ldrh	r1, [r2, #6]
9001272a:	8893      	ldrh	r3, [r2, #4]
9001272c:	430b      	orrs	r3, r1
9001272e:	d010      	beq.n	90012752 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012730:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012734:	2b00      	cmp	r3, #0
90012736:	db0c      	blt.n	90012752 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90012738:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9001273a:	428b      	cmp	r3, r1
9001273c:	da09      	bge.n	90012752 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
9001273e:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012742:	428b      	cmp	r3, r1
90012744:	f103 0301 	add.w	r3, r3, #1
90012748:	bf38      	it	cc
9001274a:	3208      	addcc	r2, #8
9001274c:	6083      	str	r3, [r0, #8]
9001274e:	bf38      	it	cc
90012750:	6102      	strcc	r2, [r0, #16]
90012752:	6903      	ldr	r3, [r0, #16]
90012754:	9a03      	ldr	r2, [sp, #12]
90012756:	f8a3 e000 	strh.w	lr, [r3]
9001275a:	805a      	strh	r2, [r3, #2]
9001275c:	2200      	movs	r2, #0
9001275e:	809a      	strh	r2, [r3, #4]
90012760:	80da      	strh	r2, [r3, #6]
90012762:	e017      	b.n	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012764:	9c05      	ldr	r4, [sp, #20]
90012766:	114e      	asrs	r6, r1, #5
90012768:	f001 0c1f 	and.w	ip, r1, #31
9001276c:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90012770:	f004 041f 	and.w	r4, r4, #31
90012774:	4576      	cmp	r6, lr
90012776:	f8b2 a006 	ldrh.w	sl, [r2, #6]
9001277a:	9402      	str	r4, [sp, #8]
9001277c:	9c04      	ldr	r4, [sp, #16]
9001277e:	eba4 0403 	sub.w	r4, r4, r3
90012782:	d10a      	bne.n	9001279a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90012784:	9b02      	ldr	r3, [sp, #8]
90012786:	44a0      	add	r8, r4
90012788:	449c      	add	ip, r3
9001278a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001278e:	fb04 a40c 	mla	r4, r4, ip, sl
90012792:	80d4      	strh	r4, [r2, #6]
90012794:	b013      	add	sp, #76	; 0x4c
90012796:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001279a:	9d05      	ldr	r5, [sp, #20]
9001279c:	1a69      	subs	r1, r5, r1
9001279e:	bf51      	iteee	pl
900127a0:	f1cc 0520 	rsbpl	r5, ip, #32
900127a4:	fb04 f40c 	mulmi.w	r4, r4, ip
900127a8:	4249      	negmi	r1, r1
900127aa:	2500      	movmi	r5, #0
900127ac:	bf5d      	ittte	pl
900127ae:	436c      	mulpl	r4, r5
900127b0:	2520      	movpl	r5, #32
900127b2:	f04f 0901 	movpl.w	r9, #1
900127b6:	f04f 39ff 	movmi.w	r9, #4294967295
900127ba:	9501      	str	r5, [sp, #4]
900127bc:	9f01      	ldr	r7, [sp, #4]
900127be:	444e      	add	r6, r9
900127c0:	fb94 f5f1 	sdiv	r5, r4, r1
900127c4:	fb01 4415 	mls	r4, r1, r5, r4
900127c8:	44bc      	add	ip, r7
900127ca:	2c00      	cmp	r4, #0
900127cc:	bfbc      	itt	lt
900127ce:	f105 35ff 	addlt.w	r5, r5, #4294967295
900127d2:	1864      	addlt	r4, r4, r1
900127d4:	44a8      	add	r8, r5
900127d6:	fb05 ac0c 	mla	ip, r5, ip, sl
900127da:	f8a2 8004 	strh.w	r8, [r2, #4]
900127de:	f8a2 c006 	strh.w	ip, [r2, #6]
900127e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
900127e6:	f8bc 8006 	ldrh.w	r8, [ip, #6]
900127ea:	f8bc 2004 	ldrh.w	r2, [ip, #4]
900127ee:	ea58 0202 	orrs.w	r2, r8, r2
900127f2:	d011      	beq.n	90012818 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900127f4:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900127f8:	f1b8 0f00 	cmp.w	r8, #0
900127fc:	db0c      	blt.n	90012818 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
900127fe:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012800:	4590      	cmp	r8, r2
90012802:	da09      	bge.n	90012818 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012804:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90012808:	4590      	cmp	r8, r2
9001280a:	bf3c      	itt	cc
9001280c:	f10c 0208 	addcc.w	r2, ip, #8
90012810:	6102      	strcc	r2, [r0, #16]
90012812:	f108 0201 	add.w	r2, r8, #1
90012816:	6082      	str	r2, [r0, #8]
90012818:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001281c:	2700      	movs	r7, #0
9001281e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90012822:	45b6      	cmp	lr, r6
90012824:	f8ac 6000 	strh.w	r6, [ip]
90012828:	442b      	add	r3, r5
9001282a:	f8ac 2002 	strh.w	r2, [ip, #2]
9001282e:	f8ac 7004 	strh.w	r7, [ip, #4]
90012832:	f8ac 7006 	strh.w	r7, [ip, #6]
90012836:	d04b      	beq.n	900128d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90012838:	9f04      	ldr	r7, [sp, #16]
9001283a:	1a64      	subs	r4, r4, r1
9001283c:	f04f 0a00 	mov.w	sl, #0
90012840:	1aff      	subs	r7, r7, r3
90012842:	443d      	add	r5, r7
90012844:	016d      	lsls	r5, r5, #5
90012846:	fb95 f8f1 	sdiv	r8, r5, r1
9001284a:	fb01 5518 	mls	r5, r1, r8, r5
9001284e:	2d00      	cmp	r5, #0
90012850:	bfbc      	itt	lt
90012852:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012856:	186d      	addlt	r5, r5, r1
90012858:	f108 0701 	add.w	r7, r8, #1
9001285c:	9703      	str	r7, [sp, #12]
9001285e:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012862:	1964      	adds	r4, r4, r5
90012864:	444e      	add	r6, r9
90012866:	bf54      	ite	pl
90012868:	9f03      	ldrpl	r7, [sp, #12]
9001286a:	4647      	movmi	r7, r8
9001286c:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012870:	bf58      	it	pl
90012872:	1a64      	subpl	r4, r4, r1
90012874:	443b      	add	r3, r7
90012876:	44bb      	add	fp, r7
90012878:	f8ac b004 	strh.w	fp, [ip, #4]
9001287c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012880:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012884:	f8ac b006 	strh.w	fp, [ip, #6]
90012888:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001288c:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012890:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012894:	ea5b 0707 	orrs.w	r7, fp, r7
90012898:	d011      	beq.n	900128be <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
9001289a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
9001289e:	f1bb 0f00 	cmp.w	fp, #0
900128a2:	db0c      	blt.n	900128be <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900128a4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900128a6:	45bb      	cmp	fp, r7
900128a8:	da09      	bge.n	900128be <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
900128aa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
900128ae:	45bb      	cmp	fp, r7
900128b0:	bf3c      	itt	cc
900128b2:	f10c 0708 	addcc.w	r7, ip, #8
900128b6:	6107      	strcc	r7, [r0, #16]
900128b8:	f10b 0701 	add.w	r7, fp, #1
900128bc:	6087      	str	r7, [r0, #8]
900128be:	6907      	ldr	r7, [r0, #16]
900128c0:	45b6      	cmp	lr, r6
900128c2:	803e      	strh	r6, [r7, #0]
900128c4:	807a      	strh	r2, [r7, #2]
900128c6:	f8a7 a004 	strh.w	sl, [r7, #4]
900128ca:	f8a7 a006 	strh.w	sl, [r7, #6]
900128ce:	d1c6      	bne.n	9001285e <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
900128d0:	9a04      	ldr	r2, [sp, #16]
900128d2:	1ad3      	subs	r3, r2, r3
900128d4:	6902      	ldr	r2, [r0, #16]
900128d6:	8891      	ldrh	r1, [r2, #4]
900128d8:	88d6      	ldrh	r6, [r2, #6]
900128da:	4419      	add	r1, r3
900128dc:	8091      	strh	r1, [r2, #4]
900128de:	9902      	ldr	r1, [sp, #8]
900128e0:	f101 0c20 	add.w	ip, r1, #32
900128e4:	9901      	ldr	r1, [sp, #4]
900128e6:	ebac 0c01 	sub.w	ip, ip, r1
900128ea:	fb03 630c 	mla	r3, r3, ip, r6
900128ee:	80d3      	strh	r3, [r2, #6]
900128f0:	e750      	b.n	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900128f2:	9d05      	ldr	r5, [sp, #20]
900128f4:	1aa2      	subs	r2, r4, r2
900128f6:	eba5 0501 	sub.w	r5, r5, r1
900128fa:	9202      	str	r2, [sp, #8]
900128fc:	9508      	str	r5, [sp, #32]
900128fe:	f140 8128 	bpl.w	90012b52 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90012902:	9a03      	ldr	r2, [sp, #12]
90012904:	2a00      	cmp	r2, #0
90012906:	f6ff af45 	blt.w	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
9001290a:	9a02      	ldr	r2, [sp, #8]
9001290c:	f04f 34ff 	mov.w	r4, #4294967295
90012910:	4252      	negs	r2, r2
90012912:	940b      	str	r4, [sp, #44]	; 0x2c
90012914:	2400      	movs	r4, #0
90012916:	9202      	str	r2, [sp, #8]
90012918:	9a06      	ldr	r2, [sp, #24]
9001291a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
9001291e:	9206      	str	r2, [sp, #24]
90012920:	462a      	mov	r2, r5
90012922:	435a      	muls	r2, r3
90012924:	9401      	str	r4, [sp, #4]
90012926:	9c02      	ldr	r4, [sp, #8]
90012928:	9d02      	ldr	r5, [sp, #8]
9001292a:	fb92 f4f4 	sdiv	r4, r2, r4
9001292e:	fb05 2214 	mls	r2, r5, r4, r2
90012932:	2a00      	cmp	r2, #0
90012934:	9207      	str	r2, [sp, #28]
90012936:	bfbc      	itt	lt
90012938:	1952      	addlt	r2, r2, r5
9001293a:	f104 34ff 	addlt.w	r4, r4, #4294967295
9001293e:	6905      	ldr	r5, [r0, #16]
90012940:	bfb8      	it	lt
90012942:	9207      	strlt	r2, [sp, #28]
90012944:	eb04 0901 	add.w	r9, r4, r1
90012948:	9a01      	ldr	r2, [sp, #4]
9001294a:	ea4f 1669 	mov.w	r6, r9, asr #5
9001294e:	429a      	cmp	r2, r3
90012950:	f040 8111 	bne.w	90012b76 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90012954:	f9b5 3000 	ldrsh.w	r3, [r5]
90012958:	429e      	cmp	r6, r3
9001295a:	d104      	bne.n	90012966 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
9001295c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90012960:	9a03      	ldr	r2, [sp, #12]
90012962:	429a      	cmp	r2, r3
90012964:	d01b      	beq.n	9001299e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012966:	88ea      	ldrh	r2, [r5, #6]
90012968:	88ab      	ldrh	r3, [r5, #4]
9001296a:	4313      	orrs	r3, r2
9001296c:	d010      	beq.n	90012990 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001296e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90012972:	2a00      	cmp	r2, #0
90012974:	db0c      	blt.n	90012990 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012976:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012978:	429a      	cmp	r2, r3
9001297a:	da09      	bge.n	90012990 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
9001297c:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90012980:	429a      	cmp	r2, r3
90012982:	f102 0201 	add.w	r2, r2, #1
90012986:	bf38      	it	cc
90012988:	3508      	addcc	r5, #8
9001298a:	6082      	str	r2, [r0, #8]
9001298c:	bf38      	it	cc
9001298e:	6105      	strcc	r5, [r0, #16]
90012990:	6903      	ldr	r3, [r0, #16]
90012992:	9a03      	ldr	r2, [sp, #12]
90012994:	801e      	strh	r6, [r3, #0]
90012996:	805a      	strh	r2, [r3, #2]
90012998:	2200      	movs	r2, #0
9001299a:	809a      	strh	r2, [r3, #4]
9001299c:	80da      	strh	r2, [r3, #6]
9001299e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
900129a0:	9a03      	ldr	r2, [sp, #12]
900129a2:	6901      	ldr	r1, [r0, #16]
900129a4:	441a      	add	r2, r3
900129a6:	f9b1 3000 	ldrsh.w	r3, [r1]
900129aa:	42b3      	cmp	r3, r6
900129ac:	d103      	bne.n	900129b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
900129ae:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
900129b2:	429a      	cmp	r2, r3
900129b4:	d01a      	beq.n	900129ec <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
900129b6:	88cc      	ldrh	r4, [r1, #6]
900129b8:	888b      	ldrh	r3, [r1, #4]
900129ba:	4323      	orrs	r3, r4
900129bc:	d010      	beq.n	900129e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900129be:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
900129c2:	2c00      	cmp	r4, #0
900129c4:	db0c      	blt.n	900129e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900129c6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
900129c8:	429c      	cmp	r4, r3
900129ca:	da09      	bge.n	900129e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
900129cc:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900129d0:	429c      	cmp	r4, r3
900129d2:	f104 0401 	add.w	r4, r4, #1
900129d6:	bf38      	it	cc
900129d8:	3108      	addcc	r1, #8
900129da:	6084      	str	r4, [r0, #8]
900129dc:	bf38      	it	cc
900129de:	6101      	strcc	r1, [r0, #16]
900129e0:	6903      	ldr	r3, [r0, #16]
900129e2:	2100      	movs	r1, #0
900129e4:	801e      	strh	r6, [r3, #0]
900129e6:	805a      	strh	r2, [r3, #2]
900129e8:	8099      	strh	r1, [r3, #4]
900129ea:	80d9      	strh	r1, [r3, #6]
900129ec:	9b06      	ldr	r3, [sp, #24]
900129ee:	4293      	cmp	r3, r2
900129f0:	f000 8082 	beq.w	90012af8 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
900129f4:	9b08      	ldr	r3, [sp, #32]
900129f6:	9902      	ldr	r1, [sp, #8]
900129f8:	015b      	lsls	r3, r3, #5
900129fa:	9c02      	ldr	r4, [sp, #8]
900129fc:	fb93 f1f1 	sdiv	r1, r3, r1
90012a00:	fb04 3311 	mls	r3, r4, r1, r3
90012a04:	9103      	str	r1, [sp, #12]
90012a06:	2b00      	cmp	r3, #0
90012a08:	9308      	str	r3, [sp, #32]
90012a0a:	da04      	bge.n	90012a16 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90012a0c:	1e4b      	subs	r3, r1, #1
90012a0e:	9303      	str	r3, [sp, #12]
90012a10:	9b08      	ldr	r3, [sp, #32]
90012a12:	4423      	add	r3, r4
90012a14:	9308      	str	r3, [sp, #32]
90012a16:	9b07      	ldr	r3, [sp, #28]
90012a18:	464f      	mov	r7, r9
90012a1a:	9902      	ldr	r1, [sp, #8]
90012a1c:	2600      	movs	r6, #0
90012a1e:	1a5b      	subs	r3, r3, r1
90012a20:	9307      	str	r3, [sp, #28]
90012a22:	9b01      	ldr	r3, [sp, #4]
90012a24:	f1c3 0320 	rsb	r3, r3, #32
90012a28:	930e      	str	r3, [sp, #56]	; 0x38
90012a2a:	990e      	ldr	r1, [sp, #56]	; 0x38
90012a2c:	9b01      	ldr	r3, [sp, #4]
90012a2e:	1a5b      	subs	r3, r3, r1
90012a30:	930a      	str	r3, [sp, #40]	; 0x28
90012a32:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90012a36:	185b      	adds	r3, r3, r1
90012a38:	bf58      	it	pl
90012a3a:	9902      	ldrpl	r1, [sp, #8]
90012a3c:	9307      	str	r3, [sp, #28]
90012a3e:	bf57      	itett	pl
90012a40:	1a5b      	subpl	r3, r3, r1
90012a42:	9903      	ldrmi	r1, [sp, #12]
90012a44:	9307      	strpl	r3, [sp, #28]
90012a46:	9b03      	ldrpl	r3, [sp, #12]
90012a48:	bf58      	it	pl
90012a4a:	1c59      	addpl	r1, r3, #1
90012a4c:	2a00      	cmp	r2, #0
90012a4e:	4489      	add	r9, r1
90012a50:	ea4f 1a69 	mov.w	sl, r9, asr #5
90012a54:	db2e      	blt.n	90012ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012a56:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012a58:	4293      	cmp	r3, r2
90012a5a:	dd2b      	ble.n	90012ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012a5c:	9c01      	ldr	r4, [sp, #4]
90012a5e:	6905      	ldr	r5, [r0, #16]
90012a60:	46a0      	mov	r8, r4
90012a62:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90012a64:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90012a68:	45a0      	cmp	r8, r4
90012a6a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90012a6e:	f040 814c 	bne.w	90012d0a <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90012a72:	f9b5 1000 	ldrsh.w	r1, [r5]
90012a76:	4551      	cmp	r1, sl
90012a78:	d103      	bne.n	90012a82 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90012a7a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012a7e:	4291      	cmp	r1, r2
90012a80:	d018      	beq.n	90012ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012a82:	ea5c 010e 	orrs.w	r1, ip, lr
90012a86:	d00f      	beq.n	90012aa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012a88:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012a8c:	2900      	cmp	r1, #0
90012a8e:	db0b      	blt.n	90012aa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012a90:	428b      	cmp	r3, r1
90012a92:	dd09      	ble.n	90012aa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012a94:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90012a98:	4299      	cmp	r1, r3
90012a9a:	f101 0101 	add.w	r1, r1, #1
90012a9e:	bf38      	it	cc
90012aa0:	3508      	addcc	r5, #8
90012aa2:	6081      	str	r1, [r0, #8]
90012aa4:	bf38      	it	cc
90012aa6:	6105      	strcc	r5, [r0, #16]
90012aa8:	6903      	ldr	r3, [r0, #16]
90012aaa:	f8a3 a000 	strh.w	sl, [r3]
90012aae:	805a      	strh	r2, [r3, #2]
90012ab0:	809e      	strh	r6, [r3, #4]
90012ab2:	80de      	strh	r6, [r3, #6]
90012ab4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012ab6:	6901      	ldr	r1, [r0, #16]
90012ab8:	441a      	add	r2, r3
90012aba:	88cc      	ldrh	r4, [r1, #6]
90012abc:	888b      	ldrh	r3, [r1, #4]
90012abe:	4323      	orrs	r3, r4
90012ac0:	d010      	beq.n	90012ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012ac2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012ac6:	2c00      	cmp	r4, #0
90012ac8:	db0c      	blt.n	90012ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012aca:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012acc:	429c      	cmp	r4, r3
90012ace:	da09      	bge.n	90012ae4 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012ad0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012ad4:	429c      	cmp	r4, r3
90012ad6:	f104 0401 	add.w	r4, r4, #1
90012ada:	bf38      	it	cc
90012adc:	3108      	addcc	r1, #8
90012ade:	6084      	str	r4, [r0, #8]
90012ae0:	bf38      	it	cc
90012ae2:	6101      	strcc	r1, [r0, #16]
90012ae4:	6903      	ldr	r3, [r0, #16]
90012ae6:	464f      	mov	r7, r9
90012ae8:	f8a3 a000 	strh.w	sl, [r3]
90012aec:	805a      	strh	r2, [r3, #2]
90012aee:	809e      	strh	r6, [r3, #4]
90012af0:	80de      	strh	r6, [r3, #6]
90012af2:	9b06      	ldr	r3, [sp, #24]
90012af4:	4293      	cmp	r3, r2
90012af6:	d19c      	bne.n	90012a32 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90012af8:	9b01      	ldr	r3, [sp, #4]
90012afa:	6907      	ldr	r7, [r0, #16]
90012afc:	f1c3 0620 	rsb	r6, r3, #32
90012b00:	9b05      	ldr	r3, [sp, #20]
90012b02:	ea4f 1e63 	mov.w	lr, r3, asr #5
90012b06:	9b04      	ldr	r3, [sp, #16]
90012b08:	429e      	cmp	r6, r3
90012b0a:	f040 81c7 	bne.w	90012e9c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90012b0e:	f9b7 3000 	ldrsh.w	r3, [r7]
90012b12:	459e      	cmp	lr, r3
90012b14:	d104      	bne.n	90012b20 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90012b16:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012b1a:	429a      	cmp	r2, r3
90012b1c:	f43f ae3a 	beq.w	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012b20:	88f9      	ldrh	r1, [r7, #6]
90012b22:	88bb      	ldrh	r3, [r7, #4]
90012b24:	430b      	orrs	r3, r1
90012b26:	d010      	beq.n	90012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012b28:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012b2c:	2b00      	cmp	r3, #0
90012b2e:	db0c      	blt.n	90012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012b30:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90012b32:	428b      	cmp	r3, r1
90012b34:	da09      	bge.n	90012b4a <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012b36:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012b3a:	428b      	cmp	r3, r1
90012b3c:	f103 0301 	add.w	r3, r3, #1
90012b40:	bf38      	it	cc
90012b42:	3708      	addcc	r7, #8
90012b44:	6083      	str	r3, [r0, #8]
90012b46:	bf38      	it	cc
90012b48:	6107      	strcc	r7, [r0, #16]
90012b4a:	6903      	ldr	r3, [r0, #16]
90012b4c:	f8a3 e000 	strh.w	lr, [r3]
90012b50:	e603      	b.n	9001275a <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90012b52:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012b54:	9c03      	ldr	r4, [sp, #12]
90012b56:	42a2      	cmp	r2, r4
90012b58:	f6ff ae1c 	blt.w	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012b5c:	9c06      	ldr	r4, [sp, #24]
90012b5e:	42a2      	cmp	r2, r4
90012b60:	9c08      	ldr	r4, [sp, #32]
90012b62:	bfbc      	itt	lt
90012b64:	3201      	addlt	r2, #1
90012b66:	9206      	strlt	r2, [sp, #24]
90012b68:	f1c3 0220 	rsb	r2, r3, #32
90012b6c:	4362      	muls	r2, r4
90012b6e:	2401      	movs	r4, #1
90012b70:	940b      	str	r4, [sp, #44]	; 0x2c
90012b72:	2420      	movs	r4, #32
90012b74:	e6d6      	b.n	90012924 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90012b76:	ea4f 1861 	mov.w	r8, r1, asr #5
90012b7a:	f009 021f 	and.w	r2, r9, #31
90012b7e:	f001 011f 	and.w	r1, r1, #31
90012b82:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90012b86:	920c      	str	r2, [sp, #48]	; 0x30
90012b88:	45b0      	cmp	r8, r6
90012b8a:	9a01      	ldr	r2, [sp, #4]
90012b8c:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90012b90:	eba2 0203 	sub.w	r2, r2, r3
90012b94:	d108      	bne.n	90012ba8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90012b96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012b98:	4496      	add	lr, r2
90012b9a:	4419      	add	r1, r3
90012b9c:	f8a5 e004 	strh.w	lr, [r5, #4]
90012ba0:	fb02 a101 	mla	r1, r2, r1, sl
90012ba4:	80e9      	strh	r1, [r5, #6]
90012ba6:	e6fa      	b.n	9001299e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012ba8:	2c00      	cmp	r4, #0
90012baa:	f2c0 80a7 	blt.w	90012cfc <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90012bae:	2701      	movs	r7, #1
90012bb0:	f1c1 0c20 	rsb	ip, r1, #32
90012bb4:	970a      	str	r7, [sp, #40]	; 0x28
90012bb6:	2720      	movs	r7, #32
90012bb8:	fb02 f20c 	mul.w	r2, r2, ip
90012bbc:	9709      	str	r7, [sp, #36]	; 0x24
90012bbe:	9f09      	ldr	r7, [sp, #36]	; 0x24
90012bc0:	fb92 fcf4 	sdiv	ip, r2, r4
90012bc4:	fb04 221c 	mls	r2, r4, ip, r2
90012bc8:	4439      	add	r1, r7
90012bca:	2a00      	cmp	r2, #0
90012bcc:	bfbc      	itt	lt
90012bce:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90012bd2:	1912      	addlt	r2, r2, r4
90012bd4:	fb0c a101 	mla	r1, ip, r1, sl
90012bd8:	44e6      	add	lr, ip
90012bda:	80e9      	strh	r1, [r5, #6]
90012bdc:	990a      	ldr	r1, [sp, #40]	; 0x28
90012bde:	f8a5 e004 	strh.w	lr, [r5, #4]
90012be2:	eb08 0501 	add.w	r5, r8, r1
90012be6:	6901      	ldr	r1, [r0, #16]
90012be8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90012bec:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90012bf0:	ea58 070e 	orrs.w	r7, r8, lr
90012bf4:	d010      	beq.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012bf6:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90012bfa:	f1be 0f00 	cmp.w	lr, #0
90012bfe:	db0b      	blt.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012c00:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012c02:	45be      	cmp	lr, r7
90012c04:	da08      	bge.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012c06:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012c0a:	45be      	cmp	lr, r7
90012c0c:	bf3c      	itt	cc
90012c0e:	3108      	addcc	r1, #8
90012c10:	6101      	strcc	r1, [r0, #16]
90012c12:	f10e 0101 	add.w	r1, lr, #1
90012c16:	6081      	str	r1, [r0, #8]
90012c18:	6901      	ldr	r1, [r0, #16]
90012c1a:	f04f 0e00 	mov.w	lr, #0
90012c1e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90012c22:	42ae      	cmp	r6, r5
90012c24:	800d      	strh	r5, [r1, #0]
90012c26:	4463      	add	r3, ip
90012c28:	f8a1 8002 	strh.w	r8, [r1, #2]
90012c2c:	f8a1 e004 	strh.w	lr, [r1, #4]
90012c30:	f8a1 e006 	strh.w	lr, [r1, #6]
90012c34:	d053      	beq.n	90012cde <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90012c36:	9901      	ldr	r1, [sp, #4]
90012c38:	1b12      	subs	r2, r2, r4
90012c3a:	1ac9      	subs	r1, r1, r3
90012c3c:	4461      	add	r1, ip
90012c3e:	0149      	lsls	r1, r1, #5
90012c40:	fb91 fef4 	sdiv	lr, r1, r4
90012c44:	fb04 111e 	mls	r1, r4, lr, r1
90012c48:	2900      	cmp	r1, #0
90012c4a:	bfbc      	itt	lt
90012c4c:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90012c50:	1909      	addlt	r1, r1, r4
90012c52:	f10e 0701 	add.w	r7, lr, #1
90012c56:	970d      	str	r7, [sp, #52]	; 0x34
90012c58:	f8d0 a010 	ldr.w	sl, [r0, #16]
90012c5c:	1852      	adds	r2, r2, r1
90012c5e:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90012c60:	bf54      	ite	pl
90012c62:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90012c66:	46f4      	movmi	ip, lr
90012c68:	f8ba b004 	ldrh.w	fp, [sl, #4]
90012c6c:	bf58      	it	pl
90012c6e:	1b12      	subpl	r2, r2, r4
90012c70:	4463      	add	r3, ip
90012c72:	443d      	add	r5, r7
90012c74:	44e3      	add	fp, ip
90012c76:	f8aa b004 	strh.w	fp, [sl, #4]
90012c7a:	f8ba b006 	ldrh.w	fp, [sl, #6]
90012c7e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90012c82:	f8aa b006 	strh.w	fp, [sl, #6]
90012c86:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012c8a:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012c8e:	f8bc a004 	ldrh.w	sl, [ip, #4]
90012c92:	ea5b 070a 	orrs.w	r7, fp, sl
90012c96:	d014      	beq.n	90012cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012c98:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90012c9c:	f1ba 0f00 	cmp.w	sl, #0
90012ca0:	db0f      	blt.n	90012cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012ca2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012ca4:	45ba      	cmp	sl, r7
90012ca6:	da0c      	bge.n	90012cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012ca8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90012cac:	45ba      	cmp	sl, r7
90012cae:	f10a 0a01 	add.w	sl, sl, #1
90012cb2:	bf38      	it	cc
90012cb4:	f10c 0c08 	addcc.w	ip, ip, #8
90012cb8:	f8c0 a008 	str.w	sl, [r0, #8]
90012cbc:	bf38      	it	cc
90012cbe:	f8c0 c010 	strcc.w	ip, [r0, #16]
90012cc2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012cc6:	f04f 0700 	mov.w	r7, #0
90012cca:	42ae      	cmp	r6, r5
90012ccc:	f8ac 5000 	strh.w	r5, [ip]
90012cd0:	f8ac 8002 	strh.w	r8, [ip, #2]
90012cd4:	f8ac 7004 	strh.w	r7, [ip, #4]
90012cd8:	f8ac 7006 	strh.w	r7, [ip, #6]
90012cdc:	d1bc      	bne.n	90012c58 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90012cde:	6904      	ldr	r4, [r0, #16]
90012ce0:	9a01      	ldr	r2, [sp, #4]
90012ce2:	990c      	ldr	r1, [sp, #48]	; 0x30
90012ce4:	1ad3      	subs	r3, r2, r3
90012ce6:	88a2      	ldrh	r2, [r4, #4]
90012ce8:	3120      	adds	r1, #32
90012cea:	441a      	add	r2, r3
90012cec:	80a2      	strh	r2, [r4, #4]
90012cee:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012cf0:	1a89      	subs	r1, r1, r2
90012cf2:	88e2      	ldrh	r2, [r4, #6]
90012cf4:	fb03 2301 	mla	r3, r3, r1, r2
90012cf8:	80e3      	strh	r3, [r4, #6]
90012cfa:	e650      	b.n	9001299e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012cfc:	f04f 37ff 	mov.w	r7, #4294967295
90012d00:	434a      	muls	r2, r1
90012d02:	4264      	negs	r4, r4
90012d04:	970a      	str	r7, [sp, #40]	; 0x28
90012d06:	2700      	movs	r7, #0
90012d08:	e758      	b.n	90012bbc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90012d0a:	ea4f 1867 	mov.w	r8, r7, asr #5
90012d0e:	f009 031f 	and.w	r3, r9, #31
90012d12:	f007 071f 	and.w	r7, r7, #31
90012d16:	fa1f fc8c 	uxth.w	ip, ip
90012d1a:	45d0      	cmp	r8, sl
90012d1c:	930f      	str	r3, [sp, #60]	; 0x3c
90012d1e:	fa1f fe8e 	uxth.w	lr, lr
90012d22:	d10a      	bne.n	90012d3a <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90012d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012d26:	449c      	add	ip, r3
90012d28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90012d2a:	441f      	add	r7, r3
90012d2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012d2e:	f8a5 c004 	strh.w	ip, [r5, #4]
90012d32:	fb03 e707 	mla	r7, r3, r7, lr
90012d36:	80ef      	strh	r7, [r5, #6]
90012d38:	e6bc      	b.n	90012ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012d3a:	2900      	cmp	r1, #0
90012d3c:	f2c0 80a6 	blt.w	90012e8c <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90012d40:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90012d42:	f1c7 0320 	rsb	r3, r7, #32
90012d46:	4363      	muls	r3, r4
90012d48:	2401      	movs	r4, #1
90012d4a:	940d      	str	r4, [sp, #52]	; 0x34
90012d4c:	2420      	movs	r4, #32
90012d4e:	940c      	str	r4, [sp, #48]	; 0x30
90012d50:	fb93 f4f1 	sdiv	r4, r3, r1
90012d54:	fb01 3b14 	mls	fp, r1, r4, r3
90012d58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012d5a:	f1bb 0f00 	cmp.w	fp, #0
90012d5e:	441f      	add	r7, r3
90012d60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90012d62:	bfbc      	itt	lt
90012d64:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012d68:	448b      	addlt	fp, r1
90012d6a:	fb04 e707 	mla	r7, r4, r7, lr
90012d6e:	44a4      	add	ip, r4
90012d70:	80ef      	strh	r7, [r5, #6]
90012d72:	f8a5 c004 	strh.w	ip, [r5, #4]
90012d76:	eb08 0503 	add.w	r5, r8, r3
90012d7a:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012d7e:	f8bc e006 	ldrh.w	lr, [ip, #6]
90012d82:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012d86:	ea5e 0307 	orrs.w	r3, lr, r7
90012d8a:	d011      	beq.n	90012db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012d8c:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90012d90:	f1be 0f00 	cmp.w	lr, #0
90012d94:	db0c      	blt.n	90012db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012d96:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012d98:	45be      	cmp	lr, r7
90012d9a:	da09      	bge.n	90012db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012d9c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012da0:	45be      	cmp	lr, r7
90012da2:	bf3c      	itt	cc
90012da4:	f10c 0708 	addcc.w	r7, ip, #8
90012da8:	6107      	strcc	r7, [r0, #16]
90012daa:	f10e 0701 	add.w	r7, lr, #1
90012dae:	6087      	str	r7, [r0, #8]
90012db0:	6907      	ldr	r7, [r0, #16]
90012db2:	b213      	sxth	r3, r2
90012db4:	4555      	cmp	r5, sl
90012db6:	9310      	str	r3, [sp, #64]	; 0x40
90012db8:	807b      	strh	r3, [r7, #2]
90012dba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90012dbc:	803d      	strh	r5, [r7, #0]
90012dbe:	80be      	strh	r6, [r7, #4]
90012dc0:	eb04 0c03 	add.w	ip, r4, r3
90012dc4:	80fe      	strh	r6, [r7, #6]
90012dc6:	d050      	beq.n	90012e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90012dc8:	9b01      	ldr	r3, [sp, #4]
90012dca:	eba3 070c 	sub.w	r7, r3, ip
90012dce:	ebab 0301 	sub.w	r3, fp, r1
90012dd2:	443c      	add	r4, r7
90012dd4:	9309      	str	r3, [sp, #36]	; 0x24
90012dd6:	0164      	lsls	r4, r4, #5
90012dd8:	fb94 f8f1 	sdiv	r8, r4, r1
90012ddc:	fb01 4418 	mls	r4, r1, r8, r4
90012de0:	2c00      	cmp	r4, #0
90012de2:	bfbc      	itt	lt
90012de4:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012de8:	1864      	addlt	r4, r4, r1
90012dea:	f108 0701 	add.w	r7, r8, #1
90012dee:	9711      	str	r7, [sp, #68]	; 0x44
90012df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90012df2:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012df6:	191b      	adds	r3, r3, r4
90012df8:	f8be b004 	ldrh.w	fp, [lr, #4]
90012dfc:	bf54      	ite	pl
90012dfe:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90012e00:	4647      	movmi	r7, r8
90012e02:	9309      	str	r3, [sp, #36]	; 0x24
90012e04:	bf58      	it	pl
90012e06:	1a5b      	subpl	r3, r3, r1
90012e08:	44bb      	add	fp, r7
90012e0a:	44bc      	add	ip, r7
90012e0c:	bf58      	it	pl
90012e0e:	9309      	strpl	r3, [sp, #36]	; 0x24
90012e10:	f8ae b004 	strh.w	fp, [lr, #4]
90012e14:	f8be b006 	ldrh.w	fp, [lr, #6]
90012e18:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012e1c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90012e1e:	f8ae b006 	strh.w	fp, [lr, #6]
90012e22:	443d      	add	r5, r7
90012e24:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012e28:	f8be b006 	ldrh.w	fp, [lr, #6]
90012e2c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90012e30:	ea5b 0307 	orrs.w	r3, fp, r7
90012e34:	d011      	beq.n	90012e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012e36:	f9be b002 	ldrsh.w	fp, [lr, #2]
90012e3a:	f1bb 0f00 	cmp.w	fp, #0
90012e3e:	db0c      	blt.n	90012e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012e40:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012e42:	45bb      	cmp	fp, r7
90012e44:	da09      	bge.n	90012e5a <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012e46:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012e4a:	45bb      	cmp	fp, r7
90012e4c:	bf3c      	itt	cc
90012e4e:	f10e 0708 	addcc.w	r7, lr, #8
90012e52:	6107      	strcc	r7, [r0, #16]
90012e54:	f10b 0701 	add.w	r7, fp, #1
90012e58:	6087      	str	r7, [r0, #8]
90012e5a:	6907      	ldr	r7, [r0, #16]
90012e5c:	4555      	cmp	r5, sl
90012e5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90012e60:	803d      	strh	r5, [r7, #0]
90012e62:	807b      	strh	r3, [r7, #2]
90012e64:	80be      	strh	r6, [r7, #4]
90012e66:	80fe      	strh	r6, [r7, #6]
90012e68:	d1c2      	bne.n	90012df0 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90012e6a:	9b01      	ldr	r3, [sp, #4]
90012e6c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90012e6e:	eba3 0c0c 	sub.w	ip, r3, ip
90012e72:	6903      	ldr	r3, [r0, #16]
90012e74:	3720      	adds	r7, #32
90012e76:	8899      	ldrh	r1, [r3, #4]
90012e78:	4461      	add	r1, ip
90012e7a:	8099      	strh	r1, [r3, #4]
90012e7c:	990c      	ldr	r1, [sp, #48]	; 0x30
90012e7e:	1a7f      	subs	r7, r7, r1
90012e80:	88d9      	ldrh	r1, [r3, #6]
90012e82:	fb0c 1c07 	mla	ip, ip, r7, r1
90012e86:	f8a3 c006 	strh.w	ip, [r3, #6]
90012e8a:	e613      	b.n	90012ab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012e8c:	f04f 34ff 	mov.w	r4, #4294967295
90012e90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012e92:	4249      	negs	r1, r1
90012e94:	940d      	str	r4, [sp, #52]	; 0x34
90012e96:	2400      	movs	r4, #0
90012e98:	437b      	muls	r3, r7
90012e9a:	e758      	b.n	90012d4e <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
90012e9c:	9905      	ldr	r1, [sp, #20]
90012e9e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90012ea2:	f009 0c1f 	and.w	ip, r9, #31
90012ea6:	f8b7 8004 	ldrh.w	r8, [r7, #4]
90012eaa:	f001 011f 	and.w	r1, r1, #31
90012eae:	45f3      	cmp	fp, lr
90012eb0:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90012eb4:	9102      	str	r1, [sp, #8]
90012eb6:	9904      	ldr	r1, [sp, #16]
90012eb8:	eba1 0406 	sub.w	r4, r1, r6
90012ebc:	d108      	bne.n	90012ed0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90012ebe:	9b02      	ldr	r3, [sp, #8]
90012ec0:	44a0      	add	r8, r4
90012ec2:	449c      	add	ip, r3
90012ec4:	f8a7 8004 	strh.w	r8, [r7, #4]
90012ec8:	fb04 a40c 	mla	r4, r4, ip, sl
90012ecc:	80fc      	strh	r4, [r7, #6]
90012ece:	e461      	b.n	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012ed0:	9905      	ldr	r1, [sp, #20]
90012ed2:	ebb1 0109 	subs.w	r1, r1, r9
90012ed6:	bf51      	iteee	pl
90012ed8:	f1cc 0520 	rsbpl	r5, ip, #32
90012edc:	fb04 f40c 	mulmi.w	r4, r4, ip
90012ee0:	4249      	negmi	r1, r1
90012ee2:	2500      	movmi	r5, #0
90012ee4:	bf5d      	ittte	pl
90012ee6:	436c      	mulpl	r4, r5
90012ee8:	2520      	movpl	r5, #32
90012eea:	f04f 0901 	movpl.w	r9, #1
90012eee:	f04f 39ff 	movmi.w	r9, #4294967295
90012ef2:	9501      	str	r5, [sp, #4]
90012ef4:	9b01      	ldr	r3, [sp, #4]
90012ef6:	fb94 f5f1 	sdiv	r5, r4, r1
90012efa:	fb01 4415 	mls	r4, r1, r5, r4
90012efe:	449c      	add	ip, r3
90012f00:	eb0b 0309 	add.w	r3, fp, r9
90012f04:	2c00      	cmp	r4, #0
90012f06:	bfbc      	itt	lt
90012f08:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012f0c:	1864      	addlt	r4, r4, r1
90012f0e:	44a8      	add	r8, r5
90012f10:	fb05 ac0c 	mla	ip, r5, ip, sl
90012f14:	f8a7 8004 	strh.w	r8, [r7, #4]
90012f18:	f8a7 c006 	strh.w	ip, [r7, #6]
90012f1c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012f20:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90012f24:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012f28:	ea58 0707 	orrs.w	r7, r8, r7
90012f2c:	d011      	beq.n	90012f52 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012f2e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012f32:	f1b8 0f00 	cmp.w	r8, #0
90012f36:	db0c      	blt.n	90012f52 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012f38:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012f3a:	45b8      	cmp	r8, r7
90012f3c:	da09      	bge.n	90012f52 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90012f3e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90012f42:	45b8      	cmp	r8, r7
90012f44:	bf3c      	itt	cc
90012f46:	f10c 0708 	addcc.w	r7, ip, #8
90012f4a:	6107      	strcc	r7, [r0, #16]
90012f4c:	f108 0701 	add.w	r7, r8, #1
90012f50:	6087      	str	r7, [r0, #8]
90012f52:	6907      	ldr	r7, [r0, #16]
90012f54:	f04f 0c00 	mov.w	ip, #0
90012f58:	b212      	sxth	r2, r2
90012f5a:	459e      	cmp	lr, r3
90012f5c:	803b      	strh	r3, [r7, #0]
90012f5e:	442e      	add	r6, r5
90012f60:	807a      	strh	r2, [r7, #2]
90012f62:	f8a7 c004 	strh.w	ip, [r7, #4]
90012f66:	f8a7 c006 	strh.w	ip, [r7, #6]
90012f6a:	d04b      	beq.n	90013004 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
90012f6c:	9f04      	ldr	r7, [sp, #16]
90012f6e:	1a64      	subs	r4, r4, r1
90012f70:	f04f 0a00 	mov.w	sl, #0
90012f74:	1bbf      	subs	r7, r7, r6
90012f76:	443d      	add	r5, r7
90012f78:	016d      	lsls	r5, r5, #5
90012f7a:	fb95 f8f1 	sdiv	r8, r5, r1
90012f7e:	fb01 5518 	mls	r5, r1, r8, r5
90012f82:	4565      	cmp	r5, ip
90012f84:	bfbc      	itt	lt
90012f86:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012f8a:	186d      	addlt	r5, r5, r1
90012f8c:	f108 0701 	add.w	r7, r8, #1
90012f90:	9703      	str	r7, [sp, #12]
90012f92:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012f96:	1964      	adds	r4, r4, r5
90012f98:	444b      	add	r3, r9
90012f9a:	bf54      	ite	pl
90012f9c:	9f03      	ldrpl	r7, [sp, #12]
90012f9e:	4647      	movmi	r7, r8
90012fa0:	f8bc b004 	ldrh.w	fp, [ip, #4]
90012fa4:	bf58      	it	pl
90012fa6:	1a64      	subpl	r4, r4, r1
90012fa8:	443e      	add	r6, r7
90012faa:	44bb      	add	fp, r7
90012fac:	f8ac b004 	strh.w	fp, [ip, #4]
90012fb0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012fb4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012fb8:	f8ac b006 	strh.w	fp, [ip, #6]
90012fbc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012fc0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012fc4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012fc8:	ea5b 0707 	orrs.w	r7, fp, r7
90012fcc:	d011      	beq.n	90012ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012fce:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012fd2:	f1bb 0f00 	cmp.w	fp, #0
90012fd6:	db0c      	blt.n	90012ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012fd8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012fda:	45bb      	cmp	fp, r7
90012fdc:	da09      	bge.n	90012ff2 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90012fde:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012fe2:	45bb      	cmp	fp, r7
90012fe4:	bf3c      	itt	cc
90012fe6:	f10c 0708 	addcc.w	r7, ip, #8
90012fea:	6107      	strcc	r7, [r0, #16]
90012fec:	f10b 0701 	add.w	r7, fp, #1
90012ff0:	6087      	str	r7, [r0, #8]
90012ff2:	6907      	ldr	r7, [r0, #16]
90012ff4:	459e      	cmp	lr, r3
90012ff6:	803b      	strh	r3, [r7, #0]
90012ff8:	807a      	strh	r2, [r7, #2]
90012ffa:	f8a7 a004 	strh.w	sl, [r7, #4]
90012ffe:	f8a7 a006 	strh.w	sl, [r7, #6]
90013002:	d1c6      	bne.n	90012f92 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90013004:	9b04      	ldr	r3, [sp, #16]
90013006:	1b9e      	subs	r6, r3, r6
90013008:	6903      	ldr	r3, [r0, #16]
9001300a:	889a      	ldrh	r2, [r3, #4]
9001300c:	4432      	add	r2, r6
9001300e:	809a      	strh	r2, [r3, #4]
90013010:	9a02      	ldr	r2, [sp, #8]
90013012:	f102 0c20 	add.w	ip, r2, #32
90013016:	9a01      	ldr	r2, [sp, #4]
90013018:	ebac 0c02 	sub.w	ip, ip, r2
9001301c:	88da      	ldrh	r2, [r3, #6]
9001301e:	fb06 260c 	mla	r6, r6, ip, r2
90013022:	80de      	strh	r6, [r3, #6]
90013024:	f7ff bbb6 	b.w	90012794 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90013028 <_ZN8touchgfx7Outline6lineToEii>:
90013028:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001302a:	079b      	lsls	r3, r3, #30
9001302c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001302e:	460e      	mov	r6, r1
90013030:	4615      	mov	r5, r2
90013032:	d511      	bpl.n	90013058 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013034:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
90013038:	ea86 0701 	eor.w	r7, r6, r1
9001303c:	ea85 0302 	eor.w	r3, r5, r2
90013040:	433b      	orrs	r3, r7
90013042:	d009      	beq.n	90013058 <_ZN8touchgfx7Outline6lineToEii+0x30>
90013044:	4633      	mov	r3, r6
90013046:	9500      	str	r5, [sp, #0]
90013048:	f7ff fb4c 	bl	900126e4 <_ZN8touchgfx7Outline10renderLineEiiii>
9001304c:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001304e:	f043 0301 	orr.w	r3, r3, #1
90013052:	e9c0 6505 	strd	r6, r5, [r0, #20]
90013056:	6243      	str	r3, [r0, #36]	; 0x24
90013058:	b003      	add	sp, #12
9001305a:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001305c <_ZN8touchgfx7Outline6moveToEii>:
9001305c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001305e:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013060:	4615      	mov	r5, r2
90013062:	4604      	mov	r4, r0
90013064:	460e      	mov	r6, r1
90013066:	079a      	lsls	r2, r3, #30
90013068:	d401      	bmi.n	9001306e <_ZN8touchgfx7Outline6moveToEii+0x12>
9001306a:	f7ff fb07 	bl	9001267c <_ZN8touchgfx7Outline5resetEv>
9001306e:	6a63      	ldr	r3, [r4, #36]	; 0x24
90013070:	07db      	lsls	r3, r3, #31
90013072:	d504      	bpl.n	9001307e <_ZN8touchgfx7Outline6moveToEii+0x22>
90013074:	4620      	mov	r0, r4
90013076:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
9001307a:	f7ff ffd5 	bl	90013028 <_ZN8touchgfx7Outline6lineToEii>
9001307e:	6923      	ldr	r3, [r4, #16]
90013080:	1170      	asrs	r0, r6, #5
90013082:	1169      	asrs	r1, r5, #5
90013084:	f9b3 2000 	ldrsh.w	r2, [r3]
90013088:	4290      	cmp	r0, r2
9001308a:	d103      	bne.n	90013094 <_ZN8touchgfx7Outline6moveToEii+0x38>
9001308c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013090:	4291      	cmp	r1, r2
90013092:	d01a      	beq.n	900130ca <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013094:	88df      	ldrh	r7, [r3, #6]
90013096:	889a      	ldrh	r2, [r3, #4]
90013098:	433a      	orrs	r2, r7
9001309a:	d010      	beq.n	900130be <_ZN8touchgfx7Outline6moveToEii+0x62>
9001309c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900130a0:	2a00      	cmp	r2, #0
900130a2:	db0c      	blt.n	900130be <_ZN8touchgfx7Outline6moveToEii+0x62>
900130a4:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
900130a6:	42ba      	cmp	r2, r7
900130a8:	da09      	bge.n	900130be <_ZN8touchgfx7Outline6moveToEii+0x62>
900130aa:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
900130ae:	42ba      	cmp	r2, r7
900130b0:	f102 0201 	add.w	r2, r2, #1
900130b4:	bf38      	it	cc
900130b6:	3308      	addcc	r3, #8
900130b8:	60a2      	str	r2, [r4, #8]
900130ba:	bf38      	it	cc
900130bc:	6123      	strcc	r3, [r4, #16]
900130be:	6923      	ldr	r3, [r4, #16]
900130c0:	2200      	movs	r2, #0
900130c2:	8018      	strh	r0, [r3, #0]
900130c4:	8059      	strh	r1, [r3, #2]
900130c6:	809a      	strh	r2, [r3, #4]
900130c8:	80da      	strh	r2, [r3, #6]
900130ca:	6166      	str	r6, [r4, #20]
900130cc:	6225      	str	r5, [r4, #32]
900130ce:	e9c4 5606 	strd	r5, r6, [r4, #24]
900130d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

900130d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
900130d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900130d8:	b0d0      	sub	sp, #320	; 0x140
900130da:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
900130de:	466c      	mov	r4, sp
900130e0:	4627      	mov	r7, r4
900130e2:	1a0d      	subs	r5, r1, r0
900130e4:	f100 0308 	add.w	r3, r0, #8
900130e8:	2d48      	cmp	r5, #72	; 0x48
900130ea:	f340 80d5 	ble.w	90013298 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900130ee:	112d      	asrs	r5, r5, #4
900130f0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900130f4:	f9b0 9000 	ldrsh.w	r9, [r0]
900130f8:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
900130fc:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90013100:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013104:	6816      	ldr	r6, [r2, #0]
90013106:	6006      	str	r6, [r0, #0]
90013108:	6856      	ldr	r6, [r2, #4]
9001310a:	6046      	str	r6, [r0, #4]
9001310c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90013110:	f8a2 8002 	strh.w	r8, [r2, #2]
90013114:	f8a2 e004 	strh.w	lr, [r2, #4]
90013118:	f8a2 c006 	strh.w	ip, [r2, #6]
9001311c:	f1a1 0208 	sub.w	r2, r1, #8
90013120:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013124:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90013128:	4565      	cmp	r5, ip
9001312a:	db06      	blt.n	9001313a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001312c:	d119      	bne.n	90013162 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001312e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90013132:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
90013136:	42ae      	cmp	r6, r5
90013138:	dd13      	ble.n	90013162 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001313a:	460e      	mov	r6, r1
9001313c:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90013140:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90013144:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013148:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
9001314c:	601d      	str	r5, [r3, #0]
9001314e:	6875      	ldr	r5, [r6, #4]
90013150:	605d      	str	r5, [r3, #4]
90013152:	f821 9c08 	strh.w	r9, [r1, #-8]
90013156:	f821 cc06 	strh.w	ip, [r1, #-6]
9001315a:	f821 8c04 	strh.w	r8, [r1, #-4]
9001315e:	f821 ec02 	strh.w	lr, [r1, #-2]
90013162:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
90013166:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
9001316a:	42ae      	cmp	r6, r5
9001316c:	db06      	blt.n	9001317c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
9001316e:	d116      	bne.n	9001319e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
90013170:	f9b0 c000 	ldrsh.w	ip, [r0]
90013174:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
90013178:	45ac      	cmp	ip, r5
9001317a:	da10      	bge.n	9001319e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
9001317c:	681d      	ldr	r5, [r3, #0]
9001317e:	f9b0 8000 	ldrsh.w	r8, [r0]
90013182:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013186:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
9001318a:	6005      	str	r5, [r0, #0]
9001318c:	685d      	ldr	r5, [r3, #4]
9001318e:	f8a0 8008 	strh.w	r8, [r0, #8]
90013192:	6045      	str	r5, [r0, #4]
90013194:	8146      	strh	r6, [r0, #10]
90013196:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001319a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001319e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900131a2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900131a6:	4565      	cmp	r5, ip
900131a8:	db06      	blt.n	900131b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900131aa:	d119      	bne.n	900131e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900131ac:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
900131b0:	f9b0 5000 	ldrsh.w	r5, [r0]
900131b4:	42ae      	cmp	r6, r5
900131b6:	da13      	bge.n	900131e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900131b8:	460e      	mov	r6, r1
900131ba:	f9b0 9000 	ldrsh.w	r9, [r0]
900131be:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
900131c2:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900131c6:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
900131ca:	6005      	str	r5, [r0, #0]
900131cc:	6875      	ldr	r5, [r6, #4]
900131ce:	6045      	str	r5, [r0, #4]
900131d0:	f821 9c08 	strh.w	r9, [r1, #-8]
900131d4:	f821 cc06 	strh.w	ip, [r1, #-6]
900131d8:	f821 8c04 	strh.w	r8, [r1, #-4]
900131dc:	f821 ec02 	strh.w	lr, [r1, #-2]
900131e0:	3308      	adds	r3, #8
900131e2:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900131e6:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
900131ea:	45e6      	cmp	lr, ip
900131ec:	dbf8      	blt.n	900131e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900131ee:	d105      	bne.n	900131fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
900131f0:	f9b3 6000 	ldrsh.w	r6, [r3]
900131f4:	f9b0 5000 	ldrsh.w	r5, [r0]
900131f8:	42ae      	cmp	r6, r5
900131fa:	dbf1      	blt.n	900131e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900131fc:	4615      	mov	r5, r2
900131fe:	3a08      	subs	r2, #8
90013200:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90013204:	45b4      	cmp	ip, r6
90013206:	dbf9      	blt.n	900131fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013208:	d105      	bne.n	90013216 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001320a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001320e:	f9b2 6000 	ldrsh.w	r6, [r2]
90013212:	45b0      	cmp	r8, r6
90013214:	dbf2      	blt.n	900131fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013216:	4293      	cmp	r3, r2
90013218:	f1a5 0608 	sub.w	r6, r5, #8
9001321c:	d816      	bhi.n	9001324c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
9001321e:	f8d6 c000 	ldr.w	ip, [r6]
90013222:	f9b3 a000 	ldrsh.w	sl, [r3]
90013226:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001322a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001322e:	f8c3 c000 	str.w	ip, [r3]
90013232:	f8d6 c004 	ldr.w	ip, [r6, #4]
90013236:	f8c3 c004 	str.w	ip, [r3, #4]
9001323a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001323e:	f825 ec06 	strh.w	lr, [r5, #-6]
90013242:	f825 9c04 	strh.w	r9, [r5, #-4]
90013246:	f825 8c02 	strh.w	r8, [r5, #-2]
9001324a:	e7c9      	b.n	900131e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001324c:	f8d6 e000 	ldr.w	lr, [r6]
90013250:	f9b0 a000 	ldrsh.w	sl, [r0]
90013254:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
90013258:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
9001325c:	f8c0 e000 	str.w	lr, [r0]
90013260:	f8d6 e004 	ldr.w	lr, [r6, #4]
90013264:	1a16      	subs	r6, r2, r0
90013266:	f8c0 e004 	str.w	lr, [r0, #4]
9001326a:	f825 ac08 	strh.w	sl, [r5, #-8]
9001326e:	f825 cc06 	strh.w	ip, [r5, #-6]
90013272:	f825 9c04 	strh.w	r9, [r5, #-4]
90013276:	f825 8c02 	strh.w	r8, [r5, #-2]
9001327a:	1acd      	subs	r5, r1, r3
9001327c:	10ed      	asrs	r5, r5, #3
9001327e:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
90013282:	bfb5      	itete	lt
90013284:	e9c4 0200 	strdlt	r0, r2, [r4]
90013288:	e9c4 3100 	strdge	r3, r1, [r4]
9001328c:	460a      	movlt	r2, r1
9001328e:	4603      	movge	r3, r0
90013290:	3408      	adds	r4, #8
90013292:	4618      	mov	r0, r3
90013294:	4611      	mov	r1, r2
90013296:	e724      	b.n	900130e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013298:	4299      	cmp	r1, r3
9001329a:	d927      	bls.n	900132ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001329c:	f1a3 0210 	sub.w	r2, r3, #16
900132a0:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900132a4:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900132a8:	45ac      	cmp	ip, r5
900132aa:	db06      	blt.n	900132ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
900132ac:	d11c      	bne.n	900132e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900132ae:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
900132b2:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
900132b6:	42ae      	cmp	r6, r5
900132b8:	da16      	bge.n	900132e8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
900132ba:	4615      	mov	r5, r2
900132bc:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
900132c0:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
900132c4:	3a08      	subs	r2, #8
900132c6:	f855 6f08 	ldr.w	r6, [r5, #8]!
900132ca:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
900132ce:	6196      	str	r6, [r2, #24]
900132d0:	42a8      	cmp	r0, r5
900132d2:	686e      	ldr	r6, [r5, #4]
900132d4:	f8a2 9010 	strh.w	r9, [r2, #16]
900132d8:	61d6      	str	r6, [r2, #28]
900132da:	f8a2 c012 	strh.w	ip, [r2, #18]
900132de:	f8a2 8014 	strh.w	r8, [r2, #20]
900132e2:	f8a2 e016 	strh.w	lr, [r2, #22]
900132e6:	d1db      	bne.n	900132a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
900132e8:	3308      	adds	r3, #8
900132ea:	e7d5      	b.n	90013298 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
900132ec:	42bc      	cmp	r4, r7
900132ee:	d903      	bls.n	900132f8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
900132f0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
900132f4:	3c08      	subs	r4, #8
900132f6:	e6f4      	b.n	900130e2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900132f8:	b050      	add	sp, #320	; 0x140
900132fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

900132fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
900132fe:	b510      	push	{r4, lr}
90013300:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013302:	4604      	mov	r4, r0
90013304:	07da      	lsls	r2, r3, #31
90013306:	d507      	bpl.n	90013318 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90013308:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
9001330c:	f7ff fe8c 	bl	90013028 <_ZN8touchgfx7Outline6lineToEii>
90013310:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013312:	f023 0301 	bic.w	r3, r3, #1
90013316:	6243      	str	r3, [r0, #36]	; 0x24
90013318:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001331a:	079b      	lsls	r3, r3, #30
9001331c:	d521      	bpl.n	90013362 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
9001331e:	6923      	ldr	r3, [r4, #16]
90013320:	88d9      	ldrh	r1, [r3, #6]
90013322:	889a      	ldrh	r2, [r3, #4]
90013324:	430a      	orrs	r2, r1
90013326:	d010      	beq.n	9001334a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013328:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001332c:	2a00      	cmp	r2, #0
9001332e:	db0c      	blt.n	9001334a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013330:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
90013332:	428a      	cmp	r2, r1
90013334:	da09      	bge.n	9001334a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013336:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001333a:	4291      	cmp	r1, r2
9001333c:	f102 0201 	add.w	r2, r2, #1
90013340:	bf88      	it	hi
90013342:	3308      	addhi	r3, #8
90013344:	60a2      	str	r2, [r4, #8]
90013346:	bf88      	it	hi
90013348:	6123      	strhi	r3, [r4, #16]
9001334a:	68a1      	ldr	r1, [r4, #8]
9001334c:	b129      	cbz	r1, 9001335a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
9001334e:	6863      	ldr	r3, [r4, #4]
90013350:	4299      	cmp	r1, r3
90013352:	d802      	bhi.n	9001335a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
90013354:	68e0      	ldr	r0, [r4, #12]
90013356:	f7ff febd 	bl	900130d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
9001335a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001335c:	f023 0302 	bic.w	r3, r3, #2
90013360:	6263      	str	r3, [r4, #36]	; 0x24
90013362:	68e0      	ldr	r0, [r4, #12]
90013364:	bd10      	pop	{r4, pc}
	...

90013368 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
90013368:	4b02      	ldr	r3, [pc, #8]	; (90013374 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
9001336a:	6018      	str	r0, [r3, #0]
9001336c:	4b02      	ldr	r3, [pc, #8]	; (90013378 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
9001336e:	6019      	str	r1, [r3, #0]
90013370:	4770      	bx	lr
90013372:	bf00      	nop
90013374:	24023574 	.word	0x24023574
90013378:	24023578 	.word	0x24023578

9001337c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
9001337c:	2300      	movs	r3, #0
9001337e:	4a02      	ldr	r2, [pc, #8]	; (90013388 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
90013380:	6013      	str	r3, [r2, #0]
90013382:	4a02      	ldr	r2, [pc, #8]	; (9001338c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
90013384:	6013      	str	r3, [r2, #0]
90013386:	4770      	bx	lr
90013388:	24023574 	.word	0x24023574
9001338c:	24023578 	.word	0x24023578

90013390 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013390:	4b01      	ldr	r3, [pc, #4]	; (90013398 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90013392:	6818      	ldr	r0, [r3, #0]
90013394:	4770      	bx	lr
90013396:	bf00      	nop
90013398:	24023574 	.word	0x24023574

9001339c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
9001339c:	4b01      	ldr	r3, [pc, #4]	; (900133a4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001339e:	6818      	ldr	r0, [r3, #0]
900133a0:	4770      	bx	lr
900133a2:	bf00      	nop
900133a4:	24023578 	.word	0x24023578

900133a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900133a8:	b510      	push	{r4, lr}
900133aa:	6803      	ldr	r3, [r0, #0]
900133ac:	460c      	mov	r4, r1
900133ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900133b0:	4798      	blx	r3
900133b2:	1b03      	subs	r3, r0, r4
900133b4:	4258      	negs	r0, r3
900133b6:	4158      	adcs	r0, r3
900133b8:	bd10      	pop	{r4, pc}
	...

900133bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900133bc:	4b01      	ldr	r3, [pc, #4]	; (900133c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900133be:	6019      	str	r1, [r3, #0]
900133c0:	4770      	bx	lr
900133c2:	bf00      	nop
900133c4:	2402357c 	.word	0x2402357c

900133c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900133c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900133cc:	4696      	mov	lr, r2
900133ce:	b097      	sub	sp, #92	; 0x5c
900133d0:	4605      	mov	r5, r0
900133d2:	4614      	mov	r4, r2
900133d4:	460e      	mov	r6, r1
900133d6:	461f      	mov	r7, r3
900133d8:	f10d 0c1c 	add.w	ip, sp, #28
900133dc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
900133e0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
900133e4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
900133e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900133ec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900133f0:	f8de 3000 	ldr.w	r3, [lr]
900133f4:	f104 0e14 	add.w	lr, r4, #20
900133f8:	f8cc 3000 	str.w	r3, [ip]
900133fc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013400:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013404:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013408:	f8de 3000 	ldr.w	r3, [lr]
9001340c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90013410:	f8cc 3000 	str.w	r3, [ip]
90013414:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90013418:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001341c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013420:	f8de 3000 	ldr.w	r3, [lr]
90013424:	4631      	mov	r1, r6
90013426:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013428:	4628      	mov	r0, r5
9001342a:	f8cc 3000 	str.w	r3, [ip]
9001342e:	682b      	ldr	r3, [r5, #0]
90013430:	9201      	str	r2, [sp, #4]
90013432:	9a20      	ldr	r2, [sp, #128]	; 0x80
90013434:	f8cd 8008 	str.w	r8, [sp, #8]
90013438:	9200      	str	r2, [sp, #0]
9001343a:	aa07      	add	r2, sp, #28
9001343c:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013440:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
90013444:	463b      	mov	r3, r7
90013446:	47d8      	blx	fp
90013448:	46a6      	mov	lr, r4
9001344a:	f10d 0c1c 	add.w	ip, sp, #28
9001344e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013452:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013456:	f8de 3000 	ldr.w	r3, [lr]
9001345a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
9001345e:	343c      	adds	r4, #60	; 0x3c
90013460:	f8cc 3000 	str.w	r3, [ip]
90013464:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013468:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001346c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013470:	f8de 3000 	ldr.w	r3, [lr]
90013474:	f8cc 3000 	str.w	r3, [ip]
90013478:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
9001347c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9001347e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013482:	6823      	ldr	r3, [r4, #0]
90013484:	4631      	mov	r1, r6
90013486:	4628      	mov	r0, r5
90013488:	f8cc 3000 	str.w	r3, [ip]
9001348c:	682b      	ldr	r3, [r5, #0]
9001348e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013492:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013494:	f8cd 8008 	str.w	r8, [sp, #8]
90013498:	9201      	str	r2, [sp, #4]
9001349a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001349c:	9200      	str	r2, [sp, #0]
9001349e:	aa07      	add	r2, sp, #28
900134a0:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
900134a2:	463b      	mov	r3, r7
900134a4:	47a0      	blx	r4
900134a6:	b017      	add	sp, #92	; 0x5c
900134a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900134ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900134ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900134b0:	b08d      	sub	sp, #52	; 0x34
900134b2:	4688      	mov	r8, r1
900134b4:	f8d3 c000 	ldr.w	ip, [r3]
900134b8:	9916      	ldr	r1, [sp, #88]	; 0x58
900134ba:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
900134be:	680f      	ldr	r7, [r1, #0]
900134c0:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
900134c4:	eba7 070c 	sub.w	r7, r7, ip
900134c8:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
900134cc:	edd3 6a07 	vldr	s13, [r3, #28]
900134d0:	42bc      	cmp	r4, r7
900134d2:	9918      	ldr	r1, [sp, #96]	; 0x60
900134d4:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
900134d8:	bfa8      	it	ge
900134da:	463c      	movge	r4, r7
900134dc:	f9b1 9000 	ldrsh.w	r9, [r1]
900134e0:	f9ba 1000 	ldrsh.w	r1, [sl]
900134e4:	ee07 4a90 	vmov	s15, r4
900134e8:	eb09 0e0c 	add.w	lr, r9, ip
900134ec:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
900134f0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900134f4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
900134f8:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
900134fc:	4571      	cmp	r1, lr
900134fe:	ee25 4a04 	vmul.f32	s8, s10, s8
90013502:	ee65 4a24 	vmul.f32	s9, s10, s9
90013506:	ee25 5a27 	vmul.f32	s10, s10, s15
9001350a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9001350e:	ee71 0aa4 	vadd.f32	s1, s3, s9
90013512:	ee32 1a05 	vadd.f32	s2, s4, s10
90013516:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001351a:	ee36 0a84 	vadd.f32	s0, s13, s8
9001351e:	ee61 1a87 	vmul.f32	s3, s3, s14
90013522:	ee22 2a07 	vmul.f32	s4, s4, s14
90013526:	f340 808c 	ble.w	90013642 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001352a:	eba1 060e 	sub.w	r6, r1, lr
9001352e:	fb96 f5f4 	sdiv	r5, r6, r4
90013532:	ee07 5a10 	vmov	s14, r5
90013536:	2d00      	cmp	r5, #0
90013538:	fb04 6615 	mls	r6, r4, r5, r6
9001353c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90013540:	eea7 0a04 	vfma.f32	s0, s14, s8
90013544:	eee7 0a24 	vfma.f32	s1, s14, s9
90013548:	eea7 1a05 	vfma.f32	s2, s14, s10
9001354c:	dd12      	ble.n	90013574 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001354e:	ee70 6a44 	vsub.f32	s13, s0, s8
90013552:	ee70 1ae4 	vsub.f32	s3, s1, s9
90013556:	ee31 2a45 	vsub.f32	s4, s2, s10
9001355a:	eef5 6a40 	vcmp.f32	s13, #0.0
9001355e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013562:	bf14      	ite	ne
90013564:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90013568:	eeb0 7a67 	vmoveq.f32	s14, s15
9001356c:	ee61 1a87 	vmul.f32	s3, s3, s14
90013570:	ee22 2a07 	vmul.f32	s4, s4, s14
90013574:	fb05 f204 	mul.w	r2, r5, r4
90013578:	1abf      	subs	r7, r7, r2
9001357a:	4494      	add	ip, r2
9001357c:	f8ba 2004 	ldrh.w	r2, [sl, #4]
90013580:	4411      	add	r1, r2
90013582:	eb09 020c 	add.w	r2, r9, ip
90013586:	b209      	sxth	r1, r1
90013588:	443a      	add	r2, r7
9001358a:	428a      	cmp	r2, r1
9001358c:	bfc4      	itt	gt
9001358e:	eba1 0209 	subgt.w	r2, r1, r9
90013592:	eba2 070c 	subgt.w	r7, r2, ip
90013596:	2f00      	cmp	r7, #0
90013598:	dd50      	ble.n	9001363c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9001359a:	fb97 f1f4 	sdiv	r1, r7, r4
9001359e:	fb04 7211 	mls	r2, r4, r1, r7
900135a2:	b90a      	cbnz	r2, 900135a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900135a4:	3901      	subs	r1, #1
900135a6:	4622      	mov	r2, r4
900135a8:	eec7 3a80 	vdiv.f32	s7, s15, s0
900135ac:	6840      	ldr	r0, [r0, #4]
900135ae:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
900135b2:	44b6      	add	lr, r6
900135b4:	f8d0 a000 	ldr.w	sl, [r0]
900135b8:	2900      	cmp	r1, #0
900135ba:	bfcc      	ite	gt
900135bc:	46a1      	movgt	r9, r4
900135be:	4691      	movle	r9, r2
900135c0:	900b      	str	r0, [sp, #44]	; 0x2c
900135c2:	9817      	ldr	r0, [sp, #92]	; 0x5c
900135c4:	fb04 e505 	mla	r5, r4, r5, lr
900135c8:	eef0 6a42 	vmov.f32	s13, s4
900135cc:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
900135d0:	9008      	str	r0, [sp, #32]
900135d2:	eeb0 7a61 	vmov.f32	s14, s3
900135d6:	9818      	ldr	r0, [sp, #96]	; 0x60
900135d8:	695b      	ldr	r3, [r3, #20]
900135da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900135de:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
900135e2:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
900135e6:	980b      	ldr	r0, [sp, #44]	; 0x2c
900135e8:	445b      	add	r3, fp
900135ea:	9307      	str	r3, [sp, #28]
900135ec:	ee16 3a90 	vmov	r3, s13
900135f0:	e9cd 8505 	strd	r8, r5, [sp, #20]
900135f4:	ee60 2aa3 	vmul.f32	s5, s1, s7
900135f8:	ee21 3a23 	vmul.f32	s6, s2, s7
900135fc:	ee72 7ae1 	vsub.f32	s15, s5, s3
90013600:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013604:	ee17 7a90 	vmov	r7, s15
90013608:	ee73 7a42 	vsub.f32	s15, s6, s4
9001360c:	fb97 f7f4 	sdiv	r7, r7, r4
90013610:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013614:	ee17 ca90 	vmov	ip, s15
90013618:	fb9c fcf4 	sdiv	ip, ip, r4
9001361c:	fb0c 3306 	mla	r3, ip, r6, r3
90013620:	9302      	str	r3, [sp, #8]
90013622:	ee17 3a10 	vmov	r3, s14
90013626:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001362a:	fb07 3706 	mla	r7, r7, r6, r3
9001362e:	eba9 0306 	sub.w	r3, r9, r6
90013632:	e9cd 4700 	strd	r4, r7, [sp]
90013636:	f8da 4008 	ldr.w	r4, [sl, #8]
9001363a:	47a0      	blx	r4
9001363c:	b00d      	add	sp, #52	; 0x34
9001363e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013642:	2500      	movs	r5, #0
90013644:	462e      	mov	r6, r5
90013646:	e799      	b.n	9001357c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90013648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001364c:	b0db      	sub	sp, #364	; 0x16c
9001364e:	461d      	mov	r5, r3
90013650:	4614      	mov	r4, r2
90013652:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
90013656:	910f      	str	r1, [sp, #60]	; 0x3c
90013658:	4629      	mov	r1, r5
9001365a:	930a      	str	r3, [sp, #40]	; 0x28
9001365c:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
90013660:	9009      	str	r0, [sp, #36]	; 0x24
90013662:	930b      	str	r3, [sp, #44]	; 0x2c
90013664:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
90013668:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
9001366c:	9310      	str	r3, [sp, #64]	; 0x40
9001366e:	6803      	ldr	r3, [r0, #0]
90013670:	6c5f      	ldr	r7, [r3, #68]	; 0x44
90013672:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
90013676:	47b8      	blx	r7
90013678:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001367a:	6058      	str	r0, [r3, #4]
9001367c:	2800      	cmp	r0, #0
9001367e:	f000 83a1 	beq.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013682:	682b      	ldr	r3, [r5, #0]
90013684:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
90013688:	ed94 7a02 	vldr	s14, [r4, #8]
9001368c:	9314      	str	r3, [sp, #80]	; 0x50
9001368e:	686b      	ldr	r3, [r5, #4]
90013690:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013694:	9315      	str	r3, [sp, #84]	; 0x54
90013696:	4bc1      	ldr	r3, [pc, #772]	; (9001399c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90013698:	7819      	ldrb	r1, [r3, #0]
9001369a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001369e:	2900      	cmp	r1, #0
900136a0:	bf16      	itet	ne
900136a2:	4619      	movne	r1, r3
900136a4:	4611      	moveq	r1, r2
900136a6:	4613      	movne	r3, r2
900136a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136ac:	9116      	str	r1, [sp, #88]	; 0x58
900136ae:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
900136b2:	f240 8387 	bls.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136b6:	ed94 7a07 	vldr	s14, [r4, #28]
900136ba:	eeb4 7ae7 	vcmpe.f32	s14, s15
900136be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136c2:	f240 837f 	bls.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136c6:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
900136ca:	eeb4 7ae7 	vcmpe.f32	s14, s15
900136ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136d2:	f240 8377 	bls.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136d6:	6822      	ldr	r2, [r4, #0]
900136d8:	4bb1      	ldr	r3, [pc, #708]	; (900139a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
900136da:	429a      	cmp	r2, r3
900136dc:	f2c0 8372 	blt.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136e0:	49b0      	ldr	r1, [pc, #704]	; (900139a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
900136e2:	6963      	ldr	r3, [r4, #20]
900136e4:	428a      	cmp	r2, r1
900136e6:	f300 836d 	bgt.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136ea:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
900136ee:	48ae      	ldr	r0, [pc, #696]	; (900139a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
900136f0:	33ff      	adds	r3, #255	; 0xff
900136f2:	4283      	cmp	r3, r0
900136f4:	f200 8366 	bhi.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900136f8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900136fa:	4dac      	ldr	r5, [pc, #688]	; (900139ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
900136fc:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90013700:	33ff      	adds	r3, #255	; 0xff
90013702:	42ab      	cmp	r3, r5
90013704:	f200 835e 	bhi.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013708:	6862      	ldr	r2, [r4, #4]
9001370a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
9001370e:	33ff      	adds	r3, #255	; 0xff
90013710:	4283      	cmp	r3, r0
90013712:	f200 8357 	bhi.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013716:	69a1      	ldr	r1, [r4, #24]
90013718:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
9001371c:	33ff      	adds	r3, #255	; 0xff
9001371e:	4283      	cmp	r3, r0
90013720:	f200 8350 	bhi.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013724:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90013726:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
9001372a:	30ff      	adds	r0, #255	; 0xff
9001372c:	42a8      	cmp	r0, r5
9001372e:	f200 8349 	bhi.w	90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013732:	428a      	cmp	r2, r1
90013734:	f280 8110 	bge.w	90013958 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90013738:	429a      	cmp	r2, r3
9001373a:	f300 8119 	bgt.w	90013970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
9001373e:	4299      	cmp	r1, r3
90013740:	f280 811d 	bge.w	9001397e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90013744:	2502      	movs	r5, #2
90013746:	2701      	movs	r7, #1
90013748:	46a9      	mov	r9, r5
9001374a:	46b8      	mov	r8, r7
9001374c:	f04f 0a00 	mov.w	sl, #0
90013750:	4621      	mov	r1, r4
90013752:	a849      	add	r0, sp, #292	; 0x124
90013754:	f003 fe26 	bl	900173a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90013758:	4622      	mov	r2, r4
9001375a:	4653      	mov	r3, sl
9001375c:	a949      	add	r1, sp, #292	; 0x124
9001375e:	f8cd 9000 	str.w	r9, [sp]
90013762:	a819      	add	r0, sp, #100	; 0x64
90013764:	f003 ff4e 	bl	90017604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013768:	4622      	mov	r2, r4
9001376a:	4653      	mov	r3, sl
9001376c:	a949      	add	r1, sp, #292	; 0x124
9001376e:	f8cd 8000 	str.w	r8, [sp]
90013772:	a829      	add	r0, sp, #164	; 0xa4
90013774:	f003 ff46 	bl	90017604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013778:	4643      	mov	r3, r8
9001377a:	4622      	mov	r2, r4
9001377c:	a949      	add	r1, sp, #292	; 0x124
9001377e:	f8cd 9000 	str.w	r9, [sp]
90013782:	a839      	add	r0, sp, #228	; 0xe4
90013784:	f003 ff3e 	bl	90017604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90013788:	42af      	cmp	r7, r5
9001378a:	af12      	add	r7, sp, #72	; 0x48
9001378c:	bfb7      	itett	lt
9001378e:	2300      	movlt	r3, #0
90013790:	2301      	movge	r3, #1
90013792:	ad29      	addlt	r5, sp, #164	; 0xa4
90013794:	ac19      	addlt	r4, sp, #100	; 0x64
90013796:	bfb1      	iteee	lt
90013798:	930e      	strlt	r3, [sp, #56]	; 0x38
9001379a:	ad19      	addge	r5, sp, #100	; 0x64
9001379c:	930e      	strge	r3, [sp, #56]	; 0x38
9001379e:	ac29      	addge	r4, sp, #164	; 0xa4
900137a0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900137a2:	e893 0003 	ldmia.w	r3, {r0, r1}
900137a6:	e887 0003 	stmia.w	r7, {r0, r1}
900137aa:	b928      	cbnz	r0, 900137b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
900137ac:	4b80      	ldr	r3, [pc, #512]	; (900139b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
900137ae:	6818      	ldr	r0, [r3, #0]
900137b0:	6803      	ldr	r3, [r0, #0]
900137b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900137b4:	4798      	blx	r3
900137b6:	6038      	str	r0, [r7, #0]
900137b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
900137ba:	f8bb 0006 	ldrh.w	r0, [fp, #6]
900137be:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900137c2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
900137c4:	930c      	str	r3, [sp, #48]	; 0x30
900137c6:	990c      	ldr	r1, [sp, #48]	; 0x30
900137c8:	6963      	ldr	r3, [r4, #20]
900137ca:	440b      	add	r3, r1
900137cc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
900137d0:	4408      	add	r0, r1
900137d2:	b200      	sxth	r0, r0
900137d4:	4283      	cmp	r3, r0
900137d6:	900d      	str	r0, [sp, #52]	; 0x34
900137d8:	f280 80dd 	bge.w	90013996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
900137dc:	428b      	cmp	r3, r1
900137de:	da08      	bge.n	900137f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900137e0:	2a00      	cmp	r2, #0
900137e2:	dd06      	ble.n	900137f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
900137e4:	1acb      	subs	r3, r1, r3
900137e6:	429a      	cmp	r2, r3
900137e8:	f2c0 80e4 	blt.w	900139b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
900137ec:	2b00      	cmp	r3, #0
900137ee:	f300 80e2 	bgt.w	900139b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
900137f2:	6967      	ldr	r7, [r4, #20]
900137f4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
900137f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900137fa:	443b      	add	r3, r7
900137fc:	461f      	mov	r7, r3
900137fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013800:	1bdf      	subs	r7, r3, r7
90013802:	4297      	cmp	r7, r2
90013804:	bfa8      	it	ge
90013806:	4617      	movge	r7, r2
90013808:	2f00      	cmp	r7, #0
9001380a:	f340 8166 	ble.w	90013ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
9001380e:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013810:	6829      	ldr	r1, [r5, #0]
90013812:	f9b3 2000 	ldrsh.w	r2, [r3]
90013816:	f9bb 3000 	ldrsh.w	r3, [fp]
9001381a:	4411      	add	r1, r2
9001381c:	6820      	ldr	r0, [r4, #0]
9001381e:	4299      	cmp	r1, r3
90013820:	dd1a      	ble.n	90013858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013822:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013826:	4402      	add	r2, r0
90013828:	440b      	add	r3, r1
9001382a:	b21b      	sxth	r3, r3
9001382c:	429a      	cmp	r2, r3
9001382e:	dc13      	bgt.n	90013858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013830:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013832:	a912      	add	r1, sp, #72	; 0x48
90013834:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013836:	9809      	ldr	r0, [sp, #36]	; 0x24
90013838:	681b      	ldr	r3, [r3, #0]
9001383a:	9206      	str	r2, [sp, #24]
9001383c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001383e:	9500      	str	r5, [sp, #0]
90013840:	9205      	str	r2, [sp, #20]
90013842:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013844:	e9cd b203 	strd	fp, r2, [sp, #12]
90013848:	9a64      	ldr	r2, [sp, #400]	; 0x190
9001384a:	e9cd 8201 	strd	r8, r2, [sp, #4]
9001384e:	aa49      	add	r2, sp, #292	; 0x124
90013850:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013854:	4623      	mov	r3, r4
90013856:	47c8      	blx	r9
90013858:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
9001385c:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013860:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013864:	ee37 7a27 	vadd.f32	s14, s14, s15
90013868:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
9001386c:	68a1      	ldr	r1, [r4, #8]
9001386e:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013872:	ed94 6a08 	vldr	s12, [r4, #32]
90013876:	edd4 6a07 	vldr	s13, [r4, #28]
9001387a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
9001387e:	ee76 6a86 	vadd.f32	s13, s13, s12
90013882:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013886:	e9d4 2300 	ldrd	r2, r3, [r4]
9001388a:	edc4 6a07 	vstr	s13, [r4, #28]
9001388e:	441a      	add	r2, r3
90013890:	6963      	ldr	r3, [r4, #20]
90013892:	3301      	adds	r3, #1
90013894:	6022      	str	r2, [r4, #0]
90013896:	6163      	str	r3, [r4, #20]
90013898:	69a3      	ldr	r3, [r4, #24]
9001389a:	3b01      	subs	r3, #1
9001389c:	61a3      	str	r3, [r4, #24]
9001389e:	6923      	ldr	r3, [r4, #16]
900138a0:	440b      	add	r3, r1
900138a2:	68e1      	ldr	r1, [r4, #12]
900138a4:	428b      	cmp	r3, r1
900138a6:	6123      	str	r3, [r4, #16]
900138a8:	db15      	blt.n	900138d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
900138aa:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
900138ae:	3201      	adds	r2, #1
900138b0:	1a5b      	subs	r3, r3, r1
900138b2:	ee76 6a26 	vadd.f32	s13, s12, s13
900138b6:	6022      	str	r2, [r4, #0]
900138b8:	6123      	str	r3, [r4, #16]
900138ba:	edc4 6a07 	vstr	s13, [r4, #28]
900138be:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
900138c2:	ee36 7a87 	vadd.f32	s14, s13, s14
900138c6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900138ca:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
900138ce:	ee77 7a27 	vadd.f32	s15, s14, s15
900138d2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900138d6:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
900138da:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
900138de:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
900138e2:	ee37 7a27 	vadd.f32	s14, s14, s15
900138e6:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
900138ea:	68a9      	ldr	r1, [r5, #8]
900138ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
900138f0:	ed95 6a08 	vldr	s12, [r5, #32]
900138f4:	edd5 6a07 	vldr	s13, [r5, #28]
900138f8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
900138fc:	ee76 6a86 	vadd.f32	s13, s13, s12
90013900:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013904:	e9d5 2300 	ldrd	r2, r3, [r5]
90013908:	edc5 6a07 	vstr	s13, [r5, #28]
9001390c:	441a      	add	r2, r3
9001390e:	696b      	ldr	r3, [r5, #20]
90013910:	3301      	adds	r3, #1
90013912:	602a      	str	r2, [r5, #0]
90013914:	616b      	str	r3, [r5, #20]
90013916:	69ab      	ldr	r3, [r5, #24]
90013918:	3b01      	subs	r3, #1
9001391a:	61ab      	str	r3, [r5, #24]
9001391c:	692b      	ldr	r3, [r5, #16]
9001391e:	440b      	add	r3, r1
90013920:	68e9      	ldr	r1, [r5, #12]
90013922:	428b      	cmp	r3, r1
90013924:	612b      	str	r3, [r5, #16]
90013926:	db15      	blt.n	90013954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90013928:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
9001392c:	3201      	adds	r2, #1
9001392e:	1a5b      	subs	r3, r3, r1
90013930:	ee76 6a26 	vadd.f32	s13, s12, s13
90013934:	602a      	str	r2, [r5, #0]
90013936:	612b      	str	r3, [r5, #16]
90013938:	edc5 6a07 	vstr	s13, [r5, #28]
9001393c:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013940:	ee36 7a87 	vadd.f32	s14, s13, s14
90013944:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013948:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
9001394c:	ee77 7a27 	vadd.f32	s15, s14, s15
90013950:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013954:	3f01      	subs	r7, #1
90013956:	e757      	b.n	90013808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90013958:	4299      	cmp	r1, r3
9001395a:	dc13      	bgt.n	90013984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
9001395c:	429a      	cmp	r2, r3
9001395e:	da14      	bge.n	9001398a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90013960:	2502      	movs	r5, #2
90013962:	2703      	movs	r7, #3
90013964:	f04f 0800 	mov.w	r8, #0
90013968:	46a9      	mov	r9, r5
9001396a:	f04f 0a01 	mov.w	sl, #1
9001396e:	e6ef      	b.n	90013750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013970:	2501      	movs	r5, #1
90013972:	2700      	movs	r7, #0
90013974:	46a9      	mov	r9, r5
90013976:	46b8      	mov	r8, r7
90013978:	f04f 0a02 	mov.w	sl, #2
9001397c:	e6e8      	b.n	90013750 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
9001397e:	2501      	movs	r5, #1
90013980:	2702      	movs	r7, #2
90013982:	e6e1      	b.n	90013748 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90013984:	2500      	movs	r5, #0
90013986:	2701      	movs	r7, #1
90013988:	e7f4      	b.n	90013974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
9001398a:	2702      	movs	r7, #2
9001398c:	2503      	movs	r5, #3
9001398e:	f04f 0900 	mov.w	r9, #0
90013992:	46b8      	mov	r8, r7
90013994:	e7e9      	b.n	9001396a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90013996:	4613      	mov	r3, r2
90013998:	e728      	b.n	900137ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
9001399a:	bf00      	nop
9001399c:	24023564 	.word	0x24023564
900139a0:	fffd8f01 	.word	0xfffd8f01
900139a4:	00027100 	.word	0x00027100
900139a8:	0004e1ff 	.word	0x0004e1ff
900139ac:	0004e1fe 	.word	0x0004e1fe
900139b0:	2402356c 	.word	0x2402356c
900139b4:	4613      	mov	r3, r2
900139b6:	992b      	ldr	r1, [sp, #172]	; 0xac
900139b8:	469e      	mov	lr, r3
900139ba:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
900139bc:	469c      	mov	ip, r3
900139be:	9111      	str	r1, [sp, #68]	; 0x44
900139c0:	f04f 0900 	mov.w	r9, #0
900139c4:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
900139c8:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
900139cc:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
900139d0:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
900139d4:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
900139d8:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
900139dc:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
900139e0:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
900139e4:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
900139e8:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
900139ec:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
900139f0:	f1bc 0f00 	cmp.w	ip, #0
900139f4:	d147      	bne.n	90013a86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
900139f6:	eb03 0c07 	add.w	ip, r3, r7
900139fa:	1ad7      	subs	r7, r2, r3
900139fc:	f1b9 0f00 	cmp.w	r9, #0
90013a00:	d009      	beq.n	90013a16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90013a02:	9029      	str	r0, [sp, #164]	; 0xa4
90013a04:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90013a08:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90013a0c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90013a10:	912d      	str	r1, [sp, #180]	; 0xb4
90013a12:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90013a16:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013a18:	f04f 0800 	mov.w	r8, #0
90013a1c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013a20:	9111      	str	r1, [sp, #68]	; 0x44
90013a22:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013a26:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013a2a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013a2e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013a32:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013a36:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013a3a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013a3e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013a42:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013a46:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013a4a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013a4e:	f1be 0f00 	cmp.w	lr, #0
90013a52:	d031      	beq.n	90013ab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90013a54:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013a56:	4450      	add	r0, sl
90013a58:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013a5c:	4431      	add	r1, r6
90013a5e:	ee37 7a04 	vadd.f32	s14, s14, s8
90013a62:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013a66:	4549      	cmp	r1, r9
90013a68:	db08      	blt.n	90013a7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90013a6a:	ee77 7a85 	vadd.f32	s15, s15, s10
90013a6e:	3001      	adds	r0, #1
90013a70:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013a74:	eba1 0109 	sub.w	r1, r1, r9
90013a78:	ee37 7a06 	vadd.f32	s14, s14, s12
90013a7c:	f10e 3eff 	add.w	lr, lr, #4294967295
90013a80:	f04f 0801 	mov.w	r8, #1
90013a84:	e7e3      	b.n	90013a4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90013a86:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013a88:	4450      	add	r0, sl
90013a8a:	ee37 7a24 	vadd.f32	s14, s14, s9
90013a8e:	4431      	add	r1, r6
90013a90:	ee77 7a84 	vadd.f32	s15, s15, s8
90013a94:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013a98:	4541      	cmp	r1, r8
90013a9a:	db08      	blt.n	90013aae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90013a9c:	ee76 6a85 	vadd.f32	s13, s13, s10
90013aa0:	3001      	adds	r0, #1
90013aa2:	ee37 7a25 	vadd.f32	s14, s14, s11
90013aa6:	eba1 0108 	sub.w	r1, r1, r8
90013aaa:	ee77 7a86 	vadd.f32	s15, s15, s12
90013aae:	f10c 3cff 	add.w	ip, ip, #4294967295
90013ab2:	f04f 0901 	mov.w	r9, #1
90013ab6:	e79b      	b.n	900139f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90013ab8:	449c      	add	ip, r3
90013aba:	1aff      	subs	r7, r7, r3
90013abc:	f1b8 0f00 	cmp.w	r8, #0
90013ac0:	d009      	beq.n	90013ad6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90013ac2:	9019      	str	r0, [sp, #100]	; 0x64
90013ac4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013ac8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013acc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013ad0:	911d      	str	r1, [sp, #116]	; 0x74
90013ad2:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013ad6:	1ad2      	subs	r2, r2, r3
90013ad8:	e68b      	b.n	900137f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013ada:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013adc:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90013ade:	2b00      	cmp	r3, #0
90013ae0:	f000 80d1 	beq.w	90013c86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90013ae4:	ad19      	add	r5, sp, #100	; 0x64
90013ae6:	ac39      	add	r4, sp, #228	; 0xe4
90013ae8:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013aea:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90013aee:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013af2:	930c      	str	r3, [sp, #48]	; 0x30
90013af4:	990c      	ldr	r1, [sp, #48]	; 0x30
90013af6:	6963      	ldr	r3, [r4, #20]
90013af8:	440b      	add	r3, r1
90013afa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013afe:	4408      	add	r0, r1
90013b00:	b200      	sxth	r0, r0
90013b02:	4283      	cmp	r3, r0
90013b04:	900d      	str	r0, [sp, #52]	; 0x34
90013b06:	f280 80c1 	bge.w	90013c8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90013b0a:	428b      	cmp	r3, r1
90013b0c:	da08      	bge.n	90013b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013b0e:	2a00      	cmp	r2, #0
90013b10:	dd06      	ble.n	90013b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013b12:	1acb      	subs	r3, r1, r3
90013b14:	429a      	cmp	r2, r3
90013b16:	f2c0 80bb 	blt.w	90013c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90013b1a:	2b00      	cmp	r3, #0
90013b1c:	f300 80b9 	bgt.w	90013c92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90013b20:	6967      	ldr	r7, [r4, #20]
90013b22:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90013b26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013b28:	443b      	add	r3, r7
90013b2a:	461f      	mov	r7, r3
90013b2c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013b2e:	1bdf      	subs	r7, r3, r7
90013b30:	4297      	cmp	r7, r2
90013b32:	bfa8      	it	ge
90013b34:	4617      	movge	r7, r2
90013b36:	2f00      	cmp	r7, #0
90013b38:	f340 813c 	ble.w	90013db4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90013b3c:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013b3e:	6829      	ldr	r1, [r5, #0]
90013b40:	f9b3 2000 	ldrsh.w	r2, [r3]
90013b44:	f9bb 3000 	ldrsh.w	r3, [fp]
90013b48:	4411      	add	r1, r2
90013b4a:	6820      	ldr	r0, [r4, #0]
90013b4c:	4299      	cmp	r1, r3
90013b4e:	dd1a      	ble.n	90013b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013b50:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013b54:	4402      	add	r2, r0
90013b56:	440b      	add	r3, r1
90013b58:	b21b      	sxth	r3, r3
90013b5a:	429a      	cmp	r2, r3
90013b5c:	dc13      	bgt.n	90013b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013b5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013b60:	a912      	add	r1, sp, #72	; 0x48
90013b62:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013b64:	9809      	ldr	r0, [sp, #36]	; 0x24
90013b66:	681b      	ldr	r3, [r3, #0]
90013b68:	9206      	str	r2, [sp, #24]
90013b6a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013b6c:	9500      	str	r5, [sp, #0]
90013b6e:	9205      	str	r2, [sp, #20]
90013b70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013b72:	e9cd b203 	strd	fp, r2, [sp, #12]
90013b76:	9a64      	ldr	r2, [sp, #400]	; 0x190
90013b78:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013b7c:	aa49      	add	r2, sp, #292	; 0x124
90013b7e:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013b82:	4623      	mov	r3, r4
90013b84:	47c8      	blx	r9
90013b86:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90013b8a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013b8e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013b92:	ee37 7a27 	vadd.f32	s14, s14, s15
90013b96:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90013b9a:	68a1      	ldr	r1, [r4, #8]
90013b9c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013ba0:	ed94 6a08 	vldr	s12, [r4, #32]
90013ba4:	edd4 6a07 	vldr	s13, [r4, #28]
90013ba8:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013bac:	ee76 6a86 	vadd.f32	s13, s13, s12
90013bb0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013bb4:	e9d4 2300 	ldrd	r2, r3, [r4]
90013bb8:	edc4 6a07 	vstr	s13, [r4, #28]
90013bbc:	441a      	add	r2, r3
90013bbe:	6963      	ldr	r3, [r4, #20]
90013bc0:	3301      	adds	r3, #1
90013bc2:	6022      	str	r2, [r4, #0]
90013bc4:	6163      	str	r3, [r4, #20]
90013bc6:	69a3      	ldr	r3, [r4, #24]
90013bc8:	3b01      	subs	r3, #1
90013bca:	61a3      	str	r3, [r4, #24]
90013bcc:	6923      	ldr	r3, [r4, #16]
90013bce:	440b      	add	r3, r1
90013bd0:	68e1      	ldr	r1, [r4, #12]
90013bd2:	428b      	cmp	r3, r1
90013bd4:	6123      	str	r3, [r4, #16]
90013bd6:	db15      	blt.n	90013c04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90013bd8:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013bdc:	3201      	adds	r2, #1
90013bde:	1a5b      	subs	r3, r3, r1
90013be0:	ee76 6a26 	vadd.f32	s13, s12, s13
90013be4:	6022      	str	r2, [r4, #0]
90013be6:	6123      	str	r3, [r4, #16]
90013be8:	edc4 6a07 	vstr	s13, [r4, #28]
90013bec:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013bf0:	ee36 7a87 	vadd.f32	s14, s13, s14
90013bf4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013bf8:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013bfc:	ee77 7a27 	vadd.f32	s15, s14, s15
90013c00:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013c04:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013c08:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013c0c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013c10:	ee37 7a27 	vadd.f32	s14, s14, s15
90013c14:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013c18:	68a9      	ldr	r1, [r5, #8]
90013c1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013c1e:	ed95 6a08 	vldr	s12, [r5, #32]
90013c22:	edd5 6a07 	vldr	s13, [r5, #28]
90013c26:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013c2a:	ee76 6a86 	vadd.f32	s13, s13, s12
90013c2e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013c32:	e9d5 2300 	ldrd	r2, r3, [r5]
90013c36:	edc5 6a07 	vstr	s13, [r5, #28]
90013c3a:	441a      	add	r2, r3
90013c3c:	696b      	ldr	r3, [r5, #20]
90013c3e:	3301      	adds	r3, #1
90013c40:	602a      	str	r2, [r5, #0]
90013c42:	616b      	str	r3, [r5, #20]
90013c44:	69ab      	ldr	r3, [r5, #24]
90013c46:	3b01      	subs	r3, #1
90013c48:	61ab      	str	r3, [r5, #24]
90013c4a:	692b      	ldr	r3, [r5, #16]
90013c4c:	440b      	add	r3, r1
90013c4e:	68e9      	ldr	r1, [r5, #12]
90013c50:	428b      	cmp	r3, r1
90013c52:	612b      	str	r3, [r5, #16]
90013c54:	db15      	blt.n	90013c82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90013c56:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013c5a:	3201      	adds	r2, #1
90013c5c:	1a5b      	subs	r3, r3, r1
90013c5e:	ee76 6a26 	vadd.f32	s13, s12, s13
90013c62:	602a      	str	r2, [r5, #0]
90013c64:	612b      	str	r3, [r5, #16]
90013c66:	edc5 6a07 	vstr	s13, [r5, #28]
90013c6a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013c6e:	ee36 7a87 	vadd.f32	s14, s13, s14
90013c72:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013c76:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013c7a:	ee77 7a27 	vadd.f32	s15, s14, s15
90013c7e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013c82:	3f01      	subs	r7, #1
90013c84:	e757      	b.n	90013b36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90013c86:	ad39      	add	r5, sp, #228	; 0xe4
90013c88:	ac19      	add	r4, sp, #100	; 0x64
90013c8a:	e72d      	b.n	90013ae8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90013c8c:	4613      	mov	r3, r2
90013c8e:	e744      	b.n	90013b1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90013c90:	4613      	mov	r3, r2
90013c92:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90013c94:	469e      	mov	lr, r3
90013c96:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90013c9a:	461f      	mov	r7, r3
90013c9c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90013ca0:	f04f 0900 	mov.w	r9, #0
90013ca4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90013ca8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90013cac:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90013cb0:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90013cb4:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90013cb8:	993d      	ldr	r1, [sp, #244]	; 0xf4
90013cba:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90013cbe:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90013cc2:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90013cc6:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90013cca:	960e      	str	r6, [sp, #56]	; 0x38
90013ccc:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90013cd0:	2f00      	cmp	r7, #0
90013cd2:	d146      	bne.n	90013d62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90013cd4:	449c      	add	ip, r3
90013cd6:	1ad7      	subs	r7, r2, r3
90013cd8:	f1b9 0f00 	cmp.w	r9, #0
90013cdc:	d009      	beq.n	90013cf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90013cde:	9039      	str	r0, [sp, #228]	; 0xe4
90013ce0:	913d      	str	r1, [sp, #244]	; 0xf4
90013ce2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90013ce6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90013cea:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90013cee:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90013cf2:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013cf4:	f04f 0800 	mov.w	r8, #0
90013cf8:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013cfc:	910e      	str	r1, [sp, #56]	; 0x38
90013cfe:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013d02:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013d06:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013d0a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013d0e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013d12:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013d16:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013d1a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013d1e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013d22:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013d26:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013d2a:	f1be 0f00 	cmp.w	lr, #0
90013d2e:	d030      	beq.n	90013d92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90013d30:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013d32:	4450      	add	r0, sl
90013d34:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013d38:	4431      	add	r1, r6
90013d3a:	ee37 7a04 	vadd.f32	s14, s14, s8
90013d3e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013d42:	4549      	cmp	r1, r9
90013d44:	db08      	blt.n	90013d58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90013d46:	ee77 7a85 	vadd.f32	s15, s15, s10
90013d4a:	3001      	adds	r0, #1
90013d4c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013d50:	eba1 0109 	sub.w	r1, r1, r9
90013d54:	ee37 7a06 	vadd.f32	s14, s14, s12
90013d58:	f10e 3eff 	add.w	lr, lr, #4294967295
90013d5c:	f04f 0801 	mov.w	r8, #1
90013d60:	e7e3      	b.n	90013d2a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90013d62:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013d64:	4450      	add	r0, sl
90013d66:	ee37 7a24 	vadd.f32	s14, s14, s9
90013d6a:	4431      	add	r1, r6
90013d6c:	ee77 7a84 	vadd.f32	s15, s15, s8
90013d70:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013d74:	4541      	cmp	r1, r8
90013d76:	db08      	blt.n	90013d8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90013d78:	ee76 6a85 	vadd.f32	s13, s13, s10
90013d7c:	3001      	adds	r0, #1
90013d7e:	ee37 7a25 	vadd.f32	s14, s14, s11
90013d82:	eba1 0108 	sub.w	r1, r1, r8
90013d86:	ee77 7a86 	vadd.f32	s15, s15, s12
90013d8a:	3f01      	subs	r7, #1
90013d8c:	f04f 0901 	mov.w	r9, #1
90013d90:	e79e      	b.n	90013cd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90013d92:	449c      	add	ip, r3
90013d94:	1aff      	subs	r7, r7, r3
90013d96:	f1b8 0f00 	cmp.w	r8, #0
90013d9a:	d009      	beq.n	90013db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90013d9c:	9019      	str	r0, [sp, #100]	; 0x64
90013d9e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013da2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013da6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013daa:	911d      	str	r1, [sp, #116]	; 0x74
90013dac:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013db0:	1ad2      	subs	r2, r2, r3
90013db2:	e6b5      	b.n	90013b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013db4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013db6:	681b      	ldr	r3, [r3, #0]
90013db8:	b923      	cbnz	r3, 90013dc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013dba:	4b04      	ldr	r3, [pc, #16]	; (90013dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90013dbc:	6818      	ldr	r0, [r3, #0]
90013dbe:	6803      	ldr	r3, [r0, #0]
90013dc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013dc2:	4798      	blx	r3
90013dc4:	b05b      	add	sp, #364	; 0x16c
90013dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013dca:	bf00      	nop
90013dcc:	2402356c 	.word	0x2402356c

90013dd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90013dd0:	b570      	push	{r4, r5, r6, lr}
90013dd2:	4604      	mov	r4, r0
90013dd4:	2500      	movs	r5, #0
90013dd6:	9805      	ldr	r0, [sp, #20]
90013dd8:	f89d 601c 	ldrb.w	r6, [sp, #28]
90013ddc:	6061      	str	r1, [r4, #4]
90013dde:	8263      	strh	r3, [r4, #18]
90013de0:	f89d 1010 	ldrb.w	r1, [sp, #16]
90013de4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013de8:	8025      	strh	r5, [r4, #0]
90013dea:	7221      	strb	r1, [r4, #8]
90013dec:	7266      	strb	r6, [r4, #9]
90013dee:	60e0      	str	r0, [r4, #12]
90013df0:	8222      	strh	r2, [r4, #16]
90013df2:	82a3      	strh	r3, [r4, #20]
90013df4:	82e5      	strh	r5, [r4, #22]
90013df6:	8325      	strh	r5, [r4, #24]
90013df8:	8365      	strh	r5, [r4, #26]
90013dfa:	83a5      	strh	r5, [r4, #28]
90013dfc:	83e5      	strh	r5, [r4, #30]
90013dfe:	8425      	strh	r5, [r4, #32]
90013e00:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90013e04:	b32e      	cbz	r6, 90013e52 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013e06:	6803      	ldr	r3, [r0, #0]
90013e08:	695b      	ldr	r3, [r3, #20]
90013e0a:	4798      	blx	r3
90013e0c:	4606      	mov	r6, r0
90013e0e:	b300      	cbz	r0, 90013e52 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013e10:	68e0      	ldr	r0, [r4, #12]
90013e12:	4631      	mov	r1, r6
90013e14:	6803      	ldr	r3, [r0, #0]
90013e16:	68db      	ldr	r3, [r3, #12]
90013e18:	4798      	blx	r3
90013e1a:	4605      	mov	r5, r0
90013e1c:	b1c8      	cbz	r0, 90013e52 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013e1e:	7b43      	ldrb	r3, [r0, #13]
90013e20:	7a82      	ldrb	r2, [r0, #10]
90013e22:	005b      	lsls	r3, r3, #1
90013e24:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013e28:	4313      	orrs	r3, r2
90013e2a:	8423      	strh	r3, [r4, #32]
90013e2c:	7a63      	ldrb	r3, [r4, #9]
90013e2e:	2b06      	cmp	r3, #6
90013e30:	d10f      	bne.n	90013e52 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013e32:	68e0      	ldr	r0, [r4, #12]
90013e34:	462a      	mov	r2, r5
90013e36:	4631      	mov	r1, r6
90013e38:	6803      	ldr	r3, [r0, #0]
90013e3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013e3c:	4798      	blx	r3
90013e3e:	7b6b      	ldrb	r3, [r5, #13]
90013e40:	005b      	lsls	r3, r3, #1
90013e42:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013e46:	7aab      	ldrb	r3, [r5, #10]
90013e48:	4313      	orrs	r3, r2
90013e4a:	4418      	add	r0, r3
90013e4c:	8c23      	ldrh	r3, [r4, #32]
90013e4e:	4418      	add	r0, r3
90013e50:	8420      	strh	r0, [r4, #32]
90013e52:	4620      	mov	r0, r4
90013e54:	bd70      	pop	{r4, r5, r6, pc}

90013e56 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90013e56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013e5a:	2400      	movs	r4, #0
90013e5c:	b085      	sub	sp, #20
90013e5e:	4681      	mov	r9, r0
90013e60:	4688      	mov	r8, r1
90013e62:	4692      	mov	sl, r2
90013e64:	469b      	mov	fp, r3
90013e66:	4627      	mov	r7, r4
90013e68:	4625      	mov	r5, r4
90013e6a:	4626      	mov	r6, r4
90013e6c:	4554      	cmp	r4, sl
90013e6e:	da2a      	bge.n	90013ec6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013e70:	2300      	movs	r3, #0
90013e72:	9303      	str	r3, [sp, #12]
90013e74:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013e78:	429d      	cmp	r5, r3
90013e7a:	d004      	beq.n	90013e86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90013e7c:	f242 030b 	movw	r3, #8203	; 0x200b
90013e80:	429d      	cmp	r5, r3
90013e82:	bf18      	it	ne
90013e84:	462f      	movne	r7, r5
90013e86:	ab03      	add	r3, sp, #12
90013e88:	4642      	mov	r2, r8
90013e8a:	4659      	mov	r1, fp
90013e8c:	4648      	mov	r0, r9
90013e8e:	f003 f89f 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90013e92:	4605      	mov	r5, r0
90013e94:	b1b8      	cbz	r0, 90013ec6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013e96:	280a      	cmp	r0, #10
90013e98:	d015      	beq.n	90013ec6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013e9a:	9a03      	ldr	r2, [sp, #12]
90013e9c:	b18a      	cbz	r2, 90013ec2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
90013e9e:	7b50      	ldrb	r0, [r2, #13]
90013ea0:	4639      	mov	r1, r7
90013ea2:	7a93      	ldrb	r3, [r2, #10]
90013ea4:	0040      	lsls	r0, r0, #1
90013ea6:	8895      	ldrh	r5, [r2, #4]
90013ea8:	f400 7080 	and.w	r0, r0, #256	; 0x100
90013eac:	4303      	orrs	r3, r0
90013eae:	4640      	mov	r0, r8
90013eb0:	9301      	str	r3, [sp, #4]
90013eb2:	f8d8 3000 	ldr.w	r3, [r8]
90013eb6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013eb8:	4798      	blx	r3
90013eba:	9b01      	ldr	r3, [sp, #4]
90013ebc:	4418      	add	r0, r3
90013ebe:	4406      	add	r6, r0
90013ec0:	b2b6      	uxth	r6, r6
90013ec2:	3401      	adds	r4, #1
90013ec4:	e7d2      	b.n	90013e6c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90013ec6:	4630      	mov	r0, r6
90013ec8:	b005      	add	sp, #20
90013eca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90013ece <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
90013ece:	2a02      	cmp	r2, #2
90013ed0:	b530      	push	{r4, r5, lr}
90013ed2:	d011      	beq.n	90013ef8 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90013ed4:	2a03      	cmp	r2, #3
90013ed6:	d01c      	beq.n	90013f12 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90013ed8:	2a01      	cmp	r2, #1
90013eda:	d10c      	bne.n	90013ef6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90013edc:	888b      	ldrh	r3, [r1, #4]
90013ede:	8801      	ldrh	r1, [r0, #0]
90013ee0:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90013ee4:	1a5b      	subs	r3, r3, r1
90013ee6:	8844      	ldrh	r4, [r0, #2]
90013ee8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90013eec:	1a9b      	subs	r3, r3, r2
90013eee:	8004      	strh	r4, [r0, #0]
90013ef0:	8081      	strh	r1, [r0, #4]
90013ef2:	8043      	strh	r3, [r0, #2]
90013ef4:	80c2      	strh	r2, [r0, #6]
90013ef6:	bd30      	pop	{r4, r5, pc}
90013ef8:	88cb      	ldrh	r3, [r1, #6]
90013efa:	8842      	ldrh	r2, [r0, #2]
90013efc:	1a9b      	subs	r3, r3, r2
90013efe:	88c2      	ldrh	r2, [r0, #6]
90013f00:	1a9b      	subs	r3, r3, r2
90013f02:	888a      	ldrh	r2, [r1, #4]
90013f04:	8801      	ldrh	r1, [r0, #0]
90013f06:	8043      	strh	r3, [r0, #2]
90013f08:	1a52      	subs	r2, r2, r1
90013f0a:	8881      	ldrh	r1, [r0, #4]
90013f0c:	1a52      	subs	r2, r2, r1
90013f0e:	8002      	strh	r2, [r0, #0]
90013f10:	e7f1      	b.n	90013ef6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90013f12:	88cb      	ldrh	r3, [r1, #6]
90013f14:	8841      	ldrh	r1, [r0, #2]
90013f16:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90013f1a:	1a5b      	subs	r3, r3, r1
90013f1c:	f9b0 5000 	ldrsh.w	r5, [r0]
90013f20:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90013f24:	1a9b      	subs	r3, r3, r2
90013f26:	8045      	strh	r5, [r0, #2]
90013f28:	8082      	strh	r2, [r0, #4]
90013f2a:	8003      	strh	r3, [r0, #0]
90013f2c:	80c4      	strh	r4, [r0, #6]
90013f2e:	e7e2      	b.n	90013ef6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

90013f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
90013f30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013f34:	b09f      	sub	sp, #124	; 0x7c
90013f36:	920f      	str	r2, [sp, #60]	; 0x3c
90013f38:	9312      	str	r3, [sp, #72]	; 0x48
90013f3a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90013f3c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90013f3e:	8812      	ldrh	r2, [r2, #0]
90013f40:	889b      	ldrh	r3, [r3, #4]
90013f42:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
90013f44:	4413      	add	r3, r2
90013f46:	900e      	str	r0, [sp, #56]	; 0x38
90013f48:	6828      	ldr	r0, [r5, #0]
90013f4a:	b21b      	sxth	r3, r3
90013f4c:	9117      	str	r1, [sp, #92]	; 0x5c
90013f4e:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
90013f52:	9311      	str	r3, [sp, #68]	; 0x44
90013f54:	6803      	ldr	r3, [r0, #0]
90013f56:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
90013f5a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90013f5c:	4798      	blx	r3
90013f5e:	682b      	ldr	r3, [r5, #0]
90013f60:	9013      	str	r0, [sp, #76]	; 0x4c
90013f62:	7b1a      	ldrb	r2, [r3, #12]
90013f64:	7adb      	ldrb	r3, [r3, #11]
90013f66:	9215      	str	r2, [sp, #84]	; 0x54
90013f68:	9316      	str	r3, [sp, #88]	; 0x58
90013f6a:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
90013f6e:	2c00      	cmp	r4, #0
90013f70:	d067      	beq.n	90014042 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
90013f72:	7c2b      	ldrb	r3, [r5, #16]
90013f74:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
90013f76:	2b06      	cmp	r3, #6
90013f78:	bf14      	ite	ne
90013f7a:	2301      	movne	r3, #1
90013f7c:	2302      	moveq	r3, #2
90013f7e:	4413      	add	r3, r2
90013f80:	f04f 0900 	mov.w	r9, #0
90013f84:	9310      	str	r3, [sp, #64]	; 0x40
90013f86:	464c      	mov	r4, r9
90013f88:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
90013f8c:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
90013f90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013f92:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013f94:	4293      	cmp	r3, r2
90013f96:	f280 808b 	bge.w	900140b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90013f9a:	2300      	movs	r3, #0
90013f9c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90013fa0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90013fa4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013fa8:	429c      	cmp	r4, r3
90013faa:	d006      	beq.n	90013fba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
90013fac:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013fae:	f242 020b 	movw	r2, #8203	; 0x200b
90013fb2:	4294      	cmp	r4, r2
90013fb4:	bf18      	it	ne
90013fb6:	4623      	movne	r3, r4
90013fb8:	930c      	str	r3, [sp, #48]	; 0x30
90013fba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013fbc:	992d      	ldr	r1, [sp, #180]	; 0xb4
90013fbe:	682a      	ldr	r2, [r5, #0]
90013fc0:	428b      	cmp	r3, r1
90013fc2:	db40      	blt.n	90014046 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90013fc4:	6813      	ldr	r3, [r2, #0]
90013fc6:	4610      	mov	r0, r2
90013fc8:	695b      	ldr	r3, [r3, #20]
90013fca:	4798      	blx	r3
90013fcc:	4604      	mov	r4, r0
90013fce:	6828      	ldr	r0, [r5, #0]
90013fd0:	aa1d      	add	r2, sp, #116	; 0x74
90013fd2:	4621      	mov	r1, r4
90013fd4:	6803      	ldr	r3, [r0, #0]
90013fd6:	689f      	ldr	r7, [r3, #8]
90013fd8:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
90013fdc:	47b8      	blx	r7
90013fde:	901c      	str	r0, [sp, #112]	; 0x70
90013fe0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013fe4:	429c      	cmp	r4, r3
90013fe6:	f000 80eb 	beq.w	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013fea:	f242 030b 	movw	r3, #8203	; 0x200b
90013fee:	429c      	cmp	r4, r3
90013ff0:	f000 80e6 	beq.w	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90013ff4:	2c00      	cmp	r4, #0
90013ff6:	f000 810d 	beq.w	90014214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90013ffa:	2c0a      	cmp	r4, #10
90013ffc:	d05e      	beq.n	900140bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90013ffe:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014000:	b36a      	cbz	r2, 9001405e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90014002:	8894      	ldrh	r4, [r2, #4]
90014004:	f1bb 0f00 	cmp.w	fp, #0
90014008:	d03a      	beq.n	90014080 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
9001400a:	f892 900d 	ldrb.w	r9, [r2, #13]
9001400e:	f1bb 0f01 	cmp.w	fp, #1
90014012:	ea4f 0949 	mov.w	r9, r9, lsl #1
90014016:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001401a:	f892 900a 	ldrb.w	r9, [r2, #10]
9001401e:	ea49 0903 	orr.w	r9, r9, r3
90014022:	d133      	bne.n	9001408c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90014024:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014026:	eba6 0609 	sub.w	r6, r6, r9
9001402a:	2b00      	cmp	r3, #0
9001402c:	d14d      	bne.n	900140ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001402e:	9a15      	ldr	r2, [sp, #84]	; 0x54
90014030:	eb09 0306 	add.w	r3, r9, r6
90014034:	4413      	add	r3, r2
90014036:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90014038:	f9b2 2000 	ldrsh.w	r2, [r2]
9001403c:	4293      	cmp	r3, r2
9001403e:	da4e      	bge.n	900140de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014040:	e036      	b.n	900140b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
90014042:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
90014044:	e79c      	b.n	90013f80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90014046:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001404a:	4659      	mov	r1, fp
9001404c:	982c      	ldr	r0, [sp, #176]	; 0xb0
9001404e:	9301      	str	r3, [sp, #4]
90014050:	ab1d      	add	r3, sp, #116	; 0x74
90014052:	9300      	str	r3, [sp, #0]
90014054:	ab1c      	add	r3, sp, #112	; 0x70
90014056:	f003 f804 	bl	90017062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
9001405a:	4604      	mov	r4, r0
9001405c:	e7c0      	b.n	90013fe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001405e:	6828      	ldr	r0, [r5, #0]
90014060:	6803      	ldr	r3, [r0, #0]
90014062:	691b      	ldr	r3, [r3, #16]
90014064:	4798      	blx	r3
90014066:	f64f 63ff 	movw	r3, #65279	; 0xfeff
9001406a:	4298      	cmp	r0, r3
9001406c:	f000 80a8 	beq.w	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014070:	f242 030b 	movw	r3, #8203	; 0x200b
90014074:	4298      	cmp	r0, r3
90014076:	f000 80a3 	beq.w	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001407a:	f1bb 0f00 	cmp.w	fp, #0
9001407e:	d100      	bne.n	90014082 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
90014080:	444e      	add	r6, r9
90014082:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014084:	2a00      	cmp	r2, #0
90014086:	d1c0      	bne.n	9001400a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
90014088:	4691      	mov	r9, r2
9001408a:	e099      	b.n	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001408c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001408e:	2b00      	cmp	r3, #0
90014090:	f000 80c2 	beq.w	90014218 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90014094:	f1bb 0f00 	cmp.w	fp, #0
90014098:	d117      	bne.n	900140ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001409a:	6828      	ldr	r0, [r5, #0]
9001409c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001409e:	6803      	ldr	r3, [r0, #0]
900140a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900140a2:	4798      	blx	r3
900140a4:	4406      	add	r6, r0
900140a6:	9b16      	ldr	r3, [sp, #88]	; 0x58
900140a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
900140aa:	1af3      	subs	r3, r6, r3
900140ac:	4293      	cmp	r3, r2
900140ae:	dd16      	ble.n	900140de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900140b0:	2c00      	cmp	r4, #0
900140b2:	f000 80af 	beq.w	90014214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900140b6:	2c0a      	cmp	r4, #10
900140b8:	f040 809d 	bne.w	900141f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900140bc:	240a      	movs	r4, #10
900140be:	fab4 f084 	clz	r0, r4
900140c2:	0940      	lsrs	r0, r0, #5
900140c4:	b01f      	add	sp, #124	; 0x7c
900140c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900140ca:	6828      	ldr	r0, [r5, #0]
900140cc:	990c      	ldr	r1, [sp, #48]	; 0x30
900140ce:	6803      	ldr	r3, [r0, #0]
900140d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900140d2:	4798      	blx	r3
900140d4:	f1bb 0f01 	cmp.w	fp, #1
900140d8:	eba6 0600 	sub.w	r6, r6, r0
900140dc:	d0a7      	beq.n	9001402e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
900140de:	981c      	ldr	r0, [sp, #112]	; 0x70
900140e0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900140e2:	f990 1009 	ldrsb.w	r1, [r0, #9]
900140e6:	f9b3 8000 	ldrsh.w	r8, [r3]
900140ea:	7b43      	ldrb	r3, [r0, #13]
900140ec:	4431      	add	r1, r6
900140ee:	015b      	lsls	r3, r3, #5
900140f0:	f403 7280 	and.w	r2, r3, #256	; 0x100
900140f4:	7983      	ldrb	r3, [r0, #6]
900140f6:	4313      	orrs	r3, r2
900140f8:	440b      	add	r3, r1
900140fa:	4543      	cmp	r3, r8
900140fc:	db60      	blt.n	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900140fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
90014100:	4299      	cmp	r1, r3
90014102:	da5d      	bge.n	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014104:	6828      	ldr	r0, [r5, #0]
90014106:	45b0      	cmp	r8, r6
90014108:	6803      	ldr	r3, [r0, #0]
9001410a:	bfcc      	ite	gt
9001410c:	eba8 0806 	subgt.w	r8, r8, r6
90014110:	f04f 0800 	movle.w	r8, #0
90014114:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014116:	bfc8      	it	gt
90014118:	fa1f f888 	uxthgt.w	r8, r8
9001411c:	4798      	blx	r3
9001411e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014120:	7b53      	ldrb	r3, [r2, #13]
90014122:	00d9      	lsls	r1, r3, #3
90014124:	f401 7780 	and.w	r7, r1, #256	; 0x100
90014128:	7a11      	ldrb	r1, [r2, #8]
9001412a:	4339      	orrs	r1, r7
9001412c:	065f      	lsls	r7, r3, #25
9001412e:	9f12      	ldr	r7, [sp, #72]	; 0x48
90014130:	bf48      	it	mi
90014132:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
90014136:	4407      	add	r7, r0
90014138:	bf48      	it	mi
9001413a:	b209      	sxthmi	r1, r1
9001413c:	1a7f      	subs	r7, r7, r1
9001413e:	9929      	ldr	r1, [sp, #164]	; 0xa4
90014140:	b2bf      	uxth	r7, r7
90014142:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90014146:	fa0f fa87 	sxth.w	sl, r7
9001414a:	4551      	cmp	r1, sl
9001414c:	dd3c      	ble.n	900141c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001414e:	011b      	lsls	r3, r3, #4
90014150:	79d0      	ldrb	r0, [r2, #7]
90014152:	f403 7380 	and.w	r3, r3, #256	; 0x100
90014156:	4303      	orrs	r3, r0
90014158:	449a      	add	sl, r3
9001415a:	4551      	cmp	r1, sl
9001415c:	dc30      	bgt.n	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001415e:	1bcf      	subs	r7, r1, r7
90014160:	468a      	mov	sl, r1
90014162:	b23f      	sxth	r7, r7
90014164:	9219      	str	r2, [sp, #100]	; 0x64
90014166:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90014168:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9001416a:	6828      	ldr	r0, [r5, #0]
9001416c:	2a00      	cmp	r2, #0
9001416e:	d12d      	bne.n	900141cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
90014170:	9318      	str	r3, [sp, #96]	; 0x60
90014172:	b2bf      	uxth	r7, r7
90014174:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90014176:	6819      	ldr	r1, [r3, #0]
90014178:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
9001417a:	6801      	ldr	r1, [r0, #0]
9001417c:	9314      	str	r3, [sp, #80]	; 0x50
9001417e:	6c09      	ldr	r1, [r1, #64]	; 0x40
90014180:	4788      	blx	r1
90014182:	79a9      	ldrb	r1, [r5, #6]
90014184:	9b18      	ldr	r3, [sp, #96]	; 0x60
90014186:	910b      	str	r1, [sp, #44]	; 0x2c
90014188:	7ba9      	ldrb	r1, [r5, #14]
9001418a:	9a19      	ldr	r2, [sp, #100]	; 0x64
9001418c:	910a      	str	r1, [sp, #40]	; 0x28
9001418e:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90014192:	9109      	str	r1, [sp, #36]	; 0x24
90014194:	68a9      	ldr	r1, [r5, #8]
90014196:	9306      	str	r3, [sp, #24]
90014198:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001419a:	9205      	str	r2, [sp, #20]
9001419c:	9304      	str	r3, [sp, #16]
9001419e:	f8cd a004 	str.w	sl, [sp, #4]
900141a2:	e9cd 8702 	strd	r8, r7, [sp, #8]
900141a6:	44b0      	add	r8, r6
900141a8:	9f14      	ldr	r7, [sp, #80]	; 0x50
900141aa:	fa0f f388 	sxth.w	r3, r8
900141ae:	9300      	str	r3, [sp, #0]
900141b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900141b2:	e9cd 0107 	strd	r0, r1, [sp, #28]
900141b6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900141b8:	681a      	ldr	r2, [r3, #0]
900141ba:	980e      	ldr	r0, [sp, #56]	; 0x38
900141bc:	685b      	ldr	r3, [r3, #4]
900141be:	47b8      	blx	r7
900141c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900141c2:	3301      	adds	r3, #1
900141c4:	930d      	str	r3, [sp, #52]	; 0x34
900141c6:	e6e3      	b.n	90013f90 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900141c8:	2700      	movs	r7, #0
900141ca:	e7cb      	b.n	90014164 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900141cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
900141ce:	f8d2 c008 	ldr.w	ip, [r2, #8]
900141d2:	9a12      	ldr	r2, [sp, #72]	; 0x48
900141d4:	f8dc 1000 	ldr.w	r1, [ip]
900141d8:	e9cd 6204 	strd	r6, r2, [sp, #16]
900141dc:	79aa      	ldrb	r2, [r5, #6]
900141de:	9203      	str	r2, [sp, #12]
900141e0:	7baa      	ldrb	r2, [r5, #14]
900141e2:	9202      	str	r2, [sp, #8]
900141e4:	68aa      	ldr	r2, [r5, #8]
900141e6:	e9cd 0200 	strd	r0, r2, [sp]
900141ea:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900141ec:	4660      	mov	r0, ip
900141ee:	688f      	ldr	r7, [r1, #8]
900141f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
900141f2:	47b8      	blx	r7
900141f4:	e7e4      	b.n	900141c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900141f6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900141f8:	3501      	adds	r5, #1
900141fa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900141fc:	429d      	cmp	r5, r3
900141fe:	f6bf af5e 	bge.w	900140be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014202:	4659      	mov	r1, fp
90014204:	982c      	ldr	r0, [sp, #176]	; 0xb0
90014206:	f7f0 f9a9 	bl	9000455c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001420a:	4604      	mov	r4, r0
9001420c:	b110      	cbz	r0, 90014214 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001420e:	280a      	cmp	r0, #10
90014210:	d1f2      	bne.n	900141f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90014212:	e753      	b.n	900140bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014214:	2400      	movs	r4, #0
90014216:	e752      	b.n	900140be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014218:	f1bb 0f00 	cmp.w	fp, #0
9001421c:	f43f af43 	beq.w	900140a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90014220:	e75d      	b.n	900140de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90014222 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90014222:	b530      	push	{r4, r5, lr}
90014224:	8ac4      	ldrh	r4, [r0, #22]
90014226:	8b45      	ldrh	r5, [r0, #26]
90014228:	8343      	strh	r3, [r0, #26]
9001422a:	442c      	add	r4, r5
9001422c:	1ae4      	subs	r4, r4, r3
9001422e:	8b83      	ldrh	r3, [r0, #28]
90014230:	82c4      	strh	r4, [r0, #22]
90014232:	8b04      	ldrh	r4, [r0, #24]
90014234:	4422      	add	r2, r4
90014236:	440c      	add	r4, r1
90014238:	1a59      	subs	r1, r3, r1
9001423a:	83c2      	strh	r2, [r0, #30]
9001423c:	8304      	strh	r4, [r0, #24]
9001423e:	8381      	strh	r1, [r0, #28]
90014240:	bd30      	pop	{r4, r5, pc}

90014242 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
90014242:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014246:	4604      	mov	r4, r0
90014248:	8a47      	ldrh	r7, [r0, #18]
9001424a:	68c0      	ldr	r0, [r0, #12]
9001424c:	b085      	sub	sp, #20
9001424e:	6803      	ldr	r3, [r0, #0]
90014250:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014252:	4798      	blx	r3
90014254:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90014258:	7a63      	ldrb	r3, [r4, #9]
9001425a:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001425e:	3b01      	subs	r3, #1
90014260:	42b7      	cmp	r7, r6
90014262:	bfac      	ite	ge
90014264:	f04f 0900 	movge.w	r9, #0
90014268:	f04f 0901 	movlt.w	r9, #1
9001426c:	2b05      	cmp	r3, #5
9001426e:	d804      	bhi.n	9001427a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
90014270:	e8df f003 	tbb	[pc, r3]
90014274:	470f0854 	.word	0x470f0854
90014278:	4c4c      	.short	0x4c4c
9001427a:	2500      	movs	r5, #0
9001427c:	46a9      	mov	r9, r5
9001427e:	462e      	mov	r6, r5
90014280:	462f      	mov	r7, r5
90014282:	e00e      	b.n	900142a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90014284:	42b7      	cmp	r7, r6
90014286:	f04f 0500 	mov.w	r5, #0
9001428a:	bfb4      	ite	lt
9001428c:	2600      	movlt	r6, #0
9001428e:	2601      	movge	r6, #1
90014290:	e7f6      	b.n	90014280 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014292:	42b7      	cmp	r7, r6
90014294:	464d      	mov	r5, r9
90014296:	f04f 0900 	mov.w	r9, #0
9001429a:	bfb4      	ite	lt
9001429c:	2600      	movlt	r6, #0
9001429e:	2601      	movge	r6, #1
900142a0:	464f      	mov	r7, r9
900142a2:	f04f 0800 	mov.w	r8, #0
900142a6:	f8a4 8016 	strh.w	r8, [r4, #22]
900142aa:	f8a4 8018 	strh.w	r8, [r4, #24]
900142ae:	f8cd 8004 	str.w	r8, [sp, #4]
900142b2:	2300      	movs	r3, #0
900142b4:	9303      	str	r3, [sp, #12]
900142b6:	8823      	ldrh	r3, [r4, #0]
900142b8:	2b20      	cmp	r3, #32
900142ba:	d033      	beq.n	90014324 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900142bc:	f242 010b 	movw	r1, #8203	; 0x200b
900142c0:	1a5a      	subs	r2, r3, r1
900142c2:	f1d2 0a00 	rsbs	sl, r2, #0
900142c6:	eb4a 0a02 	adc.w	sl, sl, r2
900142ca:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900142ce:	4293      	cmp	r3, r2
900142d0:	d008      	beq.n	900142e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900142d2:	428b      	cmp	r3, r1
900142d4:	9a01      	ldr	r2, [sp, #4]
900142d6:	bf0e      	itee	eq
900142d8:	f04f 0a01 	moveq.w	sl, #1
900142dc:	461a      	movne	r2, r3
900142de:	f04f 0a00 	movne.w	sl, #0
900142e2:	9201      	str	r2, [sp, #4]
900142e4:	ab03      	add	r3, sp, #12
900142e6:	68e2      	ldr	r2, [r4, #12]
900142e8:	7a21      	ldrb	r1, [r4, #8]
900142ea:	6860      	ldr	r0, [r4, #4]
900142ec:	f002 fe70 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900142f0:	8020      	strh	r0, [r4, #0]
900142f2:	b9d8      	cbnz	r0, 9001432c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
900142f4:	8ba2      	ldrh	r2, [r4, #28]
900142f6:	2300      	movs	r3, #0
900142f8:	4611      	mov	r1, r2
900142fa:	4620      	mov	r0, r4
900142fc:	f7ff ff91 	bl	90014222 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014300:	e06e      	b.n	900143e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014302:	2500      	movs	r5, #0
90014304:	2701      	movs	r7, #1
90014306:	46a9      	mov	r9, r5
90014308:	462e      	mov	r6, r5
9001430a:	e7ca      	b.n	900142a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001430c:	42b7      	cmp	r7, r6
9001430e:	f04f 0500 	mov.w	r5, #0
90014312:	bfb4      	ite	lt
90014314:	2700      	movlt	r7, #0
90014316:	2701      	movge	r7, #1
90014318:	462e      	mov	r6, r5
9001431a:	e7c2      	b.n	900142a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001431c:	2500      	movs	r5, #0
9001431e:	2601      	movs	r6, #1
90014320:	46a9      	mov	r9, r5
90014322:	e7ad      	b.n	90014280 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014324:	9301      	str	r3, [sp, #4]
90014326:	f04f 0a01 	mov.w	sl, #1
9001432a:	e7db      	b.n	900142e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001432c:	8b63      	ldrh	r3, [r4, #26]
9001432e:	280a      	cmp	r0, #10
90014330:	f103 0301 	add.w	r3, r3, #1
90014334:	8363      	strh	r3, [r4, #26]
90014336:	d0dd      	beq.n	900142f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90014338:	9a03      	ldr	r2, [sp, #12]
9001433a:	bb62      	cbnz	r2, 90014396 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
9001433c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014340:	4298      	cmp	r0, r3
90014342:	d003      	beq.n	9001434c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014344:	f242 030b 	movw	r3, #8203	; 0x200b
90014348:	4298      	cmp	r0, r3
9001434a:	d1b2      	bne.n	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001434c:	8823      	ldrh	r3, [r4, #0]
9001434e:	8ba1      	ldrh	r1, [r4, #28]
90014350:	2b20      	cmp	r3, #32
90014352:	d003      	beq.n	9001435c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90014354:	f242 000b 	movw	r0, #8203	; 0x200b
90014358:	4283      	cmp	r3, r0
9001435a:	d131      	bne.n	900143c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
9001435c:	f1ba 0f00 	cmp.w	sl, #0
90014360:	bf0a      	itet	eq
90014362:	4688      	moveq	r8, r1
90014364:	4650      	movne	r0, sl
90014366:	2001      	moveq	r0, #1
90014368:	440a      	add	r2, r1
9001436a:	8b23      	ldrh	r3, [r4, #24]
9001436c:	f8b4 c010 	ldrh.w	ip, [r4, #16]
90014370:	b292      	uxth	r2, r2
90014372:	83a2      	strh	r2, [r4, #28]
90014374:	4413      	add	r3, r2
90014376:	f1b9 0f00 	cmp.w	r9, #0
9001437a:	d102      	bne.n	90014382 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
9001437c:	2d00      	cmp	r5, #0
9001437e:	d042      	beq.n	90014406 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
90014380:	b300      	cbz	r0, 900143c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
90014382:	8c21      	ldrh	r1, [r4, #32]
90014384:	4419      	add	r1, r3
90014386:	458c      	cmp	ip, r1
90014388:	da37      	bge.n	900143fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
9001438a:	8ae1      	ldrh	r1, [r4, #22]
9001438c:	2900      	cmp	r1, #0
9001438e:	d034      	beq.n	900143fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014390:	4563      	cmp	r3, ip
90014392:	dd8e      	ble.n	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014394:	e01d      	b.n	900143d2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90014396:	8893      	ldrh	r3, [r2, #4]
90014398:	9901      	ldr	r1, [sp, #4]
9001439a:	8023      	strh	r3, [r4, #0]
9001439c:	f892 b00d 	ldrb.w	fp, [r2, #13]
900143a0:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900143a4:	f40b 7080 	and.w	r0, fp, #256	; 0x100
900143a8:	f892 b00a 	ldrb.w	fp, [r2, #10]
900143ac:	ea4b 0b00 	orr.w	fp, fp, r0
900143b0:	68e0      	ldr	r0, [r4, #12]
900143b2:	6803      	ldr	r3, [r0, #0]
900143b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900143b6:	4798      	blx	r3
900143b8:	eb0b 0200 	add.w	r2, fp, r0
900143bc:	b292      	uxth	r2, r2
900143be:	e7c5      	b.n	9001434c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900143c0:	2000      	movs	r0, #0
900143c2:	e7d1      	b.n	90014368 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900143c4:	4563      	cmp	r3, ip
900143c6:	f77f af74 	ble.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900143ca:	8ae3      	ldrh	r3, [r4, #22]
900143cc:	2b00      	cmp	r3, #0
900143ce:	f43f af70 	beq.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900143d2:	2301      	movs	r3, #1
900143d4:	8c22      	ldrh	r2, [r4, #32]
900143d6:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
900143da:	8be3      	ldrh	r3, [r4, #30]
900143dc:	4413      	add	r3, r2
900143de:	83e3      	strh	r3, [r4, #30]
900143e0:	68e0      	ldr	r0, [r4, #12]
900143e2:	6803      	ldr	r3, [r0, #0]
900143e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900143e6:	4798      	blx	r3
900143e8:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
900143ec:	4418      	add	r0, r3
900143ee:	8a63      	ldrh	r3, [r4, #18]
900143f0:	1a18      	subs	r0, r3, r0
900143f2:	8260      	strh	r0, [r4, #18]
900143f4:	b005      	add	sp, #20
900143f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900143fa:	2300      	movs	r3, #0
900143fc:	4611      	mov	r1, r2
900143fe:	4620      	mov	r0, r4
90014400:	f7ff ff0f 	bl	90014222 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014404:	e755      	b.n	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014406:	4563      	cmp	r3, ip
90014408:	dd14      	ble.n	90014434 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001440a:	b117      	cbz	r7, 90014412 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001440c:	2301      	movs	r3, #1
9001440e:	460a      	mov	r2, r1
90014410:	e772      	b.n	900142f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90014412:	2e00      	cmp	r6, #0
90014414:	f43f af4d 	beq.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014418:	2800      	cmp	r0, #0
9001441a:	f47f af4a 	bne.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001441e:	f1ba 0f00 	cmp.w	sl, #0
90014422:	d002      	beq.n	9001442a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90014424:	2301      	movs	r3, #1
90014426:	4642      	mov	r2, r8
90014428:	e767      	b.n	900142fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001442a:	8ae3      	ldrh	r3, [r4, #22]
9001442c:	2b00      	cmp	r3, #0
9001442e:	f43f af40 	beq.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014432:	e7d5      	b.n	900143e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014434:	2800      	cmp	r0, #0
90014436:	f47f af3c 	bne.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001443a:	f1ba 0f00 	cmp.w	sl, #0
9001443e:	f43f af38 	beq.w	900142b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014442:	2301      	movs	r3, #1
90014444:	4642      	mov	r2, r8
90014446:	e7da      	b.n	900143fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90014448 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90014448:	b5f0      	push	{r4, r5, r6, r7, lr}
9001444a:	4605      	mov	r5, r0
9001444c:	b08f      	sub	sp, #60	; 0x3c
9001444e:	4617      	mov	r7, r2
90014450:	461c      	mov	r4, r3
90014452:	460e      	mov	r6, r1
90014454:	b1d1      	cbz	r1, 9001448c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90014456:	681b      	ldr	r3, [r3, #0]
90014458:	4620      	mov	r0, r4
9001445a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001445c:	4798      	blx	r3
9001445e:	4240      	negs	r0, r0
90014460:	9603      	str	r6, [sp, #12]
90014462:	f64f 73ff 	movw	r3, #65535	; 0xffff
90014466:	b200      	sxth	r0, r0
90014468:	9700      	str	r7, [sp, #0]
9001446a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
9001446e:	4629      	mov	r1, r5
90014470:	e9cd 4001 	strd	r4, r0, [sp, #4]
90014474:	2401      	movs	r4, #1
90014476:	a805      	add	r0, sp, #20
90014478:	f7ff fcaa 	bl	90013dd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
9001447c:	a805      	add	r0, sp, #20
9001447e:	f7ff fee0 	bl	90014242 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014482:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90014486:	b163      	cbz	r3, 900144a2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
90014488:	3401      	adds	r4, #1
9001448a:	e7f7      	b.n	9001447c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
9001448c:	2401      	movs	r4, #1
9001448e:	f002 fe6b 	bl	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014492:	280a      	cmp	r0, #10
90014494:	4628      	mov	r0, r5
90014496:	bf08      	it	eq
90014498:	3401      	addeq	r4, #1
9001449a:	f002 fe65 	bl	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001449e:	2800      	cmp	r0, #0
900144a0:	d1f7      	bne.n	90014492 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900144a2:	b2a0      	uxth	r0, r4
900144a4:	b00f      	add	sp, #60	; 0x3c
900144a6:	bdf0      	pop	{r4, r5, r6, r7, pc}

900144a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900144a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900144ac:	b0e3      	sub	sp, #396	; 0x18c
900144ae:	461c      	mov	r4, r3
900144b0:	4683      	mov	fp, r0
900144b2:	4688      	mov	r8, r1
900144b4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
900144b6:	2b00      	cmp	r3, #0
900144b8:	f000 8112 	beq.w	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144bc:	6823      	ldr	r3, [r4, #0]
900144be:	2b00      	cmp	r3, #0
900144c0:	f000 810e 	beq.w	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144c4:	7ba3      	ldrb	r3, [r4, #14]
900144c6:	2b00      	cmp	r3, #0
900144c8:	f000 810a 	beq.w	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900144cc:	ad0a      	add	r5, sp, #40	; 0x28
900144ce:	6810      	ldr	r0, [r2, #0]
900144d0:	6851      	ldr	r1, [r2, #4]
900144d2:	462b      	mov	r3, r5
900144d4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
900144d8:	c303      	stmia	r3!, {r0, r1}
900144da:	2100      	movs	r1, #0
900144dc:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
900144e0:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900144e4:	4628      	mov	r0, r5
900144e6:	910c      	str	r1, [sp, #48]	; 0x30
900144e8:	a90c      	add	r1, sp, #48	; 0x30
900144ea:	79a2      	ldrb	r2, [r4, #6]
900144ec:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900144f0:	f7ff fced 	bl	90013ece <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900144f4:	a90c      	add	r1, sp, #48	; 0x30
900144f6:	79a2      	ldrb	r2, [r4, #6]
900144f8:	4608      	mov	r0, r1
900144fa:	f7ff fce8 	bl	90013ece <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
900144fe:	a817      	add	r0, sp, #92	; 0x5c
90014500:	f002 fa05 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90014504:	6820      	ldr	r0, [r4, #0]
90014506:	6803      	ldr	r3, [r0, #0]
90014508:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001450a:	4798      	blx	r3
9001450c:	4606      	mov	r6, r0
9001450e:	6820      	ldr	r0, [r4, #0]
90014510:	6803      	ldr	r3, [r0, #0]
90014512:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014514:	4798      	blx	r3
90014516:	4633      	mov	r3, r6
90014518:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001451a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001451c:	9000      	str	r0, [sp, #0]
9001451e:	a817      	add	r0, sp, #92	; 0x5c
90014520:	f002 fa50 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014524:	6820      	ldr	r0, [r4, #0]
90014526:	f894 a004 	ldrb.w	sl, [r4, #4]
9001452a:	6803      	ldr	r3, [r0, #0]
9001452c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001452e:	4798      	blx	r3
90014530:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90014534:	6823      	ldr	r3, [r4, #0]
90014536:	4607      	mov	r7, r0
90014538:	4406      	add	r6, r0
9001453a:	a830      	add	r0, sp, #192	; 0xc0
9001453c:	f893 9009 	ldrb.w	r9, [r3, #9]
90014540:	f002 f9e5 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90014544:	7c23      	ldrb	r3, [r4, #16]
90014546:	b17b      	cbz	r3, 90014568 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90014548:	6820      	ldr	r0, [r4, #0]
9001454a:	6803      	ldr	r3, [r0, #0]
9001454c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001454e:	4798      	blx	r3
90014550:	9009      	str	r0, [sp, #36]	; 0x24
90014552:	6820      	ldr	r0, [r4, #0]
90014554:	6802      	ldr	r2, [r0, #0]
90014556:	6d12      	ldr	r2, [r2, #80]	; 0x50
90014558:	4790      	blx	r2
9001455a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001455c:	9000      	str	r0, [sp, #0]
9001455e:	a830      	add	r0, sp, #192	; 0xc0
90014560:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
90014562:	996c      	ldr	r1, [sp, #432]	; 0x1b0
90014564:	f002 fa2e 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014568:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001456c:	a80e      	add	r0, sp, #56	; 0x38
9001456e:	7be2      	ldrb	r2, [r4, #15]
90014570:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90014574:	1a8a      	subs	r2, r1, r2
90014576:	7c21      	ldrb	r1, [r4, #16]
90014578:	9103      	str	r1, [sp, #12]
9001457a:	b292      	uxth	r2, r2
9001457c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90014580:	9102      	str	r1, [sp, #8]
90014582:	6821      	ldr	r1, [r4, #0]
90014584:	9101      	str	r1, [sp, #4]
90014586:	7961      	ldrb	r1, [r4, #5]
90014588:	9100      	str	r1, [sp, #0]
9001458a:	a930      	add	r1, sp, #192	; 0xc0
9001458c:	f7ff fc20 	bl	90013dd0 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014590:	2e00      	cmp	r6, #0
90014592:	dc5b      	bgt.n	9001464c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90014594:	af17      	add	r7, sp, #92	; 0x5c
90014596:	f04f 0900 	mov.w	r9, #0
9001459a:	7c23      	ldrb	r3, [r4, #16]
9001459c:	2b00      	cmp	r3, #0
9001459e:	f000 80b1 	beq.w	90014704 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900145a2:	a80e      	add	r0, sp, #56	; 0x38
900145a4:	f7ff fe4d 	bl	90014242 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900145a8:	f1ba 0f00 	cmp.w	sl, #0
900145ac:	f000 80a5 	beq.w	900146fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900145b0:	7c23      	ldrb	r3, [r4, #16]
900145b2:	2264      	movs	r2, #100	; 0x64
900145b4:	4639      	mov	r1, r7
900145b6:	a849      	add	r0, sp, #292	; 0x124
900145b8:	9309      	str	r3, [sp, #36]	; 0x24
900145ba:	f012 f92a 	bl	90026812 <memcpy>
900145be:	9b09      	ldr	r3, [sp, #36]	; 0x24
900145c0:	2b00      	cmp	r3, #0
900145c2:	f000 80a7 	beq.w	90014714 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900145c6:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
900145ca:	7922      	ldrb	r2, [r4, #4]
900145cc:	2a01      	cmp	r2, #1
900145ce:	f040 808a 	bne.w	900146e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900145d2:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
900145d6:	1ac0      	subs	r0, r0, r3
900145d8:	2302      	movs	r3, #2
900145da:	fb90 f0f3 	sdiv	r0, r0, r3
900145de:	b200      	sxth	r0, r0
900145e0:	7c23      	ldrb	r3, [r4, #16]
900145e2:	2b00      	cmp	r3, #0
900145e4:	f000 808b 	beq.w	900146fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
900145e8:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
900145ec:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
900145f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900145f4:	e9cd 2105 	strd	r2, r1, [sp, #20]
900145f8:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
900145fc:	2100      	movs	r1, #0
900145fe:	4410      	add	r0, r2
90014600:	4642      	mov	r2, r8
90014602:	b200      	sxth	r0, r0
90014604:	e9cd 9703 	strd	r9, r7, [sp, #12]
90014608:	9000      	str	r0, [sp, #0]
9001460a:	4658      	mov	r0, fp
9001460c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90014610:	f7ff fc8e 	bl	90013f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90014614:	2800      	cmp	r0, #0
90014616:	d163      	bne.n	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014618:	b2b2      	uxth	r2, r6
9001461a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001461e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90014622:	4413      	add	r3, r2
90014624:	1a8a      	subs	r2, r1, r2
90014626:	b21b      	sxth	r3, r3
90014628:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001462c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
90014630:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90014634:	2a00      	cmp	r2, #0
90014636:	d153      	bne.n	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014638:	6822      	ldr	r2, [r4, #0]
9001463a:	8869      	ldrh	r1, [r5, #2]
9001463c:	7a12      	ldrb	r2, [r2, #8]
9001463e:	1a9b      	subs	r3, r3, r2
90014640:	88ea      	ldrh	r2, [r5, #6]
90014642:	440a      	add	r2, r1
90014644:	b212      	sxth	r2, r2
90014646:	4293      	cmp	r3, r2
90014648:	dda7      	ble.n	9001459a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
9001464a:	e049      	b.n	900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001464c:	7c23      	ldrb	r3, [r4, #16]
9001464e:	444f      	add	r7, r9
90014650:	b1c3      	cbz	r3, 90014684 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90014652:	f64f 79ff 	movw	r9, #65535	; 0xffff
90014656:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001465a:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
9001465e:	443b      	add	r3, r7
90014660:	4293      	cmp	r3, r2
90014662:	da97      	bge.n	90014594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014664:	a80e      	add	r0, sp, #56	; 0x38
90014666:	f7ff fdec 	bl	90014242 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
9001466a:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
9001466e:	3b01      	subs	r3, #1
90014670:	b29b      	uxth	r3, r3
90014672:	454b      	cmp	r3, r9
90014674:	9309      	str	r3, [sp, #36]	; 0x24
90014676:	d021      	beq.n	900146bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90014678:	7961      	ldrb	r1, [r4, #5]
9001467a:	a817      	add	r0, sp, #92	; 0x5c
9001467c:	f7ef ff6e 	bl	9000455c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90014680:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014682:	e7f4      	b.n	9001466e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90014684:	fa1f f986 	uxth.w	r9, r6
90014688:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001468c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014690:	443b      	add	r3, r7
90014692:	4293      	cmp	r3, r2
90014694:	f6bf af7e 	bge.w	90014594 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014698:	a817      	add	r0, sp, #92	; 0x5c
9001469a:	f002 fd65 	bl	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001469e:	b1f8      	cbz	r0, 900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900146a0:	280a      	cmp	r0, #10
900146a2:	d1f1      	bne.n	90014688 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900146a4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
900146a8:	444b      	add	r3, r9
900146aa:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900146ae:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900146b2:	eba3 0309 	sub.w	r3, r3, r9
900146b6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900146ba:	e7e5      	b.n	90014688 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
900146bc:	b2b3      	uxth	r3, r6
900146be:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
900146c2:	441a      	add	r2, r3
900146c4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900146c8:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
900146cc:	1ad3      	subs	r3, r2, r3
900146ce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900146d2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
900146d6:	b11b      	cbz	r3, 900146e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900146d8:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
900146dc:	2b00      	cmp	r3, #0
900146de:	d0ba      	beq.n	90014656 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
900146e0:	b063      	add	sp, #396	; 0x18c
900146e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900146e6:	2a02      	cmp	r2, #2
900146e8:	d105      	bne.n	900146f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
900146ea:	7be2      	ldrb	r2, [r4, #15]
900146ec:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900146f0:	1a80      	subs	r0, r0, r2
900146f2:	1ac0      	subs	r0, r0, r3
900146f4:	e773      	b.n	900145de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
900146f6:	2000      	movs	r0, #0
900146f8:	e772      	b.n	900145e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900146fa:	7be0      	ldrb	r0, [r4, #15]
900146fc:	e770      	b.n	900145e0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
900146fe:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014702:	e773      	b.n	900145ec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90014704:	f1ba 0f00 	cmp.w	sl, #0
90014708:	d0f7      	beq.n	900146fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001470a:	2264      	movs	r2, #100	; 0x64
9001470c:	4639      	mov	r1, r7
9001470e:	a849      	add	r0, sp, #292	; 0x124
90014710:	f012 f87f 	bl	90026812 <memcpy>
90014714:	2300      	movs	r3, #0
90014716:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001471a:	6821      	ldr	r1, [r4, #0]
9001471c:	a849      	add	r0, sp, #292	; 0x124
9001471e:	f7ff fb9a 	bl	90013e56 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014722:	b203      	sxth	r3, r0
90014724:	e751      	b.n	900145ca <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90014726 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014726:	2b03      	cmp	r3, #3
90014728:	d818      	bhi.n	9001475c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001472a:	e8df f003 	tbb	[pc, r3]
9001472e:	0602      	.short	0x0602
90014730:	130d      	.short	0x130d
90014732:	f9b0 2000 	ldrsh.w	r2, [r0]
90014736:	1850      	adds	r0, r2, r1
90014738:	4770      	bx	lr
9001473a:	8803      	ldrh	r3, [r0, #0]
9001473c:	8880      	ldrh	r0, [r0, #4]
9001473e:	4418      	add	r0, r3
90014740:	b200      	sxth	r0, r0
90014742:	1a80      	subs	r0, r0, r2
90014744:	3801      	subs	r0, #1
90014746:	4770      	bx	lr
90014748:	8803      	ldrh	r3, [r0, #0]
9001474a:	8880      	ldrh	r0, [r0, #4]
9001474c:	4418      	add	r0, r3
9001474e:	b200      	sxth	r0, r0
90014750:	1a40      	subs	r0, r0, r1
90014752:	e7f7      	b.n	90014744 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90014754:	f9b0 0000 	ldrsh.w	r0, [r0]
90014758:	4410      	add	r0, r2
9001475a:	4770      	bx	lr
9001475c:	2000      	movs	r0, #0
9001475e:	4770      	bx	lr

90014760 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90014760:	2b03      	cmp	r3, #3
90014762:	d817      	bhi.n	90014794 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90014764:	e8df f003 	tbb	[pc, r3]
90014768:	10090602 	.word	0x10090602
9001476c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014770:	1850      	adds	r0, r2, r1
90014772:	4770      	bx	lr
90014774:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014778:	e7fa      	b.n	90014770 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
9001477a:	8843      	ldrh	r3, [r0, #2]
9001477c:	88c0      	ldrh	r0, [r0, #6]
9001477e:	4418      	add	r0, r3
90014780:	b200      	sxth	r0, r0
90014782:	1a80      	subs	r0, r0, r2
90014784:	3801      	subs	r0, #1
90014786:	4770      	bx	lr
90014788:	8843      	ldrh	r3, [r0, #2]
9001478a:	88c0      	ldrh	r0, [r0, #6]
9001478c:	4418      	add	r0, r3
9001478e:	b200      	sxth	r0, r0
90014790:	1a40      	subs	r0, r0, r1
90014792:	e7f7      	b.n	90014784 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014794:	2000      	movs	r0, #0
90014796:	4770      	bx	lr

90014798 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014798:	4b01      	ldr	r3, [pc, #4]	; (900147a0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001479a:	2200      	movs	r2, #0
9001479c:	601a      	str	r2, [r3, #0]
9001479e:	4770      	bx	lr
900147a0:	2402357c 	.word	0x2402357c

900147a4 <_ZN8touchgfx16TouchCalibration4clzuEm>:
900147a4:	4603      	mov	r3, r0
900147a6:	b1c8      	cbz	r0, 900147dc <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
900147a8:	0c02      	lsrs	r2, r0, #16
900147aa:	0412      	lsls	r2, r2, #16
900147ac:	b9a2      	cbnz	r2, 900147d8 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
900147ae:	0403      	lsls	r3, r0, #16
900147b0:	2010      	movs	r0, #16
900147b2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900147b6:	bf04      	itt	eq
900147b8:	021b      	lsleq	r3, r3, #8
900147ba:	3008      	addeq	r0, #8
900147bc:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900147c0:	bf04      	itt	eq
900147c2:	011b      	lsleq	r3, r3, #4
900147c4:	3004      	addeq	r0, #4
900147c6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900147ca:	bf04      	itt	eq
900147cc:	009b      	lsleq	r3, r3, #2
900147ce:	3002      	addeq	r0, #2
900147d0:	2b00      	cmp	r3, #0
900147d2:	db04      	blt.n	900147de <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
900147d4:	3001      	adds	r0, #1
900147d6:	4770      	bx	lr
900147d8:	2000      	movs	r0, #0
900147da:	e7ea      	b.n	900147b2 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
900147dc:	2020      	movs	r0, #32
900147de:	4770      	bx	lr

900147e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
900147e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900147e4:	b087      	sub	sp, #28
900147e6:	460d      	mov	r5, r1
900147e8:	4616      	mov	r6, r2
900147ea:	4698      	mov	r8, r3
900147ec:	4601      	mov	r1, r0
900147ee:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
900147f2:	b120      	cbz	r0, 900147fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900147f4:	b11a      	cbz	r2, 900147fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900147f6:	2d1f      	cmp	r5, #31
900147f8:	d801      	bhi.n	900147fe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
900147fa:	2b1f      	cmp	r3, #31
900147fc:	d904      	bls.n	90014808 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
900147fe:	2000      	movs	r0, #0
90014800:	6038      	str	r0, [r7, #0]
90014802:	b007      	add	sp, #28
90014804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014808:	b97d      	cbnz	r5, 9001482a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
9001480a:	b143      	cbz	r3, 9001481e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
9001480c:	4602      	mov	r2, r0
9001480e:	462b      	mov	r3, r5
90014810:	4641      	mov	r1, r8
90014812:	4630      	mov	r0, r6
90014814:	e9cd 4700 	strd	r4, r7, [sp]
90014818:	f7ff ffe2 	bl	900147e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001481c:	e7f1      	b.n	90014802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001481e:	f04f 33ff 	mov.w	r3, #4294967295
90014822:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90014826:	603b      	str	r3, [r7, #0]
90014828:	e7eb      	b.n	90014802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001482a:	fa32 fa05 	lsrs.w	sl, r2, r5
9001482e:	d106      	bne.n	9001483e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90014830:	4346      	muls	r6, r0
90014832:	fbb6 f0f4 	udiv	r0, r6, r4
90014836:	fb04 6610 	mls	r6, r4, r0, r6
9001483a:	603e      	str	r6, [r7, #0]
9001483c:	e7e1      	b.n	90014802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001483e:	2201      	movs	r2, #1
90014840:	fa00 fb05 	lsl.w	fp, r0, r5
90014844:	40aa      	lsls	r2, r5
90014846:	fbbb f9f4 	udiv	r9, fp, r4
9001484a:	3a01      	subs	r2, #1
9001484c:	fb0a f309 	mul.w	r3, sl, r9
90014850:	fb04 b919 	mls	r9, r4, r9, fp
90014854:	4016      	ands	r6, r2
90014856:	9303      	str	r3, [sp, #12]
90014858:	4630      	mov	r0, r6
9001485a:	f7ff ffa3 	bl	900147a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001485e:	462b      	mov	r3, r5
90014860:	460a      	mov	r2, r1
90014862:	4601      	mov	r1, r0
90014864:	4630      	mov	r0, r6
90014866:	e9cd 4700 	strd	r4, r7, [sp]
9001486a:	f7ff ffb9 	bl	900147e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001486e:	4606      	mov	r6, r0
90014870:	4648      	mov	r0, r9
90014872:	eb05 0108 	add.w	r1, r5, r8
90014876:	f7ff ff95 	bl	900147a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
9001487a:	ab05      	add	r3, sp, #20
9001487c:	464a      	mov	r2, r9
9001487e:	e9cd 4300 	strd	r4, r3, [sp]
90014882:	4603      	mov	r3, r0
90014884:	4650      	mov	r0, sl
90014886:	f7ff ffab 	bl	900147e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001488a:	6839      	ldr	r1, [r7, #0]
9001488c:	9a05      	ldr	r2, [sp, #20]
9001488e:	9b03      	ldr	r3, [sp, #12]
90014890:	4411      	add	r1, r2
90014892:	fbb1 f2f4 	udiv	r2, r1, r4
90014896:	18d3      	adds	r3, r2, r3
90014898:	fb04 1412 	mls	r4, r4, r2, r1
9001489c:	441e      	add	r6, r3
9001489e:	603c      	str	r4, [r7, #0]
900148a0:	4430      	add	r0, r6
900148a2:	e7ae      	b.n	90014802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

900148a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
900148a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900148a8:	b085      	sub	sp, #20
900148aa:	f1b0 0900 	subs.w	r9, r0, #0
900148ae:	461d      	mov	r5, r3
900148b0:	4617      	mov	r7, r2
900148b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900148b4:	bfbb      	ittet	lt
900148b6:	f1c9 0900 	rsblt	r9, r9, #0
900148ba:	f04f 36ff 	movlt.w	r6, #4294967295
900148be:	2601      	movge	r6, #1
900148c0:	6823      	ldrlt	r3, [r4, #0]
900148c2:	bfbc      	itt	lt
900148c4:	425b      	neglt	r3, r3
900148c6:	6023      	strlt	r3, [r4, #0]
900148c8:	2a00      	cmp	r2, #0
900148ca:	da04      	bge.n	900148d6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
900148cc:	6823      	ldr	r3, [r4, #0]
900148ce:	4257      	negs	r7, r2
900148d0:	4276      	negs	r6, r6
900148d2:	425b      	negs	r3, r3
900148d4:	6023      	str	r3, [r4, #0]
900148d6:	2d00      	cmp	r5, #0
900148d8:	4638      	mov	r0, r7
900148da:	bfba      	itte	lt
900148dc:	426d      	neglt	r5, r5
900148de:	f04f 38ff 	movlt.w	r8, #4294967295
900148e2:	f04f 0801 	movge.w	r8, #1
900148e6:	f7ff ff5d 	bl	900147a4 <_ZN8touchgfx16TouchCalibration4clzuEm>
900148ea:	ab03      	add	r3, sp, #12
900148ec:	463a      	mov	r2, r7
900148ee:	e9cd 5300 	strd	r5, r3, [sp]
900148f2:	4603      	mov	r3, r0
900148f4:	4648      	mov	r0, r9
900148f6:	f7ff ff73 	bl	900147e0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900148fa:	6823      	ldr	r3, [r4, #0]
900148fc:	9a03      	ldr	r2, [sp, #12]
900148fe:	4546      	cmp	r6, r8
90014900:	441a      	add	r2, r3
90014902:	fb92 f3f5 	sdiv	r3, r2, r5
90014906:	4418      	add	r0, r3
90014908:	fb05 2313 	mls	r3, r5, r3, r2
9001490c:	bf18      	it	ne
9001490e:	4240      	negne	r0, r0
90014910:	1c72      	adds	r2, r6, #1
90014912:	6023      	str	r3, [r4, #0]
90014914:	d105      	bne.n	90014922 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014916:	2b00      	cmp	r3, #0
90014918:	f1c3 0200 	rsb	r2, r3, #0
9001491c:	db0b      	blt.n	90014936 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
9001491e:	6022      	str	r2, [r4, #0]
90014920:	e006      	b.n	90014930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014922:	2e01      	cmp	r6, #1
90014924:	d104      	bne.n	90014930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014926:	2b00      	cmp	r3, #0
90014928:	da02      	bge.n	90014930 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
9001492a:	442b      	add	r3, r5
9001492c:	3801      	subs	r0, #1
9001492e:	6023      	str	r3, [r4, #0]
90014930:	b005      	add	sp, #20
90014932:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014936:	3801      	subs	r0, #1
90014938:	1b52      	subs	r2, r2, r5
9001493a:	e7f0      	b.n	9001491e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

9001493c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
9001493c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014940:	4c1c      	ldr	r4, [pc, #112]	; (900149b4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014942:	4605      	mov	r5, r0
90014944:	6807      	ldr	r7, [r0, #0]
90014946:	69a3      	ldr	r3, [r4, #24]
90014948:	b92b      	cbnz	r3, 90014956 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
9001494a:	6840      	ldr	r0, [r0, #4]
9001494c:	e9c5 7000 	strd	r7, r0, [r5]
90014950:	b004      	add	sp, #16
90014952:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014956:	f04f 0802 	mov.w	r8, #2
9001495a:	68a2      	ldr	r2, [r4, #8]
9001495c:	ae04      	add	r6, sp, #16
9001495e:	6820      	ldr	r0, [r4, #0]
90014960:	fb93 f1f8 	sdiv	r1, r3, r8
90014964:	440a      	add	r2, r1
90014966:	69e1      	ldr	r1, [r4, #28]
90014968:	f846 2d04 	str.w	r2, [r6, #-4]!
9001496c:	463a      	mov	r2, r7
9001496e:	9600      	str	r6, [sp, #0]
90014970:	f7ff ff98 	bl	900148a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014974:	69a3      	ldr	r3, [r4, #24]
90014976:	4607      	mov	r7, r0
90014978:	686a      	ldr	r2, [r5, #4]
9001497a:	6a21      	ldr	r1, [r4, #32]
9001497c:	9600      	str	r6, [sp, #0]
9001497e:	6860      	ldr	r0, [r4, #4]
90014980:	f7ff ff90 	bl	900148a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014984:	69a3      	ldr	r3, [r4, #24]
90014986:	6962      	ldr	r2, [r4, #20]
90014988:	4407      	add	r7, r0
9001498a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9001498c:	9600      	str	r6, [sp, #0]
9001498e:	68e0      	ldr	r0, [r4, #12]
90014990:	fb93 f8f8 	sdiv	r8, r3, r8
90014994:	4442      	add	r2, r8
90014996:	9203      	str	r2, [sp, #12]
90014998:	682a      	ldr	r2, [r5, #0]
9001499a:	f7ff ff83 	bl	900148a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
9001499e:	4680      	mov	r8, r0
900149a0:	9600      	str	r6, [sp, #0]
900149a2:	69a3      	ldr	r3, [r4, #24]
900149a4:	686a      	ldr	r2, [r5, #4]
900149a6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
900149a8:	6920      	ldr	r0, [r4, #16]
900149aa:	f7ff ff7b 	bl	900148a4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
900149ae:	4440      	add	r0, r8
900149b0:	e7cc      	b.n	9001494c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
900149b2:	bf00      	nop
900149b4:	24023580 	.word	0x24023580

900149b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
900149b8:	4b07      	ldr	r3, [pc, #28]	; (900149d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
900149ba:	781b      	ldrb	r3, [r3, #0]
900149bc:	2b01      	cmp	r3, #1
900149be:	d109      	bne.n	900149d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
900149c0:	f9b1 3000 	ldrsh.w	r3, [r1]
900149c4:	f9b0 2000 	ldrsh.w	r2, [r0]
900149c8:	8003      	strh	r3, [r0, #0]
900149ca:	4b04      	ldr	r3, [pc, #16]	; (900149dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
900149cc:	881b      	ldrh	r3, [r3, #0]
900149ce:	3b01      	subs	r3, #1
900149d0:	1a9b      	subs	r3, r3, r2
900149d2:	800b      	strh	r3, [r1, #0]
900149d4:	4770      	bx	lr
900149d6:	bf00      	nop
900149d8:	24023564 	.word	0x24023564
900149dc:	24023560 	.word	0x24023560

900149e0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
900149e0:	4b07      	ldr	r3, [pc, #28]	; (90014a00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
900149e2:	b510      	push	{r4, lr}
900149e4:	781b      	ldrb	r3, [r3, #0]
900149e6:	2b01      	cmp	r3, #1
900149e8:	d108      	bne.n	900149fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
900149ea:	4b06      	ldr	r3, [pc, #24]	; (90014a04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
900149ec:	880c      	ldrh	r4, [r1, #0]
900149ee:	881b      	ldrh	r3, [r3, #0]
900149f0:	f9b0 2000 	ldrsh.w	r2, [r0]
900149f4:	3b01      	subs	r3, #1
900149f6:	1b1b      	subs	r3, r3, r4
900149f8:	8003      	strh	r3, [r0, #0]
900149fa:	800a      	strh	r2, [r1, #0]
900149fc:	bd10      	pop	{r4, pc}
900149fe:	bf00      	nop
90014a00:	24023564 	.word	0x24023564
90014a04:	24023560 	.word	0x24023560

90014a08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90014a08:	4b0a      	ldr	r3, [pc, #40]	; (90014a34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90014a0a:	b510      	push	{r4, lr}
90014a0c:	781b      	ldrb	r3, [r3, #0]
90014a0e:	2b01      	cmp	r3, #1
90014a10:	d10e      	bne.n	90014a30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90014a12:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014a16:	8843      	ldrh	r3, [r0, #2]
90014a18:	f9b0 4000 	ldrsh.w	r4, [r0]
90014a1c:	18ca      	adds	r2, r1, r3
90014a1e:	4b06      	ldr	r3, [pc, #24]	; (90014a38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90014a20:	8044      	strh	r4, [r0, #2]
90014a22:	881b      	ldrh	r3, [r3, #0]
90014a24:	1a9b      	subs	r3, r3, r2
90014a26:	8003      	strh	r3, [r0, #0]
90014a28:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014a2c:	8081      	strh	r1, [r0, #4]
90014a2e:	80c3      	strh	r3, [r0, #6]
90014a30:	bd10      	pop	{r4, pc}
90014a32:	bf00      	nop
90014a34:	24023564 	.word	0x24023564
90014a38:	24023560 	.word	0x24023560

90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90014a3c:	4b08      	ldr	r3, [pc, #32]	; (90014a60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90014a3e:	781b      	ldrb	r3, [r3, #0]
90014a40:	2b01      	cmp	r3, #1
90014a42:	d10c      	bne.n	90014a5e <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90014a44:	8803      	ldrh	r3, [r0, #0]
90014a46:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90014a4a:	8842      	ldrh	r2, [r0, #2]
90014a4c:	8002      	strh	r2, [r0, #0]
90014a4e:	185a      	adds	r2, r3, r1
90014a50:	4b04      	ldr	r3, [pc, #16]	; (90014a64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014a52:	881b      	ldrh	r3, [r3, #0]
90014a54:	1a9b      	subs	r3, r3, r2
90014a56:	8043      	strh	r3, [r0, #2]
90014a58:	88c3      	ldrh	r3, [r0, #6]
90014a5a:	80c1      	strh	r1, [r0, #6]
90014a5c:	8083      	strh	r3, [r0, #4]
90014a5e:	4770      	bx	lr
90014a60:	24023564 	.word	0x24023564
90014a64:	24023560 	.word	0x24023560

90014a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90014a68:	4b07      	ldr	r3, [pc, #28]	; (90014a88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90014a6a:	b510      	push	{r4, lr}
90014a6c:	781b      	ldrb	r3, [r3, #0]
90014a6e:	2b01      	cmp	r3, #1
90014a70:	d108      	bne.n	90014a84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90014a72:	f9b1 3000 	ldrsh.w	r3, [r1]
90014a76:	f9b0 4000 	ldrsh.w	r4, [r0]
90014a7a:	8003      	strh	r3, [r0, #0]
90014a7c:	8893      	ldrh	r3, [r2, #4]
90014a7e:	3b01      	subs	r3, #1
90014a80:	1b1b      	subs	r3, r3, r4
90014a82:	800b      	strh	r3, [r1, #0]
90014a84:	bd10      	pop	{r4, pc}
90014a86:	bf00      	nop
90014a88:	24023564 	.word	0x24023564

90014a8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90014a8c:	4b0b      	ldr	r3, [pc, #44]	; (90014abc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90014a8e:	781b      	ldrb	r3, [r3, #0]
90014a90:	2b01      	cmp	r3, #1
90014a92:	d111      	bne.n	90014ab8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90014a94:	680b      	ldr	r3, [r1, #0]
90014a96:	ed90 7a00 	vldr	s14, [r0]
90014a9a:	6003      	str	r3, [r0, #0]
90014a9c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90014aa0:	eddf 6a07 	vldr	s13, [pc, #28]	; 90014ac0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90014aa4:	ee07 3a90 	vmov	s15, r3
90014aa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014aac:	ee77 7ae6 	vsub.f32	s15, s15, s13
90014ab0:	ee77 7ac7 	vsub.f32	s15, s15, s14
90014ab4:	edc1 7a00 	vstr	s15, [r1]
90014ab8:	4770      	bx	lr
90014aba:	bf00      	nop
90014abc:	24023564 	.word	0x24023564
90014ac0:	38d1b717 	.word	0x38d1b717

90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90014ac4:	4b0a      	ldr	r3, [pc, #40]	; (90014af0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90014ac6:	460a      	mov	r2, r1
90014ac8:	b510      	push	{r4, lr}
90014aca:	781b      	ldrb	r3, [r3, #0]
90014acc:	2b01      	cmp	r3, #1
90014ace:	d10d      	bne.n	90014aec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90014ad0:	8881      	ldrh	r1, [r0, #4]
90014ad2:	8803      	ldrh	r3, [r0, #0]
90014ad4:	440b      	add	r3, r1
90014ad6:	4601      	mov	r1, r0
90014ad8:	3b01      	subs	r3, #1
90014ada:	f821 3b02 	strh.w	r3, [r1], #2
90014ade:	f7ff ffc3 	bl	90014a68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90014ae2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014ae6:	88c2      	ldrh	r2, [r0, #6]
90014ae8:	80c3      	strh	r3, [r0, #6]
90014aea:	8082      	strh	r2, [r0, #4]
90014aec:	bd10      	pop	{r4, pc}
90014aee:	bf00      	nop
90014af0:	24023564 	.word	0x24023564

90014af4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90014af4:	4770      	bx	lr
	...

90014af8 <_ZN8touchgfx11Application13requestRedrawEv>:
90014af8:	4b06      	ldr	r3, [pc, #24]	; (90014b14 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90014afa:	2100      	movs	r1, #0
90014afc:	f9b3 2000 	ldrsh.w	r2, [r3]
90014b00:	4b05      	ldr	r3, [pc, #20]	; (90014b18 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90014b02:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90014b06:	f9b3 3000 	ldrsh.w	r3, [r3]
90014b0a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90014b0e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90014b12:	4770      	bx	lr
90014b14:	24023560 	.word	0x24023560
90014b18:	24023562 	.word	0x24023562

90014b1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90014b1c:	4b03      	ldr	r3, [pc, #12]	; (90014b2c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90014b1e:	6818      	ldr	r0, [r3, #0]
90014b20:	b110      	cbz	r0, 90014b28 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90014b22:	6803      	ldr	r3, [r0, #0]
90014b24:	699b      	ldr	r3, [r3, #24]
90014b26:	4718      	bx	r3
90014b28:	4770      	bx	lr
90014b2a:	bf00      	nop
90014b2c:	240235b0 	.word	0x240235b0

90014b30 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90014b30:	4770      	bx	lr
	...

90014b34 <_ZN8touchgfx11Application4drawEv>:
90014b34:	4b09      	ldr	r3, [pc, #36]	; (90014b5c <_ZN8touchgfx11Application4drawEv+0x28>)
90014b36:	b507      	push	{r0, r1, r2, lr}
90014b38:	f9b3 2000 	ldrsh.w	r2, [r3]
90014b3c:	2100      	movs	r1, #0
90014b3e:	4b08      	ldr	r3, [pc, #32]	; (90014b60 <_ZN8touchgfx11Application4drawEv+0x2c>)
90014b40:	9100      	str	r1, [sp, #0]
90014b42:	4669      	mov	r1, sp
90014b44:	f9b3 3000 	ldrsh.w	r3, [r3]
90014b48:	f8ad 2004 	strh.w	r2, [sp, #4]
90014b4c:	f8ad 3006 	strh.w	r3, [sp, #6]
90014b50:	6803      	ldr	r3, [r0, #0]
90014b52:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90014b54:	4798      	blx	r3
90014b56:	b003      	add	sp, #12
90014b58:	f85d fb04 	ldr.w	pc, [sp], #4
90014b5c:	24023560 	.word	0x24023560
90014b60:	24023562 	.word	0x24023562

90014b64 <_ZN8touchgfx11Application10invalidateEv>:
90014b64:	4b09      	ldr	r3, [pc, #36]	; (90014b8c <_ZN8touchgfx11Application10invalidateEv+0x28>)
90014b66:	b082      	sub	sp, #8
90014b68:	2100      	movs	r1, #0
90014b6a:	f9b3 2000 	ldrsh.w	r2, [r3]
90014b6e:	4b08      	ldr	r3, [pc, #32]	; (90014b90 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90014b70:	f8ad 2004 	strh.w	r2, [sp, #4]
90014b74:	aa02      	add	r2, sp, #8
90014b76:	f9b3 3000 	ldrsh.w	r3, [r3]
90014b7a:	9100      	str	r1, [sp, #0]
90014b7c:	f8ad 3006 	strh.w	r3, [sp, #6]
90014b80:	6803      	ldr	r3, [r0, #0]
90014b82:	e912 0006 	ldmdb	r2, {r1, r2}
90014b86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90014b88:	b002      	add	sp, #8
90014b8a:	4718      	bx	r3
90014b8c:	24023560 	.word	0x24023560
90014b90:	24023562 	.word	0x24023562

90014b94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90014b94:	4b03      	ldr	r3, [pc, #12]	; (90014ba4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90014b96:	6818      	ldr	r0, [r3, #0]
90014b98:	b110      	cbz	r0, 90014ba0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90014b9a:	6803      	ldr	r3, [r0, #0]
90014b9c:	69db      	ldr	r3, [r3, #28]
90014b9e:	4718      	bx	r3
90014ba0:	4770      	bx	lr
90014ba2:	bf00      	nop
90014ba4:	240235b0 	.word	0x240235b0

90014ba8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90014ba8:	4b03      	ldr	r3, [pc, #12]	; (90014bb8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90014baa:	6818      	ldr	r0, [r3, #0]
90014bac:	b110      	cbz	r0, 90014bb4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90014bae:	6803      	ldr	r3, [r0, #0]
90014bb0:	6a1b      	ldr	r3, [r3, #32]
90014bb2:	4718      	bx	r3
90014bb4:	4770      	bx	lr
90014bb6:	bf00      	nop
90014bb8:	240235b0 	.word	0x240235b0

90014bbc <_ZN8touchgfx11Application16clearCachedAreasEv>:
90014bbc:	2300      	movs	r3, #0
90014bbe:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90014bc2:	4770      	bx	lr

90014bc4 <_ZN8touchgfx11Application14handleKeyEventEh>:
90014bc4:	4b03      	ldr	r3, [pc, #12]	; (90014bd4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90014bc6:	6818      	ldr	r0, [r3, #0]
90014bc8:	b110      	cbz	r0, 90014bd0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90014bca:	6803      	ldr	r3, [r0, #0]
90014bcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014bce:	4718      	bx	r3
90014bd0:	4770      	bx	lr
90014bd2:	bf00      	nop
90014bd4:	240235b0 	.word	0x240235b0

90014bd8 <_ZN8touchgfx11ApplicationD1Ev>:
90014bd8:	4770      	bx	lr

90014bda <_ZN8touchgfx11ApplicationD0Ev>:
90014bda:	b510      	push	{r4, lr}
90014bdc:	4604      	mov	r4, r0
90014bde:	f44f 719e 	mov.w	r1, #316	; 0x13c
90014be2:	f011 fa2e 	bl	90026042 <_ZdlPvj>
90014be6:	4620      	mov	r0, r4
90014be8:	bd10      	pop	{r4, pc}

90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>:
90014bea:	b510      	push	{r4, lr}
90014bec:	f9b1 4000 	ldrsh.w	r4, [r1]
90014bf0:	888a      	ldrh	r2, [r1, #4]
90014bf2:	f9b0 3000 	ldrsh.w	r3, [r0]
90014bf6:	4422      	add	r2, r4
90014bf8:	b212      	sxth	r2, r2
90014bfa:	4293      	cmp	r3, r2
90014bfc:	da15      	bge.n	90014c2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014bfe:	8882      	ldrh	r2, [r0, #4]
90014c00:	4413      	add	r3, r2
90014c02:	b21b      	sxth	r3, r3
90014c04:	429c      	cmp	r4, r3
90014c06:	da10      	bge.n	90014c2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014c08:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014c0c:	88c9      	ldrh	r1, [r1, #6]
90014c0e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014c12:	4419      	add	r1, r3
90014c14:	b209      	sxth	r1, r1
90014c16:	428a      	cmp	r2, r1
90014c18:	da07      	bge.n	90014c2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014c1a:	88c0      	ldrh	r0, [r0, #6]
90014c1c:	4410      	add	r0, r2
90014c1e:	b200      	sxth	r0, r0
90014c20:	4283      	cmp	r3, r0
90014c22:	bfac      	ite	ge
90014c24:	2000      	movge	r0, #0
90014c26:	2001      	movlt	r0, #1
90014c28:	bd10      	pop	{r4, pc}
90014c2a:	2000      	movs	r0, #0
90014c2c:	e7fc      	b.n	90014c28 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90014c2e <_ZN8touchgfx4Rect10restrictToEss>:
90014c2e:	f9b0 3000 	ldrsh.w	r3, [r0]
90014c32:	2b00      	cmp	r3, #0
90014c34:	b510      	push	{r4, lr}
90014c36:	da04      	bge.n	90014c42 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90014c38:	8884      	ldrh	r4, [r0, #4]
90014c3a:	4423      	add	r3, r4
90014c3c:	8083      	strh	r3, [r0, #4]
90014c3e:	2300      	movs	r3, #0
90014c40:	8003      	strh	r3, [r0, #0]
90014c42:	f9b0 4000 	ldrsh.w	r4, [r0]
90014c46:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014c4a:	1b09      	subs	r1, r1, r4
90014c4c:	428b      	cmp	r3, r1
90014c4e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90014c52:	bfc8      	it	gt
90014c54:	8081      	strhgt	r1, [r0, #4]
90014c56:	2b00      	cmp	r3, #0
90014c58:	da04      	bge.n	90014c64 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90014c5a:	88c1      	ldrh	r1, [r0, #6]
90014c5c:	440b      	add	r3, r1
90014c5e:	80c3      	strh	r3, [r0, #6]
90014c60:	2300      	movs	r3, #0
90014c62:	8043      	strh	r3, [r0, #2]
90014c64:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014c68:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90014c6c:	1a52      	subs	r2, r2, r1
90014c6e:	4293      	cmp	r3, r2
90014c70:	bfc8      	it	gt
90014c72:	80c2      	strhgt	r2, [r0, #6]
90014c74:	bd10      	pop	{r4, pc}
	...

90014c78 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90014c78:	4b10      	ldr	r3, [pc, #64]	; (90014cbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90014c7a:	b510      	push	{r4, lr}
90014c7c:	460c      	mov	r4, r1
90014c7e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014c82:	4b0f      	ldr	r3, [pc, #60]	; (90014cc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90014c84:	4620      	mov	r0, r4
90014c86:	f9b3 1000 	ldrsh.w	r1, [r3]
90014c8a:	f7ff ffd0 	bl	90014c2e <_ZN8touchgfx4Rect10restrictToEss>
90014c8e:	4b0d      	ldr	r3, [pc, #52]	; (90014cc4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90014c90:	6818      	ldr	r0, [r3, #0]
90014c92:	b190      	cbz	r0, 90014cba <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90014c94:	6803      	ldr	r3, [r0, #0]
90014c96:	4621      	mov	r1, r4
90014c98:	689b      	ldr	r3, [r3, #8]
90014c9a:	4798      	blx	r3
90014c9c:	4b0a      	ldr	r3, [pc, #40]	; (90014cc8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90014c9e:	6818      	ldr	r0, [r3, #0]
90014ca0:	b118      	cbz	r0, 90014caa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90014ca2:	6803      	ldr	r3, [r0, #0]
90014ca4:	4621      	mov	r1, r4
90014ca6:	689b      	ldr	r3, [r3, #8]
90014ca8:	4798      	blx	r3
90014caa:	4b08      	ldr	r3, [pc, #32]	; (90014ccc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90014cac:	4621      	mov	r1, r4
90014cae:	6818      	ldr	r0, [r3, #0]
90014cb0:	6803      	ldr	r3, [r0, #0]
90014cb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014cb6:	69db      	ldr	r3, [r3, #28]
90014cb8:	4718      	bx	r3
90014cba:	bd10      	pop	{r4, pc}
90014cbc:	24023562 	.word	0x24023562
90014cc0:	24023560 	.word	0x24023560
90014cc4:	240235b0 	.word	0x240235b0
90014cc8:	240235ac 	.word	0x240235ac
90014ccc:	2402356c 	.word	0x2402356c

90014cd0 <_ZNK8touchgfx4Rect8includesERKS0_>:
90014cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014cd2:	4606      	mov	r6, r0
90014cd4:	4608      	mov	r0, r1
90014cd6:	460f      	mov	r7, r1
90014cd8:	f7fb f989 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90014cdc:	b9e8      	cbnz	r0, 90014d1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014cde:	f9b7 5000 	ldrsh.w	r5, [r7]
90014ce2:	f9b6 4000 	ldrsh.w	r4, [r6]
90014ce6:	42a5      	cmp	r5, r4
90014ce8:	db17      	blt.n	90014d1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014cea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90014cee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90014cf2:	429a      	cmp	r2, r3
90014cf4:	db11      	blt.n	90014d1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014cf6:	88b9      	ldrh	r1, [r7, #4]
90014cf8:	440d      	add	r5, r1
90014cfa:	88b1      	ldrh	r1, [r6, #4]
90014cfc:	440c      	add	r4, r1
90014cfe:	b22d      	sxth	r5, r5
90014d00:	b224      	sxth	r4, r4
90014d02:	42a5      	cmp	r5, r4
90014d04:	dc09      	bgt.n	90014d1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014d06:	88f8      	ldrh	r0, [r7, #6]
90014d08:	4410      	add	r0, r2
90014d0a:	88f2      	ldrh	r2, [r6, #6]
90014d0c:	4413      	add	r3, r2
90014d0e:	b200      	sxth	r0, r0
90014d10:	b21b      	sxth	r3, r3
90014d12:	4298      	cmp	r0, r3
90014d14:	bfcc      	ite	gt
90014d16:	2000      	movgt	r0, #0
90014d18:	2001      	movle	r0, #1
90014d1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014d1c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90014d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014d1e:	4604      	mov	r4, r0
90014d20:	4608      	mov	r0, r1
90014d22:	460d      	mov	r5, r1
90014d24:	f7fb f963 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90014d28:	b978      	cbnz	r0, 90014d4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90014d2a:	4620      	mov	r0, r4
90014d2c:	f7fb f95f 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90014d30:	f9b5 6000 	ldrsh.w	r6, [r5]
90014d34:	b150      	cbz	r0, 90014d4c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90014d36:	8026      	strh	r6, [r4, #0]
90014d38:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014d3c:	8063      	strh	r3, [r4, #2]
90014d3e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90014d42:	80a3      	strh	r3, [r4, #4]
90014d44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90014d48:	80e3      	strh	r3, [r4, #6]
90014d4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014d4c:	f9b4 1000 	ldrsh.w	r1, [r4]
90014d50:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014d54:	42b1      	cmp	r1, r6
90014d56:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90014d5a:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90014d5e:	460f      	mov	r7, r1
90014d60:	88ed      	ldrh	r5, [r5, #6]
90014d62:	bfa8      	it	ge
90014d64:	4637      	movge	r7, r6
90014d66:	4293      	cmp	r3, r2
90014d68:	4618      	mov	r0, r3
90014d6a:	4466      	add	r6, ip
90014d6c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90014d70:	bfa8      	it	ge
90014d72:	4610      	movge	r0, r2
90014d74:	442a      	add	r2, r5
90014d76:	88e5      	ldrh	r5, [r4, #6]
90014d78:	4461      	add	r1, ip
90014d7a:	b236      	sxth	r6, r6
90014d7c:	8027      	strh	r7, [r4, #0]
90014d7e:	442b      	add	r3, r5
90014d80:	b209      	sxth	r1, r1
90014d82:	b212      	sxth	r2, r2
90014d84:	8060      	strh	r0, [r4, #2]
90014d86:	b21b      	sxth	r3, r3
90014d88:	428e      	cmp	r6, r1
90014d8a:	bfac      	ite	ge
90014d8c:	ebc7 0106 	rsbge	r1, r7, r6
90014d90:	ebc7 0101 	rsblt	r1, r7, r1
90014d94:	429a      	cmp	r2, r3
90014d96:	bfac      	ite	ge
90014d98:	ebc0 0202 	rsbge	r2, r0, r2
90014d9c:	ebc0 0203 	rsblt	r2, r0, r3
90014da0:	80a1      	strh	r1, [r4, #4]
90014da2:	80e2      	strh	r2, [r4, #6]
90014da4:	e7d1      	b.n	90014d4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90014da8 <_ZN8touchgfx11Application11getInstanceEv>:
90014da8:	4b01      	ldr	r3, [pc, #4]	; (90014db0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90014daa:	6818      	ldr	r0, [r3, #0]
90014dac:	4770      	bx	lr
90014dae:	bf00      	nop
90014db0:	240235c0 	.word	0x240235c0

90014db4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90014db4:	2300      	movs	r3, #0
90014db6:	b510      	push	{r4, lr}
90014db8:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90014dbc:	4604      	mov	r4, r0
90014dbe:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014dc2:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014dc6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014dca:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
90014dce:	429a      	cmp	r2, r3
90014dd0:	d90e      	bls.n	90014df0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90014dd2:	18e2      	adds	r2, r4, r3
90014dd4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90014dd8:	b122      	cbz	r2, 90014de4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90014dda:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90014dde:	6803      	ldr	r3, [r0, #0]
90014de0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014de2:	4798      	blx	r3
90014de4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014de8:	3301      	adds	r3, #1
90014dea:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90014dee:	e7ea      	b.n	90014dc6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90014df0:	bd10      	pop	{r4, pc}

90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90014df2:	2300      	movs	r3, #0
90014df4:	f100 0284 	add.w	r2, r0, #132	; 0x84
90014df8:	30a4      	adds	r0, #164	; 0xa4
90014dfa:	f820 3c24 	strh.w	r3, [r0, #-36]
90014dfe:	f802 3b01 	strb.w	r3, [r2], #1
90014e02:	4282      	cmp	r2, r0
90014e04:	d1fb      	bne.n	90014dfe <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90014e06:	4770      	bx	lr

90014e08 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90014e08:	b570      	push	{r4, r5, r6, lr}
90014e0a:	4c0b      	ldr	r4, [pc, #44]	; (90014e38 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90014e0c:	4605      	mov	r5, r0
90014e0e:	460e      	mov	r6, r1
90014e10:	6820      	ldr	r0, [r4, #0]
90014e12:	b110      	cbz	r0, 90014e1a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90014e14:	6803      	ldr	r3, [r0, #0]
90014e16:	695b      	ldr	r3, [r3, #20]
90014e18:	4798      	blx	r3
90014e1a:	1d28      	adds	r0, r5, #4
90014e1c:	f7ff ffe9 	bl	90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90014e20:	6026      	str	r6, [r4, #0]
90014e22:	6833      	ldr	r3, [r6, #0]
90014e24:	4630      	mov	r0, r6
90014e26:	68db      	ldr	r3, [r3, #12]
90014e28:	4798      	blx	r3
90014e2a:	682b      	ldr	r3, [r5, #0]
90014e2c:	4628      	mov	r0, r5
90014e2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014e30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014e34:	4718      	bx	r3
90014e36:	bf00      	nop
90014e38:	240235b0 	.word	0x240235b0

90014e3c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90014e3c:	2300      	movs	r3, #0
90014e3e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90014e42:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90014e46:	461a      	mov	r2, r3
90014e48:	b5f0      	push	{r4, r5, r6, r7, lr}
90014e4a:	461c      	mov	r4, r3
90014e4c:	461d      	mov	r5, r3
90014e4e:	459c      	cmp	ip, r3
90014e50:	dd1a      	ble.n	90014e88 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90014e52:	18c6      	adds	r6, r0, r3
90014e54:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90014e58:	b16e      	cbz	r6, 90014e76 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90014e5a:	429a      	cmp	r2, r3
90014e5c:	d008      	beq.n	90014e70 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90014e5e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90014e62:	fa1f fe82 	uxth.w	lr, r2
90014e66:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90014e6a:	1887      	adds	r7, r0, r2
90014e6c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90014e70:	3201      	adds	r2, #1
90014e72:	3301      	adds	r3, #1
90014e74:	e7eb      	b.n	90014e4e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90014e76:	4299      	cmp	r1, r3
90014e78:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90014e7c:	bfa8      	it	ge
90014e7e:	3501      	addge	r5, #1
90014e80:	429e      	cmp	r6, r3
90014e82:	bfc8      	it	gt
90014e84:	3401      	addgt	r4, #1
90014e86:	e7f4      	b.n	90014e72 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90014e88:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90014e8c:	1b49      	subs	r1, r1, r5
90014e8e:	1b1b      	subs	r3, r3, r4
90014e90:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90014e94:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014e98:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014e9c:	4293      	cmp	r3, r2
90014e9e:	dd03      	ble.n	90014ea8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90014ea0:	3b01      	subs	r3, #1
90014ea2:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90014ea6:	e7f7      	b.n	90014e98 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90014ea8:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

90014eac <_ZN8touchgfx11Application15handleTickEventEv>:
90014eac:	b570      	push	{r4, r5, r6, lr}
90014eae:	4d16      	ldr	r5, [pc, #88]	; (90014f08 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90014eb0:	4604      	mov	r4, r0
90014eb2:	6828      	ldr	r0, [r5, #0]
90014eb4:	b140      	cbz	r0, 90014ec8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90014eb6:	7a03      	ldrb	r3, [r0, #8]
90014eb8:	b933      	cbnz	r3, 90014ec8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90014eba:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90014ebe:	6803      	ldr	r3, [r0, #0]
90014ec0:	689b      	ldr	r3, [r3, #8]
90014ec2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014ec6:	4718      	bx	r3
90014ec8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
90014ecc:	4e0f      	ldr	r6, [pc, #60]	; (90014f0c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
90014ece:	b973      	cbnz	r3, 90014eee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014ed0:	b168      	cbz	r0, 90014eee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014ed2:	7a03      	ldrb	r3, [r0, #8]
90014ed4:	b15b      	cbz	r3, 90014eee <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90014ed6:	6830      	ldr	r0, [r6, #0]
90014ed8:	b110      	cbz	r0, 90014ee0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90014eda:	6803      	ldr	r3, [r0, #0]
90014edc:	691b      	ldr	r3, [r3, #16]
90014ede:	4798      	blx	r3
90014ee0:	6828      	ldr	r0, [r5, #0]
90014ee2:	6803      	ldr	r3, [r0, #0]
90014ee4:	68db      	ldr	r3, [r3, #12]
90014ee6:	4798      	blx	r3
90014ee8:	2301      	movs	r3, #1
90014eea:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
90014eee:	3404      	adds	r4, #4
90014ef0:	4620      	mov	r0, r4
90014ef2:	f7ff ff5f 	bl	90014db4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90014ef6:	4620      	mov	r0, r4
90014ef8:	f7ff ffa0 	bl	90014e3c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90014efc:	6830      	ldr	r0, [r6, #0]
90014efe:	b110      	cbz	r0, 90014f06 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90014f00:	6803      	ldr	r3, [r0, #0]
90014f02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90014f04:	e7dd      	b.n	90014ec2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90014f06:	bd70      	pop	{r4, r5, r6, pc}
90014f08:	240235b4 	.word	0x240235b4
90014f0c:	240235b0 	.word	0x240235b0

90014f10 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90014f10:	4603      	mov	r3, r0
90014f12:	f100 0140 	add.w	r1, r0, #64	; 0x40
90014f16:	2200      	movs	r2, #0
90014f18:	801a      	strh	r2, [r3, #0]
90014f1a:	3308      	adds	r3, #8
90014f1c:	f823 2c06 	strh.w	r2, [r3, #-6]
90014f20:	f823 2c04 	strh.w	r2, [r3, #-4]
90014f24:	f823 2c02 	strh.w	r2, [r3, #-2]
90014f28:	428b      	cmp	r3, r1
90014f2a:	d1f5      	bne.n	90014f18 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
90014f2c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
90014f30:	4770      	bx	lr
	...

90014f34 <_ZN8touchgfx11ApplicationC1Ev>:
90014f34:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014f36:	4b1d      	ldr	r3, [pc, #116]	; (90014fac <_ZN8touchgfx11ApplicationC1Ev+0x78>)
90014f38:	4606      	mov	r6, r0
90014f3a:	4604      	mov	r4, r0
90014f3c:	2500      	movs	r5, #0
90014f3e:	f846 3b04 	str.w	r3, [r6], #4
90014f42:	22a8      	movs	r2, #168	; 0xa8
90014f44:	2100      	movs	r1, #0
90014f46:	4630      	mov	r0, r6
90014f48:	f011 fb82 	bl	90026650 <memset>
90014f4c:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
90014f50:	f104 00ac 	add.w	r0, r4, #172	; 0xac
90014f54:	4f16      	ldr	r7, [pc, #88]	; (90014fb0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
90014f56:	f7ff ffdb 	bl	90014f10 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90014f5a:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90014f5e:	f7ff ffd7 	bl	90014f10 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90014f62:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
90014f66:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
90014f6a:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
90014f6e:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
90014f72:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
90014f76:	490f      	ldr	r1, [pc, #60]	; (90014fb4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90014f78:	480f      	ldr	r0, [pc, #60]	; (90014fb8 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90014f7a:	f010 fb9b 	bl	900256b4 <CRC_Lock>
90014f7e:	4b0f      	ldr	r3, [pc, #60]	; (90014fbc <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90014f80:	b158      	cbz	r0, 90014f9a <_ZN8touchgfx11ApplicationC1Ev+0x66>
90014f82:	801d      	strh	r5, [r3, #0]
90014f84:	2300      	movs	r3, #0
90014f86:	4a0e      	ldr	r2, [pc, #56]	; (90014fc0 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90014f88:	4630      	mov	r0, r6
90014f8a:	6013      	str	r3, [r2, #0]
90014f8c:	4a0d      	ldr	r2, [pc, #52]	; (90014fc4 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90014f8e:	603b      	str	r3, [r7, #0]
90014f90:	6013      	str	r3, [r2, #0]
90014f92:	f7ff ff2e 	bl	90014df2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90014f96:	4620      	mov	r0, r4
90014f98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014f9a:	f44f 6280 	mov.w	r2, #1024	; 0x400
90014f9e:	2002      	movs	r0, #2
90014fa0:	801a      	strh	r2, [r3, #0]
90014fa2:	6038      	str	r0, [r7, #0]
90014fa4:	f001 fb06 	bl	900165b4 <_ZN8touchgfx6Screen4drawEv>
90014fa8:	e7ec      	b.n	90014f84 <_ZN8touchgfx11ApplicationC1Ev+0x50>
90014faa:	bf00      	nop
90014fac:	9002a568 	.word	0x9002a568
90014fb0:	240235b0 	.word	0x240235b0
90014fb4:	b5e8b5cd 	.word	0xb5e8b5cd
90014fb8:	f407a5c2 	.word	0xf407a5c2
90014fbc:	24000074 	.word	0x24000074
90014fc0:	240235c0 	.word	0x240235c0
90014fc4:	240235b4 	.word	0x240235b4

90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90014fc8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
90014fcc:	3b01      	subs	r3, #1
90014fce:	b29b      	uxth	r3, r3
90014fd0:	428b      	cmp	r3, r1
90014fd2:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90014fd6:	b510      	push	{r4, lr}
90014fd8:	d908      	bls.n	90014fec <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90014fda:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90014fde:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90014fe2:	681a      	ldr	r2, [r3, #0]
90014fe4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90014fe8:	685a      	ldr	r2, [r3, #4]
90014fea:	6062      	str	r2, [r4, #4]
90014fec:	bd10      	pop	{r4, pc}
	...

90014ff0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90014ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014ff4:	b08f      	sub	sp, #60	; 0x3c
90014ff6:	4b8f      	ldr	r3, [pc, #572]	; (90015234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90014ff8:	4683      	mov	fp, r0
90014ffa:	ac0a      	add	r4, sp, #40	; 0x28
90014ffc:	e884 0006 	stmia.w	r4, {r1, r2}
90015000:	f9b3 2000 	ldrsh.w	r2, [r3]
90015004:	4620      	mov	r0, r4
90015006:	4b8c      	ldr	r3, [pc, #560]	; (90015238 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015008:	f9b3 1000 	ldrsh.w	r1, [r3]
9001500c:	f7ff fe0f 	bl	90014c2e <_ZN8touchgfx4Rect10restrictToEss>
90015010:	4620      	mov	r0, r4
90015012:	f7fa ffec 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90015016:	2800      	cmp	r0, #0
90015018:	d16a      	bne.n	900150f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001501a:	9403      	str	r4, [sp, #12]
9001501c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015020:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90015024:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015028:	9301      	str	r3, [sp, #4]
9001502a:	35a4      	adds	r5, #164	; 0xa4
9001502c:	b15c      	cbz	r4, 90015046 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001502e:	4629      	mov	r1, r5
90015030:	9803      	ldr	r0, [sp, #12]
90015032:	f7ff fe4d 	bl	90014cd0 <_ZNK8touchgfx4Rect8includesERKS0_>
90015036:	3c01      	subs	r4, #1
90015038:	b118      	cbz	r0, 90015042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
9001503a:	b2a1      	uxth	r1, r4
9001503c:	9801      	ldr	r0, [sp, #4]
9001503e:	f7ff ffc3 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015042:	3d08      	subs	r5, #8
90015044:	e7f2      	b.n	9001502c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
90015046:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
9001504a:	f10a 33ff 	add.w	r3, sl, #4294967295
9001504e:	f8cd a010 	str.w	sl, [sp, #16]
90015052:	9302      	str	r3, [sp, #8]
90015054:	ea4f 03ca 	mov.w	r3, sl, lsl #3
90015058:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
9001505c:	9306      	str	r3, [sp, #24]
9001505e:	445c      	add	r4, fp
90015060:	2500      	movs	r5, #0
90015062:	4626      	mov	r6, r4
90015064:	f8cd a014 	str.w	sl, [sp, #20]
90015068:	462f      	mov	r7, r5
9001506a:	9b05      	ldr	r3, [sp, #20]
9001506c:	2b00      	cmp	r3, #0
9001506e:	d073      	beq.n	90015158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
90015070:	9903      	ldr	r1, [sp, #12]
90015072:	4630      	mov	r0, r6
90015074:	f7ff fdb9 	bl	90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>
90015078:	b350      	cbz	r0, 900150d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
9001507a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
9001507e:	f9b6 c000 	ldrsh.w	ip, [r6]
90015082:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
90015086:	45e6      	cmp	lr, ip
90015088:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
9001508c:	db33      	blt.n	900150f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
9001508e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90015092:	88b3      	ldrh	r3, [r6, #4]
90015094:	4472      	add	r2, lr
90015096:	4463      	add	r3, ip
90015098:	b212      	sxth	r2, r2
9001509a:	b21b      	sxth	r3, r3
9001509c:	429a      	cmp	r2, r3
9001509e:	dc2a      	bgt.n	900150f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900150a0:	fa1f f289 	uxth.w	r2, r9
900150a4:	88f3      	ldrh	r3, [r6, #6]
900150a6:	45c8      	cmp	r8, r9
900150a8:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
900150ac:	4413      	add	r3, r2
900150ae:	fa1f fc88 	uxth.w	ip, r8
900150b2:	b29b      	uxth	r3, r3
900150b4:	fa0f fe83 	sxth.w	lr, r3
900150b8:	db0f      	blt.n	900150da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900150ba:	eba3 030c 	sub.w	r3, r3, ip
900150be:	1ac9      	subs	r1, r1, r3
900150c0:	b209      	sxth	r1, r1
900150c2:	2900      	cmp	r1, #0
900150c4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900150c8:	dd12      	ble.n	900150f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900150ca:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
900150ce:	4605      	mov	r5, r0
900150d0:	9b05      	ldr	r3, [sp, #20]
900150d2:	3e08      	subs	r6, #8
900150d4:	3b01      	subs	r3, #1
900150d6:	9305      	str	r3, [sp, #20]
900150d8:	e7c7      	b.n	9001506a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
900150da:	4461      	add	r1, ip
900150dc:	b209      	sxth	r1, r1
900150de:	4571      	cmp	r1, lr
900150e0:	dc38      	bgt.n	90015154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900150e2:	eba2 020c 	sub.w	r2, r2, ip
900150e6:	b212      	sxth	r2, r2
900150e8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
900150ec:	2a00      	cmp	r2, #0
900150ee:	dcee      	bgt.n	900150ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900150f0:	b00f      	add	sp, #60	; 0x3c
900150f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900150f6:	45c8      	cmp	r8, r9
900150f8:	db2c      	blt.n	90015154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900150fa:	88f3      	ldrh	r3, [r6, #6]
900150fc:	4499      	add	r9, r3
900150fe:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90015102:	4498      	add	r8, r3
90015104:	fa0f f989 	sxth.w	r9, r9
90015108:	fa0f f888 	sxth.w	r8, r8
9001510c:	45c1      	cmp	r9, r8
9001510e:	db21      	blt.n	90015154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015110:	fa1f f28c 	uxth.w	r2, ip
90015114:	88b3      	ldrh	r3, [r6, #4]
90015116:	45e6      	cmp	lr, ip
90015118:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001511c:	4413      	add	r3, r2
9001511e:	fa1f f88e 	uxth.w	r8, lr
90015122:	b29b      	uxth	r3, r3
90015124:	fa0f f983 	sxth.w	r9, r3
90015128:	db0a      	blt.n	90015140 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001512a:	eba3 0308 	sub.w	r3, r3, r8
9001512e:	1ac9      	subs	r1, r1, r3
90015130:	b209      	sxth	r1, r1
90015132:	2900      	cmp	r1, #0
90015134:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
90015138:	ddda      	ble.n	900150f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001513a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001513e:	e7c6      	b.n	900150ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015140:	4441      	add	r1, r8
90015142:	b209      	sxth	r1, r1
90015144:	4549      	cmp	r1, r9
90015146:	dc05      	bgt.n	90015154 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015148:	eba2 0208 	sub.w	r2, r2, r8
9001514c:	b212      	sxth	r2, r2
9001514e:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
90015152:	e7cb      	b.n	900150ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
90015154:	4607      	mov	r7, r0
90015156:	e7bb      	b.n	900150d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
90015158:	2d00      	cmp	r5, #0
9001515a:	d181      	bne.n	90015060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
9001515c:	2f00      	cmp	r7, #0
9001515e:	f000 81dd 	beq.w	9001551c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015162:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
90015166:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
9001516a:	b2b3      	uxth	r3, r6
9001516c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
90015170:	9305      	str	r3, [sp, #20]
90015172:	9a05      	ldr	r2, [sp, #20]
90015174:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90015178:	4413      	add	r3, r2
9001517a:	b2ba      	uxth	r2, r7
9001517c:	4492      	add	sl, r2
9001517e:	b29b      	uxth	r3, r3
90015180:	fa1f fa8a 	uxth.w	sl, sl
90015184:	fa0f f883 	sxth.w	r8, r3
90015188:	fa0f f98a 	sxth.w	r9, sl
9001518c:	e9cd 2307 	strd	r2, r3, [sp, #28]
90015190:	9b04      	ldr	r3, [sp, #16]
90015192:	2b00      	cmp	r3, #0
90015194:	d052      	beq.n	9001523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90015196:	9903      	ldr	r1, [sp, #12]
90015198:	4620      	mov	r0, r4
9001519a:	f7ff fd26 	bl	90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>
9001519e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
900151a2:	b1c0      	cbz	r0, 900151d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900151a4:	f9b4 e000 	ldrsh.w	lr, [r4]
900151a8:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900151ac:	4576      	cmp	r6, lr
900151ae:	dc22      	bgt.n	900151f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900151b0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
900151b4:	44f4      	add	ip, lr
900151b6:	fa0f fc8c 	sxth.w	ip, ip
900151ba:	45e0      	cmp	r8, ip
900151bc:	db1b      	blt.n	900151f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
900151be:	428f      	cmp	r7, r1
900151c0:	fa1f fc81 	uxth.w	ip, r1
900151c4:	88e1      	ldrh	r1, [r4, #6]
900151c6:	dc0d      	bgt.n	900151e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900151c8:	ebaa 0c0c 	sub.w	ip, sl, ip
900151cc:	f8a4 9002 	strh.w	r9, [r4, #2]
900151d0:	eba1 010c 	sub.w	r1, r1, ip
900151d4:	80e1      	strh	r1, [r4, #6]
900151d6:	4628      	mov	r0, r5
900151d8:	9904      	ldr	r1, [sp, #16]
900151da:	3c08      	subs	r4, #8
900151dc:	4605      	mov	r5, r0
900151de:	3901      	subs	r1, #1
900151e0:	9104      	str	r1, [sp, #16]
900151e2:	e7d3      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
900151e4:	4461      	add	r1, ip
900151e6:	b209      	sxth	r1, r1
900151e8:	4549      	cmp	r1, r9
900151ea:	dcf5      	bgt.n	900151d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900151ec:	eba2 0c0c 	sub.w	ip, r2, ip
900151f0:	f8a4 c006 	strh.w	ip, [r4, #6]
900151f4:	e7ef      	b.n	900151d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900151f6:	428f      	cmp	r7, r1
900151f8:	dcee      	bgt.n	900151d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
900151fa:	f8b4 c006 	ldrh.w	ip, [r4, #6]
900151fe:	4461      	add	r1, ip
90015200:	b209      	sxth	r1, r1
90015202:	4589      	cmp	r9, r1
90015204:	dbe8      	blt.n	900151d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015206:	4576      	cmp	r6, lr
90015208:	fa1f fc8e 	uxth.w	ip, lr
9001520c:	88a1      	ldrh	r1, [r4, #4]
9001520e:	dc07      	bgt.n	90015220 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015210:	eba3 0c0c 	sub.w	ip, r3, ip
90015214:	f8a4 8000 	strh.w	r8, [r4]
90015218:	eba1 010c 	sub.w	r1, r1, ip
9001521c:	80a1      	strh	r1, [r4, #4]
9001521e:	e7da      	b.n	900151d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015220:	4461      	add	r1, ip
90015222:	b209      	sxth	r1, r1
90015224:	4588      	cmp	r8, r1
90015226:	dbd7      	blt.n	900151d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015228:	9905      	ldr	r1, [sp, #20]
9001522a:	eba1 0c0c 	sub.w	ip, r1, ip
9001522e:	f8a4 c004 	strh.w	ip, [r4, #4]
90015232:	e7d0      	b.n	900151d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015234:	24023562 	.word	0x24023562
90015238:	24023560 	.word	0x24023560
9001523c:	2d00      	cmp	r5, #0
9001523e:	f000 816d 	beq.w	9001551c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015242:	9b06      	ldr	r3, [sp, #24]
90015244:	445b      	add	r3, fp
90015246:	461c      	mov	r4, r3
90015248:	9b02      	ldr	r3, [sp, #8]
9001524a:	3301      	adds	r3, #1
9001524c:	f000 8166 	beq.w	9001551c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
90015250:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
90015254:	9803      	ldr	r0, [sp, #12]
90015256:	4629      	mov	r1, r5
90015258:	f7ff fd3a 	bl	90014cd0 <_ZNK8touchgfx4Rect8includesERKS0_>
9001525c:	b120      	cbz	r0, 90015268 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
9001525e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
90015262:	9801      	ldr	r0, [sp, #4]
90015264:	f7ff feb0 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015268:	9903      	ldr	r1, [sp, #12]
9001526a:	4628      	mov	r0, r5
9001526c:	f7ff fcbd 	bl	90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>
90015270:	2800      	cmp	r0, #0
90015272:	f000 809c 	beq.w	900153ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
90015276:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
9001527a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
9001527e:	fa1f f189 	uxth.w	r1, r9
90015282:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
90015286:	9309      	str	r3, [sp, #36]	; 0x24
90015288:	eb01 0c03 	add.w	ip, r1, r3
9001528c:	b283      	uxth	r3, r0
9001528e:	4548      	cmp	r0, r9
90015290:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90015294:	fa1f fa8c 	uxth.w	sl, ip
90015298:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001529c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
900152a0:	eb03 050c 	add.w	r5, r3, ip
900152a4:	b2ad      	uxth	r5, r5
900152a6:	9505      	str	r5, [sp, #20]
900152a8:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
900152ac:	9504      	str	r5, [sp, #16]
900152ae:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
900152b2:	f340 8099 	ble.w	900153e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
900152b6:	1a5b      	subs	r3, r3, r1
900152b8:	4596      	cmp	lr, r2
900152ba:	fa0f f08a 	sxth.w	r0, sl
900152be:	b29b      	uxth	r3, r3
900152c0:	b21e      	sxth	r6, r3
900152c2:	dd2e      	ble.n	90015322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
900152c4:	9f02      	ldr	r7, [sp, #8]
900152c6:	fa1f fe8e 	uxth.w	lr, lr
900152ca:	b292      	uxth	r2, r2
900152cc:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
900152d0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
900152d4:	9f04      	ldr	r7, [sp, #16]
900152d6:	ebae 0102 	sub.w	r1, lr, r2
900152da:	44a6      	add	lr, r4
900152dc:	1a3f      	subs	r7, r7, r0
900152de:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
900152e2:	b289      	uxth	r1, r1
900152e4:	4402      	add	r2, r0
900152e6:	fa0f fe8e 	sxth.w	lr, lr
900152ea:	b20d      	sxth	r5, r1
900152ec:	b212      	sxth	r2, r2
900152ee:	436f      	muls	r7, r5
900152f0:	ebae 0202 	sub.w	r2, lr, r2
900152f4:	4372      	muls	r2, r6
900152f6:	4297      	cmp	r7, r2
900152f8:	db09      	blt.n	9001530e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
900152fa:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
900152fe:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90015302:	449c      	add	ip, r3
90015304:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90015308:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001530c:	e686      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001530e:	4421      	add	r1, r4
90015310:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90015314:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90015318:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001531c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90015320:	e67c      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015322:	9f04      	ldr	r7, [sp, #16]
90015324:	42b8      	cmp	r0, r7
90015326:	da27      	bge.n	90015378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015328:	9902      	ldr	r1, [sp, #8]
9001532a:	1a3f      	subs	r7, r7, r0
9001532c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
90015330:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
90015334:	eb05 010e 	add.w	r1, r5, lr
90015338:	fa1f f881 	uxth.w	r8, r1
9001533c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
90015340:	4411      	add	r1, r2
90015342:	fa0f f988 	sxth.w	r9, r8
90015346:	eba2 020e 	sub.w	r2, r2, lr
9001534a:	eba1 0108 	sub.w	r1, r1, r8
9001534e:	4372      	muls	r2, r6
90015350:	b289      	uxth	r1, r1
90015352:	fa0f f881 	sxth.w	r8, r1
90015356:	fb08 f707 	mul.w	r7, r8, r7
9001535a:	42ba      	cmp	r2, r7
9001535c:	dc06      	bgt.n	9001536c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
9001535e:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
90015362:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
90015366:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
9001536a:	e7ca      	b.n	90015302 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
9001536c:	4429      	add	r1, r5
9001536e:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
90015372:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90015376:	e651      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015378:	9805      	ldr	r0, [sp, #20]
9001537a:	2d06      	cmp	r5, #6
9001537c:	ebaa 0000 	sub.w	r0, sl, r0
90015380:	b280      	uxth	r0, r0
90015382:	fa0f fe80 	sxth.w	lr, r0
90015386:	d817      	bhi.n	900153b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
90015388:	9b04      	ldr	r3, [sp, #16]
9001538a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
9001538e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90015392:	1c6b      	adds	r3, r5, #1
90015394:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90015398:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001539c:	9b01      	ldr	r3, [sp, #4]
9001539e:	9801      	ldr	r0, [sp, #4]
900153a0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900153a4:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
900153a8:	805a      	strh	r2, [r3, #2]
900153aa:	809e      	strh	r6, [r3, #4]
900153ac:	80d9      	strh	r1, [r3, #6]
900153ae:	9b02      	ldr	r3, [sp, #8]
900153b0:	3c08      	subs	r4, #8
900153b2:	3b01      	subs	r3, #1
900153b4:	9302      	str	r3, [sp, #8]
900153b6:	e747      	b.n	90015248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
900153b8:	9a02      	ldr	r2, [sp, #8]
900153ba:	45b6      	cmp	lr, r6
900153bc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900153c0:	db0d      	blt.n	900153de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
900153c2:	449c      	add	ip, r3
900153c4:	445a      	add	r2, fp
900153c6:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900153ca:	fa1f fc8c 	uxth.w	ip, ip
900153ce:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
900153d2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
900153d6:	448c      	add	ip, r1
900153d8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
900153dc:	e61e      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900153de:	445a      	add	r2, fp
900153e0:	4484      	add	ip, r0
900153e2:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
900153e6:	e78f      	b.n	90015308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900153e8:	fa1f f18e 	uxth.w	r1, lr
900153ec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
900153f0:	b293      	uxth	r3, r2
900153f2:	4596      	cmp	lr, r2
900153f4:	eb01 0806 	add.w	r8, r1, r6
900153f8:	9306      	str	r3, [sp, #24]
900153fa:	fa1f f888 	uxth.w	r8, r8
900153fe:	9f06      	ldr	r7, [sp, #24]
90015400:	fa0f f388 	sxth.w	r3, r8
90015404:	9307      	str	r3, [sp, #28]
90015406:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001540a:	443b      	add	r3, r7
9001540c:	b29b      	uxth	r3, r3
9001540e:	9308      	str	r3, [sp, #32]
90015410:	da24      	bge.n	9001545c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015412:	9905      	ldr	r1, [sp, #20]
90015414:	eba3 0308 	sub.w	r3, r3, r8
90015418:	eba2 020e 	sub.w	r2, r2, lr
9001541c:	eba9 0000 	sub.w	r0, r9, r0
90015420:	ebaa 0401 	sub.w	r4, sl, r1
90015424:	b29b      	uxth	r3, r3
90015426:	b2a4      	uxth	r4, r4
90015428:	b219      	sxth	r1, r3
9001542a:	b225      	sxth	r5, r4
9001542c:	4348      	muls	r0, r1
9001542e:	436a      	muls	r2, r5
90015430:	4282      	cmp	r2, r0
90015432:	9a02      	ldr	r2, [sp, #8]
90015434:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015438:	445a      	add	r2, fp
9001543a:	dc06      	bgt.n	9001544a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
9001543c:	9b07      	ldr	r3, [sp, #28]
9001543e:	44a4      	add	ip, r4
90015440:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
90015444:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
90015448:	e75e      	b.n	90015308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
9001544a:	9904      	ldr	r1, [sp, #16]
9001544c:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
90015450:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
90015454:	4433      	add	r3, r6
90015456:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001545a:	e5df      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001545c:	9f06      	ldr	r7, [sp, #24]
9001545e:	9b04      	ldr	r3, [sp, #16]
90015460:	1bc9      	subs	r1, r1, r7
90015462:	fa0f f78a 	sxth.w	r7, sl
90015466:	b289      	uxth	r1, r1
90015468:	429f      	cmp	r7, r3
9001546a:	fa0f fe81 	sxth.w	lr, r1
9001546e:	dd23      	ble.n	900154b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
90015470:	9a05      	ldr	r2, [sp, #20]
90015472:	eba9 0000 	sub.w	r0, r9, r0
90015476:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
9001547a:	ebaa 0202 	sub.w	r2, sl, r2
9001547e:	9d07      	ldr	r5, [sp, #28]
90015480:	fb0e f000 	mul.w	r0, lr, r0
90015484:	b292      	uxth	r2, r2
90015486:	eba5 0a03 	sub.w	sl, r5, r3
9001548a:	9b02      	ldr	r3, [sp, #8]
9001548c:	b214      	sxth	r4, r2
9001548e:	00db      	lsls	r3, r3, #3
90015490:	fb04 fa0a 	mul.w	sl, r4, sl
90015494:	445b      	add	r3, fp
90015496:	4550      	cmp	r0, sl
90015498:	db03      	blt.n	900154a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001549a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001549e:	4494      	add	ip, r2
900154a0:	e732      	b.n	90015308 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900154a2:	9a04      	ldr	r2, [sp, #16]
900154a4:	4431      	add	r1, r6
900154a6:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
900154aa:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
900154ae:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
900154b2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
900154b6:	e75c      	b.n	90015372 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
900154b8:	9b08      	ldr	r3, [sp, #32]
900154ba:	2d06      	cmp	r5, #6
900154bc:	eba3 0308 	sub.w	r3, r3, r8
900154c0:	b29b      	uxth	r3, r3
900154c2:	b218      	sxth	r0, r3
900154c4:	d813      	bhi.n	900154ee <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
900154c6:	9b07      	ldr	r3, [sp, #28]
900154c8:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
900154cc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
900154d0:	1c6b      	adds	r3, r5, #1
900154d2:	9901      	ldr	r1, [sp, #4]
900154d4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
900154d8:	9b01      	ldr	r3, [sp, #4]
900154da:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
900154de:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900154e2:	805a      	strh	r2, [r3, #2]
900154e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900154e6:	f8a3 e006 	strh.w	lr, [r3, #6]
900154ea:	809a      	strh	r2, [r3, #4]
900154ec:	e75f      	b.n	900153ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900154ee:	9c02      	ldr	r4, [sp, #8]
900154f0:	4570      	cmp	r0, lr
900154f2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900154f6:	db0d      	blt.n	90015514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
900154f8:	4431      	add	r1, r6
900154fa:	9b06      	ldr	r3, [sp, #24]
900154fc:	445c      	add	r4, fp
900154fe:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90015502:	b289      	uxth	r1, r1
90015504:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90015508:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001550c:	4419      	add	r1, r3
9001550e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90015512:	e583      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015514:	445c      	add	r4, fp
90015516:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
9001551a:	e79b      	b.n	90015454 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001551c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015520:	f64f 76ff 	movw	r6, #65535	; 0xffff
90015524:	1e65      	subs	r5, r4, #1
90015526:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001552a:	b2ad      	uxth	r5, r5
9001552c:	42b5      	cmp	r5, r6
9001552e:	d044      	beq.n	900155ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
90015530:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
90015534:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
90015538:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001553c:	4282      	cmp	r2, r0
9001553e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
90015542:	d11f      	bne.n	90015584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015544:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
90015548:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001554c:	459c      	cmp	ip, r3
9001554e:	d119      	bne.n	90015584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
90015550:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
90015554:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90015558:	19d8      	adds	r0, r3, r7
9001555a:	b200      	sxth	r0, r0
9001555c:	4288      	cmp	r0, r1
9001555e:	d109      	bne.n	90015574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90015560:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
90015564:	4413      	add	r3, r2
90015566:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001556a:	4629      	mov	r1, r5
9001556c:	9801      	ldr	r0, [sp, #4]
9001556e:	f7ff fd2b 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015572:	e003      	b.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015574:	4411      	add	r1, r2
90015576:	b209      	sxth	r1, r1
90015578:	42b9      	cmp	r1, r7
9001557a:	d0f3      	beq.n	90015564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
9001557c:	3d01      	subs	r5, #1
9001557e:	3c08      	subs	r4, #8
90015580:	b2ad      	uxth	r5, r5
90015582:	e7d3      	b.n	9001552c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
90015584:	42b9      	cmp	r1, r7
90015586:	d1f9      	bne.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015588:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
9001558c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015590:	4299      	cmp	r1, r3
90015592:	d1f3      	bne.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015594:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90015598:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001559c:	181f      	adds	r7, r3, r0
9001559e:	b23f      	sxth	r7, r7
900155a0:	42ba      	cmp	r2, r7
900155a2:	d105      	bne.n	900155b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
900155a4:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
900155a8:	440b      	add	r3, r1
900155aa:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900155ae:	e7dc      	b.n	9001556a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
900155b0:	440a      	add	r2, r1
900155b2:	b212      	sxth	r2, r2
900155b4:	4290      	cmp	r0, r2
900155b6:	d1e1      	bne.n	9001557c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900155b8:	e7f6      	b.n	900155a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
900155ba:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
900155be:	2e07      	cmp	r6, #7
900155c0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
900155c4:	d812      	bhi.n	900155ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
900155c6:	1c75      	adds	r5, r6, #1
900155c8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900155cc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
900155d0:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
900155d4:	9d01      	ldr	r5, [sp, #4]
900155d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900155da:	442c      	add	r4, r5
900155dc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
900155e0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
900155e4:	8061      	strh	r1, [r4, #2]
900155e6:	80a2      	strh	r2, [r4, #4]
900155e8:	80e3      	strh	r3, [r4, #6]
900155ea:	e581      	b.n	900150f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900155ec:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
900155f0:	3e01      	subs	r6, #1
900155f2:	445c      	add	r4, fp
900155f4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
900155f8:	f04f 37ff 	mov.w	r7, #4294967295
900155fc:	2500      	movs	r5, #0
900155fe:	9305      	str	r3, [sp, #20]
90015600:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015604:	1e72      	subs	r2, r6, #1
90015606:	9302      	str	r3, [sp, #8]
90015608:	4691      	mov	r9, r2
9001560a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001560e:	9304      	str	r3, [sp, #16]
90015610:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90015614:	f1b9 3fff 	cmp.w	r9, #4294967295
90015618:	6818      	ldr	r0, [r3, #0]
9001561a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001561e:	9207      	str	r2, [sp, #28]
90015620:	bf16      	itet	ne
90015622:	9905      	ldrne	r1, [sp, #20]
90015624:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015628:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001562c:	9306      	str	r3, [sp, #24]
9001562e:	f8be 1006 	ldrh.w	r1, [lr, #6]
90015632:	f8be 8004 	ldrh.w	r8, [lr, #4]
90015636:	fb18 f801 	smulbb	r8, r8, r1
9001563a:	6859      	ldr	r1, [r3, #4]
9001563c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90015640:	4671      	mov	r1, lr
90015642:	a80c      	add	r0, sp, #48	; 0x30
90015644:	f7ff fb6a 	bl	90014d1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015648:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
9001564c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90015650:	f04f 0c08 	mov.w	ip, #8
90015654:	9b04      	ldr	r3, [sp, #16]
90015656:	9a02      	ldr	r2, [sp, #8]
90015658:	fb10 f001 	smulbb	r0, r0, r1
9001565c:	fb02 8803 	mla	r8, r2, r3, r8
90015660:	eba0 0108 	sub.w	r1, r0, r8
90015664:	fb90 f0fc 	sdiv	r0, r0, ip
90015668:	4288      	cmp	r0, r1
9001566a:	dc20      	bgt.n	900156ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
9001566c:	4551      	cmp	r1, sl
9001566e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90015672:	da03      	bge.n	9001567c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
90015674:	b1d9      	cbz	r1, 900156ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
90015676:	468a      	mov	sl, r1
90015678:	464f      	mov	r7, r9
9001567a:	4635      	mov	r5, r6
9001567c:	f109 39ff 	add.w	r9, r9, #4294967295
90015680:	f119 0f02 	cmn.w	r9, #2
90015684:	d1c6      	bne.n	90015614 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
90015686:	4616      	mov	r6, r2
90015688:	3201      	adds	r2, #1
9001568a:	f1a4 0408 	sub.w	r4, r4, #8
9001568e:	d1b7      	bne.n	90015600 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90015690:	9b01      	ldr	r3, [sp, #4]
90015692:	b2ac      	uxth	r4, r5
90015694:	00ed      	lsls	r5, r5, #3
90015696:	1958      	adds	r0, r3, r5
90015698:	1c7b      	adds	r3, r7, #1
9001569a:	d10b      	bne.n	900156b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
9001569c:	4601      	mov	r1, r0
9001569e:	9803      	ldr	r0, [sp, #12]
900156a0:	f7ff fb3c 	bl	90014d1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900156a4:	4621      	mov	r1, r4
900156a6:	9801      	ldr	r0, [sp, #4]
900156a8:	f7ff fc8e 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900156ac:	e4b6      	b.n	9001501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900156ae:	464f      	mov	r7, r9
900156b0:	4635      	mov	r5, r6
900156b2:	e7ed      	b.n	90015690 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
900156b4:	9b01      	ldr	r3, [sp, #4]
900156b6:	00ff      	lsls	r7, r7, #3
900156b8:	445d      	add	r5, fp
900156ba:	19d9      	adds	r1, r3, r7
900156bc:	445f      	add	r7, fp
900156be:	f7ff fb2d 	bl	90014d1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900156c2:	9b03      	ldr	r3, [sp, #12]
900156c4:	cb03      	ldmia	r3!, {r0, r1}
900156c6:	9b03      	ldr	r3, [sp, #12]
900156c8:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
900156cc:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
900156d0:	f855 0fac 	ldr.w	r0, [r5, #172]!
900156d4:	6869      	ldr	r1, [r5, #4]
900156d6:	c303      	stmia	r3!, {r0, r1}
900156d8:	e7e4      	b.n	900156a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
900156da:	bf00      	nop

900156dc <_ZN8touchgfx11Application15drawCachedAreasEv>:
900156dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900156e0:	f500 7698 	add.w	r6, r0, #304	; 0x130
900156e4:	b09b      	sub	sp, #108	; 0x6c
900156e6:	4604      	mov	r4, r0
900156e8:	4630      	mov	r0, r6
900156ea:	f7fa fc80 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
900156ee:	4605      	mov	r5, r0
900156f0:	b948      	cbnz	r0, 90015706 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
900156f2:	6823      	ldr	r3, [r4, #0]
900156f4:	4620      	mov	r0, r4
900156f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
900156f8:	e896 0006 	ldmia.w	r6, {r1, r2}
900156fc:	4798      	blx	r3
900156fe:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90015702:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90015706:	4bc5      	ldr	r3, [pc, #788]	; (90015a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90015708:	681b      	ldr	r3, [r3, #0]
9001570a:	2b00      	cmp	r3, #0
9001570c:	d03f      	beq.n	9001578e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001570e:	4dc4      	ldr	r5, [pc, #784]	; (90015a20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90015710:	4628      	mov	r0, r5
90015712:	f7fa fc6c 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90015716:	4606      	mov	r6, r0
90015718:	2800      	cmp	r0, #0
9001571a:	d138      	bne.n	9001578e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001571c:	4628      	mov	r0, r5
9001571e:	f7ff f973 	bl	90014a08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015722:	6823      	ldr	r3, [r4, #0]
90015724:	6829      	ldr	r1, [r5, #0]
90015726:	4620      	mov	r0, r4
90015728:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001572a:	686a      	ldr	r2, [r5, #4]
9001572c:	4798      	blx	r3
9001572e:	802e      	strh	r6, [r5, #0]
90015730:	806e      	strh	r6, [r5, #2]
90015732:	80ae      	strh	r6, [r5, #4]
90015734:	80ee      	strh	r6, [r5, #6]
90015736:	f10d 0824 	add.w	r8, sp, #36	; 0x24
9001573a:	4dba      	ldr	r5, [pc, #744]	; (90015a24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
9001573c:	4640      	mov	r0, r8
9001573e:	f7ff fbe7 	bl	90014f10 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90015742:	882e      	ldrh	r6, [r5, #0]
90015744:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90015748:	f104 00ac 	add.w	r0, r4, #172	; 0xac
9001574c:	4633      	mov	r3, r6
9001574e:	42bb      	cmp	r3, r7
90015750:	d224      	bcs.n	9001579c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90015752:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
90015756:	2907      	cmp	r1, #7
90015758:	d816      	bhi.n	90015788 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
9001575a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
9001575e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90015762:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90015766:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
9001576a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
9001576e:	1c4a      	adds	r2, r1, #1
90015770:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
90015774:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
90015778:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
9001577c:	f8a2 a002 	strh.w	sl, [r2, #2]
90015780:	f8a2 e004 	strh.w	lr, [r2, #4]
90015784:	f8a2 c006 	strh.w	ip, [r2, #6]
90015788:	3301      	adds	r3, #1
9001578a:	b29b      	uxth	r3, r3
9001578c:	e7df      	b.n	9001574e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
9001578e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015792:	2b00      	cmp	r3, #0
90015794:	d1cf      	bne.n	90015736 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90015796:	b01b      	add	sp, #108	; 0x6c
90015798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001579c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
900157a0:	42b3      	cmp	r3, r6
900157a2:	d90c      	bls.n	900157be <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
900157a4:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
900157a8:	6822      	ldr	r2, [r4, #0]
900157aa:	3601      	adds	r6, #1
900157ac:	4620      	mov	r0, r4
900157ae:	6c17      	ldr	r7, [r2, #64]	; 0x40
900157b0:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
900157b4:	b2b6      	uxth	r6, r6
900157b6:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
900157ba:	47b8      	blx	r7
900157bc:	e7ee      	b.n	9001579c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900157be:	4a9a      	ldr	r2, [pc, #616]	; (90015a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
900157c0:	6813      	ldr	r3, [r2, #0]
900157c2:	4691      	mov	r9, r2
900157c4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
900157c8:	2b01      	cmp	r3, #1
900157ca:	f040 80e0 	bne.w	9001598e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
900157ce:	8829      	ldrh	r1, [r5, #0]
900157d0:	2600      	movs	r6, #0
900157d2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900157d6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
900157da:	33ae      	adds	r3, #174	; 0xae
900157dc:	428f      	cmp	r7, r1
900157de:	f103 0308 	add.w	r3, r3, #8
900157e2:	dd0a      	ble.n	900157fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
900157e4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
900157e8:	3101      	adds	r1, #1
900157ea:	f833 0c08 	ldrh.w	r0, [r3, #-8]
900157ee:	4402      	add	r2, r0
900157f0:	b212      	sxth	r2, r2
900157f2:	4296      	cmp	r6, r2
900157f4:	bfb8      	it	lt
900157f6:	4616      	movlt	r6, r2
900157f8:	e7f0      	b.n	900157dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
900157fa:	4b8c      	ldr	r3, [pc, #560]	; (90015a2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
900157fc:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90015a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90015800:	881b      	ldrh	r3, [r3, #0]
90015802:	2b0f      	cmp	r3, #15
90015804:	bf8c      	ite	hi
90015806:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001580a:	f04f 0b01 	movls.w	fp, #1
9001580e:	2300      	movs	r3, #0
90015810:	e9cd 3305 	strd	r3, r3, [sp, #20]
90015814:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90015818:	f8bd 001a 	ldrh.w	r0, [sp, #26]
9001581c:	4b82      	ldr	r3, [pc, #520]	; (90015a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001581e:	4438      	add	r0, r7
90015820:	b207      	sxth	r7, r0
90015822:	6818      	ldr	r0, [r3, #0]
90015824:	42b7      	cmp	r7, r6
90015826:	6803      	ldr	r3, [r0, #0]
90015828:	f280 8083 	bge.w	90015932 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001582c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
90015830:	4798      	blx	r3
90015832:	eb07 030b 	add.w	r3, r7, fp
90015836:	4298      	cmp	r0, r3
90015838:	da07      	bge.n	9001584a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001583a:	42b0      	cmp	r0, r6
9001583c:	da05      	bge.n	9001584a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
9001583e:	4287      	cmp	r7, r0
90015840:	dd6c      	ble.n	9001591c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015842:	2f00      	cmp	r7, #0
90015844:	dd6a      	ble.n	9001591c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
90015846:	4630      	mov	r0, r6
90015848:	e004      	b.n	90015854 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
9001584a:	4287      	cmp	r7, r0
9001584c:	dcfb      	bgt.n	90015846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
9001584e:	42b0      	cmp	r0, r6
90015850:	bfa8      	it	ge
90015852:	4630      	movge	r0, r6
90015854:	4b76      	ldr	r3, [pc, #472]	; (90015a30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
90015856:	1bc0      	subs	r0, r0, r7
90015858:	2200      	movs	r2, #0
9001585a:	f8ad 7016 	strh.w	r7, [sp, #22]
9001585e:	f9b3 3000 	ldrsh.w	r3, [r3]
90015862:	882f      	ldrh	r7, [r5, #0]
90015864:	f8ad 2014 	strh.w	r2, [sp, #20]
90015868:	f8ad 3018 	strh.w	r3, [sp, #24]
9001586c:	f8ad 001a 	strh.w	r0, [sp, #26]
90015870:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015874:	42bb      	cmp	r3, r7
90015876:	d9cd      	bls.n	90015814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015878:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
9001587c:	ab07      	add	r3, sp, #28
9001587e:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015882:	6851      	ldr	r1, [r2, #4]
90015884:	c303      	stmia	r3!, {r0, r1}
90015886:	a905      	add	r1, sp, #20
90015888:	a807      	add	r0, sp, #28
9001588a:	f7ff f9ae 	bl	90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>
9001588e:	2800      	cmp	r0, #0
90015890:	d04c      	beq.n	9001592c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015892:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015896:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
9001589a:	f8bd a020 	ldrh.w	sl, [sp, #32]
9001589e:	4686      	mov	lr, r0
900158a0:	4290      	cmp	r0, r2
900158a2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
900158a6:	4450      	add	r0, sl
900158a8:	f8bd a018 	ldrh.w	sl, [sp, #24]
900158ac:	bfb8      	it	lt
900158ae:	4696      	movlt	lr, r2
900158b0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900158b4:	4452      	add	r2, sl
900158b6:	b280      	uxth	r0, r0
900158b8:	4299      	cmp	r1, r3
900158ba:	468c      	mov	ip, r1
900158bc:	b292      	uxth	r2, r2
900158be:	9302      	str	r3, [sp, #8]
900158c0:	bfb8      	it	lt
900158c2:	469c      	movlt	ip, r3
900158c4:	b203      	sxth	r3, r0
900158c6:	fa0f fa82 	sxth.w	sl, r2
900158ca:	f8ad e01c 	strh.w	lr, [sp, #28]
900158ce:	f8ad c01e 	strh.w	ip, [sp, #30]
900158d2:	4553      	cmp	r3, sl
900158d4:	bfb8      	it	lt
900158d6:	4602      	movlt	r2, r0
900158d8:	9b02      	ldr	r3, [sp, #8]
900158da:	eba2 020e 	sub.w	r2, r2, lr
900158de:	f8ad 2020 	strh.w	r2, [sp, #32]
900158e2:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
900158e6:	4411      	add	r1, r2
900158e8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
900158ec:	4413      	add	r3, r2
900158ee:	b289      	uxth	r1, r1
900158f0:	b29b      	uxth	r3, r3
900158f2:	b208      	sxth	r0, r1
900158f4:	b21a      	sxth	r2, r3
900158f6:	4290      	cmp	r0, r2
900158f8:	bfb8      	it	lt
900158fa:	460b      	movlt	r3, r1
900158fc:	eba3 030c 	sub.w	r3, r3, ip
90015900:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90015904:	a807      	add	r0, sp, #28
90015906:	f7fa fb72 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001590a:	b920      	cbnz	r0, 90015916 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
9001590c:	6823      	ldr	r3, [r4, #0]
9001590e:	a907      	add	r1, sp, #28
90015910:	4620      	mov	r0, r4
90015912:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015914:	4798      	blx	r3
90015916:	3701      	adds	r7, #1
90015918:	b2bf      	uxth	r7, r7
9001591a:	e7a9      	b.n	90015870 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
9001591c:	f8d9 0000 	ldr.w	r0, [r9]
90015920:	2101      	movs	r1, #1
90015922:	6803      	ldr	r3, [r0, #0]
90015924:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90015928:	4798      	blx	r3
9001592a:	e773      	b.n	90015814 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
9001592c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90015930:	e7e8      	b.n	90015904 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90015932:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90015934:	4798      	blx	r3
90015936:	4b3f      	ldr	r3, [pc, #252]	; (90015a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90015938:	781b      	ldrb	r3, [r3, #0]
9001593a:	2b00      	cmp	r3, #0
9001593c:	f43f af2b 	beq.w	90015796 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015940:	2300      	movs	r3, #0
90015942:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90015946:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
9001594a:	882b      	ldrh	r3, [r5, #0]
9001594c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90015950:	42ab      	cmp	r3, r5
90015952:	f4bf af20 	bcs.w	90015796 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015956:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
9001595a:	2907      	cmp	r1, #7
9001595c:	d814      	bhi.n	90015988 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
9001595e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015962:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015966:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
9001596a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
9001596e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015972:	1c4a      	adds	r2, r1, #1
90015974:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90015978:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
9001597c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015980:	f8a2 c002 	strh.w	ip, [r2, #2]
90015984:	8097      	strh	r7, [r2, #4]
90015986:	80d6      	strh	r6, [r2, #6]
90015988:	3301      	adds	r3, #1
9001598a:	b29b      	uxth	r3, r3
9001598c:	e7e0      	b.n	90015950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
9001598e:	2b02      	cmp	r3, #2
90015990:	f040 8133 	bne.w	90015bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015994:	4b28      	ldr	r3, [pc, #160]	; (90015a38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015996:	f104 0aac 	add.w	sl, r4, #172	; 0xac
9001599a:	781b      	ldrb	r3, [r3, #0]
9001599c:	2b01      	cmp	r3, #1
9001599e:	f000 8098 	beq.w	90015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
900159a2:	882a      	ldrh	r2, [r5, #0]
900159a4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
900159a8:	3201      	adds	r2, #1
900159aa:	b292      	uxth	r2, r2
900159ac:	2900      	cmp	r1, #0
900159ae:	d0c2      	beq.n	90015936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
900159b0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
900159b4:	4694      	mov	ip, r2
900159b6:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
900159ba:	f04f 0900 	mov.w	r9, #0
900159be:	441e      	add	r6, r3
900159c0:	b236      	sxth	r6, r6
900159c2:	fa1f f38c 	uxth.w	r3, ip
900159c6:	ea4f 07c9 	mov.w	r7, r9, lsl #3
900159ca:	4299      	cmp	r1, r3
900159cc:	f240 80be 	bls.w	90015b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
900159d0:	4427      	add	r7, r4
900159d2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900159d6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
900159da:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
900159de:	4283      	cmp	r3, r0
900159e0:	f340 80a0 	ble.w	90015b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
900159e4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
900159e8:	46e1      	mov	r9, ip
900159ea:	4406      	add	r6, r0
900159ec:	b236      	sxth	r6, r6
900159ee:	429e      	cmp	r6, r3
900159f0:	bfa8      	it	ge
900159f2:	461e      	movge	r6, r3
900159f4:	f10c 0c01 	add.w	ip, ip, #1
900159f8:	e7e3      	b.n	900159c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
900159fa:	d10a      	bne.n	90015a12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
900159fc:	4562      	cmp	r2, ip
900159fe:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90015a02:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90015a06:	bfb8      	it	lt
90015a08:	4662      	movlt	r2, ip
90015a0a:	4288      	cmp	r0, r1
90015a0c:	bfb8      	it	lt
90015a0e:	461f      	movlt	r7, r3
90015a10:	e086      	b.n	90015b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015a12:	428a      	cmp	r2, r1
90015a14:	bfb8      	it	lt
90015a16:	460a      	movlt	r2, r1
90015a18:	e082      	b.n	90015b20 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015a1a:	bf00      	nop
90015a1c:	240235ac 	.word	0x240235ac
90015a20:	240235b8 	.word	0x240235b8
90015a24:	24000074 	.word	0x24000074
90015a28:	2402356c 	.word	0x2402356c
90015a2c:	24023562 	.word	0x24023562
90015a30:	24023560 	.word	0x24023560
90015a34:	2402356a 	.word	0x2402356a
90015a38:	24023564 	.word	0x24023564
90015a3c:	19a1      	adds	r1, r4, r6
90015a3e:	ab07      	add	r3, sp, #28
90015a40:	f851 0fac 	ldr.w	r0, [r1, #172]!
90015a44:	6849      	ldr	r1, [r1, #4]
90015a46:	c303      	stmia	r3!, {r0, r1}
90015a48:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015a4c:	a807      	add	r0, sp, #28
90015a4e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015a52:	2b13      	cmp	r3, #19
90015a54:	440b      	add	r3, r1
90015a56:	bfd8      	it	le
90015a58:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90015a5c:	1a9b      	subs	r3, r3, r2
90015a5e:	f8ad 201c 	strh.w	r2, [sp, #28]
90015a62:	f8ad 3020 	strh.w	r3, [sp, #32]
90015a66:	f7fe ffe9 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015a6a:	a807      	add	r0, sp, #28
90015a6c:	f7fa fabf 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90015a70:	bb78      	cbnz	r0, 90015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015a72:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90015a76:	4426      	add	r6, r4
90015a78:	f8d9 0000 	ldr.w	r0, [r9]
90015a7c:	f1bc 0f14 	cmp.w	ip, #20
90015a80:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015a84:	f8d0 e000 	ldr.w	lr, [r0]
90015a88:	bfa8      	it	ge
90015a8a:	f04f 0c14 	movge.w	ip, #20
90015a8e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90015a92:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015a96:	fa1f fc8c 	uxth.w	ip, ip
90015a9a:	f8cd c000 	str.w	ip, [sp]
90015a9e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90015aa2:	47d8      	blx	fp
90015aa4:	4683      	mov	fp, r0
90015aa6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015aaa:	a807      	add	r0, sp, #28
90015aac:	f7fe ffac 	bl	90014a08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015ab0:	6823      	ldr	r3, [r4, #0]
90015ab2:	4620      	mov	r0, r4
90015ab4:	a907      	add	r1, sp, #28
90015ab6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015ab8:	4798      	blx	r3
90015aba:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015abe:	eba0 000b 	sub.w	r0, r0, fp
90015ac2:	b200      	sxth	r0, r0
90015ac4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90015ac8:	b918      	cbnz	r0, 90015ad2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015aca:	b2b9      	uxth	r1, r7
90015acc:	4650      	mov	r0, sl
90015ace:	f7ff fa7b 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015ad2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90015ad6:	f1bb 0f00 	cmp.w	fp, #0
90015ada:	f43f af2c 	beq.w	90015936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015ade:	882b      	ldrh	r3, [r5, #0]
90015ae0:	2700      	movs	r7, #0
90015ae2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90015ae6:	3301      	adds	r3, #1
90015ae8:	b29b      	uxth	r3, r3
90015aea:	b299      	uxth	r1, r3
90015aec:	00fe      	lsls	r6, r7, #3
90015aee:	458b      	cmp	fp, r1
90015af0:	d9a4      	bls.n	90015a3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90015af2:	4426      	add	r6, r4
90015af4:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90015af8:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90015afc:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015b00:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90015b04:	4408      	add	r0, r1
90015b06:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90015b0a:	4461      	add	r1, ip
90015b0c:	b200      	sxth	r0, r0
90015b0e:	b209      	sxth	r1, r1
90015b10:	4288      	cmp	r0, r1
90015b12:	f6bf af72 	bge.w	900159fa <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90015b16:	4584      	cmp	ip, r0
90015b18:	4662      	mov	r2, ip
90015b1a:	461f      	mov	r7, r3
90015b1c:	bfb8      	it	lt
90015b1e:	4602      	movlt	r2, r0
90015b20:	3301      	adds	r3, #1
90015b22:	e7e2      	b.n	90015aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90015b24:	d10e      	bne.n	90015b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90015b26:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90015b2a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90015b2e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90015b32:	4473      	add	r3, lr
90015b34:	b21b      	sxth	r3, r3
90015b36:	429e      	cmp	r6, r3
90015b38:	bfa8      	it	ge
90015b3a:	461e      	movge	r6, r3
90015b3c:	4287      	cmp	r7, r0
90015b3e:	bfb8      	it	lt
90015b40:	46e1      	movlt	r9, ip
90015b42:	e757      	b.n	900159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015b44:	4286      	cmp	r6, r0
90015b46:	bfa8      	it	ge
90015b48:	4606      	movge	r6, r0
90015b4a:	e753      	b.n	900159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015b4c:	eb0a 0007 	add.w	r0, sl, r7
90015b50:	4427      	add	r7, r4
90015b52:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90015b56:	f1bb 0f13 	cmp.w	fp, #19
90015b5a:	bfdc      	itt	le
90015b5c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90015b60:	445e      	addle	r6, fp
90015b62:	e9cd 2102 	strd	r2, r1, [sp, #8]
90015b66:	bfd8      	it	le
90015b68:	b236      	sxthle	r6, r6
90015b6a:	f7fa fa40 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90015b6e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90015b72:	2800      	cmp	r0, #0
90015b74:	f47f af1a 	bne.w	900159ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90015b78:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90015b7c:	fa1f fb8b 	uxth.w	fp, fp
90015b80:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015b84:	1ab6      	subs	r6, r6, r2
90015b86:	4829      	ldr	r0, [pc, #164]	; (90015c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90015b88:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90015b8c:	2e14      	cmp	r6, #20
90015b8e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90015b92:	6800      	ldr	r0, [r0, #0]
90015b94:	bfa8      	it	ge
90015b96:	2614      	movge	r6, #20
90015b98:	f8ad 101c 	strh.w	r1, [sp, #28]
90015b9c:	f8ad 201e 	strh.w	r2, [sp, #30]
90015ba0:	b289      	uxth	r1, r1
90015ba2:	f8ad 3020 	strh.w	r3, [sp, #32]
90015ba6:	b2b6      	uxth	r6, r6
90015ba8:	f8d0 c000 	ldr.w	ip, [r0]
90015bac:	b292      	uxth	r2, r2
90015bae:	455e      	cmp	r6, fp
90015bb0:	bf94      	ite	ls
90015bb2:	9600      	strls	r6, [sp, #0]
90015bb4:	f8cd b000 	strhi.w	fp, [sp]
90015bb8:	b29b      	uxth	r3, r3
90015bba:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90015bbe:	47b0      	blx	r6
90015bc0:	6823      	ldr	r3, [r4, #0]
90015bc2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015bc6:	a907      	add	r1, sp, #28
90015bc8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015bca:	4620      	mov	r0, r4
90015bcc:	4798      	blx	r3
90015bce:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90015bd2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90015bd6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90015bda:	1a5b      	subs	r3, r3, r1
90015bdc:	440a      	add	r2, r1
90015bde:	b21b      	sxth	r3, r3
90015be0:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90015be4:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90015be8:	2b00      	cmp	r3, #0
90015bea:	f47f aeda 	bne.w	900159a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015bee:	fa1f f189 	uxth.w	r1, r9
90015bf2:	4650      	mov	r0, sl
90015bf4:	f7ff f9e8 	bl	90014fc8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015bf8:	e6d3      	b.n	900159a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015bfa:	882e      	ldrh	r6, [r5, #0]
90015bfc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015c00:	42b3      	cmp	r3, r6
90015c02:	f67f ae98 	bls.w	90015936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015c06:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90015c0a:	ab07      	add	r3, sp, #28
90015c0c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015c10:	6851      	ldr	r1, [r2, #4]
90015c12:	c303      	stmia	r3!, {r0, r1}
90015c14:	a807      	add	r0, sp, #28
90015c16:	f7fa f9ea 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
90015c1a:	b920      	cbnz	r0, 90015c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90015c1c:	6823      	ldr	r3, [r4, #0]
90015c1e:	a907      	add	r1, sp, #28
90015c20:	4620      	mov	r0, r4
90015c22:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015c24:	4798      	blx	r3
90015c26:	3601      	adds	r6, #1
90015c28:	b2b6      	uxth	r6, r6
90015c2a:	e7e7      	b.n	90015bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90015c2c:	2402356c 	.word	0x2402356c

90015c30 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90015c30:	4b03      	ldr	r3, [pc, #12]	; (90015c40 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90015c32:	2200      	movs	r2, #0
90015c34:	801a      	strh	r2, [r3, #0]
90015c36:	805a      	strh	r2, [r3, #2]
90015c38:	809a      	strh	r2, [r3, #4]
90015c3a:	80da      	strh	r2, [r3, #6]
90015c3c:	4770      	bx	lr
90015c3e:	bf00      	nop
90015c40:	240235b8 	.word	0x240235b8

90015c44 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90015c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015c48:	b09d      	sub	sp, #116	; 0x74
90015c4a:	4606      	mov	r6, r0
90015c4c:	4614      	mov	r4, r2
90015c4e:	468a      	mov	sl, r1
90015c50:	a803      	add	r0, sp, #12
90015c52:	461d      	mov	r5, r3
90015c54:	f000 fe5b 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90015c58:	6833      	ldr	r3, [r6, #0]
90015c5a:	4630      	mov	r0, r6
90015c5c:	f242 0b0b 	movw	fp, #8203	; 0x200b
90015c60:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015c62:	4798      	blx	r3
90015c64:	6833      	ldr	r3, [r6, #0]
90015c66:	4607      	mov	r7, r0
90015c68:	4630      	mov	r0, r6
90015c6a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015c6c:	4798      	blx	r3
90015c6e:	462a      	mov	r2, r5
90015c70:	2500      	movs	r5, #0
90015c72:	4621      	mov	r1, r4
90015c74:	9000      	str	r0, [sp, #0]
90015c76:	463b      	mov	r3, r7
90015c78:	462c      	mov	r4, r5
90015c7a:	46a9      	mov	r9, r5
90015c7c:	46a8      	mov	r8, r5
90015c7e:	a803      	add	r0, sp, #12
90015c80:	f000 fea0 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015c84:	2300      	movs	r3, #0
90015c86:	9302      	str	r3, [sp, #8]
90015c88:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015c8c:	429c      	cmp	r4, r3
90015c8e:	d002      	beq.n	90015c96 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90015c90:	455c      	cmp	r4, fp
90015c92:	bf18      	it	ne
90015c94:	4625      	movne	r5, r4
90015c96:	ab02      	add	r3, sp, #8
90015c98:	4632      	mov	r2, r6
90015c9a:	4651      	mov	r1, sl
90015c9c:	a803      	add	r0, sp, #12
90015c9e:	f001 f997 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015ca2:	4604      	mov	r4, r0
90015ca4:	b108      	cbz	r0, 90015caa <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90015ca6:	280a      	cmp	r0, #10
90015ca8:	d10a      	bne.n	90015cc0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90015caa:	45c1      	cmp	r9, r8
90015cac:	bf38      	it	cc
90015cae:	46c1      	movcc	r9, r8
90015cb0:	f04f 0800 	mov.w	r8, #0
90015cb4:	2c00      	cmp	r4, #0
90015cb6:	d1e5      	bne.n	90015c84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015cb8:	4648      	mov	r0, r9
90015cba:	b01d      	add	sp, #116	; 0x74
90015cbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015cc0:	9a02      	ldr	r2, [sp, #8]
90015cc2:	2a00      	cmp	r2, #0
90015cc4:	d0de      	beq.n	90015c84 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015cc6:	7b57      	ldrb	r7, [r2, #13]
90015cc8:	4629      	mov	r1, r5
90015cca:	6833      	ldr	r3, [r6, #0]
90015ccc:	007f      	lsls	r7, r7, #1
90015cce:	8894      	ldrh	r4, [r2, #4]
90015cd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015cd2:	f407 7080 	and.w	r0, r7, #256	; 0x100
90015cd6:	7a97      	ldrb	r7, [r2, #10]
90015cd8:	4307      	orrs	r7, r0
90015cda:	4630      	mov	r0, r6
90015cdc:	4798      	blx	r3
90015cde:	4438      	add	r0, r7
90015ce0:	4480      	add	r8, r0
90015ce2:	fa1f f888 	uxth.w	r8, r8
90015ce6:	e7e5      	b.n	90015cb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90015ce8 <_ZNK8touchgfx4Font12getCharWidthEt>:
90015ce8:	b508      	push	{r3, lr}
90015cea:	6803      	ldr	r3, [r0, #0]
90015cec:	68db      	ldr	r3, [r3, #12]
90015cee:	4798      	blx	r3
90015cf0:	b128      	cbz	r0, 90015cfe <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90015cf2:	7b43      	ldrb	r3, [r0, #13]
90015cf4:	7a80      	ldrb	r0, [r0, #10]
90015cf6:	005b      	lsls	r3, r3, #1
90015cf8:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015cfc:	4318      	orrs	r0, r3
90015cfe:	bd08      	pop	{r3, pc}

90015d00 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90015d00:	b40e      	push	{r1, r2, r3}
90015d02:	b5f0      	push	{r4, r5, r6, r7, lr}
90015d04:	b09e      	sub	sp, #120	; 0x78
90015d06:	4605      	mov	r5, r0
90015d08:	ab23      	add	r3, sp, #140	; 0x8c
90015d0a:	a805      	add	r0, sp, #20
90015d0c:	f853 4b04 	ldr.w	r4, [r3], #4
90015d10:	9303      	str	r3, [sp, #12]
90015d12:	f000 fdfc 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90015d16:	682b      	ldr	r3, [r5, #0]
90015d18:	4628      	mov	r0, r5
90015d1a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015d1c:	4798      	blx	r3
90015d1e:	682b      	ldr	r3, [r5, #0]
90015d20:	4606      	mov	r6, r0
90015d22:	4628      	mov	r0, r5
90015d24:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015d26:	4798      	blx	r3
90015d28:	4633      	mov	r3, r6
90015d2a:	4621      	mov	r1, r4
90015d2c:	ae1e      	add	r6, sp, #120	; 0x78
90015d2e:	2400      	movs	r4, #0
90015d30:	9000      	str	r0, [sp, #0]
90015d32:	9a03      	ldr	r2, [sp, #12]
90015d34:	a805      	add	r0, sp, #20
90015d36:	f000 fe45 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015d3a:	f846 4d68 	str.w	r4, [r6, #-104]!
90015d3e:	462a      	mov	r2, r5
90015d40:	4633      	mov	r3, r6
90015d42:	4621      	mov	r1, r4
90015d44:	a805      	add	r0, sp, #20
90015d46:	f001 f943 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015d4a:	b300      	cbz	r0, 90015d8e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90015d4c:	280a      	cmp	r0, #10
90015d4e:	d01a      	beq.n	90015d86 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015d50:	9f04      	ldr	r7, [sp, #16]
90015d52:	b1c7      	cbz	r7, 90015d86 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015d54:	7b78      	ldrb	r0, [r7, #13]
90015d56:	7a3b      	ldrb	r3, [r7, #8]
90015d58:	00c1      	lsls	r1, r0, #3
90015d5a:	88ea      	ldrh	r2, [r5, #6]
90015d5c:	f401 7180 	and.w	r1, r1, #256	; 0x100
90015d60:	4319      	orrs	r1, r3
90015d62:	0643      	lsls	r3, r0, #25
90015d64:	ea4f 1000 	mov.w	r0, r0, lsl #4
90015d68:	bf48      	it	mi
90015d6a:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
90015d6e:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015d72:	bf48      	it	mi
90015d74:	b219      	sxthmi	r1, r3
90015d76:	79fb      	ldrb	r3, [r7, #7]
90015d78:	4303      	orrs	r3, r0
90015d7a:	4413      	add	r3, r2
90015d7c:	1a5b      	subs	r3, r3, r1
90015d7e:	b21b      	sxth	r3, r3
90015d80:	429c      	cmp	r4, r3
90015d82:	bfb8      	it	lt
90015d84:	461c      	movlt	r4, r3
90015d86:	4633      	mov	r3, r6
90015d88:	462a      	mov	r2, r5
90015d8a:	2100      	movs	r1, #0
90015d8c:	e7da      	b.n	90015d44 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90015d8e:	b2a0      	uxth	r0, r4
90015d90:	b01e      	add	sp, #120	; 0x78
90015d92:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015d96:	b003      	add	sp, #12
90015d98:	4770      	bx	lr

90015d9a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90015d9a:	7a43      	ldrb	r3, [r0, #9]
90015d9c:	8880      	ldrh	r0, [r0, #4]
90015d9e:	4418      	add	r0, r3
90015da0:	b280      	uxth	r0, r0
90015da2:	4770      	bx	lr

90015da4 <_ZNK8touchgfx4Font13getFontHeightEv>:
90015da4:	6803      	ldr	r3, [r0, #0]
90015da6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015da8:	4718      	bx	r3

90015daa <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90015daa:	b40e      	push	{r1, r2, r3}
90015dac:	b570      	push	{r4, r5, r6, lr}
90015dae:	b09d      	sub	sp, #116	; 0x74
90015db0:	4604      	mov	r4, r0
90015db2:	ab21      	add	r3, sp, #132	; 0x84
90015db4:	a803      	add	r0, sp, #12
90015db6:	f853 5b04 	ldr.w	r5, [r3], #4
90015dba:	9302      	str	r3, [sp, #8]
90015dbc:	f000 fda7 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90015dc0:	6823      	ldr	r3, [r4, #0]
90015dc2:	4620      	mov	r0, r4
90015dc4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015dc6:	4798      	blx	r3
90015dc8:	6823      	ldr	r3, [r4, #0]
90015dca:	4606      	mov	r6, r0
90015dcc:	4620      	mov	r0, r4
90015dce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015dd0:	2401      	movs	r4, #1
90015dd2:	4798      	blx	r3
90015dd4:	4633      	mov	r3, r6
90015dd6:	9000      	str	r0, [sp, #0]
90015dd8:	4629      	mov	r1, r5
90015dda:	9a02      	ldr	r2, [sp, #8]
90015ddc:	a803      	add	r0, sp, #12
90015dde:	f000 fdf1 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015de2:	a803      	add	r0, sp, #12
90015de4:	f001 f9c0 	bl	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015de8:	b2a3      	uxth	r3, r4
90015dea:	b138      	cbz	r0, 90015dfc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90015dec:	280a      	cmp	r0, #10
90015dee:	a803      	add	r0, sp, #12
90015df0:	bf04      	itt	eq
90015df2:	3301      	addeq	r3, #1
90015df4:	b21c      	sxtheq	r4, r3
90015df6:	f001 f9b7 	bl	90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015dfa:	e7f5      	b.n	90015de8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90015dfc:	4618      	mov	r0, r3
90015dfe:	b01d      	add	sp, #116	; 0x74
90015e00:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015e04:	b003      	add	sp, #12
90015e06:	4770      	bx	lr

90015e08 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90015e08:	b40e      	push	{r1, r2, r3}
90015e0a:	b5f0      	push	{r4, r5, r6, r7, lr}
90015e0c:	b09e      	sub	sp, #120	; 0x78
90015e0e:	4604      	mov	r4, r0
90015e10:	ab23      	add	r3, sp, #140	; 0x8c
90015e12:	a805      	add	r0, sp, #20
90015e14:	f853 5b04 	ldr.w	r5, [r3], #4
90015e18:	9303      	str	r3, [sp, #12]
90015e1a:	f000 fd78 	bl	9001690e <_ZN8touchgfx12TextProviderC1Ev>
90015e1e:	6823      	ldr	r3, [r4, #0]
90015e20:	4620      	mov	r0, r4
90015e22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015e24:	4798      	blx	r3
90015e26:	6823      	ldr	r3, [r4, #0]
90015e28:	4606      	mov	r6, r0
90015e2a:	4620      	mov	r0, r4
90015e2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015e2e:	4798      	blx	r3
90015e30:	4633      	mov	r3, r6
90015e32:	4629      	mov	r1, r5
90015e34:	9000      	str	r0, [sp, #0]
90015e36:	9a03      	ldr	r2, [sp, #12]
90015e38:	a805      	add	r0, sp, #20
90015e3a:	f000 fdc3 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015e3e:	ad1e      	add	r5, sp, #120	; 0x78
90015e40:	2100      	movs	r1, #0
90015e42:	f647 76ff 	movw	r6, #32767	; 0x7fff
90015e46:	4622      	mov	r2, r4
90015e48:	a805      	add	r0, sp, #20
90015e4a:	f845 1d68 	str.w	r1, [r5, #-104]!
90015e4e:	462b      	mov	r3, r5
90015e50:	f001 f8be 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015e54:	b1d8      	cbz	r0, 90015e8e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90015e56:	280a      	cmp	r0, #10
90015e58:	d012      	beq.n	90015e80 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015e5a:	9804      	ldr	r0, [sp, #16]
90015e5c:	b180      	cbz	r0, 90015e80 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015e5e:	7b47      	ldrb	r7, [r0, #13]
90015e60:	88e2      	ldrh	r2, [r4, #6]
90015e62:	00fb      	lsls	r3, r7, #3
90015e64:	f403 7180 	and.w	r1, r3, #256	; 0x100
90015e68:	7a03      	ldrb	r3, [r0, #8]
90015e6a:	430b      	orrs	r3, r1
90015e6c:	0679      	lsls	r1, r7, #25
90015e6e:	bf44      	itt	mi
90015e70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90015e74:	b21b      	sxthmi	r3, r3
90015e76:	1ad3      	subs	r3, r2, r3
90015e78:	b21b      	sxth	r3, r3
90015e7a:	429e      	cmp	r6, r3
90015e7c:	bfa8      	it	ge
90015e7e:	461e      	movge	r6, r3
90015e80:	462b      	mov	r3, r5
90015e82:	4622      	mov	r2, r4
90015e84:	2100      	movs	r1, #0
90015e86:	a805      	add	r0, sp, #20
90015e88:	f001 f8a2 	bl	90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015e8c:	e7e2      	b.n	90015e54 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90015e8e:	4630      	mov	r0, r6
90015e90:	b01e      	add	sp, #120	; 0x78
90015e92:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015e96:	b003      	add	sp, #12
90015e98:	4770      	bx	lr

90015e9a <_ZNK8touchgfx8Drawable10invalidateEv>:
90015e9a:	b513      	push	{r0, r1, r4, lr}
90015e9c:	6803      	ldr	r3, [r0, #0]
90015e9e:	2400      	movs	r4, #0
90015ea0:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90015ea4:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90015ea8:	f8ad 1004 	strh.w	r1, [sp, #4]
90015eac:	4669      	mov	r1, sp
90015eae:	691b      	ldr	r3, [r3, #16]
90015eb0:	9400      	str	r4, [sp, #0]
90015eb2:	f8ad 2006 	strh.w	r2, [sp, #6]
90015eb6:	4798      	blx	r3
90015eb8:	b002      	add	sp, #8
90015eba:	bd10      	pop	{r4, pc}

90015ebc <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
90015ebc:	b538      	push	{r3, r4, r5, lr}
90015ebe:	680b      	ldr	r3, [r1, #0]
90015ec0:	460c      	mov	r4, r1
90015ec2:	4605      	mov	r5, r0
90015ec4:	68db      	ldr	r3, [r3, #12]
90015ec6:	4798      	blx	r3
90015ec8:	6823      	ldr	r3, [r4, #0]
90015eca:	4620      	mov	r0, r4
90015ecc:	4629      	mov	r1, r5
90015ece:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015ed0:	4798      	blx	r3
90015ed2:	4628      	mov	r0, r5
90015ed4:	bd38      	pop	{r3, r4, r5, pc}

90015ed6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90015ed6:	b410      	push	{r4}
90015ed8:	880a      	ldrh	r2, [r1, #0]
90015eda:	8884      	ldrh	r4, [r0, #4]
90015edc:	4422      	add	r2, r4
90015ede:	800a      	strh	r2, [r1, #0]
90015ee0:	884a      	ldrh	r2, [r1, #2]
90015ee2:	88c4      	ldrh	r4, [r0, #6]
90015ee4:	4422      	add	r2, r4
90015ee6:	804a      	strh	r2, [r1, #2]
90015ee8:	6940      	ldr	r0, [r0, #20]
90015eea:	b120      	cbz	r0, 90015ef6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
90015eec:	6803      	ldr	r3, [r0, #0]
90015eee:	f85d 4b04 	ldr.w	r4, [sp], #4
90015ef2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015ef4:	4718      	bx	r3
90015ef6:	f85d 4b04 	ldr.w	r4, [sp], #4
90015efa:	4770      	bx	lr

90015efc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90015efc:	b570      	push	{r4, r5, r6, lr}
90015efe:	8882      	ldrh	r2, [r0, #4]
90015f00:	460c      	mov	r4, r1
90015f02:	880b      	ldrh	r3, [r1, #0]
90015f04:	4605      	mov	r5, r0
90015f06:	4413      	add	r3, r2
90015f08:	800b      	strh	r3, [r1, #0]
90015f0a:	884b      	ldrh	r3, [r1, #2]
90015f0c:	88c2      	ldrh	r2, [r0, #6]
90015f0e:	4413      	add	r3, r2
90015f10:	804b      	strh	r3, [r1, #2]
90015f12:	1d01      	adds	r1, r0, #4
90015f14:	4620      	mov	r0, r4
90015f16:	f7fa f827 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90015f1a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90015f1e:	2b00      	cmp	r3, #0
90015f20:	dd0b      	ble.n	90015f3a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015f22:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90015f26:	2b00      	cmp	r3, #0
90015f28:	dd07      	ble.n	90015f3a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015f2a:	6968      	ldr	r0, [r5, #20]
90015f2c:	b128      	cbz	r0, 90015f3a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90015f2e:	6803      	ldr	r3, [r0, #0]
90015f30:	4621      	mov	r1, r4
90015f32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90015f34:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015f38:	4718      	bx	r3
90015f3a:	bd70      	pop	{r4, r5, r6, pc}

90015f3c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90015f3c:	b570      	push	{r4, r5, r6, lr}
90015f3e:	8882      	ldrh	r2, [r0, #4]
90015f40:	460c      	mov	r4, r1
90015f42:	880b      	ldrh	r3, [r1, #0]
90015f44:	4605      	mov	r5, r0
90015f46:	4413      	add	r3, r2
90015f48:	800b      	strh	r3, [r1, #0]
90015f4a:	884b      	ldrh	r3, [r1, #2]
90015f4c:	88c2      	ldrh	r2, [r0, #6]
90015f4e:	4413      	add	r3, r2
90015f50:	804b      	strh	r3, [r1, #2]
90015f52:	1d01      	adds	r1, r0, #4
90015f54:	4620      	mov	r0, r4
90015f56:	f7fa f807 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90015f5a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90015f5e:	2b00      	cmp	r3, #0
90015f60:	dd19      	ble.n	90015f96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015f62:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90015f66:	2b00      	cmp	r3, #0
90015f68:	dd15      	ble.n	90015f96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015f6a:	6968      	ldr	r0, [r5, #20]
90015f6c:	b128      	cbz	r0, 90015f7a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90015f6e:	6803      	ldr	r3, [r0, #0]
90015f70:	4621      	mov	r1, r4
90015f72:	691b      	ldr	r3, [r3, #16]
90015f74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015f78:	4718      	bx	r3
90015f7a:	4b07      	ldr	r3, [pc, #28]	; (90015f98 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90015f7c:	681b      	ldr	r3, [r3, #0]
90015f7e:	3304      	adds	r3, #4
90015f80:	429d      	cmp	r5, r3
90015f82:	d108      	bne.n	90015f96 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90015f84:	f7fe ff10 	bl	90014da8 <_ZN8touchgfx11Application11getInstanceEv>
90015f88:	6803      	ldr	r3, [r0, #0]
90015f8a:	6821      	ldr	r1, [r4, #0]
90015f8c:	6862      	ldr	r2, [r4, #4]
90015f8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015f90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015f94:	4718      	bx	r3
90015f96:	bd70      	pop	{r4, r5, r6, pc}
90015f98:	240235b0 	.word	0x240235b0

90015f9c <_ZN8touchgfx8Drawable12moveRelativeEss>:
90015f9c:	b570      	push	{r4, r5, r6, lr}
90015f9e:	4604      	mov	r4, r0
90015fa0:	4616      	mov	r6, r2
90015fa2:	460d      	mov	r5, r1
90015fa4:	b901      	cbnz	r1, 90015fa8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90015fa6:	b192      	cbz	r2, 90015fce <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90015fa8:	6823      	ldr	r3, [r4, #0]
90015faa:	4620      	mov	r0, r4
90015fac:	699b      	ldr	r3, [r3, #24]
90015fae:	4798      	blx	r3
90015fb0:	88e2      	ldrh	r2, [r4, #6]
90015fb2:	88a1      	ldrh	r1, [r4, #4]
90015fb4:	4620      	mov	r0, r4
90015fb6:	4432      	add	r2, r6
90015fb8:	4429      	add	r1, r5
90015fba:	b212      	sxth	r2, r2
90015fbc:	b209      	sxth	r1, r1
90015fbe:	f7fa faa9 	bl	90010514 <_ZN8touchgfx8Drawable5setXYEss>
90015fc2:	6823      	ldr	r3, [r4, #0]
90015fc4:	4620      	mov	r0, r4
90015fc6:	699b      	ldr	r3, [r3, #24]
90015fc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015fcc:	4718      	bx	r3
90015fce:	bd70      	pop	{r4, r5, r6, pc}

90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90015fd0:	b510      	push	{r4, lr}
90015fd2:	2300      	movs	r3, #0
90015fd4:	4604      	mov	r4, r0
90015fd6:	4608      	mov	r0, r1
90015fd8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
90015fdc:	8023      	strh	r3, [r4, #0]
90015fde:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90015fe2:	8063      	strh	r3, [r4, #2]
90015fe4:	6803      	ldr	r3, [r0, #0]
90015fe6:	80a1      	strh	r1, [r4, #4]
90015fe8:	4621      	mov	r1, r4
90015fea:	80e2      	strh	r2, [r4, #6]
90015fec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90015fee:	4798      	blx	r3
90015ff0:	4620      	mov	r0, r4
90015ff2:	bd10      	pop	{r4, pc}

90015ff4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90015ff4:	b530      	push	{r4, r5, lr}
90015ff6:	8083      	strh	r3, [r0, #4]
90015ff8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90015ffc:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016000:	80c3      	strh	r3, [r0, #6]
90016002:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016006:	6141      	str	r1, [r0, #20]
90016008:	7203      	strb	r3, [r0, #8]
9001600a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001600e:	8302      	strh	r2, [r0, #24]
90016010:	7243      	strb	r3, [r0, #9]
90016012:	7a83      	ldrb	r3, [r0, #10]
90016014:	f365 0306 	bfi	r3, r5, #0, #7
90016018:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001601c:	f365 13c7 	bfi	r3, r5, #7, #1
90016020:	7283      	strb	r3, [r0, #10]
90016022:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016026:	72c3      	strb	r3, [r0, #11]
90016028:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001602c:	7303      	strb	r3, [r0, #12]
9001602e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90016032:	81c3      	strh	r3, [r0, #14]
90016034:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
90016038:	8203      	strh	r3, [r0, #16]
9001603a:	4b01      	ldr	r3, [pc, #4]	; (90016040 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
9001603c:	6003      	str	r3, [r0, #0]
9001603e:	bd30      	pop	{r4, r5, pc}
90016040:	9002a5bc 	.word	0x9002a5bc

90016044 <_ZNK8touchgfx9ConstFont4findEt>:
90016044:	b5f0      	push	{r4, r5, r6, r7, lr}
90016046:	6944      	ldr	r4, [r0, #20]
90016048:	b3bc      	cbz	r4, 900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001604a:	88a3      	ldrh	r3, [r4, #4]
9001604c:	8b02      	ldrh	r2, [r0, #24]
9001604e:	1acb      	subs	r3, r1, r3
90016050:	f102 32ff 	add.w	r2, r2, #4294967295
90016054:	d431      	bmi.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016056:	4293      	cmp	r3, r2
90016058:	dd0c      	ble.n	90016074 <_ZNK8touchgfx9ConstFont4findEt+0x30>
9001605a:	230e      	movs	r3, #14
9001605c:	fb03 4302 	mla	r3, r3, r2, r4
90016060:	889b      	ldrh	r3, [r3, #4]
90016062:	1a5b      	subs	r3, r3, r1
90016064:	1ad3      	subs	r3, r2, r3
90016066:	429a      	cmp	r2, r3
90016068:	db27      	blt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001606a:	2b00      	cmp	r3, #0
9001606c:	bfbc      	itt	lt
9001606e:	2302      	movlt	r3, #2
90016070:	fb92 f3f3 	sdivlt	r3, r2, r3
90016074:	2500      	movs	r5, #0
90016076:	260e      	movs	r6, #14
90016078:	4295      	cmp	r5, r2
9001607a:	dc1e      	bgt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001607c:	fb06 4003 	mla	r0, r6, r3, r4
90016080:	8887      	ldrh	r7, [r0, #4]
90016082:	42b9      	cmp	r1, r7
90016084:	d01a      	beq.n	900160bc <_ZNK8touchgfx9ConstFont4findEt+0x78>
90016086:	d20d      	bcs.n	900160a4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90016088:	1e5a      	subs	r2, r3, #1
9001608a:	4295      	cmp	r5, r2
9001608c:	dc15      	bgt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001608e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90016092:	1a5b      	subs	r3, r3, r1
90016094:	1ad3      	subs	r3, r2, r3
90016096:	429a      	cmp	r2, r3
90016098:	db0f      	blt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001609a:	429d      	cmp	r5, r3
9001609c:	ddec      	ble.n	90016078 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001609e:	1953      	adds	r3, r2, r5
900160a0:	105b      	asrs	r3, r3, #1
900160a2:	e7e9      	b.n	90016078 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900160a4:	1c5d      	adds	r5, r3, #1
900160a6:	42aa      	cmp	r2, r5
900160a8:	db07      	blt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
900160aa:	8a43      	ldrh	r3, [r0, #18]
900160ac:	1acb      	subs	r3, r1, r3
900160ae:	442b      	add	r3, r5
900160b0:	429d      	cmp	r5, r3
900160b2:	dc02      	bgt.n	900160ba <_ZNK8touchgfx9ConstFont4findEt+0x76>
900160b4:	429a      	cmp	r2, r3
900160b6:	dadf      	bge.n	90016078 <_ZNK8touchgfx9ConstFont4findEt+0x34>
900160b8:	e7f1      	b.n	9001609e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
900160ba:	2000      	movs	r0, #0
900160bc:	bdf0      	pop	{r4, r5, r6, r7, pc}

900160be <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
900160be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900160c0:	4604      	mov	r4, r0
900160c2:	4617      	mov	r7, r2
900160c4:	461e      	mov	r6, r3
900160c6:	b911      	cbnz	r1, 900160ce <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
900160c8:	2500      	movs	r5, #0
900160ca:	4628      	mov	r0, r5
900160cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900160ce:	290a      	cmp	r1, #10
900160d0:	d0fa      	beq.n	900160c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900160d2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
900160d6:	4291      	cmp	r1, r2
900160d8:	d0f6      	beq.n	900160c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900160da:	f242 020b 	movw	r2, #8203	; 0x200b
900160de:	4291      	cmp	r1, r2
900160e0:	d0f2      	beq.n	900160c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
900160e2:	f7ff ffaf 	bl	90016044 <_ZNK8touchgfx9ConstFont4findEt>
900160e6:	4605      	mov	r5, r0
900160e8:	b950      	cbnz	r0, 90016100 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
900160ea:	6823      	ldr	r3, [r4, #0]
900160ec:	4620      	mov	r0, r4
900160ee:	691b      	ldr	r3, [r3, #16]
900160f0:	4798      	blx	r3
900160f2:	4601      	mov	r1, r0
900160f4:	4620      	mov	r0, r4
900160f6:	f7ff ffa5 	bl	90016044 <_ZNK8touchgfx9ConstFont4findEt>
900160fa:	4605      	mov	r5, r0
900160fc:	2800      	cmp	r0, #0
900160fe:	d0e3      	beq.n	900160c8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016100:	6823      	ldr	r3, [r4, #0]
90016102:	4629      	mov	r1, r5
90016104:	4620      	mov	r0, r4
90016106:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90016108:	4798      	blx	r3
9001610a:	6038      	str	r0, [r7, #0]
9001610c:	6823      	ldr	r3, [r4, #0]
9001610e:	4620      	mov	r0, r4
90016110:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90016112:	4798      	blx	r3
90016114:	7030      	strb	r0, [r6, #0]
90016116:	e7d8      	b.n	900160ca <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016118 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90016118:	b538      	push	{r3, r4, r5, lr}
9001611a:	4605      	mov	r5, r0
9001611c:	f002 f8f4 	bl	90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016120:	4604      	mov	r4, r0
90016122:	4628      	mov	r0, r5
90016124:	f002 f834 	bl	90018190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90016128:	2800      	cmp	r0, #0
9001612a:	bf14      	ite	ne
9001612c:	2002      	movne	r0, #2
9001612e:	2000      	moveq	r0, #0
90016130:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90016134:	b280      	uxth	r0, r0
90016136:	bd38      	pop	{r3, r4, r5, pc}

90016138 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
90016138:	b538      	push	{r3, r4, r5, lr}
9001613a:	4605      	mov	r5, r0
9001613c:	f002 f8e4 	bl	90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016140:	4604      	mov	r4, r0
90016142:	4628      	mov	r0, r5
90016144:	f002 f824 	bl	90018190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90016148:	2800      	cmp	r0, #0
9001614a:	bf14      	ite	ne
9001614c:	2002      	movne	r0, #2
9001614e:	2000      	moveq	r0, #0
90016150:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
90016154:	f040 0001 	orr.w	r0, r0, #1
90016158:	b280      	uxth	r0, r0
9001615a:	bd38      	pop	{r3, r4, r5, pc}

9001615c <_ZN8touchgfx4clzuEm>:
9001615c:	4603      	mov	r3, r0
9001615e:	b1c8      	cbz	r0, 90016194 <_ZN8touchgfx4clzuEm+0x38>
90016160:	0c02      	lsrs	r2, r0, #16
90016162:	0412      	lsls	r2, r2, #16
90016164:	b9a2      	cbnz	r2, 90016190 <_ZN8touchgfx4clzuEm+0x34>
90016166:	0403      	lsls	r3, r0, #16
90016168:	2010      	movs	r0, #16
9001616a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
9001616e:	bf04      	itt	eq
90016170:	021b      	lsleq	r3, r3, #8
90016172:	3008      	addeq	r0, #8
90016174:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90016178:	bf04      	itt	eq
9001617a:	011b      	lsleq	r3, r3, #4
9001617c:	3004      	addeq	r0, #4
9001617e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
90016182:	bf04      	itt	eq
90016184:	009b      	lsleq	r3, r3, #2
90016186:	3002      	addeq	r0, #2
90016188:	2b00      	cmp	r3, #0
9001618a:	db04      	blt.n	90016196 <_ZN8touchgfx4clzuEm+0x3a>
9001618c:	3001      	adds	r0, #1
9001618e:	4770      	bx	lr
90016190:	2000      	movs	r0, #0
90016192:	e7ea      	b.n	9001616a <_ZN8touchgfx4clzuEm+0xe>
90016194:	2020      	movs	r0, #32
90016196:	4770      	bx	lr

90016198 <_ZN8touchgfx7muldivuEmmmRm>:
90016198:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001619c:	460f      	mov	r7, r1
9001619e:	4615      	mov	r5, r2
900161a0:	461e      	mov	r6, r3
900161a2:	4601      	mov	r1, r0
900161a4:	b100      	cbz	r0, 900161a8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
900161a6:	b927      	cbnz	r7, 900161b2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
900161a8:	2000      	movs	r0, #0
900161aa:	6030      	str	r0, [r6, #0]
900161ac:	b002      	add	sp, #8
900161ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900161b2:	f7ff ffd3 	bl	9001615c <_ZN8touchgfx4clzuEm>
900161b6:	b980      	cbnz	r0, 900161da <_ZN8touchgfx7muldivuEmmmRm+0x42>
900161b8:	4638      	mov	r0, r7
900161ba:	f7ff ffcf 	bl	9001615c <_ZN8touchgfx4clzuEm>
900161be:	2800      	cmp	r0, #0
900161c0:	dd05      	ble.n	900161ce <_ZN8touchgfx7muldivuEmmmRm+0x36>
900161c2:	4633      	mov	r3, r6
900161c4:	462a      	mov	r2, r5
900161c6:	4638      	mov	r0, r7
900161c8:	f7ff ffe6 	bl	90016198 <_ZN8touchgfx7muldivuEmmmRm>
900161cc:	e7ee      	b.n	900161ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900161ce:	f04f 33ff 	mov.w	r3, #4294967295
900161d2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
900161d6:	6033      	str	r3, [r6, #0]
900161d8:	e7e8      	b.n	900161ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900161da:	fa37 f800 	lsrs.w	r8, r7, r0
900161de:	fb07 f301 	mul.w	r3, r7, r1
900161e2:	d105      	bne.n	900161f0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
900161e4:	fbb3 f0f5 	udiv	r0, r3, r5
900161e8:	fb05 3510 	mls	r5, r5, r0, r3
900161ec:	6035      	str	r5, [r6, #0]
900161ee:	e7dd      	b.n	900161ac <_ZN8touchgfx7muldivuEmmmRm+0x14>
900161f0:	2301      	movs	r3, #1
900161f2:	fa01 fa00 	lsl.w	sl, r1, r0
900161f6:	462a      	mov	r2, r5
900161f8:	fa03 f000 	lsl.w	r0, r3, r0
900161fc:	4633      	mov	r3, r6
900161fe:	fbba f9f5 	udiv	r9, sl, r5
90016202:	3801      	subs	r0, #1
90016204:	fb08 f409 	mul.w	r4, r8, r9
90016208:	4038      	ands	r0, r7
9001620a:	f7ff ffc5 	bl	90016198 <_ZN8touchgfx7muldivuEmmmRm>
9001620e:	462a      	mov	r2, r5
90016210:	4607      	mov	r7, r0
90016212:	ab01      	add	r3, sp, #4
90016214:	fb05 a119 	mls	r1, r5, r9, sl
90016218:	4640      	mov	r0, r8
9001621a:	f7ff ffbd 	bl	90016198 <_ZN8touchgfx7muldivuEmmmRm>
9001621e:	9b01      	ldr	r3, [sp, #4]
90016220:	6832      	ldr	r2, [r6, #0]
90016222:	441a      	add	r2, r3
90016224:	fbb2 f3f5 	udiv	r3, r2, r5
90016228:	441c      	add	r4, r3
9001622a:	fb05 2513 	mls	r5, r5, r3, r2
9001622e:	443c      	add	r4, r7
90016230:	4420      	add	r0, r4
90016232:	e7db      	b.n	900161ec <_ZN8touchgfx7muldivuEmmmRm+0x54>

90016234 <_ZN8touchgfx6muldivElllRl>:
90016234:	b573      	push	{r0, r1, r4, r5, r6, lr}
90016236:	2800      	cmp	r0, #0
90016238:	461e      	mov	r6, r3
9001623a:	bfba      	itte	lt
9001623c:	4240      	neglt	r0, r0
9001623e:	f04f 34ff 	movlt.w	r4, #4294967295
90016242:	2401      	movge	r4, #1
90016244:	2900      	cmp	r1, #0
90016246:	bfbc      	itt	lt
90016248:	4249      	neglt	r1, r1
9001624a:	4264      	neglt	r4, r4
9001624c:	2a00      	cmp	r2, #0
9001624e:	bfb6      	itet	lt
90016250:	4265      	neglt	r5, r4
90016252:	4625      	movge	r5, r4
90016254:	4252      	neglt	r2, r2
90016256:	4288      	cmp	r0, r1
90016258:	bfc2      	ittt	gt
9001625a:	4603      	movgt	r3, r0
9001625c:	4608      	movgt	r0, r1
9001625e:	4619      	movgt	r1, r3
90016260:	ab01      	add	r3, sp, #4
90016262:	f7ff ff99 	bl	90016198 <_ZN8touchgfx7muldivuEmmmRm>
90016266:	9b01      	ldr	r3, [sp, #4]
90016268:	4368      	muls	r0, r5
9001626a:	435c      	muls	r4, r3
9001626c:	6034      	str	r4, [r6, #0]
9001626e:	b002      	add	sp, #8
90016270:	bd70      	pop	{r4, r5, r6, pc}

90016272 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90016272:	2000      	movs	r0, #0
90016274:	4770      	bx	lr

90016276 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90016276:	2001      	movs	r0, #1
90016278:	4770      	bx	lr

9001627a <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
9001627a:	2002      	movs	r0, #2
9001627c:	4770      	bx	lr

9001627e <_ZN8touchgfx6ScreenD1Ev>:
9001627e:	4770      	bx	lr

90016280 <_ZN8touchgfx6Screen11setupScreenEv>:
90016280:	4770      	bx	lr

90016282 <_ZN8touchgfx12GestureEventD1Ev>:
90016282:	4770      	bx	lr

90016284 <_ZN8touchgfx9DragEventD1Ev>:
90016284:	4770      	bx	lr

90016286 <_ZN8touchgfx10ClickEventD1Ev>:
90016286:	4770      	bx	lr

90016288 <_ZN8touchgfx10ClickEventD0Ev>:
90016288:	b510      	push	{r4, lr}
9001628a:	4604      	mov	r4, r0
9001628c:	210c      	movs	r1, #12
9001628e:	f00f fed8 	bl	90026042 <_ZdlPvj>
90016292:	4620      	mov	r0, r4
90016294:	bd10      	pop	{r4, pc}

90016296 <_ZN8touchgfx9DragEventD0Ev>:
90016296:	b510      	push	{r4, lr}
90016298:	4604      	mov	r4, r0
9001629a:	2110      	movs	r1, #16
9001629c:	f00f fed1 	bl	90026042 <_ZdlPvj>
900162a0:	4620      	mov	r0, r4
900162a2:	bd10      	pop	{r4, pc}

900162a4 <_ZN8touchgfx12GestureEventD0Ev>:
900162a4:	b510      	push	{r4, lr}
900162a6:	4604      	mov	r4, r0
900162a8:	210c      	movs	r1, #12
900162aa:	f00f feca 	bl	90026042 <_ZdlPvj>
900162ae:	4620      	mov	r0, r4
900162b0:	bd10      	pop	{r4, pc}

900162b2 <_ZN8touchgfx6ScreenD0Ev>:
900162b2:	b510      	push	{r4, lr}
900162b4:	4604      	mov	r4, r0
900162b6:	213c      	movs	r1, #60	; 0x3c
900162b8:	f00f fec3 	bl	90026042 <_ZdlPvj>
900162bc:	4620      	mov	r0, r4
900162be:	bd10      	pop	{r4, pc}

900162c0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
900162c0:	b530      	push	{r4, r5, lr}
900162c2:	460d      	mov	r5, r1
900162c4:	6b01      	ldr	r1, [r0, #48]	; 0x30
900162c6:	b087      	sub	sp, #28
900162c8:	4604      	mov	r4, r0
900162ca:	b301      	cbz	r1, 9001630e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
900162cc:	a801      	add	r0, sp, #4
900162ce:	f7ff fe7f 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900162d2:	892a      	ldrh	r2, [r5, #8]
900162d4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
900162d8:	7928      	ldrb	r0, [r5, #4]
900162da:	1ad2      	subs	r2, r2, r3
900162dc:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900162de:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
900162e2:	441a      	add	r2, r3
900162e4:	896b      	ldrh	r3, [r5, #10]
900162e6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
900162ea:	f88d 0010 	strb.w	r0, [sp, #16]
900162ee:	1b5b      	subs	r3, r3, r5
900162f0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
900162f2:	6b20      	ldr	r0, [r4, #48]	; 0x30
900162f4:	442b      	add	r3, r5
900162f6:	4d07      	ldr	r5, [pc, #28]	; (90016314 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
900162f8:	f8ad 1012 	strh.w	r1, [sp, #18]
900162fc:	a903      	add	r1, sp, #12
900162fe:	9503      	str	r5, [sp, #12]
90016300:	f8ad 2014 	strh.w	r2, [sp, #20]
90016304:	f8ad 3016 	strh.w	r3, [sp, #22]
90016308:	6803      	ldr	r3, [r0, #0]
9001630a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001630c:	4798      	blx	r3
9001630e:	b007      	add	sp, #28
90016310:	bd30      	pop	{r4, r5, pc}
90016312:	bf00      	nop
90016314:	9002a64c 	.word	0x9002a64c

90016318 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016318:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001631c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001631e:	b08a      	sub	sp, #40	; 0x28
90016320:	4604      	mov	r4, r0
90016322:	460d      	mov	r5, r1
90016324:	b113      	cbz	r3, 9001632c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016326:	790b      	ldrb	r3, [r1, #4]
90016328:	2b00      	cmp	r3, #0
9001632a:	d044      	beq.n	900163b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001632c:	f104 0804 	add.w	r8, r4, #4
90016330:	a803      	add	r0, sp, #12
90016332:	4641      	mov	r1, r8
90016334:	f7ff fe4c 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016338:	792b      	ldrb	r3, [r5, #4]
9001633a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001633e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90016342:	b983      	cbnz	r3, 90016366 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90016344:	f104 0336 	add.w	r3, r4, #54	; 0x36
90016348:	892a      	ldrh	r2, [r5, #8]
9001634a:	88e9      	ldrh	r1, [r5, #6]
9001634c:	4640      	mov	r0, r8
9001634e:	1b92      	subs	r2, r2, r6
90016350:	9301      	str	r3, [sp, #4]
90016352:	1bc9      	subs	r1, r1, r7
90016354:	f104 0334 	add.w	r3, r4, #52	; 0x34
90016358:	b212      	sxth	r2, r2
9001635a:	9300      	str	r3, [sp, #0]
9001635c:	b209      	sxth	r1, r1
9001635e:	f104 0330 	add.w	r3, r4, #48	; 0x30
90016362:	f7f9 fd1f 	bl	9000fda4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
90016366:	6b21      	ldr	r1, [r4, #48]	; 0x30
90016368:	b329      	cbz	r1, 900163b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001636a:	a805      	add	r0, sp, #20
9001636c:	f7ff fe30 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016370:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90016374:	792b      	ldrb	r3, [r5, #4]
90016376:	a907      	add	r1, sp, #28
90016378:	1abf      	subs	r7, r7, r2
9001637a:	88ea      	ldrh	r2, [r5, #6]
9001637c:	6b20      	ldr	r0, [r4, #48]	; 0x30
9001637e:	4417      	add	r7, r2
90016380:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
90016382:	f88d 3020 	strb.w	r3, [sp, #32]
90016386:	4417      	add	r7, r2
90016388:	f8bd 2016 	ldrh.w	r2, [sp, #22]
9001638c:	1ab6      	subs	r6, r6, r2
9001638e:	892a      	ldrh	r2, [r5, #8]
90016390:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90016394:	4416      	add	r6, r2
90016396:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90016398:	4416      	add	r6, r2
9001639a:	4a08      	ldr	r2, [pc, #32]	; (900163bc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001639c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
900163a0:	2600      	movs	r6, #0
900163a2:	9207      	str	r2, [sp, #28]
900163a4:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
900163a8:	6803      	ldr	r3, [r0, #0]
900163aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900163ac:	4798      	blx	r3
900163ae:	792b      	ldrb	r3, [r5, #4]
900163b0:	b10b      	cbz	r3, 900163b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900163b2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
900163b6:	b00a      	add	sp, #40	; 0x28
900163b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900163bc:	9002a624 	.word	0x9002a624

900163c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900163c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900163c4:	460c      	mov	r4, r1
900163c6:	6b01      	ldr	r1, [r0, #48]	; 0x30
900163c8:	b088      	sub	sp, #32
900163ca:	4605      	mov	r5, r0
900163cc:	2900      	cmp	r1, #0
900163ce:	d06d      	beq.n	900164ac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900163d0:	4668      	mov	r0, sp
900163d2:	f7ff fdfd 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900163d6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
900163d8:	88e3      	ldrh	r3, [r4, #6]
900163da:	f9bd 8000 	ldrsh.w	r8, [sp]
900163de:	440b      	add	r3, r1
900163e0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900163e4:	b21b      	sxth	r3, r3
900163e6:	4543      	cmp	r3, r8
900163e8:	db31      	blt.n	9001644e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900163ea:	f8bd c004 	ldrh.w	ip, [sp, #4]
900163ee:	44c4      	add	ip, r8
900163f0:	fa0f fc8c 	sxth.w	ip, ip
900163f4:	4563      	cmp	r3, ip
900163f6:	da2a      	bge.n	9001644e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900163f8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
900163fa:	8926      	ldrh	r6, [r4, #8]
900163fc:	4416      	add	r6, r2
900163fe:	b236      	sxth	r6, r6
90016400:	42be      	cmp	r6, r7
90016402:	db24      	blt.n	9001644e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016404:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016408:	4438      	add	r0, r7
9001640a:	b200      	sxth	r0, r0
9001640c:	4286      	cmp	r6, r0
9001640e:	da1e      	bge.n	9001644e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016410:	8963      	ldrh	r3, [r4, #10]
90016412:	4419      	add	r1, r3
90016414:	b209      	sxth	r1, r1
90016416:	4541      	cmp	r1, r8
90016418:	db08      	blt.n	9001642c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001641a:	4561      	cmp	r1, ip
9001641c:	da06      	bge.n	9001642c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001641e:	89a3      	ldrh	r3, [r4, #12]
90016420:	441a      	add	r2, r3
90016422:	b212      	sxth	r2, r2
90016424:	42ba      	cmp	r2, r7
90016426:	db01      	blt.n	9001642c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016428:	4282      	cmp	r2, r0
9001642a:	db10      	blt.n	9001644e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001642c:	4b21      	ldr	r3, [pc, #132]	; (900164b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001642e:	a904      	add	r1, sp, #16
90016430:	6b28      	ldr	r0, [r5, #48]	; 0x30
90016432:	9304      	str	r3, [sp, #16]
90016434:	2302      	movs	r3, #2
90016436:	f88d 3014 	strb.w	r3, [sp, #20]
9001643a:	2300      	movs	r3, #0
9001643c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016440:	f8ad 3018 	strh.w	r3, [sp, #24]
90016444:	f8ad 301a 	strh.w	r3, [sp, #26]
90016448:	6803      	ldr	r3, [r0, #0]
9001644a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001644c:	4798      	blx	r3
9001644e:	1d29      	adds	r1, r5, #4
90016450:	a802      	add	r0, sp, #8
90016452:	f7ff fdbd 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016456:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001645a:	88e0      	ldrh	r0, [r4, #6]
9001645c:	eba3 0808 	sub.w	r8, r3, r8
90016460:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016464:	7921      	ldrb	r1, [r4, #4]
90016466:	fa1f f888 	uxth.w	r8, r8
9001646a:	1bdf      	subs	r7, r3, r7
9001646c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
90016470:	b2bb      	uxth	r3, r7
90016472:	4440      	add	r0, r8
90016474:	8922      	ldrh	r2, [r4, #8]
90016476:	8967      	ldrh	r7, [r4, #10]
90016478:	4460      	add	r0, ip
9001647a:	89a4      	ldrh	r4, [r4, #12]
9001647c:	441a      	add	r2, r3
9001647e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
90016480:	44b8      	add	r8, r7
90016482:	4423      	add	r3, r4
90016484:	f8ad 0016 	strh.w	r0, [sp, #22]
90016488:	4432      	add	r2, r6
9001648a:	44e0      	add	r8, ip
9001648c:	4433      	add	r3, r6
9001648e:	4c0a      	ldr	r4, [pc, #40]	; (900164b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90016490:	6b28      	ldr	r0, [r5, #48]	; 0x30
90016492:	f88d 1014 	strb.w	r1, [sp, #20]
90016496:	a904      	add	r1, sp, #16
90016498:	9404      	str	r4, [sp, #16]
9001649a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001649e:	f8ad 801a 	strh.w	r8, [sp, #26]
900164a2:	f8ad 301c 	strh.w	r3, [sp, #28]
900164a6:	6803      	ldr	r3, [r0, #0]
900164a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900164aa:	4798      	blx	r3
900164ac:	b008      	add	sp, #32
900164ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900164b2:	bf00      	nop
900164b4:	9002a624 	.word	0x9002a624
900164b8:	9002a638 	.word	0x9002a638

900164bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900164bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
900164be:	4604      	mov	r4, r0
900164c0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900164c4:	3201      	adds	r2, #1
900164c6:	d112      	bne.n	900164ee <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900164c8:	2500      	movs	r5, #0
900164ca:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900164ce:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900164d2:	6803      	ldr	r3, [r0, #0]
900164d4:	9500      	str	r5, [sp, #0]
900164d6:	466d      	mov	r5, sp
900164d8:	f8ad 1004 	strh.w	r1, [sp, #4]
900164dc:	f8ad 2006 	strh.w	r2, [sp, #6]
900164e0:	4629      	mov	r1, r5
900164e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900164e4:	4798      	blx	r3
900164e6:	e895 0003 	ldmia.w	r5, {r0, r1}
900164ea:	e884 0003 	stmia.w	r4, {r0, r1}
900164ee:	4620      	mov	r0, r4
900164f0:	b003      	add	sp, #12
900164f2:	bd30      	pop	{r4, r5, pc}

900164f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900164f4:	b513      	push	{r0, r1, r4, lr}
900164f6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900164fa:	4604      	mov	r4, r0
900164fc:	3301      	adds	r3, #1
900164fe:	d109      	bne.n	90016514 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90016500:	4601      	mov	r1, r0
90016502:	4668      	mov	r0, sp
90016504:	f7ff fd64 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016508:	f8bd 3000 	ldrh.w	r3, [sp]
9001650c:	8423      	strh	r3, [r4, #32]
9001650e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016512:	8463      	strh	r3, [r4, #34]	; 0x22
90016514:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90016518:	b002      	add	sp, #8
9001651a:	bd10      	pop	{r4, pc}

9001651c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001651c:	b513      	push	{r0, r1, r4, lr}
9001651e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90016522:	4604      	mov	r4, r0
90016524:	3301      	adds	r3, #1
90016526:	d109      	bne.n	9001653c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90016528:	4601      	mov	r1, r0
9001652a:	4668      	mov	r0, sp
9001652c:	f7ff fd50 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016530:	f8bd 3000 	ldrh.w	r3, [sp]
90016534:	8423      	strh	r3, [r4, #32]
90016536:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001653a:	8463      	strh	r3, [r4, #34]	; 0x22
9001653c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
90016540:	b002      	add	sp, #8
90016542:	bd10      	pop	{r4, pc}

90016544 <_ZN8touchgfx6ScreenC1Ev>:
90016544:	b570      	push	{r4, r5, r6, lr}
90016546:	4b17      	ldr	r3, [pc, #92]	; (900165a4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
90016548:	4605      	mov	r5, r0
9001654a:	4a17      	ldr	r2, [pc, #92]	; (900165a8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
9001654c:	2101      	movs	r1, #1
9001654e:	f845 3b04 	str.w	r3, [r5], #4
90016552:	2300      	movs	r3, #0
90016554:	6042      	str	r2, [r0, #4]
90016556:	4604      	mov	r4, r0
90016558:	8103      	strh	r3, [r0, #8]
9001655a:	8143      	strh	r3, [r0, #10]
9001655c:	8183      	strh	r3, [r0, #12]
9001655e:	81c3      	strh	r3, [r0, #14]
90016560:	8203      	strh	r3, [r0, #16]
90016562:	8243      	strh	r3, [r0, #18]
90016564:	8283      	strh	r3, [r0, #20]
90016566:	82c3      	strh	r3, [r0, #22]
90016568:	6203      	str	r3, [r0, #32]
9001656a:	8483      	strh	r3, [r0, #36]	; 0x24
9001656c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001656e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90016572:	6343      	str	r3, [r0, #52]	; 0x34
90016574:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90016578:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
9001657c:	e9c0 3306 	strd	r3, r3, [r0, #24]
90016580:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
90016584:	4b09      	ldr	r3, [pc, #36]	; (900165ac <_ZN8touchgfx6ScreenC1Ev+0x68>)
90016586:	4628      	mov	r0, r5
90016588:	f9b3 6000 	ldrsh.w	r6, [r3]
9001658c:	6b93      	ldr	r3, [r2, #56]	; 0x38
9001658e:	4a08      	ldr	r2, [pc, #32]	; (900165b0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90016590:	f9b2 1000 	ldrsh.w	r1, [r2]
90016594:	4798      	blx	r3
90016596:	6863      	ldr	r3, [r4, #4]
90016598:	4628      	mov	r0, r5
9001659a:	4631      	mov	r1, r6
9001659c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001659e:	4798      	blx	r3
900165a0:	4620      	mov	r0, r4
900165a2:	bd70      	pop	{r4, r5, r6, pc}
900165a4:	9002a660 	.word	0x9002a660
900165a8:	90029f74 	.word	0x90029f74
900165ac:	24023562 	.word	0x24023562
900165b0:	24023560 	.word	0x24023560

900165b4 <_ZN8touchgfx6Screen4drawEv>:
900165b4:	4b09      	ldr	r3, [pc, #36]	; (900165dc <_ZN8touchgfx6Screen4drawEv+0x28>)
900165b6:	b507      	push	{r0, r1, r2, lr}
900165b8:	f9b3 2000 	ldrsh.w	r2, [r3]
900165bc:	2100      	movs	r1, #0
900165be:	4b08      	ldr	r3, [pc, #32]	; (900165e0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900165c0:	9100      	str	r1, [sp, #0]
900165c2:	4669      	mov	r1, sp
900165c4:	f9b3 3000 	ldrsh.w	r3, [r3]
900165c8:	f8ad 2004 	strh.w	r2, [sp, #4]
900165cc:	f8ad 3006 	strh.w	r3, [sp, #6]
900165d0:	6803      	ldr	r3, [r0, #0]
900165d2:	689b      	ldr	r3, [r3, #8]
900165d4:	4798      	blx	r3
900165d6:	b003      	add	sp, #12
900165d8:	f85d fb04 	ldr.w	pc, [sp], #4
900165dc:	24023560 	.word	0x24023560
900165e0:	24023562 	.word	0x24023562

900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900165e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900165e8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900165ec:	b089      	sub	sp, #36	; 0x24
900165ee:	4680      	mov	r8, r0
900165f0:	460c      	mov	r4, r1
900165f2:	2b00      	cmp	r3, #0
900165f4:	4615      	mov	r5, r2
900165f6:	dd0e      	ble.n	90016616 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900165f8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
900165fc:	2b00      	cmp	r3, #0
900165fe:	dd0a      	ble.n	90016616 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016600:	4628      	mov	r0, r5
90016602:	f7ff ff5b 	bl	900164bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016606:	4621      	mov	r1, r4
90016608:	f7fe faef 	bl	90014bea <_ZNK8touchgfx4Rect9intersectERKS0_>
9001660c:	69eb      	ldr	r3, [r5, #28]
9001660e:	b928      	cbnz	r0, 9001661c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90016610:	461d      	mov	r5, r3
90016612:	2b00      	cmp	r3, #0
90016614:	d1f4      	bne.n	90016600 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90016616:	b009      	add	sp, #36	; 0x24
90016618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001661c:	ae04      	add	r6, sp, #16
9001661e:	2b00      	cmp	r3, #0
90016620:	f000 80b5 	beq.w	9001678e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016624:	682b      	ldr	r3, [r5, #0]
90016626:	4629      	mov	r1, r5
90016628:	a802      	add	r0, sp, #8
9001662a:	68db      	ldr	r3, [r3, #12]
9001662c:	4798      	blx	r3
9001662e:	4628      	mov	r0, r5
90016630:	f7ff ff60 	bl	900164f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90016634:	f8bd 7008 	ldrh.w	r7, [sp, #8]
90016638:	4407      	add	r7, r0
9001663a:	4628      	mov	r0, r5
9001663c:	f7ff ff6e 	bl	9001651c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90016640:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90016644:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90016648:	b23f      	sxth	r7, r7
9001664a:	4418      	add	r0, r3
9001664c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90016650:	4621      	mov	r1, r4
90016652:	f8ad 2014 	strh.w	r2, [sp, #20]
90016656:	f8ad 0012 	strh.w	r0, [sp, #18]
9001665a:	4630      	mov	r0, r6
9001665c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016660:	f8ad 7010 	strh.w	r7, [sp, #16]
90016664:	f7f9 fc80 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90016668:	4628      	mov	r0, r5
9001666a:	f7ff ff27 	bl	900164bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001666e:	ab06      	add	r3, sp, #24
90016670:	4602      	mov	r2, r0
90016672:	e896 0003 	ldmia.w	r6, {r0, r1}
90016676:	e883 0003 	stmia.w	r3, {r0, r1}
9001667a:	4611      	mov	r1, r2
9001667c:	4618      	mov	r0, r3
9001667e:	f7f9 fc73 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
90016682:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90016686:	f9b4 1000 	ldrsh.w	r1, [r4]
9001668a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
9001668e:	4299      	cmp	r1, r3
90016690:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90016694:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90016698:	d10b      	bne.n	900166b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001669a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001669e:	4552      	cmp	r2, sl
900166a0:	d107      	bne.n	900166b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900166a2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
900166a6:	455a      	cmp	r2, fp
900166a8:	d103      	bne.n	900166b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900166aa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900166ae:	454a      	cmp	r2, r9
900166b0:	d06d      	beq.n	9001678e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900166b2:	f1bb 0f00 	cmp.w	fp, #0
900166b6:	dd65      	ble.n	90016784 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900166b8:	f1b9 0f00 	cmp.w	r9, #0
900166bc:	dd62      	ble.n	90016784 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900166be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900166c2:	fa1f f08a 	uxth.w	r0, sl
900166c6:	4552      	cmp	r2, sl
900166c8:	9000      	str	r0, [sp, #0]
900166ca:	da12      	bge.n	900166f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900166cc:	9301      	str	r3, [sp, #4]
900166ce:	9b00      	ldr	r3, [sp, #0]
900166d0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900166d4:	f8ad 2012 	strh.w	r2, [sp, #18]
900166d8:	1a9a      	subs	r2, r3, r2
900166da:	f8ad 1010 	strh.w	r1, [sp, #16]
900166de:	4631      	mov	r1, r6
900166e0:	f8ad 0014 	strh.w	r0, [sp, #20]
900166e4:	4640      	mov	r0, r8
900166e6:	f8ad 2016 	strh.w	r2, [sp, #22]
900166ea:	69ea      	ldr	r2, [r5, #28]
900166ec:	f7ff ff7a 	bl	900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900166f0:	9b01      	ldr	r3, [sp, #4]
900166f2:	f9b4 2000 	ldrsh.w	r2, [r4]
900166f6:	b29f      	uxth	r7, r3
900166f8:	429a      	cmp	r2, r3
900166fa:	da0d      	bge.n	90016718 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
900166fc:	f8ad 2010 	strh.w	r2, [sp, #16]
90016700:	1aba      	subs	r2, r7, r2
90016702:	f8ad a012 	strh.w	sl, [sp, #18]
90016706:	4631      	mov	r1, r6
90016708:	f8ad 2014 	strh.w	r2, [sp, #20]
9001670c:	4640      	mov	r0, r8
9001670e:	f8ad 9016 	strh.w	r9, [sp, #22]
90016712:	69ea      	ldr	r2, [r5, #28]
90016714:	f7ff ff66 	bl	900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016718:	8822      	ldrh	r2, [r4, #0]
9001671a:	445f      	add	r7, fp
9001671c:	88a3      	ldrh	r3, [r4, #4]
9001671e:	b2bf      	uxth	r7, r7
90016720:	4413      	add	r3, r2
90016722:	b23a      	sxth	r2, r7
90016724:	b29b      	uxth	r3, r3
90016726:	b219      	sxth	r1, r3
90016728:	4291      	cmp	r1, r2
9001672a:	dd0d      	ble.n	90016748 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001672c:	1bdb      	subs	r3, r3, r7
9001672e:	f8ad 2010 	strh.w	r2, [sp, #16]
90016732:	f8ad a012 	strh.w	sl, [sp, #18]
90016736:	4631      	mov	r1, r6
90016738:	f8ad 3014 	strh.w	r3, [sp, #20]
9001673c:	4640      	mov	r0, r8
9001673e:	f8ad 9016 	strh.w	r9, [sp, #22]
90016742:	69ea      	ldr	r2, [r5, #28]
90016744:	f7ff ff4e 	bl	900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016748:	88e2      	ldrh	r2, [r4, #6]
9001674a:	8863      	ldrh	r3, [r4, #2]
9001674c:	4413      	add	r3, r2
9001674e:	9a00      	ldr	r2, [sp, #0]
90016750:	444a      	add	r2, r9
90016752:	b29b      	uxth	r3, r3
90016754:	fa1f f982 	uxth.w	r9, r2
90016758:	b219      	sxth	r1, r3
9001675a:	fa0f f289 	sxth.w	r2, r9
9001675e:	428a      	cmp	r2, r1
90016760:	da15      	bge.n	9001678e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016762:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90016766:	eba3 0309 	sub.w	r3, r3, r9
9001676a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001676e:	f8ad 1014 	strh.w	r1, [sp, #20]
90016772:	4631      	mov	r1, r6
90016774:	f8ad 0010 	strh.w	r0, [sp, #16]
90016778:	f8ad 2012 	strh.w	r2, [sp, #18]
9001677c:	f8ad 3016 	strh.w	r3, [sp, #22]
90016780:	69ea      	ldr	r2, [r5, #28]
90016782:	e001      	b.n	90016788 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90016784:	69ea      	ldr	r2, [r5, #28]
90016786:	4621      	mov	r1, r4
90016788:	4640      	mov	r0, r8
9001678a:	f7ff ff2b 	bl	900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001678e:	4628      	mov	r0, r5
90016790:	f7ff fe94 	bl	900164bc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016794:	6861      	ldr	r1, [r4, #4]
90016796:	4602      	mov	r2, r0
90016798:	4633      	mov	r3, r6
9001679a:	6820      	ldr	r0, [r4, #0]
9001679c:	c303      	stmia	r3!, {r0, r1}
9001679e:	4611      	mov	r1, r2
900167a0:	4630      	mov	r0, r6
900167a2:	f7f9 fbe1 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
900167a6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900167aa:	2b00      	cmp	r3, #0
900167ac:	f77f af33 	ble.w	90016616 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900167b0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900167b4:	2b00      	cmp	r3, #0
900167b6:	f77f af2e 	ble.w	90016616 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900167ba:	4628      	mov	r0, r5
900167bc:	f7ff fe9a 	bl	900164f4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900167c0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900167c4:	1a18      	subs	r0, r3, r0
900167c6:	f8ad 0010 	strh.w	r0, [sp, #16]
900167ca:	4628      	mov	r0, r5
900167cc:	f7ff fea6 	bl	9001651c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900167d0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900167d4:	4631      	mov	r1, r6
900167d6:	1a18      	subs	r0, r3, r0
900167d8:	f8ad 0012 	strh.w	r0, [sp, #18]
900167dc:	4628      	mov	r0, r5
900167de:	682b      	ldr	r3, [r5, #0]
900167e0:	689b      	ldr	r3, [r3, #8]
900167e2:	4798      	blx	r3
900167e4:	e717      	b.n	90016616 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900167e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900167e6:	b570      	push	{r4, r5, r6, lr}
900167e8:	1d06      	adds	r6, r0, #4
900167ea:	b086      	sub	sp, #24
900167ec:	460c      	mov	r4, r1
900167ee:	2300      	movs	r3, #0
900167f0:	4631      	mov	r1, r6
900167f2:	4605      	mov	r5, r0
900167f4:	a802      	add	r0, sp, #8
900167f6:	9301      	str	r3, [sp, #4]
900167f8:	f7ff fbea 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900167fc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90016800:	8822      	ldrh	r2, [r4, #0]
90016802:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90016806:	1ad2      	subs	r2, r2, r3
90016808:	8863      	ldrh	r3, [r4, #2]
9001680a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001680e:	1a5b      	subs	r3, r3, r1
90016810:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90016814:	f8ad 2010 	strh.w	r2, [sp, #16]
90016818:	aa01      	add	r2, sp, #4
9001681a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001681e:	4630      	mov	r0, r6
90016820:	f8ad 1016 	strh.w	r1, [sp, #22]
90016824:	a904      	add	r1, sp, #16
90016826:	f8ad 3012 	strh.w	r3, [sp, #18]
9001682a:	f7f9 fc75 	bl	90010118 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001682e:	9a01      	ldr	r2, [sp, #4]
90016830:	b11a      	cbz	r2, 9001683a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90016832:	4621      	mov	r1, r4
90016834:	4628      	mov	r0, r5
90016836:	f7ff fed5 	bl	900165e4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001683a:	b006      	add	sp, #24
9001683c:	bd70      	pop	{r4, r5, r6, pc}

9001683e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
9001683e:	4602      	mov	r2, r0
90016840:	b530      	push	{r4, r5, lr}
90016842:	4604      	mov	r4, r0
90016844:	b085      	sub	sp, #20
90016846:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001684a:	460d      	mov	r5, r1
9001684c:	466b      	mov	r3, sp
9001684e:	6851      	ldr	r1, [r2, #4]
90016850:	c303      	stmia	r3!, {r0, r1}
90016852:	4629      	mov	r1, r5
90016854:	4668      	mov	r0, sp
90016856:	f7f9 fb87 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001685a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
9001685e:	b12b      	cbz	r3, 9001686c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90016860:	4669      	mov	r1, sp
90016862:	4620      	mov	r0, r4
90016864:	f7ff ffbf 	bl	900167e6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
90016868:	b005      	add	sp, #20
9001686a:	bd30      	pop	{r4, r5, pc}
9001686c:	3404      	adds	r4, #4
9001686e:	a802      	add	r0, sp, #8
90016870:	4621      	mov	r1, r4
90016872:	f7ff fbad 	bl	90015fd0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016876:	f8bd 3000 	ldrh.w	r3, [sp]
9001687a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
9001687e:	4669      	mov	r1, sp
90016880:	4620      	mov	r0, r4
90016882:	1a9b      	subs	r3, r3, r2
90016884:	f8bd 200a 	ldrh.w	r2, [sp, #10]
90016888:	f8ad 3000 	strh.w	r3, [sp]
9001688c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016890:	1a9b      	subs	r3, r3, r2
90016892:	f8ad 3002 	strh.w	r3, [sp, #2]
90016896:	f7f9 fc06 	bl	900100a6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001689a:	e7e5      	b.n	90016868 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

9001689c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
9001689c:	460b      	mov	r3, r1
9001689e:	680a      	ldr	r2, [r1, #0]
900168a0:	1d01      	adds	r1, r0, #4
900168a2:	6992      	ldr	r2, [r2, #24]
900168a4:	4618      	mov	r0, r3
900168a6:	4710      	bx	r2

900168a8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
900168a8:	4298      	cmp	r0, r3
900168aa:	d200      	bcs.n	900168ae <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
900168ac:	b913      	cbnz	r3, 900168b4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
900168ae:	440a      	add	r2, r1
900168b0:	b210      	sxth	r0, r2
900168b2:	4770      	bx	lr
900168b4:	ee07 0a90 	vmov	s15, r0
900168b8:	eef8 6a67 	vcvt.f32.u32	s13, s15
900168bc:	ee07 3a90 	vmov	s15, r3
900168c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900168c4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
900168c8:	ee07 2a90 	vmov	s15, r2
900168cc:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900168d0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
900168d4:	ee07 1a90 	vmov	s15, r1
900168d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900168dc:	ee37 7a66 	vsub.f32	s14, s14, s13
900168e0:	ee67 5a07 	vmul.f32	s11, s14, s14
900168e4:	eee5 6a87 	vfma.f32	s13, s11, s14
900168e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
900168ec:	eee6 7a26 	vfma.f32	s15, s12, s13
900168f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900168f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900168f8:	bfcc      	ite	gt
900168fa:	ee77 7a87 	vaddgt.f32	s15, s15, s14
900168fe:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90016902:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90016906:	ee17 3a90 	vmov	r3, s15
9001690a:	b218      	sxth	r0, r3
9001690c:	4770      	bx	lr

9001690e <_ZN8touchgfx12TextProviderC1Ev>:
9001690e:	b538      	push	{r3, r4, r5, lr}
90016910:	2500      	movs	r5, #0
90016912:	2302      	movs	r3, #2
90016914:	4604      	mov	r4, r0
90016916:	220e      	movs	r2, #14
90016918:	7403      	strb	r3, [r0, #16]
9001691a:	4629      	mov	r1, r5
9001691c:	6145      	str	r5, [r0, #20]
9001691e:	7605      	strb	r5, [r0, #24]
90016920:	83c5      	strh	r5, [r0, #30]
90016922:	8405      	strh	r5, [r0, #32]
90016924:	86c5      	strh	r5, [r0, #54]	; 0x36
90016926:	8705      	strh	r5, [r0, #56]	; 0x38
90016928:	87c5      	strh	r5, [r0, #62]	; 0x3e
9001692a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
9001692e:	e9c0 5500 	strd	r5, r5, [r0]
90016932:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90016936:	304c      	adds	r0, #76	; 0x4c
90016938:	f00f fe8a 	bl	90026650 <memset>
9001693c:	2301      	movs	r3, #1
9001693e:	4620      	mov	r0, r4
90016940:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90016944:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016948:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
9001694c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90016950:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90016954:	f7ed fe52 	bl	900045fc <_ZN8touchgfx12TextProvider18initializeInternalEv>
90016958:	4620      	mov	r0, r4
9001695a:	bd38      	pop	{r3, r4, r5, pc}

9001695c <_ZN8touchgfx12TextProvider11endOfStringEv>:
9001695c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001695e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016962:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90016964:	fab0 f080 	clz	r0, r0
90016968:	0940      	lsrs	r0, r0, #5
9001696a:	4770      	bx	lr

9001696c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001696c:	b530      	push	{r4, r5, lr}
9001696e:	2500      	movs	r5, #0
90016970:	2401      	movs	r4, #1
90016972:	6843      	ldr	r3, [r0, #4]
90016974:	b913      	cbnz	r3, 9001697c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90016976:	6803      	ldr	r3, [r0, #0]
90016978:	b313      	cbz	r3, 900169c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
9001697a:	6043      	str	r3, [r0, #4]
9001697c:	7e03      	ldrb	r3, [r0, #24]
9001697e:	b143      	cbz	r3, 90016992 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90016980:	6943      	ldr	r3, [r0, #20]
90016982:	b12b      	cbz	r3, 90016990 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016984:	881a      	ldrh	r2, [r3, #0]
90016986:	b11a      	cbz	r2, 90016990 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016988:	1c9a      	adds	r2, r3, #2
9001698a:	6142      	str	r2, [r0, #20]
9001698c:	8818      	ldrh	r0, [r3, #0]
9001698e:	bd30      	pop	{r4, r5, pc}
90016990:	7605      	strb	r5, [r0, #24]
90016992:	6843      	ldr	r3, [r0, #4]
90016994:	8819      	ldrh	r1, [r3, #0]
90016996:	b199      	cbz	r1, 900169c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016998:	1c9a      	adds	r2, r3, #2
9001699a:	2902      	cmp	r1, #2
9001699c:	6042      	str	r2, [r0, #4]
9001699e:	d1f5      	bne.n	9001698c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
900169a0:	7c03      	ldrb	r3, [r0, #16]
900169a2:	2b01      	cmp	r3, #1
900169a4:	d8e5      	bhi.n	90016972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900169a6:	1c5a      	adds	r2, r3, #1
900169a8:	3302      	adds	r3, #2
900169aa:	7402      	strb	r2, [r0, #16]
900169ac:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
900169b0:	6143      	str	r3, [r0, #20]
900169b2:	2b00      	cmp	r3, #0
900169b4:	d0dd      	beq.n	90016972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900169b6:	881b      	ldrh	r3, [r3, #0]
900169b8:	2b00      	cmp	r3, #0
900169ba:	d0da      	beq.n	90016972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900169bc:	7604      	strb	r4, [r0, #24]
900169be:	e7d8      	b.n	90016972 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
900169c0:	2000      	movs	r0, #0
900169c2:	e7e4      	b.n	9001698e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
900169c4:	6001      	str	r1, [r0, #0]
900169c6:	2100      	movs	r1, #0
900169c8:	b430      	push	{r4, r5}
900169ca:	6041      	str	r1, [r0, #4]
900169cc:	6815      	ldr	r5, [r2, #0]
900169ce:	6085      	str	r5, [r0, #8]
900169d0:	6852      	ldr	r2, [r2, #4]
900169d2:	6443      	str	r3, [r0, #68]	; 0x44
900169d4:	9b02      	ldr	r3, [sp, #8]
900169d6:	60c2      	str	r2, [r0, #12]
900169d8:	7401      	strb	r1, [r0, #16]
900169da:	6141      	str	r1, [r0, #20]
900169dc:	7601      	strb	r1, [r0, #24]
900169de:	8701      	strh	r1, [r0, #56]	; 0x38
900169e0:	8401      	strh	r1, [r0, #32]
900169e2:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
900169e6:	6483      	str	r3, [r0, #72]	; 0x48
900169e8:	bc30      	pop	{r4, r5}
900169ea:	f7ed be07 	b.w	900045fc <_ZN8touchgfx12TextProvider18initializeInternalEv>

900169ee <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
900169ee:	b408      	push	{r3}
900169f0:	b510      	push	{r4, lr}
900169f2:	b085      	sub	sp, #20
900169f4:	ac07      	add	r4, sp, #28
900169f6:	f854 3b04 	ldr.w	r3, [r4], #4
900169fa:	9300      	str	r3, [sp, #0]
900169fc:	4613      	mov	r3, r2
900169fe:	4622      	mov	r2, r4
90016a00:	9403      	str	r4, [sp, #12]
90016a02:	f7ff ffdf 	bl	900169c4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016a06:	b005      	add	sp, #20
90016a08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016a0c:	b001      	add	sp, #4
90016a0e:	4770      	bx	lr

90016a10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90016a10:	b5f0      	push	{r4, r5, r6, r7, lr}
90016a12:	4605      	mov	r5, r0
90016a14:	4608      	mov	r0, r1
90016a16:	b1f1      	cbz	r1, 90016a56 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90016a18:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90016a1c:	460b      	mov	r3, r1
90016a1e:	f101 0708 	add.w	r7, r1, #8
90016a22:	4622      	mov	r2, r4
90016a24:	6818      	ldr	r0, [r3, #0]
90016a26:	3308      	adds	r3, #8
90016a28:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016a2c:	4626      	mov	r6, r4
90016a2e:	42bb      	cmp	r3, r7
90016a30:	c603      	stmia	r6!, {r0, r1}
90016a32:	4634      	mov	r4, r6
90016a34:	d1f6      	bne.n	90016a24 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90016a36:	6818      	ldr	r0, [r3, #0]
90016a38:	6030      	str	r0, [r6, #0]
90016a3a:	4610      	mov	r0, r2
90016a3c:	889b      	ldrh	r3, [r3, #4]
90016a3e:	80b3      	strh	r3, [r6, #4]
90016a40:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90016a44:	015b      	lsls	r3, r3, #5
90016a46:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016a4a:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90016a4e:	430b      	orrs	r3, r1
90016a50:	425b      	negs	r3, r3
90016a52:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90016a56:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90016a58:	b538      	push	{r3, r4, r5, lr}
90016a5a:	460c      	mov	r4, r1
90016a5c:	6811      	ldr	r1, [r2, #0]
90016a5e:	4610      	mov	r0, r2
90016a60:	68cd      	ldr	r5, [r1, #12]
90016a62:	4619      	mov	r1, r3
90016a64:	47a8      	blx	r5
90016a66:	2800      	cmp	r0, #0
90016a68:	bf08      	it	eq
90016a6a:	4620      	moveq	r0, r4
90016a6c:	bd38      	pop	{r3, r4, r5, pc}
	...

90016a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90016a70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016a72:	4604      	mov	r4, r0
90016a74:	4615      	mov	r5, r2
90016a76:	4608      	mov	r0, r1
90016a78:	b93a      	cbnz	r2, 90016a8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90016a7a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016a7e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90016a82:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90016a86:	4628      	mov	r0, r5
90016a88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016a8a:	f892 c00d 	ldrb.w	ip, [r2, #13]
90016a8e:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90016a92:	8893      	ldrh	r3, [r2, #4]
90016a94:	ea4f 160c 	mov.w	r6, ip, lsl #4
90016a98:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016a9c:	79ee      	ldrb	r6, [r5, #7]
90016a9e:	4316      	orrs	r6, r2
90016aa0:	19da      	adds	r2, r3, r7
90016aa2:	b291      	uxth	r1, r2
90016aa4:	b2b7      	uxth	r7, r6
90016aa6:	291d      	cmp	r1, #29
90016aa8:	d87b      	bhi.n	90016ba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016aaa:	2201      	movs	r2, #1
90016aac:	10f6      	asrs	r6, r6, #3
90016aae:	408a      	lsls	r2, r1
90016ab0:	4974      	ldr	r1, [pc, #464]	; (90016c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90016ab2:	420a      	tst	r2, r1
90016ab4:	d12e      	bne.n	90016b14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90016ab6:	f412 7f60 	tst.w	r2, #896	; 0x380
90016aba:	d072      	beq.n	90016ba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016abc:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90016ac0:	462b      	mov	r3, r5
90016ac2:	f105 0e08 	add.w	lr, r5, #8
90016ac6:	4615      	mov	r5, r2
90016ac8:	6818      	ldr	r0, [r3, #0]
90016aca:	3308      	adds	r3, #8
90016acc:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016ad0:	4694      	mov	ip, r2
90016ad2:	4573      	cmp	r3, lr
90016ad4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016ad8:	4662      	mov	r2, ip
90016ada:	d1f5      	bne.n	90016ac8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90016adc:	6818      	ldr	r0, [r3, #0]
90016ade:	f8cc 0000 	str.w	r0, [ip]
90016ae2:	889b      	ldrh	r3, [r3, #4]
90016ae4:	f8ac 3004 	strh.w	r3, [ip, #4]
90016ae8:	b2b3      	uxth	r3, r6
90016aea:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90016aee:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90016af2:	1aca      	subs	r2, r1, r3
90016af4:	1bcf      	subs	r7, r1, r7
90016af6:	f020 0060 	bic.w	r0, r0, #96	; 0x60
90016afa:	b292      	uxth	r2, r2
90016afc:	1afb      	subs	r3, r7, r3
90016afe:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90016b02:	10d2      	asrs	r2, r2, #3
90016b04:	f002 0260 	and.w	r2, r2, #96	; 0x60
90016b08:	4302      	orrs	r2, r0
90016b0a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
90016b0e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90016b12:	e7b8      	b.n	90016a86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016b14:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90016b16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90016b1a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
90016b1c:	f640 6333 	movw	r3, #3635	; 0xe33
90016b20:	4299      	cmp	r1, r3
90016b22:	d110      	bne.n	90016b46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90016b24:	6803      	ldr	r3, [r0, #0]
90016b26:	68db      	ldr	r3, [r3, #12]
90016b28:	4798      	blx	r3
90016b2a:	7b41      	ldrb	r1, [r0, #13]
90016b2c:	00cb      	lsls	r3, r1, #3
90016b2e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016b32:	7a03      	ldrb	r3, [r0, #8]
90016b34:	0648      	lsls	r0, r1, #25
90016b36:	ea43 0302 	orr.w	r3, r3, r2
90016b3a:	bf44      	itt	mi
90016b3c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016b40:	b21b      	sxthmi	r3, r3
90016b42:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016b46:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
90016b4a:	462a      	mov	r2, r5
90016b4c:	f105 0c08 	add.w	ip, r5, #8
90016b50:	443b      	add	r3, r7
90016b52:	4433      	add	r3, r6
90016b54:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90016b58:	b29b      	uxth	r3, r3
90016b5a:	4635      	mov	r5, r6
90016b5c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016b60:	6810      	ldr	r0, [r2, #0]
90016b62:	3208      	adds	r2, #8
90016b64:	f852 1c04 	ldr.w	r1, [r2, #-4]
90016b68:	4637      	mov	r7, r6
90016b6a:	4562      	cmp	r2, ip
90016b6c:	c703      	stmia	r7!, {r0, r1}
90016b6e:	463e      	mov	r6, r7
90016b70:	d1f6      	bne.n	90016b60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90016b72:	6810      	ldr	r0, [r2, #0]
90016b74:	6038      	str	r0, [r7, #0]
90016b76:	8892      	ldrh	r2, [r2, #4]
90016b78:	80ba      	strh	r2, [r7, #4]
90016b7a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016b7e:	10db      	asrs	r3, r3, #3
90016b80:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016b84:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016b88:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016b8c:	4313      	orrs	r3, r2
90016b8e:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90016b92:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016b96:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90016b9a:	1a9b      	subs	r3, r3, r2
90016b9c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90016ba0:	e771      	b.n	90016a86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016ba2:	f023 0204 	bic.w	r2, r3, #4
90016ba6:	f640 611b 	movw	r1, #3611	; 0xe1b
90016baa:	428a      	cmp	r2, r1
90016bac:	d003      	beq.n	90016bb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90016bae:	f640 621d 	movw	r2, #3613	; 0xe1d
90016bb2:	4293      	cmp	r3, r2
90016bb4:	d120      	bne.n	90016bf8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90016bb6:	3b01      	subs	r3, #1
90016bb8:	4602      	mov	r2, r0
90016bba:	4629      	mov	r1, r5
90016bbc:	4620      	mov	r0, r4
90016bbe:	b29b      	uxth	r3, r3
90016bc0:	f7ff ff4a 	bl	90016a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016bc4:	7b41      	ldrb	r1, [r0, #13]
90016bc6:	00cb      	lsls	r3, r1, #3
90016bc8:	0649      	lsls	r1, r1, #25
90016bca:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016bce:	7a03      	ldrb	r3, [r0, #8]
90016bd0:	ea43 0302 	orr.w	r3, r3, r2
90016bd4:	bf44      	itt	mi
90016bd6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016bda:	b21b      	sxthmi	r3, r3
90016bdc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016be0:	7b6b      	ldrb	r3, [r5, #13]
90016be2:	7aaa      	ldrb	r2, [r5, #10]
90016be4:	005b      	lsls	r3, r3, #1
90016be6:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016bea:	4313      	orrs	r3, r2
90016bec:	115a      	asrs	r2, r3, #5
90016bee:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90016bf2:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016bf6:	e035      	b.n	90016c64 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90016bf8:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90016bfc:	f01c 0f40 	tst.w	ip, #64	; 0x40
90016c00:	f402 7180 	and.w	r1, r2, #256	; 0x100
90016c04:	7a2a      	ldrb	r2, [r5, #8]
90016c06:	ea42 0201 	orr.w	r2, r2, r1
90016c0a:	f640 6109 	movw	r1, #3593	; 0xe09
90016c0e:	bf1c      	itt	ne
90016c10:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90016c14:	b212      	sxthne	r2, r2
90016c16:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016c1a:	f023 0210 	bic.w	r2, r3, #16
90016c1e:	428a      	cmp	r2, r1
90016c20:	d003      	beq.n	90016c2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90016c22:	f640 6213 	movw	r2, #3603	; 0xe13
90016c26:	4293      	cmp	r3, r2
90016c28:	d129      	bne.n	90016c7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90016c2a:	7b6e      	ldrb	r6, [r5, #13]
90016c2c:	4629      	mov	r1, r5
90016c2e:	0076      	lsls	r6, r6, #1
90016c30:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016c34:	7aae      	ldrb	r6, [r5, #10]
90016c36:	4316      	orrs	r6, r2
90016c38:	f640 6213 	movw	r2, #3603	; 0xe13
90016c3c:	4293      	cmp	r3, r2
90016c3e:	4602      	mov	r2, r0
90016c40:	4620      	mov	r0, r4
90016c42:	bf16      	itet	ne
90016c44:	f103 33ff 	addne.w	r3, r3, #4294967295
90016c48:	f640 630c 	movweq	r3, #3596	; 0xe0c
90016c4c:	b29b      	uxthne	r3, r3
90016c4e:	f7ff ff03 	bl	90016a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016c52:	7b43      	ldrb	r3, [r0, #13]
90016c54:	7a82      	ldrb	r2, [r0, #10]
90016c56:	005b      	lsls	r3, r3, #1
90016c58:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016c5c:	4313      	orrs	r3, r2
90016c5e:	1af6      	subs	r6, r6, r3
90016c60:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90016c64:	7b69      	ldrb	r1, [r5, #13]
90016c66:	00cb      	lsls	r3, r1, #3
90016c68:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016c6c:	7a2b      	ldrb	r3, [r5, #8]
90016c6e:	4313      	orrs	r3, r2
90016c70:	064a      	lsls	r2, r1, #25
90016c72:	bf44      	itt	mi
90016c74:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016c78:	b21b      	sxthmi	r3, r3
90016c7a:	1bdb      	subs	r3, r3, r7
90016c7c:	e747      	b.n	90016b0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90016c7e:	2300      	movs	r3, #0
90016c80:	e7b7      	b.n	90016bf2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90016c82:	bf00      	nop
90016c84:	3fc00079 	.word	0x3fc00079

90016c88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90016c88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016c8c:	4604      	mov	r4, r0
90016c8e:	b942      	cbnz	r2, 90016ca2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90016c90:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90016c94:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90016c98:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
90016c9c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016ca0:	e047      	b.n	90016d32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016ca2:	7b51      	ldrb	r1, [r2, #13]
90016ca4:	8893      	ldrh	r3, [r2, #4]
90016ca6:	010d      	lsls	r5, r1, #4
90016ca8:	f405 7080 	and.w	r0, r5, #256	; 0x100
90016cac:	79d5      	ldrb	r5, [r2, #7]
90016cae:	4305      	orrs	r5, r0
90016cb0:	2d04      	cmp	r5, #4
90016cb2:	bfcc      	ite	gt
90016cb4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90016cb8:	f04f 0e01 	movle.w	lr, #1
90016cbc:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90016cc0:	f200 80ab 	bhi.w	90016e1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90016cc4:	f240 60e7 	movw	r0, #1767	; 0x6e7
90016cc8:	4283      	cmp	r3, r0
90016cca:	d216      	bcs.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016ccc:	f240 605b 	movw	r0, #1627	; 0x65b
90016cd0:	4283      	cmp	r3, r0
90016cd2:	d859      	bhi.n	90016d88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90016cd4:	f240 6057 	movw	r0, #1623	; 0x657
90016cd8:	4283      	cmp	r3, r0
90016cda:	d20e      	bcs.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cdc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016ce0:	d24a      	bcs.n	90016d78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90016ce2:	f240 604e 	movw	r0, #1614	; 0x64e
90016ce6:	4283      	cmp	r3, r0
90016ce8:	d207      	bcs.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016cea:	f240 601a 	movw	r0, #1562	; 0x61a
90016cee:	4283      	cmp	r3, r0
90016cf0:	d02a      	beq.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016cf2:	d821      	bhi.n	90016d38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90016cf4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90016cf8:	d35b      	bcc.n	90016db2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016cfa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
90016cfe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016d02:	f040 80d0 	bne.w	90016ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016d06:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
90016d0a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016d0e:	f040 80ca 	bne.w	90016ea6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016d12:	00cb      	lsls	r3, r1, #3
90016d14:	0649      	lsls	r1, r1, #25
90016d16:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016d1a:	7a13      	ldrb	r3, [r2, #8]
90016d1c:	ea43 0300 	orr.w	r3, r3, r0
90016d20:	bf44      	itt	mi
90016d22:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016d26:	b21b      	sxthmi	r3, r3
90016d28:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016d2c:	1b5d      	subs	r5, r3, r5
90016d2e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016d32:	4610      	mov	r0, r2
90016d34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016d38:	f240 604b 	movw	r0, #1611	; 0x64b
90016d3c:	4283      	cmp	r3, r0
90016d3e:	d338      	bcc.n	90016db2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016d40:	f240 604c 	movw	r0, #1612	; 0x64c
90016d44:	4283      	cmp	r3, r0
90016d46:	d9d8      	bls.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016d48:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
90016d4c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90016d50:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016d54:	f040 80f3 	bne.w	90016f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016d58:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016d5c:	f040 80ef 	bne.w	90016f3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016d60:	00cb      	lsls	r3, r1, #3
90016d62:	064e      	lsls	r6, r1, #25
90016d64:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016d68:	7a13      	ldrb	r3, [r2, #8]
90016d6a:	ea43 0300 	orr.w	r3, r3, r0
90016d6e:	bf44      	itt	mi
90016d70:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016d74:	b21b      	sxthmi	r3, r3
90016d76:	e7d9      	b.n	90016d2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90016d78:	f240 6054 	movw	r0, #1620	; 0x654
90016d7c:	4283      	cmp	r3, r0
90016d7e:	d8e3      	bhi.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d80:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016d84:	d9e0      	bls.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016d86:	e7b8      	b.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016d88:	f240 6074 	movw	r0, #1652	; 0x674
90016d8c:	4283      	cmp	r3, r0
90016d8e:	d0b4      	beq.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016d90:	d82d      	bhi.n	90016dee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90016d92:	f240 605e 	movw	r0, #1630	; 0x65e
90016d96:	4283      	cmp	r3, r0
90016d98:	d804      	bhi.n	90016da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90016d9a:	f240 605d 	movw	r0, #1629	; 0x65d
90016d9e:	4283      	cmp	r3, r0
90016da0:	d3d2      	bcc.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016da2:	e7aa      	b.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016da4:	f240 605f 	movw	r0, #1631	; 0x65f
90016da8:	4283      	cmp	r3, r0
90016daa:	d0cd      	beq.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016dac:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90016db0:	d0a3      	beq.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016db2:	00cb      	lsls	r3, r1, #3
90016db4:	0649      	lsls	r1, r1, #25
90016db6:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016dba:	7a13      	ldrb	r3, [r2, #8]
90016dbc:	ea43 0300 	orr.w	r3, r3, r0
90016dc0:	bf44      	itt	mi
90016dc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016dc6:	b21b      	sxthmi	r3, r3
90016dc8:	1b5d      	subs	r5, r3, r5
90016dca:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016dce:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016dd2:	7b53      	ldrb	r3, [r2, #13]
90016dd4:	015b      	lsls	r3, r3, #5
90016dd6:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016dda:	7993      	ldrb	r3, [r2, #6]
90016ddc:	430b      	orrs	r3, r1
90016dde:	2105      	movs	r1, #5
90016de0:	005b      	lsls	r3, r3, #1
90016de2:	fb93 f3f1 	sdiv	r3, r3, r1
90016de6:	f992 1009 	ldrsb.w	r1, [r2, #9]
90016dea:	440b      	add	r3, r1
90016dec:	e756      	b.n	90016c9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90016dee:	f240 60e2 	movw	r0, #1762	; 0x6e2
90016df2:	4283      	cmp	r3, r0
90016df4:	d809      	bhi.n	90016e0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90016df6:	f240 60df 	movw	r0, #1759	; 0x6df
90016dfa:	4283      	cmp	r3, r0
90016dfc:	f4bf af7d 	bcs.w	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e00:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90016e04:	2b05      	cmp	r3, #5
90016e06:	d8d4      	bhi.n	90016db2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016e08:	e777      	b.n	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e0a:	f240 60e3 	movw	r0, #1763	; 0x6e3
90016e0e:	4283      	cmp	r3, r0
90016e10:	d09a      	beq.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e12:	f240 60e4 	movw	r0, #1764	; 0x6e4
90016e16:	4283      	cmp	r3, r0
90016e18:	e7ca      	b.n	90016db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90016e1a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
90016e1e:	d22b      	bcs.n	90016e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90016e20:	f640 00ed 	movw	r0, #2285	; 0x8ed
90016e24:	4283      	cmp	r3, r0
90016e26:	d28f      	bcs.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e28:	f640 00e5 	movw	r0, #2277	; 0x8e5
90016e2c:	4283      	cmp	r3, r0
90016e2e:	d816      	bhi.n	90016e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90016e30:	f640 00e4 	movw	r0, #2276	; 0x8e4
90016e34:	4283      	cmp	r3, r0
90016e36:	f4bf af60 	bcs.w	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e3a:	f240 60ec 	movw	r0, #1772	; 0x6ec
90016e3e:	4283      	cmp	r3, r0
90016e40:	d80a      	bhi.n	90016e58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90016e42:	f240 60eb 	movw	r0, #1771	; 0x6eb
90016e46:	4283      	cmp	r3, r0
90016e48:	f4bf af57 	bcs.w	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e4c:	f240 60ea 	movw	r0, #1770	; 0x6ea
90016e50:	4283      	cmp	r3, r0
90016e52:	f43f af79 	beq.w	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e56:	e7ac      	b.n	90016db2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016e58:	f240 60ed 	movw	r0, #1773	; 0x6ed
90016e5c:	e7f8      	b.n	90016e50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90016e5e:	f640 00e8 	movw	r0, #2280	; 0x8e8
90016e62:	4283      	cmp	r3, r0
90016e64:	d802      	bhi.n	90016e6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90016e66:	f640 00e7 	movw	r0, #2279	; 0x8e7
90016e6a:	e798      	b.n	90016d9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90016e6c:	f640 00e9 	movw	r0, #2281	; 0x8e9
90016e70:	4283      	cmp	r3, r0
90016e72:	f47f af42 	bne.w	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e76:	e767      	b.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e78:	f640 00f6 	movw	r0, #2294	; 0x8f6
90016e7c:	4283      	cmp	r3, r0
90016e7e:	f43f af63 	beq.w	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e82:	d802      	bhi.n	90016e8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90016e84:	f640 00f2 	movw	r0, #2290	; 0x8f2
90016e88:	e7f2      	b.n	90016e70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90016e8a:	f640 00fa 	movw	r0, #2298	; 0x8fa
90016e8e:	4283      	cmp	r3, r0
90016e90:	d805      	bhi.n	90016e9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90016e92:	f640 00f9 	movw	r0, #2297	; 0x8f9
90016e96:	4283      	cmp	r3, r0
90016e98:	f4ff af2f 	bcc.w	90016cfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e9c:	e754      	b.n	90016d48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e9e:	f640 00fe 	movw	r0, #2302	; 0x8fe
90016ea2:	4283      	cmp	r3, r0
90016ea4:	e7af      	b.n	90016e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90016ea6:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90016eaa:	4617      	mov	r7, r2
90016eac:	f102 0808 	add.w	r8, r2, #8
90016eb0:	4666      	mov	r6, ip
90016eb2:	6838      	ldr	r0, [r7, #0]
90016eb4:	3708      	adds	r7, #8
90016eb6:	f857 1c04 	ldr.w	r1, [r7, #-4]
90016eba:	46e6      	mov	lr, ip
90016ebc:	4547      	cmp	r7, r8
90016ebe:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90016ec2:	46f4      	mov	ip, lr
90016ec4:	d1f5      	bne.n	90016eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90016ec6:	6838      	ldr	r0, [r7, #0]
90016ec8:	f8ce 0000 	str.w	r0, [lr]
90016ecc:	88b9      	ldrh	r1, [r7, #4]
90016ece:	f8ae 1004 	strh.w	r1, [lr, #4]
90016ed2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90016ed6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016eda:	d009      	beq.n	90016ef0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90016edc:	7b51      	ldrb	r1, [r2, #13]
90016ede:	7992      	ldrb	r2, [r2, #6]
90016ee0:	0149      	lsls	r1, r1, #5
90016ee2:	f401 7180 	and.w	r1, r1, #256	; 0x100
90016ee6:	4311      	orrs	r1, r2
90016ee8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90016eec:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90016ef0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016ef4:	b2ad      	uxth	r5, r5
90016ef6:	d00d      	beq.n	90016f14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90016ef8:	442b      	add	r3, r5
90016efa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016efe:	b29b      	uxth	r3, r3
90016f00:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016f04:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016f08:	10db      	asrs	r3, r3, #3
90016f0a:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016f0e:	4313      	orrs	r3, r2
90016f10:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016f14:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90016f18:	00cb      	lsls	r3, r1, #3
90016f1a:	064f      	lsls	r7, r1, #25
90016f1c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016f20:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90016f24:	ea43 0302 	orr.w	r3, r3, r2
90016f28:	bf44      	itt	mi
90016f2a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016f2e:	b21b      	sxthmi	r3, r3
90016f30:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016f34:	1b5b      	subs	r3, r3, r5
90016f36:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90016f3a:	4632      	mov	r2, r6
90016f3c:	e6f9      	b.n	90016d32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016f3e:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
90016f42:	4617      	mov	r7, r2
90016f44:	f102 0908 	add.w	r9, r2, #8
90016f48:	4666      	mov	r6, ip
90016f4a:	6838      	ldr	r0, [r7, #0]
90016f4c:	3708      	adds	r7, #8
90016f4e:	f857 1c04 	ldr.w	r1, [r7, #-4]
90016f52:	46e0      	mov	r8, ip
90016f54:	454f      	cmp	r7, r9
90016f56:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90016f5a:	46c4      	mov	ip, r8
90016f5c:	d1f5      	bne.n	90016f4a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90016f5e:	6838      	ldr	r0, [r7, #0]
90016f60:	f8c8 0000 	str.w	r0, [r8]
90016f64:	88b9      	ldrh	r1, [r7, #4]
90016f66:	f8a8 1004 	strh.w	r1, [r8, #4]
90016f6a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90016f6e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016f72:	d009      	beq.n	90016f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90016f74:	7b51      	ldrb	r1, [r2, #13]
90016f76:	7992      	ldrb	r2, [r2, #6]
90016f78:	0149      	lsls	r1, r1, #5
90016f7a:	f401 7180 	and.w	r1, r1, #256	; 0x100
90016f7e:	4311      	orrs	r1, r2
90016f80:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90016f84:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90016f88:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016f8c:	d00e      	beq.n	90016fac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90016f8e:	eba3 030e 	sub.w	r3, r3, lr
90016f92:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016f96:	b29b      	uxth	r3, r3
90016f98:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016f9c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016fa0:	10db      	asrs	r3, r3, #3
90016fa2:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016fa6:	4313      	orrs	r3, r2
90016fa8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016fac:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90016fb0:	00cb      	lsls	r3, r1, #3
90016fb2:	0648      	lsls	r0, r1, #25
90016fb4:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016fb8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90016fbc:	ea43 0302 	orr.w	r3, r3, r2
90016fc0:	bf44      	itt	mi
90016fc2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016fc6:	b21b      	sxthmi	r3, r3
90016fc8:	1b5d      	subs	r5, r3, r5
90016fca:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016fce:	e7b4      	b.n	90016f3a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90016fd0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90016fd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016fd4:	461e      	mov	r6, r3
90016fd6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90016fd8:	4604      	mov	r4, r0
90016fda:	4617      	mov	r7, r2
90016fdc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90016fe0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90016fe4:	f7ed faba 	bl	9000455c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90016fe8:	4605      	mov	r5, r0
90016fea:	b918      	cbnz	r0, 90016ff4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90016fec:	6030      	str	r0, [r6, #0]
90016fee:	4628      	mov	r0, r5
90016ff0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016ff4:	683b      	ldr	r3, [r7, #0]
90016ff6:	4601      	mov	r1, r0
90016ff8:	4638      	mov	r0, r7
90016ffa:	68db      	ldr	r3, [r3, #12]
90016ffc:	4798      	blx	r3
90016ffe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90017002:	4602      	mov	r2, r0
90017004:	6030      	str	r0, [r6, #0]
90017006:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001700a:	d213      	bcs.n	90017034 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001700c:	4643      	mov	r3, r8
9001700e:	4639      	mov	r1, r7
90017010:	4620      	mov	r0, r4
90017012:	f7ff fe39 	bl	90016c88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017016:	6030      	str	r0, [r6, #0]
90017018:	6833      	ldr	r3, [r6, #0]
9001701a:	b143      	cbz	r3, 9001702e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001701c:	7b5a      	ldrb	r2, [r3, #13]
9001701e:	7a9b      	ldrb	r3, [r3, #10]
90017020:	0052      	lsls	r2, r2, #1
90017022:	f402 7280 	and.w	r2, r2, #256	; 0x100
90017026:	4313      	orrs	r3, r2
90017028:	bf0c      	ite	eq
9001702a:	2301      	moveq	r3, #1
9001702c:	2300      	movne	r3, #0
9001702e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
90017032:	e7dc      	b.n	90016fee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90017034:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90017038:	b29b      	uxth	r3, r3
9001703a:	2b7f      	cmp	r3, #127	; 0x7f
9001703c:	d804      	bhi.n	90017048 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
9001703e:	4639      	mov	r1, r7
90017040:	4620      	mov	r0, r4
90017042:	f7ff fd15 	bl	90016a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90017046:	e7e6      	b.n	90017016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90017048:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
9001704c:	2b00      	cmp	r3, #0
9001704e:	d0e3      	beq.n	90017018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017050:	f640 1302 	movw	r3, #2306	; 0x902
90017054:	429d      	cmp	r5, r3
90017056:	d1df      	bne.n	90017018 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90017058:	4601      	mov	r1, r0
9001705a:	4620      	mov	r0, r4
9001705c:	f7ff fcd8 	bl	90016a10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017060:	e7d9      	b.n	90017016 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90017062 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90017062:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90017066:	461e      	mov	r6, r3
90017068:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001706a:	4604      	mov	r4, r0
9001706c:	4617      	mov	r7, r2
9001706e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017072:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017076:	f7ed fa71 	bl	9000455c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001707a:	4605      	mov	r5, r0
9001707c:	b918      	cbnz	r0, 90017086 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
9001707e:	6030      	str	r0, [r6, #0]
90017080:	4628      	mov	r0, r5
90017082:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90017086:	683b      	ldr	r3, [r7, #0]
90017088:	4601      	mov	r1, r0
9001708a:	4638      	mov	r0, r7
9001708c:	f8d3 9008 	ldr.w	r9, [r3, #8]
90017090:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90017094:	47c8      	blx	r9
90017096:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001709a:	4602      	mov	r2, r0
9001709c:	6030      	str	r0, [r6, #0]
9001709e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
900170a2:	d213      	bcs.n	900170cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
900170a4:	4643      	mov	r3, r8
900170a6:	4639      	mov	r1, r7
900170a8:	4620      	mov	r0, r4
900170aa:	f7ff fded 	bl	90016c88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
900170ae:	6030      	str	r0, [r6, #0]
900170b0:	6833      	ldr	r3, [r6, #0]
900170b2:	b143      	cbz	r3, 900170c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
900170b4:	7b5a      	ldrb	r2, [r3, #13]
900170b6:	7a9b      	ldrb	r3, [r3, #10]
900170b8:	0052      	lsls	r2, r2, #1
900170ba:	f402 7280 	and.w	r2, r2, #256	; 0x100
900170be:	4313      	orrs	r3, r2
900170c0:	bf0c      	ite	eq
900170c2:	2301      	moveq	r3, #1
900170c4:	2300      	movne	r3, #0
900170c6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
900170ca:	e7d9      	b.n	90017080 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
900170cc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
900170d0:	b29b      	uxth	r3, r3
900170d2:	2b7f      	cmp	r3, #127	; 0x7f
900170d4:	d804      	bhi.n	900170e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
900170d6:	4639      	mov	r1, r7
900170d8:	4620      	mov	r0, r4
900170da:	f7ff fcc9 	bl	90016a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900170de:	e7e6      	b.n	900170ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
900170e0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
900170e4:	2b00      	cmp	r3, #0
900170e6:	d0e3      	beq.n	900170b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900170e8:	f640 1302 	movw	r3, #2306	; 0x902
900170ec:	429d      	cmp	r5, r3
900170ee:	d1df      	bne.n	900170b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
900170f0:	4601      	mov	r1, r0
900170f2:	4620      	mov	r0, r4
900170f4:	f7ff fc8c 	bl	90016a10 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900170f8:	e7d9      	b.n	900170ae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

900170fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
900170fa:	b510      	push	{r4, lr}
900170fc:	4604      	mov	r4, r0
900170fe:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90017102:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90017104:	b1e1      	cbz	r1, 90017140 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017106:	2b0a      	cmp	r3, #10
90017108:	d02d      	beq.n	90017166 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001710a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001710c:	3901      	subs	r1, #1
9001710e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017112:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90017114:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90017118:	1c51      	adds	r1, r2, #1
9001711a:	b289      	uxth	r1, r1
9001711c:	2901      	cmp	r1, #1
9001711e:	bf8a      	itet	hi
90017120:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017124:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90017126:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90017128:	1c5a      	adds	r2, r3, #1
9001712a:	8722      	strh	r2, [r4, #56]	; 0x38
9001712c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001712e:	4413      	add	r3, r2
90017130:	b29b      	uxth	r3, r3
90017132:	2b09      	cmp	r3, #9
90017134:	bf88      	it	hi
90017136:	3b0a      	subhi	r3, #10
90017138:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001713c:	8458      	strh	r0, [r3, #34]	; 0x22
9001713e:	e7de      	b.n	900170fe <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90017140:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90017142:	2b0a      	cmp	r3, #10
90017144:	d00f      	beq.n	90017166 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90017146:	4620      	mov	r0, r4
90017148:	f7ff fc10 	bl	9001696c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
9001714c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
9001714e:	1c5a      	adds	r2, r3, #1
90017150:	8722      	strh	r2, [r4, #56]	; 0x38
90017152:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90017154:	4413      	add	r3, r2
90017156:	b29b      	uxth	r3, r3
90017158:	2b09      	cmp	r3, #9
9001715a:	bf88      	it	hi
9001715c:	3b0a      	subhi	r3, #10
9001715e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017162:	8458      	strh	r0, [r3, #34]	; 0x22
90017164:	e7ec      	b.n	90017140 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017166:	bd10      	pop	{r4, pc}

90017168 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90017168:	b538      	push	{r3, r4, r5, lr}
9001716a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
9001716c:	4604      	mov	r4, r0
9001716e:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90017172:	8c55      	ldrh	r5, [r2, #34]	; 0x22
90017174:	8f02      	ldrh	r2, [r0, #56]	; 0x38
90017176:	3a01      	subs	r2, #1
90017178:	8702      	strh	r2, [r0, #56]	; 0x38
9001717a:	1c5a      	adds	r2, r3, #1
9001717c:	b292      	uxth	r2, r2
9001717e:	2a09      	cmp	r2, #9
90017180:	bf8a      	itet	hi
90017182:	3b09      	subhi	r3, #9
90017184:	86c2      	strhls	r2, [r0, #54]	; 0x36
90017186:	86c3      	strhhi	r3, [r0, #54]	; 0x36
90017188:	f7ff ffb7 	bl	900170fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>
9001718c:	8c23      	ldrh	r3, [r4, #32]
9001718e:	2b01      	cmp	r3, #1
90017190:	bf9c      	itt	ls
90017192:	3301      	addls	r3, #1
90017194:	8423      	strhls	r3, [r4, #32]
90017196:	8be3      	ldrh	r3, [r4, #30]
90017198:	b90b      	cbnz	r3, 9001719e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001719a:	2302      	movs	r3, #2
9001719c:	83e3      	strh	r3, [r4, #30]
9001719e:	8be3      	ldrh	r3, [r4, #30]
900171a0:	4628      	mov	r0, r5
900171a2:	3b01      	subs	r3, #1
900171a4:	b29b      	uxth	r3, r3
900171a6:	83e3      	strh	r3, [r4, #30]
900171a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900171ac:	8365      	strh	r5, [r4, #26]
900171ae:	bd38      	pop	{r3, r4, r5, pc}

900171b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
900171b0:	428a      	cmp	r2, r1
900171b2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900171b6:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
900171b8:	d932      	bls.n	90017220 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
900171ba:	8f05      	ldrh	r5, [r0, #56]	; 0x38
900171bc:	1a54      	subs	r4, r2, r1
900171be:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
900171c2:	19ee      	adds	r6, r5, r7
900171c4:	fa1f fe84 	uxth.w	lr, r4
900171c8:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
900171cc:	3e01      	subs	r6, #1
900171ce:	b2b4      	uxth	r4, r6
900171d0:	eba4 090e 	sub.w	r9, r4, lr
900171d4:	fa1f f989 	uxth.w	r9, r9
900171d8:	2c09      	cmp	r4, #9
900171da:	4626      	mov	r6, r4
900171dc:	bf88      	it	hi
900171de:	f1a4 060a 	subhi.w	r6, r4, #10
900171e2:	f1bc 0f00 	cmp.w	ip, #0
900171e6:	f104 34ff 	add.w	r4, r4, #4294967295
900171ea:	bf08      	it	eq
900171ec:	f04f 0c02 	moveq.w	ip, #2
900171f0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
900171f4:	b2a4      	uxth	r4, r4
900171f6:	f10c 3cff 	add.w	ip, ip, #4294967295
900171fa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
900171fe:	454c      	cmp	r4, r9
90017200:	fa1f fc8c 	uxth.w	ip, ip
90017204:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017208:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001720c:	d1e4      	bne.n	900171d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001720e:	eba5 050e 	sub.w	r5, r5, lr
90017212:	eb0e 0408 	add.w	r4, lr, r8
90017216:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001721a:	8705      	strh	r5, [r0, #56]	; 0x38
9001721c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90017220:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90017222:	250a      	movs	r5, #10
90017224:	1a64      	subs	r4, r4, r1
90017226:	4439      	add	r1, r7
90017228:	b289      	uxth	r1, r1
9001722a:	8704      	strh	r4, [r0, #56]	; 0x38
9001722c:	2909      	cmp	r1, #9
9001722e:	bf88      	it	hi
90017230:	390a      	subhi	r1, #10
90017232:	86c1      	strh	r1, [r0, #54]	; 0x36
90017234:	b18a      	cbz	r2, 9001725a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90017236:	8f01      	ldrh	r1, [r0, #56]	; 0x38
90017238:	3a01      	subs	r2, #1
9001723a:	3101      	adds	r1, #1
9001723c:	b292      	uxth	r2, r2
9001723e:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90017242:	8701      	strh	r1, [r0, #56]	; 0x38
90017244:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
90017246:	b901      	cbnz	r1, 9001724a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90017248:	86c5      	strh	r5, [r0, #54]	; 0x36
9001724a:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
9001724c:	3901      	subs	r1, #1
9001724e:	b289      	uxth	r1, r1
90017250:	86c1      	strh	r1, [r0, #54]	; 0x36
90017252:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90017256:	844c      	strh	r4, [r1, #34]	; 0x22
90017258:	e7ec      	b.n	90017234 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
9001725a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001725e:	f7ff bf4c 	b.w	900170fa <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90017262 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90017262:	b570      	push	{r4, r5, r6, lr}
90017264:	2500      	movs	r5, #0
90017266:	4295      	cmp	r5, r2
90017268:	d011      	beq.n	9001728e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
9001726a:	8bc4      	ldrh	r4, [r0, #30]
9001726c:	f831 6b02 	ldrh.w	r6, [r1], #2
90017270:	4414      	add	r4, r2
90017272:	3c01      	subs	r4, #1
90017274:	1b64      	subs	r4, r4, r5
90017276:	b2a4      	uxth	r4, r4
90017278:	2c01      	cmp	r4, #1
9001727a:	bf88      	it	hi
9001727c:	3c02      	subhi	r4, #2
9001727e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90017282:	8b64      	ldrh	r4, [r4, #26]
90017284:	42b4      	cmp	r4, r6
90017286:	d117      	bne.n	900172b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90017288:	3501      	adds	r5, #1
9001728a:	b2ad      	uxth	r5, r5
9001728c:	e7eb      	b.n	90017266 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
9001728e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017292:	2400      	movs	r4, #0
90017294:	4413      	add	r3, r2
90017296:	b2a2      	uxth	r2, r4
90017298:	429a      	cmp	r2, r3
9001729a:	da0f      	bge.n	900172bc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001729c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001729e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
900172a2:	3401      	adds	r4, #1
900172a4:	4432      	add	r2, r6
900172a6:	b292      	uxth	r2, r2
900172a8:	2a09      	cmp	r2, #9
900172aa:	bf88      	it	hi
900172ac:	3a0a      	subhi	r2, #10
900172ae:	eb00 0242 	add.w	r2, r0, r2, lsl #1
900172b2:	8c52      	ldrh	r2, [r2, #34]	; 0x22
900172b4:	42aa      	cmp	r2, r5
900172b6:	d0ee      	beq.n	90017296 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
900172b8:	2000      	movs	r0, #0
900172ba:	bd70      	pop	{r4, r5, r6, pc}
900172bc:	2001      	movs	r0, #1
900172be:	e7fc      	b.n	900172ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

900172c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
900172c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
900172c4:	4605      	mov	r5, r0
900172c6:	4616      	mov	r6, r2
900172c8:	1c8c      	adds	r4, r1, #2
900172ca:	8809      	ldrh	r1, [r1, #0]
900172cc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
900172d0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
900172d4:	42b3      	cmp	r3, r6
900172d6:	d124      	bne.n	90017322 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
900172d8:	f3c1 2903 	ubfx	r9, r1, #8, #4
900172dc:	f3c1 1803 	ubfx	r8, r1, #4, #4
900172e0:	f001 070f 	and.w	r7, r1, #15
900172e4:	4652      	mov	r2, sl
900172e6:	f8cd 8000 	str.w	r8, [sp]
900172ea:	464b      	mov	r3, r9
900172ec:	4621      	mov	r1, r4
900172ee:	4628      	mov	r0, r5
900172f0:	f7ff ffb7 	bl	90017262 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
900172f4:	4683      	mov	fp, r0
900172f6:	b168      	cbz	r0, 90017314 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
900172f8:	eb0a 0109 	add.w	r1, sl, r9
900172fc:	463a      	mov	r2, r7
900172fe:	4628      	mov	r0, r5
90017300:	4441      	add	r1, r8
90017302:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017306:	4649      	mov	r1, r9
90017308:	f7ff ff52 	bl	900171b0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001730c:	4658      	mov	r0, fp
9001730e:	b003      	add	sp, #12
90017310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017314:	eb07 010a 	add.w	r1, r7, sl
90017318:	4449      	add	r1, r9
9001731a:	4441      	add	r1, r8
9001731c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017320:	e7d2      	b.n	900172c8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017322:	f04f 0b00 	mov.w	fp, #0
90017326:	e7f1      	b.n	9001730c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017328 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017328:	b570      	push	{r4, r5, r6, lr}
9001732a:	8810      	ldrh	r0, [r2, #0]
9001732c:	4298      	cmp	r0, r3
9001732e:	d817      	bhi.n	90017360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017330:	1e48      	subs	r0, r1, #1
90017332:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
90017336:	4298      	cmp	r0, r3
90017338:	d312      	bcc.n	90017360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
9001733a:	2400      	movs	r4, #0
9001733c:	428c      	cmp	r4, r1
9001733e:	d20f      	bcs.n	90017360 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90017340:	1860      	adds	r0, r4, r1
90017342:	1040      	asrs	r0, r0, #1
90017344:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90017348:	0085      	lsls	r5, r0, #2
9001734a:	42b3      	cmp	r3, r6
9001734c:	d902      	bls.n	90017354 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
9001734e:	3001      	adds	r0, #1
90017350:	b284      	uxth	r4, r0
90017352:	e7f3      	b.n	9001733c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90017354:	d201      	bcs.n	9001735a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
90017356:	b281      	uxth	r1, r0
90017358:	e7f0      	b.n	9001733c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001735a:	442a      	add	r2, r5
9001735c:	8850      	ldrh	r0, [r2, #2]
9001735e:	bd70      	pop	{r4, r5, r6, pc}
90017360:	2000      	movs	r0, #0
90017362:	e7fc      	b.n	9001735e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

90017364 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
90017364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017368:	6c45      	ldr	r5, [r0, #68]	; 0x44
9001736a:	4604      	mov	r4, r0
9001736c:	260b      	movs	r6, #11
9001736e:	886f      	ldrh	r7, [r5, #2]
90017370:	087f      	lsrs	r7, r7, #1
90017372:	3e01      	subs	r6, #1
90017374:	d013      	beq.n	9001739e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90017376:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90017378:	462a      	mov	r2, r5
9001737a:	4639      	mov	r1, r7
9001737c:	4620      	mov	r0, r4
9001737e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90017382:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017386:	4643      	mov	r3, r8
90017388:	f7ff ffce 	bl	90017328 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
9001738c:	b138      	cbz	r0, 9001739e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001738e:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017392:	4642      	mov	r2, r8
90017394:	4620      	mov	r0, r4
90017396:	f7ff ff93 	bl	900172c0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001739a:	2800      	cmp	r0, #0
9001739c:	d1e9      	bne.n	90017372 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001739e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

900173a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
900173a4:	b570      	push	{r4, r5, r6, lr}
900173a6:	694a      	ldr	r2, [r1, #20]
900173a8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
900173aa:	684b      	ldr	r3, [r1, #4]
900173ac:	1b54      	subs	r4, r2, r5
900173ae:	6ace      	ldr	r6, [r1, #44]	; 0x2c
900173b0:	f000 8106 	beq.w	900175c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
900173b4:	1b9b      	subs	r3, r3, r6
900173b6:	d003      	beq.n	900173c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900173b8:	4363      	muls	r3, r4
900173ba:	2210      	movs	r2, #16
900173bc:	fb93 f3f2 	sdiv	r3, r3, r2
900173c0:	680c      	ldr	r4, [r1, #0]
900173c2:	698a      	ldr	r2, [r1, #24]
900173c4:	1b65      	subs	r5, r4, r5
900173c6:	f000 80fd 	beq.w	900175c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
900173ca:	1b92      	subs	r2, r2, r6
900173cc:	d003      	beq.n	900173d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900173ce:	436a      	muls	r2, r5
900173d0:	2410      	movs	r4, #16
900173d2:	fb92 f2f4 	sdiv	r2, r2, r4
900173d6:	1a9b      	subs	r3, r3, r2
900173d8:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90017600 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900173dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900173e0:	460a      	mov	r2, r1
900173e2:	ee07 3a90 	vmov	s15, r3
900173e6:	f100 040c 	add.w	r4, r0, #12
900173ea:	4603      	mov	r3, r0
900173ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900173f0:	ee67 7a84 	vmul.f32	s15, s15, s8
900173f4:	ee87 3a27 	vdiv.f32	s6, s14, s15
900173f8:	eeb1 6a43 	vneg.f32	s12, s6
900173fc:	edd2 7a02 	vldr	s15, [r2, #8]
90017400:	3214      	adds	r2, #20
90017402:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017406:	ece3 6a01 	vstmia	r3!, {s13}
9001740a:	429c      	cmp	r4, r3
9001740c:	ed52 7a02 	vldr	s15, [r2, #-8]
90017410:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017414:	edc3 7a02 	vstr	s15, [r3, #8]
90017418:	ed52 7a01 	vldr	s15, [r2, #-4]
9001741c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017420:	edc3 7a05 	vstr	s15, [r3, #20]
90017424:	d1ea      	bne.n	900173fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017426:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90017428:	698b      	ldr	r3, [r1, #24]
9001742a:	edd0 4a02 	vldr	s9, [r0, #8]
9001742e:	1a9b      	subs	r3, r3, r2
90017430:	edd0 3a00 	vldr	s7, [r0]
90017434:	edd0 6a01 	vldr	s13, [r0, #4]
90017438:	ee07 3a90 	vmov	s15, r3
9001743c:	684b      	ldr	r3, [r1, #4]
9001743e:	ee76 6ae4 	vsub.f32	s13, s13, s9
90017442:	ed90 5a05 	vldr	s10, [r0, #20]
90017446:	1a9b      	subs	r3, r3, r2
90017448:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001744c:	ee73 4ae4 	vsub.f32	s9, s7, s9
90017450:	ed90 2a03 	vldr	s4, [r0, #12]
90017454:	ee07 3a10 	vmov	s14, r3
90017458:	edd0 5a04 	vldr	s11, [r0, #16]
9001745c:	ee67 7a84 	vmul.f32	s15, s15, s8
90017460:	ed90 1a07 	vldr	s2, [r0, #28]
90017464:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017468:	edd0 2a06 	vldr	s5, [r0, #24]
9001746c:	ee75 5ac5 	vsub.f32	s11, s11, s10
90017470:	ee64 7ae7 	vnmul.f32	s15, s9, s15
90017474:	ee27 7a04 	vmul.f32	s14, s14, s8
90017478:	ee32 5a45 	vsub.f32	s10, s4, s10
9001747c:	eee6 7a87 	vfma.f32	s15, s13, s14
90017480:	ee67 7a83 	vmul.f32	s15, s15, s6
90017484:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
90017488:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001748a:	694a      	ldr	r2, [r1, #20]
9001748c:	1b13      	subs	r3, r2, r4
9001748e:	ee07 3a10 	vmov	s14, r3
90017492:	680b      	ldr	r3, [r1, #0]
90017494:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017498:	1b1b      	subs	r3, r3, r4
9001749a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001749e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
900174a2:	ee07 3a10 	vmov	s14, r3
900174a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900174aa:	ee27 7a04 	vmul.f32	s14, s14, s8
900174ae:	eee6 4a87 	vfma.f32	s9, s13, s14
900174b2:	ee64 4a86 	vmul.f32	s9, s9, s12
900174b6:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
900174ba:	6aca      	ldr	r2, [r1, #44]	; 0x2c
900174bc:	698b      	ldr	r3, [r1, #24]
900174be:	1a9b      	subs	r3, r3, r2
900174c0:	ee06 3a90 	vmov	s13, r3
900174c4:	684b      	ldr	r3, [r1, #4]
900174c6:	1a9b      	subs	r3, r3, r2
900174c8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900174cc:	ee07 3a10 	vmov	s14, r3
900174d0:	ee66 6a84 	vmul.f32	s13, s13, s8
900174d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900174d8:	ee65 6a66 	vnmul.f32	s13, s10, s13
900174dc:	ee27 7a04 	vmul.f32	s14, s14, s8
900174e0:	eee5 6a87 	vfma.f32	s13, s11, s14
900174e4:	ee66 6a83 	vmul.f32	s13, s13, s6
900174e8:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
900174ec:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900174ee:	694a      	ldr	r2, [r1, #20]
900174f0:	1b13      	subs	r3, r2, r4
900174f2:	ee07 3a10 	vmov	s14, r3
900174f6:	680b      	ldr	r3, [r1, #0]
900174f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900174fc:	1b1b      	subs	r3, r3, r4
900174fe:	ee27 7a04 	vmul.f32	s14, s14, s8
90017502:	ee25 5a47 	vnmul.f32	s10, s10, s14
90017506:	ee07 3a10 	vmov	s14, r3
9001750a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001750e:	ee27 7a04 	vmul.f32	s14, s14, s8
90017512:	eea5 5a87 	vfma.f32	s10, s11, s14
90017516:	edd0 5a08 	vldr	s11, [r0, #32]
9001751a:	ee31 1a65 	vsub.f32	s2, s2, s11
9001751e:	ee72 5ae5 	vsub.f32	s11, s5, s11
90017522:	ee25 5a06 	vmul.f32	s10, s10, s12
90017526:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001752a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001752c:	698b      	ldr	r3, [r1, #24]
9001752e:	1a9b      	subs	r3, r3, r2
90017530:	ee07 3a10 	vmov	s14, r3
90017534:	684b      	ldr	r3, [r1, #4]
90017536:	1a9b      	subs	r3, r3, r2
90017538:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001753c:	ee01 3a90 	vmov	s3, r3
90017540:	ee27 7a04 	vmul.f32	s14, s14, s8
90017544:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90017548:	ee25 7ac7 	vnmul.f32	s14, s11, s14
9001754c:	ee61 1a84 	vmul.f32	s3, s3, s8
90017550:	eea1 7a21 	vfma.f32	s14, s2, s3
90017554:	ee27 7a03 	vmul.f32	s14, s14, s6
90017558:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
9001755c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001755e:	694a      	ldr	r2, [r1, #20]
90017560:	1b13      	subs	r3, r2, r4
90017562:	ee03 3a10 	vmov	s6, r3
90017566:	680b      	ldr	r3, [r1, #0]
90017568:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001756c:	1b1b      	subs	r3, r3, r4
9001756e:	ee23 3a04 	vmul.f32	s6, s6, s8
90017572:	ee65 5ac3 	vnmul.f32	s11, s11, s6
90017576:	ee03 3a10 	vmov	s6, r3
9001757a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
9001757e:	ee23 4a04 	vmul.f32	s8, s6, s8
90017582:	eee1 5a04 	vfma.f32	s11, s2, s8
90017586:	ee25 6a86 	vmul.f32	s12, s11, s12
9001758a:	ee62 5a67 	vnmul.f32	s11, s4, s15
9001758e:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90017592:	eee3 5aa6 	vfma.f32	s11, s7, s13
90017596:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001759a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001759e:	dd13      	ble.n	900175c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
900175a0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900175a4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
900175a8:	63c3      	str	r3, [r0, #60]	; 0x3c
900175aa:	eee3 7a87 	vfma.f32	s15, s7, s14
900175ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900175b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900175b6:	dd15      	ble.n	900175e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
900175b8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
900175bc:	6403      	str	r3, [r0, #64]	; 0x40
900175be:	bd70      	pop	{r4, r5, r6, pc}
900175c0:	4623      	mov	r3, r4
900175c2:	e6fd      	b.n	900173c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900175c4:	462a      	mov	r2, r5
900175c6:	e706      	b.n	900173d6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900175c8:	d502      	bpl.n	900175d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
900175ca:	f647 73ff 	movw	r3, #32767	; 0x7fff
900175ce:	e7e9      	b.n	900175a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900175d0:	ee22 2a64 	vnmul.f32	s4, s4, s9
900175d4:	eea3 2a85 	vfma.f32	s4, s7, s10
900175d8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900175dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900175e0:	dade      	bge.n	900175a0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
900175e2:	e7f2      	b.n	900175ca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
900175e4:	d502      	bpl.n	900175ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
900175e6:	f647 73ff 	movw	r3, #32767	; 0x7fff
900175ea:	e7e7      	b.n	900175bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900175ec:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900175f0:	eee3 4a86 	vfma.f32	s9, s7, s12
900175f4:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900175f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900175fc:	dadc      	bge.n	900175b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900175fe:	e7f2      	b.n	900175e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90017600:	3d800000 	.word	0x3d800000

90017604 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90017604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017608:	2714      	movs	r7, #20
9001760a:	435f      	muls	r7, r3
9001760c:	eb02 0c07 	add.w	ip, r2, r7
90017610:	f8dc 5004 	ldr.w	r5, [ip, #4]
90017614:	f115 0e0f 	adds.w	lr, r5, #15
90017618:	f100 80a2 	bmi.w	90017760 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001761c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90017620:	9c08      	ldr	r4, [sp, #32]
90017622:	2614      	movs	r6, #20
90017624:	f8c0 e014 	str.w	lr, [r0, #20]
90017628:	4366      	muls	r6, r4
9001762a:	eb02 0806 	add.w	r8, r2, r6
9001762e:	f8d8 5004 	ldr.w	r5, [r8, #4]
90017632:	f115 040f 	adds.w	r4, r5, #15
90017636:	f100 809f 	bmi.w	90017778 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
9001763a:	1124      	asrs	r4, r4, #4
9001763c:	eba4 040e 	sub.w	r4, r4, lr
90017640:	6184      	str	r4, [r0, #24]
90017642:	2c00      	cmp	r4, #0
90017644:	f000 808a 	beq.w	9001775c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90017648:	f8dc 9004 	ldr.w	r9, [ip, #4]
9001764c:	f8d8 4004 	ldr.w	r4, [r8, #4]
90017650:	5995      	ldr	r5, [r2, r6]
90017652:	eba4 0809 	sub.w	r8, r4, r9
90017656:	59d4      	ldr	r4, [r2, r7]
90017658:	eba5 0a04 	sub.w	sl, r5, r4
9001765c:	ea4f 1608 	mov.w	r6, r8, lsl #4
90017660:	ea4f 150a 	mov.w	r5, sl, lsl #4
90017664:	fb0e fe05 	mul.w	lr, lr, r5
90017668:	fb0a ee19 	mls	lr, sl, r9, lr
9001766c:	fb08 e404 	mla	r4, r8, r4, lr
90017670:	3c01      	subs	r4, #1
90017672:	19a4      	adds	r4, r4, r6
90017674:	f100 808c 	bmi.w	90017790 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90017678:	fb94 fef6 	sdiv	lr, r4, r6
9001767c:	fb06 441e 	mls	r4, r6, lr, r4
90017680:	f8c0 e000 	str.w	lr, [r0]
90017684:	6104      	str	r4, [r0, #16]
90017686:	2d00      	cmp	r5, #0
90017688:	f2c0 8095 	blt.w	900177b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
9001768c:	fb95 f4f6 	sdiv	r4, r5, r6
90017690:	fb06 5514 	mls	r5, r6, r4, r5
90017694:	6044      	str	r4, [r0, #4]
90017696:	6085      	str	r5, [r0, #8]
90017698:	60c6      	str	r6, [r0, #12]
9001769a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001769e:	f8dc 4004 	ldr.w	r4, [ip, #4]
900176a2:	6945      	ldr	r5, [r0, #20]
900176a4:	59d2      	ldr	r2, [r2, r7]
900176a6:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
900176aa:	eddf 6a4b 	vldr	s13, [pc, #300]	; 900177d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
900176ae:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900176b2:	ee07 4a10 	vmov	s14, r4
900176b6:	6804      	ldr	r4, [r0, #0]
900176b8:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
900176bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900176c0:	ee07 2a90 	vmov	s15, r2
900176c4:	ee27 7a26 	vmul.f32	s14, s14, s13
900176c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900176cc:	ee67 7aa6 	vmul.f32	s15, s15, s13
900176d0:	edd3 6a00 	vldr	s13, [r3]
900176d4:	eee6 6a07 	vfma.f32	s13, s12, s14
900176d8:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
900176dc:	eee6 6a27 	vfma.f32	s13, s12, s15
900176e0:	edc0 6a07 	vstr	s13, [r0, #28]
900176e4:	edd0 6a01 	vldr	s13, [r0, #4]
900176e8:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
900176ec:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900176f0:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
900176f4:	eea6 6aa5 	vfma.f32	s12, s13, s11
900176f8:	ed80 6a08 	vstr	s12, [r0, #32]
900176fc:	6a4a      	ldr	r2, [r1, #36]	; 0x24
900176fe:	6242      	str	r2, [r0, #36]	; 0x24
90017700:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
90017704:	ed93 6a03 	vldr	s12, [r3, #12]
90017708:	eea5 6a87 	vfma.f32	s12, s11, s14
9001770c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90017710:	eea5 6aa7 	vfma.f32	s12, s11, s15
90017714:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
90017718:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001771c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90017720:	eea6 6aa5 	vfma.f32	s12, s13, s11
90017724:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
90017728:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001772a:	6302      	str	r2, [r0, #48]	; 0x30
9001772c:	ed93 6a06 	vldr	s12, [r3, #24]
90017730:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
90017734:	eea5 6a87 	vfma.f32	s12, s11, s14
90017738:	eeb0 7a46 	vmov.f32	s14, s12
9001773c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
90017740:	eea6 7a27 	vfma.f32	s14, s12, s15
90017744:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
90017748:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
9001774c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
90017750:	eee6 7a87 	vfma.f32	s15, s13, s14
90017754:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
90017758:	6b4b      	ldr	r3, [r1, #52]	; 0x34
9001775a:	63c3      	str	r3, [r0, #60]	; 0x3c
9001775c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017760:	2410      	movs	r4, #16
90017762:	f1c5 0501 	rsb	r5, r5, #1
90017766:	fb9e fef4 	sdiv	lr, lr, r4
9001776a:	f015 050f 	ands.w	r5, r5, #15
9001776e:	bf18      	it	ne
90017770:	2501      	movne	r5, #1
90017772:	ebae 0e05 	sub.w	lr, lr, r5
90017776:	e753      	b.n	90017620 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90017778:	f04f 0910 	mov.w	r9, #16
9001777c:	f1c5 0501 	rsb	r5, r5, #1
90017780:	fb94 f4f9 	sdiv	r4, r4, r9
90017784:	f015 050f 	ands.w	r5, r5, #15
90017788:	bf18      	it	ne
9001778a:	2501      	movne	r5, #1
9001778c:	1b64      	subs	r4, r4, r5
9001778e:	e755      	b.n	9001763c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90017790:	4264      	negs	r4, r4
90017792:	fb94 fef6 	sdiv	lr, r4, r6
90017796:	f1ce 0800 	rsb	r8, lr, #0
9001779a:	fb06 441e 	mls	r4, r6, lr, r4
9001779e:	f8c0 8000 	str.w	r8, [r0]
900177a2:	6104      	str	r4, [r0, #16]
900177a4:	2c00      	cmp	r4, #0
900177a6:	f43f af6e 	beq.w	90017686 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
900177aa:	ea6f 0e0e 	mvn.w	lr, lr
900177ae:	1b34      	subs	r4, r6, r4
900177b0:	f8c0 e000 	str.w	lr, [r0]
900177b4:	e766      	b.n	90017684 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
900177b6:	426d      	negs	r5, r5
900177b8:	fb95 f4f6 	sdiv	r4, r5, r6
900177bc:	f1c4 0e00 	rsb	lr, r4, #0
900177c0:	fb06 5514 	mls	r5, r6, r4, r5
900177c4:	f8c0 e004 	str.w	lr, [r0, #4]
900177c8:	6085      	str	r5, [r0, #8]
900177ca:	2d00      	cmp	r5, #0
900177cc:	f43f af64 	beq.w	90017698 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900177d0:	43e4      	mvns	r4, r4
900177d2:	1b75      	subs	r5, r6, r5
900177d4:	6044      	str	r4, [r0, #4]
900177d6:	e75e      	b.n	90017696 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900177d8:	3d800000 	.word	0x3d800000

900177dc <_ZN8touchgfx7Unicode6strlenEPKt>:
900177dc:	4602      	mov	r2, r0
900177de:	b148      	cbz	r0, 900177f4 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
900177e0:	2300      	movs	r3, #0
900177e2:	b298      	uxth	r0, r3
900177e4:	3301      	adds	r3, #1
900177e6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
900177ea:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900177ee:	2900      	cmp	r1, #0
900177f0:	d1f7      	bne.n	900177e2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900177f2:	4770      	bx	lr
900177f4:	4770      	bx	lr

900177f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900177f6:	b530      	push	{r4, r5, lr}
900177f8:	4604      	mov	r4, r0
900177fa:	b159      	cbz	r1, 90017814 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900177fc:	b148      	cbz	r0, 90017812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900177fe:	2300      	movs	r3, #0
90017800:	b298      	uxth	r0, r3
90017802:	4282      	cmp	r2, r0
90017804:	d905      	bls.n	90017812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90017806:	5ccd      	ldrb	r5, [r1, r3]
90017808:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001780c:	3301      	adds	r3, #1
9001780e:	2d00      	cmp	r5, #0
90017810:	d1f6      	bne.n	90017800 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90017812:	bd30      	pop	{r4, r5, pc}
90017814:	4608      	mov	r0, r1
90017816:	e7fc      	b.n	90017812 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90017818 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90017818:	b5f0      	push	{r4, r5, r6, r7, lr}
9001781a:	b08b      	sub	sp, #44	; 0x2c
9001781c:	468c      	mov	ip, r1
9001781e:	4604      	mov	r4, r0
90017820:	2100      	movs	r1, #0
90017822:	261f      	movs	r6, #31
90017824:	af01      	add	r7, sp, #4
90017826:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001782a:	1e71      	subs	r1, r6, #1
9001782c:	fb94 fef3 	sdiv	lr, r4, r3
90017830:	fb03 441e 	mls	r4, r3, lr, r4
90017834:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90017838:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
9001783c:	b2ec      	uxtb	r4, r5
9001783e:	2d09      	cmp	r5, #9
90017840:	bfd4      	ite	le
90017842:	3430      	addle	r4, #48	; 0x30
90017844:	3457      	addgt	r4, #87	; 0x57
90017846:	b2e4      	uxtb	r4, r4
90017848:	55bc      	strb	r4, [r7, r6]
9001784a:	4674      	mov	r4, lr
9001784c:	b974      	cbnz	r4, 9001786c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
9001784e:	2800      	cmp	r0, #0
90017850:	da05      	bge.n	9001785e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
90017852:	ab0a      	add	r3, sp, #40	; 0x28
90017854:	4419      	add	r1, r3
90017856:	232d      	movs	r3, #45	; 0x2d
90017858:	f801 3c24 	strb.w	r3, [r1, #-36]
9001785c:	1eb1      	subs	r1, r6, #2
9001785e:	3101      	adds	r1, #1
90017860:	4660      	mov	r0, ip
90017862:	4439      	add	r1, r7
90017864:	f7ff ffc7 	bl	900177f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017868:	b00b      	add	sp, #44	; 0x2c
9001786a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001786c:	460e      	mov	r6, r1
9001786e:	e7dc      	b.n	9001782a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90017870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90017870:	b5f0      	push	{r4, r5, r6, r7, lr}
90017872:	468c      	mov	ip, r1
90017874:	b08b      	sub	sp, #44	; 0x2c
90017876:	2100      	movs	r1, #0
90017878:	ae01      	add	r6, sp, #4
9001787a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001787e:	211f      	movs	r1, #31
90017880:	fbb0 f7f3 	udiv	r7, r0, r3
90017884:	fb03 0517 	mls	r5, r3, r7, r0
90017888:	4638      	mov	r0, r7
9001788a:	b2ec      	uxtb	r4, r5
9001788c:	2d09      	cmp	r5, #9
9001788e:	bfd4      	ite	le
90017890:	3430      	addle	r4, #48	; 0x30
90017892:	3457      	addgt	r4, #87	; 0x57
90017894:	b2e4      	uxtb	r4, r4
90017896:	558c      	strb	r4, [r1, r6]
90017898:	1e4c      	subs	r4, r1, #1
9001789a:	b92f      	cbnz	r7, 900178a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
9001789c:	4431      	add	r1, r6
9001789e:	4660      	mov	r0, ip
900178a0:	f7ff ffa9 	bl	900177f6 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
900178a4:	b00b      	add	sp, #44	; 0x2c
900178a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900178a8:	4621      	mov	r1, r4
900178aa:	e7e9      	b.n	90017880 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

900178ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
900178ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900178b0:	b085      	sub	sp, #20
900178b2:	4691      	mov	r9, r2
900178b4:	6802      	ldr	r2, [r0, #0]
900178b6:	4688      	mov	r8, r1
900178b8:	461c      	mov	r4, r3
900178ba:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
900178be:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
900178c2:	4683      	mov	fp, r0
900178c4:	4610      	mov	r0, r2
900178c6:	9103      	str	r1, [sp, #12]
900178c8:	9302      	str	r3, [sp, #8]
900178ca:	9201      	str	r2, [sp, #4]
900178cc:	f7ff ff86 	bl	900177dc <_ZN8touchgfx7Unicode6strlenEPKt>
900178d0:	f1b8 0f00 	cmp.w	r8, #0
900178d4:	bf0c      	ite	eq
900178d6:	4684      	moveq	ip, r0
900178d8:	f100 0c01 	addne.w	ip, r0, #1
900178dc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
900178e0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
900178e4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
900178e6:	fa1f fc8c 	uxth.w	ip, ip
900178ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900178ec:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
900178f0:	9903      	ldr	r1, [sp, #12]
900178f2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900178f6:	d041      	beq.n	9001797c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900178f8:	d834      	bhi.n	90017964 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900178fa:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
900178fe:	d059      	beq.n	900179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90017900:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90017904:	d03a      	beq.n	9001797c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90017906:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
9001790a:	d034      	beq.n	90017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
9001790c:	2400      	movs	r4, #0
9001790e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90017912:	3a01      	subs	r2, #1
90017914:	b169      	cbz	r1, 90017932 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017916:	9911      	ldr	r1, [sp, #68]	; 0x44
90017918:	458c      	cmp	ip, r1
9001791a:	da09      	bge.n	90017930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
9001791c:	eba1 010c 	sub.w	r1, r1, ip
90017920:	b289      	uxth	r1, r1
90017922:	b933      	cbnz	r3, 90017932 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017924:	2e00      	cmp	r6, #0
90017926:	d051      	beq.n	900179cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90017928:	2800      	cmp	r0, #0
9001792a:	d04f      	beq.n	900179cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
9001792c:	440c      	add	r4, r1
9001792e:	b2a4      	uxth	r4, r4
90017930:	2100      	movs	r1, #0
90017932:	682b      	ldr	r3, [r5, #0]
90017934:	4293      	cmp	r3, r2
90017936:	da07      	bge.n	90017948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90017938:	f1b8 0f00 	cmp.w	r8, #0
9001793c:	d004      	beq.n	90017948 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
9001793e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90017942:	682b      	ldr	r3, [r5, #0]
90017944:	3301      	adds	r3, #1
90017946:	602b      	str	r3, [r5, #0]
90017948:	2730      	movs	r7, #48	; 0x30
9001794a:	2c00      	cmp	r4, #0
9001794c:	d04e      	beq.n	900179ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001794e:	682e      	ldr	r6, [r5, #0]
90017950:	3c01      	subs	r4, #1
90017952:	42b2      	cmp	r2, r6
90017954:	b2a4      	uxth	r4, r4
90017956:	dd49      	ble.n	900179ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017958:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
9001795c:	682b      	ldr	r3, [r5, #0]
9001795e:	3301      	adds	r3, #1
90017960:	602b      	str	r3, [r5, #0]
90017962:	e7f2      	b.n	9001794a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90017964:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90017968:	d01d      	beq.n	900179a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
9001796a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
9001796e:	d002      	beq.n	90017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017970:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90017974:	e7c9      	b.n	9001790a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90017976:	4684      	mov	ip, r0
90017978:	f04f 0800 	mov.w	r8, #0
9001797c:	2c00      	cmp	r4, #0
9001797e:	d0c6      	beq.n	9001790e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017980:	b947      	cbnz	r7, 90017994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017982:	2801      	cmp	r0, #1
90017984:	d106      	bne.n	90017994 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017986:	8814      	ldrh	r4, [r2, #0]
90017988:	2c30      	cmp	r4, #48	; 0x30
9001798a:	bf02      	ittt	eq
9001798c:	3202      	addeq	r2, #2
9001798e:	4638      	moveq	r0, r7
90017990:	f8cb 2000 	streq.w	r2, [fp]
90017994:	45bc      	cmp	ip, r7
90017996:	da14      	bge.n	900179c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90017998:	b2bf      	uxth	r7, r7
9001799a:	eba7 040c 	sub.w	r4, r7, ip
9001799e:	46bc      	mov	ip, r7
900179a0:	b2a4      	uxth	r4, r4
900179a2:	2600      	movs	r6, #0
900179a4:	e7b3      	b.n	9001790e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900179a6:	4684      	mov	ip, r0
900179a8:	b16c      	cbz	r4, 900179c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
900179aa:	42b8      	cmp	r0, r7
900179ac:	dd00      	ble.n	900179b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
900179ae:	b2b8      	uxth	r0, r7
900179b0:	2400      	movs	r4, #0
900179b2:	e003      	b.n	900179bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
900179b4:	f04f 0c01 	mov.w	ip, #1
900179b8:	2400      	movs	r4, #0
900179ba:	4660      	mov	r0, ip
900179bc:	4626      	mov	r6, r4
900179be:	46a0      	mov	r8, r4
900179c0:	e7a5      	b.n	9001790e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900179c2:	2400      	movs	r4, #0
900179c4:	e7ed      	b.n	900179a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
900179c6:	4626      	mov	r6, r4
900179c8:	46a0      	mov	r8, r4
900179ca:	e7a0      	b.n	9001790e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900179cc:	2900      	cmp	r1, #0
900179ce:	d0b0      	beq.n	90017932 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900179d0:	2720      	movs	r7, #32
900179d2:	682e      	ldr	r6, [r5, #0]
900179d4:	2900      	cmp	r1, #0
900179d6:	d0ac      	beq.n	90017932 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900179d8:	3901      	subs	r1, #1
900179da:	4296      	cmp	r6, r2
900179dc:	b289      	uxth	r1, r1
900179de:	daa7      	bge.n	90017930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900179e0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900179e4:	682b      	ldr	r3, [r5, #0]
900179e6:	3301      	adds	r3, #1
900179e8:	602b      	str	r3, [r5, #0]
900179ea:	e7f2      	b.n	900179d2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
900179ec:	b188      	cbz	r0, 90017a12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900179ee:	682b      	ldr	r3, [r5, #0]
900179f0:	3801      	subs	r0, #1
900179f2:	429a      	cmp	r2, r3
900179f4:	b280      	uxth	r0, r0
900179f6:	dd0c      	ble.n	90017a12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900179f8:	f8db 3000 	ldr.w	r3, [fp]
900179fc:	1c9c      	adds	r4, r3, #2
900179fe:	f8cb 4000 	str.w	r4, [fp]
90017a02:	881c      	ldrh	r4, [r3, #0]
90017a04:	682b      	ldr	r3, [r5, #0]
90017a06:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90017a0a:	682b      	ldr	r3, [r5, #0]
90017a0c:	3301      	adds	r3, #1
90017a0e:	602b      	str	r3, [r5, #0]
90017a10:	e7ec      	b.n	900179ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017a12:	2620      	movs	r6, #32
90017a14:	b151      	cbz	r1, 90017a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017a16:	6828      	ldr	r0, [r5, #0]
90017a18:	3901      	subs	r1, #1
90017a1a:	4282      	cmp	r2, r0
90017a1c:	b289      	uxth	r1, r1
90017a1e:	dd05      	ble.n	90017a2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017a20:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90017a24:	682b      	ldr	r3, [r5, #0]
90017a26:	3301      	adds	r3, #1
90017a28:	602b      	str	r3, [r5, #0]
90017a2a:	e7f3      	b.n	90017a14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90017a2c:	b005      	add	sp, #20
90017a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017a32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90017a32:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017a36:	2400      	movs	r4, #0
90017a38:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90017a3c:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90017a40:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90017a44:	8014      	strh	r4, [r2, #0]
90017a46:	701c      	strb	r4, [r3, #0]
90017a48:	f888 4000 	strb.w	r4, [r8]
90017a4c:	f88c 4000 	strb.w	r4, [ip]
90017a50:	f88e 4000 	strb.w	r4, [lr]
90017a54:	703c      	strb	r4, [r7, #0]
90017a56:	6804      	ldr	r4, [r0, #0]
90017a58:	b1a4      	cbz	r4, 90017a84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90017a5a:	8824      	ldrh	r4, [r4, #0]
90017a5c:	f04f 0901 	mov.w	r9, #1
90017a60:	b314      	cbz	r4, 90017aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017a62:	2c2b      	cmp	r4, #43	; 0x2b
90017a64:	d001      	beq.n	90017a6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90017a66:	2c20      	cmp	r4, #32
90017a68:	d110      	bne.n	90017a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90017a6a:	8014      	strh	r4, [r2, #0]
90017a6c:	6804      	ldr	r4, [r0, #0]
90017a6e:	b10c      	cbz	r4, 90017a74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90017a70:	3402      	adds	r4, #2
90017a72:	6004      	str	r4, [r0, #0]
90017a74:	680c      	ldr	r4, [r1, #0]
90017a76:	b10c      	cbz	r4, 90017a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90017a78:	3401      	adds	r4, #1
90017a7a:	600c      	str	r4, [r1, #0]
90017a7c:	6804      	ldr	r4, [r0, #0]
90017a7e:	b17c      	cbz	r4, 90017aa0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90017a80:	8824      	ldrh	r4, [r4, #0]
90017a82:	e7ed      	b.n	90017a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017a84:	680c      	ldr	r4, [r1, #0]
90017a86:	b17c      	cbz	r4, 90017aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017a88:	7824      	ldrb	r4, [r4, #0]
90017a8a:	e7e7      	b.n	90017a5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90017a8c:	2c2d      	cmp	r4, #45	; 0x2d
90017a8e:	d102      	bne.n	90017a96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90017a90:	f883 9000 	strb.w	r9, [r3]
90017a94:	e7ea      	b.n	90017a6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017a96:	2c23      	cmp	r4, #35	; 0x23
90017a98:	d107      	bne.n	90017aaa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90017a9a:	f888 9000 	strb.w	r9, [r8]
90017a9e:	e7e5      	b.n	90017a6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017aa0:	680c      	ldr	r4, [r1, #0]
90017aa2:	b10c      	cbz	r4, 90017aa8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017aa4:	7824      	ldrb	r4, [r4, #0]
90017aa6:	e7db      	b.n	90017a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017aa8:	2400      	movs	r4, #0
90017aaa:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
90017aae:	2b09      	cmp	r3, #9
90017ab0:	d901      	bls.n	90017ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90017ab2:	2c2a      	cmp	r4, #42	; 0x2a
90017ab4:	d122      	bne.n	90017afc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017ab6:	2301      	movs	r3, #1
90017ab8:	2c30      	cmp	r4, #48	; 0x30
90017aba:	f88e 3000 	strb.w	r3, [lr]
90017abe:	d10d      	bne.n	90017adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017ac0:	f88c 3000 	strb.w	r3, [ip]
90017ac4:	6803      	ldr	r3, [r0, #0]
90017ac6:	b10b      	cbz	r3, 90017acc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90017ac8:	3302      	adds	r3, #2
90017aca:	6003      	str	r3, [r0, #0]
90017acc:	680b      	ldr	r3, [r1, #0]
90017ace:	b10b      	cbz	r3, 90017ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90017ad0:	3301      	adds	r3, #1
90017ad2:	600b      	str	r3, [r1, #0]
90017ad4:	6803      	ldr	r3, [r0, #0]
90017ad6:	2b00      	cmp	r3, #0
90017ad8:	d02f      	beq.n	90017b3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90017ada:	881c      	ldrh	r4, [r3, #0]
90017adc:	2c2a      	cmp	r4, #42	; 0x2a
90017ade:	d135      	bne.n	90017b4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017ae0:	f04f 33ff 	mov.w	r3, #4294967295
90017ae4:	6033      	str	r3, [r6, #0]
90017ae6:	6803      	ldr	r3, [r0, #0]
90017ae8:	b10b      	cbz	r3, 90017aee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90017aea:	3302      	adds	r3, #2
90017aec:	6003      	str	r3, [r0, #0]
90017aee:	680b      	ldr	r3, [r1, #0]
90017af0:	b10b      	cbz	r3, 90017af6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90017af2:	3301      	adds	r3, #1
90017af4:	600b      	str	r3, [r1, #0]
90017af6:	6803      	ldr	r3, [r0, #0]
90017af8:	b31b      	cbz	r3, 90017b42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90017afa:	881c      	ldrh	r4, [r3, #0]
90017afc:	2c2e      	cmp	r4, #46	; 0x2e
90017afe:	d11a      	bne.n	90017b36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017b00:	2301      	movs	r3, #1
90017b02:	703b      	strb	r3, [r7, #0]
90017b04:	6803      	ldr	r3, [r0, #0]
90017b06:	b10b      	cbz	r3, 90017b0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90017b08:	3302      	adds	r3, #2
90017b0a:	6003      	str	r3, [r0, #0]
90017b0c:	680b      	ldr	r3, [r1, #0]
90017b0e:	b10b      	cbz	r3, 90017b14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90017b10:	3301      	adds	r3, #1
90017b12:	600b      	str	r3, [r1, #0]
90017b14:	6803      	ldr	r3, [r0, #0]
90017b16:	2b00      	cmp	r3, #0
90017b18:	d036      	beq.n	90017b88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90017b1a:	881b      	ldrh	r3, [r3, #0]
90017b1c:	2b2a      	cmp	r3, #42	; 0x2a
90017b1e:	d137      	bne.n	90017b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017b20:	f04f 33ff 	mov.w	r3, #4294967295
90017b24:	602b      	str	r3, [r5, #0]
90017b26:	6803      	ldr	r3, [r0, #0]
90017b28:	b10b      	cbz	r3, 90017b2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90017b2a:	3302      	adds	r3, #2
90017b2c:	6003      	str	r3, [r0, #0]
90017b2e:	680b      	ldr	r3, [r1, #0]
90017b30:	b10b      	cbz	r3, 90017b36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017b32:	3301      	adds	r3, #1
90017b34:	600b      	str	r3, [r1, #0]
90017b36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017b3a:	680c      	ldr	r4, [r1, #0]
90017b3c:	b134      	cbz	r4, 90017b4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017b3e:	7824      	ldrb	r4, [r4, #0]
90017b40:	e7cc      	b.n	90017adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017b42:	680b      	ldr	r3, [r1, #0]
90017b44:	2b00      	cmp	r3, #0
90017b46:	d0f6      	beq.n	90017b36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017b48:	781c      	ldrb	r4, [r3, #0]
90017b4a:	e7d7      	b.n	90017afc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017b4c:	2300      	movs	r3, #0
90017b4e:	220a      	movs	r2, #10
90017b50:	6033      	str	r3, [r6, #0]
90017b52:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90017b56:	fa1f f38c 	uxth.w	r3, ip
90017b5a:	2b09      	cmp	r3, #9
90017b5c:	d8ce      	bhi.n	90017afc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017b5e:	6833      	ldr	r3, [r6, #0]
90017b60:	fb02 c303 	mla	r3, r2, r3, ip
90017b64:	6033      	str	r3, [r6, #0]
90017b66:	6803      	ldr	r3, [r0, #0]
90017b68:	b10b      	cbz	r3, 90017b6e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90017b6a:	3302      	adds	r3, #2
90017b6c:	6003      	str	r3, [r0, #0]
90017b6e:	680b      	ldr	r3, [r1, #0]
90017b70:	b10b      	cbz	r3, 90017b76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90017b72:	3301      	adds	r3, #1
90017b74:	600b      	str	r3, [r1, #0]
90017b76:	6803      	ldr	r3, [r0, #0]
90017b78:	b10b      	cbz	r3, 90017b7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90017b7a:	881c      	ldrh	r4, [r3, #0]
90017b7c:	e7e9      	b.n	90017b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017b7e:	680c      	ldr	r4, [r1, #0]
90017b80:	2c00      	cmp	r4, #0
90017b82:	d0e6      	beq.n	90017b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017b84:	7824      	ldrb	r4, [r4, #0]
90017b86:	e7e4      	b.n	90017b52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017b88:	680b      	ldr	r3, [r1, #0]
90017b8a:	b10b      	cbz	r3, 90017b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017b8c:	781b      	ldrb	r3, [r3, #0]
90017b8e:	e7c5      	b.n	90017b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90017b90:	2200      	movs	r2, #0
90017b92:	240a      	movs	r4, #10
90017b94:	602a      	str	r2, [r5, #0]
90017b96:	3b30      	subs	r3, #48	; 0x30
90017b98:	682a      	ldr	r2, [r5, #0]
90017b9a:	b29e      	uxth	r6, r3
90017b9c:	2e09      	cmp	r6, #9
90017b9e:	d813      	bhi.n	90017bc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90017ba0:	fb04 3302 	mla	r3, r4, r2, r3
90017ba4:	602b      	str	r3, [r5, #0]
90017ba6:	6803      	ldr	r3, [r0, #0]
90017ba8:	b10b      	cbz	r3, 90017bae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90017baa:	3302      	adds	r3, #2
90017bac:	6003      	str	r3, [r0, #0]
90017bae:	680b      	ldr	r3, [r1, #0]
90017bb0:	b10b      	cbz	r3, 90017bb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90017bb2:	3301      	adds	r3, #1
90017bb4:	600b      	str	r3, [r1, #0]
90017bb6:	6803      	ldr	r3, [r0, #0]
90017bb8:	b10b      	cbz	r3, 90017bbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90017bba:	881b      	ldrh	r3, [r3, #0]
90017bbc:	e7eb      	b.n	90017b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017bbe:	680b      	ldr	r3, [r1, #0]
90017bc0:	2b00      	cmp	r3, #0
90017bc2:	d0e8      	beq.n	90017b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017bc4:	781b      	ldrb	r3, [r3, #0]
90017bc6:	e7e6      	b.n	90017b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017bc8:	2a06      	cmp	r2, #6
90017bca:	bfa8      	it	ge
90017bcc:	2206      	movge	r2, #6
90017bce:	602a      	str	r2, [r5, #0]
90017bd0:	e7b1      	b.n	90017b36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90017bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90017bd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017bd6:	b0a3      	sub	sp, #140	; 0x8c
90017bd8:	2600      	movs	r6, #0
90017bda:	4607      	mov	r7, r0
90017bdc:	4688      	mov	r8, r1
90017bde:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90017be2:	4631      	mov	r1, r6
90017be4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90017be6:	4648      	mov	r0, r9
90017be8:	960d      	str	r6, [sp, #52]	; 0x34
90017bea:	e9cd 3208 	strd	r3, r2, [sp, #32]
90017bee:	2242      	movs	r2, #66	; 0x42
90017bf0:	f00e fd2e 	bl	90026650 <memset>
90017bf4:	b15f      	cbz	r7, 90017c0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90017bf6:	f108 3aff 	add.w	sl, r8, #4294967295
90017bfa:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017bfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017bfe:	b152      	cbz	r2, 90017c16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90017c00:	8812      	ldrh	r2, [r2, #0]
90017c02:	b10a      	cbz	r2, 90017c08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017c04:	459a      	cmp	sl, r3
90017c06:	dc2e      	bgt.n	90017c66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90017c08:	2200      	movs	r2, #0
90017c0a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017c0e:	4638      	mov	r0, r7
90017c10:	b023      	add	sp, #140	; 0x8c
90017c12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017c16:	9a08      	ldr	r2, [sp, #32]
90017c18:	2a00      	cmp	r2, #0
90017c1a:	d0f5      	beq.n	90017c08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017c1c:	7812      	ldrb	r2, [r2, #0]
90017c1e:	e7f0      	b.n	90017c02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90017c20:	2d00      	cmp	r5, #0
90017c22:	d0ea      	beq.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c24:	782a      	ldrb	r2, [r5, #0]
90017c26:	b142      	cbz	r2, 90017c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90017c28:	2a25      	cmp	r2, #37	; 0x25
90017c2a:	d001      	beq.n	90017c30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90017c2c:	459a      	cmp	sl, r3
90017c2e:	dc08      	bgt.n	90017c42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90017c30:	f1bb 0f00 	cmp.w	fp, #0
90017c34:	d121      	bne.n	90017c7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90017c36:	2d00      	cmp	r5, #0
90017c38:	d0df      	beq.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c3a:	782a      	ldrb	r2, [r5, #0]
90017c3c:	f04f 0b00 	mov.w	fp, #0
90017c40:	e01d      	b.n	90017c7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90017c42:	f1bb 0f00 	cmp.w	fp, #0
90017c46:	d077      	beq.n	90017d38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90017c48:	f8bb 2000 	ldrh.w	r2, [fp]
90017c4c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017c50:	f1bb 0f00 	cmp.w	fp, #0
90017c54:	d002      	beq.n	90017c5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90017c56:	f10b 0202 	add.w	r2, fp, #2
90017c5a:	9209      	str	r2, [sp, #36]	; 0x24
90017c5c:	b10d      	cbz	r5, 90017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90017c5e:	3501      	adds	r5, #1
90017c60:	9508      	str	r5, [sp, #32]
90017c62:	3301      	adds	r3, #1
90017c64:	930d      	str	r3, [sp, #52]	; 0x34
90017c66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017c68:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90017c6c:	f1bb 0f00 	cmp.w	fp, #0
90017c70:	d0d6      	beq.n	90017c20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90017c72:	f8bb 2000 	ldrh.w	r2, [fp]
90017c76:	2a00      	cmp	r2, #0
90017c78:	d1d6      	bne.n	90017c28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90017c7a:	f8bb 2000 	ldrh.w	r2, [fp]
90017c7e:	2a00      	cmp	r2, #0
90017c80:	d0bb      	beq.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c82:	459a      	cmp	sl, r3
90017c84:	ddb9      	ble.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017c86:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90017c8a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
90017c8e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90017c92:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90017c96:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90017c9a:	960e      	str	r6, [sp, #56]	; 0x38
90017c9c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90017ca0:	960f      	str	r6, [sp, #60]	; 0x3c
90017ca2:	f1bb 0f00 	cmp.w	fp, #0
90017ca6:	d002      	beq.n	90017cae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90017ca8:	f10b 0302 	add.w	r3, fp, #2
90017cac:	9309      	str	r3, [sp, #36]	; 0x24
90017cae:	b10d      	cbz	r5, 90017cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90017cb0:	1c6b      	adds	r3, r5, #1
90017cb2:	9308      	str	r3, [sp, #32]
90017cb4:	ab0f      	add	r3, sp, #60	; 0x3c
90017cb6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90017cba:	a908      	add	r1, sp, #32
90017cbc:	a809      	add	r0, sp, #36	; 0x24
90017cbe:	9305      	str	r3, [sp, #20]
90017cc0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90017cc4:	9304      	str	r3, [sp, #16]
90017cc6:	ab0e      	add	r3, sp, #56	; 0x38
90017cc8:	9303      	str	r3, [sp, #12]
90017cca:	ab0c      	add	r3, sp, #48	; 0x30
90017ccc:	9302      	str	r3, [sp, #8]
90017cce:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90017cd2:	9301      	str	r3, [sp, #4]
90017cd4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90017cd8:	9300      	str	r3, [sp, #0]
90017cda:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
90017cde:	f7ff fea8 	bl	90017a32 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90017ce2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017ce4:	2b00      	cmp	r3, #0
90017ce6:	bfbf      	itttt	lt
90017ce8:	6823      	ldrlt	r3, [r4, #0]
90017cea:	3404      	addlt	r4, #4
90017cec:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017cf0:	930e      	strlt	r3, [sp, #56]	; 0x38
90017cf2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017cf4:	2b00      	cmp	r3, #0
90017cf6:	bfbe      	ittt	lt
90017cf8:	6823      	ldrlt	r3, [r4, #0]
90017cfa:	3404      	addlt	r4, #4
90017cfc:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017d00:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90017d04:	bfb8      	it	lt
90017d06:	930f      	strlt	r3, [sp, #60]	; 0x3c
90017d08:	b1d9      	cbz	r1, 90017d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90017d0a:	880b      	ldrh	r3, [r1, #0]
90017d0c:	2b69      	cmp	r3, #105	; 0x69
90017d0e:	d01f      	beq.n	90017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017d10:	d82f      	bhi.n	90017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90017d12:	2b58      	cmp	r3, #88	; 0x58
90017d14:	d01c      	beq.n	90017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017d16:	d818      	bhi.n	90017d4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90017d18:	2b25      	cmp	r3, #37	; 0x25
90017d1a:	d034      	beq.n	90017d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90017d1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017d1e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90017d22:	f1bb 0f00 	cmp.w	fp, #0
90017d26:	f000 80b7 	beq.w	90017e98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90017d2a:	f8bb 5000 	ldrh.w	r5, [fp]
90017d2e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90017d32:	3301      	adds	r3, #1
90017d34:	930d      	str	r3, [sp, #52]	; 0x34
90017d36:	e029      	b.n	90017d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017d38:	b10d      	cbz	r5, 90017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90017d3a:	782a      	ldrb	r2, [r5, #0]
90017d3c:	e786      	b.n	90017c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017d3e:	462a      	mov	r2, r5
90017d40:	e784      	b.n	90017c4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017d42:	2a00      	cmp	r2, #0
90017d44:	d0ea      	beq.n	90017d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017d46:	7813      	ldrb	r3, [r2, #0]
90017d48:	e7e0      	b.n	90017d0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90017d4a:	3b63      	subs	r3, #99	; 0x63
90017d4c:	2b01      	cmp	r3, #1
90017d4e:	d8e5      	bhi.n	90017d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017d50:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90017d54:	b329      	cbz	r1, 90017da2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90017d56:	880b      	ldrh	r3, [r1, #0]
90017d58:	2b69      	cmp	r3, #105	; 0x69
90017d5a:	d063      	beq.n	90017e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017d5c:	d825      	bhi.n	90017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90017d5e:	2b63      	cmp	r3, #99	; 0x63
90017d60:	d038      	beq.n	90017dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90017d62:	2b64      	cmp	r3, #100	; 0x64
90017d64:	d05e      	beq.n	90017e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017d66:	2b58      	cmp	r3, #88	; 0x58
90017d68:	d07a      	beq.n	90017e60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90017d6a:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
90017d6e:	4625      	mov	r5, r4
90017d70:	e036      	b.n	90017de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017d72:	2b73      	cmp	r3, #115	; 0x73
90017d74:	d0ec      	beq.n	90017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017d76:	d802      	bhi.n	90017d7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90017d78:	2b6f      	cmp	r3, #111	; 0x6f
90017d7a:	d1cf      	bne.n	90017d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017d7c:	e7e8      	b.n	90017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017d7e:	2b75      	cmp	r3, #117	; 0x75
90017d80:	d0e6      	beq.n	90017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017d82:	2b78      	cmp	r3, #120	; 0x78
90017d84:	e7f9      	b.n	90017d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90017d86:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017d88:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90017d8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017d8e:	b10b      	cbz	r3, 90017d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90017d90:	3302      	adds	r3, #2
90017d92:	9309      	str	r3, [sp, #36]	; 0x24
90017d94:	9b08      	ldr	r3, [sp, #32]
90017d96:	2b00      	cmp	r3, #0
90017d98:	f43f af2f 	beq.w	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017d9c:	3301      	adds	r3, #1
90017d9e:	9308      	str	r3, [sp, #32]
90017da0:	e72b      	b.n	90017bfa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017da2:	2a00      	cmp	r2, #0
90017da4:	d0e1      	beq.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017da6:	7813      	ldrb	r3, [r2, #0]
90017da8:	e7d6      	b.n	90017d58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90017daa:	2b73      	cmp	r3, #115	; 0x73
90017dac:	d036      	beq.n	90017e1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90017dae:	d807      	bhi.n	90017dc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90017db0:	2b6f      	cmp	r3, #111	; 0x6f
90017db2:	d1da      	bne.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017db4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017db6:	1d25      	adds	r5, r4, #4
90017db8:	2308      	movs	r3, #8
90017dba:	eba8 0202 	sub.w	r2, r8, r2
90017dbe:	e049      	b.n	90017e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017dc0:	2b75      	cmp	r3, #117	; 0x75
90017dc2:	d042      	beq.n	90017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90017dc4:	2b78      	cmp	r3, #120	; 0x78
90017dc6:	d1d0      	bne.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017dc8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017dca:	1d25      	adds	r5, r4, #4
90017dcc:	2310      	movs	r3, #16
90017dce:	eba8 0202 	sub.w	r2, r8, r2
90017dd2:	e03f      	b.n	90017e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017dd4:	6823      	ldr	r3, [r4, #0]
90017dd6:	1d25      	adds	r5, r4, #4
90017dd8:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
90017ddc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90017de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017de2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90017de6:	2b00      	cmp	r3, #0
90017de8:	d051      	beq.n	90017e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90017dea:	881a      	ldrh	r2, [r3, #0]
90017dec:	a80d      	add	r0, sp, #52	; 0x34
90017dee:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90017df2:	462c      	mov	r4, r5
90017df4:	9005      	str	r0, [sp, #20]
90017df6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
90017dfa:	9004      	str	r0, [sp, #16]
90017dfc:	980e      	ldr	r0, [sp, #56]	; 0x38
90017dfe:	9003      	str	r0, [sp, #12]
90017e00:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90017e04:	9002      	str	r0, [sp, #8]
90017e06:	980f      	ldr	r0, [sp, #60]	; 0x3c
90017e08:	9001      	str	r0, [sp, #4]
90017e0a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
90017e0e:	e9cd 8706 	strd	r8, r7, [sp, #24]
90017e12:	9000      	str	r0, [sp, #0]
90017e14:	a810      	add	r0, sp, #64	; 0x40
90017e16:	f7ff fd49 	bl	900178ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90017e1a:	e7b7      	b.n	90017d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017e1c:	1d25      	adds	r5, r4, #4
90017e1e:	6823      	ldr	r3, [r4, #0]
90017e20:	9310      	str	r3, [sp, #64]	; 0x40
90017e22:	e7dd      	b.n	90017de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017e24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017e26:	230a      	movs	r3, #10
90017e28:	4649      	mov	r1, r9
90017e2a:	6820      	ldr	r0, [r4, #0]
90017e2c:	eba8 0202 	sub.w	r2, r8, r2
90017e30:	1d25      	adds	r5, r4, #4
90017e32:	b292      	uxth	r2, r2
90017e34:	f7ff fcf0 	bl	90017818 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90017e38:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90017e3c:	2b2d      	cmp	r3, #45	; 0x2d
90017e3e:	d1cf      	bne.n	90017de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017e40:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
90017e46:	3302      	adds	r3, #2
90017e48:	e7ea      	b.n	90017e20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90017e4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017e4c:	1d25      	adds	r5, r4, #4
90017e4e:	230a      	movs	r3, #10
90017e50:	eba8 0202 	sub.w	r2, r8, r2
90017e54:	b292      	uxth	r2, r2
90017e56:	4649      	mov	r1, r9
90017e58:	6820      	ldr	r0, [r4, #0]
90017e5a:	f7ff fd09 	bl	90017870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017e5e:	e7bf      	b.n	90017de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017e60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017e62:	2310      	movs	r3, #16
90017e64:	4649      	mov	r1, r9
90017e66:	6820      	ldr	r0, [r4, #0]
90017e68:	eba8 0202 	sub.w	r2, r8, r2
90017e6c:	1d25      	adds	r5, r4, #4
90017e6e:	b292      	uxth	r2, r2
90017e70:	f7ff fcfe 	bl	90017870 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017e74:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90017e78:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90017e7c:	2b00      	cmp	r3, #0
90017e7e:	d0af      	beq.n	90017de0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017e80:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90017e84:	2919      	cmp	r1, #25
90017e86:	d8f7      	bhi.n	90017e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017e88:	3b20      	subs	r3, #32
90017e8a:	8013      	strh	r3, [r2, #0]
90017e8c:	e7f4      	b.n	90017e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017e8e:	9a08      	ldr	r2, [sp, #32]
90017e90:	2a00      	cmp	r2, #0
90017e92:	d0ab      	beq.n	90017dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90017e94:	7812      	ldrb	r2, [r2, #0]
90017e96:	e7a9      	b.n	90017dec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90017e98:	2d00      	cmp	r5, #0
90017e9a:	f43f af48 	beq.w	90017d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90017e9e:	782d      	ldrb	r5, [r5, #0]
90017ea0:	e745      	b.n	90017d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90017ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90017ea2:	b507      	push	{r0, r1, r2, lr}
90017ea4:	9300      	str	r3, [sp, #0]
90017ea6:	4613      	mov	r3, r2
90017ea8:	2200      	movs	r2, #0
90017eaa:	f7ff fe92 	bl	90017bd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90017eae:	b003      	add	sp, #12
90017eb0:	f85d fb04 	ldr.w	pc, [sp], #4

90017eb4 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90017eb4:	b40c      	push	{r2, r3}
90017eb6:	b507      	push	{r0, r1, r2, lr}
90017eb8:	ab04      	add	r3, sp, #16
90017eba:	f853 2b04 	ldr.w	r2, [r3], #4
90017ebe:	9301      	str	r3, [sp, #4]
90017ec0:	f7ff ffef 	bl	90017ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90017ec4:	b003      	add	sp, #12
90017ec6:	f85d eb04 	ldr.w	lr, [sp], #4
90017eca:	b002      	add	sp, #8
90017ecc:	4770      	bx	lr
	...

90017ed0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90017ed0:	4b01      	ldr	r3, [pc, #4]	; (90017ed8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90017ed2:	6018      	str	r0, [r3, #0]
90017ed4:	4770      	bx	lr
90017ed6:	bf00      	nop
90017ed8:	240235d4 	.word	0x240235d4

90017edc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90017edc:	4b06      	ldr	r3, [pc, #24]	; (90017ef8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90017ede:	881a      	ldrh	r2, [r3, #0]
90017ee0:	4282      	cmp	r2, r0
90017ee2:	d807      	bhi.n	90017ef4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90017ee4:	4b05      	ldr	r3, [pc, #20]	; (90017efc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90017ee6:	881b      	ldrh	r3, [r3, #0]
90017ee8:	4413      	add	r3, r2
90017eea:	4298      	cmp	r0, r3
90017eec:	bfac      	ite	ge
90017eee:	2000      	movge	r0, #0
90017ef0:	2001      	movlt	r0, #1
90017ef2:	4770      	bx	lr
90017ef4:	2000      	movs	r0, #0
90017ef6:	4770      	bx	lr
90017ef8:	240235f4 	.word	0x240235f4
90017efc:	240235f8 	.word	0x240235f8

90017f00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90017f00:	b508      	push	{r3, lr}
90017f02:	4601      	mov	r1, r0
90017f04:	f7ff ffea 	bl	90017edc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90017f08:	b118      	cbz	r0, 90017f12 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90017f0a:	4b02      	ldr	r3, [pc, #8]	; (90017f14 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90017f0c:	681b      	ldr	r3, [r3, #0]
90017f0e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90017f12:	bd08      	pop	{r3, pc}
90017f14:	240235d8 	.word	0x240235d8

90017f18 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90017f18:	b5f0      	push	{r4, r5, r6, r7, lr}
90017f1a:	4c24      	ldr	r4, [pc, #144]	; (90017fac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90017f1c:	6823      	ldr	r3, [r4, #0]
90017f1e:	2b00      	cmp	r3, #0
90017f20:	d042      	beq.n	90017fa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90017f22:	4a23      	ldr	r2, [pc, #140]	; (90017fb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90017f24:	4d23      	ldr	r5, [pc, #140]	; (90017fb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90017f26:	8811      	ldrh	r1, [r2, #0]
90017f28:	f8b5 c000 	ldrh.w	ip, [r5]
90017f2c:	4822      	ldr	r0, [pc, #136]	; (90017fb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90017f2e:	4461      	add	r1, ip
90017f30:	1c4a      	adds	r2, r1, #1
90017f32:	008f      	lsls	r7, r1, #2
90017f34:	f022 0201 	bic.w	r2, r2, #1
90017f38:	19de      	adds	r6, r3, r7
90017f3a:	0412      	lsls	r2, r2, #16
90017f3c:	6006      	str	r6, [r0, #0]
90017f3e:	4e1f      	ldr	r6, [pc, #124]	; (90017fbc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90017f40:	0c12      	lsrs	r2, r2, #16
90017f42:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90017f46:	19da      	adds	r2, r3, r7
90017f48:	6032      	str	r2, [r6, #0]
90017f4a:	220e      	movs	r2, #14
90017f4c:	fb02 f20c 	mul.w	r2, r2, ip
90017f50:	3203      	adds	r2, #3
90017f52:	f022 0203 	bic.w	r2, r2, #3
90017f56:	443a      	add	r2, r7
90017f58:	4f19      	ldr	r7, [pc, #100]	; (90017fc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90017f5a:	4413      	add	r3, r2
90017f5c:	603b      	str	r3, [r7, #0]
90017f5e:	2300      	movs	r3, #0
90017f60:	4f18      	ldr	r7, [pc, #96]	; (90017fc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90017f62:	469c      	mov	ip, r3
90017f64:	803b      	strh	r3, [r7, #0]
90017f66:	4f18      	ldr	r7, [pc, #96]	; (90017fc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90017f68:	683f      	ldr	r7, [r7, #0]
90017f6a:	1aba      	subs	r2, r7, r2
90017f6c:	4f17      	ldr	r7, [pc, #92]	; (90017fcc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90017f6e:	603a      	str	r2, [r7, #0]
90017f70:	f64f 77ff 	movw	r7, #65535	; 0xffff
90017f74:	4a16      	ldr	r2, [pc, #88]	; (90017fd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90017f76:	8013      	strh	r3, [r2, #0]
90017f78:	428b      	cmp	r3, r1
90017f7a:	d10d      	bne.n	90017f98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90017f7c:	882d      	ldrh	r5, [r5, #0]
90017f7e:	2300      	movs	r3, #0
90017f80:	6830      	ldr	r0, [r6, #0]
90017f82:	240e      	movs	r4, #14
90017f84:	429d      	cmp	r5, r3
90017f86:	d90f      	bls.n	90017fa8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90017f88:	fb04 0203 	mla	r2, r4, r3, r0
90017f8c:	3301      	adds	r3, #1
90017f8e:	7b11      	ldrb	r1, [r2, #12]
90017f90:	f36f 1145 	bfc	r1, #5, #1
90017f94:	7311      	strb	r1, [r2, #12]
90017f96:	e7f5      	b.n	90017f84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90017f98:	6822      	ldr	r2, [r4, #0]
90017f9a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90017f9e:	6802      	ldr	r2, [r0, #0]
90017fa0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90017fa4:	3301      	adds	r3, #1
90017fa6:	e7e7      	b.n	90017f78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90017fa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017faa:	bf00      	nop
90017fac:	240235d8 	.word	0x240235d8
90017fb0:	240235f4 	.word	0x240235f4
90017fb4:	240235f8 	.word	0x240235f8
90017fb8:	240235ec 	.word	0x240235ec
90017fbc:	240235dc 	.word	0x240235dc
90017fc0:	240235e4 	.word	0x240235e4
90017fc4:	240235f6 	.word	0x240235f6
90017fc8:	240235e0 	.word	0x240235e0
90017fcc:	240235f0 	.word	0x240235f0
90017fd0:	240235e8 	.word	0x240235e8

90017fd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90017fd4:	4b06      	ldr	r3, [pc, #24]	; (90017ff0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90017fd6:	681b      	ldr	r3, [r3, #0]
90017fd8:	b943      	cbnz	r3, 90017fec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90017fda:	b139      	cbz	r1, 90017fec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90017fdc:	4b05      	ldr	r3, [pc, #20]	; (90017ff4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90017fde:	801a      	strh	r2, [r3, #0]
90017fe0:	4b05      	ldr	r3, [pc, #20]	; (90017ff8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90017fe2:	6019      	str	r1, [r3, #0]
90017fe4:	4b05      	ldr	r3, [pc, #20]	; (90017ffc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90017fe6:	6018      	str	r0, [r3, #0]
90017fe8:	f7ff bf96 	b.w	90017f18 <_ZN8touchgfx6Bitmap10clearCacheEv>
90017fec:	4770      	bx	lr
90017fee:	bf00      	nop
90017ff0:	240235e4 	.word	0x240235e4
90017ff4:	240235f8 	.word	0x240235f8
90017ff8:	240235e0 	.word	0x240235e0
90017ffc:	240235d8 	.word	0x240235d8

90018000 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018000:	b470      	push	{r4, r5, r6}
90018002:	4c07      	ldr	r4, [pc, #28]	; (90018020 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018004:	4605      	mov	r5, r0
90018006:	4610      	mov	r0, r2
90018008:	9a03      	ldr	r2, [sp, #12]
9001800a:	6826      	ldr	r6, [r4, #0]
9001800c:	b936      	cbnz	r6, 9001801c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001800e:	6025      	str	r5, [r4, #0]
90018010:	4c04      	ldr	r4, [pc, #16]	; (90018024 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018012:	8021      	strh	r1, [r4, #0]
90018014:	4619      	mov	r1, r3
90018016:	bc70      	pop	{r4, r5, r6}
90018018:	f7ff bfdc 	b.w	90017fd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001801c:	bc70      	pop	{r4, r5, r6}
9001801e:	4770      	bx	lr
90018020:	240235fc 	.word	0x240235fc
90018024:	240235f4 	.word	0x240235f4

90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90018028:	4a12      	ldr	r2, [pc, #72]	; (90018074 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001802a:	8803      	ldrh	r3, [r0, #0]
9001802c:	8812      	ldrh	r2, [r2, #0]
9001802e:	4293      	cmp	r3, r2
90018030:	d207      	bcs.n	90018042 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90018032:	4a11      	ldr	r2, [pc, #68]	; (90018078 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90018034:	2114      	movs	r1, #20
90018036:	6812      	ldr	r2, [r2, #0]
90018038:	fb01 2303 	mla	r3, r1, r3, r2
9001803c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90018040:	4770      	bx	lr
90018042:	490e      	ldr	r1, [pc, #56]	; (9001807c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90018044:	8809      	ldrh	r1, [r1, #0]
90018046:	4411      	add	r1, r2
90018048:	428b      	cmp	r3, r1
9001804a:	da04      	bge.n	90018056 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
9001804c:	1a9b      	subs	r3, r3, r2
9001804e:	4a0c      	ldr	r2, [pc, #48]	; (90018080 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90018050:	210e      	movs	r1, #14
90018052:	6812      	ldr	r2, [r2, #0]
90018054:	e7f0      	b.n	90018038 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90018056:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001805a:	4293      	cmp	r3, r2
9001805c:	d108      	bne.n	90018070 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
9001805e:	4b09      	ldr	r3, [pc, #36]	; (90018084 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90018060:	781b      	ldrb	r3, [r3, #0]
90018062:	b91b      	cbnz	r3, 9001806c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90018064:	4b08      	ldr	r3, [pc, #32]	; (90018088 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90018066:	f9b3 0000 	ldrsh.w	r0, [r3]
9001806a:	4770      	bx	lr
9001806c:	4b07      	ldr	r3, [pc, #28]	; (9001808c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
9001806e:	e7fa      	b.n	90018066 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90018070:	2000      	movs	r0, #0
90018072:	4770      	bx	lr
90018074:	240235f4 	.word	0x240235f4
90018078:	240235fc 	.word	0x240235fc
9001807c:	240235f8 	.word	0x240235f8
90018080:	240235dc 	.word	0x240235dc
90018084:	24023564 	.word	0x24023564
90018088:	24023566 	.word	0x24023566
9001808c:	24023568 	.word	0x24023568

90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018090:	4a12      	ldr	r2, [pc, #72]	; (900180dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90018092:	8803      	ldrh	r3, [r0, #0]
90018094:	8812      	ldrh	r2, [r2, #0]
90018096:	4293      	cmp	r3, r2
90018098:	d207      	bcs.n	900180aa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001809a:	4a11      	ldr	r2, [pc, #68]	; (900180e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001809c:	2114      	movs	r1, #20
9001809e:	6812      	ldr	r2, [r2, #0]
900180a0:	fb01 2303 	mla	r3, r1, r3, r2
900180a4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
900180a8:	4770      	bx	lr
900180aa:	490e      	ldr	r1, [pc, #56]	; (900180e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
900180ac:	8809      	ldrh	r1, [r1, #0]
900180ae:	4411      	add	r1, r2
900180b0:	428b      	cmp	r3, r1
900180b2:	da04      	bge.n	900180be <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
900180b4:	1a9b      	subs	r3, r3, r2
900180b6:	4a0c      	ldr	r2, [pc, #48]	; (900180e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
900180b8:	210e      	movs	r1, #14
900180ba:	6812      	ldr	r2, [r2, #0]
900180bc:	e7f0      	b.n	900180a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
900180be:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900180c2:	4293      	cmp	r3, r2
900180c4:	d108      	bne.n	900180d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
900180c6:	4b09      	ldr	r3, [pc, #36]	; (900180ec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
900180c8:	781b      	ldrb	r3, [r3, #0]
900180ca:	b91b      	cbnz	r3, 900180d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
900180cc:	4b08      	ldr	r3, [pc, #32]	; (900180f0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
900180ce:	f9b3 0000 	ldrsh.w	r0, [r3]
900180d2:	4770      	bx	lr
900180d4:	4b07      	ldr	r3, [pc, #28]	; (900180f4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
900180d6:	e7fa      	b.n	900180ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
900180d8:	2000      	movs	r0, #0
900180da:	4770      	bx	lr
900180dc:	240235f4 	.word	0x240235f4
900180e0:	240235fc 	.word	0x240235fc
900180e4:	240235f8 	.word	0x240235f8
900180e8:	240235dc 	.word	0x240235dc
900180ec:	24023564 	.word	0x24023564
900180f0:	24023568 	.word	0x24023568
900180f4:	24023566 	.word	0x24023566

900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
900180f8:	4a1f      	ldr	r2, [pc, #124]	; (90018178 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
900180fa:	b510      	push	{r4, lr}
900180fc:	880b      	ldrh	r3, [r1, #0]
900180fe:	8812      	ldrh	r2, [r2, #0]
90018100:	4293      	cmp	r3, r2
90018102:	d213      	bcs.n	9001812c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90018104:	4a1d      	ldr	r2, [pc, #116]	; (9001817c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90018106:	2114      	movs	r1, #20
90018108:	6812      	ldr	r2, [r2, #0]
9001810a:	fb01 2303 	mla	r3, r1, r3, r2
9001810e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90018112:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90018116:	8a1a      	ldrh	r2, [r3, #16]
90018118:	8a5b      	ldrh	r3, [r3, #18]
9001811a:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001811e:	8004      	strh	r4, [r0, #0]
90018120:	f3c3 030c 	ubfx	r3, r3, #0, #13
90018124:	8041      	strh	r1, [r0, #2]
90018126:	8082      	strh	r2, [r0, #4]
90018128:	80c3      	strh	r3, [r0, #6]
9001812a:	e00e      	b.n	9001814a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001812c:	4914      	ldr	r1, [pc, #80]	; (90018180 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001812e:	8809      	ldrh	r1, [r1, #0]
90018130:	4411      	add	r1, r2
90018132:	428b      	cmp	r3, r1
90018134:	da0a      	bge.n	9001814c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
90018136:	1a9b      	subs	r3, r3, r2
90018138:	4a12      	ldr	r2, [pc, #72]	; (90018184 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
9001813a:	210e      	movs	r1, #14
9001813c:	6812      	ldr	r2, [r2, #0]
9001813e:	fb01 2303 	mla	r3, r1, r3, r2
90018142:	681a      	ldr	r2, [r3, #0]
90018144:	6002      	str	r2, [r0, #0]
90018146:	685a      	ldr	r2, [r3, #4]
90018148:	6042      	str	r2, [r0, #4]
9001814a:	bd10      	pop	{r4, pc}
9001814c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018150:	4293      	cmp	r3, r2
90018152:	d10b      	bne.n	9001816c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
90018154:	4b0c      	ldr	r3, [pc, #48]	; (90018188 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90018156:	f9b3 1000 	ldrsh.w	r1, [r3]
9001815a:	4b0c      	ldr	r3, [pc, #48]	; (9001818c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
9001815c:	8081      	strh	r1, [r0, #4]
9001815e:	f9b3 2000 	ldrsh.w	r2, [r3]
90018162:	2300      	movs	r3, #0
90018164:	80c2      	strh	r2, [r0, #6]
90018166:	8003      	strh	r3, [r0, #0]
90018168:	8043      	strh	r3, [r0, #2]
9001816a:	e7ee      	b.n	9001814a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001816c:	2300      	movs	r3, #0
9001816e:	8003      	strh	r3, [r0, #0]
90018170:	8043      	strh	r3, [r0, #2]
90018172:	8083      	strh	r3, [r0, #4]
90018174:	e7d8      	b.n	90018128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90018176:	bf00      	nop
90018178:	240235f4 	.word	0x240235f4
9001817c:	240235fc 	.word	0x240235fc
90018180:	240235f8 	.word	0x240235f8
90018184:	240235dc 	.word	0x240235dc
90018188:	24023560 	.word	0x24023560
9001818c:	24023562 	.word	0x24023562

90018190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018190:	4a17      	ldr	r2, [pc, #92]	; (900181f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018192:	8803      	ldrh	r3, [r0, #0]
90018194:	8812      	ldrh	r2, [r2, #0]
90018196:	4293      	cmp	r3, r2
90018198:	d213      	bcs.n	900181c2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001819a:	4a16      	ldr	r2, [pc, #88]	; (900181f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001819c:	2114      	movs	r1, #20
9001819e:	6812      	ldr	r2, [r2, #0]
900181a0:	fb01 2303 	mla	r3, r1, r3, r2
900181a4:	8a1a      	ldrh	r2, [r3, #16]
900181a6:	8919      	ldrh	r1, [r3, #8]
900181a8:	f3c2 020c 	ubfx	r2, r2, #0, #13
900181ac:	428a      	cmp	r2, r1
900181ae:	db1d      	blt.n	900181ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
900181b0:	8a58      	ldrh	r0, [r3, #18]
900181b2:	f3c0 000c 	ubfx	r0, r0, #0, #13
900181b6:	895b      	ldrh	r3, [r3, #10]
900181b8:	4298      	cmp	r0, r3
900181ba:	bfac      	ite	ge
900181bc:	2000      	movge	r0, #0
900181be:	2001      	movlt	r0, #1
900181c0:	4770      	bx	lr
900181c2:	490d      	ldr	r1, [pc, #52]	; (900181f8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
900181c4:	8809      	ldrh	r1, [r1, #0]
900181c6:	4411      	add	r1, r2
900181c8:	428b      	cmp	r3, r1
900181ca:	da0d      	bge.n	900181e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
900181cc:	1a9b      	subs	r3, r3, r2
900181ce:	4a0b      	ldr	r2, [pc, #44]	; (900181fc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
900181d0:	210e      	movs	r1, #14
900181d2:	6812      	ldr	r2, [r2, #0]
900181d4:	fb01 2303 	mla	r3, r1, r3, r2
900181d8:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
900181dc:	891a      	ldrh	r2, [r3, #8]
900181de:	4291      	cmp	r1, r2
900181e0:	db04      	blt.n	900181ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
900181e2:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
900181e6:	e7e6      	b.n	900181b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
900181e8:	2000      	movs	r0, #0
900181ea:	4770      	bx	lr
900181ec:	2001      	movs	r0, #1
900181ee:	4770      	bx	lr
900181f0:	240235f4 	.word	0x240235f4
900181f4:	240235fc 	.word	0x240235fc
900181f8:	240235f8 	.word	0x240235f8
900181fc:	240235dc 	.word	0x240235dc

90018200 <_ZNK8touchgfx6Bitmap7getDataEv>:
90018200:	4a12      	ldr	r2, [pc, #72]	; (9001824c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90018202:	8803      	ldrh	r3, [r0, #0]
90018204:	8811      	ldrh	r1, [r2, #0]
90018206:	428b      	cmp	r3, r1
90018208:	d20b      	bcs.n	90018222 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001820a:	4a11      	ldr	r2, [pc, #68]	; (90018250 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001820c:	6812      	ldr	r2, [r2, #0]
9001820e:	b112      	cbz	r2, 90018216 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90018210:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018214:	b9c0      	cbnz	r0, 90018248 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90018216:	4a0f      	ldr	r2, [pc, #60]	; (90018254 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90018218:	6811      	ldr	r1, [r2, #0]
9001821a:	2214      	movs	r2, #20
9001821c:	4353      	muls	r3, r2
9001821e:	58c8      	ldr	r0, [r1, r3]
90018220:	4770      	bx	lr
90018222:	4a0d      	ldr	r2, [pc, #52]	; (90018258 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90018224:	8812      	ldrh	r2, [r2, #0]
90018226:	440a      	add	r2, r1
90018228:	4293      	cmp	r3, r2
9001822a:	da04      	bge.n	90018236 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001822c:	4a08      	ldr	r2, [pc, #32]	; (90018250 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001822e:	6812      	ldr	r2, [r2, #0]
90018230:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018234:	4770      	bx	lr
90018236:	f64f 72fe 	movw	r2, #65534	; 0xfffe
9001823a:	4293      	cmp	r3, r2
9001823c:	d103      	bne.n	90018246 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
9001823e:	4b07      	ldr	r3, [pc, #28]	; (9001825c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90018240:	681b      	ldr	r3, [r3, #0]
90018242:	6c58      	ldr	r0, [r3, #68]	; 0x44
90018244:	4770      	bx	lr
90018246:	2000      	movs	r0, #0
90018248:	4770      	bx	lr
9001824a:	bf00      	nop
9001824c:	240235f4 	.word	0x240235f4
90018250:	240235d8 	.word	0x240235d8
90018254:	240235fc 	.word	0x240235fc
90018258:	240235f8 	.word	0x240235f8
9001825c:	2402356c 	.word	0x2402356c

90018260 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90018260:	4b24      	ldr	r3, [pc, #144]	; (900182f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90018262:	8802      	ldrh	r2, [r0, #0]
90018264:	8818      	ldrh	r0, [r3, #0]
90018266:	4282      	cmp	r2, r0
90018268:	d221      	bcs.n	900182ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
9001826a:	4b23      	ldr	r3, [pc, #140]	; (900182f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
9001826c:	6819      	ldr	r1, [r3, #0]
9001826e:	2314      	movs	r3, #20
90018270:	fb03 1302 	mla	r3, r3, r2, r1
90018274:	6858      	ldr	r0, [r3, #4]
90018276:	2800      	cmp	r0, #0
90018278:	d03a      	beq.n	900182f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001827a:	4920      	ldr	r1, [pc, #128]	; (900182fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
9001827c:	6809      	ldr	r1, [r1, #0]
9001827e:	2900      	cmp	r1, #0
90018280:	d036      	beq.n	900182f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90018282:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90018286:	2900      	cmp	r1, #0
90018288:	d032      	beq.n	900182f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
9001828a:	891a      	ldrh	r2, [r3, #8]
9001828c:	8958      	ldrh	r0, [r3, #10]
9001828e:	4350      	muls	r0, r2
90018290:	7c5a      	ldrb	r2, [r3, #17]
90018292:	7cdb      	ldrb	r3, [r3, #19]
90018294:	0952      	lsrs	r2, r2, #5
90018296:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001829a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001829e:	2b0b      	cmp	r3, #11
900182a0:	bf18      	it	ne
900182a2:	0040      	lslne	r0, r0, #1
900182a4:	3003      	adds	r0, #3
900182a6:	f020 0003 	bic.w	r0, r0, #3
900182aa:	4408      	add	r0, r1
900182ac:	4770      	bx	lr
900182ae:	4b14      	ldr	r3, [pc, #80]	; (90018300 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
900182b0:	881b      	ldrh	r3, [r3, #0]
900182b2:	4403      	add	r3, r0
900182b4:	429a      	cmp	r2, r3
900182b6:	da1a      	bge.n	900182ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
900182b8:	4b12      	ldr	r3, [pc, #72]	; (90018304 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
900182ba:	1a10      	subs	r0, r2, r0
900182bc:	210e      	movs	r1, #14
900182be:	681b      	ldr	r3, [r3, #0]
900182c0:	fb01 3000 	mla	r0, r1, r0, r3
900182c4:	7b03      	ldrb	r3, [r0, #12]
900182c6:	f003 031f 	and.w	r3, r3, #31
900182ca:	2b0b      	cmp	r3, #11
900182cc:	d10b      	bne.n	900182e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
900182ce:	8903      	ldrh	r3, [r0, #8]
900182d0:	8940      	ldrh	r0, [r0, #10]
900182d2:	4358      	muls	r0, r3
900182d4:	4b09      	ldr	r3, [pc, #36]	; (900182fc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900182d6:	3003      	adds	r0, #3
900182d8:	6819      	ldr	r1, [r3, #0]
900182da:	f020 0303 	bic.w	r3, r0, #3
900182de:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
900182e2:	4418      	add	r0, r3
900182e4:	4770      	bx	lr
900182e6:	2b0d      	cmp	r3, #13
900182e8:	d101      	bne.n	900182ee <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
900182ea:	300d      	adds	r0, #13
900182ec:	4770      	bx	lr
900182ee:	2000      	movs	r0, #0
900182f0:	4770      	bx	lr
900182f2:	bf00      	nop
900182f4:	240235f4 	.word	0x240235f4
900182f8:	240235fc 	.word	0x240235fc
900182fc:	240235d8 	.word	0x240235d8
90018300:	240235f8 	.word	0x240235f8
90018304:	240235dc 	.word	0x240235dc

90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90018308:	4a17      	ldr	r2, [pc, #92]	; (90018368 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001830a:	b510      	push	{r4, lr}
9001830c:	8803      	ldrh	r3, [r0, #0]
9001830e:	8812      	ldrh	r2, [r2, #0]
90018310:	4293      	cmp	r3, r2
90018312:	d20c      	bcs.n	9001832e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90018314:	4a15      	ldr	r2, [pc, #84]	; (9001836c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
90018316:	2114      	movs	r1, #20
90018318:	6812      	ldr	r2, [r2, #0]
9001831a:	fb01 2303 	mla	r3, r1, r3, r2
9001831e:	7c58      	ldrb	r0, [r3, #17]
90018320:	0942      	lsrs	r2, r0, #5
90018322:	7cd8      	ldrb	r0, [r3, #19]
90018324:	f3c0 1042 	ubfx	r0, r0, #5, #3
90018328:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001832c:	bd10      	pop	{r4, pc}
9001832e:	4910      	ldr	r1, [pc, #64]	; (90018370 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
90018330:	8809      	ldrh	r1, [r1, #0]
90018332:	4411      	add	r1, r2
90018334:	428b      	cmp	r3, r1
90018336:	da09      	bge.n	9001834c <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
90018338:	1a9b      	subs	r3, r3, r2
9001833a:	4a0e      	ldr	r2, [pc, #56]	; (90018374 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
9001833c:	210e      	movs	r1, #14
9001833e:	6812      	ldr	r2, [r2, #0]
90018340:	fb01 2303 	mla	r3, r1, r3, r2
90018344:	7b18      	ldrb	r0, [r3, #12]
90018346:	f000 001f 	and.w	r0, r0, #31
9001834a:	e7ef      	b.n	9001832c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
9001834c:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018350:	4293      	cmp	r3, r2
90018352:	d106      	bne.n	90018362 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
90018354:	f7f8 f8ec 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90018358:	6803      	ldr	r3, [r0, #0]
9001835a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001835e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90018360:	4718      	bx	r3
90018362:	2000      	movs	r0, #0
90018364:	e7e2      	b.n	9001832c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
90018366:	bf00      	nop
90018368:	240235f4 	.word	0x240235f4
9001836c:	240235fc 	.word	0x240235fc
90018370:	240235f8 	.word	0x240235f8
90018374:	240235dc 	.word	0x240235dc

90018378 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
90018378:	2010      	movs	r0, #16
9001837a:	4770      	bx	lr

9001837c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001837c:	4b02      	ldr	r3, [pc, #8]	; (90018388 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001837e:	8818      	ldrh	r0, [r3, #0]
90018380:	0040      	lsls	r0, r0, #1
90018382:	b280      	uxth	r0, r0
90018384:	4770      	bx	lr
90018386:	bf00      	nop
90018388:	24023566 	.word	0x24023566

9001838c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001838c:	2bff      	cmp	r3, #255	; 0xff
9001838e:	d050      	beq.n	90018432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90018390:	2a0b      	cmp	r2, #11
90018392:	d04a      	beq.n	9001842a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90018394:	d80e      	bhi.n	900183b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90018396:	2a03      	cmp	r2, #3
90018398:	d03f      	beq.n	9001841a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001839a:	d804      	bhi.n	900183a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001839c:	2a01      	cmp	r2, #1
9001839e:	d03e      	beq.n	9001841e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
900183a0:	d93f      	bls.n	90018422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
900183a2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
900183a4:	4770      	bx	lr
900183a6:	2a09      	cmp	r2, #9
900183a8:	d03f      	beq.n	9001842a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
900183aa:	d83c      	bhi.n	90018426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
900183ac:	2a08      	cmp	r2, #8
900183ae:	d03a      	beq.n	90018426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
900183b0:	2000      	movs	r0, #0
900183b2:	4770      	bx	lr
900183b4:	2a2f      	cmp	r2, #47	; 0x2f
900183b6:	d024      	beq.n	90018402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
900183b8:	d80d      	bhi.n	900183d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
900183ba:	2a2d      	cmp	r2, #45	; 0x2d
900183bc:	d014      	beq.n	900183e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
900183be:	d826      	bhi.n	9001840e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
900183c0:	2a2c      	cmp	r2, #44	; 0x2c
900183c2:	d1f5      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900183c4:	684b      	ldr	r3, [r1, #4]
900183c6:	781b      	ldrb	r3, [r3, #0]
900183c8:	2b01      	cmp	r3, #1
900183ca:	d018      	beq.n	900183fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
900183cc:	d323      	bcc.n	90018416 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
900183ce:	2b02      	cmp	r3, #2
900183d0:	d1ee      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900183d2:	68c0      	ldr	r0, [r0, #12]
900183d4:	4770      	bx	lr
900183d6:	2a31      	cmp	r2, #49	; 0x31
900183d8:	d004      	beq.n	900183e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
900183da:	d328      	bcc.n	9001842e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
900183dc:	2a32      	cmp	r2, #50	; 0x32
900183de:	d026      	beq.n	9001842e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
900183e0:	2a33      	cmp	r2, #51	; 0x33
900183e2:	d1e5      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900183e4:	6f40      	ldr	r0, [r0, #116]	; 0x74
900183e6:	4770      	bx	lr
900183e8:	684b      	ldr	r3, [r1, #4]
900183ea:	781b      	ldrb	r3, [r3, #0]
900183ec:	2b01      	cmp	r3, #1
900183ee:	d004      	beq.n	900183fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
900183f0:	d30b      	bcc.n	9001840a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
900183f2:	2b02      	cmp	r3, #2
900183f4:	d1dc      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900183f6:	6940      	ldr	r0, [r0, #20]
900183f8:	4770      	bx	lr
900183fa:	6a40      	ldr	r0, [r0, #36]	; 0x24
900183fc:	4770      	bx	lr
900183fe:	69c0      	ldr	r0, [r0, #28]
90018400:	4770      	bx	lr
90018402:	684b      	ldr	r3, [r1, #4]
90018404:	781b      	ldrb	r3, [r3, #0]
90018406:	2b00      	cmp	r3, #0
90018408:	d1d2      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001840a:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001840c:	4770      	bx	lr
9001840e:	684b      	ldr	r3, [r1, #4]
90018410:	781b      	ldrb	r3, [r3, #0]
90018412:	2b00      	cmp	r3, #0
90018414:	d1cc      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018416:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90018418:	4770      	bx	lr
9001841a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001841c:	4770      	bx	lr
9001841e:	6d40      	ldr	r0, [r0, #84]	; 0x54
90018420:	4770      	bx	lr
90018422:	6c40      	ldr	r0, [r0, #68]	; 0x44
90018424:	4770      	bx	lr
90018426:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90018428:	4770      	bx	lr
9001842a:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001842c:	4770      	bx	lr
9001842e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
90018430:	4770      	bx	lr
90018432:	2a0b      	cmp	r2, #11
90018434:	d049      	beq.n	900184ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
90018436:	d80e      	bhi.n	90018456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
90018438:	2a03      	cmp	r2, #3
9001843a:	d040      	beq.n	900184be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
9001843c:	d804      	bhi.n	90018448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
9001843e:	2a01      	cmp	r2, #1
90018440:	d03f      	beq.n	900184c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
90018442:	d940      	bls.n	900184c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
90018444:	6c00      	ldr	r0, [r0, #64]	; 0x40
90018446:	4770      	bx	lr
90018448:	2a09      	cmp	r2, #9
9001844a:	d03e      	beq.n	900184ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001844c:	d801      	bhi.n	90018452 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
9001844e:	2a08      	cmp	r2, #8
90018450:	d1ae      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018452:	6e00      	ldr	r0, [r0, #96]	; 0x60
90018454:	4770      	bx	lr
90018456:	2a2f      	cmp	r2, #47	; 0x2f
90018458:	d024      	beq.n	900184a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
9001845a:	d80d      	bhi.n	90018478 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
9001845c:	2a2d      	cmp	r2, #45	; 0x2d
9001845e:	d014      	beq.n	9001848a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
90018460:	d826      	bhi.n	900184b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
90018462:	2a2c      	cmp	r2, #44	; 0x2c
90018464:	d1a4      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018466:	684b      	ldr	r3, [r1, #4]
90018468:	781b      	ldrb	r3, [r3, #0]
9001846a:	2b01      	cmp	r3, #1
9001846c:	d018      	beq.n	900184a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
9001846e:	d324      	bcc.n	900184ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
90018470:	2b02      	cmp	r3, #2
90018472:	d19d      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018474:	6900      	ldr	r0, [r0, #16]
90018476:	4770      	bx	lr
90018478:	2a31      	cmp	r2, #49	; 0x31
9001847a:	d004      	beq.n	90018486 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
9001847c:	d327      	bcc.n	900184ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001847e:	2a32      	cmp	r2, #50	; 0x32
90018480:	d025      	beq.n	900184ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
90018482:	2a33      	cmp	r2, #51	; 0x33
90018484:	d194      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018486:	6f80      	ldr	r0, [r0, #120]	; 0x78
90018488:	4770      	bx	lr
9001848a:	684b      	ldr	r3, [r1, #4]
9001848c:	781b      	ldrb	r3, [r3, #0]
9001848e:	2b01      	cmp	r3, #1
90018490:	d004      	beq.n	9001849c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90018492:	d30b      	bcc.n	900184ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90018494:	2b02      	cmp	r3, #2
90018496:	d18b      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018498:	6980      	ldr	r0, [r0, #24]
9001849a:	4770      	bx	lr
9001849c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001849e:	4770      	bx	lr
900184a0:	6a00      	ldr	r0, [r0, #32]
900184a2:	4770      	bx	lr
900184a4:	684b      	ldr	r3, [r1, #4]
900184a6:	781b      	ldrb	r3, [r3, #0]
900184a8:	2b00      	cmp	r3, #0
900184aa:	d181      	bne.n	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900184ac:	6b80      	ldr	r0, [r0, #56]	; 0x38
900184ae:	4770      	bx	lr
900184b0:	684b      	ldr	r3, [r1, #4]
900184b2:	781b      	ldrb	r3, [r3, #0]
900184b4:	2b00      	cmp	r3, #0
900184b6:	f47f af7b 	bne.w	900183b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900184ba:	6b00      	ldr	r0, [r0, #48]	; 0x30
900184bc:	4770      	bx	lr
900184be:	6d00      	ldr	r0, [r0, #80]	; 0x50
900184c0:	4770      	bx	lr
900184c2:	6d80      	ldr	r0, [r0, #88]	; 0x58
900184c4:	4770      	bx	lr
900184c6:	6c80      	ldr	r0, [r0, #72]	; 0x48
900184c8:	4770      	bx	lr
900184ca:	6e80      	ldr	r0, [r0, #104]	; 0x68
900184cc:	4770      	bx	lr
900184ce:	6f00      	ldr	r0, [r0, #112]	; 0x70
900184d0:	4770      	bx	lr

900184d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900184d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900184d6:	b087      	sub	sp, #28
900184d8:	9815      	ldr	r0, [sp, #84]	; 0x54
900184da:	9205      	str	r2, [sp, #20]
900184dc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900184e0:	9101      	str	r1, [sp, #4]
900184e2:	9202      	str	r2, [sp, #8]
900184e4:	6841      	ldr	r1, [r0, #4]
900184e6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
900184ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
900184ee:	fb01 2404 	mla	r4, r1, r4, r2
900184f2:	6802      	ldr	r2, [r0, #0]
900184f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900184f8:	f8de 2000 	ldr.w	r2, [lr]
900184fc:	9203      	str	r2, [sp, #12]
900184fe:	f8de 2004 	ldr.w	r2, [lr, #4]
90018502:	3204      	adds	r2, #4
90018504:	9204      	str	r2, [sp, #16]
90018506:	9a02      	ldr	r2, [sp, #8]
90018508:	43d6      	mvns	r6, r2
9001850a:	b2f6      	uxtb	r6, r6
9001850c:	9a01      	ldr	r2, [sp, #4]
9001850e:	2a00      	cmp	r2, #0
90018510:	dc03      	bgt.n	9001851a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90018512:	9a05      	ldr	r2, [sp, #20]
90018514:	2a00      	cmp	r2, #0
90018516:	f340 8129 	ble.w	9001876c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001851a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001851c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90018520:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018524:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018526:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001852a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001852e:	2b00      	cmp	r3, #0
90018530:	dd0e      	ble.n	90018550 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018532:	1408      	asrs	r0, r1, #16
90018534:	d405      	bmi.n	90018542 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018536:	4560      	cmp	r0, ip
90018538:	da03      	bge.n	90018542 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001853a:	1410      	asrs	r0, r2, #16
9001853c:	d401      	bmi.n	90018542 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001853e:	42b8      	cmp	r0, r7
90018540:	db07      	blt.n	90018552 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90018542:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018544:	3b01      	subs	r3, #1
90018546:	3402      	adds	r4, #2
90018548:	4401      	add	r1, r0
9001854a:	9814      	ldr	r0, [sp, #80]	; 0x50
9001854c:	4402      	add	r2, r0
9001854e:	e7ee      	b.n	9001852e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
90018550:	d071      	beq.n	90018636 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90018552:	1e58      	subs	r0, r3, #1
90018554:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018556:	fb05 1500 	mla	r5, r5, r0, r1
9001855a:	142d      	asrs	r5, r5, #16
9001855c:	d45f      	bmi.n	9001861e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001855e:	4565      	cmp	r5, ip
90018560:	da5d      	bge.n	9001861e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018562:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018564:	fb05 2000 	mla	r0, r5, r0, r2
90018568:	1400      	asrs	r0, r0, #16
9001856a:	d458      	bmi.n	9001861e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001856c:	42b8      	cmp	r0, r7
9001856e:	da56      	bge.n	9001861e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
90018570:	4699      	mov	r9, r3
90018572:	46a2      	mov	sl, r4
90018574:	f8bd b008 	ldrh.w	fp, [sp, #8]
90018578:	f1b9 0f00 	cmp.w	r9, #0
9001857c:	dd57      	ble.n	9001862e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001857e:	ea4f 4c22 	mov.w	ip, r2, asr #16
90018582:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90018586:	9803      	ldr	r0, [sp, #12]
90018588:	140d      	asrs	r5, r1, #16
9001858a:	f109 39ff 	add.w	r9, r9, #4294967295
9001858e:	fb07 000c 	mla	r0, r7, ip, r0
90018592:	5d40      	ldrb	r0, [r0, r5]
90018594:	9d04      	ldr	r5, [sp, #16]
90018596:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001859a:	f8ba 5000 	ldrh.w	r5, [sl]
9001859e:	ea4f 2c20 	mov.w	ip, r0, asr #8
900185a2:	122f      	asrs	r7, r5, #8
900185a4:	ea4f 08e5 	mov.w	r8, r5, asr #3
900185a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900185ac:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900185b0:	00ed      	lsls	r5, r5, #3
900185b2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
900185b6:	fb17 f706 	smulbb	r7, r7, r6
900185ba:	b2ed      	uxtb	r5, r5
900185bc:	fb18 f806 	smulbb	r8, r8, r6
900185c0:	fb0c 7c0b 	mla	ip, ip, fp, r7
900185c4:	10c7      	asrs	r7, r0, #3
900185c6:	fb15 f506 	smulbb	r5, r5, r6
900185ca:	00c0      	lsls	r0, r0, #3
900185cc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900185d0:	fa1f fc8c 	uxth.w	ip, ip
900185d4:	b2c0      	uxtb	r0, r0
900185d6:	fb07 870b 	mla	r7, r7, fp, r8
900185da:	fb00 500b 	mla	r0, r0, fp, r5
900185de:	f10c 0501 	add.w	r5, ip, #1
900185e2:	b2bf      	uxth	r7, r7
900185e4:	b280      	uxth	r0, r0
900185e6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900185ea:	f107 0801 	add.w	r8, r7, #1
900185ee:	1c45      	adds	r5, r0, #1
900185f0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
900185f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900185f8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900185fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
900185fe:	ea4f 1858 	mov.w	r8, r8, lsr #5
90018602:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018606:	4401      	add	r1, r0
90018608:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001860c:	9814      	ldr	r0, [sp, #80]	; 0x50
9001860e:	ea45 0c0c 	orr.w	ip, r5, ip
90018612:	4402      	add	r2, r0
90018614:	ea4c 0c08 	orr.w	ip, ip, r8
90018618:	f82a cb02 	strh.w	ip, [sl], #2
9001861c:	e7ac      	b.n	90018578 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001861e:	f04f 0800 	mov.w	r8, #0
90018622:	f8bd a008 	ldrh.w	sl, [sp, #8]
90018626:	eb03 0008 	add.w	r0, r3, r8
9001862a:	2800      	cmp	r0, #0
9001862c:	dc41      	bgt.n	900186b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001862e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018632:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018636:	9b01      	ldr	r3, [sp, #4]
90018638:	2b00      	cmp	r3, #0
9001863a:	f340 8097 	ble.w	9001876c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001863e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018642:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018644:	ee30 0a04 	vadd.f32	s0, s0, s8
90018648:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001864c:	eef0 6a62 	vmov.f32	s13, s5
90018650:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018654:	ee31 1a05 	vadd.f32	s2, s2, s10
90018658:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001865c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018660:	eef0 6a43 	vmov.f32	s13, s6
90018664:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018668:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
9001866c:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018670:	ee61 7a27 	vmul.f32	s15, s2, s15
90018674:	ee77 2a62 	vsub.f32	s5, s14, s5
90018678:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001867c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018680:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018684:	ee12 2a90 	vmov	r2, s5
90018688:	eef0 2a47 	vmov.f32	s5, s14
9001868c:	fb92 f3f3 	sdiv	r3, r2, r3
90018690:	ee13 2a10 	vmov	r2, s6
90018694:	9313      	str	r3, [sp, #76]	; 0x4c
90018696:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018698:	eeb0 3a67 	vmov.f32	s6, s15
9001869c:	fb92 f3f3 	sdiv	r3, r2, r3
900186a0:	9314      	str	r3, [sp, #80]	; 0x50
900186a2:	9b01      	ldr	r3, [sp, #4]
900186a4:	9a05      	ldr	r2, [sp, #20]
900186a6:	3b01      	subs	r3, #1
900186a8:	9301      	str	r3, [sp, #4]
900186aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
900186ac:	bf08      	it	eq
900186ae:	4613      	moveq	r3, r2
900186b0:	e72c      	b.n	9001850c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900186b2:	140f      	asrs	r7, r1, #16
900186b4:	d453      	bmi.n	9001875e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900186b6:	f8de 5008 	ldr.w	r5, [lr, #8]
900186ba:	42bd      	cmp	r5, r7
900186bc:	dd4f      	ble.n	9001875e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900186be:	ea5f 4c22 	movs.w	ip, r2, asr #16
900186c2:	d44c      	bmi.n	9001875e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900186c4:	f8de 000c 	ldr.w	r0, [lr, #12]
900186c8:	4560      	cmp	r0, ip
900186ca:	dd48      	ble.n	9001875e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
900186cc:	9803      	ldr	r0, [sp, #12]
900186ce:	b22d      	sxth	r5, r5
900186d0:	fb0c 0505 	mla	r5, ip, r5, r0
900186d4:	5de8      	ldrb	r0, [r5, r7]
900186d6:	9d04      	ldr	r5, [sp, #16]
900186d8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
900186dc:	f06f 0501 	mvn.w	r5, #1
900186e0:	fb05 fb08 	mul.w	fp, r5, r8
900186e4:	ea4f 2c20 	mov.w	ip, r0, asr #8
900186e8:	f834 500b 	ldrh.w	r5, [r4, fp]
900186ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900186f0:	122f      	asrs	r7, r5, #8
900186f2:	ea4f 09e5 	mov.w	r9, r5, asr #3
900186f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900186fa:	00ed      	lsls	r5, r5, #3
900186fc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90018700:	fb17 f706 	smulbb	r7, r7, r6
90018704:	b2ed      	uxtb	r5, r5
90018706:	fb19 f906 	smulbb	r9, r9, r6
9001870a:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001870e:	10c7      	asrs	r7, r0, #3
90018710:	fb15 f506 	smulbb	r5, r5, r6
90018714:	00c0      	lsls	r0, r0, #3
90018716:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001871a:	fa1f fc8c 	uxth.w	ip, ip
9001871e:	b2c0      	uxtb	r0, r0
90018720:	fb07 970a 	mla	r7, r7, sl, r9
90018724:	fb00 500a 	mla	r0, r0, sl, r5
90018728:	f10c 0501 	add.w	r5, ip, #1
9001872c:	b2bf      	uxth	r7, r7
9001872e:	b280      	uxth	r0, r0
90018730:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90018734:	f107 0901 	add.w	r9, r7, #1
90018738:	1c45      	adds	r5, r0, #1
9001873a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001873e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90018742:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90018746:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001874a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001874e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90018752:	ea45 0c0c 	orr.w	ip, r5, ip
90018756:	ea4c 0c09 	orr.w	ip, ip, r9
9001875a:	f824 c00b 	strh.w	ip, [r4, fp]
9001875e:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018760:	f108 38ff 	add.w	r8, r8, #4294967295
90018764:	4401      	add	r1, r0
90018766:	9814      	ldr	r0, [sp, #80]	; 0x50
90018768:	4402      	add	r2, r0
9001876a:	e75c      	b.n	90018626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001876c:	b007      	add	sp, #28
9001876e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018772 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018772:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018776:	b085      	sub	sp, #20
90018778:	4693      	mov	fp, r2
9001877a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001877e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018780:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018782:	6870      	ldr	r0, [r6, #4]
90018784:	9100      	str	r1, [sp, #0]
90018786:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001878a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
9001878e:	fb00 2404 	mla	r4, r0, r4, r2
90018792:	6832      	ldr	r2, [r6, #0]
90018794:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018798:	682a      	ldr	r2, [r5, #0]
9001879a:	9201      	str	r2, [sp, #4]
9001879c:	686a      	ldr	r2, [r5, #4]
9001879e:	3204      	adds	r2, #4
900187a0:	9202      	str	r2, [sp, #8]
900187a2:	9a00      	ldr	r2, [sp, #0]
900187a4:	2a00      	cmp	r2, #0
900187a6:	dc03      	bgt.n	900187b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900187a8:	f1bb 0f00 	cmp.w	fp, #0
900187ac:	f340 80a0 	ble.w	900188f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
900187b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900187b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
900187b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
900187ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
900187bc:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
900187c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900187c4:	2b00      	cmp	r3, #0
900187c6:	dd0c      	ble.n	900187e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900187c8:	1406      	asrs	r6, r0, #16
900187ca:	d405      	bmi.n	900187d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900187cc:	454e      	cmp	r6, r9
900187ce:	da03      	bge.n	900187d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900187d0:	1416      	asrs	r6, r2, #16
900187d2:	d401      	bmi.n	900187d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900187d4:	4546      	cmp	r6, r8
900187d6:	db05      	blt.n	900187e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
900187d8:	4470      	add	r0, lr
900187da:	4462      	add	r2, ip
900187dc:	3b01      	subs	r3, #1
900187de:	3402      	adds	r4, #2
900187e0:	e7f0      	b.n	900187c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900187e2:	d00f      	beq.n	90018804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900187e4:	1e5e      	subs	r6, r3, #1
900187e6:	fb0e 0706 	mla	r7, lr, r6, r0
900187ea:	143f      	asrs	r7, r7, #16
900187ec:	d541      	bpl.n	90018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
900187ee:	eb04 0643 	add.w	r6, r4, r3, lsl #1
900187f2:	4698      	mov	r8, r3
900187f4:	9603      	str	r6, [sp, #12]
900187f6:	f1b8 0f00 	cmp.w	r8, #0
900187fa:	dc59      	bgt.n	900188b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
900187fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018800:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018804:	9b00      	ldr	r3, [sp, #0]
90018806:	2b00      	cmp	r3, #0
90018808:	dd72      	ble.n	900188f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001880a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001880e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018810:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018814:	eeb0 6a62 	vmov.f32	s12, s5
90018818:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001881c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018820:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018824:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018828:	eeb0 6a43 	vmov.f32	s12, s6
9001882c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018830:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018834:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018838:	ee61 7a27 	vmul.f32	s15, s2, s15
9001883c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018840:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018844:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018848:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001884c:	ee12 2a90 	vmov	r2, s5
90018850:	eef0 2a47 	vmov.f32	s5, s14
90018854:	fb92 fef3 	sdiv	lr, r2, r3
90018858:	ee13 2a10 	vmov	r2, s6
9001885c:	eeb0 3a67 	vmov.f32	s6, s15
90018860:	fb92 fcf3 	sdiv	ip, r2, r3
90018864:	9b00      	ldr	r3, [sp, #0]
90018866:	3b01      	subs	r3, #1
90018868:	9300      	str	r3, [sp, #0]
9001886a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001886c:	bf08      	it	eq
9001886e:	465b      	moveq	r3, fp
90018870:	e797      	b.n	900187a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90018872:	454f      	cmp	r7, r9
90018874:	dabb      	bge.n	900187ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018876:	fb0c 2606 	mla	r6, ip, r6, r2
9001887a:	1436      	asrs	r6, r6, #16
9001887c:	d4b7      	bmi.n	900187ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001887e:	4546      	cmp	r6, r8
90018880:	dab5      	bge.n	900187ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018882:	461e      	mov	r6, r3
90018884:	46a0      	mov	r8, r4
90018886:	2e00      	cmp	r6, #0
90018888:	ddb8      	ble.n	900187fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001888a:	1417      	asrs	r7, r2, #16
9001888c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018890:	9901      	ldr	r1, [sp, #4]
90018892:	ea4f 4920 	mov.w	r9, r0, asr #16
90018896:	4462      	add	r2, ip
90018898:	4470      	add	r0, lr
9001889a:	fb0a 1707 	mla	r7, sl, r7, r1
9001889e:	9902      	ldr	r1, [sp, #8]
900188a0:	3e01      	subs	r6, #1
900188a2:	f817 7009 	ldrb.w	r7, [r7, r9]
900188a6:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
900188aa:	f828 7b02 	strh.w	r7, [r8], #2
900188ae:	e7ea      	b.n	90018886 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
900188b0:	ea5f 4920 	movs.w	r9, r0, asr #16
900188b4:	d417      	bmi.n	900188e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900188b6:	68ae      	ldr	r6, [r5, #8]
900188b8:	454e      	cmp	r6, r9
900188ba:	dd14      	ble.n	900188e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900188bc:	ea5f 4a22 	movs.w	sl, r2, asr #16
900188c0:	d411      	bmi.n	900188e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900188c2:	68ef      	ldr	r7, [r5, #12]
900188c4:	4557      	cmp	r7, sl
900188c6:	dd0e      	ble.n	900188e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
900188c8:	9f01      	ldr	r7, [sp, #4]
900188ca:	b236      	sxth	r6, r6
900188cc:	f06f 0101 	mvn.w	r1, #1
900188d0:	fb0a 7606 	mla	r6, sl, r6, r7
900188d4:	9f02      	ldr	r7, [sp, #8]
900188d6:	f816 6009 	ldrb.w	r6, [r6, r9]
900188da:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
900188de:	fb01 f608 	mul.w	r6, r1, r8
900188e2:	9903      	ldr	r1, [sp, #12]
900188e4:	538f      	strh	r7, [r1, r6]
900188e6:	4470      	add	r0, lr
900188e8:	4462      	add	r2, ip
900188ea:	f108 38ff 	add.w	r8, r8, #4294967295
900188ee:	e782      	b.n	900187f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900188f0:	b005      	add	sp, #20
900188f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900188f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900188f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900188fa:	b087      	sub	sp, #28
900188fc:	9c15      	ldr	r4, [sp, #84]	; 0x54
900188fe:	9205      	str	r2, [sp, #20]
90018900:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018904:	9102      	str	r1, [sp, #8]
90018906:	9203      	str	r2, [sp, #12]
90018908:	6861      	ldr	r1, [r4, #4]
9001890a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
9001890e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
90018912:	fb01 2000 	mla	r0, r1, r0, r2
90018916:	6822      	ldr	r2, [r4, #0]
90018918:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001891c:	9200      	str	r2, [sp, #0]
9001891e:	f8dc 2000 	ldr.w	r2, [ip]
90018922:	9204      	str	r2, [sp, #16]
90018924:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018928:	3204      	adds	r2, #4
9001892a:	9201      	str	r2, [sp, #4]
9001892c:	9a03      	ldr	r2, [sp, #12]
9001892e:	43d5      	mvns	r5, r2
90018930:	b2ed      	uxtb	r5, r5
90018932:	9a02      	ldr	r2, [sp, #8]
90018934:	2a00      	cmp	r2, #0
90018936:	dc03      	bgt.n	90018940 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90018938:	9a05      	ldr	r2, [sp, #20]
9001893a:	2a00      	cmp	r2, #0
9001893c:	f340 812c 	ble.w	90018b98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018940:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018942:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90018946:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001894a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001894c:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018950:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018954:	2b00      	cmp	r3, #0
90018956:	dd10      	ble.n	9001897a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018958:	140c      	asrs	r4, r1, #16
9001895a:	d405      	bmi.n	90018968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001895c:	4574      	cmp	r4, lr
9001895e:	da03      	bge.n	90018968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018960:	1414      	asrs	r4, r2, #16
90018962:	d401      	bmi.n	90018968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018964:	42bc      	cmp	r4, r7
90018966:	db09      	blt.n	9001897c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018968:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001896a:	3b01      	subs	r3, #1
9001896c:	9800      	ldr	r0, [sp, #0]
9001896e:	4421      	add	r1, r4
90018970:	9c14      	ldr	r4, [sp, #80]	; 0x50
90018972:	3002      	adds	r0, #2
90018974:	4422      	add	r2, r4
90018976:	9000      	str	r0, [sp, #0]
90018978:	e7ec      	b.n	90018954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001897a:	d071      	beq.n	90018a60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001897c:	1e5c      	subs	r4, r3, #1
9001897e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018980:	fb06 1604 	mla	r6, r6, r4, r1
90018984:	1436      	asrs	r6, r6, #16
90018986:	d45d      	bmi.n	90018a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018988:	4576      	cmp	r6, lr
9001898a:	da5b      	bge.n	90018a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001898c:	9e14      	ldr	r6, [sp, #80]	; 0x50
9001898e:	fb06 2404 	mla	r4, r6, r4, r2
90018992:	1424      	asrs	r4, r4, #16
90018994:	d456      	bmi.n	90018a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018996:	42bc      	cmp	r4, r7
90018998:	da54      	bge.n	90018a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001899a:	4698      	mov	r8, r3
9001899c:	f8dd 9000 	ldr.w	r9, [sp]
900189a0:	f8bd a00c 	ldrh.w	sl, [sp, #12]
900189a4:	f1b8 0f00 	cmp.w	r8, #0
900189a8:	dd54      	ble.n	90018a54 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
900189aa:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
900189ae:	1414      	asrs	r4, r2, #16
900189b0:	9804      	ldr	r0, [sp, #16]
900189b2:	140e      	asrs	r6, r1, #16
900189b4:	f108 38ff 	add.w	r8, r8, #4294967295
900189b8:	fb07 0404 	mla	r4, r7, r4, r0
900189bc:	9801      	ldr	r0, [sp, #4]
900189be:	f814 e006 	ldrb.w	lr, [r4, r6]
900189c2:	f8b9 4000 	ldrh.w	r4, [r9]
900189c6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
900189ca:	1227      	asrs	r7, r4, #8
900189cc:	eb00 0b0e 	add.w	fp, r0, lr
900189d0:	f810 e00e 	ldrb.w	lr, [r0, lr]
900189d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900189d8:	9813      	ldr	r0, [sp, #76]	; 0x4c
900189da:	f89b 6002 	ldrb.w	r6, [fp, #2]
900189de:	f89b b001 	ldrb.w	fp, [fp, #1]
900189e2:	4401      	add	r1, r0
900189e4:	fb16 f60a 	smulbb	r6, r6, sl
900189e8:	9814      	ldr	r0, [sp, #80]	; 0x50
900189ea:	fb1b fb0a 	smulbb	fp, fp, sl
900189ee:	fb07 6705 	mla	r7, r7, r5, r6
900189f2:	10e6      	asrs	r6, r4, #3
900189f4:	00e4      	lsls	r4, r4, #3
900189f6:	4402      	add	r2, r0
900189f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900189fc:	b2bf      	uxth	r7, r7
900189fe:	b2e4      	uxtb	r4, r4
90018a00:	fb06 b605 	mla	r6, r6, r5, fp
90018a04:	fb14 f405 	smulbb	r4, r4, r5
90018a08:	b2b6      	uxth	r6, r6
90018a0a:	fb0e 4e0a 	mla	lr, lr, sl, r4
90018a0e:	1c7c      	adds	r4, r7, #1
90018a10:	f106 0b01 	add.w	fp, r6, #1
90018a14:	fa1f fe8e 	uxth.w	lr, lr
90018a18:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018a1c:	f10e 0401 	add.w	r4, lr, #1
90018a20:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018a24:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018a28:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90018a2c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018a30:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018a34:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018a38:	4327      	orrs	r7, r4
90018a3a:	ea47 070b 	orr.w	r7, r7, fp
90018a3e:	f829 7b02 	strh.w	r7, [r9], #2
90018a42:	e7af      	b.n	900189a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90018a44:	f04f 0e00 	mov.w	lr, #0
90018a48:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90018a4c:	eb03 040e 	add.w	r4, r3, lr
90018a50:	2c00      	cmp	r4, #0
90018a52:	dc43      	bgt.n	90018adc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018a54:	9a00      	ldr	r2, [sp, #0]
90018a56:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018a5a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018a5e:	9300      	str	r3, [sp, #0]
90018a60:	9b02      	ldr	r3, [sp, #8]
90018a62:	2b00      	cmp	r3, #0
90018a64:	f340 8098 	ble.w	90018b98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018a68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018a6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018a6e:	ee30 0a04 	vadd.f32	s0, s0, s8
90018a72:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018a76:	eef0 6a62 	vmov.f32	s13, s5
90018a7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018a7e:	ee31 1a05 	vadd.f32	s2, s2, s10
90018a82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a86:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018a8a:	eef0 6a43 	vmov.f32	s13, s6
90018a8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018a92:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90018a96:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018a9a:	ee61 7a27 	vmul.f32	s15, s2, s15
90018a9e:	ee77 2a62 	vsub.f32	s5, s14, s5
90018aa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018aa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018aaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018aae:	ee12 2a90 	vmov	r2, s5
90018ab2:	eef0 2a47 	vmov.f32	s5, s14
90018ab6:	fb92 f3f3 	sdiv	r3, r2, r3
90018aba:	ee13 2a10 	vmov	r2, s6
90018abe:	9313      	str	r3, [sp, #76]	; 0x4c
90018ac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018ac2:	eeb0 3a67 	vmov.f32	s6, s15
90018ac6:	fb92 f3f3 	sdiv	r3, r2, r3
90018aca:	9314      	str	r3, [sp, #80]	; 0x50
90018acc:	9b02      	ldr	r3, [sp, #8]
90018ace:	9a05      	ldr	r2, [sp, #20]
90018ad0:	3b01      	subs	r3, #1
90018ad2:	9302      	str	r3, [sp, #8]
90018ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018ad6:	bf08      	it	eq
90018ad8:	4613      	moveq	r3, r2
90018ada:	e72a      	b.n	90018932 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018adc:	140f      	asrs	r7, r1, #16
90018ade:	d454      	bmi.n	90018b8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018ae0:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018ae4:	42be      	cmp	r6, r7
90018ae6:	dd50      	ble.n	90018b8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018ae8:	ea5f 4822 	movs.w	r8, r2, asr #16
90018aec:	d44d      	bmi.n	90018b8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018aee:	f8dc 400c 	ldr.w	r4, [ip, #12]
90018af2:	4544      	cmp	r4, r8
90018af4:	dd49      	ble.n	90018b8a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018af6:	9c04      	ldr	r4, [sp, #16]
90018af8:	b236      	sxth	r6, r6
90018afa:	f06f 0001 	mvn.w	r0, #1
90018afe:	fb08 4606 	mla	r6, r8, r6, r4
90018b02:	9c01      	ldr	r4, [sp, #4]
90018b04:	fb00 fa0e 	mul.w	sl, r0, lr
90018b08:	9800      	ldr	r0, [sp, #0]
90018b0a:	f816 8007 	ldrb.w	r8, [r6, r7]
90018b0e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90018b12:	eb04 0b08 	add.w	fp, r4, r8
90018b16:	f830 400a 	ldrh.w	r4, [r0, sl]
90018b1a:	9801      	ldr	r0, [sp, #4]
90018b1c:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018b20:	1227      	asrs	r7, r4, #8
90018b22:	f89b b001 	ldrb.w	fp, [fp, #1]
90018b26:	fb16 f609 	smulbb	r6, r6, r9
90018b2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018b2e:	f810 8008 	ldrb.w	r8, [r0, r8]
90018b32:	fb1b fb09 	smulbb	fp, fp, r9
90018b36:	fb07 6705 	mla	r7, r7, r5, r6
90018b3a:	10e6      	asrs	r6, r4, #3
90018b3c:	00e4      	lsls	r4, r4, #3
90018b3e:	9800      	ldr	r0, [sp, #0]
90018b40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018b44:	b2bf      	uxth	r7, r7
90018b46:	b2e4      	uxtb	r4, r4
90018b48:	fb06 b605 	mla	r6, r6, r5, fp
90018b4c:	fb14 f405 	smulbb	r4, r4, r5
90018b50:	b2b6      	uxth	r6, r6
90018b52:	fb08 4809 	mla	r8, r8, r9, r4
90018b56:	1c7c      	adds	r4, r7, #1
90018b58:	f106 0b01 	add.w	fp, r6, #1
90018b5c:	fa1f f888 	uxth.w	r8, r8
90018b60:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018b64:	f108 0401 	add.w	r4, r8, #1
90018b68:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018b6c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018b70:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018b74:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018b78:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018b7c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018b80:	4327      	orrs	r7, r4
90018b82:	ea47 070b 	orr.w	r7, r7, fp
90018b86:	f820 700a 	strh.w	r7, [r0, sl]
90018b8a:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018b8c:	f10e 3eff 	add.w	lr, lr, #4294967295
90018b90:	4401      	add	r1, r0
90018b92:	9814      	ldr	r0, [sp, #80]	; 0x50
90018b94:	4402      	add	r2, r0
90018b96:	e759      	b.n	90018a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018b98:	b007      	add	sp, #28
90018b9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018ba0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018ba4:	b085      	sub	sp, #20
90018ba6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018baa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018bac:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018bae:	9203      	str	r2, [sp, #12]
90018bb0:	6870      	ldr	r0, [r6, #4]
90018bb2:	686f      	ldr	r7, [r5, #4]
90018bb4:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
90018bb8:	3704      	adds	r7, #4
90018bba:	9101      	str	r1, [sp, #4]
90018bbc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90018bc0:	fb00 2404 	mla	r4, r0, r4, r2
90018bc4:	6832      	ldr	r2, [r6, #0]
90018bc6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018bca:	682a      	ldr	r2, [r5, #0]
90018bcc:	9202      	str	r2, [sp, #8]
90018bce:	9a01      	ldr	r2, [sp, #4]
90018bd0:	2a00      	cmp	r2, #0
90018bd2:	dc03      	bgt.n	90018bdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018bd4:	9a03      	ldr	r2, [sp, #12]
90018bd6:	2a00      	cmp	r2, #0
90018bd8:	f340 80cc 	ble.w	90018d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018bdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018bde:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018be2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018be6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90018be8:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018bec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018bf0:	2b00      	cmp	r3, #0
90018bf2:	dd0d      	ble.n	90018c10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018bf4:	1406      	asrs	r6, r0, #16
90018bf6:	d405      	bmi.n	90018c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018bf8:	454e      	cmp	r6, r9
90018bfa:	da03      	bge.n	90018c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018bfc:	1416      	asrs	r6, r2, #16
90018bfe:	d401      	bmi.n	90018c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018c00:	4546      	cmp	r6, r8
90018c02:	db06      	blt.n	90018c12 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018c04:	9e12      	ldr	r6, [sp, #72]	; 0x48
90018c06:	4460      	add	r0, ip
90018c08:	3b01      	subs	r3, #1
90018c0a:	3402      	adds	r4, #2
90018c0c:	4432      	add	r2, r6
90018c0e:	e7ef      	b.n	90018bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90018c10:	d00f      	beq.n	90018c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018c12:	1e5e      	subs	r6, r3, #1
90018c14:	fb0c 0e06 	mla	lr, ip, r6, r0
90018c18:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90018c1c:	d543      	bpl.n	90018ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90018c1e:	4698      	mov	r8, r3
90018c20:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90018c24:	f1b8 0f00 	cmp.w	r8, #0
90018c28:	dc71      	bgt.n	90018d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90018c2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018c2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018c32:	9b01      	ldr	r3, [sp, #4]
90018c34:	2b00      	cmp	r3, #0
90018c36:	f340 809d 	ble.w	90018d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018c3a:	ee30 0a04 	vadd.f32	s0, s0, s8
90018c3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018c40:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018c44:	eeb0 6a62 	vmov.f32	s12, s5
90018c48:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018c4c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018c50:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018c54:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018c58:	eeb0 6a43 	vmov.f32	s12, s6
90018c5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018c60:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018c64:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018c68:	ee61 7a27 	vmul.f32	s15, s2, s15
90018c6c:	ee77 2a62 	vsub.f32	s5, s14, s5
90018c70:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018c74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018c78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018c7c:	ee12 2a90 	vmov	r2, s5
90018c80:	eef0 2a47 	vmov.f32	s5, s14
90018c84:	fb92 fcf3 	sdiv	ip, r2, r3
90018c88:	ee13 2a10 	vmov	r2, s6
90018c8c:	eeb0 3a67 	vmov.f32	s6, s15
90018c90:	fb92 f3f3 	sdiv	r3, r2, r3
90018c94:	9312      	str	r3, [sp, #72]	; 0x48
90018c96:	9b01      	ldr	r3, [sp, #4]
90018c98:	9a03      	ldr	r2, [sp, #12]
90018c9a:	3b01      	subs	r3, #1
90018c9c:	9301      	str	r3, [sp, #4]
90018c9e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018ca0:	bf08      	it	eq
90018ca2:	4613      	moveq	r3, r2
90018ca4:	e793      	b.n	90018bce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90018ca6:	45ce      	cmp	lr, r9
90018ca8:	dab9      	bge.n	90018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018caa:	9912      	ldr	r1, [sp, #72]	; 0x48
90018cac:	fb01 2606 	mla	r6, r1, r6, r2
90018cb0:	1436      	asrs	r6, r6, #16
90018cb2:	d4b4      	bmi.n	90018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018cb4:	4546      	cmp	r6, r8
90018cb6:	dab2      	bge.n	90018c1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018cb8:	4698      	mov	r8, r3
90018cba:	46a2      	mov	sl, r4
90018cbc:	f1b8 0f00 	cmp.w	r8, #0
90018cc0:	ddb3      	ble.n	90018c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018cc2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018cc6:	1416      	asrs	r6, r2, #16
90018cc8:	9902      	ldr	r1, [sp, #8]
90018cca:	ea4f 4e20 	mov.w	lr, r0, asr #16
90018cce:	f108 38ff 	add.w	r8, r8, #4294967295
90018cd2:	4460      	add	r0, ip
90018cd4:	fb09 1606 	mla	r6, r9, r6, r1
90018cd8:	4928      	ldr	r1, [pc, #160]	; (90018d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90018cda:	f816 e00e 	ldrb.w	lr, [r6, lr]
90018cde:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018ce2:	eb07 0b0e 	add.w	fp, r7, lr
90018ce6:	f89b 6001 	ldrb.w	r6, [fp, #1]
90018cea:	f89b 9002 	ldrb.w	r9, [fp, #2]
90018cee:	00f6      	lsls	r6, r6, #3
90018cf0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90018cf4:	9912      	ldr	r1, [sp, #72]	; 0x48
90018cf6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018cfa:	440a      	add	r2, r1
90018cfc:	ea49 0606 	orr.w	r6, r9, r6
90018d00:	f817 900e 	ldrb.w	r9, [r7, lr]
90018d04:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90018d08:	f82a 6b02 	strh.w	r6, [sl], #2
90018d0c:	e7d6      	b.n	90018cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90018d0e:	ea5f 4920 	movs.w	r9, r0, asr #16
90018d12:	d429      	bmi.n	90018d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018d14:	68ae      	ldr	r6, [r5, #8]
90018d16:	454e      	cmp	r6, r9
90018d18:	dd26      	ble.n	90018d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018d1a:	ea5f 4b22 	movs.w	fp, r2, asr #16
90018d1e:	d423      	bmi.n	90018d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018d20:	68e9      	ldr	r1, [r5, #12]
90018d22:	4559      	cmp	r1, fp
90018d24:	dd20      	ble.n	90018d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018d26:	fa0f fe86 	sxth.w	lr, r6
90018d2a:	9902      	ldr	r1, [sp, #8]
90018d2c:	fb0b 1e0e 	mla	lr, fp, lr, r1
90018d30:	f06f 0101 	mvn.w	r1, #1
90018d34:	f81e e009 	ldrb.w	lr, [lr, r9]
90018d38:	fb01 f908 	mul.w	r9, r1, r8
90018d3c:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
90018d40:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018d44:	eb07 060e 	add.w	r6, r7, lr
90018d48:	f896 b002 	ldrb.w	fp, [r6, #2]
90018d4c:	7876      	ldrb	r6, [r6, #1]
90018d4e:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90018d52:	00f6      	lsls	r6, r6, #3
90018d54:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018d58:	ea4b 0606 	orr.w	r6, fp, r6
90018d5c:	f817 b00e 	ldrb.w	fp, [r7, lr]
90018d60:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90018d64:	f82a 6009 	strh.w	r6, [sl, r9]
90018d68:	9912      	ldr	r1, [sp, #72]	; 0x48
90018d6a:	4460      	add	r0, ip
90018d6c:	f108 38ff 	add.w	r8, r8, #4294967295
90018d70:	440a      	add	r2, r1
90018d72:	e757      	b.n	90018c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018d74:	b005      	add	sp, #20
90018d76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018d7a:	bf00      	nop
90018d7c:	fffff800 	.word	0xfffff800

90018d80 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018d80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018d84:	b087      	sub	sp, #28
90018d86:	468b      	mov	fp, r1
90018d88:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018d8c:	9815      	ldr	r0, [sp, #84]	; 0x54
90018d8e:	9204      	str	r2, [sp, #16]
90018d90:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018d94:	6841      	ldr	r1, [r0, #4]
90018d96:	9205      	str	r2, [sp, #20]
90018d98:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018d9c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90018da0:	fb01 2404 	mla	r4, r1, r4, r2
90018da4:	6802      	ldr	r2, [r0, #0]
90018da6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018daa:	f8dc 2000 	ldr.w	r2, [ip]
90018dae:	9201      	str	r2, [sp, #4]
90018db0:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018db4:	3204      	adds	r2, #4
90018db6:	9202      	str	r2, [sp, #8]
90018db8:	f1bb 0f00 	cmp.w	fp, #0
90018dbc:	dc03      	bgt.n	90018dc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90018dbe:	9a04      	ldr	r2, [sp, #16]
90018dc0:	2a00      	cmp	r2, #0
90018dc2:	f340 8138 	ble.w	90019036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018dc6:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018dc8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018dcc:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018dd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018dd2:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
90018dd6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018dda:	2b00      	cmp	r3, #0
90018ddc:	dd0e      	ble.n	90018dfc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018dde:	1402      	asrs	r2, r0, #16
90018de0:	d405      	bmi.n	90018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018de2:	42ba      	cmp	r2, r7
90018de4:	da03      	bge.n	90018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018de6:	140a      	asrs	r2, r1, #16
90018de8:	d401      	bmi.n	90018dee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018dea:	42b2      	cmp	r2, r6
90018dec:	db07      	blt.n	90018dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018dee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018df0:	3b01      	subs	r3, #1
90018df2:	3402      	adds	r4, #2
90018df4:	4410      	add	r0, r2
90018df6:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018df8:	4411      	add	r1, r2
90018dfa:	e7ee      	b.n	90018dda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90018dfc:	d019      	beq.n	90018e32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90018dfe:	1e5a      	subs	r2, r3, #1
90018e00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018e02:	fb05 0502 	mla	r5, r5, r2, r0
90018e06:	142d      	asrs	r5, r5, #16
90018e08:	d409      	bmi.n	90018e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e0a:	42bd      	cmp	r5, r7
90018e0c:	da07      	bge.n	90018e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e0e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018e10:	fb05 1202 	mla	r2, r5, r2, r1
90018e14:	1412      	asrs	r2, r2, #16
90018e16:	d402      	bmi.n	90018e1e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018e18:	42b2      	cmp	r2, r6
90018e1a:	f2c0 80ac 	blt.w	90018f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90018e1e:	f04f 0e00 	mov.w	lr, #0
90018e22:	eb03 020e 	add.w	r2, r3, lr
90018e26:	2a00      	cmp	r2, #0
90018e28:	dc3e      	bgt.n	90018ea8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90018e2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018e2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018e32:	f1bb 0f00 	cmp.w	fp, #0
90018e36:	f340 80fe 	ble.w	90019036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018e3a:	ee30 0a04 	vadd.f32	s0, s0, s8
90018e3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018e40:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018e44:	f1bb 0b01 	subs.w	fp, fp, #1
90018e48:	eeb0 6a62 	vmov.f32	s12, s5
90018e4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018e50:	ee31 1a05 	vadd.f32	s2, s2, s10
90018e54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018e58:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90018e5c:	eeb0 6a43 	vmov.f32	s12, s6
90018e60:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018e64:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90018e68:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018e6c:	ee61 7a27 	vmul.f32	s15, s2, s15
90018e70:	ee77 2a62 	vsub.f32	s5, s14, s5
90018e74:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018e78:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018e7c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018e80:	ee12 2a90 	vmov	r2, s5
90018e84:	eef0 2a47 	vmov.f32	s5, s14
90018e88:	fb92 f3f3 	sdiv	r3, r2, r3
90018e8c:	ee13 2a10 	vmov	r2, s6
90018e90:	9313      	str	r3, [sp, #76]	; 0x4c
90018e92:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018e94:	eeb0 3a67 	vmov.f32	s6, s15
90018e98:	fb92 f3f3 	sdiv	r3, r2, r3
90018e9c:	9a04      	ldr	r2, [sp, #16]
90018e9e:	9314      	str	r3, [sp, #80]	; 0x50
90018ea0:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018ea2:	bf08      	it	eq
90018ea4:	4613      	moveq	r3, r2
90018ea6:	e787      	b.n	90018db8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90018ea8:	1406      	asrs	r6, r0, #16
90018eaa:	d45d      	bmi.n	90018f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018eac:	f8dc 5008 	ldr.w	r5, [ip, #8]
90018eb0:	42b5      	cmp	r5, r6
90018eb2:	dd59      	ble.n	90018f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018eb4:	140f      	asrs	r7, r1, #16
90018eb6:	d457      	bmi.n	90018f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018eb8:	f8dc 200c 	ldr.w	r2, [ip, #12]
90018ebc:	42ba      	cmp	r2, r7
90018ebe:	dd53      	ble.n	90018f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018ec0:	9a01      	ldr	r2, [sp, #4]
90018ec2:	b22d      	sxth	r5, r5
90018ec4:	fb07 2505 	mla	r5, r7, r5, r2
90018ec8:	5daa      	ldrb	r2, [r5, r6]
90018eca:	9d02      	ldr	r5, [sp, #8]
90018ecc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90018ed0:	0e2e      	lsrs	r6, r5, #24
90018ed2:	d049      	beq.n	90018f68 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90018ed4:	f06f 0201 	mvn.w	r2, #1
90018ed8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90018edc:	fb02 f20e 	mul.w	r2, r2, lr
90018ee0:	f834 8002 	ldrh.w	r8, [r4, r2]
90018ee4:	9203      	str	r2, [sp, #12]
90018ee6:	9a05      	ldr	r2, [sp, #20]
90018ee8:	ea4f 2728 	mov.w	r7, r8, asr #8
90018eec:	4356      	muls	r6, r2
90018eee:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018ef2:	1c72      	adds	r2, r6, #1
90018ef4:	eb02 2226 	add.w	r2, r2, r6, asr #8
90018ef8:	f3c5 4607 	ubfx	r6, r5, #16, #8
90018efc:	b2ed      	uxtb	r5, r5
90018efe:	1212      	asrs	r2, r2, #8
90018f00:	fa1f f982 	uxth.w	r9, r2
90018f04:	43d2      	mvns	r2, r2
90018f06:	fb16 f609 	smulbb	r6, r6, r9
90018f0a:	b2d2      	uxtb	r2, r2
90018f0c:	fb15 f509 	smulbb	r5, r5, r9
90018f10:	fb07 6702 	mla	r7, r7, r2, r6
90018f14:	ea4f 06e8 	mov.w	r6, r8, asr #3
90018f18:	fb1a fa09 	smulbb	sl, sl, r9
90018f1c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90018f20:	b2bf      	uxth	r7, r7
90018f22:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018f26:	fa5f f888 	uxtb.w	r8, r8
90018f2a:	fb06 a602 	mla	r6, r6, r2, sl
90018f2e:	fb08 5502 	mla	r5, r8, r2, r5
90018f32:	1c7a      	adds	r2, r7, #1
90018f34:	b2b6      	uxth	r6, r6
90018f36:	b2ad      	uxth	r5, r5
90018f38:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90018f3c:	9a03      	ldr	r2, [sp, #12]
90018f3e:	f105 0a01 	add.w	sl, r5, #1
90018f42:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018f46:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90018f4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90018f4e:	ea4a 0707 	orr.w	r7, sl, r7
90018f52:	f106 0a01 	add.w	sl, r6, #1
90018f56:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90018f5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90018f5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90018f62:	ea47 070a 	orr.w	r7, r7, sl
90018f66:	52a7      	strh	r7, [r4, r2]
90018f68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018f6a:	f10e 3eff 	add.w	lr, lr, #4294967295
90018f6e:	4410      	add	r0, r2
90018f70:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018f72:	4411      	add	r1, r2
90018f74:	e755      	b.n	90018e22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
90018f76:	f04f 0800 	mov.w	r8, #0
90018f7a:	eba3 0208 	sub.w	r2, r3, r8
90018f7e:	2a00      	cmp	r2, #0
90018f80:	f77f af53 	ble.w	90018e2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
90018f84:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
90018f88:	140a      	asrs	r2, r1, #16
90018f8a:	9f01      	ldr	r7, [sp, #4]
90018f8c:	1405      	asrs	r5, r0, #16
90018f8e:	fb06 7202 	mla	r2, r6, r2, r7
90018f92:	5d52      	ldrb	r2, [r2, r5]
90018f94:	9d02      	ldr	r5, [sp, #8]
90018f96:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90018f9a:	0e2e      	lsrs	r6, r5, #24
90018f9c:	d044      	beq.n	90019028 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
90018f9e:	9a05      	ldr	r2, [sp, #20]
90018fa0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90018fa4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90018fa8:	4356      	muls	r6, r2
90018faa:	ea4f 272e 	mov.w	r7, lr, asr #8
90018fae:	1c72      	adds	r2, r6, #1
90018fb0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018fb4:	eb02 2226 	add.w	r2, r2, r6, asr #8
90018fb8:	f3c5 4607 	ubfx	r6, r5, #16, #8
90018fbc:	b2ed      	uxtb	r5, r5
90018fbe:	1212      	asrs	r2, r2, #8
90018fc0:	fa1f f982 	uxth.w	r9, r2
90018fc4:	43d2      	mvns	r2, r2
90018fc6:	fb16 f609 	smulbb	r6, r6, r9
90018fca:	b2d2      	uxtb	r2, r2
90018fcc:	fb15 f509 	smulbb	r5, r5, r9
90018fd0:	fb07 6702 	mla	r7, r7, r2, r6
90018fd4:	ea4f 06ee 	mov.w	r6, lr, asr #3
90018fd8:	fb1a fa09 	smulbb	sl, sl, r9
90018fdc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90018fe0:	b2bf      	uxth	r7, r7
90018fe2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018fe6:	fa5f fe8e 	uxtb.w	lr, lr
90018fea:	fb06 a602 	mla	r6, r6, r2, sl
90018fee:	fb0e 5502 	mla	r5, lr, r2, r5
90018ff2:	1c7a      	adds	r2, r7, #1
90018ff4:	b2b6      	uxth	r6, r6
90018ff6:	b2ad      	uxth	r5, r5
90018ff8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
90018ffc:	f105 0a01 	add.w	sl, r5, #1
90019000:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90019004:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019008:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001900c:	ea4a 0707 	orr.w	r7, sl, r7
90019010:	f106 0a01 	add.w	sl, r6, #1
90019014:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019018:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001901c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019020:	ea47 070a 	orr.w	r7, r7, sl
90019024:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019028:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001902a:	f108 0801 	add.w	r8, r8, #1
9001902e:	4410      	add	r0, r2
90019030:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019032:	4411      	add	r1, r2
90019034:	e7a1      	b.n	90018f7a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
90019036:	b007      	add	sp, #28
90019038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001903c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001903c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019040:	b085      	sub	sp, #20
90019042:	468b      	mov	fp, r1
90019044:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019048:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001904a:	9203      	str	r2, [sp, #12]
9001904c:	6841      	ldr	r1, [r0, #4]
9001904e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90019052:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019056:	fb01 2404 	mla	r4, r1, r4, r2
9001905a:	6802      	ldr	r2, [r0, #0]
9001905c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019060:	f8de 2000 	ldr.w	r2, [lr]
90019064:	9200      	str	r2, [sp, #0]
90019066:	f8de 2004 	ldr.w	r2, [lr, #4]
9001906a:	3204      	adds	r2, #4
9001906c:	9201      	str	r2, [sp, #4]
9001906e:	f1bb 0f00 	cmp.w	fp, #0
90019072:	dc03      	bgt.n	9001907c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019074:	9a03      	ldr	r2, [sp, #12]
90019076:	2a00      	cmp	r2, #0
90019078:	f340 8153 	ble.w	90019322 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001907c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001907e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019082:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019086:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019088:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001908c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019090:	2b00      	cmp	r3, #0
90019092:	dd0e      	ble.n	900190b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019094:	1408      	asrs	r0, r1, #16
90019096:	d405      	bmi.n	900190a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019098:	42b8      	cmp	r0, r7
9001909a:	da03      	bge.n	900190a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001909c:	1410      	asrs	r0, r2, #16
9001909e:	d401      	bmi.n	900190a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900190a0:	42b0      	cmp	r0, r6
900190a2:	db07      	blt.n	900190b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900190a4:	9811      	ldr	r0, [sp, #68]	; 0x44
900190a6:	3b01      	subs	r3, #1
900190a8:	3402      	adds	r4, #2
900190aa:	4401      	add	r1, r0
900190ac:	9812      	ldr	r0, [sp, #72]	; 0x48
900190ae:	4402      	add	r2, r0
900190b0:	e7ee      	b.n	90019090 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900190b2:	d017      	beq.n	900190e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900190b4:	1e58      	subs	r0, r3, #1
900190b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900190b8:	fb05 1500 	mla	r5, r5, r0, r1
900190bc:	142d      	asrs	r5, r5, #16
900190be:	d409      	bmi.n	900190d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900190c0:	42bd      	cmp	r5, r7
900190c2:	da07      	bge.n	900190d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900190c4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900190c6:	fb05 2000 	mla	r0, r5, r0, r2
900190ca:	1400      	asrs	r0, r0, #16
900190cc:	d402      	bmi.n	900190d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900190ce:	42b0      	cmp	r0, r6
900190d0:	f2c0 80bc 	blt.w	9001924c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
900190d4:	2600      	movs	r6, #0
900190d6:	1998      	adds	r0, r3, r6
900190d8:	2800      	cmp	r0, #0
900190da:	dc3e      	bgt.n	9001915a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
900190dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900190e0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900190e4:	f1bb 0f00 	cmp.w	fp, #0
900190e8:	f340 811b 	ble.w	90019322 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
900190ec:	ee30 0a04 	vadd.f32	s0, s0, s8
900190f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900190f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900190f6:	f1bb 0b01 	subs.w	fp, fp, #1
900190fa:	eeb0 6a62 	vmov.f32	s12, s5
900190fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019102:	ee31 1a05 	vadd.f32	s2, s2, s10
90019106:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001910a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001910e:	eeb0 6a43 	vmov.f32	s12, s6
90019112:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019116:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001911a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001911e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019122:	ee77 2a62 	vsub.f32	s5, s14, s5
90019126:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001912a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001912e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019132:	ee12 2a90 	vmov	r2, s5
90019136:	eef0 2a47 	vmov.f32	s5, s14
9001913a:	fb92 f3f3 	sdiv	r3, r2, r3
9001913e:	ee13 2a10 	vmov	r2, s6
90019142:	9311      	str	r3, [sp, #68]	; 0x44
90019144:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019146:	eeb0 3a67 	vmov.f32	s6, s15
9001914a:	fb92 f3f3 	sdiv	r3, r2, r3
9001914e:	9a03      	ldr	r2, [sp, #12]
90019150:	9312      	str	r3, [sp, #72]	; 0x48
90019152:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019154:	bf08      	it	eq
90019156:	4613      	moveq	r3, r2
90019158:	e789      	b.n	9001906e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001915a:	140f      	asrs	r7, r1, #16
9001915c:	d426      	bmi.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001915e:	f8de 5008 	ldr.w	r5, [lr, #8]
90019162:	42bd      	cmp	r5, r7
90019164:	dd22      	ble.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019166:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001916a:	d41f      	bmi.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001916c:	f8de 000c 	ldr.w	r0, [lr, #12]
90019170:	4560      	cmp	r0, ip
90019172:	dd1b      	ble.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
90019174:	9800      	ldr	r0, [sp, #0]
90019176:	b22d      	sxth	r5, r5
90019178:	fb0c 0505 	mla	r5, ip, r5, r0
9001917c:	5de8      	ldrb	r0, [r5, r7]
9001917e:	9d01      	ldr	r5, [sp, #4]
90019180:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
90019184:	0e07      	lsrs	r7, r0, #24
90019186:	2fff      	cmp	r7, #255	; 0xff
90019188:	d116      	bne.n	900191b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001918a:	f06f 0501 	mvn.w	r5, #1
9001918e:	fb05 f706 	mul.w	r7, r5, r6
90019192:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
90019196:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001919a:	0945      	lsrs	r5, r0, #5
9001919c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900191a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900191a4:	ea4c 0505 	orr.w	r5, ip, r5
900191a8:	4305      	orrs	r5, r0
900191aa:	53e5      	strh	r5, [r4, r7]
900191ac:	9811      	ldr	r0, [sp, #68]	; 0x44
900191ae:	3e01      	subs	r6, #1
900191b0:	4401      	add	r1, r0
900191b2:	9812      	ldr	r0, [sp, #72]	; 0x48
900191b4:	4402      	add	r2, r0
900191b6:	e78e      	b.n	900190d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900191b8:	b2fd      	uxtb	r5, r7
900191ba:	2f00      	cmp	r7, #0
900191bc:	d0f6      	beq.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900191be:	f06f 0701 	mvn.w	r7, #1
900191c2:	fa1f f985 	uxth.w	r9, r5
900191c6:	43ed      	mvns	r5, r5
900191c8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
900191cc:	4377      	muls	r7, r6
900191ce:	fb1a fa09 	smulbb	sl, sl, r9
900191d2:	b2ed      	uxtb	r5, r5
900191d4:	f834 8007 	ldrh.w	r8, [r4, r7]
900191d8:	9702      	str	r7, [sp, #8]
900191da:	f3c0 4707 	ubfx	r7, r0, #16, #8
900191de:	ea4f 2c28 	mov.w	ip, r8, asr #8
900191e2:	fb17 f709 	smulbb	r7, r7, r9
900191e6:	b2c0      	uxtb	r0, r0
900191e8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900191ec:	fb10 f009 	smulbb	r0, r0, r9
900191f0:	fb0c 7c05 	mla	ip, ip, r5, r7
900191f4:	ea4f 07e8 	mov.w	r7, r8, asr #3
900191f8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
900191fc:	fa1f fc8c 	uxth.w	ip, ip
90019200:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019204:	fa5f f888 	uxtb.w	r8, r8
90019208:	fb07 a705 	mla	r7, r7, r5, sl
9001920c:	fb08 0005 	mla	r0, r8, r5, r0
90019210:	f10c 0501 	add.w	r5, ip, #1
90019214:	b2bf      	uxth	r7, r7
90019216:	b280      	uxth	r0, r0
90019218:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001921c:	f100 0a01 	add.w	sl, r0, #1
90019220:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019224:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90019228:	9802      	ldr	r0, [sp, #8]
9001922a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001922e:	ea4a 0c0c 	orr.w	ip, sl, ip
90019232:	f107 0a01 	add.w	sl, r7, #1
90019236:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001923a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001923e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019242:	ea4c 0c0a 	orr.w	ip, ip, sl
90019246:	f824 c000 	strh.w	ip, [r4, r0]
9001924a:	e7af      	b.n	900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001924c:	f04f 0800 	mov.w	r8, #0
90019250:	eba3 0008 	sub.w	r0, r3, r8
90019254:	2800      	cmp	r0, #0
90019256:	f77f af41 	ble.w	900190dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001925a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001925e:	1410      	asrs	r0, r2, #16
90019260:	9f00      	ldr	r7, [sp, #0]
90019262:	140d      	asrs	r5, r1, #16
90019264:	fb06 7000 	mla	r0, r6, r0, r7
90019268:	5d40      	ldrb	r0, [r0, r5]
9001926a:	9d01      	ldr	r5, [sp, #4]
9001926c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
90019270:	0e2e      	lsrs	r6, r5, #24
90019272:	2eff      	cmp	r6, #255	; 0xff
90019274:	d112      	bne.n	9001929c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
90019276:	482c      	ldr	r0, [pc, #176]	; (90019328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
90019278:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001927c:	0968      	lsrs	r0, r5, #5
9001927e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90019282:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90019286:	4330      	orrs	r0, r6
90019288:	4328      	orrs	r0, r5
9001928a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001928e:	9811      	ldr	r0, [sp, #68]	; 0x44
90019290:	f108 0801 	add.w	r8, r8, #1
90019294:	4401      	add	r1, r0
90019296:	9812      	ldr	r0, [sp, #72]	; 0x48
90019298:	4402      	add	r2, r0
9001929a:	e7d9      	b.n	90019250 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001929c:	b2f0      	uxtb	r0, r6
9001929e:	2e00      	cmp	r6, #0
900192a0:	d0f5      	beq.n	9001928e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
900192a2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
900192a6:	fa1f f980 	uxth.w	r9, r0
900192aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
900192ae:	43c0      	mvns	r0, r0
900192b0:	ea4f 272c 	mov.w	r7, ip, asr #8
900192b4:	f3c5 2a07 	ubfx	sl, r5, #8, #8
900192b8:	fb16 f609 	smulbb	r6, r6, r9
900192bc:	b2c0      	uxtb	r0, r0
900192be:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900192c2:	b2ed      	uxtb	r5, r5
900192c4:	fb1a fa09 	smulbb	sl, sl, r9
900192c8:	fb07 6700 	mla	r7, r7, r0, r6
900192cc:	ea4f 06ec 	mov.w	r6, ip, asr #3
900192d0:	fb15 f509 	smulbb	r5, r5, r9
900192d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
900192d8:	b2bf      	uxth	r7, r7
900192da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900192de:	fa5f fc8c 	uxtb.w	ip, ip
900192e2:	fb06 a600 	mla	r6, r6, r0, sl
900192e6:	fb0c 5500 	mla	r5, ip, r0, r5
900192ea:	1c78      	adds	r0, r7, #1
900192ec:	b2b6      	uxth	r6, r6
900192ee:	b2ad      	uxth	r5, r5
900192f0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
900192f4:	f105 0a01 	add.w	sl, r5, #1
900192f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900192fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019300:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019304:	ea4a 0707 	orr.w	r7, sl, r7
90019308:	f106 0a01 	add.w	sl, r6, #1
9001930c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019310:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019314:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019318:	ea47 070a 	orr.w	r7, r7, sl
9001931c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019320:	e7b5      	b.n	9001928e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019322:	b005      	add	sp, #20
90019324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019328:	fffff800 	.word	0xfffff800

9001932c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001932c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019330:	b087      	sub	sp, #28
90019332:	468b      	mov	fp, r1
90019334:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019338:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001933a:	9204      	str	r2, [sp, #16]
9001933c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019340:	6861      	ldr	r1, [r4, #4]
90019342:	9205      	str	r2, [sp, #20]
90019344:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
90019348:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
9001934c:	fb01 2000 	mla	r0, r1, r0, r2
90019350:	6822      	ldr	r2, [r4, #0]
90019352:	eb02 0040 	add.w	r0, r2, r0, lsl #1
90019356:	f8de 2000 	ldr.w	r2, [lr]
9001935a:	9201      	str	r2, [sp, #4]
9001935c:	f8de 2004 	ldr.w	r2, [lr, #4]
90019360:	9202      	str	r2, [sp, #8]
90019362:	f1bb 0f00 	cmp.w	fp, #0
90019366:	dc03      	bgt.n	90019370 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
90019368:	9a04      	ldr	r2, [sp, #16]
9001936a:	2a00      	cmp	r2, #0
9001936c:	f340 8142 	ble.w	900195f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019370:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019372:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019376:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001937a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001937c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
90019380:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019384:	2b00      	cmp	r3, #0
90019386:	dd0e      	ble.n	900193a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90019388:	140c      	asrs	r4, r1, #16
9001938a:	d405      	bmi.n	90019398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001938c:	42bc      	cmp	r4, r7
9001938e:	da03      	bge.n	90019398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019390:	1414      	asrs	r4, r2, #16
90019392:	d401      	bmi.n	90019398 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019394:	42b4      	cmp	r4, r6
90019396:	db07      	blt.n	900193a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019398:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001939a:	3b01      	subs	r3, #1
9001939c:	3002      	adds	r0, #2
9001939e:	4421      	add	r1, r4
900193a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900193a2:	4422      	add	r2, r4
900193a4:	e7ee      	b.n	90019384 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900193a6:	d019      	beq.n	900193dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
900193a8:	1e5c      	subs	r4, r3, #1
900193aa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900193ac:	fb05 1504 	mla	r5, r5, r4, r1
900193b0:	142d      	asrs	r5, r5, #16
900193b2:	d409      	bmi.n	900193c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900193b4:	42bd      	cmp	r5, r7
900193b6:	da07      	bge.n	900193c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900193b8:	9d14      	ldr	r5, [sp, #80]	; 0x50
900193ba:	fb05 2404 	mla	r4, r5, r4, r2
900193be:	1424      	asrs	r4, r4, #16
900193c0:	d402      	bmi.n	900193c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
900193c2:	42b4      	cmp	r4, r6
900193c4:	f2c0 80b1 	blt.w	9001952a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
900193c8:	f04f 0800 	mov.w	r8, #0
900193cc:	eb03 0408 	add.w	r4, r3, r8
900193d0:	2c00      	cmp	r4, #0
900193d2:	dc3e      	bgt.n	90019452 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
900193d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900193d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900193dc:	f1bb 0f00 	cmp.w	fp, #0
900193e0:	f340 8108 	ble.w	900195f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
900193e4:	ee30 0a04 	vadd.f32	s0, s0, s8
900193e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
900193ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
900193ee:	f1bb 0b01 	subs.w	fp, fp, #1
900193f2:	eeb0 6a62 	vmov.f32	s12, s5
900193f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
900193fa:	ee31 1a05 	vadd.f32	s2, s2, s10
900193fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019402:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019406:	eeb0 6a43 	vmov.f32	s12, s6
9001940a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001940e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019412:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019416:	ee61 7a27 	vmul.f32	s15, s2, s15
9001941a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001941e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019422:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019426:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001942a:	ee12 2a90 	vmov	r2, s5
9001942e:	eef0 2a47 	vmov.f32	s5, s14
90019432:	fb92 f3f3 	sdiv	r3, r2, r3
90019436:	ee13 2a10 	vmov	r2, s6
9001943a:	9313      	str	r3, [sp, #76]	; 0x4c
9001943c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001943e:	eeb0 3a67 	vmov.f32	s6, s15
90019442:	fb92 f3f3 	sdiv	r3, r2, r3
90019446:	9a04      	ldr	r2, [sp, #16]
90019448:	9314      	str	r3, [sp, #80]	; 0x50
9001944a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001944c:	bf08      	it	eq
9001944e:	4613      	moveq	r3, r2
90019450:	e787      	b.n	90019362 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
90019452:	140e      	asrs	r6, r1, #16
90019454:	d462      	bmi.n	9001951c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019456:	f8de 5008 	ldr.w	r5, [lr, #8]
9001945a:	42b5      	cmp	r5, r6
9001945c:	dd5e      	ble.n	9001951c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001945e:	1417      	asrs	r7, r2, #16
90019460:	d45c      	bmi.n	9001951c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019462:	f8de 400c 	ldr.w	r4, [lr, #12]
90019466:	42bc      	cmp	r4, r7
90019468:	dd58      	ble.n	9001951c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001946a:	b22d      	sxth	r5, r5
9001946c:	9c02      	ldr	r4, [sp, #8]
9001946e:	fb07 6505 	mla	r5, r7, r5, r6
90019472:	5d66      	ldrb	r6, [r4, r5]
90019474:	2e00      	cmp	r6, #0
90019476:	d051      	beq.n	9001951c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
90019478:	9c01      	ldr	r4, [sp, #4]
9001947a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001947e:	f06f 0401 	mvn.w	r4, #1
90019482:	fb04 f408 	mul.w	r4, r4, r8
90019486:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001948a:	5b05      	ldrh	r5, [r0, r4]
9001948c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019490:	9403      	str	r4, [sp, #12]
90019492:	9c05      	ldr	r4, [sp, #20]
90019494:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019498:	4366      	muls	r6, r4
9001949a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001949e:	1c74      	adds	r4, r6, #1
900194a0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
900194a4:	122e      	asrs	r6, r5, #8
900194a6:	1224      	asrs	r4, r4, #8
900194a8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900194ac:	00ed      	lsls	r5, r5, #3
900194ae:	b2a7      	uxth	r7, r4
900194b0:	43e4      	mvns	r4, r4
900194b2:	b2ed      	uxtb	r5, r5
900194b4:	b2e4      	uxtb	r4, r4
900194b6:	fb16 f604 	smulbb	r6, r6, r4
900194ba:	fb15 f504 	smulbb	r5, r5, r4
900194be:	fb0c 6c07 	mla	ip, ip, r7, r6
900194c2:	ea4f 06e9 	mov.w	r6, r9, asr #3
900194c6:	fb1a fa04 	smulbb	sl, sl, r4
900194ca:	ea4f 09c9 	mov.w	r9, r9, lsl #3
900194ce:	fa1f fc8c 	uxth.w	ip, ip
900194d2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900194d6:	fa5f f989 	uxtb.w	r9, r9
900194da:	fb06 a607 	mla	r6, r6, r7, sl
900194de:	f10c 0401 	add.w	r4, ip, #1
900194e2:	fb09 5507 	mla	r5, r9, r7, r5
900194e6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
900194ea:	9c03      	ldr	r4, [sp, #12]
900194ec:	b2ad      	uxth	r5, r5
900194ee:	b2b6      	uxth	r6, r6
900194f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900194f4:	f105 0a01 	add.w	sl, r5, #1
900194f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900194fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019500:	ea4a 0c0c 	orr.w	ip, sl, ip
90019504:	f106 0a01 	add.w	sl, r6, #1
90019508:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001950c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019510:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019514:	ea4c 0c0a 	orr.w	ip, ip, sl
90019518:	f820 c004 	strh.w	ip, [r0, r4]
9001951c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001951e:	f108 38ff 	add.w	r8, r8, #4294967295
90019522:	4421      	add	r1, r4
90019524:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019526:	4422      	add	r2, r4
90019528:	e750      	b.n	900193cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001952a:	f04f 0900 	mov.w	r9, #0
9001952e:	eba3 0409 	sub.w	r4, r3, r9
90019532:	2c00      	cmp	r4, #0
90019534:	f77f af4e 	ble.w	900193d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019538:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001953c:	140d      	asrs	r5, r1, #16
9001953e:	1414      	asrs	r4, r2, #16
90019540:	fb06 5404 	mla	r4, r6, r4, r5
90019544:	9d02      	ldr	r5, [sp, #8]
90019546:	5d2e      	ldrb	r6, [r5, r4]
90019548:	2e00      	cmp	r6, #0
9001954a:	d04c      	beq.n	900195e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001954c:	9d01      	ldr	r5, [sp, #4]
9001954e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
90019552:	9c05      	ldr	r4, [sp, #20]
90019554:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019558:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001955c:	4366      	muls	r6, r4
9001955e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019562:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019566:	1c74      	adds	r4, r6, #1
90019568:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001956c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019570:	122e      	asrs	r6, r5, #8
90019572:	1224      	asrs	r4, r4, #8
90019574:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019578:	00ed      	lsls	r5, r5, #3
9001957a:	b2a7      	uxth	r7, r4
9001957c:	43e4      	mvns	r4, r4
9001957e:	b2ed      	uxtb	r5, r5
90019580:	b2e4      	uxtb	r4, r4
90019582:	fb16 f604 	smulbb	r6, r6, r4
90019586:	fb15 f504 	smulbb	r5, r5, r4
9001958a:	fb0c 6c07 	mla	ip, ip, r7, r6
9001958e:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019592:	fb1a fa04 	smulbb	sl, sl, r4
90019596:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001959a:	fa1f fc8c 	uxth.w	ip, ip
9001959e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900195a2:	fa5f f888 	uxtb.w	r8, r8
900195a6:	fb06 a607 	mla	r6, r6, r7, sl
900195aa:	f10c 0401 	add.w	r4, ip, #1
900195ae:	fb08 5507 	mla	r5, r8, r7, r5
900195b2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
900195b6:	b2ad      	uxth	r5, r5
900195b8:	b2b6      	uxth	r6, r6
900195ba:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900195be:	f105 0a01 	add.w	sl, r5, #1
900195c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900195c6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900195ca:	ea4a 0c0c 	orr.w	ip, sl, ip
900195ce:	f106 0a01 	add.w	sl, r6, #1
900195d2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900195d6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900195da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900195de:	ea4c 0c0a 	orr.w	ip, ip, sl
900195e2:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
900195e6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900195e8:	f109 0901 	add.w	r9, r9, #1
900195ec:	4421      	add	r1, r4
900195ee:	9c14      	ldr	r4, [sp, #80]	; 0x50
900195f0:	4422      	add	r2, r4
900195f2:	e79c      	b.n	9001952e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
900195f4:	b007      	add	sp, #28
900195f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900195fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900195fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900195fe:	b085      	sub	sp, #20
90019600:	468b      	mov	fp, r1
90019602:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019606:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019608:	9203      	str	r2, [sp, #12]
9001960a:	6861      	ldr	r1, [r4, #4]
9001960c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90019610:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
90019614:	fb01 2000 	mla	r0, r1, r0, r2
90019618:	6822      	ldr	r2, [r4, #0]
9001961a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001961e:	f8d8 2000 	ldr.w	r2, [r8]
90019622:	9200      	str	r2, [sp, #0]
90019624:	f8d8 2004 	ldr.w	r2, [r8, #4]
90019628:	9201      	str	r2, [sp, #4]
9001962a:	f1bb 0f00 	cmp.w	fp, #0
9001962e:	dc03      	bgt.n	90019638 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019630:	9a03      	ldr	r2, [sp, #12]
90019632:	2a00      	cmp	r2, #0
90019634:	f340 8146 	ble.w	900198c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019638:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001963a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001963e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019642:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019644:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
90019648:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001964c:	2b00      	cmp	r3, #0
9001964e:	dd0e      	ble.n	9001966e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019650:	140c      	asrs	r4, r1, #16
90019652:	d405      	bmi.n	90019660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019654:	42bc      	cmp	r4, r7
90019656:	da03      	bge.n	90019660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019658:	1414      	asrs	r4, r2, #16
9001965a:	d401      	bmi.n	90019660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001965c:	42b4      	cmp	r4, r6
9001965e:	db07      	blt.n	90019670 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019660:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019662:	3b01      	subs	r3, #1
90019664:	3002      	adds	r0, #2
90019666:	4421      	add	r1, r4
90019668:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001966a:	4422      	add	r2, r4
9001966c:	e7ee      	b.n	9001964c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001966e:	d017      	beq.n	900196a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019670:	1e5c      	subs	r4, r3, #1
90019672:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019674:	fb05 1504 	mla	r5, r5, r4, r1
90019678:	142d      	asrs	r5, r5, #16
9001967a:	d409      	bmi.n	90019690 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001967c:	42bd      	cmp	r5, r7
9001967e:	da07      	bge.n	90019690 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019680:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019682:	fb05 2404 	mla	r4, r5, r4, r2
90019686:	1424      	asrs	r4, r4, #16
90019688:	d402      	bmi.n	90019690 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001968a:	42b4      	cmp	r4, r6
9001968c:	f2c0 80b3 	blt.w	900197f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90019690:	2600      	movs	r6, #0
90019692:	199c      	adds	r4, r3, r6
90019694:	2c00      	cmp	r4, #0
90019696:	dc3e      	bgt.n	90019716 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019698:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001969c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
900196a0:	f1bb 0f00 	cmp.w	fp, #0
900196a4:	f340 810e 	ble.w	900198c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900196a8:	ee30 0a04 	vadd.f32	s0, s0, s8
900196ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900196ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
900196b2:	f1bb 0b01 	subs.w	fp, fp, #1
900196b6:	eeb0 6a62 	vmov.f32	s12, s5
900196ba:	eec6 7a80 	vdiv.f32	s15, s13, s0
900196be:	ee31 1a05 	vadd.f32	s2, s2, s10
900196c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900196c6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
900196ca:	eeb0 6a43 	vmov.f32	s12, s6
900196ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900196d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900196d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900196da:	ee61 7a27 	vmul.f32	s15, s2, s15
900196de:	ee77 2a62 	vsub.f32	s5, s14, s5
900196e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900196e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900196ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900196ee:	ee12 2a90 	vmov	r2, s5
900196f2:	eef0 2a47 	vmov.f32	s5, s14
900196f6:	fb92 f3f3 	sdiv	r3, r2, r3
900196fa:	ee13 2a10 	vmov	r2, s6
900196fe:	9311      	str	r3, [sp, #68]	; 0x44
90019700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019702:	eeb0 3a67 	vmov.f32	s6, s15
90019706:	fb92 f3f3 	sdiv	r3, r2, r3
9001970a:	9a03      	ldr	r2, [sp, #12]
9001970c:	9312      	str	r3, [sp, #72]	; 0x48
9001970e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019710:	bf08      	it	eq
90019712:	4613      	moveq	r3, r2
90019714:	e789      	b.n	9001962a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019716:	140f      	asrs	r7, r1, #16
90019718:	d418      	bmi.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001971a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001971e:	42bd      	cmp	r5, r7
90019720:	dd14      	ble.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019722:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019726:	d411      	bmi.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019728:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001972c:	4564      	cmp	r4, ip
9001972e:	dd0d      	ble.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019730:	b22d      	sxth	r5, r5
90019732:	9c01      	ldr	r4, [sp, #4]
90019734:	fb0c 7505 	mla	r5, ip, r5, r7
90019738:	5d64      	ldrb	r4, [r4, r5]
9001973a:	2cff      	cmp	r4, #255	; 0xff
9001973c:	d10c      	bne.n	90019758 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001973e:	9c00      	ldr	r4, [sp, #0]
90019740:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
90019744:	f06f 0401 	mvn.w	r4, #1
90019748:	4374      	muls	r4, r6
9001974a:	5305      	strh	r5, [r0, r4]
9001974c:	9c11      	ldr	r4, [sp, #68]	; 0x44
9001974e:	3e01      	subs	r6, #1
90019750:	4421      	add	r1, r4
90019752:	9c12      	ldr	r4, [sp, #72]	; 0x48
90019754:	4422      	add	r2, r4
90019756:	e79c      	b.n	90019692 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019758:	2c00      	cmp	r4, #0
9001975a:	d0f7      	beq.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001975c:	9f00      	ldr	r7, [sp, #0]
9001975e:	fa1f fc84 	uxth.w	ip, r4
90019762:	43e4      	mvns	r4, r4
90019764:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
90019768:	f06f 0501 	mvn.w	r5, #1
9001976c:	b2e4      	uxtb	r4, r4
9001976e:	4375      	muls	r5, r6
90019770:	ea4f 2e29 	mov.w	lr, r9, asr #8
90019774:	9502      	str	r5, [sp, #8]
90019776:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001977a:	5b45      	ldrh	r5, [r0, r5]
9001977c:	122f      	asrs	r7, r5, #8
9001977e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019782:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019786:	00ed      	lsls	r5, r5, #3
90019788:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001978c:	fb17 f704 	smulbb	r7, r7, r4
90019790:	b2ed      	uxtb	r5, r5
90019792:	fb1a fa04 	smulbb	sl, sl, r4
90019796:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001979a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001979e:	fb15 f504 	smulbb	r5, r5, r4
900197a2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
900197a6:	fa1f fe8e 	uxth.w	lr, lr
900197aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900197ae:	fa5f f989 	uxtb.w	r9, r9
900197b2:	fb07 a70c 	mla	r7, r7, ip, sl
900197b6:	f10e 0401 	add.w	r4, lr, #1
900197ba:	fb09 550c 	mla	r5, r9, ip, r5
900197be:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
900197c2:	9c02      	ldr	r4, [sp, #8]
900197c4:	b2ad      	uxth	r5, r5
900197c6:	b2bf      	uxth	r7, r7
900197c8:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
900197cc:	f105 0a01 	add.w	sl, r5, #1
900197d0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900197d4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900197d8:	ea4a 0e0e 	orr.w	lr, sl, lr
900197dc:	f107 0a01 	add.w	sl, r7, #1
900197e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
900197e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900197e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900197ec:	ea4e 0e0a 	orr.w	lr, lr, sl
900197f0:	f820 e004 	strh.w	lr, [r0, r4]
900197f4:	e7aa      	b.n	9001974c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900197f6:	f04f 0900 	mov.w	r9, #0
900197fa:	eba3 0409 	sub.w	r4, r3, r9
900197fe:	2c00      	cmp	r4, #0
90019800:	f77f af4a 	ble.w	90019698 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019804:	1414      	asrs	r4, r2, #16
90019806:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001980a:	140d      	asrs	r5, r1, #16
9001980c:	fb06 5504 	mla	r5, r6, r4, r5
90019810:	9c01      	ldr	r4, [sp, #4]
90019812:	5d64      	ldrb	r4, [r4, r5]
90019814:	2cff      	cmp	r4, #255	; 0xff
90019816:	d10b      	bne.n	90019830 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90019818:	9c00      	ldr	r4, [sp, #0]
9001981a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001981e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90019822:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019824:	f109 0901 	add.w	r9, r9, #1
90019828:	4421      	add	r1, r4
9001982a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001982c:	4422      	add	r2, r4
9001982e:	e7e4      	b.n	900197fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90019830:	2c00      	cmp	r4, #0
90019832:	d0f6      	beq.n	90019822 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019834:	9e00      	ldr	r6, [sp, #0]
90019836:	b2a7      	uxth	r7, r4
90019838:	43e4      	mvns	r4, r4
9001983a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001983e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
90019842:	b2e4      	uxtb	r4, r4
90019844:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019848:	122e      	asrs	r6, r5, #8
9001984a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001984e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019852:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90019856:	00ed      	lsls	r5, r5, #3
90019858:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001985c:	fb16 f604 	smulbb	r6, r6, r4
90019860:	b2ed      	uxtb	r5, r5
90019862:	fb1a fa04 	smulbb	sl, sl, r4
90019866:	fb0c 6c07 	mla	ip, ip, r7, r6
9001986a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001986e:	fb15 f504 	smulbb	r5, r5, r4
90019872:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019876:	fa1f fc8c 	uxth.w	ip, ip
9001987a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001987e:	fa5f fe8e 	uxtb.w	lr, lr
90019882:	fb06 a607 	mla	r6, r6, r7, sl
90019886:	f10c 0401 	add.w	r4, ip, #1
9001988a:	fb0e 5507 	mla	r5, lr, r7, r5
9001988e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019892:	b2ad      	uxth	r5, r5
90019894:	b2b6      	uxth	r6, r6
90019896:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001989a:	f105 0a01 	add.w	sl, r5, #1
9001989e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900198a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900198a6:	ea4a 0c0c 	orr.w	ip, sl, ip
900198aa:	f106 0a01 	add.w	sl, r6, #1
900198ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900198b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900198b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900198ba:	ea4c 0c0a 	orr.w	ip, ip, sl
900198be:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
900198c2:	e7ae      	b.n	90019822 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900198c4:	b005      	add	sp, #20
900198c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900198ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900198ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900198ce:	b085      	sub	sp, #20
900198d0:	9813      	ldr	r0, [sp, #76]	; 0x4c
900198d2:	9203      	str	r2, [sp, #12]
900198d4:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
900198d8:	9100      	str	r1, [sp, #0]
900198da:	9201      	str	r2, [sp, #4]
900198dc:	6841      	ldr	r1, [r0, #4]
900198de:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
900198e2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
900198e6:	fb01 2404 	mla	r4, r1, r4, r2
900198ea:	6802      	ldr	r2, [r0, #0]
900198ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900198f0:	f8de 2000 	ldr.w	r2, [lr]
900198f4:	9202      	str	r2, [sp, #8]
900198f6:	9a01      	ldr	r2, [sp, #4]
900198f8:	43d6      	mvns	r6, r2
900198fa:	b2f6      	uxtb	r6, r6
900198fc:	9a00      	ldr	r2, [sp, #0]
900198fe:	2a00      	cmp	r2, #0
90019900:	dc03      	bgt.n	9001990a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019902:	9a03      	ldr	r2, [sp, #12]
90019904:	2a00      	cmp	r2, #0
90019906:	f340 8124 	ble.w	90019b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001990a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001990c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019910:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019914:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019916:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001991a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001991e:	2b00      	cmp	r3, #0
90019920:	dd0e      	ble.n	90019940 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019922:	1408      	asrs	r0, r1, #16
90019924:	d405      	bmi.n	90019932 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019926:	4560      	cmp	r0, ip
90019928:	da03      	bge.n	90019932 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001992a:	1410      	asrs	r0, r2, #16
9001992c:	d401      	bmi.n	90019932 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001992e:	42b8      	cmp	r0, r7
90019930:	db07      	blt.n	90019942 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019932:	9811      	ldr	r0, [sp, #68]	; 0x44
90019934:	3b01      	subs	r3, #1
90019936:	3402      	adds	r4, #2
90019938:	4401      	add	r1, r0
9001993a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001993c:	4402      	add	r2, r0
9001993e:	e7ee      	b.n	9001991e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019940:	d06e      	beq.n	90019a20 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019942:	1e58      	subs	r0, r3, #1
90019944:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019946:	fb05 1500 	mla	r5, r5, r0, r1
9001994a:	142d      	asrs	r5, r5, #16
9001994c:	d45c      	bmi.n	90019a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001994e:	4565      	cmp	r5, ip
90019950:	da5a      	bge.n	90019a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019952:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019954:	fb05 2000 	mla	r0, r5, r0, r2
90019958:	1400      	asrs	r0, r0, #16
9001995a:	d455      	bmi.n	90019a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001995c:	42b8      	cmp	r0, r7
9001995e:	da53      	bge.n	90019a08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019960:	4699      	mov	r9, r3
90019962:	46a2      	mov	sl, r4
90019964:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019968:	f1b9 0f00 	cmp.w	r9, #0
9001996c:	dd54      	ble.n	90019a18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001996e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019972:	140d      	asrs	r5, r1, #16
90019974:	1410      	asrs	r0, r2, #16
90019976:	f109 39ff 	add.w	r9, r9, #4294967295
9001997a:	fb07 5000 	mla	r0, r7, r0, r5
9001997e:	9d02      	ldr	r5, [sp, #8]
90019980:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019984:	f8ba 5000 	ldrh.w	r5, [sl]
90019988:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001998c:	122f      	asrs	r7, r5, #8
9001998e:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019992:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019996:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001999a:	00ed      	lsls	r5, r5, #3
9001999c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
900199a0:	fb17 f706 	smulbb	r7, r7, r6
900199a4:	b2ed      	uxtb	r5, r5
900199a6:	fb18 f806 	smulbb	r8, r8, r6
900199aa:	fb0c 7c0b 	mla	ip, ip, fp, r7
900199ae:	10c7      	asrs	r7, r0, #3
900199b0:	fb15 f506 	smulbb	r5, r5, r6
900199b4:	00c0      	lsls	r0, r0, #3
900199b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900199ba:	fa1f fc8c 	uxth.w	ip, ip
900199be:	b2c0      	uxtb	r0, r0
900199c0:	fb07 870b 	mla	r7, r7, fp, r8
900199c4:	fb00 500b 	mla	r0, r0, fp, r5
900199c8:	f10c 0501 	add.w	r5, ip, #1
900199cc:	b2bf      	uxth	r7, r7
900199ce:	b280      	uxth	r0, r0
900199d0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900199d4:	f107 0801 	add.w	r8, r7, #1
900199d8:	1c45      	adds	r5, r0, #1
900199da:	eb08 2817 	add.w	r8, r8, r7, lsr #8
900199de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900199e2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900199e6:	9811      	ldr	r0, [sp, #68]	; 0x44
900199e8:	ea4f 1858 	mov.w	r8, r8, lsr #5
900199ec:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900199f0:	4401      	add	r1, r0
900199f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900199f6:	9812      	ldr	r0, [sp, #72]	; 0x48
900199f8:	ea45 0c0c 	orr.w	ip, r5, ip
900199fc:	4402      	add	r2, r0
900199fe:	ea4c 0c08 	orr.w	ip, ip, r8
90019a02:	f82a cb02 	strh.w	ip, [sl], #2
90019a06:	e7af      	b.n	90019968 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019a08:	f04f 0800 	mov.w	r8, #0
90019a0c:	f8bd a004 	ldrh.w	sl, [sp, #4]
90019a10:	eb03 0008 	add.w	r0, r3, r8
90019a14:	2800      	cmp	r0, #0
90019a16:	dc41      	bgt.n	90019a9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90019a18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019a1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019a20:	9b00      	ldr	r3, [sp, #0]
90019a22:	2b00      	cmp	r3, #0
90019a24:	f340 8095 	ble.w	90019b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019a28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019a2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019a2e:	ee30 0a04 	vadd.f32	s0, s0, s8
90019a32:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019a36:	eef0 6a62 	vmov.f32	s13, s5
90019a3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019a3e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019a42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019a46:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
90019a4a:	eef0 6a43 	vmov.f32	s13, s6
90019a4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019a52:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
90019a56:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019a5a:	ee61 7a27 	vmul.f32	s15, s2, s15
90019a5e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019a62:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019a66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019a6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019a6e:	ee12 2a90 	vmov	r2, s5
90019a72:	eef0 2a47 	vmov.f32	s5, s14
90019a76:	fb92 f3f3 	sdiv	r3, r2, r3
90019a7a:	ee13 2a10 	vmov	r2, s6
90019a7e:	9311      	str	r3, [sp, #68]	; 0x44
90019a80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019a82:	eeb0 3a67 	vmov.f32	s6, s15
90019a86:	fb92 f3f3 	sdiv	r3, r2, r3
90019a8a:	9312      	str	r3, [sp, #72]	; 0x48
90019a8c:	9b00      	ldr	r3, [sp, #0]
90019a8e:	9a03      	ldr	r2, [sp, #12]
90019a90:	3b01      	subs	r3, #1
90019a92:	9300      	str	r3, [sp, #0]
90019a94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019a96:	bf08      	it	eq
90019a98:	4613      	moveq	r3, r2
90019a9a:	e72f      	b.n	900198fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019a9c:	140f      	asrs	r7, r1, #16
90019a9e:	d451      	bmi.n	90019b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019aa0:	f8de 5008 	ldr.w	r5, [lr, #8]
90019aa4:	42bd      	cmp	r5, r7
90019aa6:	dd4d      	ble.n	90019b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019aa8:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019aac:	d44a      	bmi.n	90019b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019aae:	f8de 000c 	ldr.w	r0, [lr, #12]
90019ab2:	4560      	cmp	r0, ip
90019ab4:	dd46      	ble.n	90019b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019ab6:	b22d      	sxth	r5, r5
90019ab8:	9802      	ldr	r0, [sp, #8]
90019aba:	fb0c 7505 	mla	r5, ip, r5, r7
90019abe:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019ac2:	f06f 0501 	mvn.w	r5, #1
90019ac6:	fb05 fb08 	mul.w	fp, r5, r8
90019aca:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019ace:	f834 500b 	ldrh.w	r5, [r4, fp]
90019ad2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019ad6:	122f      	asrs	r7, r5, #8
90019ad8:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019adc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019ae0:	00ed      	lsls	r5, r5, #3
90019ae2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019ae6:	fb17 f706 	smulbb	r7, r7, r6
90019aea:	b2ed      	uxtb	r5, r5
90019aec:	fb19 f906 	smulbb	r9, r9, r6
90019af0:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019af4:	10c7      	asrs	r7, r0, #3
90019af6:	fb15 f506 	smulbb	r5, r5, r6
90019afa:	00c0      	lsls	r0, r0, #3
90019afc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019b00:	fa1f fc8c 	uxth.w	ip, ip
90019b04:	b2c0      	uxtb	r0, r0
90019b06:	fb07 970a 	mla	r7, r7, sl, r9
90019b0a:	fb00 500a 	mla	r0, r0, sl, r5
90019b0e:	f10c 0501 	add.w	r5, ip, #1
90019b12:	b2bf      	uxth	r7, r7
90019b14:	b280      	uxth	r0, r0
90019b16:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019b1a:	f107 0901 	add.w	r9, r7, #1
90019b1e:	1c45      	adds	r5, r0, #1
90019b20:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019b24:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019b28:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019b2c:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019b30:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019b34:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90019b38:	ea45 0c0c 	orr.w	ip, r5, ip
90019b3c:	ea4c 0c09 	orr.w	ip, ip, r9
90019b40:	f824 c00b 	strh.w	ip, [r4, fp]
90019b44:	9811      	ldr	r0, [sp, #68]	; 0x44
90019b46:	f108 38ff 	add.w	r8, r8, #4294967295
90019b4a:	4401      	add	r1, r0
90019b4c:	9812      	ldr	r0, [sp, #72]	; 0x48
90019b4e:	4402      	add	r2, r0
90019b50:	e75e      	b.n	90019a10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019b52:	b005      	add	sp, #20
90019b54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019b58 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019b5c:	b085      	sub	sp, #20
90019b5e:	4693      	mov	fp, r2
90019b60:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019b64:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019b66:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019b68:	6870      	ldr	r0, [r6, #4]
90019b6a:	9101      	str	r1, [sp, #4]
90019b6c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019b70:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019b74:	fb00 2404 	mla	r4, r0, r4, r2
90019b78:	6832      	ldr	r2, [r6, #0]
90019b7a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019b7e:	682a      	ldr	r2, [r5, #0]
90019b80:	9202      	str	r2, [sp, #8]
90019b82:	9a01      	ldr	r2, [sp, #4]
90019b84:	2a00      	cmp	r2, #0
90019b86:	dc03      	bgt.n	90019b90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019b88:	f1bb 0f00 	cmp.w	fp, #0
90019b8c:	f340 809a 	ble.w	90019cc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019b90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019b92:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019b96:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019b9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019b9c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019ba0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019ba4:	2b00      	cmp	r3, #0
90019ba6:	dd0c      	ble.n	90019bc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019ba8:	1406      	asrs	r6, r0, #16
90019baa:	d405      	bmi.n	90019bb8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019bac:	454e      	cmp	r6, r9
90019bae:	da03      	bge.n	90019bb8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019bb0:	1416      	asrs	r6, r2, #16
90019bb2:	d401      	bmi.n	90019bb8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019bb4:	4546      	cmp	r6, r8
90019bb6:	db05      	blt.n	90019bc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019bb8:	4470      	add	r0, lr
90019bba:	4462      	add	r2, ip
90019bbc:	3b01      	subs	r3, #1
90019bbe:	3402      	adds	r4, #2
90019bc0:	e7f0      	b.n	90019ba4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019bc2:	d00f      	beq.n	90019be4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019bc4:	1e5e      	subs	r6, r3, #1
90019bc6:	fb0e 0706 	mla	r7, lr, r6, r0
90019bca:	143f      	asrs	r7, r7, #16
90019bcc:	d541      	bpl.n	90019c52 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019bce:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019bd2:	4698      	mov	r8, r3
90019bd4:	9603      	str	r6, [sp, #12]
90019bd6:	f1b8 0f00 	cmp.w	r8, #0
90019bda:	dc56      	bgt.n	90019c8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019bdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019be0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019be4:	9b01      	ldr	r3, [sp, #4]
90019be6:	2b00      	cmp	r3, #0
90019be8:	dd6c      	ble.n	90019cc4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019bea:	ee30 0a04 	vadd.f32	s0, s0, s8
90019bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019bf0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019bf4:	eeb0 6a62 	vmov.f32	s12, s5
90019bf8:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019bfc:	ee31 1a05 	vadd.f32	s2, s2, s10
90019c00:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c04:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019c08:	eeb0 6a43 	vmov.f32	s12, s6
90019c0c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019c10:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019c14:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019c18:	ee61 7a27 	vmul.f32	s15, s2, s15
90019c1c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019c20:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019c24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019c28:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019c2c:	ee12 2a90 	vmov	r2, s5
90019c30:	eef0 2a47 	vmov.f32	s5, s14
90019c34:	fb92 fef3 	sdiv	lr, r2, r3
90019c38:	ee13 2a10 	vmov	r2, s6
90019c3c:	eeb0 3a67 	vmov.f32	s6, s15
90019c40:	fb92 fcf3 	sdiv	ip, r2, r3
90019c44:	9b01      	ldr	r3, [sp, #4]
90019c46:	3b01      	subs	r3, #1
90019c48:	9301      	str	r3, [sp, #4]
90019c4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019c4c:	bf08      	it	eq
90019c4e:	465b      	moveq	r3, fp
90019c50:	e797      	b.n	90019b82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019c52:	454f      	cmp	r7, r9
90019c54:	dabb      	bge.n	90019bce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019c56:	fb0c 2606 	mla	r6, ip, r6, r2
90019c5a:	1436      	asrs	r6, r6, #16
90019c5c:	d4b7      	bmi.n	90019bce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019c5e:	4546      	cmp	r6, r8
90019c60:	dab5      	bge.n	90019bce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019c62:	461e      	mov	r6, r3
90019c64:	46a0      	mov	r8, r4
90019c66:	2e00      	cmp	r6, #0
90019c68:	ddb8      	ble.n	90019bdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019c6a:	1417      	asrs	r7, r2, #16
90019c6c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019c70:	ea4f 4920 	mov.w	r9, r0, asr #16
90019c74:	9902      	ldr	r1, [sp, #8]
90019c76:	4470      	add	r0, lr
90019c78:	4462      	add	r2, ip
90019c7a:	fb0a 9707 	mla	r7, sl, r7, r9
90019c7e:	3e01      	subs	r6, #1
90019c80:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019c84:	f828 7b02 	strh.w	r7, [r8], #2
90019c88:	e7ed      	b.n	90019c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90019c8a:	ea5f 4920 	movs.w	r9, r0, asr #16
90019c8e:	d414      	bmi.n	90019cba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019c90:	68ae      	ldr	r6, [r5, #8]
90019c92:	454e      	cmp	r6, r9
90019c94:	dd11      	ble.n	90019cba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019c96:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019c9a:	d40e      	bmi.n	90019cba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019c9c:	68ef      	ldr	r7, [r5, #12]
90019c9e:	4557      	cmp	r7, sl
90019ca0:	dd0b      	ble.n	90019cba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019ca2:	b236      	sxth	r6, r6
90019ca4:	f06f 0101 	mvn.w	r1, #1
90019ca8:	9f02      	ldr	r7, [sp, #8]
90019caa:	fb0a 9606 	mla	r6, sl, r6, r9
90019cae:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90019cb2:	fb01 f608 	mul.w	r6, r1, r8
90019cb6:	9903      	ldr	r1, [sp, #12]
90019cb8:	538f      	strh	r7, [r1, r6]
90019cba:	4470      	add	r0, lr
90019cbc:	4462      	add	r2, ip
90019cbe:	f108 38ff 	add.w	r8, r8, #4294967295
90019cc2:	e788      	b.n	90019bd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019cc4:	b005      	add	sp, #20
90019cc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019cca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019cca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019cce:	b087      	sub	sp, #28
90019cd0:	468b      	mov	fp, r1
90019cd2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019cd6:	9815      	ldr	r0, [sp, #84]	; 0x54
90019cd8:	9203      	str	r2, [sp, #12]
90019cda:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019cde:	6841      	ldr	r1, [r0, #4]
90019ce0:	9204      	str	r2, [sp, #16]
90019ce2:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
90019ce6:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
90019cea:	fb01 2505 	mla	r5, r1, r5, r2
90019cee:	6802      	ldr	r2, [r0, #0]
90019cf0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
90019cf4:	f8d9 2000 	ldr.w	r2, [r9]
90019cf8:	9201      	str	r2, [sp, #4]
90019cfa:	f1bb 0f00 	cmp.w	fp, #0
90019cfe:	dc03      	bgt.n	90019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019d00:	9a03      	ldr	r2, [sp, #12]
90019d02:	2a00      	cmp	r2, #0
90019d04:	f340 8158 	ble.w	90019fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019d08:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019d0a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
90019d0e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019d12:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019d14:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
90019d18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019d1c:	2b00      	cmp	r3, #0
90019d1e:	dd0e      	ble.n	90019d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019d20:	1402      	asrs	r2, r0, #16
90019d22:	d405      	bmi.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019d24:	42ba      	cmp	r2, r7
90019d26:	da03      	bge.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019d28:	140a      	asrs	r2, r1, #16
90019d2a:	d401      	bmi.n	90019d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019d2c:	42b2      	cmp	r2, r6
90019d2e:	db07      	blt.n	90019d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019d30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019d32:	3b01      	subs	r3, #1
90019d34:	3502      	adds	r5, #2
90019d36:	4410      	add	r0, r2
90019d38:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019d3a:	4411      	add	r1, r2
90019d3c:	e7ee      	b.n	90019d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019d3e:	d017      	beq.n	90019d70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019d40:	1e5a      	subs	r2, r3, #1
90019d42:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019d44:	fb04 0402 	mla	r4, r4, r2, r0
90019d48:	1424      	asrs	r4, r4, #16
90019d4a:	d409      	bmi.n	90019d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019d4c:	42bc      	cmp	r4, r7
90019d4e:	da07      	bge.n	90019d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019d50:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019d52:	fb04 1202 	mla	r2, r4, r2, r1
90019d56:	1412      	asrs	r2, r2, #16
90019d58:	d402      	bmi.n	90019d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019d5a:	42b2      	cmp	r2, r6
90019d5c:	f2c0 80bf 	blt.w	90019ede <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019d60:	2700      	movs	r7, #0
90019d62:	19da      	adds	r2, r3, r7
90019d64:	2a00      	cmp	r2, #0
90019d66:	dc3e      	bgt.n	90019de6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019d68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019d6c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90019d70:	f1bb 0f00 	cmp.w	fp, #0
90019d74:	f340 8120 	ble.w	90019fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019d78:	ee30 0a04 	vadd.f32	s0, s0, s8
90019d7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019d7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019d82:	f1bb 0b01 	subs.w	fp, fp, #1
90019d86:	eeb0 6a62 	vmov.f32	s12, s5
90019d8a:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019d8e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019d92:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019d96:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019d9a:	eeb0 6a43 	vmov.f32	s12, s6
90019d9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019da2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019da6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019daa:	ee61 7a27 	vmul.f32	s15, s2, s15
90019dae:	ee77 2a62 	vsub.f32	s5, s14, s5
90019db2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019db6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019dba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019dbe:	ee12 2a90 	vmov	r2, s5
90019dc2:	eef0 2a47 	vmov.f32	s5, s14
90019dc6:	fb92 f3f3 	sdiv	r3, r2, r3
90019dca:	ee13 2a10 	vmov	r2, s6
90019dce:	9313      	str	r3, [sp, #76]	; 0x4c
90019dd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019dd2:	eeb0 3a67 	vmov.f32	s6, s15
90019dd6:	fb92 f3f3 	sdiv	r3, r2, r3
90019dda:	9a03      	ldr	r2, [sp, #12]
90019ddc:	9314      	str	r3, [sp, #80]	; 0x50
90019dde:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019de0:	bf08      	it	eq
90019de2:	4613      	moveq	r3, r2
90019de4:	e789      	b.n	90019cfa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019de6:	1406      	asrs	r6, r0, #16
90019de8:	d42d      	bmi.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019dea:	f8d9 4008 	ldr.w	r4, [r9, #8]
90019dee:	42b4      	cmp	r4, r6
90019df0:	dd29      	ble.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019df2:	ea5f 4c21 	movs.w	ip, r1, asr #16
90019df6:	d426      	bmi.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019df8:	f8d9 200c 	ldr.w	r2, [r9, #12]
90019dfc:	4562      	cmp	r2, ip
90019dfe:	dd22      	ble.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019e00:	b224      	sxth	r4, r4
90019e02:	9a01      	ldr	r2, [sp, #4]
90019e04:	fb0c 6404 	mla	r4, ip, r4, r6
90019e08:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
90019e0c:	0e22      	lsrs	r2, r4, #24
90019e0e:	d01a      	beq.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019e10:	9e04      	ldr	r6, [sp, #16]
90019e12:	4372      	muls	r2, r6
90019e14:	1c56      	adds	r6, r2, #1
90019e16:	eb06 2222 	add.w	r2, r6, r2, asr #8
90019e1a:	0a26      	lsrs	r6, r4, #8
90019e1c:	1212      	asrs	r2, r2, #8
90019e1e:	9605      	str	r6, [sp, #20]
90019e20:	2aff      	cmp	r2, #255	; 0xff
90019e22:	d116      	bne.n	90019e52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
90019e24:	f06f 0201 	mvn.w	r2, #1
90019e28:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90019e2c:	fb02 fc07 	mul.w	ip, r2, r7
90019e30:	0962      	lsrs	r2, r4, #5
90019e32:	f026 0607 	bic.w	r6, r6, #7
90019e36:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90019e3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019e3e:	4316      	orrs	r6, r2
90019e40:	4326      	orrs	r6, r4
90019e42:	f825 600c 	strh.w	r6, [r5, ip]
90019e46:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019e48:	3f01      	subs	r7, #1
90019e4a:	4410      	add	r0, r2
90019e4c:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019e4e:	4411      	add	r1, r2
90019e50:	e787      	b.n	90019d62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019e52:	f06f 0601 	mvn.w	r6, #1
90019e56:	fa1f fa82 	uxth.w	sl, r2
90019e5a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
90019e5e:	43d2      	mvns	r2, r2
90019e60:	437e      	muls	r6, r7
90019e62:	b2e4      	uxtb	r4, r4
90019e64:	fb1c fc0a 	smulbb	ip, ip, sl
90019e68:	b2d2      	uxtb	r2, r2
90019e6a:	f835 8006 	ldrh.w	r8, [r5, r6]
90019e6e:	fb14 f40a 	smulbb	r4, r4, sl
90019e72:	9602      	str	r6, [sp, #8]
90019e74:	ea4f 2e28 	mov.w	lr, r8, asr #8
90019e78:	f89d 6014 	ldrb.w	r6, [sp, #20]
90019e7c:	fb16 f60a 	smulbb	r6, r6, sl
90019e80:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90019e84:	fb0e ce02 	mla	lr, lr, r2, ip
90019e88:	ea4f 0ce8 	mov.w	ip, r8, asr #3
90019e8c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019e90:	fa1f fe8e 	uxth.w	lr, lr
90019e94:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90019e98:	fa5f f888 	uxtb.w	r8, r8
90019e9c:	fb0c 6c02 	mla	ip, ip, r2, r6
90019ea0:	fb08 4402 	mla	r4, r8, r2, r4
90019ea4:	f10e 0201 	add.w	r2, lr, #1
90019ea8:	fa1f fc8c 	uxth.w	ip, ip
90019eac:	b2a4      	uxth	r4, r4
90019eae:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
90019eb2:	9a02      	ldr	r2, [sp, #8]
90019eb4:	1c66      	adds	r6, r4, #1
90019eb6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
90019eba:	eb06 2614 	add.w	r6, r6, r4, lsr #8
90019ebe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90019ec2:	ea46 0e0e 	orr.w	lr, r6, lr
90019ec6:	f10c 0601 	add.w	r6, ip, #1
90019eca:	eb06 261c 	add.w	r6, r6, ip, lsr #8
90019ece:	0976      	lsrs	r6, r6, #5
90019ed0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90019ed4:	ea4e 0e06 	orr.w	lr, lr, r6
90019ed8:	f825 e002 	strh.w	lr, [r5, r2]
90019edc:	e7b3      	b.n	90019e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019ede:	f04f 0800 	mov.w	r8, #0
90019ee2:	eba3 0208 	sub.w	r2, r3, r8
90019ee6:	2a00      	cmp	r2, #0
90019ee8:	f77f af3e 	ble.w	90019d68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019eec:	1404      	asrs	r4, r0, #16
90019eee:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
90019ef2:	140a      	asrs	r2, r1, #16
90019ef4:	fb06 4202 	mla	r2, r6, r2, r4
90019ef8:	9c01      	ldr	r4, [sp, #4]
90019efa:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
90019efe:	0e22      	lsrs	r2, r4, #24
90019f00:	d015      	beq.n	90019f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
90019f02:	9e04      	ldr	r6, [sp, #16]
90019f04:	4372      	muls	r2, r6
90019f06:	1c56      	adds	r6, r2, #1
90019f08:	eb06 2222 	add.w	r2, r6, r2, asr #8
90019f0c:	0a26      	lsrs	r6, r4, #8
90019f0e:	1212      	asrs	r2, r2, #8
90019f10:	2aff      	cmp	r2, #255	; 0xff
90019f12:	d113      	bne.n	90019f3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90019f14:	0962      	lsrs	r2, r4, #5
90019f16:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90019f1a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90019f1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019f22:	f026 0607 	bic.w	r6, r6, #7
90019f26:	4316      	orrs	r6, r2
90019f28:	4326      	orrs	r6, r4
90019f2a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
90019f2e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019f30:	f108 0801 	add.w	r8, r8, #1
90019f34:	4410      	add	r0, r2
90019f36:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019f38:	4411      	add	r1, r2
90019f3a:	e7d2      	b.n	90019ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
90019f3c:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
90019f40:	fa1f fa82 	uxth.w	sl, r2
90019f44:	f3c4 4707 	ubfx	r7, r4, #16, #8
90019f48:	43d2      	mvns	r2, r2
90019f4a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
90019f4e:	fb17 f70a 	smulbb	r7, r7, sl
90019f52:	b2d2      	uxtb	r2, r2
90019f54:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019f58:	b2e4      	uxtb	r4, r4
90019f5a:	b2f6      	uxtb	r6, r6
90019f5c:	fb0c 7c02 	mla	ip, ip, r2, r7
90019f60:	ea4f 07ee 	mov.w	r7, lr, asr #3
90019f64:	fb14 f40a 	smulbb	r4, r4, sl
90019f68:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019f6c:	fa1f fc8c 	uxth.w	ip, ip
90019f70:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019f74:	fb16 f60a 	smulbb	r6, r6, sl
90019f78:	fa5f fe8e 	uxtb.w	lr, lr
90019f7c:	fb0e 4402 	mla	r4, lr, r2, r4
90019f80:	fb07 6702 	mla	r7, r7, r2, r6
90019f84:	f10c 0201 	add.w	r2, ip, #1
90019f88:	b2a4      	uxth	r4, r4
90019f8a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
90019f8e:	1c66      	adds	r6, r4, #1
90019f90:	b2bf      	uxth	r7, r7
90019f92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019f96:	eb06 2614 	add.w	r6, r6, r4, lsr #8
90019f9a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
90019f9e:	ea46 0c0c 	orr.w	ip, r6, ip
90019fa2:	1c7e      	adds	r6, r7, #1
90019fa4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
90019fa8:	0976      	lsrs	r6, r6, #5
90019faa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90019fae:	ea4c 0c06 	orr.w	ip, ip, r6
90019fb2:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
90019fb6:	e7ba      	b.n	90019f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
90019fb8:	b007      	add	sp, #28
90019fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90019fc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019fc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019fc4:	b085      	sub	sp, #20
90019fc6:	468b      	mov	fp, r1
90019fc8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019fcc:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019fce:	9203      	str	r2, [sp, #12]
90019fd0:	6841      	ldr	r1, [r0, #4]
90019fd2:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90019fd6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019fda:	fb01 2404 	mla	r4, r1, r4, r2
90019fde:	6802      	ldr	r2, [r0, #0]
90019fe0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019fe4:	f8d8 2000 	ldr.w	r2, [r8]
90019fe8:	9201      	str	r2, [sp, #4]
90019fea:	f1bb 0f00 	cmp.w	fp, #0
90019fee:	dc03      	bgt.n	90019ff8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019ff0:	9a03      	ldr	r2, [sp, #12]
90019ff2:	2a00      	cmp	r2, #0
90019ff4:	f340 814f 	ble.w	9001a296 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90019ff8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019ffa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
90019ffe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a002:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a004:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a008:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a00c:	2b00      	cmp	r3, #0
9001a00e:	dd0e      	ble.n	9001a02e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a010:	1408      	asrs	r0, r1, #16
9001a012:	d405      	bmi.n	9001a020 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a014:	42b8      	cmp	r0, r7
9001a016:	da03      	bge.n	9001a020 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a018:	1410      	asrs	r0, r2, #16
9001a01a:	d401      	bmi.n	9001a020 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a01c:	42b0      	cmp	r0, r6
9001a01e:	db07      	blt.n	9001a030 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a020:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a022:	3b01      	subs	r3, #1
9001a024:	3402      	adds	r4, #2
9001a026:	4401      	add	r1, r0
9001a028:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a02a:	4402      	add	r2, r0
9001a02c:	e7ee      	b.n	9001a00c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a02e:	d017      	beq.n	9001a060 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a030:	1e58      	subs	r0, r3, #1
9001a032:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001a034:	fb05 1500 	mla	r5, r5, r0, r1
9001a038:	142d      	asrs	r5, r5, #16
9001a03a:	d409      	bmi.n	9001a050 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a03c:	42bd      	cmp	r5, r7
9001a03e:	da07      	bge.n	9001a050 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a040:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001a042:	fb05 2000 	mla	r0, r5, r0, r2
9001a046:	1400      	asrs	r0, r0, #16
9001a048:	d402      	bmi.n	9001a050 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a04a:	42b0      	cmp	r0, r6
9001a04c:	f2c0 80ba 	blt.w	9001a1c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a050:	2600      	movs	r6, #0
9001a052:	1998      	adds	r0, r3, r6
9001a054:	2800      	cmp	r0, #0
9001a056:	dc3e      	bgt.n	9001a0d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001a058:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a05c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a060:	f1bb 0f00 	cmp.w	fp, #0
9001a064:	f340 8117 	ble.w	9001a296 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a068:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a06c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a06e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a072:	f1bb 0b01 	subs.w	fp, fp, #1
9001a076:	eeb0 6a62 	vmov.f32	s12, s5
9001a07a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a07e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a082:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a086:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a08a:	eeb0 6a43 	vmov.f32	s12, s6
9001a08e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a092:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a096:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a09a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a09e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a0a2:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a0a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a0aa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a0ae:	ee12 2a90 	vmov	r2, s5
9001a0b2:	eef0 2a47 	vmov.f32	s5, s14
9001a0b6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a0ba:	ee13 2a10 	vmov	r2, s6
9001a0be:	9311      	str	r3, [sp, #68]	; 0x44
9001a0c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a0c2:	eeb0 3a67 	vmov.f32	s6, s15
9001a0c6:	fb92 f3f3 	sdiv	r3, r2, r3
9001a0ca:	9a03      	ldr	r2, [sp, #12]
9001a0cc:	9312      	str	r3, [sp, #72]	; 0x48
9001a0ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a0d0:	bf08      	it	eq
9001a0d2:	4613      	moveq	r3, r2
9001a0d4:	e789      	b.n	90019fea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a0d6:	140f      	asrs	r7, r1, #16
9001a0d8:	d424      	bmi.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a0da:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a0de:	42bd      	cmp	r5, r7
9001a0e0:	dd20      	ble.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a0e2:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a0e6:	d41d      	bmi.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a0e8:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001a0ec:	4560      	cmp	r0, ip
9001a0ee:	dd19      	ble.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a0f0:	b22d      	sxth	r5, r5
9001a0f2:	9801      	ldr	r0, [sp, #4]
9001a0f4:	fb0c 7505 	mla	r5, ip, r5, r7
9001a0f8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001a0fc:	0e07      	lsrs	r7, r0, #24
9001a0fe:	2fff      	cmp	r7, #255	; 0xff
9001a100:	d116      	bne.n	9001a130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a102:	f06f 0501 	mvn.w	r5, #1
9001a106:	fb05 f706 	mul.w	r7, r5, r6
9001a10a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001a10e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a112:	0945      	lsrs	r5, r0, #5
9001a114:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a118:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a11c:	ea4c 0505 	orr.w	r5, ip, r5
9001a120:	4305      	orrs	r5, r0
9001a122:	53e5      	strh	r5, [r4, r7]
9001a124:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a126:	3e01      	subs	r6, #1
9001a128:	4401      	add	r1, r0
9001a12a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a12c:	4402      	add	r2, r0
9001a12e:	e790      	b.n	9001a052 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a130:	b2fd      	uxtb	r5, r7
9001a132:	2f00      	cmp	r7, #0
9001a134:	d0f6      	beq.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a136:	f06f 0701 	mvn.w	r7, #1
9001a13a:	fa1f f985 	uxth.w	r9, r5
9001a13e:	43ed      	mvns	r5, r5
9001a140:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a144:	4377      	muls	r7, r6
9001a146:	fb1a fa09 	smulbb	sl, sl, r9
9001a14a:	b2ed      	uxtb	r5, r5
9001a14c:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a150:	9702      	str	r7, [sp, #8]
9001a152:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a156:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a15a:	fb17 f709 	smulbb	r7, r7, r9
9001a15e:	b2c0      	uxtb	r0, r0
9001a160:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a164:	fb10 f009 	smulbb	r0, r0, r9
9001a168:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a16c:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a170:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a174:	fa1f fc8c 	uxth.w	ip, ip
9001a178:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a17c:	fa5f fe8e 	uxtb.w	lr, lr
9001a180:	fb07 a705 	mla	r7, r7, r5, sl
9001a184:	fb0e 0005 	mla	r0, lr, r5, r0
9001a188:	f10c 0501 	add.w	r5, ip, #1
9001a18c:	b2bf      	uxth	r7, r7
9001a18e:	b280      	uxth	r0, r0
9001a190:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a194:	f100 0a01 	add.w	sl, r0, #1
9001a198:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a19c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a1a0:	9802      	ldr	r0, [sp, #8]
9001a1a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a1a6:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a1aa:	f107 0a01 	add.w	sl, r7, #1
9001a1ae:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a1b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a1b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a1ba:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a1be:	f824 c000 	strh.w	ip, [r4, r0]
9001a1c2:	e7af      	b.n	9001a124 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a1c4:	f04f 0e00 	mov.w	lr, #0
9001a1c8:	eba3 000e 	sub.w	r0, r3, lr
9001a1cc:	2800      	cmp	r0, #0
9001a1ce:	f77f af43 	ble.w	9001a058 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a1d2:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a1d6:	140d      	asrs	r5, r1, #16
9001a1d8:	1410      	asrs	r0, r2, #16
9001a1da:	fb06 5000 	mla	r0, r6, r0, r5
9001a1de:	9d01      	ldr	r5, [sp, #4]
9001a1e0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a1e4:	0e2e      	lsrs	r6, r5, #24
9001a1e6:	2eff      	cmp	r6, #255	; 0xff
9001a1e8:	d112      	bne.n	9001a210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a1ea:	482c      	ldr	r0, [pc, #176]	; (9001a29c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a1ec:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a1f0:	0968      	lsrs	r0, r5, #5
9001a1f2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a1f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a1fa:	4330      	orrs	r0, r6
9001a1fc:	4328      	orrs	r0, r5
9001a1fe:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a202:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a204:	f10e 0e01 	add.w	lr, lr, #1
9001a208:	4401      	add	r1, r0
9001a20a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a20c:	4402      	add	r2, r0
9001a20e:	e7db      	b.n	9001a1c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a210:	b2f0      	uxtb	r0, r6
9001a212:	2e00      	cmp	r6, #0
9001a214:	d0f5      	beq.n	9001a202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a216:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a21a:	fa1f f980 	uxth.w	r9, r0
9001a21e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a222:	43c0      	mvns	r0, r0
9001a224:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a228:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a22c:	fb16 f609 	smulbb	r6, r6, r9
9001a230:	b2c0      	uxtb	r0, r0
9001a232:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a236:	b2ed      	uxtb	r5, r5
9001a238:	fb1a fa09 	smulbb	sl, sl, r9
9001a23c:	fb07 6700 	mla	r7, r7, r0, r6
9001a240:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a244:	fb15 f509 	smulbb	r5, r5, r9
9001a248:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a24c:	b2bf      	uxth	r7, r7
9001a24e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a252:	fa5f fc8c 	uxtb.w	ip, ip
9001a256:	fb06 a600 	mla	r6, r6, r0, sl
9001a25a:	fb0c 5500 	mla	r5, ip, r0, r5
9001a25e:	1c78      	adds	r0, r7, #1
9001a260:	b2b6      	uxth	r6, r6
9001a262:	b2ad      	uxth	r5, r5
9001a264:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a268:	f105 0a01 	add.w	sl, r5, #1
9001a26c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a270:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a274:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a278:	ea4a 0707 	orr.w	r7, sl, r7
9001a27c:	f106 0a01 	add.w	sl, r6, #1
9001a280:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a284:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a288:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a28c:	ea47 070a 	orr.w	r7, r7, sl
9001a290:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a294:	e7b5      	b.n	9001a202 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a296:	b005      	add	sp, #20
9001a298:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a29c:	fffff800 	.word	0xfffff800

9001a2a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a2a4:	b087      	sub	sp, #28
9001a2a6:	468b      	mov	fp, r1
9001a2a8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a2ac:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a2ae:	9203      	str	r2, [sp, #12]
9001a2b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a2b4:	6841      	ldr	r1, [r0, #4]
9001a2b6:	9204      	str	r2, [sp, #16]
9001a2b8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001a2bc:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a2c0:	fb01 2404 	mla	r4, r1, r4, r2
9001a2c4:	6802      	ldr	r2, [r0, #0]
9001a2c6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a2ca:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a2ce:	3201      	adds	r2, #1
9001a2d0:	f022 0201 	bic.w	r2, r2, #1
9001a2d4:	9200      	str	r2, [sp, #0]
9001a2d6:	f8d9 2000 	ldr.w	r2, [r9]
9001a2da:	9201      	str	r2, [sp, #4]
9001a2dc:	f1bb 0f00 	cmp.w	fp, #0
9001a2e0:	dc03      	bgt.n	9001a2ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a2e2:	9a03      	ldr	r2, [sp, #12]
9001a2e4:	2a00      	cmp	r2, #0
9001a2e6:	f340 816a 	ble.w	9001a5be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a2ea:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a2ec:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a2f0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a2f4:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a2f6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a2fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a2fe:	2b00      	cmp	r3, #0
9001a300:	dd0e      	ble.n	9001a320 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a302:	1402      	asrs	r2, r0, #16
9001a304:	d405      	bmi.n	9001a312 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a306:	42ba      	cmp	r2, r7
9001a308:	da03      	bge.n	9001a312 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a30a:	140a      	asrs	r2, r1, #16
9001a30c:	d401      	bmi.n	9001a312 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a30e:	42b2      	cmp	r2, r6
9001a310:	db07      	blt.n	9001a322 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a312:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a314:	3b01      	subs	r3, #1
9001a316:	3402      	adds	r4, #2
9001a318:	4410      	add	r0, r2
9001a31a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a31c:	4411      	add	r1, r2
9001a31e:	e7ee      	b.n	9001a2fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a320:	d017      	beq.n	9001a352 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a322:	1e5a      	subs	r2, r3, #1
9001a324:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a326:	fb05 0502 	mla	r5, r5, r2, r0
9001a32a:	142d      	asrs	r5, r5, #16
9001a32c:	d409      	bmi.n	9001a342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a32e:	42bd      	cmp	r5, r7
9001a330:	da07      	bge.n	9001a342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a332:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a334:	fb05 1202 	mla	r2, r5, r2, r1
9001a338:	1412      	asrs	r2, r2, #16
9001a33a:	d402      	bmi.n	9001a342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a33c:	42b2      	cmp	r2, r6
9001a33e:	f2c0 80c8 	blt.w	9001a4d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a342:	2700      	movs	r7, #0
9001a344:	19da      	adds	r2, r3, r7
9001a346:	2a00      	cmp	r2, #0
9001a348:	dc3e      	bgt.n	9001a3c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a34a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a34e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a352:	f1bb 0f00 	cmp.w	fp, #0
9001a356:	f340 8132 	ble.w	9001a5be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a35a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a35e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a360:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a364:	f1bb 0b01 	subs.w	fp, fp, #1
9001a368:	eeb0 6a62 	vmov.f32	s12, s5
9001a36c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a370:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a374:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a378:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a37c:	eeb0 6a43 	vmov.f32	s12, s6
9001a380:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a384:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a388:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a38c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a390:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a394:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a398:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a39c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a3a0:	ee12 2a90 	vmov	r2, s5
9001a3a4:	eef0 2a47 	vmov.f32	s5, s14
9001a3a8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a3ac:	ee13 2a10 	vmov	r2, s6
9001a3b0:	9313      	str	r3, [sp, #76]	; 0x4c
9001a3b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a3b4:	eeb0 3a67 	vmov.f32	s6, s15
9001a3b8:	fb92 f3f3 	sdiv	r3, r2, r3
9001a3bc:	9a03      	ldr	r2, [sp, #12]
9001a3be:	9314      	str	r3, [sp, #80]	; 0x50
9001a3c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a3c2:	bf08      	it	eq
9001a3c4:	4613      	moveq	r3, r2
9001a3c6:	e789      	b.n	9001a2dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a3c8:	1405      	asrs	r5, r0, #16
9001a3ca:	d436      	bmi.n	9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a3cc:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a3d0:	42aa      	cmp	r2, r5
9001a3d2:	dd32      	ble.n	9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a3d4:	140e      	asrs	r6, r1, #16
9001a3d6:	d430      	bmi.n	9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a3d8:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a3dc:	42b2      	cmp	r2, r6
9001a3de:	dd2c      	ble.n	9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a3e0:	9a00      	ldr	r2, [sp, #0]
9001a3e2:	fb06 5502 	mla	r5, r6, r2, r5
9001a3e6:	9e01      	ldr	r6, [sp, #4]
9001a3e8:	086a      	lsrs	r2, r5, #1
9001a3ea:	5cb2      	ldrb	r2, [r6, r2]
9001a3ec:	07ee      	lsls	r6, r5, #31
9001a3ee:	bf54      	ite	pl
9001a3f0:	f002 020f 	andpl.w	r2, r2, #15
9001a3f4:	1112      	asrmi	r2, r2, #4
9001a3f6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a3fa:	b2d2      	uxtb	r2, r2
9001a3fc:	b1ea      	cbz	r2, 9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a3fe:	9d04      	ldr	r5, [sp, #16]
9001a400:	436a      	muls	r2, r5
9001a402:	1c55      	adds	r5, r2, #1
9001a404:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a408:	4d6e      	ldr	r5, [pc, #440]	; (9001a5c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a40a:	1212      	asrs	r2, r2, #8
9001a40c:	682d      	ldr	r5, [r5, #0]
9001a40e:	2aff      	cmp	r2, #255	; 0xff
9001a410:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a414:	9605      	str	r6, [sp, #20]
9001a416:	d116      	bne.n	9001a446 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a418:	f06f 0201 	mvn.w	r2, #1
9001a41c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a420:	fb02 fc07 	mul.w	ip, r2, r7
9001a424:	096a      	lsrs	r2, r5, #5
9001a426:	f026 0607 	bic.w	r6, r6, #7
9001a42a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a42e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a432:	4316      	orrs	r6, r2
9001a434:	432e      	orrs	r6, r5
9001a436:	f824 600c 	strh.w	r6, [r4, ip]
9001a43a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a43c:	3f01      	subs	r7, #1
9001a43e:	4410      	add	r0, r2
9001a440:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a442:	4411      	add	r1, r2
9001a444:	e77e      	b.n	9001a344 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a446:	f06f 0601 	mvn.w	r6, #1
9001a44a:	fa1f fa82 	uxth.w	sl, r2
9001a44e:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a452:	43d2      	mvns	r2, r2
9001a454:	437e      	muls	r6, r7
9001a456:	b2ed      	uxtb	r5, r5
9001a458:	fb1c fc0a 	smulbb	ip, ip, sl
9001a45c:	b2d2      	uxtb	r2, r2
9001a45e:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a462:	fb15 f50a 	smulbb	r5, r5, sl
9001a466:	9602      	str	r6, [sp, #8]
9001a468:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a46c:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a470:	fb16 f60a 	smulbb	r6, r6, sl
9001a474:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001a478:	fb0e ce02 	mla	lr, lr, r2, ip
9001a47c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a480:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a484:	fa1f fe8e 	uxth.w	lr, lr
9001a488:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a48c:	fa5f f888 	uxtb.w	r8, r8
9001a490:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a494:	fb08 5502 	mla	r5, r8, r2, r5
9001a498:	f10e 0201 	add.w	r2, lr, #1
9001a49c:	fa1f fc8c 	uxth.w	ip, ip
9001a4a0:	b2ad      	uxth	r5, r5
9001a4a2:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a4a6:	9a02      	ldr	r2, [sp, #8]
9001a4a8:	1c6e      	adds	r6, r5, #1
9001a4aa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a4ae:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a4b2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a4b6:	ea46 0e0e 	orr.w	lr, r6, lr
9001a4ba:	f10c 0601 	add.w	r6, ip, #1
9001a4be:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a4c2:	0976      	lsrs	r6, r6, #5
9001a4c4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a4c8:	ea4e 0e06 	orr.w	lr, lr, r6
9001a4cc:	f824 e002 	strh.w	lr, [r4, r2]
9001a4d0:	e7b3      	b.n	9001a43a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a4d2:	f04f 0800 	mov.w	r8, #0
9001a4d6:	eba3 0208 	sub.w	r2, r3, r8
9001a4da:	2a00      	cmp	r2, #0
9001a4dc:	f77f af35 	ble.w	9001a34a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a4e0:	1402      	asrs	r2, r0, #16
9001a4e2:	9e00      	ldr	r6, [sp, #0]
9001a4e4:	140d      	asrs	r5, r1, #16
9001a4e6:	fb06 2505 	mla	r5, r6, r5, r2
9001a4ea:	9e01      	ldr	r6, [sp, #4]
9001a4ec:	086a      	lsrs	r2, r5, #1
9001a4ee:	07ed      	lsls	r5, r5, #31
9001a4f0:	5cb2      	ldrb	r2, [r6, r2]
9001a4f2:	bf54      	ite	pl
9001a4f4:	f002 020f 	andpl.w	r2, r2, #15
9001a4f8:	1112      	asrmi	r2, r2, #4
9001a4fa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a4fe:	b2d2      	uxtb	r2, r2
9001a500:	b1c2      	cbz	r2, 9001a534 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a502:	9d04      	ldr	r5, [sp, #16]
9001a504:	436a      	muls	r2, r5
9001a506:	1c55      	adds	r5, r2, #1
9001a508:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a50c:	4d2d      	ldr	r5, [pc, #180]	; (9001a5c4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a50e:	1212      	asrs	r2, r2, #8
9001a510:	682e      	ldr	r6, [r5, #0]
9001a512:	2aff      	cmp	r2, #255	; 0xff
9001a514:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a518:	d113      	bne.n	9001a542 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a51a:	0972      	lsrs	r2, r6, #5
9001a51c:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001a520:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a524:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a528:	f025 0507 	bic.w	r5, r5, #7
9001a52c:	4315      	orrs	r5, r2
9001a52e:	4335      	orrs	r5, r6
9001a530:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a534:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a536:	f108 0801 	add.w	r8, r8, #1
9001a53a:	4410      	add	r0, r2
9001a53c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a53e:	4411      	add	r1, r2
9001a540:	e7c9      	b.n	9001a4d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a542:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a546:	fa1f fa82 	uxth.w	sl, r2
9001a54a:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a54e:	43d2      	mvns	r2, r2
9001a550:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a554:	fb17 f70a 	smulbb	r7, r7, sl
9001a558:	b2d2      	uxtb	r2, r2
9001a55a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a55e:	b2f6      	uxtb	r6, r6
9001a560:	b2ed      	uxtb	r5, r5
9001a562:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a566:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a56a:	fb16 f60a 	smulbb	r6, r6, sl
9001a56e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a572:	fa1f fc8c 	uxth.w	ip, ip
9001a576:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a57a:	fb15 f50a 	smulbb	r5, r5, sl
9001a57e:	fa5f fe8e 	uxtb.w	lr, lr
9001a582:	fb0e 6602 	mla	r6, lr, r2, r6
9001a586:	fb07 5702 	mla	r7, r7, r2, r5
9001a58a:	f10c 0201 	add.w	r2, ip, #1
9001a58e:	b2b6      	uxth	r6, r6
9001a590:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a594:	1c75      	adds	r5, r6, #1
9001a596:	b2bf      	uxth	r7, r7
9001a598:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a59c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a5a0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a5a4:	ea45 0c0c 	orr.w	ip, r5, ip
9001a5a8:	1c7d      	adds	r5, r7, #1
9001a5aa:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a5ae:	096d      	lsrs	r5, r5, #5
9001a5b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a5b4:	ea4c 0c05 	orr.w	ip, ip, r5
9001a5b8:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a5bc:	e7ba      	b.n	9001a534 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a5be:	b007      	add	sp, #28
9001a5c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a5c4:	2402357c 	.word	0x2402357c

9001a5c8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a5c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a5cc:	b087      	sub	sp, #28
9001a5ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a5d2:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001a8dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a5d6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a5d8:	9101      	str	r1, [sp, #4]
9001a5da:	9205      	str	r2, [sp, #20]
9001a5dc:	6841      	ldr	r1, [r0, #4]
9001a5de:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001a5e2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a5e6:	fb01 2404 	mla	r4, r1, r4, r2
9001a5ea:	6802      	ldr	r2, [r0, #0]
9001a5ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a5f0:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a5f4:	3201      	adds	r2, #1
9001a5f6:	f022 0201 	bic.w	r2, r2, #1
9001a5fa:	9202      	str	r2, [sp, #8]
9001a5fc:	f8db 2000 	ldr.w	r2, [fp]
9001a600:	9203      	str	r2, [sp, #12]
9001a602:	9a01      	ldr	r2, [sp, #4]
9001a604:	2a00      	cmp	r2, #0
9001a606:	dc03      	bgt.n	9001a610 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a608:	9a05      	ldr	r2, [sp, #20]
9001a60a:	2a00      	cmp	r2, #0
9001a60c:	f340 8162 	ble.w	9001a8d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a610:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a612:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001a616:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a61a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a61c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001a620:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a624:	2b00      	cmp	r3, #0
9001a626:	dd0e      	ble.n	9001a646 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a628:	1402      	asrs	r2, r0, #16
9001a62a:	d405      	bmi.n	9001a638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a62c:	42ba      	cmp	r2, r7
9001a62e:	da03      	bge.n	9001a638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a630:	140a      	asrs	r2, r1, #16
9001a632:	d401      	bmi.n	9001a638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a634:	42b2      	cmp	r2, r6
9001a636:	db07      	blt.n	9001a648 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a638:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a63a:	3b01      	subs	r3, #1
9001a63c:	3402      	adds	r4, #2
9001a63e:	4410      	add	r0, r2
9001a640:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a642:	4411      	add	r1, r2
9001a644:	e7ee      	b.n	9001a624 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a646:	d017      	beq.n	9001a678 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a648:	1e5a      	subs	r2, r3, #1
9001a64a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a64c:	fb05 0502 	mla	r5, r5, r2, r0
9001a650:	142d      	asrs	r5, r5, #16
9001a652:	d409      	bmi.n	9001a668 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a654:	42bd      	cmp	r5, r7
9001a656:	da07      	bge.n	9001a668 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a658:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a65a:	fb05 1202 	mla	r2, r5, r2, r1
9001a65e:	1412      	asrs	r2, r2, #16
9001a660:	d402      	bmi.n	9001a668 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a662:	42b2      	cmp	r2, r6
9001a664:	f2c0 80c3 	blt.w	9001a7ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001a668:	2500      	movs	r5, #0
9001a66a:	195a      	adds	r2, r3, r5
9001a66c:	2a00      	cmp	r2, #0
9001a66e:	dc3f      	bgt.n	9001a6f0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a670:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a674:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a678:	9b01      	ldr	r3, [sp, #4]
9001a67a:	2b00      	cmp	r3, #0
9001a67c:	f340 812a 	ble.w	9001a8d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a680:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a684:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a686:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a68a:	eeb0 6a62 	vmov.f32	s12, s5
9001a68e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a692:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a696:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a69a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a69e:	eeb0 6a43 	vmov.f32	s12, s6
9001a6a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a6a6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a6aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a6ae:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a6b2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a6b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a6ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a6be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a6c2:	ee12 2a90 	vmov	r2, s5
9001a6c6:	eef0 2a47 	vmov.f32	s5, s14
9001a6ca:	fb92 f3f3 	sdiv	r3, r2, r3
9001a6ce:	ee13 2a10 	vmov	r2, s6
9001a6d2:	9313      	str	r3, [sp, #76]	; 0x4c
9001a6d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a6d6:	eeb0 3a67 	vmov.f32	s6, s15
9001a6da:	fb92 f3f3 	sdiv	r3, r2, r3
9001a6de:	9314      	str	r3, [sp, #80]	; 0x50
9001a6e0:	9b01      	ldr	r3, [sp, #4]
9001a6e2:	9a05      	ldr	r2, [sp, #20]
9001a6e4:	3b01      	subs	r3, #1
9001a6e6:	9301      	str	r3, [sp, #4]
9001a6e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a6ea:	bf08      	it	eq
9001a6ec:	4613      	moveq	r3, r2
9001a6ee:	e788      	b.n	9001a602 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a6f0:	1406      	asrs	r6, r0, #16
9001a6f2:	d42c      	bmi.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a6f4:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a6f8:	42b2      	cmp	r2, r6
9001a6fa:	dd28      	ble.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a6fc:	140f      	asrs	r7, r1, #16
9001a6fe:	d426      	bmi.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a700:	f8db 200c 	ldr.w	r2, [fp, #12]
9001a704:	42ba      	cmp	r2, r7
9001a706:	dd22      	ble.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a708:	9a02      	ldr	r2, [sp, #8]
9001a70a:	fb07 6602 	mla	r6, r7, r2, r6
9001a70e:	9f03      	ldr	r7, [sp, #12]
9001a710:	0872      	lsrs	r2, r6, #1
9001a712:	07f6      	lsls	r6, r6, #31
9001a714:	5cba      	ldrb	r2, [r7, r2]
9001a716:	bf54      	ite	pl
9001a718:	f002 020f 	andpl.w	r2, r2, #15
9001a71c:	1112      	asrmi	r2, r2, #4
9001a71e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a722:	b2d2      	uxtb	r2, r2
9001a724:	2aff      	cmp	r2, #255	; 0xff
9001a726:	d118      	bne.n	9001a75a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001a728:	f06f 0601 	mvn.w	r6, #1
9001a72c:	f8d8 2000 	ldr.w	r2, [r8]
9001a730:	fb06 f705 	mul.w	r7, r6, r5
9001a734:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001a738:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001a73c:	0956      	lsrs	r6, r2, #5
9001a73e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001a742:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a746:	ea4c 0606 	orr.w	r6, ip, r6
9001a74a:	4316      	orrs	r6, r2
9001a74c:	53e6      	strh	r6, [r4, r7]
9001a74e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a750:	3d01      	subs	r5, #1
9001a752:	4410      	add	r0, r2
9001a754:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a756:	4411      	add	r1, r2
9001a758:	e787      	b.n	9001a66a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a75a:	2a00      	cmp	r2, #0
9001a75c:	d0f7      	beq.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a75e:	f06f 0601 	mvn.w	r6, #1
9001a762:	f8d8 c000 	ldr.w	ip, [r8]
9001a766:	fa1f f982 	uxth.w	r9, r2
9001a76a:	43d2      	mvns	r2, r2
9001a76c:	436e      	muls	r6, r5
9001a76e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001a772:	b2d2      	uxtb	r2, r2
9001a774:	f834 e006 	ldrh.w	lr, [r4, r6]
9001a778:	fb1a fa09 	smulbb	sl, sl, r9
9001a77c:	9604      	str	r6, [sp, #16]
9001a77e:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001a782:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a786:	fb16 f609 	smulbb	r6, r6, r9
9001a78a:	fa5f fc8c 	uxtb.w	ip, ip
9001a78e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a792:	fb1c fc09 	smulbb	ip, ip, r9
9001a796:	fb07 6702 	mla	r7, r7, r2, r6
9001a79a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a79e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a7a2:	b2bf      	uxth	r7, r7
9001a7a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a7a8:	fa5f fe8e 	uxtb.w	lr, lr
9001a7ac:	fb06 a602 	mla	r6, r6, r2, sl
9001a7b0:	fb0e cc02 	mla	ip, lr, r2, ip
9001a7b4:	1c7a      	adds	r2, r7, #1
9001a7b6:	b2b6      	uxth	r6, r6
9001a7b8:	fa1f fc8c 	uxth.w	ip, ip
9001a7bc:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a7c0:	9a04      	ldr	r2, [sp, #16]
9001a7c2:	f10c 0a01 	add.w	sl, ip, #1
9001a7c6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a7ca:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001a7ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a7d2:	ea4a 0707 	orr.w	r7, sl, r7
9001a7d6:	f106 0a01 	add.w	sl, r6, #1
9001a7da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a7de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a7e2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a7e6:	ea47 070a 	orr.w	r7, r7, sl
9001a7ea:	52a7      	strh	r7, [r4, r2]
9001a7ec:	e7af      	b.n	9001a74e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a7ee:	f04f 0e00 	mov.w	lr, #0
9001a7f2:	eba3 020e 	sub.w	r2, r3, lr
9001a7f6:	2a00      	cmp	r2, #0
9001a7f8:	f77f af3a 	ble.w	9001a670 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a7fc:	1402      	asrs	r2, r0, #16
9001a7fe:	9e02      	ldr	r6, [sp, #8]
9001a800:	140d      	asrs	r5, r1, #16
9001a802:	fb06 2505 	mla	r5, r6, r5, r2
9001a806:	9e03      	ldr	r6, [sp, #12]
9001a808:	086a      	lsrs	r2, r5, #1
9001a80a:	07ed      	lsls	r5, r5, #31
9001a80c:	5cb2      	ldrb	r2, [r6, r2]
9001a80e:	bf54      	ite	pl
9001a810:	f002 020f 	andpl.w	r2, r2, #15
9001a814:	1112      	asrmi	r2, r2, #4
9001a816:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a81a:	b2d2      	uxtb	r2, r2
9001a81c:	2aff      	cmp	r2, #255	; 0xff
9001a81e:	d115      	bne.n	9001a84c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001a820:	f8d8 5000 	ldr.w	r5, [r8]
9001a824:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001a828:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001a82c:	096a      	lsrs	r2, r5, #5
9001a82e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a832:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a836:	4332      	orrs	r2, r6
9001a838:	432a      	orrs	r2, r5
9001a83a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001a83e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a840:	f10e 0e01 	add.w	lr, lr, #1
9001a844:	4410      	add	r0, r2
9001a846:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a848:	4411      	add	r1, r2
9001a84a:	e7d2      	b.n	9001a7f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001a84c:	2a00      	cmp	r2, #0
9001a84e:	d0f6      	beq.n	9001a83e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001a850:	f8d8 7000 	ldr.w	r7, [r8]
9001a854:	fa1f f982 	uxth.w	r9, r2
9001a858:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a85c:	43d2      	mvns	r2, r2
9001a85e:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001a862:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001a866:	ea4f 262c 	mov.w	r6, ip, asr #8
9001a86a:	fb15 f509 	smulbb	r5, r5, r9
9001a86e:	b2d2      	uxtb	r2, r2
9001a870:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001a874:	b2ff      	uxtb	r7, r7
9001a876:	fb1a fa09 	smulbb	sl, sl, r9
9001a87a:	fb06 5602 	mla	r6, r6, r2, r5
9001a87e:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001a882:	fb17 f709 	smulbb	r7, r7, r9
9001a886:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a88a:	b2b6      	uxth	r6, r6
9001a88c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001a890:	fa5f fc8c 	uxtb.w	ip, ip
9001a894:	fb05 a502 	mla	r5, r5, r2, sl
9001a898:	fb0c 7702 	mla	r7, ip, r2, r7
9001a89c:	1c72      	adds	r2, r6, #1
9001a89e:	b2ad      	uxth	r5, r5
9001a8a0:	b2bf      	uxth	r7, r7
9001a8a2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001a8a6:	f107 0a01 	add.w	sl, r7, #1
9001a8aa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001a8ae:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a8b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a8b6:	ea4a 0606 	orr.w	r6, sl, r6
9001a8ba:	f105 0a01 	add.w	sl, r5, #1
9001a8be:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a8c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a8c6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a8ca:	ea46 060a 	orr.w	r6, r6, sl
9001a8ce:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001a8d2:	e7b4      	b.n	9001a83e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001a8d4:	b007      	add	sp, #28
9001a8d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a8da:	bf00      	nop
9001a8dc:	2402357c 	.word	0x2402357c

9001a8e0 <_ZN8touchgfx8LCD16bppD1Ev>:
9001a8e0:	4770      	bx	lr

9001a8e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001a8e2:	4770      	bx	lr

9001a8e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001a8e4:	4770      	bx	lr

9001a8e6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001a8e6:	4770      	bx	lr

9001a8e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001a8e8:	4770      	bx	lr

9001a8ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001a8ea:	4770      	bx	lr

9001a8ec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001a8ec:	4770      	bx	lr

9001a8ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001a8ee:	4770      	bx	lr

9001a8f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a8f0:	4770      	bx	lr

9001a8f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a8f2:	4770      	bx	lr

9001a8f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a8f4:	4770      	bx	lr

9001a8f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a8f6:	4770      	bx	lr

9001a8f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a8f8:	4770      	bx	lr

9001a8fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001a8fa:	4770      	bx	lr

9001a8fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a8fc:	4770      	bx	lr

9001a8fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a8fe:	4770      	bx	lr

9001a900 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a900:	4770      	bx	lr

9001a902 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001a902:	4770      	bx	lr

9001a904 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a904:	4770      	bx	lr

9001a906 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a906:	4770      	bx	lr

9001a908 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001a908:	4770      	bx	lr

9001a90a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001a90a:	4770      	bx	lr

9001a90c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001a90c:	4770      	bx	lr

9001a90e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001a90e:	4770      	bx	lr

9001a910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a910:	4770      	bx	lr

9001a912 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001a912:	4770      	bx	lr

9001a914 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a914:	4770      	bx	lr

9001a916 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001a916:	4770      	bx	lr

9001a918 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001a918:	4770      	bx	lr

9001a91a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001a91a:	4770      	bx	lr

9001a91c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001a91c:	4770      	bx	lr

9001a91e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001a91e:	4770      	bx	lr

9001a920 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001a920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001a924:	b088      	sub	sp, #32
9001a926:	4606      	mov	r6, r0
9001a928:	4688      	mov	r8, r1
9001a92a:	4691      	mov	r9, r2
9001a92c:	ac08      	add	r4, sp, #32
9001a92e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001a932:	4620      	mov	r0, r4
9001a934:	f7fd fc64 	bl	90018200 <_ZNK8touchgfx6Bitmap7getDataEv>
9001a938:	6833      	ldr	r3, [r6, #0]
9001a93a:	4605      	mov	r5, r0
9001a93c:	4620      	mov	r0, r4
9001a93e:	699f      	ldr	r7, [r3, #24]
9001a940:	f7fd fb72 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001a944:	4682      	mov	sl, r0
9001a946:	4620      	mov	r0, r4
9001a948:	f7fd fba2 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001a94c:	9500      	str	r5, [sp, #0]
9001a94e:	464b      	mov	r3, r9
9001a950:	4642      	mov	r2, r8
9001a952:	4631      	mov	r1, r6
9001a954:	e9cd a001 	strd	sl, r0, [sp, #4]
9001a958:	a806      	add	r0, sp, #24
9001a95a:	47b8      	blx	r7
9001a95c:	4628      	mov	r0, r5
9001a95e:	b008      	add	sp, #32
9001a960:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001a964 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001a964:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001a968:	2300      	movs	r3, #0
9001a96a:	9300      	str	r3, [sp, #0]
9001a96c:	4b3d      	ldr	r3, [pc, #244]	; (9001aa64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001a96e:	781b      	ldrb	r3, [r3, #0]
9001a970:	2b00      	cmp	r3, #0
9001a972:	d137      	bne.n	9001a9e4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001a974:	4a3c      	ldr	r2, [pc, #240]	; (9001aa68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001a976:	f9b2 2000 	ldrsh.w	r2, [r2]
9001a97a:	f8ad 2004 	strh.w	r2, [sp, #4]
9001a97e:	2b00      	cmp	r3, #0
9001a980:	d132      	bne.n	9001a9e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001a982:	4b3a      	ldr	r3, [pc, #232]	; (9001aa6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001a984:	f9b3 3000 	ldrsh.w	r3, [r3]
9001a988:	ac02      	add	r4, sp, #8
9001a98a:	6808      	ldr	r0, [r1, #0]
9001a98c:	f8ad 3006 	strh.w	r3, [sp, #6]
9001a990:	ab02      	add	r3, sp, #8
9001a992:	6849      	ldr	r1, [r1, #4]
9001a994:	4d36      	ldr	r5, [pc, #216]	; (9001aa70 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001a996:	c303      	stmia	r3!, {r0, r1}
9001a998:	4669      	mov	r1, sp
9001a99a:	4620      	mov	r0, r4
9001a99c:	f7fa f892 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001a9a0:	4668      	mov	r0, sp
9001a9a2:	f7fa f84b 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001a9a6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001a9aa:	f8bd 2000 	ldrh.w	r2, [sp]
9001a9ae:	462f      	mov	r7, r5
9001a9b0:	6828      	ldr	r0, [r5, #0]
9001a9b2:	4413      	add	r3, r2
9001a9b4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001a9b8:	f8ad 3008 	strh.w	r3, [sp, #8]
9001a9bc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001a9c0:	4413      	add	r3, r2
9001a9c2:	f8ad 300a 	strh.w	r3, [sp, #10]
9001a9c6:	6803      	ldr	r3, [r0, #0]
9001a9c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001a9ca:	4798      	blx	r3
9001a9cc:	f010 0f01 	tst.w	r0, #1
9001a9d0:	d00c      	beq.n	9001a9ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001a9d2:	6828      	ldr	r0, [r5, #0]
9001a9d4:	6803      	ldr	r3, [r0, #0]
9001a9d6:	e894 0006 	ldmia.w	r4, {r1, r2}
9001a9da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001a9dc:	4798      	blx	r3
9001a9de:	b004      	add	sp, #16
9001a9e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001a9e4:	4a21      	ldr	r2, [pc, #132]	; (9001aa6c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001a9e6:	e7c6      	b.n	9001a976 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001a9e8:	4b1f      	ldr	r3, [pc, #124]	; (9001aa68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001a9ea:	e7cb      	b.n	9001a984 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001a9ec:	6838      	ldr	r0, [r7, #0]
9001a9ee:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001a9f2:	6803      	ldr	r3, [r0, #0]
9001a9f4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001a9f8:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001a9fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001a9fe:	4798      	blx	r3
9001aa00:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001aa04:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001aa08:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001aa0c:	fb16 3602 	smlabb	r6, r6, r2, r3
9001aa10:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001aa14:	6838      	ldr	r0, [r7, #0]
9001aa16:	6803      	ldr	r3, [r0, #0]
9001aa18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001aa1a:	4798      	blx	r3
9001aa1c:	4a12      	ldr	r2, [pc, #72]	; (9001aa68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001aa1e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001aa22:	8813      	ldrh	r3, [r2, #0]
9001aa24:	4691      	mov	r9, r2
9001aa26:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001aa2a:	435d      	muls	r5, r3
9001aa2c:	fb03 1404 	mla	r4, r3, r4, r1
9001aa30:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001aa34:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001aa38:	6838      	ldr	r0, [r7, #0]
9001aa3a:	42ac      	cmp	r4, r5
9001aa3c:	6803      	ldr	r3, [r0, #0]
9001aa3e:	d20e      	bcs.n	9001aa5e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001aa40:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001aa44:	4632      	mov	r2, r6
9001aa46:	4643      	mov	r3, r8
9001aa48:	4621      	mov	r1, r4
9001aa4a:	47d0      	blx	sl
9001aa4c:	f8b9 3000 	ldrh.w	r3, [r9]
9001aa50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001aa54:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001aa58:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001aa5c:	e7ec      	b.n	9001aa38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001aa5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001aa60:	4798      	blx	r3
9001aa62:	e7bc      	b.n	9001a9de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001aa64:	24023564 	.word	0x24023564
9001aa68:	24023566 	.word	0x24023566
9001aa6c:	24023568 	.word	0x24023568
9001aa70:	2402356c 	.word	0x2402356c

9001aa74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001aa74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aa78:	b08b      	sub	sp, #44	; 0x2c
9001aa7a:	460f      	mov	r7, r1
9001aa7c:	4616      	mov	r6, r2
9001aa7e:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001aa82:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001aa86:	f1bb 0f00 	cmp.w	fp, #0
9001aa8a:	d04a      	beq.n	9001ab22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001aa8c:	6810      	ldr	r0, [r2, #0]
9001aa8e:	ad06      	add	r5, sp, #24
9001aa90:	6851      	ldr	r1, [r2, #4]
9001aa92:	c503      	stmia	r5!, {r0, r1}
9001aa94:	6818      	ldr	r0, [r3, #0]
9001aa96:	ad08      	add	r5, sp, #32
9001aa98:	6859      	ldr	r1, [r3, #4]
9001aa9a:	c503      	stmia	r5!, {r0, r1}
9001aa9c:	a806      	add	r0, sp, #24
9001aa9e:	f7f9 ffcd 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001aaa2:	4631      	mov	r1, r6
9001aaa4:	a808      	add	r0, sp, #32
9001aaa6:	f7fa f80d 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001aaaa:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001aaae:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001aab2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001aab6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001aaba:	fb16 2103 	smlabb	r1, r6, r3, r2
9001aabe:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001aac2:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001aac6:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001aaca:	4f5f      	ldr	r7, [pc, #380]	; (9001ac48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001aacc:	440a      	add	r2, r1
9001aace:	6838      	ldr	r0, [r7, #0]
9001aad0:	46b9      	mov	r9, r7
9001aad2:	f8ad 2020 	strh.w	r2, [sp, #32]
9001aad6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001aada:	4413      	add	r3, r2
9001aadc:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001aae0:	6803      	ldr	r3, [r0, #0]
9001aae2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001aae4:	4798      	blx	r3
9001aae6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001aaea:	d11d      	bne.n	9001ab28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001aaec:	b9fc      	cbnz	r4, 9001ab2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001aaee:	f010 0f01 	tst.w	r0, #1
9001aaf2:	d01c      	beq.n	9001ab2e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001aaf4:	f8d9 0000 	ldr.w	r0, [r9]
9001aaf8:	2700      	movs	r7, #0
9001aafa:	b2ad      	uxth	r5, r5
9001aafc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001ab00:	6801      	ldr	r1, [r0, #0]
9001ab02:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001ab06:	f8cd b00c 	str.w	fp, [sp, #12]
9001ab0a:	9501      	str	r5, [sp, #4]
9001ab0c:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001ab10:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001ab14:	9402      	str	r4, [sp, #8]
9001ab16:	fa1f f488 	uxth.w	r4, r8
9001ab1a:	9400      	str	r4, [sp, #0]
9001ab1c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001ab1e:	4631      	mov	r1, r6
9001ab20:	47a0      	blx	r4
9001ab22:	b00b      	add	sp, #44	; 0x2c
9001ab24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ab28:	f010 0f04 	tst.w	r0, #4
9001ab2c:	e7e1      	b.n	9001aaf2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001ab2e:	f8d9 0000 	ldr.w	r0, [r9]
9001ab32:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001ab36:	6803      	ldr	r3, [r0, #0]
9001ab38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ab3a:	4798      	blx	r3
9001ab3c:	4b43      	ldr	r3, [pc, #268]	; (9001ac4c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001ab3e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001ab42:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001ab46:	881a      	ldrh	r2, [r3, #0]
9001ab48:	469a      	mov	sl, r3
9001ab4a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001ab4e:	fb05 f502 	mul.w	r5, r5, r2
9001ab52:	fb02 1404 	mla	r4, r2, r4, r1
9001ab56:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001ab5a:	d059      	beq.n	9001ac10 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001ab5c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001ab60:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ab64:	fa1f f28b 	uxth.w	r2, fp
9001ab68:	469e      	mov	lr, r3
9001ab6a:	fa1f f989 	uxth.w	r9, r9
9001ab6e:	42ac      	cmp	r4, r5
9001ab70:	d264      	bcs.n	9001ac3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ab72:	eb04 0a07 	add.w	sl, r4, r7
9001ab76:	4554      	cmp	r4, sl
9001ab78:	d23d      	bcs.n	9001abf6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001ab7a:	8821      	ldrh	r1, [r4, #0]
9001ab7c:	f836 3b02 	ldrh.w	r3, [r6], #2
9001ab80:	1208      	asrs	r0, r1, #8
9001ab82:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001ab86:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ab8a:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001ab8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ab92:	00c9      	lsls	r1, r1, #3
9001ab94:	fb10 f009 	smulbb	r0, r0, r9
9001ab98:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001ab9c:	b2c9      	uxtb	r1, r1
9001ab9e:	fb0c 0c02 	mla	ip, ip, r2, r0
9001aba2:	10d8      	asrs	r0, r3, #3
9001aba4:	fb1b fb09 	smulbb	fp, fp, r9
9001aba8:	00db      	lsls	r3, r3, #3
9001abaa:	fa1f fc8c 	uxth.w	ip, ip
9001abae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001abb2:	fb11 f109 	smulbb	r1, r1, r9
9001abb6:	b2db      	uxtb	r3, r3
9001abb8:	fb00 b002 	mla	r0, r0, r2, fp
9001abbc:	f10c 0b01 	add.w	fp, ip, #1
9001abc0:	fb03 1302 	mla	r3, r3, r2, r1
9001abc4:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001abc8:	b29b      	uxth	r3, r3
9001abca:	b280      	uxth	r0, r0
9001abcc:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001abd0:	f103 0c01 	add.w	ip, r3, #1
9001abd4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001abd8:	1c43      	adds	r3, r0, #1
9001abda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001abde:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001abe2:	0940      	lsrs	r0, r0, #5
9001abe4:	ea4c 0c0b 	orr.w	ip, ip, fp
9001abe8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001abec:	ea4c 0c00 	orr.w	ip, ip, r0
9001abf0:	f824 cb02 	strh.w	ip, [r4], #2
9001abf4:	e7bf      	b.n	9001ab76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001abf6:	f8be 3000 	ldrh.w	r3, [lr]
9001abfa:	eba3 0308 	sub.w	r3, r3, r8
9001abfe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac02:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ac06:	eba3 0308 	sub.w	r3, r3, r8
9001ac0a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ac0e:	e7ae      	b.n	9001ab6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001ac10:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ac14:	f8d9 0000 	ldr.w	r0, [r9]
9001ac18:	42ac      	cmp	r4, r5
9001ac1a:	6803      	ldr	r3, [r0, #0]
9001ac1c:	d20e      	bcs.n	9001ac3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ac1e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001ac22:	4632      	mov	r2, r6
9001ac24:	463b      	mov	r3, r7
9001ac26:	4621      	mov	r1, r4
9001ac28:	47c0      	blx	r8
9001ac2a:	f8ba 3000 	ldrh.w	r3, [sl]
9001ac2e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ac32:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ac36:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ac3a:	e7eb      	b.n	9001ac14 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001ac3c:	4b02      	ldr	r3, [pc, #8]	; (9001ac48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ac3e:	6818      	ldr	r0, [r3, #0]
9001ac40:	6803      	ldr	r3, [r0, #0]
9001ac42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ac44:	4798      	blx	r3
9001ac46:	e76c      	b.n	9001ab22 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001ac48:	2402356c 	.word	0x2402356c
9001ac4c:	24023566 	.word	0x24023566

9001ac50 <_ZN8touchgfx8LCD16bppD0Ev>:
9001ac50:	b510      	push	{r4, lr}
9001ac52:	4604      	mov	r4, r0
9001ac54:	2188      	movs	r1, #136	; 0x88
9001ac56:	f00b f9f4 	bl	90026042 <_ZdlPvj>
9001ac5a:	4620      	mov	r0, r4
9001ac5c:	bd10      	pop	{r4, pc}

9001ac5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001ac5e:	b510      	push	{r4, lr}
9001ac60:	4604      	mov	r4, r0
9001ac62:	2104      	movs	r1, #4
9001ac64:	f00b f9ed 	bl	90026042 <_ZdlPvj>
9001ac68:	4620      	mov	r0, r4
9001ac6a:	bd10      	pop	{r4, pc}

9001ac6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001ac6c:	b510      	push	{r4, lr}
9001ac6e:	4604      	mov	r4, r0
9001ac70:	2104      	movs	r1, #4
9001ac72:	f00b f9e6 	bl	90026042 <_ZdlPvj>
9001ac76:	4620      	mov	r0, r4
9001ac78:	bd10      	pop	{r4, pc}

9001ac7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001ac7a:	b510      	push	{r4, lr}
9001ac7c:	4604      	mov	r4, r0
9001ac7e:	f640 0144 	movw	r1, #2116	; 0x844
9001ac82:	f00b f9de 	bl	90026042 <_ZdlPvj>
9001ac86:	4620      	mov	r0, r4
9001ac88:	bd10      	pop	{r4, pc}

9001ac8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ac8a:	b510      	push	{r4, lr}
9001ac8c:	4604      	mov	r4, r0
9001ac8e:	2104      	movs	r1, #4
9001ac90:	f00b f9d7 	bl	90026042 <_ZdlPvj>
9001ac94:	4620      	mov	r0, r4
9001ac96:	bd10      	pop	{r4, pc}

9001ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ac98:	b510      	push	{r4, lr}
9001ac9a:	4604      	mov	r4, r0
9001ac9c:	2104      	movs	r1, #4
9001ac9e:	f00b f9d0 	bl	90026042 <_ZdlPvj>
9001aca2:	4620      	mov	r0, r4
9001aca4:	bd10      	pop	{r4, pc}

9001aca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001aca6:	b510      	push	{r4, lr}
9001aca8:	4604      	mov	r4, r0
9001acaa:	2104      	movs	r1, #4
9001acac:	f00b f9c9 	bl	90026042 <_ZdlPvj>
9001acb0:	4620      	mov	r0, r4
9001acb2:	bd10      	pop	{r4, pc}

9001acb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001acb4:	b510      	push	{r4, lr}
9001acb6:	4604      	mov	r4, r0
9001acb8:	2104      	movs	r1, #4
9001acba:	f00b f9c2 	bl	90026042 <_ZdlPvj>
9001acbe:	4620      	mov	r0, r4
9001acc0:	bd10      	pop	{r4, pc}

9001acc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001acc2:	b510      	push	{r4, lr}
9001acc4:	4604      	mov	r4, r0
9001acc6:	2104      	movs	r1, #4
9001acc8:	f00b f9bb 	bl	90026042 <_ZdlPvj>
9001accc:	4620      	mov	r0, r4
9001acce:	bd10      	pop	{r4, pc}

9001acd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001acd0:	b510      	push	{r4, lr}
9001acd2:	4604      	mov	r4, r0
9001acd4:	2104      	movs	r1, #4
9001acd6:	f00b f9b4 	bl	90026042 <_ZdlPvj>
9001acda:	4620      	mov	r0, r4
9001acdc:	bd10      	pop	{r4, pc}

9001acde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001acde:	b510      	push	{r4, lr}
9001ace0:	4604      	mov	r4, r0
9001ace2:	2104      	movs	r1, #4
9001ace4:	f00b f9ad 	bl	90026042 <_ZdlPvj>
9001ace8:	4620      	mov	r0, r4
9001acea:	bd10      	pop	{r4, pc}

9001acec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001acec:	b510      	push	{r4, lr}
9001acee:	4604      	mov	r4, r0
9001acf0:	2104      	movs	r1, #4
9001acf2:	f00b f9a6 	bl	90026042 <_ZdlPvj>
9001acf6:	4620      	mov	r0, r4
9001acf8:	bd10      	pop	{r4, pc}

9001acfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001acfa:	b510      	push	{r4, lr}
9001acfc:	4604      	mov	r4, r0
9001acfe:	2104      	movs	r1, #4
9001ad00:	f00b f99f 	bl	90026042 <_ZdlPvj>
9001ad04:	4620      	mov	r0, r4
9001ad06:	bd10      	pop	{r4, pc}

9001ad08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ad08:	b510      	push	{r4, lr}
9001ad0a:	4604      	mov	r4, r0
9001ad0c:	2104      	movs	r1, #4
9001ad0e:	f00b f998 	bl	90026042 <_ZdlPvj>
9001ad12:	4620      	mov	r0, r4
9001ad14:	bd10      	pop	{r4, pc}

9001ad16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ad16:	b510      	push	{r4, lr}
9001ad18:	4604      	mov	r4, r0
9001ad1a:	2104      	movs	r1, #4
9001ad1c:	f00b f991 	bl	90026042 <_ZdlPvj>
9001ad20:	4620      	mov	r0, r4
9001ad22:	bd10      	pop	{r4, pc}

9001ad24 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ad24:	b510      	push	{r4, lr}
9001ad26:	4604      	mov	r4, r0
9001ad28:	2104      	movs	r1, #4
9001ad2a:	f00b f98a 	bl	90026042 <_ZdlPvj>
9001ad2e:	4620      	mov	r0, r4
9001ad30:	bd10      	pop	{r4, pc}

9001ad32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ad32:	b510      	push	{r4, lr}
9001ad34:	4604      	mov	r4, r0
9001ad36:	2104      	movs	r1, #4
9001ad38:	f00b f983 	bl	90026042 <_ZdlPvj>
9001ad3c:	4620      	mov	r0, r4
9001ad3e:	bd10      	pop	{r4, pc}

9001ad40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ad40:	b510      	push	{r4, lr}
9001ad42:	4604      	mov	r4, r0
9001ad44:	2104      	movs	r1, #4
9001ad46:	f00b f97c 	bl	90026042 <_ZdlPvj>
9001ad4a:	4620      	mov	r0, r4
9001ad4c:	bd10      	pop	{r4, pc}

9001ad4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ad4e:	b510      	push	{r4, lr}
9001ad50:	4604      	mov	r4, r0
9001ad52:	2104      	movs	r1, #4
9001ad54:	f00b f975 	bl	90026042 <_ZdlPvj>
9001ad58:	4620      	mov	r0, r4
9001ad5a:	bd10      	pop	{r4, pc}

9001ad5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ad5c:	b510      	push	{r4, lr}
9001ad5e:	4604      	mov	r4, r0
9001ad60:	2104      	movs	r1, #4
9001ad62:	f00b f96e 	bl	90026042 <_ZdlPvj>
9001ad66:	4620      	mov	r0, r4
9001ad68:	bd10      	pop	{r4, pc}

9001ad6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ad6a:	b510      	push	{r4, lr}
9001ad6c:	4604      	mov	r4, r0
9001ad6e:	2104      	movs	r1, #4
9001ad70:	f00b f967 	bl	90026042 <_ZdlPvj>
9001ad74:	4620      	mov	r0, r4
9001ad76:	bd10      	pop	{r4, pc}

9001ad78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ad78:	b510      	push	{r4, lr}
9001ad7a:	4604      	mov	r4, r0
9001ad7c:	2104      	movs	r1, #4
9001ad7e:	f00b f960 	bl	90026042 <_ZdlPvj>
9001ad82:	4620      	mov	r0, r4
9001ad84:	bd10      	pop	{r4, pc}

9001ad86 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ad86:	b510      	push	{r4, lr}
9001ad88:	4604      	mov	r4, r0
9001ad8a:	2104      	movs	r1, #4
9001ad8c:	f00b f959 	bl	90026042 <_ZdlPvj>
9001ad90:	4620      	mov	r0, r4
9001ad92:	bd10      	pop	{r4, pc}

9001ad94 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ad94:	b510      	push	{r4, lr}
9001ad96:	4604      	mov	r4, r0
9001ad98:	2104      	movs	r1, #4
9001ad9a:	f00b f952 	bl	90026042 <_ZdlPvj>
9001ad9e:	4620      	mov	r0, r4
9001ada0:	bd10      	pop	{r4, pc}

9001ada2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ada2:	b510      	push	{r4, lr}
9001ada4:	4604      	mov	r4, r0
9001ada6:	2104      	movs	r1, #4
9001ada8:	f00b f94b 	bl	90026042 <_ZdlPvj>
9001adac:	4620      	mov	r0, r4
9001adae:	bd10      	pop	{r4, pc}

9001adb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001adb0:	b510      	push	{r4, lr}
9001adb2:	4604      	mov	r4, r0
9001adb4:	2104      	movs	r1, #4
9001adb6:	f00b f944 	bl	90026042 <_ZdlPvj>
9001adba:	4620      	mov	r0, r4
9001adbc:	bd10      	pop	{r4, pc}

9001adbe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001adbe:	b510      	push	{r4, lr}
9001adc0:	4604      	mov	r4, r0
9001adc2:	2104      	movs	r1, #4
9001adc4:	f00b f93d 	bl	90026042 <_ZdlPvj>
9001adc8:	4620      	mov	r0, r4
9001adca:	bd10      	pop	{r4, pc}

9001adcc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001adcc:	b510      	push	{r4, lr}
9001adce:	4604      	mov	r4, r0
9001add0:	2104      	movs	r1, #4
9001add2:	f00b f936 	bl	90026042 <_ZdlPvj>
9001add6:	4620      	mov	r0, r4
9001add8:	bd10      	pop	{r4, pc}

9001adda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001adda:	b510      	push	{r4, lr}
9001addc:	4604      	mov	r4, r0
9001adde:	2104      	movs	r1, #4
9001ade0:	f00b f92f 	bl	90026042 <_ZdlPvj>
9001ade4:	4620      	mov	r0, r4
9001ade6:	bd10      	pop	{r4, pc}

9001ade8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001ade8:	b510      	push	{r4, lr}
9001adea:	4604      	mov	r4, r0
9001adec:	2104      	movs	r1, #4
9001adee:	f00b f928 	bl	90026042 <_ZdlPvj>
9001adf2:	4620      	mov	r0, r4
9001adf4:	bd10      	pop	{r4, pc}

9001adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001adf6:	b510      	push	{r4, lr}
9001adf8:	4604      	mov	r4, r0
9001adfa:	2104      	movs	r1, #4
9001adfc:	f00b f921 	bl	90026042 <_ZdlPvj>
9001ae00:	4620      	mov	r0, r4
9001ae02:	bd10      	pop	{r4, pc}

9001ae04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001ae04:	b510      	push	{r4, lr}
9001ae06:	4604      	mov	r4, r0
9001ae08:	2104      	movs	r1, #4
9001ae0a:	f00b f91a 	bl	90026042 <_ZdlPvj>
9001ae0e:	4620      	mov	r0, r4
9001ae10:	bd10      	pop	{r4, pc}
	...

9001ae14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001ae14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ae18:	b08f      	sub	sp, #60	; 0x3c
9001ae1a:	461c      	mov	r4, r3
9001ae1c:	9205      	str	r2, [sp, #20]
9001ae1e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001ae22:	9100      	str	r1, [sp, #0]
9001ae24:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001ae26:	9201      	str	r2, [sp, #4]
9001ae28:	2a00      	cmp	r2, #0
9001ae2a:	f000 8116 	beq.w	9001b05a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001ae2e:	6820      	ldr	r0, [r4, #0]
9001ae30:	aa0a      	add	r2, sp, #40	; 0x28
9001ae32:	6861      	ldr	r1, [r4, #4]
9001ae34:	c203      	stmia	r2!, {r0, r1}
9001ae36:	6818      	ldr	r0, [r3, #0]
9001ae38:	aa0c      	add	r2, sp, #48	; 0x30
9001ae3a:	6859      	ldr	r1, [r3, #4]
9001ae3c:	c203      	stmia	r2!, {r0, r1}
9001ae3e:	a80a      	add	r0, sp, #40	; 0x28
9001ae40:	f7f9 fdfc 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ae44:	4621      	mov	r1, r4
9001ae46:	a80c      	add	r0, sp, #48	; 0x30
9001ae48:	f7f9 fe3c 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ae4c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001ae50:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001ae54:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001ae58:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001ae5c:	bfdb      	ittet	le
9001ae5e:	b2b3      	uxthle	r3, r6
9001ae60:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001ae64:	2301      	movgt	r3, #1
9001ae66:	fb92 f3f3 	sdivle	r3, r2, r3
9001ae6a:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001ae6e:	441d      	add	r5, r3
9001ae70:	fb92 f1f3 	sdiv	r1, r2, r3
9001ae74:	fa1f fc81 	uxth.w	ip, r1
9001ae78:	3d01      	subs	r5, #1
9001ae7a:	fb0c 2413 	mls	r4, ip, r3, r2
9001ae7e:	4661      	mov	r1, ip
9001ae80:	fb14 f406 	smulbb	r4, r4, r6
9001ae84:	4404      	add	r4, r0
9001ae86:	fb95 f5f3 	sdiv	r5, r5, r3
9001ae8a:	b2a4      	uxth	r4, r4
9001ae8c:	b131      	cbz	r1, 9001ae9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001ae8e:	9b05      	ldr	r3, [sp, #20]
9001ae90:	9900      	ldr	r1, [sp, #0]
9001ae92:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001ae96:	ba1b      	rev	r3, r3
9001ae98:	4419      	add	r1, r3
9001ae9a:	9100      	str	r1, [sp, #0]
9001ae9c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001aea0:	b2ad      	uxth	r5, r5
9001aea2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001aea6:	4418      	add	r0, r3
9001aea8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001aeac:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001aeb0:	00ad      	lsls	r5, r5, #2
9001aeb2:	441a      	add	r2, r3
9001aeb4:	4b6a      	ldr	r3, [pc, #424]	; (9001b060 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001aeb6:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001aeba:	6818      	ldr	r0, [r3, #0]
9001aebc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001aec0:	6803      	ldr	r3, [r0, #0]
9001aec2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001aec4:	4798      	blx	r3
9001aec6:	4967      	ldr	r1, [pc, #412]	; (9001b064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001aec8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001aecc:	2c00      	cmp	r4, #0
9001aece:	880b      	ldrh	r3, [r1, #0]
9001aed0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001aed4:	bf0c      	ite	eq
9001aed6:	46c6      	moveq	lr, r8
9001aed8:	f04f 0e00 	movne.w	lr, #0
9001aedc:	9109      	str	r1, [sp, #36]	; 0x24
9001aede:	fb03 c202 	mla	r2, r3, r2, ip
9001aee2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001aee6:	4373      	muls	r3, r6
9001aee8:	fa1f fe8e 	uxth.w	lr, lr
9001aeec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001aef0:	9103      	str	r1, [sp, #12]
9001aef2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001aef6:	9306      	str	r3, [sp, #24]
9001aef8:	1d2b      	adds	r3, r5, #4
9001aefa:	9307      	str	r3, [sp, #28]
9001aefc:	9b01      	ldr	r3, [sp, #4]
9001aefe:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001af02:	2300      	movs	r3, #0
9001af04:	b292      	uxth	r2, r2
9001af06:	9302      	str	r3, [sp, #8]
9001af08:	9204      	str	r2, [sp, #16]
9001af0a:	9a06      	ldr	r2, [sp, #24]
9001af0c:	4282      	cmp	r2, r0
9001af0e:	f240 809f 	bls.w	9001b050 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001af12:	b963      	cbnz	r3, 9001af2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001af14:	9b00      	ldr	r3, [sp, #0]
9001af16:	781a      	ldrb	r2, [r3, #0]
9001af18:	0993      	lsrs	r3, r2, #6
9001af1a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001af1e:	9202      	str	r2, [sp, #8]
9001af20:	1e5a      	subs	r2, r3, #1
9001af22:	2a02      	cmp	r2, #2
9001af24:	d815      	bhi.n	9001af52 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001af26:	9a00      	ldr	r2, [sp, #0]
9001af28:	b29b      	uxth	r3, r3
9001af2a:	3201      	adds	r2, #1
9001af2c:	9200      	str	r2, [sp, #0]
9001af2e:	b1b4      	cbz	r4, 9001af5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001af30:	429c      	cmp	r4, r3
9001af32:	bf91      	iteee	ls
9001af34:	1b1c      	subls	r4, r3, r4
9001af36:	1ae4      	subhi	r4, r4, r3
9001af38:	4671      	movhi	r1, lr
9001af3a:	f04f 0a00 	movhi.w	sl, #0
9001af3e:	bf9b      	ittet	ls
9001af40:	fa1f fa84 	uxthls.w	sl, r4
9001af44:	2400      	movls	r4, #0
9001af46:	b2a4      	uxthhi	r4, r4
9001af48:	fa1f f188 	uxthls.w	r1, r8
9001af4c:	4653      	mov	r3, sl
9001af4e:	468e      	mov	lr, r1
9001af50:	e7db      	b.n	9001af0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001af52:	9a00      	ldr	r2, [sp, #0]
9001af54:	9b00      	ldr	r3, [sp, #0]
9001af56:	3202      	adds	r2, #2
9001af58:	785b      	ldrb	r3, [r3, #1]
9001af5a:	9200      	str	r2, [sp, #0]
9001af5c:	e7e7      	b.n	9001af2e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001af5e:	2202      	movs	r2, #2
9001af60:	9907      	ldr	r1, [sp, #28]
9001af62:	4573      	cmp	r3, lr
9001af64:	4615      	mov	r5, r2
9001af66:	9a02      	ldr	r2, [sp, #8]
9001af68:	bf24      	itt	cs
9001af6a:	eba3 0a0e 	subcs.w	sl, r3, lr
9001af6e:	46f1      	movcs	r9, lr
9001af70:	fb15 1202 	smlabb	r2, r5, r2, r1
9001af74:	9905      	ldr	r1, [sp, #20]
9001af76:	bf34      	ite	cc
9001af78:	4699      	movcc	r9, r3
9001af7a:	fa1f fa8a 	uxthcs.w	sl, sl
9001af7e:	f831 c002 	ldrh.w	ip, [r1, r2]
9001af82:	bf38      	it	cc
9001af84:	ebae 0103 	subcc.w	r1, lr, r3
9001af88:	9a01      	ldr	r2, [sp, #4]
9001af8a:	bf2e      	itee	cs
9001af8c:	4621      	movcs	r1, r4
9001af8e:	b289      	uxthcc	r1, r1
9001af90:	46a2      	movcc	sl, r4
9001af92:	2aff      	cmp	r2, #255	; 0xff
9001af94:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001af98:	d105      	bne.n	9001afa6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001af9a:	4481      	add	r9, r0
9001af9c:	4581      	cmp	r9, r0
9001af9e:	d045      	beq.n	9001b02c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001afa0:	f820 cb02 	strh.w	ip, [r0], #2
9001afa4:	e7fa      	b.n	9001af9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001afa6:	ea4f 222c 	mov.w	r2, ip, asr #8
9001afaa:	9d03      	ldr	r5, [sp, #12]
9001afac:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001afb0:	4481      	add	r9, r0
9001afb2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001afb6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001afba:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001afbe:	fa5f fc8c 	uxtb.w	ip, ip
9001afc2:	436a      	muls	r2, r5
9001afc4:	fb0b fb05 	mul.w	fp, fp, r5
9001afc8:	fb0c fc05 	mul.w	ip, ip, r5
9001afcc:	9208      	str	r2, [sp, #32]
9001afce:	4581      	cmp	r9, r0
9001afd0:	d02c      	beq.n	9001b02c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001afd2:	8802      	ldrh	r2, [r0, #0]
9001afd4:	9d04      	ldr	r5, [sp, #16]
9001afd6:	1216      	asrs	r6, r2, #8
9001afd8:	9f04      	ldr	r7, [sp, #16]
9001afda:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001afde:	fb16 f605 	smulbb	r6, r6, r5
9001afe2:	9d08      	ldr	r5, [sp, #32]
9001afe4:	442e      	add	r6, r5
9001afe6:	10d5      	asrs	r5, r2, #3
9001afe8:	00d2      	lsls	r2, r2, #3
9001afea:	b2b6      	uxth	r6, r6
9001afec:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001aff0:	b2d2      	uxtb	r2, r2
9001aff2:	fb15 f507 	smulbb	r5, r5, r7
9001aff6:	fb12 f207 	smulbb	r2, r2, r7
9001affa:	1c77      	adds	r7, r6, #1
9001affc:	445d      	add	r5, fp
9001affe:	4462      	add	r2, ip
9001b000:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001b004:	b2ad      	uxth	r5, r5
9001b006:	b292      	uxth	r2, r2
9001b008:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b00c:	1c57      	adds	r7, r2, #1
9001b00e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001b012:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b016:	4316      	orrs	r6, r2
9001b018:	1c6a      	adds	r2, r5, #1
9001b01a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b01e:	096d      	lsrs	r5, r5, #5
9001b020:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b024:	432e      	orrs	r6, r5
9001b026:	f820 6b02 	strh.w	r6, [r0], #2
9001b02a:	e7d0      	b.n	9001afce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001b02c:	4573      	cmp	r3, lr
9001b02e:	d38d      	bcc.n	9001af4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b030:	fa1f f188 	uxth.w	r1, r8
9001b034:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b038:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b03a:	1a64      	subs	r4, r4, r1
9001b03c:	881b      	ldrh	r3, [r3, #0]
9001b03e:	b2a4      	uxth	r4, r4
9001b040:	eba3 0308 	sub.w	r3, r3, r8
9001b044:	2c00      	cmp	r4, #0
9001b046:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b04a:	bf18      	it	ne
9001b04c:	2100      	movne	r1, #0
9001b04e:	e77d      	b.n	9001af4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b050:	4b03      	ldr	r3, [pc, #12]	; (9001b060 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b052:	6818      	ldr	r0, [r3, #0]
9001b054:	6803      	ldr	r3, [r0, #0]
9001b056:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b058:	4798      	blx	r3
9001b05a:	b00f      	add	sp, #60	; 0x3c
9001b05c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b060:	2402356c 	.word	0x2402356c
9001b064:	24023566 	.word	0x24023566

9001b068 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b068:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b06c:	b09f      	sub	sp, #124	; 0x7c
9001b06e:	461d      	mov	r5, r3
9001b070:	4604      	mov	r4, r0
9001b072:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b074:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001b078:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001b07c:	9209      	str	r2, [sp, #36]	; 0x24
9001b07e:	2a00      	cmp	r2, #0
9001b080:	f000 81ed 	beq.w	9001b45e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001b084:	6828      	ldr	r0, [r5, #0]
9001b086:	aa1a      	add	r2, sp, #104	; 0x68
9001b088:	6869      	ldr	r1, [r5, #4]
9001b08a:	c203      	stmia	r2!, {r0, r1}
9001b08c:	6818      	ldr	r0, [r3, #0]
9001b08e:	aa1c      	add	r2, sp, #112	; 0x70
9001b090:	6859      	ldr	r1, [r3, #4]
9001b092:	c203      	stmia	r2!, {r0, r1}
9001b094:	a81a      	add	r0, sp, #104	; 0x68
9001b096:	f7f9 fcd1 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b09a:	4629      	mov	r1, r5
9001b09c:	a81c      	add	r0, sp, #112	; 0x70
9001b09e:	f7f9 fd11 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b0a2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001b0a6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001b0aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001b0ae:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001b0b2:	bfdb      	ittet	le
9001b0b4:	b29a      	uxthle	r2, r3
9001b0b6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001b0ba:	2201      	movgt	r2, #1
9001b0bc:	fb91 f2f2 	sdivle	r2, r1, r2
9001b0c0:	9202      	str	r2, [sp, #8]
9001b0c2:	9802      	ldr	r0, [sp, #8]
9001b0c4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001b0c8:	9902      	ldr	r1, [sp, #8]
9001b0ca:	fb92 f0f0 	sdiv	r0, r2, r0
9001b0ce:	b280      	uxth	r0, r0
9001b0d0:	4488      	add	r8, r1
9001b0d2:	9010      	str	r0, [sp, #64]	; 0x40
9001b0d4:	f108 38ff 	add.w	r8, r8, #4294967295
9001b0d8:	9802      	ldr	r0, [sp, #8]
9001b0da:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001b0dc:	fb05 2510 	mls	r5, r5, r0, r2
9001b0e0:	fb98 f8f1 	sdiv	r8, r8, r1
9001b0e4:	fb15 f503 	smulbb	r5, r5, r3
9001b0e8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001b0ec:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001b0f0:	f108 0801 	add.w	r8, r8, #1
9001b0f4:	440d      	add	r5, r1
9001b0f6:	4419      	add	r1, r3
9001b0f8:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001b0fc:	fa1f f888 	uxth.w	r8, r8
9001b100:	441a      	add	r2, r3
9001b102:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001b106:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001b10a:	b2ad      	uxth	r5, r5
9001b10c:	9304      	str	r3, [sp, #16]
9001b10e:	4b94      	ldr	r3, [pc, #592]	; (9001b360 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001b110:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001b114:	6818      	ldr	r0, [r3, #0]
9001b116:	6803      	ldr	r3, [r0, #0]
9001b118:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b11a:	4798      	blx	r3
9001b11c:	4b91      	ldr	r3, [pc, #580]	; (9001b364 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001b11e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001b122:	2d00      	cmp	r5, #0
9001b124:	881a      	ldrh	r2, [r3, #0]
9001b126:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001b12a:	fb02 f606 	mul.w	r6, r2, r6
9001b12e:	fb02 7101 	mla	r1, r2, r1, r7
9001b132:	9318      	str	r3, [sp, #96]	; 0x60
9001b134:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b138:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001b13c:	f04f 0100 	mov.w	r1, #0
9001b140:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001b144:	930f      	str	r3, [sp, #60]	; 0x3c
9001b146:	4b88      	ldr	r3, [pc, #544]	; (9001b368 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001b148:	920a      	str	r2, [sp, #40]	; 0x28
9001b14a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b14c:	eba3 0304 	sub.w	r3, r3, r4
9001b150:	910d      	str	r1, [sp, #52]	; 0x34
9001b152:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001b156:	9319      	str	r3, [sp, #100]	; 0x64
9001b158:	f108 0204 	add.w	r2, r8, #4
9001b15c:	9211      	str	r2, [sp, #68]	; 0x44
9001b15e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b160:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001b164:	9215      	str	r2, [sp, #84]	; 0x54
9001b166:	9a04      	ldr	r2, [sp, #16]
9001b168:	bf18      	it	ne
9001b16a:	2200      	movne	r2, #0
9001b16c:	b292      	uxth	r2, r2
9001b16e:	9910      	ldr	r1, [sp, #64]	; 0x40
9001b170:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b172:	fa11 f383 	uxtah	r3, r1, r3
9001b176:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b178:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b17c:	3304      	adds	r3, #4
9001b17e:	9306      	str	r3, [sp, #24]
9001b180:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b182:	4283      	cmp	r3, r0
9001b184:	f240 8166 	bls.w	9001b454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001b188:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001b18c:	f04f 0a01 	mov.w	sl, #1
9001b190:	9902      	ldr	r1, [sp, #8]
9001b192:	9e06      	ldr	r6, [sp, #24]
9001b194:	46d3      	mov	fp, sl
9001b196:	4657      	mov	r7, sl
9001b198:	7836      	ldrb	r6, [r6, #0]
9001b19a:	fbb5 f3f3 	udiv	r3, r5, r3
9001b19e:	1acb      	subs	r3, r1, r3
9001b1a0:	9612      	str	r6, [sp, #72]	; 0x48
9001b1a2:	3601      	adds	r6, #1
9001b1a4:	b29b      	uxth	r3, r3
9001b1a6:	9605      	str	r6, [sp, #20]
9001b1a8:	9316      	str	r3, [sp, #88]	; 0x58
9001b1aa:	9b06      	ldr	r3, [sp, #24]
9001b1ac:	7859      	ldrb	r1, [r3, #1]
9001b1ae:	789b      	ldrb	r3, [r3, #2]
9001b1b0:	021b      	lsls	r3, r3, #8
9001b1b2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001b1b6:	9906      	ldr	r1, [sp, #24]
9001b1b8:	78c9      	ldrb	r1, [r1, #3]
9001b1ba:	430b      	orrs	r3, r1
9001b1bc:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001b1be:	4419      	add	r1, r3
9001b1c0:	1c4e      	adds	r6, r1, #1
9001b1c2:	7849      	ldrb	r1, [r1, #1]
9001b1c4:	9603      	str	r6, [sp, #12]
9001b1c6:	0209      	lsls	r1, r1, #8
9001b1c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b1ca:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001b1ce:	5cf3      	ldrb	r3, [r6, r3]
9001b1d0:	4319      	orrs	r1, r3
9001b1d2:	b28b      	uxth	r3, r1
9001b1d4:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001b1d8:	930c      	str	r3, [sp, #48]	; 0x30
9001b1da:	2300      	movs	r3, #0
9001b1dc:	9307      	str	r3, [sp, #28]
9001b1de:	469c      	mov	ip, r3
9001b1e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001b1e4:	930e      	str	r3, [sp, #56]	; 0x38
9001b1e6:	2d00      	cmp	r5, #0
9001b1e8:	d07e      	beq.n	9001b2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001b1ea:	42af      	cmp	r7, r5
9001b1ec:	d26e      	bcs.n	9001b2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001b1ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b1f0:	1bed      	subs	r5, r5, r7
9001b1f2:	9201      	str	r2, [sp, #4]
9001b1f4:	4283      	cmp	r3, r0
9001b1f6:	b2ad      	uxth	r5, r5
9001b1f8:	d802      	bhi.n	9001b200 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001b1fa:	e073      	b.n	9001b2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001b1fc:	2b00      	cmp	r3, #0
9001b1fe:	d15f      	bne.n	9001b2c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001b200:	9b03      	ldr	r3, [sp, #12]
9001b202:	f1cb 0207 	rsb	r2, fp, #7
9001b206:	785b      	ldrb	r3, [r3, #1]
9001b208:	4093      	lsls	r3, r2
9001b20a:	005b      	lsls	r3, r3, #1
9001b20c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001b210:	9b03      	ldr	r3, [sp, #12]
9001b212:	781b      	ldrb	r3, [r3, #0]
9001b214:	fa43 f30b 	asr.w	r3, r3, fp
9001b218:	b2db      	uxtb	r3, r3
9001b21a:	4313      	orrs	r3, r2
9001b21c:	f10b 0201 	add.w	r2, fp, #1
9001b220:	fa5f fb82 	uxtb.w	fp, r2
9001b224:	9a03      	ldr	r2, [sp, #12]
9001b226:	b29f      	uxth	r7, r3
9001b228:	f1bb 0f08 	cmp.w	fp, #8
9001b22c:	bf13      	iteet	ne
9001b22e:	3201      	addne	r2, #1
9001b230:	3202      	addeq	r2, #2
9001b232:	f04f 0b00 	moveq.w	fp, #0
9001b236:	9203      	strne	r2, [sp, #12]
9001b238:	bf08      	it	eq
9001b23a:	9203      	streq	r2, [sp, #12]
9001b23c:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b23e:	42ba      	cmp	r2, r7
9001b240:	d309      	bcc.n	9001b256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001b242:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001b246:	2301      	movs	r3, #1
9001b248:	9a05      	ldr	r2, [sp, #20]
9001b24a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001b24e:	d30e      	bcc.n	9001b26e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001b250:	469a      	mov	sl, r3
9001b252:	2600      	movs	r6, #0
9001b254:	e035      	b.n	9001b2c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001b256:	9b05      	ldr	r3, [sp, #20]
9001b258:	429f      	cmp	r7, r3
9001b25a:	d318      	bcc.n	9001b28e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001b25c:	eb04 030a 	add.w	r3, r4, sl
9001b260:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001b264:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001b268:	f10a 0301 	add.w	r3, sl, #1
9001b26c:	b29b      	uxth	r3, r3
9001b26e:	9a05      	ldr	r2, [sp, #20]
9001b270:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001b274:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b278:	990c      	ldr	r1, [sp, #48]	; 0x30
9001b27a:	7116      	strb	r6, [r2, #4]
9001b27c:	f10a 0601 	add.w	r6, sl, #1
9001b280:	80d1      	strh	r1, [r2, #6]
9001b282:	7156      	strb	r6, [r2, #5]
9001b284:	9a05      	ldr	r2, [sp, #20]
9001b286:	3201      	adds	r2, #1
9001b288:	b292      	uxth	r2, r2
9001b28a:	9205      	str	r2, [sp, #20]
9001b28c:	e7e0      	b.n	9001b250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001b28e:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001b292:	463a      	mov	r2, r7
9001b294:	795b      	ldrb	r3, [r3, #5]
9001b296:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001b29a:	4426      	add	r6, r4
9001b29c:	9919      	ldr	r1, [sp, #100]	; 0x64
9001b29e:	eb01 0c06 	add.w	ip, r1, r6
9001b2a2:	f1bc 0f00 	cmp.w	ip, #0
9001b2a6:	dd07      	ble.n	9001b2b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001b2a8:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b2ac:	f892 c004 	ldrb.w	ip, [r2, #4]
9001b2b0:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001b2b4:	88d2      	ldrh	r2, [r2, #6]
9001b2b6:	e7f1      	b.n	9001b29c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001b2b8:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001b2bc:	b29b      	uxth	r3, r3
9001b2be:	e7c3      	b.n	9001b248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001b2c0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b2c2:	970c      	str	r7, [sp, #48]	; 0x30
9001b2c4:	46b4      	mov	ip, r6
9001b2c6:	9a01      	ldr	r2, [sp, #4]
9001b2c8:	461f      	mov	r7, r3
9001b2ca:	e78c      	b.n	9001b1e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001b2cc:	1b7b      	subs	r3, r7, r5
9001b2ce:	eb0c 0605 	add.w	r6, ip, r5
9001b2d2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b2d6:	b29b      	uxth	r3, r3
9001b2d8:	b2b6      	uxth	r6, r6
9001b2da:	9201      	str	r2, [sp, #4]
9001b2dc:	2500      	movs	r5, #0
9001b2de:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001b2e0:	4282      	cmp	r2, r0
9001b2e2:	d88b      	bhi.n	9001b1fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001b2e4:	9a01      	ldr	r2, [sp, #4]
9001b2e6:	e74b      	b.n	9001b180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001b2e8:	4297      	cmp	r7, r2
9001b2ea:	d332      	bcc.n	9001b352 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001b2ec:	1abb      	subs	r3, r7, r2
9001b2ee:	9208      	str	r2, [sp, #32]
9001b2f0:	9501      	str	r5, [sp, #4]
9001b2f2:	b29b      	uxth	r3, r3
9001b2f4:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b2f6:	29ff      	cmp	r1, #255	; 0xff
9001b2f8:	9908      	ldr	r1, [sp, #32]
9001b2fa:	eb0c 0601 	add.w	r6, ip, r1
9001b2fe:	d135      	bne.n	9001b36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001b300:	f1a0 0e02 	sub.w	lr, r0, #2
9001b304:	b2b6      	uxth	r6, r6
9001b306:	45b4      	cmp	ip, r6
9001b308:	f040 808c 	bne.w	9001b424 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001b30c:	9908      	ldr	r1, [sp, #32]
9001b30e:	4297      	cmp	r7, r2
9001b310:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b314:	d3e2      	bcc.n	9001b2dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001b316:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b318:	9904      	ldr	r1, [sp, #16]
9001b31a:	8812      	ldrh	r2, [r2, #0]
9001b31c:	1a52      	subs	r2, r2, r1
9001b31e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001b320:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b324:	9a07      	ldr	r2, [sp, #28]
9001b326:	3201      	adds	r2, #1
9001b328:	428a      	cmp	r2, r1
9001b32a:	9207      	str	r2, [sp, #28]
9001b32c:	f040 8087 	bne.w	9001b43e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001b330:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001b334:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001b338:	9b04      	ldr	r3, [sp, #16]
9001b33a:	1bed      	subs	r5, r5, r7
9001b33c:	b2ad      	uxth	r5, r5
9001b33e:	2d00      	cmp	r5, #0
9001b340:	bf08      	it	eq
9001b342:	461a      	moveq	r2, r3
9001b344:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b346:	bf18      	it	ne
9001b348:	2200      	movne	r2, #0
9001b34a:	3301      	adds	r3, #1
9001b34c:	b292      	uxth	r2, r2
9001b34e:	930d      	str	r3, [sp, #52]	; 0x34
9001b350:	e70d      	b.n	9001b16e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001b352:	1bd1      	subs	r1, r2, r7
9001b354:	9708      	str	r7, [sp, #32]
9001b356:	b28b      	uxth	r3, r1
9001b358:	9301      	str	r3, [sp, #4]
9001b35a:	462b      	mov	r3, r5
9001b35c:	e7ca      	b.n	9001b2f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001b35e:	bf00      	nop
9001b360:	2402356c 	.word	0x2402356c
9001b364:	24023566 	.word	0x24023566
9001b368:	fffff7fb 	.word	0xfffff7fb
9001b36c:	b2b6      	uxth	r6, r6
9001b36e:	900b      	str	r0, [sp, #44]	; 0x2c
9001b370:	45b4      	cmp	ip, r6
9001b372:	d0cb      	beq.n	9001b30c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001b374:	f10c 0101 	add.w	r1, ip, #1
9001b378:	44a4      	add	ip, r4
9001b37a:	9117      	str	r1, [sp, #92]	; 0x5c
9001b37c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b380:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b382:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b386:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b388:	ea4f 2825 	mov.w	r8, r5, asr #8
9001b38c:	f8b1 c000 	ldrh.w	ip, [r1]
9001b390:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b392:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001b396:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001b39a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001b39e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b3a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b3a6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b3aa:	fb1e fe01 	smulbb	lr, lr, r1
9001b3ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b3b0:	fa5f fc8c 	uxtb.w	ip, ip
9001b3b4:	fb08 e801 	mla	r8, r8, r1, lr
9001b3b8:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001b3bc:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b3be:	00ed      	lsls	r5, r5, #3
9001b3c0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001b3c4:	fa1f f888 	uxth.w	r8, r8
9001b3c8:	fb19 f901 	smulbb	r9, r9, r1
9001b3cc:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b3ce:	b2ed      	uxtb	r5, r5
9001b3d0:	fb0e 9e01 	mla	lr, lr, r1, r9
9001b3d4:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b3d6:	fb1c fc01 	smulbb	ip, ip, r1
9001b3da:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b3dc:	fa1f fe8e 	uxth.w	lr, lr
9001b3e0:	fb05 c501 	mla	r5, r5, r1, ip
9001b3e4:	f108 0c01 	add.w	ip, r8, #1
9001b3e8:	f10e 0901 	add.w	r9, lr, #1
9001b3ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b3ee:	b2ad      	uxth	r5, r5
9001b3f0:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001b3f4:	f105 0c01 	add.w	ip, r5, #1
9001b3f8:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001b3fc:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001b400:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b404:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b408:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b40c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b410:	ea4c 0808 	orr.w	r8, ip, r8
9001b414:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001b418:	ea48 0809 	orr.w	r8, r8, r9
9001b41c:	f821 8b02 	strh.w	r8, [r1], #2
9001b420:	910b      	str	r1, [sp, #44]	; 0x2c
9001b422:	e7a5      	b.n	9001b370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001b424:	f10c 0801 	add.w	r8, ip, #1
9001b428:	44a4      	add	ip, r4
9001b42a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b42c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b430:	fa1f fc88 	uxth.w	ip, r8
9001b434:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b438:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001b43c:	e763      	b.n	9001b306 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001b43e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b442:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001b446:	1aad      	subs	r5, r5, r2
9001b448:	b2ad      	uxth	r5, r5
9001b44a:	2d00      	cmp	r5, #0
9001b44c:	bf18      	it	ne
9001b44e:	2200      	movne	r2, #0
9001b450:	9201      	str	r2, [sp, #4]
9001b452:	e744      	b.n	9001b2de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001b454:	4b03      	ldr	r3, [pc, #12]	; (9001b464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001b456:	6818      	ldr	r0, [r3, #0]
9001b458:	6803      	ldr	r3, [r0, #0]
9001b45a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b45c:	4798      	blx	r3
9001b45e:	b01f      	add	sp, #124	; 0x7c
9001b460:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b464:	2402356c 	.word	0x2402356c

9001b468 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b46c:	b08f      	sub	sp, #60	; 0x3c
9001b46e:	461c      	mov	r4, r3
9001b470:	460f      	mov	r7, r1
9001b472:	9203      	str	r2, [sp, #12]
9001b474:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b478:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b47a:	9202      	str	r2, [sp, #8]
9001b47c:	2a00      	cmp	r2, #0
9001b47e:	f000 8128 	beq.w	9001b6d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001b482:	6820      	ldr	r0, [r4, #0]
9001b484:	aa0a      	add	r2, sp, #40	; 0x28
9001b486:	6861      	ldr	r1, [r4, #4]
9001b488:	c203      	stmia	r2!, {r0, r1}
9001b48a:	6818      	ldr	r0, [r3, #0]
9001b48c:	aa0c      	add	r2, sp, #48	; 0x30
9001b48e:	6859      	ldr	r1, [r3, #4]
9001b490:	c203      	stmia	r2!, {r0, r1}
9001b492:	a80a      	add	r0, sp, #40	; 0x28
9001b494:	f7f9 fad2 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b498:	4621      	mov	r1, r4
9001b49a:	a80c      	add	r0, sp, #48	; 0x30
9001b49c:	f7f9 fb12 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b4a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001b4a4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001b4a8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b4ac:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001b4b0:	bfdb      	ittet	le
9001b4b2:	b2b3      	uxthle	r3, r6
9001b4b4:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b4b8:	2301      	movgt	r3, #1
9001b4ba:	fb92 f3f3 	sdivle	r3, r2, r3
9001b4be:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b4c2:	441d      	add	r5, r3
9001b4c4:	fb92 f1f3 	sdiv	r1, r2, r3
9001b4c8:	fa1f fc81 	uxth.w	ip, r1
9001b4cc:	3d01      	subs	r5, #1
9001b4ce:	fb0c 2413 	mls	r4, ip, r3, r2
9001b4d2:	4661      	mov	r1, ip
9001b4d4:	fb14 f406 	smulbb	r4, r4, r6
9001b4d8:	4404      	add	r4, r0
9001b4da:	fb95 f5f3 	sdiv	r5, r5, r3
9001b4de:	b2a4      	uxth	r4, r4
9001b4e0:	b121      	cbz	r1, 9001b4ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001b4e2:	9b03      	ldr	r3, [sp, #12]
9001b4e4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b4e8:	ba1b      	rev	r3, r3
9001b4ea:	441f      	add	r7, r3
9001b4ec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b4f0:	b2ad      	uxth	r5, r5
9001b4f2:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001b4f6:	4418      	add	r0, r3
9001b4f8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b4fc:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b500:	00ad      	lsls	r5, r5, #2
9001b502:	441a      	add	r2, r3
9001b504:	4b74      	ldr	r3, [pc, #464]	; (9001b6d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b506:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b50a:	6818      	ldr	r0, [r3, #0]
9001b50c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b510:	6803      	ldr	r3, [r0, #0]
9001b512:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b514:	4798      	blx	r3
9001b516:	4a71      	ldr	r2, [pc, #452]	; (9001b6dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001b518:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001b51c:	2c00      	cmp	r4, #0
9001b51e:	8813      	ldrh	r3, [r2, #0]
9001b520:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b524:	bf0c      	ite	eq
9001b526:	46c8      	moveq	r8, r9
9001b528:	f04f 0800 	movne.w	r8, #0
9001b52c:	9209      	str	r2, [sp, #36]	; 0x24
9001b52e:	fb03 c101 	mla	r1, r3, r1, ip
9001b532:	4373      	muls	r3, r6
9001b534:	fa1f f888 	uxth.w	r8, r8
9001b538:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b53c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b540:	9304      	str	r3, [sp, #16]
9001b542:	1d2b      	adds	r3, r5, #4
9001b544:	9305      	str	r3, [sp, #20]
9001b546:	2300      	movs	r3, #0
9001b548:	9301      	str	r3, [sp, #4]
9001b54a:	9a04      	ldr	r2, [sp, #16]
9001b54c:	4282      	cmp	r2, r0
9001b54e:	f240 80bb 	bls.w	9001b6c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001b552:	b95b      	cbnz	r3, 9001b56c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001b554:	783a      	ldrb	r2, [r7, #0]
9001b556:	0993      	lsrs	r3, r2, #6
9001b558:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b55c:	9201      	str	r2, [sp, #4]
9001b55e:	1e5a      	subs	r2, r3, #1
9001b560:	2a02      	cmp	r2, #2
9001b562:	bf8d      	iteet	hi
9001b564:	787b      	ldrbhi	r3, [r7, #1]
9001b566:	3701      	addls	r7, #1
9001b568:	b29b      	uxthls	r3, r3
9001b56a:	3702      	addhi	r7, #2
9001b56c:	b184      	cbz	r4, 9001b590 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001b56e:	429c      	cmp	r4, r3
9001b570:	bf91      	iteee	ls
9001b572:	1b1c      	subls	r4, r3, r4
9001b574:	1ae4      	subhi	r4, r4, r3
9001b576:	46c4      	movhi	ip, r8
9001b578:	f04f 0a00 	movhi.w	sl, #0
9001b57c:	bf9b      	ittet	ls
9001b57e:	fa1f fa84 	uxthls.w	sl, r4
9001b582:	2400      	movls	r4, #0
9001b584:	b2a4      	uxthhi	r4, r4
9001b586:	fa1f fc89 	uxthls.w	ip, r9
9001b58a:	4653      	mov	r3, sl
9001b58c:	46e0      	mov	r8, ip
9001b58e:	e7dc      	b.n	9001b54a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001b590:	2204      	movs	r2, #4
9001b592:	9905      	ldr	r1, [sp, #20]
9001b594:	4543      	cmp	r3, r8
9001b596:	4615      	mov	r5, r2
9001b598:	9a01      	ldr	r2, [sp, #4]
9001b59a:	bf24      	itt	cs
9001b59c:	eba3 0a08 	subcs.w	sl, r3, r8
9001b5a0:	46c6      	movcs	lr, r8
9001b5a2:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b5a6:	9903      	ldr	r1, [sp, #12]
9001b5a8:	bf3c      	itt	cc
9001b5aa:	eba8 0c03 	subcc.w	ip, r8, r3
9001b5ae:	469e      	movcc	lr, r3
9001b5b0:	588a      	ldr	r2, [r1, r2]
9001b5b2:	bf26      	itte	cs
9001b5b4:	fa1f fa8a 	uxthcs.w	sl, sl
9001b5b8:	46a4      	movcs	ip, r4
9001b5ba:	fa1f fc8c 	uxthcc.w	ip, ip
9001b5be:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001b5c2:	bf38      	it	cc
9001b5c4:	46a2      	movcc	sl, r4
9001b5c6:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001b5ca:	2900      	cmp	r1, #0
9001b5cc:	d066      	beq.n	9001b69c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001b5ce:	29ff      	cmp	r1, #255	; 0xff
9001b5d0:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001b5d4:	d114      	bne.n	9001b600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b5d6:	9d02      	ldr	r5, [sp, #8]
9001b5d8:	2dff      	cmp	r5, #255	; 0xff
9001b5da:	d111      	bne.n	9001b600 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b5dc:	0951      	lsrs	r1, r2, #5
9001b5de:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b5e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b5e6:	4486      	add	lr, r0
9001b5e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b5ec:	f026 0607 	bic.w	r6, r6, #7
9001b5f0:	430e      	orrs	r6, r1
9001b5f2:	4316      	orrs	r6, r2
9001b5f4:	b2b6      	uxth	r6, r6
9001b5f6:	4586      	cmp	lr, r0
9001b5f8:	d051      	beq.n	9001b69e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b5fa:	f820 6b02 	strh.w	r6, [r0], #2
9001b5fe:	e7fa      	b.n	9001b5f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001b600:	9d02      	ldr	r5, [sp, #8]
9001b602:	b2f6      	uxtb	r6, r6
9001b604:	4486      	add	lr, r0
9001b606:	4369      	muls	r1, r5
9001b608:	1c4d      	adds	r5, r1, #1
9001b60a:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001b60e:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001b612:	b2d2      	uxtb	r2, r2
9001b614:	122d      	asrs	r5, r5, #8
9001b616:	ea6f 0b05 	mvn.w	fp, r5
9001b61a:	b2ad      	uxth	r5, r5
9001b61c:	fb11 f105 	smulbb	r1, r1, r5
9001b620:	fa5f fb8b 	uxtb.w	fp, fp
9001b624:	fb16 f605 	smulbb	r6, r6, r5
9001b628:	fb12 f205 	smulbb	r2, r2, r5
9001b62c:	b289      	uxth	r1, r1
9001b62e:	b2b6      	uxth	r6, r6
9001b630:	b292      	uxth	r2, r2
9001b632:	9106      	str	r1, [sp, #24]
9001b634:	9607      	str	r6, [sp, #28]
9001b636:	9208      	str	r2, [sp, #32]
9001b638:	4586      	cmp	lr, r0
9001b63a:	d030      	beq.n	9001b69e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b63c:	8802      	ldrh	r2, [r0, #0]
9001b63e:	9906      	ldr	r1, [sp, #24]
9001b640:	1216      	asrs	r6, r2, #8
9001b642:	10d5      	asrs	r5, r2, #3
9001b644:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b648:	00d2      	lsls	r2, r2, #3
9001b64a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b64e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001b652:	b2d2      	uxtb	r2, r2
9001b654:	fb06 160b 	mla	r6, r6, fp, r1
9001b658:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001b65c:	9907      	ldr	r1, [sp, #28]
9001b65e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b662:	b2b6      	uxth	r6, r6
9001b664:	fb05 150b 	mla	r5, r5, fp, r1
9001b668:	9908      	ldr	r1, [sp, #32]
9001b66a:	fb02 120b 	mla	r2, r2, fp, r1
9001b66e:	1c71      	adds	r1, r6, #1
9001b670:	b2ad      	uxth	r5, r5
9001b672:	b292      	uxth	r2, r2
9001b674:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001b678:	1c51      	adds	r1, r2, #1
9001b67a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b67e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001b682:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b686:	4316      	orrs	r6, r2
9001b688:	1c6a      	adds	r2, r5, #1
9001b68a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b68e:	096d      	lsrs	r5, r5, #5
9001b690:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b694:	432e      	orrs	r6, r5
9001b696:	f820 6b02 	strh.w	r6, [r0], #2
9001b69a:	e7cd      	b.n	9001b638 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001b69c:	4470      	add	r0, lr
9001b69e:	4543      	cmp	r3, r8
9001b6a0:	f4ff af73 	bcc.w	9001b58a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b6a4:	fa1f fc89 	uxth.w	ip, r9
9001b6a8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b6ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b6ae:	eba4 040c 	sub.w	r4, r4, ip
9001b6b2:	881b      	ldrh	r3, [r3, #0]
9001b6b4:	b2a4      	uxth	r4, r4
9001b6b6:	eba3 0309 	sub.w	r3, r3, r9
9001b6ba:	2c00      	cmp	r4, #0
9001b6bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b6c0:	bf18      	it	ne
9001b6c2:	f04f 0c00 	movne.w	ip, #0
9001b6c6:	e760      	b.n	9001b58a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b6c8:	4b03      	ldr	r3, [pc, #12]	; (9001b6d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b6ca:	6818      	ldr	r0, [r3, #0]
9001b6cc:	6803      	ldr	r3, [r0, #0]
9001b6ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b6d0:	4798      	blx	r3
9001b6d2:	b00f      	add	sp, #60	; 0x3c
9001b6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b6d8:	2402356c 	.word	0x2402356c
9001b6dc:	24023566 	.word	0x24023566

9001b6e0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001b6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b6e4:	b093      	sub	sp, #76	; 0x4c
9001b6e6:	461c      	mov	r4, r3
9001b6e8:	9205      	str	r2, [sp, #20]
9001b6ea:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001b6ee:	9101      	str	r1, [sp, #4]
9001b6f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b6f2:	9202      	str	r2, [sp, #8]
9001b6f4:	2a00      	cmp	r2, #0
9001b6f6:	f000 812e 	beq.w	9001b956 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001b6fa:	6820      	ldr	r0, [r4, #0]
9001b6fc:	aa0e      	add	r2, sp, #56	; 0x38
9001b6fe:	6861      	ldr	r1, [r4, #4]
9001b700:	c203      	stmia	r2!, {r0, r1}
9001b702:	6818      	ldr	r0, [r3, #0]
9001b704:	aa10      	add	r2, sp, #64	; 0x40
9001b706:	6859      	ldr	r1, [r3, #4]
9001b708:	c203      	stmia	r2!, {r0, r1}
9001b70a:	a80e      	add	r0, sp, #56	; 0x38
9001b70c:	f7f9 f996 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b710:	4621      	mov	r1, r4
9001b712:	a810      	add	r0, sp, #64	; 0x40
9001b714:	f7f9 f9d6 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b718:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001b71c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001b720:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b724:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001b728:	bfdb      	ittet	le
9001b72a:	b2b3      	uxthle	r3, r6
9001b72c:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b730:	2301      	movgt	r3, #1
9001b732:	fb92 f3f3 	sdivle	r3, r2, r3
9001b736:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b73a:	441d      	add	r5, r3
9001b73c:	fb92 f1f3 	sdiv	r1, r2, r3
9001b740:	fa1f fc81 	uxth.w	ip, r1
9001b744:	3d01      	subs	r5, #1
9001b746:	fb0c 2413 	mls	r4, ip, r3, r2
9001b74a:	4661      	mov	r1, ip
9001b74c:	fb14 f406 	smulbb	r4, r4, r6
9001b750:	4404      	add	r4, r0
9001b752:	fb95 f5f3 	sdiv	r5, r5, r3
9001b756:	b2a4      	uxth	r4, r4
9001b758:	b131      	cbz	r1, 9001b768 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001b75a:	9b05      	ldr	r3, [sp, #20]
9001b75c:	9901      	ldr	r1, [sp, #4]
9001b75e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b762:	ba1b      	rev	r3, r3
9001b764:	4419      	add	r1, r3
9001b766:	9101      	str	r1, [sp, #4]
9001b768:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001b76c:	b2ad      	uxth	r5, r5
9001b76e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001b772:	4418      	add	r0, r3
9001b774:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001b778:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001b77c:	00ad      	lsls	r5, r5, #2
9001b77e:	441a      	add	r2, r3
9001b780:	4b76      	ldr	r3, [pc, #472]	; (9001b95c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b782:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001b786:	6818      	ldr	r0, [r3, #0]
9001b788:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001b78c:	6803      	ldr	r3, [r0, #0]
9001b78e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b790:	4798      	blx	r3
9001b792:	4973      	ldr	r1, [pc, #460]	; (9001b960 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001b794:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001b798:	2c00      	cmp	r4, #0
9001b79a:	880b      	ldrh	r3, [r1, #0]
9001b79c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b7a0:	910d      	str	r1, [sp, #52]	; 0x34
9001b7a2:	fb03 c202 	mla	r2, r3, r2, ip
9001b7a6:	bf08      	it	eq
9001b7a8:	46dc      	moveq	ip, fp
9001b7aa:	fb03 f306 	mul.w	r3, r3, r6
9001b7ae:	bf18      	it	ne
9001b7b0:	f04f 0c00 	movne.w	ip, #0
9001b7b4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b7b8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b7bc:	fa1f fc8c 	uxth.w	ip, ip
9001b7c0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b7c4:	9106      	str	r1, [sp, #24]
9001b7c6:	9308      	str	r3, [sp, #32]
9001b7c8:	1d2b      	adds	r3, r5, #4
9001b7ca:	9309      	str	r3, [sp, #36]	; 0x24
9001b7cc:	9b02      	ldr	r3, [sp, #8]
9001b7ce:	43da      	mvns	r2, r3
9001b7d0:	2300      	movs	r3, #0
9001b7d2:	b2d2      	uxtb	r2, r2
9001b7d4:	9303      	str	r3, [sp, #12]
9001b7d6:	9207      	str	r2, [sp, #28]
9001b7d8:	9a08      	ldr	r2, [sp, #32]
9001b7da:	4282      	cmp	r2, r0
9001b7dc:	f240 80b6 	bls.w	9001b94c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001b7e0:	b963      	cbnz	r3, 9001b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b7e2:	9b01      	ldr	r3, [sp, #4]
9001b7e4:	781a      	ldrb	r2, [r3, #0]
9001b7e6:	0993      	lsrs	r3, r2, #6
9001b7e8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b7ec:	9203      	str	r2, [sp, #12]
9001b7ee:	1e5a      	subs	r2, r3, #1
9001b7f0:	2a02      	cmp	r2, #2
9001b7f2:	d815      	bhi.n	9001b820 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001b7f4:	9a01      	ldr	r2, [sp, #4]
9001b7f6:	b29b      	uxth	r3, r3
9001b7f8:	3201      	adds	r2, #1
9001b7fa:	9201      	str	r2, [sp, #4]
9001b7fc:	b1b4      	cbz	r4, 9001b82c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001b7fe:	429c      	cmp	r4, r3
9001b800:	bf91      	iteee	ls
9001b802:	1b1c      	subls	r4, r3, r4
9001b804:	1ae4      	subhi	r4, r4, r3
9001b806:	4666      	movhi	r6, ip
9001b808:	f04f 0800 	movhi.w	r8, #0
9001b80c:	bf9b      	ittet	ls
9001b80e:	fa1f f884 	uxthls.w	r8, r4
9001b812:	2400      	movls	r4, #0
9001b814:	b2a4      	uxthhi	r4, r4
9001b816:	fa1f f68b 	uxthls.w	r6, fp
9001b81a:	4643      	mov	r3, r8
9001b81c:	46b4      	mov	ip, r6
9001b81e:	e7db      	b.n	9001b7d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001b820:	9a01      	ldr	r2, [sp, #4]
9001b822:	9b01      	ldr	r3, [sp, #4]
9001b824:	3202      	adds	r2, #2
9001b826:	785b      	ldrb	r3, [r3, #1]
9001b828:	9201      	str	r2, [sp, #4]
9001b82a:	e7e7      	b.n	9001b7fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b82c:	2203      	movs	r2, #3
9001b82e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b830:	4563      	cmp	r3, ip
9001b832:	4615      	mov	r5, r2
9001b834:	9a03      	ldr	r2, [sp, #12]
9001b836:	bf2c      	ite	cs
9001b838:	eba3 080c 	subcs.w	r8, r3, ip
9001b83c:	ebac 0603 	subcc.w	r6, ip, r3
9001b840:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b844:	9905      	ldr	r1, [sp, #20]
9001b846:	bf24      	itt	cs
9001b848:	fa1f f888 	uxthcs.w	r8, r8
9001b84c:	46e1      	movcs	r9, ip
9001b84e:	eb01 0502 	add.w	r5, r1, r2
9001b852:	9902      	ldr	r1, [sp, #8]
9001b854:	bf2f      	iteee	cs
9001b856:	4626      	movcs	r6, r4
9001b858:	b2b6      	uxthcc	r6, r6
9001b85a:	4699      	movcc	r9, r3
9001b85c:	46a0      	movcc	r8, r4
9001b85e:	29ff      	cmp	r1, #255	; 0xff
9001b860:	d04a      	beq.n	9001b8f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001b862:	9f06      	ldr	r7, [sp, #24]
9001b864:	46ca      	mov	sl, r9
9001b866:	78a9      	ldrb	r1, [r5, #2]
9001b868:	9004      	str	r0, [sp, #16]
9001b86a:	4379      	muls	r1, r7
9001b86c:	910a      	str	r1, [sp, #40]	; 0x28
9001b86e:	7869      	ldrb	r1, [r5, #1]
9001b870:	4379      	muls	r1, r7
9001b872:	910b      	str	r1, [sp, #44]	; 0x2c
9001b874:	9905      	ldr	r1, [sp, #20]
9001b876:	5c8a      	ldrb	r2, [r1, r2]
9001b878:	437a      	muls	r2, r7
9001b87a:	920c      	str	r2, [sp, #48]	; 0x30
9001b87c:	f1ba 0f00 	cmp.w	sl, #0
9001b880:	d03d      	beq.n	9001b8fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001b882:	9a04      	ldr	r2, [sp, #16]
9001b884:	f10a 3aff 	add.w	sl, sl, #4294967295
9001b888:	9f07      	ldr	r7, [sp, #28]
9001b88a:	8812      	ldrh	r2, [r2, #0]
9001b88c:	fa1f fa8a 	uxth.w	sl, sl
9001b890:	46be      	mov	lr, r7
9001b892:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001b894:	1215      	asrs	r5, r2, #8
9001b896:	10d1      	asrs	r1, r2, #3
9001b898:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001b89c:	00d2      	lsls	r2, r2, #3
9001b89e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001b8a2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001b8a6:	b2d2      	uxtb	r2, r2
9001b8a8:	fb05 750e 	mla	r5, r5, lr, r7
9001b8ac:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001b8b0:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001b8b2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b8b6:	b2ad      	uxth	r5, r5
9001b8b8:	fb01 710e 	mla	r1, r1, lr, r7
9001b8bc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b8be:	fb02 720e 	mla	r2, r2, lr, r7
9001b8c2:	f105 0e01 	add.w	lr, r5, #1
9001b8c6:	b289      	uxth	r1, r1
9001b8c8:	b292      	uxth	r2, r2
9001b8ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001b8ce:	f102 0e01 	add.w	lr, r2, #1
9001b8d2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001b8d6:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001b8da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b8de:	4315      	orrs	r5, r2
9001b8e0:	1c4a      	adds	r2, r1, #1
9001b8e2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001b8e6:	9a04      	ldr	r2, [sp, #16]
9001b8e8:	0949      	lsrs	r1, r1, #5
9001b8ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b8ee:	430d      	orrs	r5, r1
9001b8f0:	f822 5b02 	strh.w	r5, [r2], #2
9001b8f4:	9204      	str	r2, [sp, #16]
9001b8f6:	e7c1      	b.n	9001b87c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001b8f8:	4649      	mov	r1, r9
9001b8fa:	4686      	mov	lr, r0
9001b8fc:	b999      	cbnz	r1, 9001b926 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001b8fe:	4563      	cmp	r3, ip
9001b900:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001b904:	d389      	bcc.n	9001b81a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001b906:	fa1f f68b 	uxth.w	r6, fp
9001b90a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001b90e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b910:	1ba4      	subs	r4, r4, r6
9001b912:	881b      	ldrh	r3, [r3, #0]
9001b914:	b2a4      	uxth	r4, r4
9001b916:	eba3 030b 	sub.w	r3, r3, fp
9001b91a:	2c00      	cmp	r4, #0
9001b91c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b920:	bf18      	it	ne
9001b922:	2600      	movne	r6, #0
9001b924:	e779      	b.n	9001b81a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001b926:	78aa      	ldrb	r2, [r5, #2]
9001b928:	3901      	subs	r1, #1
9001b92a:	4f0e      	ldr	r7, [pc, #56]	; (9001b964 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001b92c:	b289      	uxth	r1, r1
9001b92e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001b932:	786a      	ldrb	r2, [r5, #1]
9001b934:	00d2      	lsls	r2, r2, #3
9001b936:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001b93a:	ea4a 0202 	orr.w	r2, sl, r2
9001b93e:	f895 a000 	ldrb.w	sl, [r5]
9001b942:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001b946:	f82e 2b02 	strh.w	r2, [lr], #2
9001b94a:	e7d7      	b.n	9001b8fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001b94c:	4b03      	ldr	r3, [pc, #12]	; (9001b95c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b94e:	6818      	ldr	r0, [r3, #0]
9001b950:	6803      	ldr	r3, [r0, #0]
9001b952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b954:	4798      	blx	r3
9001b956:	b013      	add	sp, #76	; 0x4c
9001b958:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b95c:	2402356c 	.word	0x2402356c
9001b960:	24023566 	.word	0x24023566
9001b964:	fffff800 	.word	0xfffff800

9001b968 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b96c:	b09d      	sub	sp, #116	; 0x74
9001b96e:	461c      	mov	r4, r3
9001b970:	4683      	mov	fp, r0
9001b972:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001b974:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001b978:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001b97c:	920e      	str	r2, [sp, #56]	; 0x38
9001b97e:	2a00      	cmp	r2, #0
9001b980:	f000 81e4 	beq.w	9001bd4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001b984:	6820      	ldr	r0, [r4, #0]
9001b986:	aa18      	add	r2, sp, #96	; 0x60
9001b988:	6861      	ldr	r1, [r4, #4]
9001b98a:	c203      	stmia	r2!, {r0, r1}
9001b98c:	6818      	ldr	r0, [r3, #0]
9001b98e:	aa1a      	add	r2, sp, #104	; 0x68
9001b990:	6859      	ldr	r1, [r3, #4]
9001b992:	c203      	stmia	r2!, {r0, r1}
9001b994:	a818      	add	r0, sp, #96	; 0x60
9001b996:	f7f9 f851 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b99a:	4621      	mov	r1, r4
9001b99c:	a81a      	add	r0, sp, #104	; 0x68
9001b99e:	f7f9 f891 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b9a2:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001b9a6:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001b9aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001b9ae:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001b9b2:	bfdb      	ittet	le
9001b9b4:	b29a      	uxthle	r2, r3
9001b9b6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001b9ba:	2201      	movgt	r2, #1
9001b9bc:	fb91 f2f2 	sdivle	r2, r1, r2
9001b9c0:	9202      	str	r2, [sp, #8]
9001b9c2:	9802      	ldr	r0, [sp, #8]
9001b9c4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001b9c8:	9902      	ldr	r1, [sp, #8]
9001b9ca:	fb92 f0f0 	sdiv	r0, r2, r0
9001b9ce:	b280      	uxth	r0, r0
9001b9d0:	440c      	add	r4, r1
9001b9d2:	900f      	str	r0, [sp, #60]	; 0x3c
9001b9d4:	3c01      	subs	r4, #1
9001b9d6:	9802      	ldr	r0, [sp, #8]
9001b9d8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001b9da:	fb05 2510 	mls	r5, r5, r0, r2
9001b9de:	fb94 f4f1 	sdiv	r4, r4, r1
9001b9e2:	fb15 f503 	smulbb	r5, r5, r3
9001b9e6:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001b9ea:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001b9ee:	3401      	adds	r4, #1
9001b9f0:	440d      	add	r5, r1
9001b9f2:	4419      	add	r1, r3
9001b9f4:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001b9f8:	b2a4      	uxth	r4, r4
9001b9fa:	441a      	add	r2, r3
9001b9fc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001ba00:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001ba04:	00a4      	lsls	r4, r4, #2
9001ba06:	9306      	str	r3, [sp, #24]
9001ba08:	b2ad      	uxth	r5, r5
9001ba0a:	4bb3      	ldr	r3, [pc, #716]	; (9001bcd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001ba0c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001ba10:	6818      	ldr	r0, [r3, #0]
9001ba12:	6803      	ldr	r3, [r0, #0]
9001ba14:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ba16:	4798      	blx	r3
9001ba18:	4bb0      	ldr	r3, [pc, #704]	; (9001bcdc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001ba1a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001ba1e:	2d00      	cmp	r5, #0
9001ba20:	881a      	ldrh	r2, [r3, #0]
9001ba22:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001ba26:	fb02 f606 	mul.w	r6, r2, r6
9001ba2a:	fb02 7101 	mla	r1, r2, r1, r7
9001ba2e:	9316      	str	r3, [sp, #88]	; 0x58
9001ba30:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001ba34:	4baa      	ldr	r3, [pc, #680]	; (9001bce0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001ba36:	bf18      	it	ne
9001ba38:	2100      	movne	r1, #0
9001ba3a:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001ba3e:	eba3 030b 	sub.w	r3, r3, fp
9001ba42:	920a      	str	r2, [sp, #40]	; 0x28
9001ba44:	f104 0204 	add.w	r2, r4, #4
9001ba48:	9317      	str	r3, [sp, #92]	; 0x5c
9001ba4a:	9213      	str	r2, [sp, #76]	; 0x4c
9001ba4c:	9a06      	ldr	r2, [sp, #24]
9001ba4e:	bf08      	it	eq
9001ba50:	4611      	moveq	r1, r2
9001ba52:	2200      	movs	r2, #0
9001ba54:	b289      	uxth	r1, r1
9001ba56:	920d      	str	r2, [sp, #52]	; 0x34
9001ba58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ba5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ba5c:	fa12 f383 	uxtah	r3, r2, r3
9001ba60:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001ba62:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001ba66:	3304      	adds	r3, #4
9001ba68:	9308      	str	r3, [sp, #32]
9001ba6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ba6c:	4543      	cmp	r3, r8
9001ba6e:	f240 8168 	bls.w	9001bd42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001ba72:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001ba76:	f04f 0e01 	mov.w	lr, #1
9001ba7a:	9a02      	ldr	r2, [sp, #8]
9001ba7c:	9808      	ldr	r0, [sp, #32]
9001ba7e:	fbb5 f3f3 	udiv	r3, r5, r3
9001ba82:	1ad3      	subs	r3, r2, r3
9001ba84:	7800      	ldrb	r0, [r0, #0]
9001ba86:	b29b      	uxth	r3, r3
9001ba88:	9010      	str	r0, [sp, #64]	; 0x40
9001ba8a:	3001      	adds	r0, #1
9001ba8c:	9314      	str	r3, [sp, #80]	; 0x50
9001ba8e:	9b08      	ldr	r3, [sp, #32]
9001ba90:	9007      	str	r0, [sp, #28]
9001ba92:	785a      	ldrb	r2, [r3, #1]
9001ba94:	789b      	ldrb	r3, [r3, #2]
9001ba96:	021b      	lsls	r3, r3, #8
9001ba98:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001ba9c:	9a08      	ldr	r2, [sp, #32]
9001ba9e:	78d2      	ldrb	r2, [r2, #3]
9001baa0:	4313      	orrs	r3, r2
9001baa2:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001baa4:	441a      	add	r2, r3
9001baa6:	1c50      	adds	r0, r2, #1
9001baa8:	7852      	ldrb	r2, [r2, #1]
9001baaa:	9005      	str	r0, [sp, #20]
9001baac:	0212      	lsls	r2, r2, #8
9001baae:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bab0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001bab4:	5cc3      	ldrb	r3, [r0, r3]
9001bab6:	431a      	orrs	r2, r3
9001bab8:	b293      	uxth	r3, r2
9001baba:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001babe:	930b      	str	r3, [sp, #44]	; 0x2c
9001bac0:	2300      	movs	r3, #0
9001bac2:	9309      	str	r3, [sp, #36]	; 0x24
9001bac4:	2301      	movs	r3, #1
9001bac6:	9301      	str	r3, [sp, #4]
9001bac8:	9304      	str	r3, [sp, #16]
9001baca:	2300      	movs	r3, #0
9001bacc:	9303      	str	r3, [sp, #12]
9001bace:	2d00      	cmp	r5, #0
9001bad0:	d07d      	beq.n	9001bbce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001bad2:	45ae      	cmp	lr, r5
9001bad4:	d26c      	bcs.n	9001bbb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001bad6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001bad8:	eba5 050e 	sub.w	r5, r5, lr
9001badc:	460c      	mov	r4, r1
9001bade:	4543      	cmp	r3, r8
9001bae0:	b2ad      	uxth	r5, r5
9001bae2:	d802      	bhi.n	9001baea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001bae4:	e071      	b.n	9001bbca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001bae6:	2b00      	cmp	r3, #0
9001bae8:	d15d      	bne.n	9001bba6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001baea:	9b05      	ldr	r3, [sp, #20]
9001baec:	9a04      	ldr	r2, [sp, #16]
9001baee:	785b      	ldrb	r3, [r3, #1]
9001baf0:	f1c2 0207 	rsb	r2, r2, #7
9001baf4:	9904      	ldr	r1, [sp, #16]
9001baf6:	4093      	lsls	r3, r2
9001baf8:	005b      	lsls	r3, r3, #1
9001bafa:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001bafe:	9b05      	ldr	r3, [sp, #20]
9001bb00:	781b      	ldrb	r3, [r3, #0]
9001bb02:	410b      	asrs	r3, r1
9001bb04:	3101      	adds	r1, #1
9001bb06:	b2c9      	uxtb	r1, r1
9001bb08:	b2db      	uxtb	r3, r3
9001bb0a:	2908      	cmp	r1, #8
9001bb0c:	9104      	str	r1, [sp, #16]
9001bb0e:	9905      	ldr	r1, [sp, #20]
9001bb10:	ea43 0302 	orr.w	r3, r3, r2
9001bb14:	bf0c      	ite	eq
9001bb16:	3102      	addeq	r1, #2
9001bb18:	3101      	addne	r1, #1
9001bb1a:	b29a      	uxth	r2, r3
9001bb1c:	bf05      	ittet	eq
9001bb1e:	9105      	streq	r1, [sp, #20]
9001bb20:	2100      	moveq	r1, #0
9001bb22:	9105      	strne	r1, [sp, #20]
9001bb24:	9104      	streq	r1, [sp, #16]
9001bb26:	9910      	ldr	r1, [sp, #64]	; 0x40
9001bb28:	4291      	cmp	r1, r2
9001bb2a:	d30a      	bcc.n	9001bb42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001bb2c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001bb30:	2301      	movs	r3, #1
9001bb32:	9907      	ldr	r1, [sp, #28]
9001bb34:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001bb38:	d30f      	bcc.n	9001bb5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001bb3a:	2100      	movs	r1, #0
9001bb3c:	9301      	str	r3, [sp, #4]
9001bb3e:	9103      	str	r1, [sp, #12]
9001bb40:	e032      	b.n	9001bba8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001bb42:	9b07      	ldr	r3, [sp, #28]
9001bb44:	429a      	cmp	r2, r3
9001bb46:	d318      	bcc.n	9001bb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001bb48:	9b01      	ldr	r3, [sp, #4]
9001bb4a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001bb4e:	445b      	add	r3, fp
9001bb50:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001bb54:	9b01      	ldr	r3, [sp, #4]
9001bb56:	3301      	adds	r3, #1
9001bb58:	b29b      	uxth	r3, r3
9001bb5a:	9907      	ldr	r1, [sp, #28]
9001bb5c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001bb60:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bb64:	7108      	strb	r0, [r1, #4]
9001bb66:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001bb68:	80c8      	strh	r0, [r1, #6]
9001bb6a:	9801      	ldr	r0, [sp, #4]
9001bb6c:	3001      	adds	r0, #1
9001bb6e:	7148      	strb	r0, [r1, #5]
9001bb70:	9907      	ldr	r1, [sp, #28]
9001bb72:	3101      	adds	r1, #1
9001bb74:	b289      	uxth	r1, r1
9001bb76:	9107      	str	r1, [sp, #28]
9001bb78:	e7df      	b.n	9001bb3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001bb7a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001bb7e:	4611      	mov	r1, r2
9001bb80:	795b      	ldrb	r3, [r3, #5]
9001bb82:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001bb86:	4458      	add	r0, fp
9001bb88:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001bb8a:	4406      	add	r6, r0
9001bb8c:	2e00      	cmp	r6, #0
9001bb8e:	dd06      	ble.n	9001bb9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001bb90:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bb94:	790e      	ldrb	r6, [r1, #4]
9001bb96:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001bb9a:	88c9      	ldrh	r1, [r1, #6]
9001bb9c:	e7f4      	b.n	9001bb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001bb9e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001bba2:	b29b      	uxth	r3, r3
9001bba4:	e7c5      	b.n	9001bb32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001bba6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001bba8:	4621      	mov	r1, r4
9001bbaa:	920b      	str	r2, [sp, #44]	; 0x2c
9001bbac:	469e      	mov	lr, r3
9001bbae:	e78e      	b.n	9001bace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001bbb0:	9a03      	ldr	r2, [sp, #12]
9001bbb2:	ebae 0305 	sub.w	r3, lr, r5
9001bbb6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bbba:	442a      	add	r2, r5
9001bbbc:	b29b      	uxth	r3, r3
9001bbbe:	b292      	uxth	r2, r2
9001bbc0:	9203      	str	r2, [sp, #12]
9001bbc2:	2500      	movs	r5, #0
9001bbc4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001bbc6:	4542      	cmp	r2, r8
9001bbc8:	d88d      	bhi.n	9001bae6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001bbca:	4621      	mov	r1, r4
9001bbcc:	e74d      	b.n	9001ba6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001bbce:	458e      	cmp	lr, r1
9001bbd0:	f04f 0900 	mov.w	r9, #0
9001bbd4:	bf2b      	itete	cs
9001bbd6:	ebae 0301 	subcs.w	r3, lr, r1
9001bbda:	eba1 040e 	subcc.w	r4, r1, lr
9001bbde:	462c      	movcs	r4, r5
9001bbe0:	462b      	movcc	r3, r5
9001bbe2:	bf27      	ittee	cs
9001bbe4:	b29b      	uxthcs	r3, r3
9001bbe6:	910c      	strcs	r1, [sp, #48]	; 0x30
9001bbe8:	b2a4      	uxthcc	r4, r4
9001bbea:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001bbee:	9a03      	ldr	r2, [sp, #12]
9001bbf0:	980c      	ldr	r0, [sp, #48]	; 0x30
9001bbf2:	444a      	add	r2, r9
9001bbf4:	4548      	cmp	r0, r9
9001bbf6:	b292      	uxth	r2, r2
9001bbf8:	d074      	beq.n	9001bce4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001bbfa:	2004      	movs	r0, #4
9001bbfc:	445a      	add	r2, fp
9001bbfe:	4605      	mov	r5, r0
9001bc00:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001bc04:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bc06:	fb15 0202 	smlabb	r2, r5, r2, r0
9001bc0a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bc0c:	5880      	ldr	r0, [r0, r2]
9001bc0e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001bc12:	d014      	beq.n	9001bc3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bc14:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001bc18:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001bc1c:	d112      	bne.n	9001bc44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bc1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bc20:	2aff      	cmp	r2, #255	; 0xff
9001bc22:	d10f      	bne.n	9001bc44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bc24:	0942      	lsrs	r2, r0, #5
9001bc26:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001bc2a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bc2e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bc32:	f025 0507 	bic.w	r5, r5, #7
9001bc36:	4315      	orrs	r5, r2
9001bc38:	4305      	orrs	r5, r0
9001bc3a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001bc3e:	f109 0901 	add.w	r9, r9, #1
9001bc42:	e7d4      	b.n	9001bbee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001bc44:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001bc48:	b2ed      	uxtb	r5, r5
9001bc4a:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001bc4e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bc52:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001bc56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bc5a:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001bc5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bc62:	9215      	str	r2, [sp, #84]	; 0x54
9001bc64:	fa5f fc8c 	uxtb.w	ip, ip
9001bc68:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bc6a:	b2c0      	uxtb	r0, r0
9001bc6c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001bc70:	fb02 fa0a 	mul.w	sl, r2, sl
9001bc74:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001bc78:	f10a 0201 	add.w	r2, sl, #1
9001bc7c:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001bc80:	1212      	asrs	r2, r2, #8
9001bc82:	fa1f fa82 	uxth.w	sl, r2
9001bc86:	43d2      	mvns	r2, r2
9001bc88:	fb16 f60a 	smulbb	r6, r6, sl
9001bc8c:	b2d2      	uxtb	r2, r2
9001bc8e:	fb10 f00a 	smulbb	r0, r0, sl
9001bc92:	fb07 6702 	mla	r7, r7, r2, r6
9001bc96:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001bc98:	fb0c 0002 	mla	r0, ip, r2, r0
9001bc9c:	fb15 f50a 	smulbb	r5, r5, sl
9001bca0:	b2bf      	uxth	r7, r7
9001bca2:	b280      	uxth	r0, r0
9001bca4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001bca8:	fb06 5602 	mla	r6, r6, r2, r5
9001bcac:	1c7a      	adds	r2, r7, #1
9001bcae:	1c45      	adds	r5, r0, #1
9001bcb0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001bcb4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001bcb8:	b2b6      	uxth	r6, r6
9001bcba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001bcbe:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001bcc2:	432f      	orrs	r7, r5
9001bcc4:	1c75      	adds	r5, r6, #1
9001bcc6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001bcca:	096d      	lsrs	r5, r5, #5
9001bccc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001bcd0:	432f      	orrs	r7, r5
9001bcd2:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001bcd6:	e7b2      	b.n	9001bc3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bcd8:	2402356c 	.word	0x2402356c
9001bcdc:	24023566 	.word	0x24023566
9001bce0:	fffff7fb 	.word	0xfffff7fb
9001bce4:	9203      	str	r2, [sp, #12]
9001bce6:	458e      	cmp	lr, r1
9001bce8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001bcea:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bcee:	f4ff af68 	bcc.w	9001bbc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001bcf2:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001bcf4:	9906      	ldr	r1, [sp, #24]
9001bcf6:	8812      	ldrh	r2, [r2, #0]
9001bcf8:	1a52      	subs	r2, r2, r1
9001bcfa:	9914      	ldr	r1, [sp, #80]	; 0x50
9001bcfc:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001bd00:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001bd02:	3201      	adds	r2, #1
9001bd04:	428a      	cmp	r2, r1
9001bd06:	9209      	str	r2, [sp, #36]	; 0x24
9001bd08:	d111      	bne.n	9001bd2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001bd0a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001bd0e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001bd12:	9b06      	ldr	r3, [sp, #24]
9001bd14:	eba5 0509 	sub.w	r5, r5, r9
9001bd18:	b2ad      	uxth	r5, r5
9001bd1a:	2d00      	cmp	r5, #0
9001bd1c:	bf08      	it	eq
9001bd1e:	4619      	moveq	r1, r3
9001bd20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bd22:	bf18      	it	ne
9001bd24:	2100      	movne	r1, #0
9001bd26:	3301      	adds	r3, #1
9001bd28:	b289      	uxth	r1, r1
9001bd2a:	930d      	str	r3, [sp, #52]	; 0x34
9001bd2c:	e694      	b.n	9001ba58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001bd2e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bd32:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001bd36:	1b2d      	subs	r5, r5, r4
9001bd38:	b2ad      	uxth	r5, r5
9001bd3a:	2d00      	cmp	r5, #0
9001bd3c:	bf18      	it	ne
9001bd3e:	2400      	movne	r4, #0
9001bd40:	e740      	b.n	9001bbc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001bd42:	4b04      	ldr	r3, [pc, #16]	; (9001bd54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001bd44:	6818      	ldr	r0, [r3, #0]
9001bd46:	6803      	ldr	r3, [r0, #0]
9001bd48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bd4a:	4798      	blx	r3
9001bd4c:	b01d      	add	sp, #116	; 0x74
9001bd4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bd52:	bf00      	nop
9001bd54:	2402356c 	.word	0x2402356c

9001bd58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001bd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bd5c:	b09f      	sub	sp, #124	; 0x7c
9001bd5e:	461d      	mov	r5, r3
9001bd60:	4604      	mov	r4, r0
9001bd62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001bd64:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001bd68:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001bd6c:	920a      	str	r2, [sp, #40]	; 0x28
9001bd6e:	2a00      	cmp	r2, #0
9001bd70:	f000 81fe 	beq.w	9001c170 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001bd74:	6828      	ldr	r0, [r5, #0]
9001bd76:	aa1a      	add	r2, sp, #104	; 0x68
9001bd78:	6869      	ldr	r1, [r5, #4]
9001bd7a:	c203      	stmia	r2!, {r0, r1}
9001bd7c:	6818      	ldr	r0, [r3, #0]
9001bd7e:	aa1c      	add	r2, sp, #112	; 0x70
9001bd80:	6859      	ldr	r1, [r3, #4]
9001bd82:	c203      	stmia	r2!, {r0, r1}
9001bd84:	a81a      	add	r0, sp, #104	; 0x68
9001bd86:	f7f8 fe59 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bd8a:	4629      	mov	r1, r5
9001bd8c:	a81c      	add	r0, sp, #112	; 0x70
9001bd8e:	f7f8 fe99 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bd92:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bd96:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bd9a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bd9e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001bda2:	bfdb      	ittet	le
9001bda4:	b29a      	uxthle	r2, r3
9001bda6:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bdaa:	2201      	movgt	r2, #1
9001bdac:	fb91 f2f2 	sdivle	r2, r1, r2
9001bdb0:	9201      	str	r2, [sp, #4]
9001bdb2:	9801      	ldr	r0, [sp, #4]
9001bdb4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001bdb8:	9901      	ldr	r1, [sp, #4]
9001bdba:	fb92 f0f0 	sdiv	r0, r2, r0
9001bdbe:	b280      	uxth	r0, r0
9001bdc0:	440e      	add	r6, r1
9001bdc2:	9010      	str	r0, [sp, #64]	; 0x40
9001bdc4:	3e01      	subs	r6, #1
9001bdc6:	9801      	ldr	r0, [sp, #4]
9001bdc8:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001bdca:	fb05 2510 	mls	r5, r5, r0, r2
9001bdce:	fb96 f6f1 	sdiv	r6, r6, r1
9001bdd2:	fb15 f503 	smulbb	r5, r5, r3
9001bdd6:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001bdda:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001bdde:	3601      	adds	r6, #1
9001bde0:	440d      	add	r5, r1
9001bde2:	4419      	add	r1, r3
9001bde4:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001bde8:	b2b6      	uxth	r6, r6
9001bdea:	441a      	add	r2, r3
9001bdec:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001bdf0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001bdf4:	b2ad      	uxth	r5, r5
9001bdf6:	9304      	str	r3, [sp, #16]
9001bdf8:	4b96      	ldr	r3, [pc, #600]	; (9001c054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001bdfa:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001bdfe:	6818      	ldr	r0, [r3, #0]
9001be00:	6803      	ldr	r3, [r0, #0]
9001be02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001be04:	4798      	blx	r3
9001be06:	4b94      	ldr	r3, [pc, #592]	; (9001c058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001be08:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001be0c:	2d00      	cmp	r5, #0
9001be0e:	881a      	ldrh	r2, [r3, #0]
9001be10:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001be14:	fb02 f707 	mul.w	r7, r2, r7
9001be18:	fb02 c101 	mla	r1, r2, r1, ip
9001be1c:	9318      	str	r3, [sp, #96]	; 0x60
9001be1e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001be22:	4b8e      	ldr	r3, [pc, #568]	; (9001c05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001be24:	bf18      	it	ne
9001be26:	2100      	movne	r1, #0
9001be28:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001be2c:	eba3 0304 	sub.w	r3, r3, r4
9001be30:	920b      	str	r2, [sp, #44]	; 0x2c
9001be32:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001be34:	9319      	str	r3, [sp, #100]	; 0x64
9001be36:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001be3a:	f106 0204 	add.w	r2, r6, #4
9001be3e:	9206      	str	r2, [sp, #24]
9001be40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001be42:	ea6f 0202 	mvn.w	r2, r2
9001be46:	b2d2      	uxtb	r2, r2
9001be48:	9215      	str	r2, [sp, #84]	; 0x54
9001be4a:	9a04      	ldr	r2, [sp, #16]
9001be4c:	bf08      	it	eq
9001be4e:	4611      	moveq	r1, r2
9001be50:	2200      	movs	r2, #0
9001be52:	b289      	uxth	r1, r1
9001be54:	920d      	str	r2, [sp, #52]	; 0x34
9001be56:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001be58:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001be5a:	fa12 f383 	uxtah	r3, r2, r3
9001be5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001be60:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001be64:	3304      	adds	r3, #4
9001be66:	9307      	str	r3, [sp, #28]
9001be68:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001be6a:	455b      	cmp	r3, fp
9001be6c:	f240 817b 	bls.w	9001c166 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001be70:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001be74:	f04f 0801 	mov.w	r8, #1
9001be78:	9a01      	ldr	r2, [sp, #4]
9001be7a:	9807      	ldr	r0, [sp, #28]
9001be7c:	46c4      	mov	ip, r8
9001be7e:	f8cd 8008 	str.w	r8, [sp, #8]
9001be82:	7800      	ldrb	r0, [r0, #0]
9001be84:	fbb5 f3f3 	udiv	r3, r5, r3
9001be88:	1ad3      	subs	r3, r2, r3
9001be8a:	9011      	str	r0, [sp, #68]	; 0x44
9001be8c:	3001      	adds	r0, #1
9001be8e:	b29b      	uxth	r3, r3
9001be90:	9005      	str	r0, [sp, #20]
9001be92:	9316      	str	r3, [sp, #88]	; 0x58
9001be94:	9b07      	ldr	r3, [sp, #28]
9001be96:	785a      	ldrb	r2, [r3, #1]
9001be98:	789b      	ldrb	r3, [r3, #2]
9001be9a:	021b      	lsls	r3, r3, #8
9001be9c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001bea0:	9a07      	ldr	r2, [sp, #28]
9001bea2:	78d2      	ldrb	r2, [r2, #3]
9001bea4:	4313      	orrs	r3, r2
9001bea6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001bea8:	441a      	add	r2, r3
9001beaa:	1c50      	adds	r0, r2, #1
9001beac:	7852      	ldrb	r2, [r2, #1]
9001beae:	9003      	str	r0, [sp, #12]
9001beb0:	0212      	lsls	r2, r2, #8
9001beb2:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001beb4:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001beb8:	5cc3      	ldrb	r3, [r0, r3]
9001beba:	431a      	orrs	r2, r3
9001bebc:	b293      	uxth	r3, r2
9001bebe:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001bec2:	930c      	str	r3, [sp, #48]	; 0x30
9001bec4:	2300      	movs	r3, #0
9001bec6:	9308      	str	r3, [sp, #32]
9001bec8:	461a      	mov	r2, r3
9001beca:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001bece:	930e      	str	r3, [sp, #56]	; 0x38
9001bed0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001bed4:	930f      	str	r3, [sp, #60]	; 0x3c
9001bed6:	2d00      	cmp	r5, #0
9001bed8:	d07d      	beq.n	9001bfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001beda:	45ac      	cmp	ip, r5
9001bedc:	d26d      	bcs.n	9001bfba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001bede:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001bee0:	eba5 050c 	sub.w	r5, r5, ip
9001bee4:	4608      	mov	r0, r1
9001bee6:	455b      	cmp	r3, fp
9001bee8:	b2ad      	uxth	r5, r5
9001beea:	d802      	bhi.n	9001bef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001beec:	e071      	b.n	9001bfd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001beee:	2b00      	cmp	r3, #0
9001bef0:	d15d      	bne.n	9001bfae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001bef2:	9b03      	ldr	r3, [sp, #12]
9001bef4:	9a02      	ldr	r2, [sp, #8]
9001bef6:	785b      	ldrb	r3, [r3, #1]
9001bef8:	f1c2 0207 	rsb	r2, r2, #7
9001befc:	9902      	ldr	r1, [sp, #8]
9001befe:	4093      	lsls	r3, r2
9001bf00:	005b      	lsls	r3, r3, #1
9001bf02:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001bf06:	9b03      	ldr	r3, [sp, #12]
9001bf08:	781b      	ldrb	r3, [r3, #0]
9001bf0a:	410b      	asrs	r3, r1
9001bf0c:	3101      	adds	r1, #1
9001bf0e:	b2c9      	uxtb	r1, r1
9001bf10:	b2db      	uxtb	r3, r3
9001bf12:	2908      	cmp	r1, #8
9001bf14:	9102      	str	r1, [sp, #8]
9001bf16:	9903      	ldr	r1, [sp, #12]
9001bf18:	ea43 0302 	orr.w	r3, r3, r2
9001bf1c:	bf0c      	ite	eq
9001bf1e:	3102      	addeq	r1, #2
9001bf20:	3101      	addne	r1, #1
9001bf22:	b29a      	uxth	r2, r3
9001bf24:	bf05      	ittet	eq
9001bf26:	9103      	streq	r1, [sp, #12]
9001bf28:	2100      	moveq	r1, #0
9001bf2a:	9103      	strne	r1, [sp, #12]
9001bf2c:	9102      	streq	r1, [sp, #8]
9001bf2e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001bf30:	4291      	cmp	r1, r2
9001bf32:	d30a      	bcc.n	9001bf4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001bf34:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001bf38:	2301      	movs	r3, #1
9001bf3a:	9905      	ldr	r1, [sp, #20]
9001bf3c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001bf40:	d30f      	bcc.n	9001bf62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001bf42:	2100      	movs	r1, #0
9001bf44:	4698      	mov	r8, r3
9001bf46:	9100      	str	r1, [sp, #0]
9001bf48:	e032      	b.n	9001bfb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001bf4a:	9b05      	ldr	r3, [sp, #20]
9001bf4c:	429a      	cmp	r2, r3
9001bf4e:	d318      	bcc.n	9001bf82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001bf50:	eb04 0308 	add.w	r3, r4, r8
9001bf54:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001bf58:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001bf5c:	f108 0301 	add.w	r3, r8, #1
9001bf60:	b29b      	uxth	r3, r3
9001bf62:	9905      	ldr	r1, [sp, #20]
9001bf64:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001bf68:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001bf6c:	710e      	strb	r6, [r1, #4]
9001bf6e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001bf70:	80ce      	strh	r6, [r1, #6]
9001bf72:	f108 0601 	add.w	r6, r8, #1
9001bf76:	714e      	strb	r6, [r1, #5]
9001bf78:	9905      	ldr	r1, [sp, #20]
9001bf7a:	3101      	adds	r1, #1
9001bf7c:	b289      	uxth	r1, r1
9001bf7e:	9105      	str	r1, [sp, #20]
9001bf80:	e7df      	b.n	9001bf42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001bf82:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001bf86:	4611      	mov	r1, r2
9001bf88:	795b      	ldrb	r3, [r3, #5]
9001bf8a:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001bf8e:	4426      	add	r6, r4
9001bf90:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001bf92:	4437      	add	r7, r6
9001bf94:	2f00      	cmp	r7, #0
9001bf96:	dd06      	ble.n	9001bfa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001bf98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001bf9c:	790f      	ldrb	r7, [r1, #4]
9001bf9e:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001bfa2:	88c9      	ldrh	r1, [r1, #6]
9001bfa4:	e7f4      	b.n	9001bf90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001bfa6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001bfaa:	b29b      	uxth	r3, r3
9001bfac:	e7c5      	b.n	9001bf3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001bfae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001bfb0:	920c      	str	r2, [sp, #48]	; 0x30
9001bfb2:	4601      	mov	r1, r0
9001bfb4:	9a00      	ldr	r2, [sp, #0]
9001bfb6:	469c      	mov	ip, r3
9001bfb8:	e78d      	b.n	9001bed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001bfba:	ebac 0305 	sub.w	r3, ip, r5
9001bfbe:	1957      	adds	r7, r2, r5
9001bfc0:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001bfc4:	b2ba      	uxth	r2, r7
9001bfc6:	b29b      	uxth	r3, r3
9001bfc8:	9200      	str	r2, [sp, #0]
9001bfca:	2500      	movs	r5, #0
9001bfcc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001bfce:	455a      	cmp	r2, fp
9001bfd0:	d88d      	bhi.n	9001beee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001bfd2:	4601      	mov	r1, r0
9001bfd4:	e748      	b.n	9001be68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001bfd6:	458c      	cmp	ip, r1
9001bfd8:	bf27      	ittee	cs
9001bfda:	ebac 0301 	subcs.w	r3, ip, r1
9001bfde:	4628      	movcs	r0, r5
9001bfe0:	eba1 000c 	subcc.w	r0, r1, ip
9001bfe4:	462b      	movcc	r3, r5
9001bfe6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001bfe8:	bf27      	ittee	cs
9001bfea:	b29b      	uxthcs	r3, r3
9001bfec:	9109      	strcs	r1, [sp, #36]	; 0x24
9001bfee:	b280      	uxthcc	r0, r0
9001bff0:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001bff4:	2dff      	cmp	r5, #255	; 0xff
9001bff6:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001bff8:	eb02 0705 	add.w	r7, r2, r5
9001bffc:	b2bd      	uxth	r5, r7
9001bffe:	9500      	str	r5, [sp, #0]
9001c000:	d12e      	bne.n	9001c060 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001c002:	465e      	mov	r6, fp
9001c004:	9d00      	ldr	r5, [sp, #0]
9001c006:	42aa      	cmp	r2, r5
9001c008:	f040 8083 	bne.w	9001c112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001c00c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c00e:	458c      	cmp	ip, r1
9001c010:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c014:	d3d9      	bcc.n	9001bfca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001c016:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001c018:	9904      	ldr	r1, [sp, #16]
9001c01a:	8812      	ldrh	r2, [r2, #0]
9001c01c:	1a52      	subs	r2, r2, r1
9001c01e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001c020:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c024:	9a08      	ldr	r2, [sp, #32]
9001c026:	3201      	adds	r2, #1
9001c028:	428a      	cmp	r2, r1
9001c02a:	9208      	str	r2, [sp, #32]
9001c02c:	f040 8091 	bne.w	9001c152 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001c030:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001c034:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001c038:	9b04      	ldr	r3, [sp, #16]
9001c03a:	eba5 050c 	sub.w	r5, r5, ip
9001c03e:	b2ad      	uxth	r5, r5
9001c040:	2d00      	cmp	r5, #0
9001c042:	bf08      	it	eq
9001c044:	4619      	moveq	r1, r3
9001c046:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c048:	bf18      	it	ne
9001c04a:	2100      	movne	r1, #0
9001c04c:	3301      	adds	r3, #1
9001c04e:	b289      	uxth	r1, r1
9001c050:	930d      	str	r3, [sp, #52]	; 0x34
9001c052:	e700      	b.n	9001be56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001c054:	2402356c 	.word	0x2402356c
9001c058:	24023566 	.word	0x24023566
9001c05c:	fffff7fb 	.word	0xfffff7fb
9001c060:	46d9      	mov	r9, fp
9001c062:	9d00      	ldr	r5, [sp, #0]
9001c064:	42aa      	cmp	r2, r5
9001c066:	d0d1      	beq.n	9001c00c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001c068:	1c55      	adds	r5, r2, #1
9001c06a:	4422      	add	r2, r4
9001c06c:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001c070:	9a06      	ldr	r2, [sp, #24]
9001c072:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c076:	9517      	str	r5, [sp, #92]	; 0x5c
9001c078:	4472      	add	r2, lr
9001c07a:	9212      	str	r2, [sp, #72]	; 0x48
9001c07c:	f8b9 2000 	ldrh.w	r2, [r9]
9001c080:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c082:	1216      	asrs	r6, r2, #8
9001c084:	f897 a002 	ldrb.w	sl, [r7, #2]
9001c088:	10d5      	asrs	r5, r2, #3
9001c08a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c08c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c090:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c094:	00d2      	lsls	r2, r2, #3
9001c096:	fb1a fa07 	smulbb	sl, sl, r7
9001c09a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c09e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c0a0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c0a4:	b2d2      	uxtb	r2, r2
9001c0a6:	fb06 a607 	mla	r6, r6, r7, sl
9001c0aa:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c0ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c0b0:	f897 a001 	ldrb.w	sl, [r7, #1]
9001c0b4:	b2b6      	uxth	r6, r6
9001c0b6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c0b8:	fb1a fa07 	smulbb	sl, sl, r7
9001c0bc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c0be:	fb05 a507 	mla	r5, r5, r7, sl
9001c0c2:	9f06      	ldr	r7, [sp, #24]
9001c0c4:	f106 0a01 	add.w	sl, r6, #1
9001c0c8:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001c0cc:	b2ad      	uxth	r5, r5
9001c0ce:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c0d0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001c0d4:	f105 0a01 	add.w	sl, r5, #1
9001c0d8:	fb1e fe07 	smulbb	lr, lr, r7
9001c0dc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c0de:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c0e2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c0e6:	fb02 e207 	mla	r2, r2, r7, lr
9001c0ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c0ee:	b292      	uxth	r2, r2
9001c0f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c0f4:	f102 0e01 	add.w	lr, r2, #1
9001c0f8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001c0fc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001c100:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001c104:	ea4e 0606 	orr.w	r6, lr, r6
9001c108:	ea46 060a 	orr.w	r6, r6, sl
9001c10c:	f829 6b02 	strh.w	r6, [r9], #2
9001c110:	e7a7      	b.n	9001c062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001c112:	f102 0e01 	add.w	lr, r2, #1
9001c116:	4422      	add	r2, r4
9001c118:	9f06      	ldr	r7, [sp, #24]
9001c11a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001c11e:	9a06      	ldr	r2, [sp, #24]
9001c120:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001c124:	eb02 0a05 	add.w	sl, r2, r5
9001c128:	4a13      	ldr	r2, [pc, #76]	; (9001c178 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001c12a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001c12e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001c132:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001c136:	00d2      	lsls	r2, r2, #3
9001c138:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c13c:	ea49 0202 	orr.w	r2, r9, r2
9001c140:	f817 9005 	ldrb.w	r9, [r7, r5]
9001c144:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001c148:	f826 2b02 	strh.w	r2, [r6], #2
9001c14c:	fa1f f28e 	uxth.w	r2, lr
9001c150:	e758      	b.n	9001c004 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001c152:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c156:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001c15a:	1a2d      	subs	r5, r5, r0
9001c15c:	b2ad      	uxth	r5, r5
9001c15e:	2d00      	cmp	r5, #0
9001c160:	bf18      	it	ne
9001c162:	2000      	movne	r0, #0
9001c164:	e732      	b.n	9001bfcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001c166:	4b05      	ldr	r3, [pc, #20]	; (9001c17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001c168:	6818      	ldr	r0, [r3, #0]
9001c16a:	6803      	ldr	r3, [r0, #0]
9001c16c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c16e:	4798      	blx	r3
9001c170:	b01f      	add	sp, #124	; 0x7c
9001c172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c176:	bf00      	nop
9001c178:	fffff800 	.word	0xfffff800
9001c17c:	2402356c 	.word	0x2402356c

9001c180 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001c180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c184:	b091      	sub	sp, #68	; 0x44
9001c186:	469b      	mov	fp, r3
9001c188:	4616      	mov	r6, r2
9001c18a:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c18e:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001c192:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001c196:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001c19a:	4604      	mov	r4, r0
9001c19c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c1a0:	4640      	mov	r0, r8
9001c1a2:	460d      	mov	r5, r1
9001c1a4:	4659      	mov	r1, fp
9001c1a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c1aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c1ae:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001c1b2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001c1b6:	f7f3 fed7 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001c1ba:	4631      	mov	r1, r6
9001c1bc:	4640      	mov	r0, r8
9001c1be:	f7f3 fed3 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001c1c2:	4b74      	ldr	r3, [pc, #464]	; (9001c394 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001c1c4:	8818      	ldrh	r0, [r3, #0]
9001c1c6:	4b74      	ldr	r3, [pc, #464]	; (9001c398 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001c1c8:	b202      	sxth	r2, r0
9001c1ca:	8819      	ldrh	r1, [r3, #0]
9001c1cc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c1d0:	b20e      	sxth	r6, r1
9001c1d2:	2b00      	cmp	r3, #0
9001c1d4:	da07      	bge.n	9001c1e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001c1d6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001c1da:	4463      	add	r3, ip
9001c1dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001c1e0:	2300      	movs	r3, #0
9001c1e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001c1e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c1ea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c1ee:	1ad2      	subs	r2, r2, r3
9001c1f0:	4594      	cmp	ip, r2
9001c1f2:	bfc4      	itt	gt
9001c1f4:	1ac2      	subgt	r2, r0, r3
9001c1f6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001c1fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c1fe:	2a00      	cmp	r2, #0
9001c200:	da07      	bge.n	9001c212 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001c202:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001c206:	4462      	add	r2, ip
9001c208:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001c20c:	2200      	movs	r2, #0
9001c20e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001c212:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001c216:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c21a:	eba6 060a 	sub.w	r6, r6, sl
9001c21e:	42b2      	cmp	r2, r6
9001c220:	bfc4      	itt	gt
9001c222:	eba1 020a 	subgt.w	r2, r1, sl
9001c226:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001c22a:	4a5c      	ldr	r2, [pc, #368]	; (9001c39c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001c22c:	7812      	ldrb	r2, [r2, #0]
9001c22e:	b9a2      	cbnz	r2, 9001c25a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001c230:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c234:	4286      	cmp	r6, r0
9001c236:	4640      	mov	r0, r8
9001c238:	9303      	str	r3, [sp, #12]
9001c23a:	bf14      	ite	ne
9001c23c:	2600      	movne	r6, #0
9001c23e:	2601      	moveq	r6, #1
9001c240:	f7f3 fed5 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001c244:	9b03      	ldr	r3, [sp, #12]
9001c246:	b160      	cbz	r0, 9001c262 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001c248:	2300      	movs	r3, #0
9001c24a:	8023      	strh	r3, [r4, #0]
9001c24c:	8063      	strh	r3, [r4, #2]
9001c24e:	80a3      	strh	r3, [r4, #4]
9001c250:	4620      	mov	r0, r4
9001c252:	80e3      	strh	r3, [r4, #6]
9001c254:	b011      	add	sp, #68	; 0x44
9001c256:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c25a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c25e:	428e      	cmp	r6, r1
9001c260:	e7e9      	b.n	9001c236 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001c262:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001c266:	a90e      	add	r1, sp, #56	; 0x38
9001c268:	900e      	str	r0, [sp, #56]	; 0x38
9001c26a:	a80c      	add	r0, sp, #48	; 0x30
9001c26c:	9205      	str	r2, [sp, #20]
9001c26e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c272:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001c276:	9206      	str	r2, [sp, #24]
9001c278:	f8bb 2000 	ldrh.w	r2, [fp]
9001c27c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001c280:	1a9b      	subs	r3, r3, r2
9001c282:	b21b      	sxth	r3, r3
9001c284:	9303      	str	r3, [sp, #12]
9001c286:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c28a:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001c3a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c28e:	ebaa 0a03 	sub.w	sl, sl, r3
9001c292:	fa0f f38a 	sxth.w	r3, sl
9001c296:	9304      	str	r3, [sp, #16]
9001c298:	9b03      	ldr	r3, [sp, #12]
9001c29a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001c29e:	9b04      	ldr	r3, [sp, #16]
9001c2a0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c2a4:	9b05      	ldr	r3, [sp, #20]
9001c2a6:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001c2aa:	9b06      	ldr	r3, [sp, #24]
9001c2ac:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001c2b0:	f7f8 fc08 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c2b4:	4640      	mov	r0, r8
9001c2b6:	f7f8 fbc1 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c2ba:	a80e      	add	r0, sp, #56	; 0x38
9001c2bc:	f7f8 fbbe 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c2c0:	4b37      	ldr	r3, [pc, #220]	; (9001c3a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001c2c2:	4628      	mov	r0, r5
9001c2c4:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001c2c8:	881b      	ldrh	r3, [r3, #0]
9001c2ca:	9307      	str	r3, [sp, #28]
9001c2cc:	682b      	ldr	r3, [r5, #0]
9001c2ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c2d0:	4798      	blx	r3
9001c2d2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001c2d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001c2da:	4681      	mov	r9, r0
9001c2dc:	f8db 0000 	ldr.w	r0, [fp]
9001c2e0:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001c2e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001c2e6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c2ea:	6803      	ldr	r3, [r0, #0]
9001c2ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c2ee:	4798      	blx	r3
9001c2f0:	4607      	mov	r7, r0
9001c2f2:	f8db 0000 	ldr.w	r0, [fp]
9001c2f6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001c2fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c2fe:	6803      	ldr	r3, [r0, #0]
9001c300:	9109      	str	r1, [sp, #36]	; 0x24
9001c302:	9208      	str	r2, [sp, #32]
9001c304:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c306:	4798      	blx	r3
9001c308:	f010 0f01 	tst.w	r0, #1
9001c30c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c310:	d012      	beq.n	9001c338 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001c312:	f8db 0000 	ldr.w	r0, [fp]
9001c316:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001c31a:	6803      	ldr	r3, [r0, #0]
9001c31c:	9200      	str	r2, [sp, #0]
9001c31e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001c320:	462b      	mov	r3, r5
9001c322:	e898 0006 	ldmia.w	r8, {r1, r2}
9001c326:	47b0      	blx	r6
9001c328:	9b03      	ldr	r3, [sp, #12]
9001c32a:	8023      	strh	r3, [r4, #0]
9001c32c:	9b04      	ldr	r3, [sp, #16]
9001c32e:	8063      	strh	r3, [r4, #2]
9001c330:	9b05      	ldr	r3, [sp, #20]
9001c332:	80a3      	strh	r3, [r4, #4]
9001c334:	9b06      	ldr	r3, [sp, #24]
9001c336:	e78b      	b.n	9001c250 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001c338:	fb09 f202 	mul.w	r2, r9, r2
9001c33c:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001c340:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001c344:	440f      	add	r7, r1
9001c346:	b166      	cbz	r6, 9001c362 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c348:	9a07      	ldr	r2, [sp, #28]
9001c34a:	4592      	cmp	sl, r2
9001c34c:	d109      	bne.n	9001c362 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c34e:	f8db 0000 	ldr.w	r0, [fp]
9001c352:	fb09 f303 	mul.w	r3, r9, r3
9001c356:	4629      	mov	r1, r5
9001c358:	6802      	ldr	r2, [r0, #0]
9001c35a:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001c35c:	463a      	mov	r2, r7
9001c35e:	47b0      	blx	r6
9001c360:	e7e2      	b.n	9001c328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c362:	fb0a f303 	mul.w	r3, sl, r3
9001c366:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001c36a:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001c3a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c36e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001c372:	4545      	cmp	r5, r8
9001c374:	d2d8      	bcs.n	9001c328 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c376:	f8db 0000 	ldr.w	r0, [fp]
9001c37a:	4629      	mov	r1, r5
9001c37c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001c380:	4435      	add	r5, r6
9001c382:	6802      	ldr	r2, [r0, #0]
9001c384:	005b      	lsls	r3, r3, #1
9001c386:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001c38a:	463a      	mov	r2, r7
9001c38c:	47d0      	blx	sl
9001c38e:	444f      	add	r7, r9
9001c390:	e7ef      	b.n	9001c372 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001c392:	bf00      	nop
9001c394:	24023560 	.word	0x24023560
9001c398:	24023562 	.word	0x24023562
9001c39c:	24023564 	.word	0x24023564
9001c3a0:	24023566 	.word	0x24023566
9001c3a4:	2402356c 	.word	0x2402356c

9001c3a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001c3a8:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c3aa:	4606      	mov	r6, r0
9001c3ac:	b087      	sub	sp, #28
9001c3ae:	460c      	mov	r4, r1
9001c3b0:	4617      	mov	r7, r2
9001c3b2:	461d      	mov	r5, r3
9001c3b4:	b333      	cbz	r3, 9001c404 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c3b6:	4608      	mov	r0, r1
9001c3b8:	f7f3 fe19 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001c3bc:	bb10      	cbnz	r0, 9001c404 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c3be:	6820      	ldr	r0, [r4, #0]
9001c3c0:	ab04      	add	r3, sp, #16
9001c3c2:	6861      	ldr	r1, [r4, #4]
9001c3c4:	4c1b      	ldr	r4, [pc, #108]	; (9001c434 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001c3c6:	c303      	stmia	r3!, {r0, r1}
9001c3c8:	a804      	add	r0, sp, #16
9001c3ca:	f7f8 fb37 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c3ce:	6820      	ldr	r0, [r4, #0]
9001c3d0:	6803      	ldr	r3, [r0, #0]
9001c3d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c3d4:	4798      	blx	r3
9001c3d6:	2dff      	cmp	r5, #255	; 0xff
9001c3d8:	d016      	beq.n	9001c408 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001c3da:	f010 0f08 	tst.w	r0, #8
9001c3de:	6820      	ldr	r0, [r4, #0]
9001c3e0:	d015      	beq.n	9001c40e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001c3e2:	2400      	movs	r4, #0
9001c3e4:	6801      	ldr	r1, [r0, #0]
9001c3e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c3ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c3ee:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001c3f2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001c3f6:	9401      	str	r4, [sp, #4]
9001c3f8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001c3fc:	9400      	str	r4, [sp, #0]
9001c3fe:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001c400:	4639      	mov	r1, r7
9001c402:	47a0      	blx	r4
9001c404:	b007      	add	sp, #28
9001c406:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c408:	f010 0f02 	tst.w	r0, #2
9001c40c:	e7e7      	b.n	9001c3de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001c40e:	6803      	ldr	r3, [r0, #0]
9001c410:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c412:	4798      	blx	r3
9001c414:	4b08      	ldr	r3, [pc, #32]	; (9001c438 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001c416:	4601      	mov	r1, r0
9001c418:	4630      	mov	r0, r6
9001c41a:	881a      	ldrh	r2, [r3, #0]
9001c41c:	6833      	ldr	r3, [r6, #0]
9001c41e:	e9cd 7500 	strd	r7, r5, [sp]
9001c422:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001c424:	ab04      	add	r3, sp, #16
9001c426:	47a8      	blx	r5
9001c428:	6820      	ldr	r0, [r4, #0]
9001c42a:	6803      	ldr	r3, [r0, #0]
9001c42c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c42e:	4798      	blx	r3
9001c430:	e7e8      	b.n	9001c404 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c432:	bf00      	nop
9001c434:	2402356c 	.word	0x2402356c
9001c438:	24023566 	.word	0x24023566

9001c43c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001c43c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c440:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001c444:	4688      	mov	r8, r1
9001c446:	4614      	mov	r4, r2
9001c448:	461d      	mov	r5, r3
9001c44a:	9e08      	ldr	r6, [sp, #32]
9001c44c:	2f00      	cmp	r7, #0
9001c44e:	f000 80ab 	beq.w	9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c452:	4618      	mov	r0, r3
9001c454:	f7f3 fdcb 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001c458:	2800      	cmp	r0, #0
9001c45a:	f040 80a5 	bne.w	9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c45e:	f9b5 1000 	ldrsh.w	r1, [r5]
9001c462:	2fff      	cmp	r7, #255	; 0xff
9001c464:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001c468:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001c46c:	fb04 1303 	mla	r3, r4, r3, r1
9001c470:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001c474:	eba4 0200 	sub.w	r2, r4, r0
9001c478:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001c47c:	fb04 f505 	mul.w	r5, r4, r5
9001c480:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001c484:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001c488:	d04a      	beq.n	9001c520 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001c48a:	b2bc      	uxth	r4, r7
9001c48c:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001c490:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001c494:	fa5f f788 	uxtb.w	r7, r8
9001c498:	b2f3      	uxtb	r3, r6
9001c49a:	0040      	lsls	r0, r0, #1
9001c49c:	fb0e fe04 	mul.w	lr, lr, r4
9001c4a0:	4367      	muls	r7, r4
9001c4a2:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001c4a6:	4363      	muls	r3, r4
9001c4a8:	fa1f fc8c 	uxth.w	ip, ip
9001c4ac:	42a9      	cmp	r1, r5
9001c4ae:	d27b      	bcs.n	9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c4b0:	eb01 0900 	add.w	r9, r1, r0
9001c4b4:	4549      	cmp	r1, r9
9001c4b6:	d231      	bcs.n	9001c51c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001c4b8:	880a      	ldrh	r2, [r1, #0]
9001c4ba:	1214      	asrs	r4, r2, #8
9001c4bc:	10d6      	asrs	r6, r2, #3
9001c4be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001c4c2:	00d2      	lsls	r2, r2, #3
9001c4c4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c4c8:	b2d2      	uxtb	r2, r2
9001c4ca:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001c4ce:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c4d2:	fb14 f40c 	smulbb	r4, r4, ip
9001c4d6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c4da:	fb12 f20c 	smulbb	r2, r2, ip
9001c4de:	fb16 f60c 	smulbb	r6, r6, ip
9001c4e2:	4474      	add	r4, lr
9001c4e4:	441a      	add	r2, r3
9001c4e6:	b2a4      	uxth	r4, r4
9001c4e8:	443e      	add	r6, r7
9001c4ea:	b292      	uxth	r2, r2
9001c4ec:	f104 0a01 	add.w	sl, r4, #1
9001c4f0:	b2b6      	uxth	r6, r6
9001c4f2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001c4f6:	f102 0a01 	add.w	sl, r2, #1
9001c4fa:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001c4fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001c502:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c506:	4322      	orrs	r2, r4
9001c508:	1c74      	adds	r4, r6, #1
9001c50a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001c50e:	0976      	lsrs	r6, r6, #5
9001c510:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c514:	4332      	orrs	r2, r6
9001c516:	f821 2b02 	strh.w	r2, [r1], #2
9001c51a:	e7cb      	b.n	9001c4b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001c51c:	4441      	add	r1, r8
9001c51e:	e7c5      	b.n	9001c4ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001c520:	0973      	lsrs	r3, r6, #5
9001c522:	4f22      	ldr	r7, [pc, #136]	; (9001c5ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001c524:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c528:	ea08 0707 	and.w	r7, r8, r7
9001c52c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c530:	433b      	orrs	r3, r7
9001c532:	07e7      	lsls	r7, r4, #31
9001c534:	ea43 0306 	orr.w	r3, r3, r6
9001c538:	b29b      	uxth	r3, r3
9001c53a:	d50b      	bpl.n	9001c554 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001c53c:	0040      	lsls	r0, r0, #1
9001c53e:	0052      	lsls	r2, r2, #1
9001c540:	42a9      	cmp	r1, r5
9001c542:	d231      	bcs.n	9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c544:	180c      	adds	r4, r1, r0
9001c546:	42a1      	cmp	r1, r4
9001c548:	d202      	bcs.n	9001c550 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001c54a:	f821 3b02 	strh.w	r3, [r1], #2
9001c54e:	e7fa      	b.n	9001c546 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001c550:	4411      	add	r1, r2
9001c552:	e7f5      	b.n	9001c540 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001c554:	078e      	lsls	r6, r1, #30
9001c556:	d008      	beq.n	9001c56a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001c558:	0066      	lsls	r6, r4, #1
9001c55a:	460a      	mov	r2, r1
9001c55c:	42aa      	cmp	r2, r5
9001c55e:	d202      	bcs.n	9001c566 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001c560:	8013      	strh	r3, [r2, #0]
9001c562:	4432      	add	r2, r6
9001c564:	e7fa      	b.n	9001c55c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001c566:	3102      	adds	r1, #2
9001c568:	3801      	subs	r0, #1
9001c56a:	07c2      	lsls	r2, r0, #31
9001c56c:	d50b      	bpl.n	9001c586 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001c56e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001c572:	0066      	lsls	r6, r4, #1
9001c574:	3a01      	subs	r2, #1
9001c576:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001c57a:	42aa      	cmp	r2, r5
9001c57c:	d202      	bcs.n	9001c584 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001c57e:	8013      	strh	r3, [r2, #0]
9001c580:	4432      	add	r2, r6
9001c582:	e7fa      	b.n	9001c57a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001c584:	3801      	subs	r0, #1
9001c586:	b178      	cbz	r0, 9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c588:	1040      	asrs	r0, r0, #1
9001c58a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001c58e:	0080      	lsls	r0, r0, #2
9001c590:	0064      	lsls	r4, r4, #1
9001c592:	42a9      	cmp	r1, r5
9001c594:	d208      	bcs.n	9001c5a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c596:	180e      	adds	r6, r1, r0
9001c598:	460a      	mov	r2, r1
9001c59a:	42b2      	cmp	r2, r6
9001c59c:	d202      	bcs.n	9001c5a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001c59e:	f842 3b04 	str.w	r3, [r2], #4
9001c5a2:	e7fa      	b.n	9001c59a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001c5a4:	4421      	add	r1, r4
9001c5a6:	e7f4      	b.n	9001c592 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001c5a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c5ac:	00fff800 	.word	0x00fff800

9001c5b0 <_ZN8touchgfx8LCD16bppC1Ev>:
9001c5b0:	2200      	movs	r2, #0
9001c5b2:	4912      	ldr	r1, [pc, #72]	; (9001c5fc <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001c5b4:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001c5b8:	6001      	str	r1, [r0, #0]
9001c5ba:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001c5be:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001c5c2:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001c5c6:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
9001c5ca:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
9001c5ce:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
9001c5d2:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
9001c5d6:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
9001c5da:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
9001c5de:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
9001c5e2:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001c5e6:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
9001c5ea:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
9001c5ee:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
9001c5f2:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
9001c5f6:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
9001c5fa:	4770      	bx	lr
9001c5fc:	9002a918 	.word	0x9002a918

9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001c600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c604:	b08d      	sub	sp, #52	; 0x34
9001c606:	460d      	mov	r5, r1
9001c608:	4604      	mov	r4, r0
9001c60a:	4699      	mov	r9, r3
9001c60c:	6808      	ldr	r0, [r1, #0]
9001c60e:	ab08      	add	r3, sp, #32
9001c610:	6849      	ldr	r1, [r1, #4]
9001c612:	c303      	stmia	r3!, {r0, r1}
9001c614:	6810      	ldr	r0, [r2, #0]
9001c616:	ab0a      	add	r3, sp, #40	; 0x28
9001c618:	6851      	ldr	r1, [r2, #4]
9001c61a:	c303      	stmia	r3!, {r0, r1}
9001c61c:	a808      	add	r0, sp, #32
9001c61e:	f7f8 fa0d 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c622:	4629      	mov	r1, r5
9001c624:	a80a      	add	r0, sp, #40	; 0x28
9001c626:	4d67      	ldr	r5, [pc, #412]	; (9001c7c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c628:	f7f8 fa4c 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c62c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001c630:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001c634:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001c638:	6828      	ldr	r0, [r5, #0]
9001c63a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c63e:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001c642:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c646:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c64a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001c64e:	440a      	add	r2, r1
9001c650:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c654:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001c658:	4413      	add	r3, r2
9001c65a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c65e:	6803      	ldr	r3, [r0, #0]
9001c660:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c662:	4798      	blx	r3
9001c664:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c668:	d119      	bne.n	9001c69e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001c66a:	f010 0f20 	tst.w	r0, #32
9001c66e:	6828      	ldr	r0, [r5, #0]
9001c670:	d018      	beq.n	9001c6a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001c672:	2500      	movs	r5, #0
9001c674:	6801      	ldr	r1, [r0, #0]
9001c676:	b2b6      	uxth	r6, r6
9001c678:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c67c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001c680:	9601      	str	r6, [sp, #4]
9001c682:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001c686:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001c68a:	9502      	str	r5, [sp, #8]
9001c68c:	fa1f f588 	uxth.w	r5, r8
9001c690:	9500      	str	r5, [sp, #0]
9001c692:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001c694:	4621      	mov	r1, r4
9001c696:	47a8      	blx	r5
9001c698:	b00d      	add	sp, #52	; 0x34
9001c69a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c69e:	f010 0f40 	tst.w	r0, #64	; 0x40
9001c6a2:	e7e4      	b.n	9001c66e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001c6a4:	6803      	ldr	r3, [r0, #0]
9001c6a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c6a8:	4798      	blx	r3
9001c6aa:	4947      	ldr	r1, [pc, #284]	; (9001c7c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001c6ac:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c6b0:	880b      	ldrh	r3, [r1, #0]
9001c6b2:	468a      	mov	sl, r1
9001c6b4:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001c6b8:	fb03 5202 	mla	r2, r3, r2, r5
9001c6bc:	4373      	muls	r3, r6
9001c6be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c6c2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c6c6:	9307      	str	r3, [sp, #28]
9001c6c8:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001c6cc:	9306      	str	r3, [sp, #24]
9001c6ce:	9b07      	ldr	r3, [sp, #28]
9001c6d0:	4298      	cmp	r0, r3
9001c6d2:	d270      	bcs.n	9001c7b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001c6d4:	9b06      	ldr	r3, [sp, #24]
9001c6d6:	4621      	mov	r1, r4
9001c6d8:	eb00 0b03 	add.w	fp, r0, r3
9001c6dc:	4558      	cmp	r0, fp
9001c6de:	d25d      	bcs.n	9001c79c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001c6e0:	f851 4b04 	ldr.w	r4, [r1], #4
9001c6e4:	0e23      	lsrs	r3, r4, #24
9001c6e6:	d014      	beq.n	9001c712 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c6e8:	2bff      	cmp	r3, #255	; 0xff
9001c6ea:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001c6ee:	d112      	bne.n	9001c716 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c6f0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c6f4:	d10f      	bne.n	9001c716 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c6f6:	0963      	lsrs	r3, r4, #5
9001c6f8:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001c6fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c700:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c704:	f02c 0c07 	bic.w	ip, ip, #7
9001c708:	ea43 0c0c 	orr.w	ip, r3, ip
9001c70c:	ea4c 0404 	orr.w	r4, ip, r4
9001c710:	8004      	strh	r4, [r0, #0]
9001c712:	3002      	adds	r0, #2
9001c714:	e7e2      	b.n	9001c6dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001c716:	fb09 f303 	mul.w	r3, r9, r3
9001c71a:	8807      	ldrh	r7, [r0, #0]
9001c71c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001c720:	fa5f fc8c 	uxtb.w	ip, ip
9001c724:	1c5a      	adds	r2, r3, #1
9001c726:	123e      	asrs	r6, r7, #8
9001c728:	10fd      	asrs	r5, r7, #3
9001c72a:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001c72e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c732:	00ff      	lsls	r7, r7, #3
9001c734:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c738:	1212      	asrs	r2, r2, #8
9001c73a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c73e:	b293      	uxth	r3, r2
9001c740:	43d2      	mvns	r2, r2
9001c742:	b2ff      	uxtb	r7, r7
9001c744:	fb1e fe03 	smulbb	lr, lr, r3
9001c748:	b2d2      	uxtb	r2, r2
9001c74a:	fb1c fc03 	smulbb	ip, ip, r3
9001c74e:	b2e4      	uxtb	r4, r4
9001c750:	fb06 e602 	mla	r6, r6, r2, lr
9001c754:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c758:	fb14 f403 	smulbb	r4, r4, r3
9001c75c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001c760:	b2b6      	uxth	r6, r6
9001c762:	fb05 c502 	mla	r5, r5, r2, ip
9001c766:	fb07 4702 	mla	r7, r7, r2, r4
9001c76a:	f106 0e01 	add.w	lr, r6, #1
9001c76e:	b2ad      	uxth	r5, r5
9001c770:	b2bf      	uxth	r7, r7
9001c772:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001c776:	f105 0c01 	add.w	ip, r5, #1
9001c77a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001c77e:	1c7e      	adds	r6, r7, #1
9001c780:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001c784:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c788:	096d      	lsrs	r5, r5, #5
9001c78a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c78e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c792:	ea46 060e 	orr.w	r6, r6, lr
9001c796:	432e      	orrs	r6, r5
9001c798:	8006      	strh	r6, [r0, #0]
9001c79a:	e7ba      	b.n	9001c712 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c79c:	f8ba 3000 	ldrh.w	r3, [sl]
9001c7a0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001c7a4:	eba3 0308 	sub.w	r3, r3, r8
9001c7a8:	eba4 0408 	sub.w	r4, r4, r8
9001c7ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c7b0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001c7b4:	e78b      	b.n	9001c6ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001c7b6:	4b03      	ldr	r3, [pc, #12]	; (9001c7c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c7b8:	6818      	ldr	r0, [r3, #0]
9001c7ba:	6803      	ldr	r3, [r0, #0]
9001c7bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c7be:	4798      	blx	r3
9001c7c0:	e76a      	b.n	9001c698 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001c7c2:	bf00      	nop
9001c7c4:	2402356c 	.word	0x2402356c
9001c7c8:	24023566 	.word	0x24023566

9001c7cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001c7cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001c7d0:	b085      	sub	sp, #20
9001c7d2:	6810      	ldr	r0, [r2, #0]
9001c7d4:	460c      	mov	r4, r1
9001c7d6:	6851      	ldr	r1, [r2, #4]
9001c7d8:	466d      	mov	r5, sp
9001c7da:	4616      	mov	r6, r2
9001c7dc:	c503      	stmia	r5!, {r0, r1}
9001c7de:	6818      	ldr	r0, [r3, #0]
9001c7e0:	6859      	ldr	r1, [r3, #4]
9001c7e2:	c503      	stmia	r5!, {r0, r1}
9001c7e4:	4668      	mov	r0, sp
9001c7e6:	4d2e      	ldr	r5, [pc, #184]	; (9001c8a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001c7e8:	f7f8 f928 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c7ec:	4631      	mov	r1, r6
9001c7ee:	a802      	add	r0, sp, #8
9001c7f0:	4e2c      	ldr	r6, [pc, #176]	; (9001c8a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001c7f2:	f7f8 f967 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c7f6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001c7fa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001c7fe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c802:	6828      	ldr	r0, [r5, #0]
9001c804:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c808:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001c80c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001c810:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c814:	f8bd 1000 	ldrh.w	r1, [sp]
9001c818:	440a      	add	r2, r1
9001c81a:	f8ad 2008 	strh.w	r2, [sp, #8]
9001c81e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c822:	4413      	add	r3, r2
9001c824:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c828:	6803      	ldr	r3, [r0, #0]
9001c82a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c82c:	4798      	blx	r3
9001c82e:	8833      	ldrh	r3, [r6, #0]
9001c830:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001c834:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001c838:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c83c:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001c8a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001c840:	fb03 1202 	mla	r2, r3, r2, r1
9001c844:	fb08 f303 	mul.w	r3, r8, r3
9001c848:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c84c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c850:	4298      	cmp	r0, r3
9001c852:	d21d      	bcs.n	9001c890 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001c854:	eb00 080c 	add.w	r8, r0, ip
9001c858:	4540      	cmp	r0, r8
9001c85a:	d20f      	bcs.n	9001c87c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001c85c:	f854 1b04 	ldr.w	r1, [r4], #4
9001c860:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001c864:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001c868:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001c86c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c870:	ea42 0209 	orr.w	r2, r2, r9
9001c874:	430a      	orrs	r2, r1
9001c876:	f820 2b02 	strh.w	r2, [r0], #2
9001c87a:	e7ed      	b.n	9001c858 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001c87c:	8832      	ldrh	r2, [r6, #0]
9001c87e:	1bd2      	subs	r2, r2, r7
9001c880:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c884:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001c888:	1bd2      	subs	r2, r2, r7
9001c88a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001c88e:	e7df      	b.n	9001c850 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001c890:	6828      	ldr	r0, [r5, #0]
9001c892:	6803      	ldr	r3, [r0, #0]
9001c894:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c896:	4798      	blx	r3
9001c898:	b005      	add	sp, #20
9001c89a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001c89e:	bf00      	nop
9001c8a0:	2402356c 	.word	0x2402356c
9001c8a4:	24023566 	.word	0x24023566
9001c8a8:	fffff800 	.word	0xfffff800

9001c8ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001c8ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c8b0:	b08e      	sub	sp, #56	; 0x38
9001c8b2:	460e      	mov	r6, r1
9001c8b4:	4604      	mov	r4, r0
9001c8b6:	461d      	mov	r5, r3
9001c8b8:	6808      	ldr	r0, [r1, #0]
9001c8ba:	ab0a      	add	r3, sp, #40	; 0x28
9001c8bc:	6849      	ldr	r1, [r1, #4]
9001c8be:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001ca94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001c8c2:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001ca98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001c8c6:	c303      	stmia	r3!, {r0, r1}
9001c8c8:	6810      	ldr	r0, [r2, #0]
9001c8ca:	ab0c      	add	r3, sp, #48	; 0x30
9001c8cc:	6851      	ldr	r1, [r2, #4]
9001c8ce:	c303      	stmia	r3!, {r0, r1}
9001c8d0:	a80a      	add	r0, sp, #40	; 0x28
9001c8d2:	f7f8 f8b3 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c8d6:	4631      	mov	r1, r6
9001c8d8:	a80c      	add	r0, sp, #48	; 0x30
9001c8da:	f7f8 f8f3 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c8de:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001c8e2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001c8e6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001c8ea:	f8d8 0000 	ldr.w	r0, [r8]
9001c8ee:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c8f2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001c8f6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001c8fa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001c8fe:	440c      	add	r4, r1
9001c900:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001c904:	440a      	add	r2, r1
9001c906:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001c90a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001c90e:	4413      	add	r3, r2
9001c910:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c914:	6803      	ldr	r3, [r0, #0]
9001c916:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c918:	4798      	blx	r3
9001c91a:	2dff      	cmp	r5, #255	; 0xff
9001c91c:	d124      	bne.n	9001c968 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001c91e:	f010 0f01 	tst.w	r0, #1
9001c922:	f8d8 0000 	ldr.w	r0, [r8]
9001c926:	d022      	beq.n	9001c96e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001c928:	2100      	movs	r1, #0
9001c92a:	f04f 0e01 	mov.w	lr, #1
9001c92e:	f8d0 c000 	ldr.w	ip, [r0]
9001c932:	b2b6      	uxth	r6, r6
9001c934:	f8cd e018 	str.w	lr, [sp, #24]
9001c938:	b2bf      	uxth	r7, r7
9001c93a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001c93e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001c942:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001c946:	f8b9 e000 	ldrh.w	lr, [r9]
9001c94a:	9503      	str	r5, [sp, #12]
9001c94c:	9601      	str	r6, [sp, #4]
9001c94e:	9700      	str	r7, [sp, #0]
9001c950:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001c954:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001c958:	9102      	str	r1, [sp, #8]
9001c95a:	4621      	mov	r1, r4
9001c95c:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001c960:	47a8      	blx	r5
9001c962:	b00e      	add	sp, #56	; 0x38
9001c964:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c968:	f010 0f04 	tst.w	r0, #4
9001c96c:	e7d9      	b.n	9001c922 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001c96e:	6803      	ldr	r3, [r0, #0]
9001c970:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c972:	4798      	blx	r3
9001c974:	f8b9 3000 	ldrh.w	r3, [r9]
9001c978:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001c97c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001c980:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001c984:	435e      	muls	r6, r3
9001c986:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c98a:	2dff      	cmp	r5, #255	; 0xff
9001c98c:	fb03 1202 	mla	r2, r3, r2, r1
9001c990:	ebac 0c07 	sub.w	ip, ip, r7
9001c994:	eba3 0707 	sub.w	r7, r3, r7
9001c998:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c99c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001c9a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c9a4:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001c9a8:	d049      	beq.n	9001ca3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001c9aa:	43eb      	mvns	r3, r5
9001c9ac:	fa1f f985 	uxth.w	r9, r5
9001c9b0:	b2db      	uxtb	r3, r3
9001c9b2:	42b0      	cmp	r0, r6
9001c9b4:	d266      	bcs.n	9001ca84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001c9b6:	eb00 0a0e 	add.w	sl, r0, lr
9001c9ba:	4550      	cmp	r0, sl
9001c9bc:	4621      	mov	r1, r4
9001c9be:	f104 0403 	add.w	r4, r4, #3
9001c9c2:	d25b      	bcs.n	9001ca7c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001c9c4:	8802      	ldrh	r2, [r0, #0]
9001c9c6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001c9ca:	ea4f 2822 	mov.w	r8, r2, asr #8
9001c9ce:	fb11 f109 	smulbb	r1, r1, r9
9001c9d2:	10d5      	asrs	r5, r2, #3
9001c9d4:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001c9d8:	00d2      	lsls	r2, r2, #3
9001c9da:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c9de:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001c9e2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c9e6:	fb08 1803 	mla	r8, r8, r3, r1
9001c9ea:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001c9ee:	b2d2      	uxtb	r2, r2
9001c9f0:	fb11 f109 	smulbb	r1, r1, r9
9001c9f4:	fa1f f888 	uxth.w	r8, r8
9001c9f8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c9fc:	fb05 1503 	mla	r5, r5, r3, r1
9001ca00:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001ca04:	fb11 f109 	smulbb	r1, r1, r9
9001ca08:	b2ad      	uxth	r5, r5
9001ca0a:	fb02 1203 	mla	r2, r2, r3, r1
9001ca0e:	f108 0101 	add.w	r1, r8, #1
9001ca12:	b292      	uxth	r2, r2
9001ca14:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001ca18:	1c51      	adds	r1, r2, #1
9001ca1a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001ca1e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001ca22:	1c69      	adds	r1, r5, #1
9001ca24:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001ca28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ca2c:	096d      	lsrs	r5, r5, #5
9001ca2e:	ea42 0208 	orr.w	r2, r2, r8
9001ca32:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001ca36:	432a      	orrs	r2, r5
9001ca38:	f820 2b02 	strh.w	r2, [r0], #2
9001ca3c:	e7bd      	b.n	9001c9ba <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001ca3e:	4a14      	ldr	r2, [pc, #80]	; (9001ca90 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001ca40:	42b0      	cmp	r0, r6
9001ca42:	d21f      	bcs.n	9001ca84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001ca44:	eb00 050e 	add.w	r5, r0, lr
9001ca48:	42a8      	cmp	r0, r5
9001ca4a:	4621      	mov	r1, r4
9001ca4c:	f104 0403 	add.w	r4, r4, #3
9001ca50:	d210      	bcs.n	9001ca74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001ca52:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001ca56:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001ca5a:	00db      	lsls	r3, r3, #3
9001ca5c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001ca60:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ca64:	430b      	orrs	r3, r1
9001ca66:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001ca6a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001ca6e:	f820 3b02 	strh.w	r3, [r0], #2
9001ca72:	e7e9      	b.n	9001ca48 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001ca74:	4438      	add	r0, r7
9001ca76:	eb01 040c 	add.w	r4, r1, ip
9001ca7a:	e7e1      	b.n	9001ca40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001ca7c:	4438      	add	r0, r7
9001ca7e:	eb01 040c 	add.w	r4, r1, ip
9001ca82:	e796      	b.n	9001c9b2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001ca84:	4b03      	ldr	r3, [pc, #12]	; (9001ca94 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001ca86:	6818      	ldr	r0, [r3, #0]
9001ca88:	6803      	ldr	r3, [r0, #0]
9001ca8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ca8c:	4798      	blx	r3
9001ca8e:	e768      	b.n	9001c962 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001ca90:	fffff800 	.word	0xfffff800
9001ca94:	2402356c 	.word	0x2402356c
9001ca98:	24023566 	.word	0x24023566

9001ca9c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001ca9c:	b4f0      	push	{r4, r5, r6, r7}
9001ca9e:	4616      	mov	r6, r2
9001caa0:	461c      	mov	r4, r3
9001caa2:	460d      	mov	r5, r1
9001caa4:	9a04      	ldr	r2, [sp, #16]
9001caa6:	2e01      	cmp	r6, #1
9001caa8:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001caac:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001cab0:	d012      	beq.n	9001cad8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001cab2:	d303      	bcc.n	9001cabc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001cab4:	2e02      	cmp	r6, #2
9001cab6:	d00a      	beq.n	9001cace <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001cab8:	bcf0      	pop	{r4, r5, r6, r7}
9001caba:	4770      	bx	lr
9001cabc:	6805      	ldr	r5, [r0, #0]
9001cabe:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001cac2:	68ed      	ldr	r5, [r5, #12]
9001cac4:	4613      	mov	r3, r2
9001cac6:	4622      	mov	r2, r4
9001cac8:	46ac      	mov	ip, r5
9001caca:	bcf0      	pop	{r4, r5, r6, r7}
9001cacc:	4760      	bx	ip
9001cace:	4621      	mov	r1, r4
9001cad0:	4628      	mov	r0, r5
9001cad2:	bcf0      	pop	{r4, r5, r6, r7}
9001cad4:	f7ff bd94 	b.w	9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001cad8:	4621      	mov	r1, r4
9001cada:	4628      	mov	r0, r5
9001cadc:	bcf0      	pop	{r4, r5, r6, r7}
9001cade:	f7ff bee5 	b.w	9001c8ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001cae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001cae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cae8:	b093      	sub	sp, #76	; 0x4c
9001caea:	4681      	mov	r9, r0
9001caec:	4688      	mov	r8, r1
9001caee:	6810      	ldr	r0, [r2, #0]
9001caf0:	6851      	ldr	r1, [r2, #4]
9001caf2:	ac0e      	add	r4, sp, #56	; 0x38
9001caf4:	4616      	mov	r6, r2
9001caf6:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001cafa:	4f6b      	ldr	r7, [pc, #428]	; (9001cca8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001cafc:	c403      	stmia	r4!, {r0, r1}
9001cafe:	6818      	ldr	r0, [r3, #0]
9001cb00:	ac10      	add	r4, sp, #64	; 0x40
9001cb02:	6859      	ldr	r1, [r3, #4]
9001cb04:	c403      	stmia	r4!, {r0, r1}
9001cb06:	a80e      	add	r0, sp, #56	; 0x38
9001cb08:	f7f7 ff98 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cb0c:	4631      	mov	r1, r6
9001cb0e:	a810      	add	r0, sp, #64	; 0x40
9001cb10:	4e66      	ldr	r6, [pc, #408]	; (9001ccac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cb12:	f7f7 ffd7 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cb16:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001cb1a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001cb1e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001cb22:	6830      	ldr	r0, [r6, #0]
9001cb24:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cb28:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001cb2c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001cb30:	4489      	add	r9, r1
9001cb32:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001cb36:	440a      	add	r2, r1
9001cb38:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001cb3c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001cb40:	4413      	add	r3, r2
9001cb42:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001cb46:	6803      	ldr	r3, [r0, #0]
9001cb48:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001cb4a:	4798      	blx	r3
9001cb4c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001cb50:	6830      	ldr	r0, [r6, #0]
9001cb52:	d01d      	beq.n	9001cb90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001cb54:	2200      	movs	r2, #0
9001cb56:	6801      	ldr	r1, [r0, #0]
9001cb58:	b2a4      	uxth	r4, r4
9001cb5a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001cb5e:	b2ad      	uxth	r5, r5
9001cb60:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001cb64:	220b      	movs	r2, #11
9001cb66:	9207      	str	r2, [sp, #28]
9001cb68:	883a      	ldrh	r2, [r7, #0]
9001cb6a:	9502      	str	r5, [sp, #8]
9001cb6c:	9206      	str	r2, [sp, #24]
9001cb6e:	2201      	movs	r2, #1
9001cb70:	9401      	str	r4, [sp, #4]
9001cb72:	e9cd a204 	strd	sl, r2, [sp, #16]
9001cb76:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001cb7a:	9203      	str	r2, [sp, #12]
9001cb7c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001cb80:	9200      	str	r2, [sp, #0]
9001cb82:	4642      	mov	r2, r8
9001cb84:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001cb86:	4649      	mov	r1, r9
9001cb88:	47a0      	blx	r4
9001cb8a:	b013      	add	sp, #76	; 0x4c
9001cb8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cb90:	6803      	ldr	r3, [r0, #0]
9001cb92:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cb94:	4798      	blx	r3
9001cb96:	883b      	ldrh	r3, [r7, #0]
9001cb98:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cb9c:	f04f 0e04 	mov.w	lr, #4
9001cba0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001cba4:	435d      	muls	r5, r3
9001cba6:	fb03 1202 	mla	r2, r3, r2, r1
9001cbaa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cbae:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001cbb2:	920c      	str	r2, [sp, #48]	; 0x30
9001cbb4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001cbb8:	1b12      	subs	r2, r2, r4
9001cbba:	920d      	str	r2, [sp, #52]	; 0x34
9001cbbc:	0062      	lsls	r2, r4, #1
9001cbbe:	1b1c      	subs	r4, r3, r4
9001cbc0:	920a      	str	r2, [sp, #40]	; 0x28
9001cbc2:	0063      	lsls	r3, r4, #1
9001cbc4:	930b      	str	r3, [sp, #44]	; 0x2c
9001cbc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001cbc8:	4298      	cmp	r0, r3
9001cbca:	d266      	bcs.n	9001cc9a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001cbcc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cbce:	eb00 0b03 	add.w	fp, r0, r3
9001cbd2:	4558      	cmp	r0, fp
9001cbd4:	d25c      	bcs.n	9001cc90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001cbd6:	f819 3b01 	ldrb.w	r3, [r9], #1
9001cbda:	fb1e e303 	smlabb	r3, lr, r3, lr
9001cbde:	f858 2003 	ldr.w	r2, [r8, r3]
9001cbe2:	0e11      	lsrs	r1, r2, #24
9001cbe4:	d012      	beq.n	9001cc0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001cbe6:	29ff      	cmp	r1, #255	; 0xff
9001cbe8:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001cbec:	d110      	bne.n	9001cc10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cbee:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001cbf2:	d10d      	bne.n	9001cc10 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cbf4:	0953      	lsrs	r3, r2, #5
9001cbf6:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001cbfa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cbfe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cc02:	f027 0707 	bic.w	r7, r7, #7
9001cc06:	431f      	orrs	r7, r3
9001cc08:	433a      	orrs	r2, r7
9001cc0a:	8002      	strh	r2, [r0, #0]
9001cc0c:	3002      	adds	r0, #2
9001cc0e:	e7e0      	b.n	9001cbd2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001cc10:	fb0a f101 	mul.w	r1, sl, r1
9001cc14:	8806      	ldrh	r6, [r0, #0]
9001cc16:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001cc1a:	b2d2      	uxtb	r2, r2
9001cc1c:	1c4b      	adds	r3, r1, #1
9001cc1e:	1235      	asrs	r5, r6, #8
9001cc20:	10f4      	asrs	r4, r6, #3
9001cc22:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001cc26:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001cc2a:	00f6      	lsls	r6, r6, #3
9001cc2c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001cc30:	121b      	asrs	r3, r3, #8
9001cc32:	b2f6      	uxtb	r6, r6
9001cc34:	b299      	uxth	r1, r3
9001cc36:	43db      	mvns	r3, r3
9001cc38:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001cc3c:	fb1c fc01 	smulbb	ip, ip, r1
9001cc40:	b2db      	uxtb	r3, r3
9001cc42:	fb12 f201 	smulbb	r2, r2, r1
9001cc46:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cc4a:	fb05 c503 	mla	r5, r5, r3, ip
9001cc4e:	b2ff      	uxtb	r7, r7
9001cc50:	fb06 2203 	mla	r2, r6, r3, r2
9001cc54:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001cc58:	fb17 f701 	smulbb	r7, r7, r1
9001cc5c:	b2ad      	uxth	r5, r5
9001cc5e:	b292      	uxth	r2, r2
9001cc60:	fb04 7403 	mla	r4, r4, r3, r7
9001cc64:	f105 0c01 	add.w	ip, r5, #1
9001cc68:	1c57      	adds	r7, r2, #1
9001cc6a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001cc6e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001cc72:	b2a4      	uxth	r4, r4
9001cc74:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001cc78:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001cc7c:	433d      	orrs	r5, r7
9001cc7e:	1c67      	adds	r7, r4, #1
9001cc80:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001cc84:	0964      	lsrs	r4, r4, #5
9001cc86:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001cc8a:	4325      	orrs	r5, r4
9001cc8c:	8005      	strh	r5, [r0, #0]
9001cc8e:	e7bd      	b.n	9001cc0c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001cc90:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001cc92:	4418      	add	r0, r3
9001cc94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001cc96:	4499      	add	r9, r3
9001cc98:	e795      	b.n	9001cbc6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001cc9a:	4b04      	ldr	r3, [pc, #16]	; (9001ccac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cc9c:	6818      	ldr	r0, [r3, #0]
9001cc9e:	6803      	ldr	r3, [r0, #0]
9001cca0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cca2:	4798      	blx	r3
9001cca4:	e771      	b.n	9001cb8a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001cca6:	bf00      	nop
9001cca8:	24023566 	.word	0x24023566
9001ccac:	2402356c 	.word	0x2402356c

9001ccb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001ccb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ccb4:	b087      	sub	sp, #28
9001ccb6:	4680      	mov	r8, r0
9001ccb8:	460d      	mov	r5, r1
9001ccba:	4614      	mov	r4, r2
9001ccbc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001ccc0:	2e00      	cmp	r6, #0
9001ccc2:	f000 80b9 	beq.w	9001ce38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001ccc6:	6810      	ldr	r0, [r2, #0]
9001ccc8:	af02      	add	r7, sp, #8
9001ccca:	6851      	ldr	r1, [r2, #4]
9001cccc:	c703      	stmia	r7!, {r0, r1}
9001ccce:	6818      	ldr	r0, [r3, #0]
9001ccd0:	af04      	add	r7, sp, #16
9001ccd2:	6859      	ldr	r1, [r3, #4]
9001ccd4:	c703      	stmia	r7!, {r0, r1}
9001ccd6:	a802      	add	r0, sp, #8
9001ccd8:	f7f7 feb0 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ccdc:	4621      	mov	r1, r4
9001ccde:	a804      	add	r0, sp, #16
9001cce0:	f7f7 fef0 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cce4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001cce8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ccec:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001ccf0:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001ccf4:	fb14 2103 	smlabb	r1, r4, r3, r2
9001ccf8:	eb08 0401 	add.w	r4, r8, r1
9001ccfc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001cd00:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001cd04:	440a      	add	r2, r1
9001cd06:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001cd0a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001cd0e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001cd12:	4413      	add	r3, r2
9001cd14:	f8ad 3012 	strh.w	r3, [sp, #18]
9001cd18:	4b49      	ldr	r3, [pc, #292]	; (9001ce40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001cd1a:	6818      	ldr	r0, [r3, #0]
9001cd1c:	6803      	ldr	r3, [r0, #0]
9001cd1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cd20:	4798      	blx	r3
9001cd22:	4b48      	ldr	r3, [pc, #288]	; (9001ce44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001cd24:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001cd28:	2eff      	cmp	r6, #255	; 0xff
9001cd2a:	881a      	ldrh	r2, [r3, #0]
9001cd2c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001cd30:	fb02 c101 	mla	r1, r2, r1, ip
9001cd34:	fb02 f207 	mul.w	r2, r2, r7
9001cd38:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001cd3c:	f105 0104 	add.w	r1, r5, #4
9001cd40:	461d      	mov	r5, r3
9001cd42:	d05a      	beq.n	9001cdfa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001cd44:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001cd48:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cd4c:	b2b6      	uxth	r6, r6
9001cd4e:	9301      	str	r3, [sp, #4]
9001cd50:	fa1f fe8e 	uxth.w	lr, lr
9001cd54:	4282      	cmp	r2, r0
9001cd56:	d96a      	bls.n	9001ce2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001cd58:	eb00 0b0a 	add.w	fp, r0, sl
9001cd5c:	4583      	cmp	fp, r0
9001cd5e:	d940      	bls.n	9001cde2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001cd60:	8805      	ldrh	r5, [r0, #0]
9001cd62:	f814 3b01 	ldrb.w	r3, [r4], #1
9001cd66:	122f      	asrs	r7, r5, #8
9001cd68:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001cd6c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cd70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cd74:	00ed      	lsls	r5, r5, #3
9001cd76:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001cd7a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001cd7e:	fb17 f70e 	smulbb	r7, r7, lr
9001cd82:	b2ed      	uxtb	r5, r5
9001cd84:	fb19 f90e 	smulbb	r9, r9, lr
9001cd88:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cd8c:	fb15 f50e 	smulbb	r5, r5, lr
9001cd90:	fb0c 7c06 	mla	ip, ip, r6, r7
9001cd94:	10df      	asrs	r7, r3, #3
9001cd96:	00db      	lsls	r3, r3, #3
9001cd98:	fa1f fc8c 	uxth.w	ip, ip
9001cd9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cda0:	b2db      	uxtb	r3, r3
9001cda2:	fb07 9706 	mla	r7, r7, r6, r9
9001cda6:	f10c 0901 	add.w	r9, ip, #1
9001cdaa:	fb03 5306 	mla	r3, r3, r6, r5
9001cdae:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001cdb2:	b29b      	uxth	r3, r3
9001cdb4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001cdb8:	b2bf      	uxth	r7, r7
9001cdba:	f103 0c01 	add.w	ip, r3, #1
9001cdbe:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001cdc2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cdc6:	ea4c 0c09 	orr.w	ip, ip, r9
9001cdca:	f107 0901 	add.w	r9, r7, #1
9001cdce:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001cdd2:	097f      	lsrs	r7, r7, #5
9001cdd4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001cdd8:	ea4c 0c07 	orr.w	ip, ip, r7
9001cddc:	f820 cb02 	strh.w	ip, [r0], #2
9001cde0:	e7bc      	b.n	9001cd5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001cde2:	9b01      	ldr	r3, [sp, #4]
9001cde4:	881b      	ldrh	r3, [r3, #0]
9001cde6:	eba3 0308 	sub.w	r3, r3, r8
9001cdea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cdee:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001cdf2:	eba3 0308 	sub.w	r3, r3, r8
9001cdf6:	441c      	add	r4, r3
9001cdf8:	e7ac      	b.n	9001cd54 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001cdfa:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cdfe:	4282      	cmp	r2, r0
9001ce00:	d915      	bls.n	9001ce2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001ce02:	eb00 060a 	add.w	r6, r0, sl
9001ce06:	4286      	cmp	r6, r0
9001ce08:	d906      	bls.n	9001ce18 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001ce0a:	f814 3b01 	ldrb.w	r3, [r4], #1
9001ce0e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001ce12:	f820 3b02 	strh.w	r3, [r0], #2
9001ce16:	e7f6      	b.n	9001ce06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001ce18:	882b      	ldrh	r3, [r5, #0]
9001ce1a:	eba3 0308 	sub.w	r3, r3, r8
9001ce1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ce22:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001ce26:	eba3 0308 	sub.w	r3, r3, r8
9001ce2a:	441c      	add	r4, r3
9001ce2c:	e7e7      	b.n	9001cdfe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001ce2e:	4b04      	ldr	r3, [pc, #16]	; (9001ce40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001ce30:	6818      	ldr	r0, [r3, #0]
9001ce32:	6803      	ldr	r3, [r0, #0]
9001ce34:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ce36:	4798      	blx	r3
9001ce38:	b007      	add	sp, #28
9001ce3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ce3e:	bf00      	nop
9001ce40:	2402356c 	.word	0x2402356c
9001ce44:	24023566 	.word	0x24023566

9001ce48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001ce48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce4c:	b091      	sub	sp, #68	; 0x44
9001ce4e:	4680      	mov	r8, r0
9001ce50:	460f      	mov	r7, r1
9001ce52:	4614      	mov	r4, r2
9001ce54:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001ce58:	2d00      	cmp	r5, #0
9001ce5a:	d051      	beq.n	9001cf00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001ce5c:	6810      	ldr	r0, [r2, #0]
9001ce5e:	ae0c      	add	r6, sp, #48	; 0x30
9001ce60:	6851      	ldr	r1, [r2, #4]
9001ce62:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001d064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001ce66:	c603      	stmia	r6!, {r0, r1}
9001ce68:	6818      	ldr	r0, [r3, #0]
9001ce6a:	ae0e      	add	r6, sp, #56	; 0x38
9001ce6c:	6859      	ldr	r1, [r3, #4]
9001ce6e:	c603      	stmia	r6!, {r0, r1}
9001ce70:	a80c      	add	r0, sp, #48	; 0x30
9001ce72:	f7f7 fde3 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ce76:	4621      	mov	r1, r4
9001ce78:	a80e      	add	r0, sp, #56	; 0x38
9001ce7a:	f7f7 fe23 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ce7e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001ce82:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001ce86:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001ce8a:	f8d9 0000 	ldr.w	r0, [r9]
9001ce8e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ce92:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001ce96:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001ce9a:	eb08 0401 	add.w	r4, r8, r1
9001ce9e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001cea2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001d068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001cea6:	440a      	add	r2, r1
9001cea8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001ceac:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001ceb0:	4413      	add	r3, r2
9001ceb2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001ceb6:	6803      	ldr	r3, [r0, #0]
9001ceb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ceba:	4798      	blx	r3
9001cebc:	f010 0f80 	tst.w	r0, #128	; 0x80
9001cec0:	f8d9 0000 	ldr.w	r0, [r9]
9001cec4:	d01f      	beq.n	9001cf06 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001cec6:	2200      	movs	r2, #0
9001cec8:	6801      	ldr	r1, [r0, #0]
9001ceca:	b2b6      	uxth	r6, r6
9001cecc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001ced0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ced4:	220b      	movs	r2, #11
9001ced6:	9207      	str	r2, [sp, #28]
9001ced8:	f8b8 2000 	ldrh.w	r2, [r8]
9001cedc:	9601      	str	r6, [sp, #4]
9001cede:	9206      	str	r2, [sp, #24]
9001cee0:	2201      	movs	r2, #1
9001cee2:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001cee6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001ceea:	9203      	str	r2, [sp, #12]
9001ceec:	fa1f f28a 	uxth.w	r2, sl
9001cef0:	9202      	str	r2, [sp, #8]
9001cef2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001cef6:	9200      	str	r2, [sp, #0]
9001cef8:	463a      	mov	r2, r7
9001cefa:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001cefc:	4621      	mov	r1, r4
9001cefe:	47a8      	blx	r5
9001cf00:	b011      	add	sp, #68	; 0x44
9001cf02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cf06:	6803      	ldr	r3, [r0, #0]
9001cf08:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001cf0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cf0e:	4798      	blx	r3
9001cf10:	f8b8 2000 	ldrh.w	r2, [r8]
9001cf14:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001cf18:	2dff      	cmp	r5, #255	; 0xff
9001cf1a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001cf1e:	fb0a fa02 	mul.w	sl, sl, r2
9001cf22:	fb02 1303 	mla	r3, r2, r3, r1
9001cf26:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cf2a:	d062      	beq.n	9001cff2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001cf2c:	ea6f 0c05 	mvn.w	ip, r5
9001cf30:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001cf34:	b2ad      	uxth	r5, r5
9001cf36:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001cf3a:	fa5f fc8c 	uxtb.w	ip, ip
9001cf3e:	930a      	str	r3, [sp, #40]	; 0x28
9001cf40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cf42:	4298      	cmp	r0, r3
9001cf44:	f080 8085 	bcs.w	9001d052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001cf48:	eb00 0b09 	add.w	fp, r0, r9
9001cf4c:	4558      	cmp	r0, fp
9001cf4e:	d246      	bcs.n	9001cfde <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001cf50:	f814 eb01 	ldrb.w	lr, [r4], #1
9001cf54:	2303      	movs	r3, #3
9001cf56:	2204      	movs	r2, #4
9001cf58:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001cf5c:	8803      	ldrh	r3, [r0, #0]
9001cf5e:	eb07 0a0e 	add.w	sl, r7, lr
9001cf62:	1219      	asrs	r1, r3, #8
9001cf64:	10da      	asrs	r2, r3, #3
9001cf66:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001cf6a:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001cf6e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001cf72:	00db      	lsls	r3, r3, #3
9001cf74:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001cf78:	fb18 f805 	smulbb	r8, r8, r5
9001cf7c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001cf80:	fb1e fe05 	smulbb	lr, lr, r5
9001cf84:	b2db      	uxtb	r3, r3
9001cf86:	fb01 810c 	mla	r1, r1, ip, r8
9001cf8a:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001cf8e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001cf92:	fb18 f805 	smulbb	r8, r8, r5
9001cf96:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001cf9a:	b289      	uxth	r1, r1
9001cf9c:	fb02 820c 	mla	r2, r2, ip, r8
9001cfa0:	fb03 e30c 	mla	r3, r3, ip, lr
9001cfa4:	f101 0801 	add.w	r8, r1, #1
9001cfa8:	b292      	uxth	r2, r2
9001cfaa:	b29b      	uxth	r3, r3
9001cfac:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001cfb0:	f102 0801 	add.w	r8, r2, #1
9001cfb4:	f103 0e01 	add.w	lr, r3, #1
9001cfb8:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001cfbc:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001cfc0:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001cfc4:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001cfc8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001cfcc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001cfd0:	ea4e 0101 	orr.w	r1, lr, r1
9001cfd4:	ea41 0108 	orr.w	r1, r1, r8
9001cfd8:	f820 1b02 	strh.w	r1, [r0], #2
9001cfdc:	e7b6      	b.n	9001cf4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001cfde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001cfe0:	881b      	ldrh	r3, [r3, #0]
9001cfe2:	1b9b      	subs	r3, r3, r6
9001cfe4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cfe8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001cfec:	1b9b      	subs	r3, r3, r6
9001cfee:	441c      	add	r4, r3
9001cff0:	e7a6      	b.n	9001cf40 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001cff2:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001cff6:	2203      	movs	r2, #3
9001cff8:	2504      	movs	r5, #4
9001cffa:	4919      	ldr	r1, [pc, #100]	; (9001d060 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001cffc:	4550      	cmp	r0, sl
9001cffe:	d228      	bcs.n	9001d052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d000:	eb00 0c09 	add.w	ip, r0, r9
9001d004:	4560      	cmp	r0, ip
9001d006:	4623      	mov	r3, r4
9001d008:	d219      	bcs.n	9001d03e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001d00a:	f893 e000 	ldrb.w	lr, [r3]
9001d00e:	3401      	adds	r4, #1
9001d010:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001d014:	eb07 0b0e 	add.w	fp, r7, lr
9001d018:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d01c:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001d020:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d024:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001d028:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001d02c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001d030:	ea43 030b 	orr.w	r3, r3, fp
9001d034:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001d038:	f820 3b02 	strh.w	r3, [r0], #2
9001d03c:	e7e2      	b.n	9001d004 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001d03e:	f8b8 3000 	ldrh.w	r3, [r8]
9001d042:	1b9b      	subs	r3, r3, r6
9001d044:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d048:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d04c:	1b9b      	subs	r3, r3, r6
9001d04e:	441c      	add	r4, r3
9001d050:	e7d4      	b.n	9001cffc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001d052:	4b04      	ldr	r3, [pc, #16]	; (9001d064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001d054:	6818      	ldr	r0, [r3, #0]
9001d056:	6803      	ldr	r3, [r0, #0]
9001d058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d05a:	4798      	blx	r3
9001d05c:	e750      	b.n	9001cf00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d05e:	bf00      	nop
9001d060:	fffff800 	.word	0xfffff800
9001d064:	2402356c 	.word	0x2402356c
9001d068:	24023566 	.word	0x24023566

9001d06c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001d06c:	b4f0      	push	{r4, r5, r6, r7}
9001d06e:	460c      	mov	r4, r1
9001d070:	4611      	mov	r1, r2
9001d072:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001d076:	461a      	mov	r2, r3
9001d078:	780f      	ldrb	r7, [r1, #0]
9001d07a:	9b04      	ldr	r3, [sp, #16]
9001d07c:	2f01      	cmp	r7, #1
9001d07e:	784e      	ldrb	r6, [r1, #1]
9001d080:	d038      	beq.n	9001d0f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001d082:	d31f      	bcc.n	9001d0c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001d084:	2f02      	cmp	r7, #2
9001d086:	d14d      	bne.n	9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d088:	2e03      	cmp	r6, #3
9001d08a:	d84b      	bhi.n	9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d08c:	e8df f006 	tbb	[pc, r6]
9001d090:	17140702 	.word	0x17140702
9001d094:	9504      	str	r5, [sp, #16]
9001d096:	4620      	mov	r0, r4
9001d098:	bcf0      	pop	{r4, r5, r6, r7}
9001d09a:	f7ff be09 	b.w	9001ccb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001d09e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d0a0:	2800      	cmp	r0, #0
9001d0a2:	d03f      	beq.n	9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d0a4:	6806      	ldr	r6, [r0, #0]
9001d0a6:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d0aa:	68b5      	ldr	r5, [r6, #8]
9001d0ac:	4613      	mov	r3, r2
9001d0ae:	46ac      	mov	ip, r5
9001d0b0:	460a      	mov	r2, r1
9001d0b2:	4621      	mov	r1, r4
9001d0b4:	bcf0      	pop	{r4, r5, r6, r7}
9001d0b6:	4760      	bx	ip
9001d0b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d0bc:	e7f0      	b.n	9001d0a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d0be:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d0c2:	e7ed      	b.n	9001d0a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d0c4:	2e03      	cmp	r6, #3
9001d0c6:	d82d      	bhi.n	9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d0c8:	e8df f006 	tbb	[pc, r6]
9001d0cc:	110e0702 	.word	0x110e0702
9001d0d0:	9504      	str	r5, [sp, #16]
9001d0d2:	4620      	mov	r0, r4
9001d0d4:	bcf0      	pop	{r4, r5, r6, r7}
9001d0d6:	f7ff bd05 	b.w	9001cae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001d0da:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d0dc:	b310      	cbz	r0, 9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d0de:	6806      	ldr	r6, [r0, #0]
9001d0e0:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d0e4:	68f5      	ldr	r5, [r6, #12]
9001d0e6:	e7e1      	b.n	9001d0ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d0e8:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d0ec:	e7f6      	b.n	9001d0dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d0ee:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d0f2:	e7f3      	b.n	9001d0dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d0f4:	2e03      	cmp	r6, #3
9001d0f6:	d815      	bhi.n	9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d0f8:	e8df f006 	tbb	[pc, r6]
9001d0fc:	110e0702 	.word	0x110e0702
9001d100:	9504      	str	r5, [sp, #16]
9001d102:	4620      	mov	r0, r4
9001d104:	bcf0      	pop	{r4, r5, r6, r7}
9001d106:	f7ff be9f 	b.w	9001ce48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001d10a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d10c:	b150      	cbz	r0, 9001d124 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d10e:	6806      	ldr	r6, [r0, #0]
9001d110:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d114:	6935      	ldr	r5, [r6, #16]
9001d116:	e7c9      	b.n	9001d0ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d118:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d11c:	e7f6      	b.n	9001d10c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d11e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d122:	e7f3      	b.n	9001d10c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d124:	bcf0      	pop	{r4, r5, r6, r7}
9001d126:	4770      	bx	lr

9001d128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001d128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d12c:	b087      	sub	sp, #28
9001d12e:	4604      	mov	r4, r0
9001d130:	460e      	mov	r6, r1
9001d132:	6810      	ldr	r0, [r2, #0]
9001d134:	6851      	ldr	r1, [r2, #4]
9001d136:	ad02      	add	r5, sp, #8
9001d138:	4617      	mov	r7, r2
9001d13a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001d13e:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001d370 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001d142:	c503      	stmia	r5!, {r0, r1}
9001d144:	6818      	ldr	r0, [r3, #0]
9001d146:	ad04      	add	r5, sp, #16
9001d148:	6859      	ldr	r1, [r3, #4]
9001d14a:	c503      	stmia	r5!, {r0, r1}
9001d14c:	a802      	add	r0, sp, #8
9001d14e:	f7f7 fc75 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d152:	4639      	mov	r1, r7
9001d154:	a804      	add	r0, sp, #16
9001d156:	f7f7 fcb5 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d15a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d15e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d162:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001d166:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d16a:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d16e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001d172:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001d176:	440e      	add	r6, r1
9001d178:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d17c:	440a      	add	r2, r1
9001d17e:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d182:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d186:	4413      	add	r3, r2
9001d188:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d18c:	4b77      	ldr	r3, [pc, #476]	; (9001d36c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d18e:	6818      	ldr	r0, [r3, #0]
9001d190:	6803      	ldr	r3, [r0, #0]
9001d192:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d194:	4798      	blx	r3
9001d196:	f8b9 b000 	ldrh.w	fp, [r9]
9001d19a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d19e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d1a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d1a6:	fb05 f50b 	mul.w	r5, r5, fp
9001d1aa:	fb0b 2303 	mla	r3, fp, r3, r2
9001d1ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d1b2:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d1b6:	9300      	str	r3, [sp, #0]
9001d1b8:	d069      	beq.n	9001d28e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001d1ba:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001d1be:	4558      	cmp	r0, fp
9001d1c0:	f080 80cc 	bcs.w	9001d35c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d1c4:	9b00      	ldr	r3, [sp, #0]
9001d1c6:	4631      	mov	r1, r6
9001d1c8:	18c3      	adds	r3, r0, r3
9001d1ca:	9301      	str	r3, [sp, #4]
9001d1cc:	9b01      	ldr	r3, [sp, #4]
9001d1ce:	4298      	cmp	r0, r3
9001d1d0:	d24f      	bcs.n	9001d272 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001d1d2:	f811 2b01 	ldrb.w	r2, [r1], #1
9001d1d6:	2a00      	cmp	r2, #0
9001d1d8:	d048      	beq.n	9001d26c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d1da:	fb0a f202 	mul.w	r2, sl, r2
9001d1de:	1c53      	adds	r3, r2, #1
9001d1e0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001d1e4:	121b      	asrs	r3, r3, #8
9001d1e6:	d041      	beq.n	9001d26c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d1e8:	8802      	ldrh	r2, [r0, #0]
9001d1ea:	b29e      	uxth	r6, r3
9001d1ec:	f8b4 c000 	ldrh.w	ip, [r4]
9001d1f0:	43db      	mvns	r3, r3
9001d1f2:	1215      	asrs	r5, r2, #8
9001d1f4:	b2db      	uxtb	r3, r3
9001d1f6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d1fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d1fe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001d202:	fb15 f503 	smulbb	r5, r5, r3
9001d206:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d20a:	00d2      	lsls	r2, r2, #3
9001d20c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001d210:	fb07 5706 	mla	r7, r7, r6, r5
9001d214:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d218:	b2d2      	uxtb	r2, r2
9001d21a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d21e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d222:	fb1e fe03 	smulbb	lr, lr, r3
9001d226:	b2bf      	uxth	r7, r7
9001d228:	fb12 f203 	smulbb	r2, r2, r3
9001d22c:	fa5f fc8c 	uxtb.w	ip, ip
9001d230:	fb05 e506 	mla	r5, r5, r6, lr
9001d234:	f107 0e01 	add.w	lr, r7, #1
9001d238:	fb0c 2c06 	mla	ip, ip, r6, r2
9001d23c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001d240:	fa1f fc8c 	uxth.w	ip, ip
9001d244:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001d248:	b2ad      	uxth	r5, r5
9001d24a:	f10c 0701 	add.w	r7, ip, #1
9001d24e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d252:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001d256:	ea47 070e 	orr.w	r7, r7, lr
9001d25a:	f105 0e01 	add.w	lr, r5, #1
9001d25e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d262:	096d      	lsrs	r5, r5, #5
9001d264:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d268:	432f      	orrs	r7, r5
9001d26a:	8007      	strh	r7, [r0, #0]
9001d26c:	3002      	adds	r0, #2
9001d26e:	3402      	adds	r4, #2
9001d270:	e7ac      	b.n	9001d1cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001d272:	f8b9 3000 	ldrh.w	r3, [r9]
9001d276:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d27a:	eba3 0308 	sub.w	r3, r3, r8
9001d27e:	eba6 0608 	sub.w	r6, r6, r8
9001d282:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d286:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d28a:	440e      	add	r6, r1
9001d28c:	e797      	b.n	9001d1be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001d28e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001d292:	42a8      	cmp	r0, r5
9001d294:	d262      	bcs.n	9001d35c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d296:	9b00      	ldr	r3, [sp, #0]
9001d298:	4631      	mov	r1, r6
9001d29a:	eb00 0b03 	add.w	fp, r0, r3
9001d29e:	4558      	cmp	r0, fp
9001d2a0:	d24e      	bcs.n	9001d340 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001d2a2:	f811 3b01 	ldrb.w	r3, [r1], #1
9001d2a6:	b12b      	cbz	r3, 9001d2b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d2a8:	2bff      	cmp	r3, #255	; 0xff
9001d2aa:	f8b4 e000 	ldrh.w	lr, [r4]
9001d2ae:	d104      	bne.n	9001d2ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001d2b0:	f8a0 e000 	strh.w	lr, [r0]
9001d2b4:	3002      	adds	r0, #2
9001d2b6:	3402      	adds	r4, #2
9001d2b8:	e7f1      	b.n	9001d29e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001d2ba:	8802      	ldrh	r2, [r0, #0]
9001d2bc:	b29f      	uxth	r7, r3
9001d2be:	43db      	mvns	r3, r3
9001d2c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d2c4:	1216      	asrs	r6, r2, #8
9001d2c6:	b2db      	uxtb	r3, r3
9001d2c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d2cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d2d0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001d2d4:	00d2      	lsls	r2, r2, #3
9001d2d6:	fb16 f603 	smulbb	r6, r6, r3
9001d2da:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d2de:	b2d2      	uxtb	r2, r2
9001d2e0:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d2e4:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d2e8:	fb1a fa03 	smulbb	sl, sl, r3
9001d2ec:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d2f0:	fa1f fc8c 	uxth.w	ip, ip
9001d2f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d2f8:	fb12 f303 	smulbb	r3, r2, r3
9001d2fc:	fa5f fe8e 	uxtb.w	lr, lr
9001d300:	fb06 a607 	mla	r6, r6, r7, sl
9001d304:	f10c 0201 	add.w	r2, ip, #1
9001d308:	fb0e 3307 	mla	r3, lr, r7, r3
9001d30c:	b2b6      	uxth	r6, r6
9001d30e:	b29b      	uxth	r3, r3
9001d310:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d314:	f106 0a01 	add.w	sl, r6, #1
9001d318:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001d31c:	f103 0c01 	add.w	ip, r3, #1
9001d320:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d324:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d328:	0976      	lsrs	r6, r6, #5
9001d32a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d32e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d332:	ea4c 0c02 	orr.w	ip, ip, r2
9001d336:	ea4c 0c06 	orr.w	ip, ip, r6
9001d33a:	f8a0 c000 	strh.w	ip, [r0]
9001d33e:	e7b9      	b.n	9001d2b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d340:	f8b9 3000 	ldrh.w	r3, [r9]
9001d344:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d348:	eba3 0308 	sub.w	r3, r3, r8
9001d34c:	eba6 0608 	sub.w	r6, r6, r8
9001d350:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d354:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d358:	440e      	add	r6, r1
9001d35a:	e79a      	b.n	9001d292 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001d35c:	4b03      	ldr	r3, [pc, #12]	; (9001d36c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d35e:	6818      	ldr	r0, [r3, #0]
9001d360:	6803      	ldr	r3, [r0, #0]
9001d362:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d364:	4798      	blx	r3
9001d366:	b007      	add	sp, #28
9001d368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d36c:	2402356c 	.word	0x2402356c
9001d370:	24023566 	.word	0x24023566

9001d374 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001d374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d378:	b089      	sub	sp, #36	; 0x24
9001d37a:	4682      	mov	sl, r0
9001d37c:	460f      	mov	r7, r1
9001d37e:	4691      	mov	r9, r2
9001d380:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001d384:	4698      	mov	r8, r3
9001d386:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d388:	2e00      	cmp	r6, #0
9001d38a:	d03d      	beq.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d38c:	4608      	mov	r0, r1
9001d38e:	f7fa fe4b 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d392:	4605      	mov	r5, r0
9001d394:	4638      	mov	r0, r7
9001d396:	f7fa fe7b 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d39a:	f8ad 000e 	strh.w	r0, [sp, #14]
9001d39e:	4638      	mov	r0, r7
9001d3a0:	f8ad 9008 	strh.w	r9, [sp, #8]
9001d3a4:	f8ad 500c 	strh.w	r5, [sp, #12]
9001d3a8:	f8ad 800a 	strh.w	r8, [sp, #10]
9001d3ac:	f7fa ff28 	bl	90018200 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d3b0:	4605      	mov	r5, r0
9001d3b2:	4638      	mov	r0, r7
9001d3b4:	f7fa ff54 	bl	90018260 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001d3b8:	4681      	mov	r9, r0
9001d3ba:	4638      	mov	r0, r7
9001d3bc:	f7fa ffa4 	bl	90018308 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001d3c0:	280b      	cmp	r0, #11
9001d3c2:	d821      	bhi.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d3c4:	e8df f000 	tbb	[pc, r0]
9001d3c8:	2006aebe 	.word	0x2006aebe
9001d3cc:	20202020 	.word	0x20202020
9001d3d0:	b5202020 	.word	0xb5202020
9001d3d4:	4bb0      	ldr	r3, [pc, #704]	; (9001d698 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001d3d6:	6818      	ldr	r0, [r3, #0]
9001d3d8:	6803      	ldr	r3, [r0, #0]
9001d3da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d3dc:	4798      	blx	r3
9001d3de:	2eff      	cmp	r6, #255	; 0xff
9001d3e0:	d101      	bne.n	9001d3e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d3e2:	0683      	lsls	r3, r0, #26
9001d3e4:	d506      	bpl.n	9001d3f4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001d3e6:	4633      	mov	r3, r6
9001d3e8:	4622      	mov	r2, r4
9001d3ea:	a902      	add	r1, sp, #8
9001d3ec:	4628      	mov	r0, r5
9001d3ee:	f7ff f907 	bl	9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d3f2:	e009      	b.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d3f4:	4638      	mov	r0, r7
9001d3f6:	f7fa fecb 	bl	90018190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d3fa:	b940      	cbnz	r0, 9001d40e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001d3fc:	4623      	mov	r3, r4
9001d3fe:	aa02      	add	r2, sp, #8
9001d400:	4629      	mov	r1, r5
9001d402:	4650      	mov	r0, sl
9001d404:	f7ff f9e2 	bl	9001c7cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d408:	b009      	add	sp, #36	; 0x24
9001d40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d40e:	f10d 0818 	add.w	r8, sp, #24
9001d412:	4639      	mov	r1, r7
9001d414:	af04      	add	r7, sp, #16
9001d416:	4640      	mov	r0, r8
9001d418:	f7fa fe6e 	bl	900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d41c:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d420:	e887 0003 	stmia.w	r7, {r0, r1}
9001d424:	4638      	mov	r0, r7
9001d426:	4621      	mov	r1, r4
9001d428:	f7f2 fd9e 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001d42c:	4638      	mov	r0, r7
9001d42e:	f7f2 fdde 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001d432:	2800      	cmp	r0, #0
9001d434:	d1d7      	bne.n	9001d3e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d436:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d43a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d43e:	4293      	cmp	r3, r2
9001d440:	dd12      	ble.n	9001d468 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001d442:	1a9b      	subs	r3, r3, r2
9001d444:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d448:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d44c:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d450:	4628      	mov	r0, r5
9001d452:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d456:	4642      	mov	r2, r8
9001d458:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d45c:	a902      	add	r1, sp, #8
9001d45e:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d462:	4633      	mov	r3, r6
9001d464:	f7ff f8cc 	bl	9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d468:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d46c:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d470:	4293      	cmp	r3, r2
9001d472:	dd12      	ble.n	9001d49a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001d474:	1a9b      	subs	r3, r3, r2
9001d476:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d47a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d47e:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d482:	4642      	mov	r2, r8
9001d484:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d488:	4628      	mov	r0, r5
9001d48a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d48e:	23ff      	movs	r3, #255	; 0xff
9001d490:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d494:	a902      	add	r1, sp, #8
9001d496:	f7ff f8b3 	bl	9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d49a:	463b      	mov	r3, r7
9001d49c:	aa02      	add	r2, sp, #8
9001d49e:	4629      	mov	r1, r5
9001d4a0:	4650      	mov	r0, sl
9001d4a2:	f7ff f993 	bl	9001c7cc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d4a6:	88a2      	ldrh	r2, [r4, #4]
9001d4a8:	8823      	ldrh	r3, [r4, #0]
9001d4aa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d4ae:	4413      	add	r3, r2
9001d4b0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d4b4:	440a      	add	r2, r1
9001d4b6:	b29b      	uxth	r3, r3
9001d4b8:	b292      	uxth	r2, r2
9001d4ba:	b218      	sxth	r0, r3
9001d4bc:	b211      	sxth	r1, r2
9001d4be:	4288      	cmp	r0, r1
9001d4c0:	dd12      	ble.n	9001d4e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001d4c2:	1a9b      	subs	r3, r3, r2
9001d4c4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d4c8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001d4cc:	4642      	mov	r2, r8
9001d4ce:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d4d2:	a902      	add	r1, sp, #8
9001d4d4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d4d8:	23ff      	movs	r3, #255	; 0xff
9001d4da:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d4de:	4628      	mov	r0, r5
9001d4e0:	f8ad 601a 	strh.w	r6, [sp, #26]
9001d4e4:	f7ff f88c 	bl	9001c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d4e8:	88e2      	ldrh	r2, [r4, #6]
9001d4ea:	8863      	ldrh	r3, [r4, #2]
9001d4ec:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d4f0:	4413      	add	r3, r2
9001d4f2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d4f6:	440a      	add	r2, r1
9001d4f8:	b29b      	uxth	r3, r3
9001d4fa:	b292      	uxth	r2, r2
9001d4fc:	b218      	sxth	r0, r3
9001d4fe:	b211      	sxth	r1, r2
9001d500:	4288      	cmp	r0, r1
9001d502:	dd81      	ble.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d504:	1a9b      	subs	r3, r3, r2
9001d506:	f9b4 6000 	ldrsh.w	r6, [r4]
9001d50a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d50e:	4642      	mov	r2, r8
9001d510:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d514:	23ff      	movs	r3, #255	; 0xff
9001d516:	f8ad 6018 	strh.w	r6, [sp, #24]
9001d51a:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d51e:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d522:	e762      	b.n	9001d3ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001d524:	4633      	mov	r3, r6
9001d526:	4622      	mov	r2, r4
9001d528:	a902      	add	r1, sp, #8
9001d52a:	4628      	mov	r0, r5
9001d52c:	f7ff f9be 	bl	9001c8ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001d530:	e76a      	b.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d532:	e9cd 4600 	strd	r4, r6, [sp]
9001d536:	ab02      	add	r3, sp, #8
9001d538:	464a      	mov	r2, r9
9001d53a:	4629      	mov	r1, r5
9001d53c:	4650      	mov	r0, sl
9001d53e:	f7ff fd95 	bl	9001d06c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001d542:	e761      	b.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d544:	4638      	mov	r0, r7
9001d546:	f7fa fe23 	bl	90018190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d54a:	b950      	cbnz	r0, 9001d562 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001d54c:	f8da 3000 	ldr.w	r3, [sl]
9001d550:	aa02      	add	r2, sp, #8
9001d552:	4629      	mov	r1, r5
9001d554:	e9cd 6000 	strd	r6, r0, [sp]
9001d558:	4650      	mov	r0, sl
9001d55a:	68de      	ldr	r6, [r3, #12]
9001d55c:	4623      	mov	r3, r4
9001d55e:	47b0      	blx	r6
9001d560:	e752      	b.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d562:	f10d 0818 	add.w	r8, sp, #24
9001d566:	4639      	mov	r1, r7
9001d568:	af04      	add	r7, sp, #16
9001d56a:	4640      	mov	r0, r8
9001d56c:	f7fa fdc4 	bl	900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d570:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d574:	e887 0003 	stmia.w	r7, {r0, r1}
9001d578:	4638      	mov	r0, r7
9001d57a:	4621      	mov	r1, r4
9001d57c:	f7f2 fcf4 	bl	9000ff68 <_ZN8touchgfx4RectaNERKS0_>
9001d580:	4638      	mov	r0, r7
9001d582:	f7f2 fd34 	bl	9000ffee <_ZNK8touchgfx4Rect7isEmptyEv>
9001d586:	b138      	cbz	r0, 9001d598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001d588:	4623      	mov	r3, r4
9001d58a:	9600      	str	r6, [sp, #0]
9001d58c:	aa02      	add	r2, sp, #8
9001d58e:	4649      	mov	r1, r9
9001d590:	4628      	mov	r0, r5
9001d592:	f7ff fdc9 	bl	9001d128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d596:	e737      	b.n	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d598:	f8da 3000 	ldr.w	r3, [sl]
9001d59c:	aa02      	add	r2, sp, #8
9001d59e:	4629      	mov	r1, r5
9001d5a0:	e9cd 6000 	strd	r6, r0, [sp]
9001d5a4:	4650      	mov	r0, sl
9001d5a6:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001d5aa:	463b      	mov	r3, r7
9001d5ac:	47d8      	blx	fp
9001d5ae:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d5b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d5b6:	4293      	cmp	r3, r2
9001d5b8:	dd13      	ble.n	9001d5e2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001d5ba:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d5be:	1a9b      	subs	r3, r3, r2
9001d5c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d5c4:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d5c8:	4628      	mov	r0, r5
9001d5ca:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d5ce:	aa02      	add	r2, sp, #8
9001d5d0:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d5d4:	4649      	mov	r1, r9
9001d5d6:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d5da:	4643      	mov	r3, r8
9001d5dc:	9600      	str	r6, [sp, #0]
9001d5de:	f7ff fda3 	bl	9001d128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d5e2:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d5e6:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d5ea:	4293      	cmp	r3, r2
9001d5ec:	dd13      	ble.n	9001d616 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001d5ee:	1a9b      	subs	r3, r3, r2
9001d5f0:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d5f4:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d5f8:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d5fc:	aa02      	add	r2, sp, #8
9001d5fe:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d602:	4628      	mov	r0, r5
9001d604:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d608:	4643      	mov	r3, r8
9001d60a:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d60e:	4649      	mov	r1, r9
9001d610:	9600      	str	r6, [sp, #0]
9001d612:	f7ff fd89 	bl	9001d128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d616:	88a2      	ldrh	r2, [r4, #4]
9001d618:	8823      	ldrh	r3, [r4, #0]
9001d61a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d61e:	4413      	add	r3, r2
9001d620:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d624:	440a      	add	r2, r1
9001d626:	b29b      	uxth	r3, r3
9001d628:	b292      	uxth	r2, r2
9001d62a:	b218      	sxth	r0, r3
9001d62c:	b211      	sxth	r1, r2
9001d62e:	4288      	cmp	r0, r1
9001d630:	dd13      	ble.n	9001d65a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001d632:	1a9b      	subs	r3, r3, r2
9001d634:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d638:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001d63c:	aa02      	add	r2, sp, #8
9001d63e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d642:	4649      	mov	r1, r9
9001d644:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d648:	4643      	mov	r3, r8
9001d64a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d64e:	4628      	mov	r0, r5
9001d650:	9600      	str	r6, [sp, #0]
9001d652:	f8ad 701a 	strh.w	r7, [sp, #26]
9001d656:	f7ff fd67 	bl	9001d128 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d65a:	88e2      	ldrh	r2, [r4, #6]
9001d65c:	8863      	ldrh	r3, [r4, #2]
9001d65e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d662:	4413      	add	r3, r2
9001d664:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d668:	440a      	add	r2, r1
9001d66a:	b29b      	uxth	r3, r3
9001d66c:	b292      	uxth	r2, r2
9001d66e:	b218      	sxth	r0, r3
9001d670:	b211      	sxth	r1, r2
9001d672:	4288      	cmp	r0, r1
9001d674:	f77f aec8 	ble.w	9001d408 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d678:	f9b4 7000 	ldrsh.w	r7, [r4]
9001d67c:	1a9b      	subs	r3, r3, r2
9001d67e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d682:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d686:	4643      	mov	r3, r8
9001d688:	f8ad 7018 	strh.w	r7, [sp, #24]
9001d68c:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d690:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d694:	9600      	str	r6, [sp, #0]
9001d696:	e779      	b.n	9001d58c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001d698:	2402356c 	.word	0x2402356c

9001d69c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001d69c:	b180      	cbz	r0, 9001d6c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001d69e:	2903      	cmp	r1, #3
9001d6a0:	d81c      	bhi.n	9001d6dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d6a2:	e8df f001 	tbb	[pc, r1]
9001d6a6:	1d02      	.short	0x1d02
9001d6a8:	1f08      	.short	0x1f08
9001d6aa:	4b10      	ldr	r3, [pc, #64]	; (9001d6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d6ac:	8818      	ldrh	r0, [r3, #0]
9001d6ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d6b2:	4240      	negs	r0, r0
9001d6b4:	4770      	bx	lr
9001d6b6:	4b0d      	ldr	r3, [pc, #52]	; (9001d6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d6b8:	8818      	ldrh	r0, [r3, #0]
9001d6ba:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d6be:	4770      	bx	lr
9001d6c0:	2903      	cmp	r1, #3
9001d6c2:	d80b      	bhi.n	9001d6dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d6c4:	a301      	add	r3, pc, #4	; (adr r3, 9001d6cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001d6c6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d6ca:	bf00      	nop
9001d6cc:	9001d6e1 	.word	0x9001d6e1
9001d6d0:	9001d6b7 	.word	0x9001d6b7
9001d6d4:	9001d6e5 	.word	0x9001d6e5
9001d6d8:	9001d6ab 	.word	0x9001d6ab
9001d6dc:	2000      	movs	r0, #0
9001d6de:	4770      	bx	lr
9001d6e0:	2001      	movs	r0, #1
9001d6e2:	4770      	bx	lr
9001d6e4:	f04f 30ff 	mov.w	r0, #4294967295
9001d6e8:	4770      	bx	lr
9001d6ea:	bf00      	nop
9001d6ec:	24023566 	.word	0x24023566

9001d6f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001d6f0:	b180      	cbz	r0, 9001d714 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001d6f2:	2903      	cmp	r1, #3
9001d6f4:	d81c      	bhi.n	9001d730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d6f6:	e8df f001 	tbb	[pc, r1]
9001d6fa:	021d      	.short	0x021d
9001d6fc:	071f      	.short	0x071f
9001d6fe:	4b10      	ldr	r3, [pc, #64]	; (9001d740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d700:	8818      	ldrh	r0, [r3, #0]
9001d702:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d706:	4770      	bx	lr
9001d708:	4b0d      	ldr	r3, [pc, #52]	; (9001d740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d70a:	8818      	ldrh	r0, [r3, #0]
9001d70c:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d710:	4240      	negs	r0, r0
9001d712:	4770      	bx	lr
9001d714:	2903      	cmp	r1, #3
9001d716:	d80b      	bhi.n	9001d730 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d718:	a301      	add	r3, pc, #4	; (adr r3, 9001d720 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001d71a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d71e:	bf00      	nop
9001d720:	9001d6ff 	.word	0x9001d6ff
9001d724:	9001d739 	.word	0x9001d739
9001d728:	9001d709 	.word	0x9001d709
9001d72c:	9001d735 	.word	0x9001d735
9001d730:	2000      	movs	r0, #0
9001d732:	4770      	bx	lr
9001d734:	2001      	movs	r0, #1
9001d736:	4770      	bx	lr
9001d738:	f04f 30ff 	mov.w	r0, #4294967295
9001d73c:	4770      	bx	lr
9001d73e:	bf00      	nop
9001d740:	24023566 	.word	0x24023566

9001d744 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001d744:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d748:	b099      	sub	sp, #100	; 0x64
9001d74a:	910b      	str	r1, [sp, #44]	; 0x2c
9001d74c:	a914      	add	r1, sp, #80	; 0x50
9001d74e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001d752:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001d756:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001d75a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001d75e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001d762:	e881 000c 	stmia.w	r1, {r2, r3}
9001d766:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001d76a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001d76e:	9309      	str	r3, [sp, #36]	; 0x24
9001d770:	f891 900d 	ldrb.w	r9, [r1, #13]
9001d774:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001d778:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001d77c:	9310      	str	r3, [sp, #64]	; 0x40
9001d77e:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001d782:	930c      	str	r3, [sp, #48]	; 0x30
9001d784:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001d788:	798f      	ldrb	r7, [r1, #6]
9001d78a:	431f      	orrs	r7, r3
9001d78c:	f000 8195 	beq.w	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d790:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001d794:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001d798:	f891 9007 	ldrb.w	r9, [r1, #7]
9001d79c:	ea59 0903 	orrs.w	r9, r9, r3
9001d7a0:	f000 818b 	beq.w	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d7a4:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001d7a8:	b29b      	uxth	r3, r3
9001d7aa:	2d00      	cmp	r5, #0
9001d7ac:	f000 812e 	beq.w	9001da0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001d7b0:	1aed      	subs	r5, r5, r3
9001d7b2:	b2ad      	uxth	r5, r5
9001d7b4:	042b      	lsls	r3, r5, #16
9001d7b6:	d502      	bpl.n	9001d7be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001d7b8:	1b64      	subs	r4, r4, r5
9001d7ba:	2500      	movs	r5, #0
9001d7bc:	b224      	sxth	r4, r4
9001d7be:	f9b2 1000 	ldrsh.w	r1, [r2]
9001d7c2:	a814      	add	r0, sp, #80	; 0x50
9001d7c4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001d7c8:	428c      	cmp	r4, r1
9001d7ca:	b28b      	uxth	r3, r1
9001d7cc:	bfbf      	itttt	lt
9001d7ce:	18ed      	addlt	r5, r5, r3
9001d7d0:	1b2c      	sublt	r4, r5, r4
9001d7d2:	b2a5      	uxthlt	r5, r4
9001d7d4:	460c      	movlt	r4, r1
9001d7d6:	8891      	ldrh	r1, [r2, #4]
9001d7d8:	440b      	add	r3, r1
9001d7da:	4621      	mov	r1, r4
9001d7dc:	b21b      	sxth	r3, r3
9001d7de:	930f      	str	r3, [sp, #60]	; 0x3c
9001d7e0:	88d3      	ldrh	r3, [r2, #6]
9001d7e2:	8852      	ldrh	r2, [r2, #2]
9001d7e4:	4413      	add	r3, r2
9001d7e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d7e8:	b21b      	sxth	r3, r3
9001d7ea:	930d      	str	r3, [sp, #52]	; 0x34
9001d7ec:	4bbd      	ldr	r3, [pc, #756]	; (9001dae4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001d7ee:	f893 b000 	ldrb.w	fp, [r3]
9001d7f2:	f10b 3cff 	add.w	ip, fp, #4294967295
9001d7f6:	f1dc 0300 	rsbs	r3, ip, #0
9001d7fa:	eb43 030c 	adc.w	r3, r3, ip
9001d7fe:	930e      	str	r3, [sp, #56]	; 0x38
9001d800:	4653      	mov	r3, sl
9001d802:	f7f6 ff90 	bl	90014726 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001d806:	4621      	mov	r1, r4
9001d808:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001d80c:	4653      	mov	r3, sl
9001d80e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d810:	a814      	add	r0, sp, #80	; 0x50
9001d812:	f7f6 ffa5 	bl	90014760 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001d816:	a918      	add	r1, sp, #96	; 0x60
9001d818:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001d81c:	a817      	add	r0, sp, #92	; 0x5c
9001d81e:	f7f7 f8cb 	bl	900149b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001d822:	f1ba 0f00 	cmp.w	sl, #0
9001d826:	f040 80f4 	bne.w	9001da12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001d82a:	f1bb 0f01 	cmp.w	fp, #1
9001d82e:	f040 80f8 	bne.w	9001da22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001d832:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d834:	2b00      	cmp	r3, #0
9001d836:	f040 8145 	bne.w	9001dac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001d83a:	b2ba      	uxth	r2, r7
9001d83c:	b905      	cbnz	r5, 9001d840 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001d83e:	b16e      	cbz	r6, 9001d85c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001d840:	fb06 5302 	mla	r3, r6, r2, r5
9001d844:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001d846:	4631      	mov	r1, r6
9001d848:	fb08 f303 	mul.w	r3, r8, r3
9001d84c:	f003 0607 	and.w	r6, r3, #7
9001d850:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001d854:	9328      	str	r3, [sp, #160]	; 0xa0
9001d856:	eba9 0301 	sub.w	r3, r9, r1
9001d85a:	930a      	str	r3, [sp, #40]	; 0x28
9001d85c:	4651      	mov	r1, sl
9001d85e:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d860:	f7ff ff1c 	bl	9001d69c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001d864:	4681      	mov	r9, r0
9001d866:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d868:	f7ff ff42 	bl	9001d6f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001d86c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d86e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d870:	4683      	mov	fp, r0
9001d872:	eba3 0a01 	sub.w	sl, r3, r1
9001d876:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d878:	459a      	cmp	sl, r3
9001d87a:	bfa8      	it	ge
9001d87c:	469a      	movge	sl, r3
9001d87e:	f1ba 0f00 	cmp.w	sl, #0
9001d882:	f340 811a 	ble.w	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d886:	1b64      	subs	r4, r4, r5
9001d888:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001d88a:	1b1c      	subs	r4, r3, r4
9001d88c:	42bc      	cmp	r4, r7
9001d88e:	bfd4      	ite	le
9001d890:	ebc5 0504 	rsble	r5, r5, r4
9001d894:	ebc5 0507 	rsbgt	r5, r5, r7
9001d898:	2d00      	cmp	r5, #0
9001d89a:	f340 810e 	ble.w	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d89e:	1b52      	subs	r2, r2, r5
9001d8a0:	fb08 f302 	mul.w	r3, r8, r2
9001d8a4:	930f      	str	r3, [sp, #60]	; 0x3c
9001d8a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d8a8:	2b00      	cmp	r3, #0
9001d8aa:	f040 8116 	bne.w	9001dada <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001d8ae:	4b8e      	ldr	r3, [pc, #568]	; (9001dae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001d8b0:	6818      	ldr	r0, [r3, #0]
9001d8b2:	6803      	ldr	r3, [r0, #0]
9001d8b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d8b6:	4798      	blx	r3
9001d8b8:	2301      	movs	r3, #1
9001d8ba:	4a8c      	ldr	r2, [pc, #560]	; (9001daec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001d8bc:	fa03 f308 	lsl.w	r3, r3, r8
9001d8c0:	8811      	ldrh	r1, [r2, #0]
9001d8c2:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001d8c6:	3b01      	subs	r3, #1
9001d8c8:	b2db      	uxtb	r3, r3
9001d8ca:	930e      	str	r3, [sp, #56]	; 0x38
9001d8cc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001d8d0:	fb01 2303 	mla	r3, r1, r3, r2
9001d8d4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d8d8:	930a      	str	r3, [sp, #40]	; 0x28
9001d8da:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d8dc:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001d8e0:	9313      	str	r3, [sp, #76]	; 0x4c
9001d8e2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d8e4:	0a19      	lsrs	r1, r3, #8
9001d8e6:	b2cb      	uxtb	r3, r1
9001d8e8:	9312      	str	r3, [sp, #72]	; 0x48
9001d8ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d8ec:	b2db      	uxtb	r3, r3
9001d8ee:	9311      	str	r3, [sp, #68]	; 0x44
9001d8f0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001d8f2:	095a      	lsrs	r2, r3, #5
9001d8f4:	4b7e      	ldr	r3, [pc, #504]	; (9001daf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001d8f6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001d8fa:	400b      	ands	r3, r1
9001d8fc:	4313      	orrs	r3, r2
9001d8fe:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001d900:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001d904:	4313      	orrs	r3, r2
9001d906:	b29b      	uxth	r3, r3
9001d908:	9310      	str	r3, [sp, #64]	; 0x40
9001d90a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001d90c:	781a      	ldrb	r2, [r3, #0]
9001d90e:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001d912:	fb05 b919 	mls	r9, r5, r9, fp
9001d916:	4132      	asrs	r2, r6
9001d918:	fb03 fb05 	mul.w	fp, r3, r5
9001d91c:	930d      	str	r3, [sp, #52]	; 0x34
9001d91e:	b2d2      	uxtb	r2, r2
9001d920:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001d924:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001d928:	f0c0 80f5 	bcc.w	9001db16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001d92c:	46ae      	mov	lr, r5
9001d92e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001d932:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001d936:	f0c0 80dd 	bcc.w	9001daf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001d93a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001d93c:	4013      	ands	r3, r2
9001d93e:	d055      	beq.n	9001d9ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001d940:	20ff      	movs	r0, #255	; 0xff
9001d942:	990e      	ldr	r1, [sp, #56]	; 0x38
9001d944:	fb90 f1f1 	sdiv	r1, r0, r1
9001d948:	434b      	muls	r3, r1
9001d94a:	2bfe      	cmp	r3, #254	; 0xfe
9001d94c:	dd03      	ble.n	9001d956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001d94e:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d950:	4281      	cmp	r1, r0
9001d952:	f000 80c4 	beq.w	9001dade <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001d956:	990c      	ldr	r1, [sp, #48]	; 0x30
9001d958:	f8bc 4000 	ldrh.w	r4, [ip]
9001d95c:	fb11 f303 	smulbb	r3, r1, r3
9001d960:	1220      	asrs	r0, r4, #8
9001d962:	b29b      	uxth	r3, r3
9001d964:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001d968:	1c59      	adds	r1, r3, #1
9001d96a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001d96e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001d972:	10e1      	asrs	r1, r4, #3
9001d974:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001d978:	00e4      	lsls	r4, r4, #3
9001d97a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001d97e:	b29f      	uxth	r7, r3
9001d980:	43db      	mvns	r3, r3
9001d982:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001d986:	b2db      	uxtb	r3, r3
9001d988:	b2e4      	uxtb	r4, r4
9001d98a:	9309      	str	r3, [sp, #36]	; 0x24
9001d98c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001d98e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001d992:	fb13 f907 	smulbb	r9, r3, r7
9001d996:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d998:	fb00 9003 	mla	r0, r0, r3, r9
9001d99c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001d99e:	fb13 f907 	smulbb	r9, r3, r7
9001d9a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d9a4:	b280      	uxth	r0, r0
9001d9a6:	fb01 9103 	mla	r1, r1, r3, r9
9001d9aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001d9ac:	fb13 f707 	smulbb	r7, r3, r7
9001d9b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001d9b2:	b289      	uxth	r1, r1
9001d9b4:	fb04 7403 	mla	r4, r4, r3, r7
9001d9b8:	1c43      	adds	r3, r0, #1
9001d9ba:	b2a4      	uxth	r4, r4
9001d9bc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001d9c0:	f104 0901 	add.w	r9, r4, #1
9001d9c4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001d9c8:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001d9cc:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001d9d0:	ea49 0000 	orr.w	r0, r9, r0
9001d9d4:	f101 0901 	add.w	r9, r1, #1
9001d9d8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001d9dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d9e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001d9e4:	ea40 0009 	orr.w	r0, r0, r9
9001d9e8:	f8ac 0000 	strh.w	r0, [ip]
9001d9ec:	4446      	add	r6, r8
9001d9ee:	b2b6      	uxth	r6, r6
9001d9f0:	2e07      	cmp	r6, #7
9001d9f2:	bf89      	itett	hi
9001d9f4:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001d9f6:	fa42 f208 	asrls.w	r2, r2, r8
9001d9fa:	2600      	movhi	r6, #0
9001d9fc:	785a      	ldrbhi	r2, [r3, #1]
9001d9fe:	bf8a      	itet	hi
9001da00:	3301      	addhi	r3, #1
9001da02:	b2d2      	uxtbls	r2, r2
9001da04:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001da06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001da08:	449c      	add	ip, r3
9001da0a:	e792      	b.n	9001d932 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001da0c:	441c      	add	r4, r3
9001da0e:	b224      	sxth	r4, r4
9001da10:	e6d5      	b.n	9001d7be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001da12:	f1ba 0f01 	cmp.w	sl, #1
9001da16:	f47f af0c 	bne.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da1a:	f1bb 0f01 	cmp.w	fp, #1
9001da1e:	f47f af08 	bne.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da22:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001dae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001da26:	f8db 0000 	ldr.w	r0, [fp]
9001da2a:	6803      	ldr	r3, [r0, #0]
9001da2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001da2e:	4798      	blx	r3
9001da30:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001da34:	465a      	mov	r2, fp
9001da36:	d006      	beq.n	9001da46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001da38:	f1b8 0f04 	cmp.w	r8, #4
9001da3c:	d140      	bne.n	9001dac0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001da3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001da40:	3300      	adds	r3, #0
9001da42:	bf18      	it	ne
9001da44:	2301      	movne	r3, #1
9001da46:	0580      	lsls	r0, r0, #22
9001da48:	d56e      	bpl.n	9001db28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001da4a:	f1b8 0f08 	cmp.w	r8, #8
9001da4e:	d16b      	bne.n	9001db28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001da50:	2b00      	cmp	r3, #0
9001da52:	bf0c      	ite	eq
9001da54:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001da58:	f44f 7180 	movne.w	r1, #256	; 0x100
9001da5c:	2d00      	cmp	r5, #0
9001da5e:	f47f aee8 	bne.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da62:	2e00      	cmp	r6, #0
9001da64:	f47f aee5 	bne.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da68:	19e3      	adds	r3, r4, r7
9001da6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001da6c:	4283      	cmp	r3, r0
9001da6e:	f73f aee0 	bgt.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da72:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001da74:	980d      	ldr	r0, [sp, #52]	; 0x34
9001da76:	444b      	add	r3, r9
9001da78:	4283      	cmp	r3, r0
9001da7a:	f73f aeda 	bgt.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001da7e:	b2bf      	uxth	r7, r7
9001da80:	f1b8 0f08 	cmp.w	r8, #8
9001da84:	6810      	ldr	r0, [r2, #0]
9001da86:	f04f 0500 	mov.w	r5, #0
9001da8a:	bf18      	it	ne
9001da8c:	3701      	addne	r7, #1
9001da8e:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001da92:	6804      	ldr	r4, [r0, #0]
9001da94:	bf18      	it	ne
9001da96:	f027 0701 	bicne.w	r7, r7, #1
9001da9a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001da9e:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001daa2:	990c      	ldr	r1, [sp, #48]	; 0x30
9001daa4:	bf18      	it	ne
9001daa6:	b2bf      	uxthne	r7, r7
9001daa8:	9104      	str	r1, [sp, #16]
9001daaa:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001daac:	e9cd 7900 	strd	r7, r9, [sp]
9001dab0:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001dab4:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001dab6:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001dab8:	47a0      	blx	r4
9001daba:	b019      	add	sp, #100	; 0x64
9001dabc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dac0:	2300      	movs	r3, #0
9001dac2:	e7c0      	b.n	9001da46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001dac4:	2208      	movs	r2, #8
9001dac6:	fb92 f3f8 	sdiv	r3, r2, r8
9001daca:	1e5a      	subs	r2, r3, #1
9001dacc:	443a      	add	r2, r7
9001dace:	fb92 f2f3 	sdiv	r2, r2, r3
9001dad2:	fb12 f203 	smulbb	r2, r2, r3
9001dad6:	b292      	uxth	r2, r2
9001dad8:	e6b0      	b.n	9001d83c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001dada:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001dadc:	e6ec      	b.n	9001d8b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001dade:	9810      	ldr	r0, [sp, #64]	; 0x40
9001dae0:	e782      	b.n	9001d9e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001dae2:	bf00      	nop
9001dae4:	24023564 	.word	0x24023564
9001dae8:	2402356c 	.word	0x2402356c
9001daec:	24023566 	.word	0x24023566
9001daf0:	00fff800 	.word	0x00fff800
9001daf4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001daf6:	b153      	cbz	r3, 9001db0e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001daf8:	441e      	add	r6, r3
9001dafa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001dafc:	b2b6      	uxth	r6, r6
9001dafe:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001db02:	f006 0607 	and.w	r6, r6, #7
9001db06:	781a      	ldrb	r2, [r3, #0]
9001db08:	9328      	str	r3, [sp, #160]	; 0xa0
9001db0a:	4132      	asrs	r2, r6
9001db0c:	b2d2      	uxtb	r2, r2
9001db0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001db10:	445b      	add	r3, fp
9001db12:	930a      	str	r3, [sp, #40]	; 0x28
9001db14:	e706      	b.n	9001d924 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001db16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001db18:	2b00      	cmp	r3, #0
9001db1a:	d1ce      	bne.n	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001db1c:	4b05      	ldr	r3, [pc, #20]	; (9001db34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001db1e:	6818      	ldr	r0, [r3, #0]
9001db20:	6803      	ldr	r3, [r0, #0]
9001db22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001db24:	4798      	blx	r3
9001db26:	e7c8      	b.n	9001daba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001db28:	2b00      	cmp	r3, #0
9001db2a:	f43f ae82 	beq.w	9001d832 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001db2e:	f44f 7180 	mov.w	r1, #256	; 0x100
9001db32:	e793      	b.n	9001da5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001db34:	2402356c 	.word	0x2402356c

9001db38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001db38:	b538      	push	{r3, r4, r5, lr}
9001db3a:	4c15      	ldr	r4, [pc, #84]	; (9001db90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001db3c:	4605      	mov	r5, r0
9001db3e:	7823      	ldrb	r3, [r4, #0]
9001db40:	f3bf 8f5b 	dmb	ish
9001db44:	07da      	lsls	r2, r3, #31
9001db46:	d40b      	bmi.n	9001db60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001db48:	4620      	mov	r0, r4
9001db4a:	f008 fa7c 	bl	90026046 <__cxa_guard_acquire>
9001db4e:	b138      	cbz	r0, 9001db60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001db50:	4620      	mov	r0, r4
9001db52:	f008 fa84 	bl	9002605e <__cxa_guard_release>
9001db56:	4a0f      	ldr	r2, [pc, #60]	; (9001db94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001db58:	490f      	ldr	r1, [pc, #60]	; (9001db98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001db5a:	4810      	ldr	r0, [pc, #64]	; (9001db9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001db5c:	f008 fa6c 	bl	90026038 <__aeabi_atexit>
9001db60:	4c0f      	ldr	r4, [pc, #60]	; (9001dba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001db62:	7823      	ldrb	r3, [r4, #0]
9001db64:	f3bf 8f5b 	dmb	ish
9001db68:	07db      	lsls	r3, r3, #31
9001db6a:	d40b      	bmi.n	9001db84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001db6c:	4620      	mov	r0, r4
9001db6e:	f008 fa6a 	bl	90026046 <__cxa_guard_acquire>
9001db72:	b138      	cbz	r0, 9001db84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001db74:	4620      	mov	r0, r4
9001db76:	f008 fa72 	bl	9002605e <__cxa_guard_release>
9001db7a:	4a06      	ldr	r2, [pc, #24]	; (9001db94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001db7c:	4909      	ldr	r1, [pc, #36]	; (9001dba4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001db7e:	480a      	ldr	r0, [pc, #40]	; (9001dba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001db80:	f008 fa5a 	bl	90026038 <__aeabi_atexit>
9001db84:	4b05      	ldr	r3, [pc, #20]	; (9001db9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001db86:	616b      	str	r3, [r5, #20]
9001db88:	4b07      	ldr	r3, [pc, #28]	; (9001dba8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001db8a:	61ab      	str	r3, [r5, #24]
9001db8c:	bd38      	pop	{r3, r4, r5, pc}
9001db8e:	bf00      	nop
9001db90:	2402364c 	.word	0x2402364c
9001db94:	24000000 	.word	0x24000000
9001db98:	9001a91b 	.word	0x9001a91b
9001db9c:	240000c0 	.word	0x240000c0
9001dba0:	24023650 	.word	0x24023650
9001dba4:	9001a919 	.word	0x9001a919
9001dba8:	240000c4 	.word	0x240000c4

9001dbac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001dbac:	b538      	push	{r3, r4, r5, lr}
9001dbae:	4c15      	ldr	r4, [pc, #84]	; (9001dc04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001dbb0:	4605      	mov	r5, r0
9001dbb2:	7823      	ldrb	r3, [r4, #0]
9001dbb4:	f3bf 8f5b 	dmb	ish
9001dbb8:	07da      	lsls	r2, r3, #31
9001dbba:	d40b      	bmi.n	9001dbd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dbbc:	4620      	mov	r0, r4
9001dbbe:	f008 fa42 	bl	90026046 <__cxa_guard_acquire>
9001dbc2:	b138      	cbz	r0, 9001dbd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dbc4:	4620      	mov	r0, r4
9001dbc6:	f008 fa4a 	bl	9002605e <__cxa_guard_release>
9001dbca:	4a0f      	ldr	r2, [pc, #60]	; (9001dc08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001dbcc:	490f      	ldr	r1, [pc, #60]	; (9001dc0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001dbce:	4810      	ldr	r0, [pc, #64]	; (9001dc10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001dbd0:	f008 fa32 	bl	90026038 <__aeabi_atexit>
9001dbd4:	4c0f      	ldr	r4, [pc, #60]	; (9001dc14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001dbd6:	7823      	ldrb	r3, [r4, #0]
9001dbd8:	f3bf 8f5b 	dmb	ish
9001dbdc:	07db      	lsls	r3, r3, #31
9001dbde:	d40b      	bmi.n	9001dbf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001dbe0:	4620      	mov	r0, r4
9001dbe2:	f008 fa30 	bl	90026046 <__cxa_guard_acquire>
9001dbe6:	b138      	cbz	r0, 9001dbf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001dbe8:	4620      	mov	r0, r4
9001dbea:	f008 fa38 	bl	9002605e <__cxa_guard_release>
9001dbee:	4a06      	ldr	r2, [pc, #24]	; (9001dc08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001dbf0:	4909      	ldr	r1, [pc, #36]	; (9001dc18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001dbf2:	480a      	ldr	r0, [pc, #40]	; (9001dc1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001dbf4:	f008 fa20 	bl	90026038 <__aeabi_atexit>
9001dbf8:	4b05      	ldr	r3, [pc, #20]	; (9001dc10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001dbfa:	60eb      	str	r3, [r5, #12]
9001dbfc:	4b07      	ldr	r3, [pc, #28]	; (9001dc1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001dbfe:	612b      	str	r3, [r5, #16]
9001dc00:	bd38      	pop	{r3, r4, r5, pc}
9001dc02:	bf00      	nop
9001dc04:	24023624 	.word	0x24023624
9001dc08:	24000000 	.word	0x24000000
9001dc0c:	9001a91f 	.word	0x9001a91f
9001dc10:	24000098 	.word	0x24000098
9001dc14:	24023628 	.word	0x24023628
9001dc18:	9001a91d 	.word	0x9001a91d
9001dc1c:	2400009c 	.word	0x2400009c

9001dc20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001dc20:	b510      	push	{r4, lr}
9001dc22:	4604      	mov	r4, r0
9001dc24:	f7ff ff88 	bl	9001db38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001dc28:	4620      	mov	r0, r4
9001dc2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dc2e:	f7ff bfbd 	b.w	9001dbac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001dc34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001dc34:	b538      	push	{r3, r4, r5, lr}
9001dc36:	4c15      	ldr	r4, [pc, #84]	; (9001dc8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001dc38:	4605      	mov	r5, r0
9001dc3a:	7823      	ldrb	r3, [r4, #0]
9001dc3c:	f3bf 8f5b 	dmb	ish
9001dc40:	07da      	lsls	r2, r3, #31
9001dc42:	d40b      	bmi.n	9001dc5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001dc44:	4620      	mov	r0, r4
9001dc46:	f008 f9fe 	bl	90026046 <__cxa_guard_acquire>
9001dc4a:	b138      	cbz	r0, 9001dc5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001dc4c:	4620      	mov	r0, r4
9001dc4e:	f008 fa06 	bl	9002605e <__cxa_guard_release>
9001dc52:	4a0f      	ldr	r2, [pc, #60]	; (9001dc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001dc54:	490f      	ldr	r1, [pc, #60]	; (9001dc94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001dc56:	4810      	ldr	r0, [pc, #64]	; (9001dc98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001dc58:	f008 f9ee 	bl	90026038 <__aeabi_atexit>
9001dc5c:	4c0f      	ldr	r4, [pc, #60]	; (9001dc9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001dc5e:	7823      	ldrb	r3, [r4, #0]
9001dc60:	f3bf 8f5b 	dmb	ish
9001dc64:	07db      	lsls	r3, r3, #31
9001dc66:	d40b      	bmi.n	9001dc80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001dc68:	4620      	mov	r0, r4
9001dc6a:	f008 f9ec 	bl	90026046 <__cxa_guard_acquire>
9001dc6e:	b138      	cbz	r0, 9001dc80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001dc70:	4620      	mov	r0, r4
9001dc72:	f008 f9f4 	bl	9002605e <__cxa_guard_release>
9001dc76:	4a06      	ldr	r2, [pc, #24]	; (9001dc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001dc78:	4909      	ldr	r1, [pc, #36]	; (9001dca0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001dc7a:	480a      	ldr	r0, [pc, #40]	; (9001dca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001dc7c:	f008 f9dc 	bl	90026038 <__aeabi_atexit>
9001dc80:	4b05      	ldr	r3, [pc, #20]	; (9001dc98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001dc82:	626b      	str	r3, [r5, #36]	; 0x24
9001dc84:	4b07      	ldr	r3, [pc, #28]	; (9001dca4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001dc86:	62ab      	str	r3, [r5, #40]	; 0x28
9001dc88:	bd38      	pop	{r3, r4, r5, pc}
9001dc8a:	bf00      	nop
9001dc8c:	24023654 	.word	0x24023654
9001dc90:	24000000 	.word	0x24000000
9001dc94:	9001a913 	.word	0x9001a913
9001dc98:	240000c8 	.word	0x240000c8
9001dc9c:	24023658 	.word	0x24023658
9001dca0:	9001a911 	.word	0x9001a911
9001dca4:	240000cc 	.word	0x240000cc

9001dca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001dca8:	b538      	push	{r3, r4, r5, lr}
9001dcaa:	4c15      	ldr	r4, [pc, #84]	; (9001dd00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001dcac:	4605      	mov	r5, r0
9001dcae:	7823      	ldrb	r3, [r4, #0]
9001dcb0:	f3bf 8f5b 	dmb	ish
9001dcb4:	07da      	lsls	r2, r3, #31
9001dcb6:	d40b      	bmi.n	9001dcd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001dcb8:	4620      	mov	r0, r4
9001dcba:	f008 f9c4 	bl	90026046 <__cxa_guard_acquire>
9001dcbe:	b138      	cbz	r0, 9001dcd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001dcc0:	4620      	mov	r0, r4
9001dcc2:	f008 f9cc 	bl	9002605e <__cxa_guard_release>
9001dcc6:	4a0f      	ldr	r2, [pc, #60]	; (9001dd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001dcc8:	490f      	ldr	r1, [pc, #60]	; (9001dd08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001dcca:	4810      	ldr	r0, [pc, #64]	; (9001dd0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001dccc:	f008 f9b4 	bl	90026038 <__aeabi_atexit>
9001dcd0:	4c0f      	ldr	r4, [pc, #60]	; (9001dd10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001dcd2:	7823      	ldrb	r3, [r4, #0]
9001dcd4:	f3bf 8f5b 	dmb	ish
9001dcd8:	07db      	lsls	r3, r3, #31
9001dcda:	d40b      	bmi.n	9001dcf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001dcdc:	4620      	mov	r0, r4
9001dcde:	f008 f9b2 	bl	90026046 <__cxa_guard_acquire>
9001dce2:	b138      	cbz	r0, 9001dcf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001dce4:	4620      	mov	r0, r4
9001dce6:	f008 f9ba 	bl	9002605e <__cxa_guard_release>
9001dcea:	4a06      	ldr	r2, [pc, #24]	; (9001dd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001dcec:	4909      	ldr	r1, [pc, #36]	; (9001dd14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001dcee:	480a      	ldr	r0, [pc, #40]	; (9001dd18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001dcf0:	f008 f9a2 	bl	90026038 <__aeabi_atexit>
9001dcf4:	4b05      	ldr	r3, [pc, #20]	; (9001dd0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001dcf6:	61eb      	str	r3, [r5, #28]
9001dcf8:	4b07      	ldr	r3, [pc, #28]	; (9001dd18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001dcfa:	622b      	str	r3, [r5, #32]
9001dcfc:	bd38      	pop	{r3, r4, r5, pc}
9001dcfe:	bf00      	nop
9001dd00:	2402362c 	.word	0x2402362c
9001dd04:	24000000 	.word	0x24000000
9001dd08:	9001a917 	.word	0x9001a917
9001dd0c:	240000a0 	.word	0x240000a0
9001dd10:	24023630 	.word	0x24023630
9001dd14:	9001a915 	.word	0x9001a915
9001dd18:	240000a4 	.word	0x240000a4

9001dd1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001dd1c:	b510      	push	{r4, lr}
9001dd1e:	4604      	mov	r4, r0
9001dd20:	f7ff ff88 	bl	9001dc34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001dd24:	4620      	mov	r0, r4
9001dd26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dd2a:	f7ff bfbd 	b.w	9001dca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001dd30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001dd30:	b538      	push	{r3, r4, r5, lr}
9001dd32:	4c15      	ldr	r4, [pc, #84]	; (9001dd88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001dd34:	4605      	mov	r5, r0
9001dd36:	7823      	ldrb	r3, [r4, #0]
9001dd38:	f3bf 8f5b 	dmb	ish
9001dd3c:	07da      	lsls	r2, r3, #31
9001dd3e:	d40b      	bmi.n	9001dd58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001dd40:	4620      	mov	r0, r4
9001dd42:	f008 f980 	bl	90026046 <__cxa_guard_acquire>
9001dd46:	b138      	cbz	r0, 9001dd58 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001dd48:	4620      	mov	r0, r4
9001dd4a:	f008 f988 	bl	9002605e <__cxa_guard_release>
9001dd4e:	4a0f      	ldr	r2, [pc, #60]	; (9001dd8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dd50:	490f      	ldr	r1, [pc, #60]	; (9001dd90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001dd52:	4810      	ldr	r0, [pc, #64]	; (9001dd94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001dd54:	f008 f970 	bl	90026038 <__aeabi_atexit>
9001dd58:	4c0f      	ldr	r4, [pc, #60]	; (9001dd98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001dd5a:	7823      	ldrb	r3, [r4, #0]
9001dd5c:	f3bf 8f5b 	dmb	ish
9001dd60:	07db      	lsls	r3, r3, #31
9001dd62:	d40b      	bmi.n	9001dd7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001dd64:	4620      	mov	r0, r4
9001dd66:	f008 f96e 	bl	90026046 <__cxa_guard_acquire>
9001dd6a:	b138      	cbz	r0, 9001dd7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001dd6c:	4620      	mov	r0, r4
9001dd6e:	f008 f976 	bl	9002605e <__cxa_guard_release>
9001dd72:	4a06      	ldr	r2, [pc, #24]	; (9001dd8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dd74:	4909      	ldr	r1, [pc, #36]	; (9001dd9c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001dd76:	480a      	ldr	r0, [pc, #40]	; (9001dda0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dd78:	f008 f95e 	bl	90026038 <__aeabi_atexit>
9001dd7c:	4b05      	ldr	r3, [pc, #20]	; (9001dd94 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001dd7e:	636b      	str	r3, [r5, #52]	; 0x34
9001dd80:	4b07      	ldr	r3, [pc, #28]	; (9001dda0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dd82:	63ab      	str	r3, [r5, #56]	; 0x38
9001dd84:	bd38      	pop	{r3, r4, r5, pc}
9001dd86:	bf00      	nop
9001dd88:	24023664 	.word	0x24023664
9001dd8c:	24000000 	.word	0x24000000
9001dd90:	9001a90b 	.word	0x9001a90b
9001dd94:	240000d8 	.word	0x240000d8
9001dd98:	24023668 	.word	0x24023668
9001dd9c:	9001a909 	.word	0x9001a909
9001dda0:	240000dc 	.word	0x240000dc

9001dda4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001dda4:	b538      	push	{r3, r4, r5, lr}
9001dda6:	4c15      	ldr	r4, [pc, #84]	; (9001ddfc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001dda8:	4605      	mov	r5, r0
9001ddaa:	7823      	ldrb	r3, [r4, #0]
9001ddac:	f3bf 8f5b 	dmb	ish
9001ddb0:	07da      	lsls	r2, r3, #31
9001ddb2:	d40b      	bmi.n	9001ddcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001ddb4:	4620      	mov	r0, r4
9001ddb6:	f008 f946 	bl	90026046 <__cxa_guard_acquire>
9001ddba:	b138      	cbz	r0, 9001ddcc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001ddbc:	4620      	mov	r0, r4
9001ddbe:	f008 f94e 	bl	9002605e <__cxa_guard_release>
9001ddc2:	4a0f      	ldr	r2, [pc, #60]	; (9001de00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001ddc4:	490f      	ldr	r1, [pc, #60]	; (9001de04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001ddc6:	4810      	ldr	r0, [pc, #64]	; (9001de08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001ddc8:	f008 f936 	bl	90026038 <__aeabi_atexit>
9001ddcc:	4c0f      	ldr	r4, [pc, #60]	; (9001de0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001ddce:	7823      	ldrb	r3, [r4, #0]
9001ddd0:	f3bf 8f5b 	dmb	ish
9001ddd4:	07db      	lsls	r3, r3, #31
9001ddd6:	d40b      	bmi.n	9001ddf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001ddd8:	4620      	mov	r0, r4
9001ddda:	f008 f934 	bl	90026046 <__cxa_guard_acquire>
9001ddde:	b138      	cbz	r0, 9001ddf0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001dde0:	4620      	mov	r0, r4
9001dde2:	f008 f93c 	bl	9002605e <__cxa_guard_release>
9001dde6:	4a06      	ldr	r2, [pc, #24]	; (9001de00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001dde8:	4909      	ldr	r1, [pc, #36]	; (9001de10 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001ddea:	480a      	ldr	r0, [pc, #40]	; (9001de14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001ddec:	f008 f924 	bl	90026038 <__aeabi_atexit>
9001ddf0:	4b05      	ldr	r3, [pc, #20]	; (9001de08 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001ddf2:	62eb      	str	r3, [r5, #44]	; 0x2c
9001ddf4:	4b07      	ldr	r3, [pc, #28]	; (9001de14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001ddf6:	632b      	str	r3, [r5, #48]	; 0x30
9001ddf8:	bd38      	pop	{r3, r4, r5, pc}
9001ddfa:	bf00      	nop
9001ddfc:	24023634 	.word	0x24023634
9001de00:	24000000 	.word	0x24000000
9001de04:	9001a90f 	.word	0x9001a90f
9001de08:	240000a8 	.word	0x240000a8
9001de0c:	24023638 	.word	0x24023638
9001de10:	9001a90d 	.word	0x9001a90d
9001de14:	240000ac 	.word	0x240000ac

9001de18 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001de18:	b510      	push	{r4, lr}
9001de1a:	4604      	mov	r4, r0
9001de1c:	f7ff ff88 	bl	9001dd30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001de20:	4620      	mov	r0, r4
9001de22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001de26:	f7ff bfbd 	b.w	9001dda4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001de2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001de2c:	b538      	push	{r3, r4, r5, lr}
9001de2e:	4c15      	ldr	r4, [pc, #84]	; (9001de84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001de30:	4605      	mov	r5, r0
9001de32:	7823      	ldrb	r3, [r4, #0]
9001de34:	f3bf 8f5b 	dmb	ish
9001de38:	07da      	lsls	r2, r3, #31
9001de3a:	d40b      	bmi.n	9001de54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001de3c:	4620      	mov	r0, r4
9001de3e:	f008 f902 	bl	90026046 <__cxa_guard_acquire>
9001de42:	b138      	cbz	r0, 9001de54 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001de44:	4620      	mov	r0, r4
9001de46:	f008 f90a 	bl	9002605e <__cxa_guard_release>
9001de4a:	4a0f      	ldr	r2, [pc, #60]	; (9001de88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001de4c:	490f      	ldr	r1, [pc, #60]	; (9001de8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001de4e:	4810      	ldr	r0, [pc, #64]	; (9001de90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001de50:	f008 f8f2 	bl	90026038 <__aeabi_atexit>
9001de54:	4c0f      	ldr	r4, [pc, #60]	; (9001de94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001de56:	7823      	ldrb	r3, [r4, #0]
9001de58:	f3bf 8f5b 	dmb	ish
9001de5c:	07db      	lsls	r3, r3, #31
9001de5e:	d40b      	bmi.n	9001de78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001de60:	4620      	mov	r0, r4
9001de62:	f008 f8f0 	bl	90026046 <__cxa_guard_acquire>
9001de66:	b138      	cbz	r0, 9001de78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001de68:	4620      	mov	r0, r4
9001de6a:	f008 f8f8 	bl	9002605e <__cxa_guard_release>
9001de6e:	4a06      	ldr	r2, [pc, #24]	; (9001de88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001de70:	4909      	ldr	r1, [pc, #36]	; (9001de98 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001de72:	480a      	ldr	r0, [pc, #40]	; (9001de9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001de74:	f008 f8e0 	bl	90026038 <__aeabi_atexit>
9001de78:	4b05      	ldr	r3, [pc, #20]	; (9001de90 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001de7a:	656b      	str	r3, [r5, #84]	; 0x54
9001de7c:	4b07      	ldr	r3, [pc, #28]	; (9001de9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001de7e:	65ab      	str	r3, [r5, #88]	; 0x58
9001de80:	bd38      	pop	{r3, r4, r5, pc}
9001de82:	bf00      	nop
9001de84:	2402366c 	.word	0x2402366c
9001de88:	24000000 	.word	0x24000000
9001de8c:	9001a8fb 	.word	0x9001a8fb
9001de90:	240000e0 	.word	0x240000e0
9001de94:	24023670 	.word	0x24023670
9001de98:	9001a8f9 	.word	0x9001a8f9
9001de9c:	240000e4 	.word	0x240000e4

9001dea0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001dea0:	b538      	push	{r3, r4, r5, lr}
9001dea2:	4c15      	ldr	r4, [pc, #84]	; (9001def8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001dea4:	4605      	mov	r5, r0
9001dea6:	7823      	ldrb	r3, [r4, #0]
9001dea8:	f3bf 8f5b 	dmb	ish
9001deac:	07da      	lsls	r2, r3, #31
9001deae:	d40b      	bmi.n	9001dec8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001deb0:	4620      	mov	r0, r4
9001deb2:	f008 f8c8 	bl	90026046 <__cxa_guard_acquire>
9001deb6:	b138      	cbz	r0, 9001dec8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001deb8:	4620      	mov	r0, r4
9001deba:	f008 f8d0 	bl	9002605e <__cxa_guard_release>
9001debe:	4a0f      	ldr	r2, [pc, #60]	; (9001defc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001dec0:	490f      	ldr	r1, [pc, #60]	; (9001df00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001dec2:	4810      	ldr	r0, [pc, #64]	; (9001df04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001dec4:	f008 f8b8 	bl	90026038 <__aeabi_atexit>
9001dec8:	4c0f      	ldr	r4, [pc, #60]	; (9001df08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001deca:	7823      	ldrb	r3, [r4, #0]
9001decc:	f3bf 8f5b 	dmb	ish
9001ded0:	07db      	lsls	r3, r3, #31
9001ded2:	d40b      	bmi.n	9001deec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001ded4:	4620      	mov	r0, r4
9001ded6:	f008 f8b6 	bl	90026046 <__cxa_guard_acquire>
9001deda:	b138      	cbz	r0, 9001deec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001dedc:	4620      	mov	r0, r4
9001dede:	f008 f8be 	bl	9002605e <__cxa_guard_release>
9001dee2:	4a06      	ldr	r2, [pc, #24]	; (9001defc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001dee4:	4909      	ldr	r1, [pc, #36]	; (9001df0c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001dee6:	480a      	ldr	r0, [pc, #40]	; (9001df10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001dee8:	f008 f8a6 	bl	90026038 <__aeabi_atexit>
9001deec:	4b05      	ldr	r3, [pc, #20]	; (9001df04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001deee:	64eb      	str	r3, [r5, #76]	; 0x4c
9001def0:	4b07      	ldr	r3, [pc, #28]	; (9001df10 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001def2:	652b      	str	r3, [r5, #80]	; 0x50
9001def4:	bd38      	pop	{r3, r4, r5, pc}
9001def6:	bf00      	nop
9001def8:	24023674 	.word	0x24023674
9001defc:	24000000 	.word	0x24000000
9001df00:	9001a8ff 	.word	0x9001a8ff
9001df04:	240000e8 	.word	0x240000e8
9001df08:	24023678 	.word	0x24023678
9001df0c:	9001a8fd 	.word	0x9001a8fd
9001df10:	240000ec 	.word	0x240000ec

9001df14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001df14:	b538      	push	{r3, r4, r5, lr}
9001df16:	4c15      	ldr	r4, [pc, #84]	; (9001df6c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001df18:	4605      	mov	r5, r0
9001df1a:	7823      	ldrb	r3, [r4, #0]
9001df1c:	f3bf 8f5b 	dmb	ish
9001df20:	07da      	lsls	r2, r3, #31
9001df22:	d40b      	bmi.n	9001df3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001df24:	4620      	mov	r0, r4
9001df26:	f008 f88e 	bl	90026046 <__cxa_guard_acquire>
9001df2a:	b138      	cbz	r0, 9001df3c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001df2c:	4620      	mov	r0, r4
9001df2e:	f008 f896 	bl	9002605e <__cxa_guard_release>
9001df32:	4a0f      	ldr	r2, [pc, #60]	; (9001df70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001df34:	490f      	ldr	r1, [pc, #60]	; (9001df74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001df36:	4810      	ldr	r0, [pc, #64]	; (9001df78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001df38:	f008 f87e 	bl	90026038 <__aeabi_atexit>
9001df3c:	4c0f      	ldr	r4, [pc, #60]	; (9001df7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001df3e:	7823      	ldrb	r3, [r4, #0]
9001df40:	f3bf 8f5b 	dmb	ish
9001df44:	07db      	lsls	r3, r3, #31
9001df46:	d40b      	bmi.n	9001df60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001df48:	4620      	mov	r0, r4
9001df4a:	f008 f87c 	bl	90026046 <__cxa_guard_acquire>
9001df4e:	b138      	cbz	r0, 9001df60 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001df50:	4620      	mov	r0, r4
9001df52:	f008 f884 	bl	9002605e <__cxa_guard_release>
9001df56:	4a06      	ldr	r2, [pc, #24]	; (9001df70 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001df58:	4909      	ldr	r1, [pc, #36]	; (9001df80 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001df5a:	480a      	ldr	r0, [pc, #40]	; (9001df84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001df5c:	f008 f86c 	bl	90026038 <__aeabi_atexit>
9001df60:	4b05      	ldr	r3, [pc, #20]	; (9001df78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001df62:	646b      	str	r3, [r5, #68]	; 0x44
9001df64:	4b07      	ldr	r3, [pc, #28]	; (9001df84 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001df66:	64ab      	str	r3, [r5, #72]	; 0x48
9001df68:	bd38      	pop	{r3, r4, r5, pc}
9001df6a:	bf00      	nop
9001df6c:	2402363c 	.word	0x2402363c
9001df70:	24000000 	.word	0x24000000
9001df74:	9001a903 	.word	0x9001a903
9001df78:	240000b0 	.word	0x240000b0
9001df7c:	24023640 	.word	0x24023640
9001df80:	9001a901 	.word	0x9001a901
9001df84:	240000b4 	.word	0x240000b4

9001df88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001df88:	b538      	push	{r3, r4, r5, lr}
9001df8a:	4c15      	ldr	r4, [pc, #84]	; (9001dfe0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001df8c:	4605      	mov	r5, r0
9001df8e:	7823      	ldrb	r3, [r4, #0]
9001df90:	f3bf 8f5b 	dmb	ish
9001df94:	07da      	lsls	r2, r3, #31
9001df96:	d40b      	bmi.n	9001dfb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001df98:	4620      	mov	r0, r4
9001df9a:	f008 f854 	bl	90026046 <__cxa_guard_acquire>
9001df9e:	b138      	cbz	r0, 9001dfb0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001dfa0:	4620      	mov	r0, r4
9001dfa2:	f008 f85c 	bl	9002605e <__cxa_guard_release>
9001dfa6:	4a0f      	ldr	r2, [pc, #60]	; (9001dfe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001dfa8:	490f      	ldr	r1, [pc, #60]	; (9001dfe8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001dfaa:	4810      	ldr	r0, [pc, #64]	; (9001dfec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001dfac:	f008 f844 	bl	90026038 <__aeabi_atexit>
9001dfb0:	4c0f      	ldr	r4, [pc, #60]	; (9001dff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001dfb2:	7823      	ldrb	r3, [r4, #0]
9001dfb4:	f3bf 8f5b 	dmb	ish
9001dfb8:	07db      	lsls	r3, r3, #31
9001dfba:	d40b      	bmi.n	9001dfd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001dfbc:	4620      	mov	r0, r4
9001dfbe:	f008 f842 	bl	90026046 <__cxa_guard_acquire>
9001dfc2:	b138      	cbz	r0, 9001dfd4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001dfc4:	4620      	mov	r0, r4
9001dfc6:	f008 f84a 	bl	9002605e <__cxa_guard_release>
9001dfca:	4a06      	ldr	r2, [pc, #24]	; (9001dfe4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001dfcc:	4909      	ldr	r1, [pc, #36]	; (9001dff4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001dfce:	480a      	ldr	r0, [pc, #40]	; (9001dff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001dfd0:	f008 f832 	bl	90026038 <__aeabi_atexit>
9001dfd4:	4b05      	ldr	r3, [pc, #20]	; (9001dfec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001dfd6:	63eb      	str	r3, [r5, #60]	; 0x3c
9001dfd8:	4b07      	ldr	r3, [pc, #28]	; (9001dff8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001dfda:	642b      	str	r3, [r5, #64]	; 0x40
9001dfdc:	bd38      	pop	{r3, r4, r5, pc}
9001dfde:	bf00      	nop
9001dfe0:	2402365c 	.word	0x2402365c
9001dfe4:	24000000 	.word	0x24000000
9001dfe8:	9001a907 	.word	0x9001a907
9001dfec:	240000d0 	.word	0x240000d0
9001dff0:	24023660 	.word	0x24023660
9001dff4:	9001a905 	.word	0x9001a905
9001dff8:	240000d4 	.word	0x240000d4

9001dffc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001dffc:	b510      	push	{r4, lr}
9001dffe:	4604      	mov	r4, r0
9001e000:	f7ff ff14 	bl	9001de2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001e004:	4620      	mov	r0, r4
9001e006:	f7ff ff85 	bl	9001df14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001e00a:	4620      	mov	r0, r4
9001e00c:	f7ff ff48 	bl	9001dea0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001e010:	4620      	mov	r0, r4
9001e012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e016:	f7ff bfb7 	b.w	9001df88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001e01c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001e01c:	b538      	push	{r3, r4, r5, lr}
9001e01e:	4c15      	ldr	r4, [pc, #84]	; (9001e074 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001e020:	4605      	mov	r5, r0
9001e022:	7823      	ldrb	r3, [r4, #0]
9001e024:	f3bf 8f5b 	dmb	ish
9001e028:	07da      	lsls	r2, r3, #31
9001e02a:	d40b      	bmi.n	9001e044 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e02c:	4620      	mov	r0, r4
9001e02e:	f008 f80a 	bl	90026046 <__cxa_guard_acquire>
9001e032:	b138      	cbz	r0, 9001e044 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e034:	4620      	mov	r0, r4
9001e036:	f008 f812 	bl	9002605e <__cxa_guard_release>
9001e03a:	4a0f      	ldr	r2, [pc, #60]	; (9001e078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e03c:	490f      	ldr	r1, [pc, #60]	; (9001e07c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001e03e:	4810      	ldr	r0, [pc, #64]	; (9001e080 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e040:	f007 fffa 	bl	90026038 <__aeabi_atexit>
9001e044:	4c0f      	ldr	r4, [pc, #60]	; (9001e084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001e046:	7823      	ldrb	r3, [r4, #0]
9001e048:	f3bf 8f5b 	dmb	ish
9001e04c:	07db      	lsls	r3, r3, #31
9001e04e:	d40b      	bmi.n	9001e068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e050:	4620      	mov	r0, r4
9001e052:	f007 fff8 	bl	90026046 <__cxa_guard_acquire>
9001e056:	b138      	cbz	r0, 9001e068 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e058:	4620      	mov	r0, r4
9001e05a:	f008 f800 	bl	9002605e <__cxa_guard_release>
9001e05e:	4a06      	ldr	r2, [pc, #24]	; (9001e078 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e060:	4909      	ldr	r1, [pc, #36]	; (9001e088 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001e062:	480a      	ldr	r0, [pc, #40]	; (9001e08c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e064:	f007 ffe8 	bl	90026038 <__aeabi_atexit>
9001e068:	4b05      	ldr	r3, [pc, #20]	; (9001e080 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e06a:	666b      	str	r3, [r5, #100]	; 0x64
9001e06c:	4b07      	ldr	r3, [pc, #28]	; (9001e08c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e06e:	66ab      	str	r3, [r5, #104]	; 0x68
9001e070:	bd38      	pop	{r3, r4, r5, pc}
9001e072:	bf00      	nop
9001e074:	24023644 	.word	0x24023644
9001e078:	24000000 	.word	0x24000000
9001e07c:	9001a8f3 	.word	0x9001a8f3
9001e080:	240000b8 	.word	0x240000b8
9001e084:	24023648 	.word	0x24023648
9001e088:	9001a8f1 	.word	0x9001a8f1
9001e08c:	240000bc 	.word	0x240000bc

9001e090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001e090:	b538      	push	{r3, r4, r5, lr}
9001e092:	4c15      	ldr	r4, [pc, #84]	; (9001e0e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001e094:	4605      	mov	r5, r0
9001e096:	7823      	ldrb	r3, [r4, #0]
9001e098:	f3bf 8f5b 	dmb	ish
9001e09c:	07da      	lsls	r2, r3, #31
9001e09e:	d40b      	bmi.n	9001e0b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e0a0:	4620      	mov	r0, r4
9001e0a2:	f007 ffd0 	bl	90026046 <__cxa_guard_acquire>
9001e0a6:	b138      	cbz	r0, 9001e0b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e0a8:	4620      	mov	r0, r4
9001e0aa:	f007 ffd8 	bl	9002605e <__cxa_guard_release>
9001e0ae:	4a0f      	ldr	r2, [pc, #60]	; (9001e0ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e0b0:	490f      	ldr	r1, [pc, #60]	; (9001e0f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001e0b2:	4810      	ldr	r0, [pc, #64]	; (9001e0f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e0b4:	f007 ffc0 	bl	90026038 <__aeabi_atexit>
9001e0b8:	4c0f      	ldr	r4, [pc, #60]	; (9001e0f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001e0ba:	7823      	ldrb	r3, [r4, #0]
9001e0bc:	f3bf 8f5b 	dmb	ish
9001e0c0:	07db      	lsls	r3, r3, #31
9001e0c2:	d40b      	bmi.n	9001e0dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e0c4:	4620      	mov	r0, r4
9001e0c6:	f007 ffbe 	bl	90026046 <__cxa_guard_acquire>
9001e0ca:	b138      	cbz	r0, 9001e0dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e0cc:	4620      	mov	r0, r4
9001e0ce:	f007 ffc6 	bl	9002605e <__cxa_guard_release>
9001e0d2:	4a06      	ldr	r2, [pc, #24]	; (9001e0ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e0d4:	4909      	ldr	r1, [pc, #36]	; (9001e0fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001e0d6:	480a      	ldr	r0, [pc, #40]	; (9001e100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e0d8:	f007 ffae 	bl	90026038 <__aeabi_atexit>
9001e0dc:	4b05      	ldr	r3, [pc, #20]	; (9001e0f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e0de:	65eb      	str	r3, [r5, #92]	; 0x5c
9001e0e0:	4b07      	ldr	r3, [pc, #28]	; (9001e100 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e0e2:	662b      	str	r3, [r5, #96]	; 0x60
9001e0e4:	bd38      	pop	{r3, r4, r5, pc}
9001e0e6:	bf00      	nop
9001e0e8:	2402361c 	.word	0x2402361c
9001e0ec:	24000000 	.word	0x24000000
9001e0f0:	9001a8f7 	.word	0x9001a8f7
9001e0f4:	24000090 	.word	0x24000090
9001e0f8:	24023620 	.word	0x24023620
9001e0fc:	9001a8f5 	.word	0x9001a8f5
9001e100:	24000094 	.word	0x24000094

9001e104 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001e104:	b510      	push	{r4, lr}
9001e106:	4604      	mov	r4, r0
9001e108:	f7ff ff88 	bl	9001e01c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001e10c:	4620      	mov	r0, r4
9001e10e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e112:	f7ff bfbd 	b.w	9001e090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001e118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001e118:	b538      	push	{r3, r4, r5, lr}
9001e11a:	4c15      	ldr	r4, [pc, #84]	; (9001e170 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001e11c:	4605      	mov	r5, r0
9001e11e:	7823      	ldrb	r3, [r4, #0]
9001e120:	f3bf 8f5b 	dmb	ish
9001e124:	07da      	lsls	r2, r3, #31
9001e126:	d40b      	bmi.n	9001e140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e128:	4620      	mov	r0, r4
9001e12a:	f007 ff8c 	bl	90026046 <__cxa_guard_acquire>
9001e12e:	b138      	cbz	r0, 9001e140 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e130:	4620      	mov	r0, r4
9001e132:	f007 ff94 	bl	9002605e <__cxa_guard_release>
9001e136:	4a0f      	ldr	r2, [pc, #60]	; (9001e174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e138:	490f      	ldr	r1, [pc, #60]	; (9001e178 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001e13a:	4810      	ldr	r0, [pc, #64]	; (9001e17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e13c:	f007 ff7c 	bl	90026038 <__aeabi_atexit>
9001e140:	4c0f      	ldr	r4, [pc, #60]	; (9001e180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001e142:	7823      	ldrb	r3, [r4, #0]
9001e144:	f3bf 8f5b 	dmb	ish
9001e148:	07db      	lsls	r3, r3, #31
9001e14a:	d40b      	bmi.n	9001e164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e14c:	4620      	mov	r0, r4
9001e14e:	f007 ff7a 	bl	90026046 <__cxa_guard_acquire>
9001e152:	b138      	cbz	r0, 9001e164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e154:	4620      	mov	r0, r4
9001e156:	f007 ff82 	bl	9002605e <__cxa_guard_release>
9001e15a:	4a06      	ldr	r2, [pc, #24]	; (9001e174 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e15c:	4909      	ldr	r1, [pc, #36]	; (9001e184 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001e15e:	480a      	ldr	r0, [pc, #40]	; (9001e188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e160:	f007 ff6a 	bl	90026038 <__aeabi_atexit>
9001e164:	4b05      	ldr	r3, [pc, #20]	; (9001e17c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e166:	676b      	str	r3, [r5, #116]	; 0x74
9001e168:	4b07      	ldr	r3, [pc, #28]	; (9001e188 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e16a:	67ab      	str	r3, [r5, #120]	; 0x78
9001e16c:	bd38      	pop	{r3, r4, r5, pc}
9001e16e:	bf00      	nop
9001e170:	24023614 	.word	0x24023614
9001e174:	24000000 	.word	0x24000000
9001e178:	9001a8eb 	.word	0x9001a8eb
9001e17c:	24000088 	.word	0x24000088
9001e180:	24023618 	.word	0x24023618
9001e184:	9001a8e9 	.word	0x9001a8e9
9001e188:	2400008c 	.word	0x2400008c

9001e18c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001e18c:	b538      	push	{r3, r4, r5, lr}
9001e18e:	4c15      	ldr	r4, [pc, #84]	; (9001e1e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001e190:	4605      	mov	r5, r0
9001e192:	7823      	ldrb	r3, [r4, #0]
9001e194:	f3bf 8f5b 	dmb	ish
9001e198:	07da      	lsls	r2, r3, #31
9001e19a:	d40b      	bmi.n	9001e1b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e19c:	4620      	mov	r0, r4
9001e19e:	f007 ff52 	bl	90026046 <__cxa_guard_acquire>
9001e1a2:	b138      	cbz	r0, 9001e1b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e1a4:	4620      	mov	r0, r4
9001e1a6:	f007 ff5a 	bl	9002605e <__cxa_guard_release>
9001e1aa:	4a0f      	ldr	r2, [pc, #60]	; (9001e1e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e1ac:	490f      	ldr	r1, [pc, #60]	; (9001e1ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001e1ae:	4810      	ldr	r0, [pc, #64]	; (9001e1f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e1b0:	f007 ff42 	bl	90026038 <__aeabi_atexit>
9001e1b4:	4c0f      	ldr	r4, [pc, #60]	; (9001e1f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001e1b6:	7823      	ldrb	r3, [r4, #0]
9001e1b8:	f3bf 8f5b 	dmb	ish
9001e1bc:	07db      	lsls	r3, r3, #31
9001e1be:	d40b      	bmi.n	9001e1d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e1c0:	4620      	mov	r0, r4
9001e1c2:	f007 ff40 	bl	90026046 <__cxa_guard_acquire>
9001e1c6:	b138      	cbz	r0, 9001e1d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e1c8:	4620      	mov	r0, r4
9001e1ca:	f007 ff48 	bl	9002605e <__cxa_guard_release>
9001e1ce:	4a06      	ldr	r2, [pc, #24]	; (9001e1e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e1d0:	4909      	ldr	r1, [pc, #36]	; (9001e1f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001e1d2:	480a      	ldr	r0, [pc, #40]	; (9001e1fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e1d4:	f007 ff30 	bl	90026038 <__aeabi_atexit>
9001e1d8:	4b05      	ldr	r3, [pc, #20]	; (9001e1f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e1da:	66eb      	str	r3, [r5, #108]	; 0x6c
9001e1dc:	4b07      	ldr	r3, [pc, #28]	; (9001e1fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e1de:	672b      	str	r3, [r5, #112]	; 0x70
9001e1e0:	bd38      	pop	{r3, r4, r5, pc}
9001e1e2:	bf00      	nop
9001e1e4:	2402360c 	.word	0x2402360c
9001e1e8:	24000000 	.word	0x24000000
9001e1ec:	9001a8ef 	.word	0x9001a8ef
9001e1f0:	24000080 	.word	0x24000080
9001e1f4:	24023610 	.word	0x24023610
9001e1f8:	9001a8ed 	.word	0x9001a8ed
9001e1fc:	24000084 	.word	0x24000084

9001e200 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001e200:	b510      	push	{r4, lr}
9001e202:	4604      	mov	r4, r0
9001e204:	f7ff ff88 	bl	9001e118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001e208:	4620      	mov	r0, r4
9001e20a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e20e:	f7ff bfbd 	b.w	9001e18c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001e212 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001e212:	b510      	push	{r4, lr}
9001e214:	4604      	mov	r4, r0
9001e216:	f7ff fff3 	bl	9001e200 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001e21a:	4620      	mov	r0, r4
9001e21c:	f7ff ff72 	bl	9001e104 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001e220:	4620      	mov	r0, r4
9001e222:	f7ff fdf9 	bl	9001de18 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001e226:	4620      	mov	r0, r4
9001e228:	f7ff fcfa 	bl	9001dc20 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001e22c:	4620      	mov	r0, r4
9001e22e:	f7ff fd75 	bl	9001dd1c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001e232:	4620      	mov	r0, r4
9001e234:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e238:	f7ff bee0 	b.w	9001dffc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001e23c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001e23c:	b538      	push	{r3, r4, r5, lr}
9001e23e:	4c0b      	ldr	r4, [pc, #44]	; (9001e26c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001e240:	4605      	mov	r5, r0
9001e242:	7823      	ldrb	r3, [r4, #0]
9001e244:	f3bf 8f5b 	dmb	ish
9001e248:	07db      	lsls	r3, r3, #31
9001e24a:	d40b      	bmi.n	9001e264 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e24c:	4620      	mov	r0, r4
9001e24e:	f007 fefa 	bl	90026046 <__cxa_guard_acquire>
9001e252:	b138      	cbz	r0, 9001e264 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e254:	4620      	mov	r0, r4
9001e256:	f007 ff02 	bl	9002605e <__cxa_guard_release>
9001e25a:	4a05      	ldr	r2, [pc, #20]	; (9001e270 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001e25c:	4905      	ldr	r1, [pc, #20]	; (9001e274 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001e25e:	4806      	ldr	r0, [pc, #24]	; (9001e278 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e260:	f007 feea 	bl	90026038 <__aeabi_atexit>
9001e264:	4b04      	ldr	r3, [pc, #16]	; (9001e278 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e266:	67eb      	str	r3, [r5, #124]	; 0x7c
9001e268:	bd38      	pop	{r3, r4, r5, pc}
9001e26a:	bf00      	nop
9001e26c:	24023600 	.word	0x24023600
9001e270:	24000000 	.word	0x24000000
9001e274:	9001a8e7 	.word	0x9001a8e7
9001e278:	24000078 	.word	0x24000078

9001e27c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001e27c:	b538      	push	{r3, r4, r5, lr}
9001e27e:	4c0b      	ldr	r4, [pc, #44]	; (9001e2ac <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001e280:	4605      	mov	r5, r0
9001e282:	7823      	ldrb	r3, [r4, #0]
9001e284:	f3bf 8f5b 	dmb	ish
9001e288:	07db      	lsls	r3, r3, #31
9001e28a:	d40b      	bmi.n	9001e2a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e28c:	4620      	mov	r0, r4
9001e28e:	f007 feda 	bl	90026046 <__cxa_guard_acquire>
9001e292:	b138      	cbz	r0, 9001e2a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e294:	4620      	mov	r0, r4
9001e296:	f007 fee2 	bl	9002605e <__cxa_guard_release>
9001e29a:	4a05      	ldr	r2, [pc, #20]	; (9001e2b0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001e29c:	4905      	ldr	r1, [pc, #20]	; (9001e2b4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001e29e:	4806      	ldr	r0, [pc, #24]	; (9001e2b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e2a0:	f007 feca 	bl	90026038 <__aeabi_atexit>
9001e2a4:	4b04      	ldr	r3, [pc, #16]	; (9001e2b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e2a6:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
9001e2aa:	bd38      	pop	{r3, r4, r5, pc}
9001e2ac:	24023604 	.word	0x24023604
9001e2b0:	24000000 	.word	0x24000000
9001e2b4:	9001a8e5 	.word	0x9001a8e5
9001e2b8:	2400007c 	.word	0x2400007c

9001e2bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001e2bc:	b570      	push	{r4, r5, r6, lr}
9001e2be:	4d0d      	ldr	r5, [pc, #52]	; (9001e2f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001e2c0:	4606      	mov	r6, r0
9001e2c2:	4c0d      	ldr	r4, [pc, #52]	; (9001e2f8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001e2c4:	782b      	ldrb	r3, [r5, #0]
9001e2c6:	f3bf 8f5b 	dmb	ish
9001e2ca:	f013 0f01 	tst.w	r3, #1
9001e2ce:	d10d      	bne.n	9001e2ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e2d0:	4628      	mov	r0, r5
9001e2d2:	f007 feb8 	bl	90026046 <__cxa_guard_acquire>
9001e2d6:	b148      	cbz	r0, 9001e2ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e2d8:	4b08      	ldr	r3, [pc, #32]	; (9001e2fc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001e2da:	4628      	mov	r0, r5
9001e2dc:	6023      	str	r3, [r4, #0]
9001e2de:	f007 febe 	bl	9002605e <__cxa_guard_release>
9001e2e2:	4a07      	ldr	r2, [pc, #28]	; (9001e300 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001e2e4:	4620      	mov	r0, r4
9001e2e6:	4907      	ldr	r1, [pc, #28]	; (9001e304 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001e2e8:	f007 fea6 	bl	90026038 <__aeabi_atexit>
9001e2ec:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
9001e2f0:	bd70      	pop	{r4, r5, r6, pc}
9001e2f2:	bf00      	nop
9001e2f4:	24023608 	.word	0x24023608
9001e2f8:	2402367c 	.word	0x2402367c
9001e2fc:	9002a6cc 	.word	0x9002a6cc
9001e300:	24000000 	.word	0x24000000
9001e304:	9001a8e3 	.word	0x9001a8e3

9001e308 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001e308:	b510      	push	{r4, lr}
9001e30a:	4604      	mov	r4, r0
9001e30c:	f7ff ff96 	bl	9001e23c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001e310:	4620      	mov	r0, r4
9001e312:	f7ff ffb3 	bl	9001e27c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001e316:	4620      	mov	r0, r4
9001e318:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e31c:	f7ff bfce 	b.w	9001e2bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001e320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001e320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e324:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001e328:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001e32c:	2d00      	cmp	r5, #0
9001e32e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001e332:	fb05 4c0e 	mla	ip, r5, lr, r4
9001e336:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001e33a:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001e33e:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001e342:	eb02 0a0c 	add.w	sl, r2, ip
9001e346:	8808      	ldrh	r0, [r1, #0]
9001e348:	f2c0 80b0 	blt.w	9001e4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e34c:	45ab      	cmp	fp, r5
9001e34e:	f340 80ad 	ble.w	9001e4ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e352:	2c00      	cmp	r4, #0
9001e354:	f2c0 80a8 	blt.w	9001e4a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e358:	45a6      	cmp	lr, r4
9001e35a:	f340 80a5 	ble.w	9001e4a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e35e:	f812 200c 	ldrb.w	r2, [r2, ip]
9001e362:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001e366:	1c62      	adds	r2, r4, #1
9001e368:	f100 80a3 	bmi.w	9001e4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e36c:	4596      	cmp	lr, r2
9001e36e:	f340 80a0 	ble.w	9001e4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e372:	f1b9 0f00 	cmp.w	r9, #0
9001e376:	f000 809c 	beq.w	9001e4b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e37a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e37e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e382:	3501      	adds	r5, #1
9001e384:	f100 8099 	bmi.w	9001e4ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e388:	45ab      	cmp	fp, r5
9001e38a:	f340 8096 	ble.w	9001e4ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e38e:	2f00      	cmp	r7, #0
9001e390:	f000 8093 	beq.w	9001e4ba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e394:	2c00      	cmp	r4, #0
9001e396:	f2c0 808e 	blt.w	9001e4b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e39a:	45a6      	cmp	lr, r4
9001e39c:	f340 808b 	ble.w	9001e4b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e3a0:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001e3a4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001e3a8:	3401      	adds	r4, #1
9001e3aa:	f100 8089 	bmi.w	9001e4c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e3ae:	45a6      	cmp	lr, r4
9001e3b0:	f340 8086 	ble.w	9001e4c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e3b4:	f1b9 0f00 	cmp.w	r9, #0
9001e3b8:	f000 8082 	beq.w	9001e4c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e3bc:	44d6      	add	lr, sl
9001e3be:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001e3c2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001e3c6:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001e3ca:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001e3ce:	fb19 fe07 	smulbb	lr, r9, r7
9001e3d2:	f1c7 0210 	rsb	r2, r7, #16
9001e3d6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e3da:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001e3de:	eba2 0209 	sub.w	r2, r2, r9
9001e3e2:	ea44 0808 	orr.w	r8, r4, r8
9001e3e6:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001e3ea:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e3ee:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001e3f2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e3f6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001e3fa:	ea44 0c0c 	orr.w	ip, r4, ip
9001e3fe:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001e402:	fb04 f40c 	mul.w	r4, r4, ip
9001e406:	fb02 4808 	mla	r8, r2, r8, r4
9001e40a:	041a      	lsls	r2, r3, #16
9001e40c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e410:	b2b4      	uxth	r4, r6
9001e412:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e416:	43f6      	mvns	r6, r6
9001e418:	4313      	orrs	r3, r2
9001e41a:	042a      	lsls	r2, r5, #16
9001e41c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001e420:	b2f6      	uxtb	r6, r6
9001e422:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e426:	fb0e 8303 	mla	r3, lr, r3, r8
9001e42a:	432a      	orrs	r2, r5
9001e42c:	fb07 3202 	mla	r2, r7, r2, r3
9001e430:	10c7      	asrs	r7, r0, #3
9001e432:	0d53      	lsrs	r3, r2, #21
9001e434:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e438:	0952      	lsrs	r2, r2, #5
9001e43a:	fb17 f706 	smulbb	r7, r7, r6
9001e43e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e442:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e446:	431a      	orrs	r2, r3
9001e448:	b293      	uxth	r3, r2
9001e44a:	1202      	asrs	r2, r0, #8
9001e44c:	121d      	asrs	r5, r3, #8
9001e44e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e452:	00c0      	lsls	r0, r0, #3
9001e454:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e458:	fb12 f206 	smulbb	r2, r2, r6
9001e45c:	b2c0      	uxtb	r0, r0
9001e45e:	fb05 2504 	mla	r5, r5, r4, r2
9001e462:	10da      	asrs	r2, r3, #3
9001e464:	fb10 f006 	smulbb	r0, r0, r6
9001e468:	00db      	lsls	r3, r3, #3
9001e46a:	b2ad      	uxth	r5, r5
9001e46c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e470:	b2db      	uxtb	r3, r3
9001e472:	fb02 7204 	mla	r2, r2, r4, r7
9001e476:	fb03 0004 	mla	r0, r3, r4, r0
9001e47a:	1c6b      	adds	r3, r5, #1
9001e47c:	b292      	uxth	r2, r2
9001e47e:	b280      	uxth	r0, r0
9001e480:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001e484:	1c43      	adds	r3, r0, #1
9001e486:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e48a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001e48e:	1c50      	adds	r0, r2, #1
9001e490:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e494:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e498:	0952      	lsrs	r2, r2, #5
9001e49a:	432b      	orrs	r3, r5
9001e49c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e4a0:	4313      	orrs	r3, r2
9001e4a2:	800b      	strh	r3, [r1, #0]
9001e4a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e4a8:	4680      	mov	r8, r0
9001e4aa:	e75c      	b.n	9001e366 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001e4ac:	4684      	mov	ip, r0
9001e4ae:	4680      	mov	r8, r0
9001e4b0:	e767      	b.n	9001e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e4b2:	4684      	mov	ip, r0
9001e4b4:	e765      	b.n	9001e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e4b6:	4605      	mov	r5, r0
9001e4b8:	e776      	b.n	9001e3a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001e4ba:	4603      	mov	r3, r0
9001e4bc:	4605      	mov	r5, r0
9001e4be:	e782      	b.n	9001e3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001e4c0:	4603      	mov	r3, r0
9001e4c2:	e780      	b.n	9001e3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001e4c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e4c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e4c8:	b099      	sub	sp, #100	; 0x64
9001e4ca:	9215      	str	r2, [sp, #84]	; 0x54
9001e4cc:	9309      	str	r3, [sp, #36]	; 0x24
9001e4ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001e4d0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001e4d4:	9016      	str	r0, [sp, #88]	; 0x58
9001e4d6:	930d      	str	r3, [sp, #52]	; 0x34
9001e4d8:	6850      	ldr	r0, [r2, #4]
9001e4da:	910c      	str	r1, [sp, #48]	; 0x30
9001e4dc:	6812      	ldr	r2, [r2, #0]
9001e4de:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001e4e2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001e4e6:	fb00 1303 	mla	r3, r0, r3, r1
9001e4ea:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001e4ee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e4f0:	681b      	ldr	r3, [r3, #0]
9001e4f2:	930b      	str	r3, [sp, #44]	; 0x2c
9001e4f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e4f6:	685e      	ldr	r6, [r3, #4]
9001e4f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e4fa:	3604      	adds	r6, #4
9001e4fc:	43db      	mvns	r3, r3
9001e4fe:	b2db      	uxtb	r3, r3
9001e500:	930a      	str	r3, [sp, #40]	; 0x28
9001e502:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e504:	2b00      	cmp	r3, #0
9001e506:	dc03      	bgt.n	9001e510 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e508:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001e50a:	2b00      	cmp	r3, #0
9001e50c:	f340 8225 	ble.w	9001e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e510:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e512:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e516:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e51a:	1e48      	subs	r0, r1, #1
9001e51c:	1e57      	subs	r7, r2, #1
9001e51e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e520:	2b00      	cmp	r3, #0
9001e522:	f340 80e3 	ble.w	9001e6ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e526:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001e52a:	ea4f 4325 	mov.w	r3, r5, asr #16
9001e52e:	d406      	bmi.n	9001e53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e530:	4584      	cmp	ip, r0
9001e532:	da04      	bge.n	9001e53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e534:	2b00      	cmp	r3, #0
9001e536:	db02      	blt.n	9001e53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e538:	42bb      	cmp	r3, r7
9001e53a:	f2c0 80d8 	blt.w	9001e6ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e53e:	f11c 0c01 	adds.w	ip, ip, #1
9001e542:	f100 80c9 	bmi.w	9001e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e546:	4561      	cmp	r1, ip
9001e548:	f2c0 80c6 	blt.w	9001e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e54c:	3301      	adds	r3, #1
9001e54e:	f100 80c3 	bmi.w	9001e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e552:	429a      	cmp	r2, r3
9001e554:	f2c0 80c0 	blt.w	9001e6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e558:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001e55c:	4647      	mov	r7, r8
9001e55e:	f1bb 0f00 	cmp.w	fp, #0
9001e562:	f340 80e3 	ble.w	9001e72c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001e566:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001e568:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001e56c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e56e:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001e572:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e576:	ea5f 422a 	movs.w	r2, sl, asr #16
9001e57a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001e57e:	689b      	ldr	r3, [r3, #8]
9001e580:	f100 8121 	bmi.w	9001e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e584:	f103 39ff 	add.w	r9, r3, #4294967295
9001e588:	454a      	cmp	r2, r9
9001e58a:	f280 811c 	bge.w	9001e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e58e:	f1bc 0f00 	cmp.w	ip, #0
9001e592:	f2c0 8118 	blt.w	9001e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e596:	f10e 39ff 	add.w	r9, lr, #4294967295
9001e59a:	45cc      	cmp	ip, r9
9001e59c:	f280 8113 	bge.w	9001e7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e5a0:	b21b      	sxth	r3, r3
9001e5a2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e5a4:	fb0c 2203 	mla	r2, ip, r3, r2
9001e5a8:	eb04 0902 	add.w	r9, r4, r2
9001e5ac:	5ca2      	ldrb	r2, [r4, r2]
9001e5ae:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001e5b2:	2800      	cmp	r0, #0
9001e5b4:	f000 80fe 	beq.w	9001e7b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001e5b8:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e5bc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001e5c0:	9211      	str	r2, [sp, #68]	; 0x44
9001e5c2:	b151      	cbz	r1, 9001e5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e5c4:	eb09 0203 	add.w	r2, r9, r3
9001e5c8:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e5cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e5d0:	930f      	str	r3, [sp, #60]	; 0x3c
9001e5d2:	7853      	ldrb	r3, [r2, #1]
9001e5d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e5d8:	9312      	str	r3, [sp, #72]	; 0x48
9001e5da:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001e5dc:	fb10 f201 	smulbb	r2, r0, r1
9001e5e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001e5e2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e5e6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e5ea:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001e5ee:	10d2      	asrs	r2, r2, #3
9001e5f0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e5f4:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001e5f8:	ea4c 0c03 	orr.w	ip, ip, r3
9001e5fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001e5fe:	041b      	lsls	r3, r3, #16
9001e600:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e604:	4323      	orrs	r3, r4
9001e606:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e608:	4353      	muls	r3, r2
9001e60a:	fb09 330c 	mla	r3, r9, ip, r3
9001e60e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001e612:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001e616:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e61a:	ea4c 0e0e 	orr.w	lr, ip, lr
9001e61e:	f1c1 0c10 	rsb	ip, r1, #16
9001e622:	ebac 0c00 	sub.w	ip, ip, r0
9001e626:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e62a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001e62e:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001e632:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e634:	0418      	lsls	r0, r3, #16
9001e636:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e63a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001e63e:	4318      	orrs	r0, r3
9001e640:	fb02 c200 	mla	r2, r2, r0, ip
9001e644:	8838      	ldrh	r0, [r7, #0]
9001e646:	0d53      	lsrs	r3, r2, #21
9001e648:	0952      	lsrs	r2, r2, #5
9001e64a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e64e:	1201      	asrs	r1, r0, #8
9001e650:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e654:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001e658:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e65c:	00c0      	lsls	r0, r0, #3
9001e65e:	431a      	orrs	r2, r3
9001e660:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001e664:	fb11 f104 	smulbb	r1, r1, r4
9001e668:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e66c:	b292      	uxth	r2, r2
9001e66e:	fb1e fe04 	smulbb	lr, lr, r4
9001e672:	b2c0      	uxtb	r0, r0
9001e674:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e678:	fb10 f004 	smulbb	r0, r0, r4
9001e67c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e680:	fb0c 1c03 	mla	ip, ip, r3, r1
9001e684:	10d1      	asrs	r1, r2, #3
9001e686:	00d2      	lsls	r2, r2, #3
9001e688:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e68c:	fa1f fc8c 	uxth.w	ip, ip
9001e690:	b2d2      	uxtb	r2, r2
9001e692:	fb01 e103 	mla	r1, r1, r3, lr
9001e696:	fb02 0303 	mla	r3, r2, r3, r0
9001e69a:	b289      	uxth	r1, r1
9001e69c:	b29a      	uxth	r2, r3
9001e69e:	f10c 0301 	add.w	r3, ip, #1
9001e6a2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001e6a6:	1c53      	adds	r3, r2, #1
9001e6a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e6ac:	1c4a      	adds	r2, r1, #1
9001e6ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e6b2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e6b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e6ba:	0949      	lsrs	r1, r1, #5
9001e6bc:	ea43 030c 	orr.w	r3, r3, ip
9001e6c0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e6c4:	430b      	orrs	r3, r1
9001e6c6:	803b      	strh	r3, [r7, #0]
9001e6c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e6ca:	3702      	adds	r7, #2
9001e6cc:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e6d0:	449a      	add	sl, r3
9001e6d2:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e6d4:	441d      	add	r5, r3
9001e6d6:	e742      	b.n	9001e55e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001e6d8:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e6da:	f108 0802 	add.w	r8, r8, #2
9001e6de:	449a      	add	sl, r3
9001e6e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e6e2:	441d      	add	r5, r3
9001e6e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e6e6:	3b01      	subs	r3, #1
9001e6e8:	9309      	str	r3, [sp, #36]	; 0x24
9001e6ea:	e718      	b.n	9001e51e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001e6ec:	d023      	beq.n	9001e736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e6ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e6f0:	9825      	ldr	r0, [sp, #148]	; 0x94
9001e6f2:	3b01      	subs	r3, #1
9001e6f4:	fb00 a003 	mla	r0, r0, r3, sl
9001e6f8:	1400      	asrs	r0, r0, #16
9001e6fa:	f53f af2d 	bmi.w	9001e558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e6fe:	3901      	subs	r1, #1
9001e700:	4288      	cmp	r0, r1
9001e702:	f6bf af29 	bge.w	9001e558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e706:	9926      	ldr	r1, [sp, #152]	; 0x98
9001e708:	fb01 5303 	mla	r3, r1, r3, r5
9001e70c:	141b      	asrs	r3, r3, #16
9001e70e:	f53f af23 	bmi.w	9001e558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e712:	3a01      	subs	r2, #1
9001e714:	4293      	cmp	r3, r2
9001e716:	f6bf af1f 	bge.w	9001e558 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e71a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001e71e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001e722:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001e726:	f1be 0f00 	cmp.w	lr, #0
9001e72a:	dc6c      	bgt.n	9001e806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001e72c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e72e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001e732:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e736:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e738:	2b00      	cmp	r3, #0
9001e73a:	f340 810e 	ble.w	9001e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e73e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e742:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e744:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e748:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e74c:	eef0 6a62 	vmov.f32	s13, s5
9001e750:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e754:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e758:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e75c:	ee16 aa90 	vmov	sl, s13
9001e760:	eef0 6a43 	vmov.f32	s13, s6
9001e764:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e768:	ee16 5a90 	vmov	r5, s13
9001e76c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e770:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e774:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e778:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e77c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e780:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e784:	ee12 2a90 	vmov	r2, s5
9001e788:	eef0 2a47 	vmov.f32	s5, s14
9001e78c:	fb92 f3f3 	sdiv	r3, r2, r3
9001e790:	ee13 2a10 	vmov	r2, s6
9001e794:	9325      	str	r3, [sp, #148]	; 0x94
9001e796:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e798:	eeb0 3a67 	vmov.f32	s6, s15
9001e79c:	fb92 f3f3 	sdiv	r3, r2, r3
9001e7a0:	9326      	str	r3, [sp, #152]	; 0x98
9001e7a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e7a4:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001e7a6:	3b01      	subs	r3, #1
9001e7a8:	930c      	str	r3, [sp, #48]	; 0x30
9001e7aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e7ac:	bf08      	it	eq
9001e7ae:	4613      	moveq	r3, r2
9001e7b0:	9309      	str	r3, [sp, #36]	; 0x24
9001e7b2:	e6a6      	b.n	9001e502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e7b4:	2900      	cmp	r1, #0
9001e7b6:	f43f af10 	beq.w	9001e5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e7ba:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e7be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e7c2:	930f      	str	r3, [sp, #60]	; 0x3c
9001e7c4:	e709      	b.n	9001e5da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e7c6:	f112 0901 	adds.w	r9, r2, #1
9001e7ca:	f53f af7d 	bmi.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e7ce:	454b      	cmp	r3, r9
9001e7d0:	f6ff af7a 	blt.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e7d4:	f11c 0901 	adds.w	r9, ip, #1
9001e7d8:	f53f af76 	bmi.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e7dc:	45ce      	cmp	lr, r9
9001e7de:	f6ff af73 	blt.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e7e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001e7e4:	b21b      	sxth	r3, r3
9001e7e6:	9202      	str	r2, [sp, #8]
9001e7e8:	fa0f f28e 	sxth.w	r2, lr
9001e7ec:	9300      	str	r3, [sp, #0]
9001e7ee:	4633      	mov	r3, r6
9001e7f0:	9201      	str	r2, [sp, #4]
9001e7f2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e7f4:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001e7f8:	e9cd c003 	strd	ip, r0, [sp, #12]
9001e7fc:	4639      	mov	r1, r7
9001e7fe:	9816      	ldr	r0, [sp, #88]	; 0x58
9001e800:	f7ff fd8e 	bl	9001e320 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001e804:	e760      	b.n	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e806:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e808:	ea4f 422a 	mov.w	r2, sl, asr #16
9001e80c:	1429      	asrs	r1, r5, #16
9001e80e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e810:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001e814:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001e818:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001e81c:	fb03 2101 	mla	r1, r3, r1, r2
9001e820:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e822:	440a      	add	r2, r1
9001e824:	5c61      	ldrb	r1, [r4, r1]
9001e826:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001e82a:	f1bc 0f00 	cmp.w	ip, #0
9001e82e:	f000 808c 	beq.w	9001e94a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001e832:	7857      	ldrb	r7, [r2, #1]
9001e834:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001e838:	9413      	str	r4, [sp, #76]	; 0x4c
9001e83a:	b140      	cbz	r0, 9001e84e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e83c:	18d7      	adds	r7, r2, r3
9001e83e:	5cd3      	ldrb	r3, [r2, r3]
9001e840:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e844:	9310      	str	r3, [sp, #64]	; 0x40
9001e846:	787b      	ldrb	r3, [r7, #1]
9001e848:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e84c:	9314      	str	r3, [sp, #80]	; 0x50
9001e84e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001e850:	fb1c f200 	smulbb	r2, ip, r0
9001e854:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001e856:	f10e 3eff 	add.w	lr, lr, #4294967295
9001e85a:	041f      	lsls	r7, r3, #16
9001e85c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e860:	10d2      	asrs	r2, r2, #3
9001e862:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001e866:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001e86a:	431f      	orrs	r7, r3
9001e86c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001e870:	9317      	str	r3, [sp, #92]	; 0x5c
9001e872:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001e874:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001e876:	041b      	lsls	r3, r3, #16
9001e878:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e87c:	ea43 030b 	orr.w	r3, r3, fp
9001e880:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001e884:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001e888:	4353      	muls	r3, r2
9001e88a:	fb04 3707 	mla	r7, r4, r7, r3
9001e88e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001e892:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e894:	ea43 0b01 	orr.w	fp, r3, r1
9001e898:	f1c0 0110 	rsb	r1, r0, #16
9001e89c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001e89e:	eba1 0c0c 	sub.w	ip, r1, ip
9001e8a2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e8a6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001e8aa:	fb0c 770b 	mla	r7, ip, fp, r7
9001e8ae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e8b2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9001e8b6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e8ba:	ea4c 0c0b 	orr.w	ip, ip, fp
9001e8be:	fb02 770c 	mla	r7, r2, ip, r7
9001e8c2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001e8c4:	0d79      	lsrs	r1, r7, #21
9001e8c6:	8812      	ldrh	r2, [r2, #0]
9001e8c8:	097f      	lsrs	r7, r7, #5
9001e8ca:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e8ce:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001e8d2:	430f      	orrs	r7, r1
9001e8d4:	1211      	asrs	r1, r2, #8
9001e8d6:	b2bb      	uxth	r3, r7
9001e8d8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e8dc:	10d7      	asrs	r7, r2, #3
9001e8de:	fb11 f104 	smulbb	r1, r1, r4
9001e8e2:	1218      	asrs	r0, r3, #8
9001e8e4:	00d2      	lsls	r2, r2, #3
9001e8e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e8ea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001e8ee:	fb17 f704 	smulbb	r7, r7, r4
9001e8f2:	b2d2      	uxtb	r2, r2
9001e8f4:	fb00 1009 	mla	r0, r0, r9, r1
9001e8f8:	10d9      	asrs	r1, r3, #3
9001e8fa:	fb12 f204 	smulbb	r2, r2, r4
9001e8fe:	00db      	lsls	r3, r3, #3
9001e900:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e904:	b280      	uxth	r0, r0
9001e906:	b2db      	uxtb	r3, r3
9001e908:	fb01 7109 	mla	r1, r1, r9, r7
9001e90c:	fb03 2309 	mla	r3, r3, r9, r2
9001e910:	1c42      	adds	r2, r0, #1
9001e912:	b289      	uxth	r1, r1
9001e914:	b29b      	uxth	r3, r3
9001e916:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001e91a:	1c4f      	adds	r7, r1, #1
9001e91c:	1c5a      	adds	r2, r3, #1
9001e91e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001e922:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001e926:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001e92a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001e92c:	0949      	lsrs	r1, r1, #5
9001e92e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e932:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e936:	4310      	orrs	r0, r2
9001e938:	4308      	orrs	r0, r1
9001e93a:	f823 0b02 	strh.w	r0, [r3], #2
9001e93e:	930e      	str	r3, [sp, #56]	; 0x38
9001e940:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e942:	449a      	add	sl, r3
9001e944:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e946:	441d      	add	r5, r3
9001e948:	e6ed      	b.n	9001e726 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001e94a:	2800      	cmp	r0, #0
9001e94c:	f43f af7f 	beq.w	9001e84e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e950:	5cd3      	ldrb	r3, [r2, r3]
9001e952:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e956:	9310      	str	r3, [sp, #64]	; 0x40
9001e958:	e779      	b.n	9001e84e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e95a:	b019      	add	sp, #100	; 0x64
9001e95c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001e960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001e960:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001e964:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
9001e968:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001e96c:	f1b8 0f00 	cmp.w	r8, #0
9001e970:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
9001e974:	fb08 470e 	mla	r7, r8, lr, r4
9001e978:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001e97c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9001e980:	eb02 0907 	add.w	r9, r2, r7
9001e984:	8808      	ldrh	r0, [r1, #0]
9001e986:	db67      	blt.n	9001ea58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001e988:	45c2      	cmp	sl, r8
9001e98a:	dd65      	ble.n	9001ea58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001e98c:	2c00      	cmp	r4, #0
9001e98e:	db61      	blt.n	9001ea54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001e990:	45a6      	cmp	lr, r4
9001e992:	dd5f      	ble.n	9001ea54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001e994:	5dd2      	ldrb	r2, [r2, r7]
9001e996:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e99a:	1c62      	adds	r2, r4, #1
9001e99c:	d45f      	bmi.n	9001ea5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e99e:	4596      	cmp	lr, r2
9001e9a0:	dd5d      	ble.n	9001ea5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e9a2:	2d00      	cmp	r5, #0
9001e9a4:	d05b      	beq.n	9001ea5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001e9a6:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e9aa:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001e9ae:	f118 0801 	adds.w	r8, r8, #1
9001e9b2:	d458      	bmi.n	9001ea66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e9b4:	45c2      	cmp	sl, r8
9001e9b6:	dd56      	ble.n	9001ea66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e9b8:	2e00      	cmp	r6, #0
9001e9ba:	d054      	beq.n	9001ea66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001e9bc:	2c00      	cmp	r4, #0
9001e9be:	db50      	blt.n	9001ea62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001e9c0:	45a6      	cmp	lr, r4
9001e9c2:	dd4e      	ble.n	9001ea62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001e9c4:	f819 200e 	ldrb.w	r2, [r9, lr]
9001e9c8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001e9cc:	3401      	adds	r4, #1
9001e9ce:	d407      	bmi.n	9001e9e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e9d0:	45a6      	cmp	lr, r4
9001e9d2:	dd05      	ble.n	9001e9e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e9d4:	b125      	cbz	r5, 9001e9e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001e9d6:	44ce      	add	lr, r9
9001e9d8:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001e9dc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001e9e0:	fb15 f406 	smulbb	r4, r5, r6
9001e9e4:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001e9e8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001e9ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e9f0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e9f4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001e9f8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001e9fc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001ea00:	ea43 0c0c 	orr.w	ip, r3, ip
9001ea04:	f1c6 0310 	rsb	r3, r6, #16
9001ea08:	ea4e 0707 	orr.w	r7, lr, r7
9001ea0c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001ea10:	1b5b      	subs	r3, r3, r5
9001ea12:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001ea16:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001ea1a:	437d      	muls	r5, r7
9001ea1c:	fb03 5c0c 	mla	ip, r3, ip, r5
9001ea20:	0403      	lsls	r3, r0, #16
9001ea22:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ea26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ea2a:	4318      	orrs	r0, r3
9001ea2c:	0413      	lsls	r3, r2, #16
9001ea2e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ea32:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ea36:	fb04 c000 	mla	r0, r4, r0, ip
9001ea3a:	4313      	orrs	r3, r2
9001ea3c:	fb06 0003 	mla	r0, r6, r3, r0
9001ea40:	0d43      	lsrs	r3, r0, #21
9001ea42:	0940      	lsrs	r0, r0, #5
9001ea44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ea48:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ea4c:	4318      	orrs	r0, r3
9001ea4e:	8008      	strh	r0, [r1, #0]
9001ea50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ea54:	4684      	mov	ip, r0
9001ea56:	e7a0      	b.n	9001e99a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001ea58:	4607      	mov	r7, r0
9001ea5a:	4684      	mov	ip, r0
9001ea5c:	e7a7      	b.n	9001e9ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ea5e:	4607      	mov	r7, r0
9001ea60:	e7a5      	b.n	9001e9ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ea62:	4602      	mov	r2, r0
9001ea64:	e7b2      	b.n	9001e9cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001ea66:	4602      	mov	r2, r0
9001ea68:	e7ba      	b.n	9001e9e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001ea6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ea6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ea6e:	b093      	sub	sp, #76	; 0x4c
9001ea70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ea74:	920f      	str	r2, [sp, #60]	; 0x3c
9001ea76:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001ea78:	9010      	str	r0, [sp, #64]	; 0x40
9001ea7a:	9108      	str	r1, [sp, #32]
9001ea7c:	6850      	ldr	r0, [r2, #4]
9001ea7e:	9306      	str	r3, [sp, #24]
9001ea80:	6812      	ldr	r2, [r2, #0]
9001ea82:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9001ea86:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9001ea8a:	fb00 1303 	mla	r3, r0, r3, r1
9001ea8e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001ea92:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ea94:	681b      	ldr	r3, [r3, #0]
9001ea96:	9307      	str	r3, [sp, #28]
9001ea98:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ea9a:	685f      	ldr	r7, [r3, #4]
9001ea9c:	3704      	adds	r7, #4
9001ea9e:	9b08      	ldr	r3, [sp, #32]
9001eaa0:	2b00      	cmp	r3, #0
9001eaa2:	dc03      	bgt.n	9001eaac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001eaa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001eaa6:	2b00      	cmp	r3, #0
9001eaa8:	f340 81b2 	ble.w	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001eaac:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001eaae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001eab2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001eab6:	1e48      	subs	r0, r1, #1
9001eab8:	f102 3cff 	add.w	ip, r2, #4294967295
9001eabc:	9b06      	ldr	r3, [sp, #24]
9001eabe:	2b00      	cmp	r3, #0
9001eac0:	f340 80a9 	ble.w	9001ec16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001eac4:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001eac8:	ea4f 4326 	mov.w	r3, r6, asr #16
9001eacc:	d406      	bmi.n	9001eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001eace:	4586      	cmp	lr, r0
9001ead0:	da04      	bge.n	9001eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ead2:	2b00      	cmp	r3, #0
9001ead4:	db02      	blt.n	9001eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ead6:	4563      	cmp	r3, ip
9001ead8:	f2c0 809e 	blt.w	9001ec18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001eadc:	f11e 0e01 	adds.w	lr, lr, #1
9001eae0:	f100 808f 	bmi.w	9001ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001eae4:	4571      	cmp	r1, lr
9001eae6:	f2c0 808c 	blt.w	9001ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001eaea:	3301      	adds	r3, #1
9001eaec:	f100 8089 	bmi.w	9001ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001eaf0:	429a      	cmp	r2, r3
9001eaf2:	f2c0 8086 	blt.w	9001ec02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001eaf6:	f8dd b018 	ldr.w	fp, [sp, #24]
9001eafa:	46c8      	mov	r8, r9
9001eafc:	f1bb 0f00 	cmp.w	fp, #0
9001eb00:	f340 80a6 	ble.w	9001ec50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001eb04:	9a24      	ldr	r2, [sp, #144]	; 0x90
9001eb06:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001eb0a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001eb0c:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001eb10:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001eb14:	1422      	asrs	r2, r4, #16
9001eb16:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001eb1a:	689b      	ldr	r3, [r3, #8]
9001eb1c:	f100 80e3 	bmi.w	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eb20:	f103 3aff 	add.w	sl, r3, #4294967295
9001eb24:	4552      	cmp	r2, sl
9001eb26:	f280 80de 	bge.w	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eb2a:	f1bc 0f00 	cmp.w	ip, #0
9001eb2e:	f2c0 80da 	blt.w	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eb32:	f10e 3aff 	add.w	sl, lr, #4294967295
9001eb36:	45d4      	cmp	ip, sl
9001eb38:	f280 80d5 	bge.w	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eb3c:	b21b      	sxth	r3, r3
9001eb3e:	9d07      	ldr	r5, [sp, #28]
9001eb40:	fb0c 2203 	mla	r2, ip, r3, r2
9001eb44:	eb05 0a02 	add.w	sl, r5, r2
9001eb48:	5caa      	ldrb	r2, [r5, r2]
9001eb4a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001eb4e:	2800      	cmp	r0, #0
9001eb50:	f000 80c0 	beq.w	9001ecd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001eb54:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001eb58:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001eb5c:	920b      	str	r2, [sp, #44]	; 0x2c
9001eb5e:	b151      	cbz	r1, 9001eb76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001eb60:	eb0a 0203 	add.w	r2, sl, r3
9001eb64:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001eb68:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eb6c:	9309      	str	r3, [sp, #36]	; 0x24
9001eb6e:	7853      	ldrb	r3, [r2, #1]
9001eb70:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eb74:	930c      	str	r3, [sp, #48]	; 0x30
9001eb76:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001eb78:	fb10 f201 	smulbb	r2, r0, r1
9001eb7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001eb7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001eb82:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001eb86:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001eb8a:	10d2      	asrs	r2, r2, #3
9001eb8c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001eb90:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001eb94:	ea4c 0c03 	orr.w	ip, ip, r3
9001eb98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001eb9a:	041b      	lsls	r3, r3, #16
9001eb9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001eba0:	432b      	orrs	r3, r5
9001eba2:	4353      	muls	r3, r2
9001eba4:	fb0a 330c 	mla	r3, sl, ip, r3
9001eba8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001ebac:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001ebb0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ebb4:	ea4c 0e0e 	orr.w	lr, ip, lr
9001ebb8:	f1c1 0c10 	rsb	ip, r1, #16
9001ebbc:	ebac 0c00 	sub.w	ip, ip, r0
9001ebc0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ebc4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001ebc8:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001ebcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ebce:	0418      	lsls	r0, r3, #16
9001ebd0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ebd4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001ebd8:	4318      	orrs	r0, r3
9001ebda:	fb02 c200 	mla	r2, r2, r0, ip
9001ebde:	0d53      	lsrs	r3, r2, #21
9001ebe0:	0952      	lsrs	r2, r2, #5
9001ebe2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ebe6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ebea:	431a      	orrs	r2, r3
9001ebec:	f8a8 2000 	strh.w	r2, [r8]
9001ebf0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ebf2:	f108 0802 	add.w	r8, r8, #2
9001ebf6:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ebfa:	441c      	add	r4, r3
9001ebfc:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ebfe:	441e      	add	r6, r3
9001ec00:	e77c      	b.n	9001eafc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ec02:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ec04:	f109 0902 	add.w	r9, r9, #2
9001ec08:	441c      	add	r4, r3
9001ec0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ec0c:	441e      	add	r6, r3
9001ec0e:	9b06      	ldr	r3, [sp, #24]
9001ec10:	3b01      	subs	r3, #1
9001ec12:	9306      	str	r3, [sp, #24]
9001ec14:	e752      	b.n	9001eabc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ec16:	d020      	beq.n	9001ec5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ec18:	9b06      	ldr	r3, [sp, #24]
9001ec1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001ec1c:	3b01      	subs	r3, #1
9001ec1e:	fb00 4003 	mla	r0, r0, r3, r4
9001ec22:	1400      	asrs	r0, r0, #16
9001ec24:	f53f af67 	bmi.w	9001eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ec28:	3901      	subs	r1, #1
9001ec2a:	4288      	cmp	r0, r1
9001ec2c:	f6bf af63 	bge.w	9001eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ec30:	9920      	ldr	r1, [sp, #128]	; 0x80
9001ec32:	fb01 6303 	mla	r3, r1, r3, r6
9001ec36:	141b      	asrs	r3, r3, #16
9001ec38:	f53f af5d 	bmi.w	9001eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ec3c:	3a01      	subs	r2, #1
9001ec3e:	4293      	cmp	r3, r2
9001ec40:	f6bf af59 	bge.w	9001eaf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ec44:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001ec48:	46ca      	mov	sl, r9
9001ec4a:	f1b8 0f00 	cmp.w	r8, #0
9001ec4e:	dc67      	bgt.n	9001ed20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ec50:	9b06      	ldr	r3, [sp, #24]
9001ec52:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001ec56:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001ec5a:	9b08      	ldr	r3, [sp, #32]
9001ec5c:	2b00      	cmp	r3, #0
9001ec5e:	f340 80d7 	ble.w	9001ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001ec62:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ec66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ec68:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ec6c:	eeb0 6a62 	vmov.f32	s12, s5
9001ec70:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ec74:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ec78:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ec7c:	ee16 4a10 	vmov	r4, s12
9001ec80:	eeb0 6a43 	vmov.f32	s12, s6
9001ec84:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ec88:	ee16 6a10 	vmov	r6, s12
9001ec8c:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ec90:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ec94:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ec98:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ec9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001eca0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001eca4:	ee12 2a90 	vmov	r2, s5
9001eca8:	eef0 2a47 	vmov.f32	s5, s14
9001ecac:	fb92 f3f3 	sdiv	r3, r2, r3
9001ecb0:	ee13 2a10 	vmov	r2, s6
9001ecb4:	931f      	str	r3, [sp, #124]	; 0x7c
9001ecb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ecb8:	eeb0 3a67 	vmov.f32	s6, s15
9001ecbc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ecc0:	9320      	str	r3, [sp, #128]	; 0x80
9001ecc2:	9b08      	ldr	r3, [sp, #32]
9001ecc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ecc6:	3b01      	subs	r3, #1
9001ecc8:	9308      	str	r3, [sp, #32]
9001ecca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001eccc:	bf08      	it	eq
9001ecce:	4613      	moveq	r3, r2
9001ecd0:	9306      	str	r3, [sp, #24]
9001ecd2:	e6e4      	b.n	9001ea9e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001ecd4:	2900      	cmp	r1, #0
9001ecd6:	f43f af4e 	beq.w	9001eb76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ecda:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001ecde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ece2:	9309      	str	r3, [sp, #36]	; 0x24
9001ece4:	e747      	b.n	9001eb76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ece6:	f112 0a01 	adds.w	sl, r2, #1
9001ecea:	d481      	bmi.n	9001ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ecec:	4553      	cmp	r3, sl
9001ecee:	f6ff af7f 	blt.w	9001ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ecf2:	f11c 0a01 	adds.w	sl, ip, #1
9001ecf6:	f53f af7b 	bmi.w	9001ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ecfa:	45d6      	cmp	lr, sl
9001ecfc:	f6ff af78 	blt.w	9001ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ed00:	b21b      	sxth	r3, r3
9001ed02:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001ed06:	fa0f f28e 	sxth.w	r2, lr
9001ed0a:	9300      	str	r3, [sp, #0]
9001ed0c:	463b      	mov	r3, r7
9001ed0e:	9201      	str	r2, [sp, #4]
9001ed10:	9a07      	ldr	r2, [sp, #28]
9001ed12:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001ed16:	4641      	mov	r1, r8
9001ed18:	9810      	ldr	r0, [sp, #64]	; 0x40
9001ed1a:	f7ff fe21 	bl	9001e960 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001ed1e:	e767      	b.n	9001ebf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ed20:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ed22:	1422      	asrs	r2, r4, #16
9001ed24:	1431      	asrs	r1, r6, #16
9001ed26:	9d07      	ldr	r5, [sp, #28]
9001ed28:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ed2c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001ed30:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001ed34:	fb03 2101 	mla	r1, r3, r1, r2
9001ed38:	9a07      	ldr	r2, [sp, #28]
9001ed3a:	440a      	add	r2, r1
9001ed3c:	5c69      	ldrb	r1, [r5, r1]
9001ed3e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001ed42:	f1be 0f00 	cmp.w	lr, #0
9001ed46:	d05c      	beq.n	9001ee02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001ed48:	f892 c001 	ldrb.w	ip, [r2, #1]
9001ed4c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001ed50:	950d      	str	r5, [sp, #52]	; 0x34
9001ed52:	b150      	cbz	r0, 9001ed6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ed54:	eb02 0c03 	add.w	ip, r2, r3
9001ed58:	5cd3      	ldrb	r3, [r2, r3]
9001ed5a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ed5e:	930a      	str	r3, [sp, #40]	; 0x28
9001ed60:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001ed64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ed68:	930e      	str	r3, [sp, #56]	; 0x38
9001ed6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ed6c:	fb1e f200 	smulbb	r2, lr, r0
9001ed70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001ed72:	f108 38ff 	add.w	r8, r8, #4294967295
9001ed76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ed7a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ed7e:	10d2      	asrs	r2, r2, #3
9001ed80:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
9001ed84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ed88:	ea4c 0c03 	orr.w	ip, ip, r3
9001ed8c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001ed90:	9311      	str	r3, [sp, #68]	; 0x44
9001ed92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ed94:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ed96:	041b      	lsls	r3, r3, #16
9001ed98:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ed9c:	ea43 030b 	orr.w	r3, r3, fp
9001eda0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001eda4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001eda8:	4353      	muls	r3, r2
9001edaa:	fb05 3c0c 	mla	ip, r5, ip, r3
9001edae:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001edb2:	ea43 0b01 	orr.w	fp, r3, r1
9001edb6:	f1c0 0110 	rsb	r1, r0, #16
9001edba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001edbc:	eba1 0e0e 	sub.w	lr, r1, lr
9001edc0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001edc4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001edc8:	fb0e cc0b 	mla	ip, lr, fp, ip
9001edcc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001edd0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
9001edd4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001edd8:	ea4b 0e0e 	orr.w	lr, fp, lr
9001eddc:	fb02 cc0e 	mla	ip, r2, lr, ip
9001ede0:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001ede4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001ede8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001edec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001edf0:	ea43 0c0c 	orr.w	ip, r3, ip
9001edf4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001edf6:	441c      	add	r4, r3
9001edf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001edfa:	f82a cb02 	strh.w	ip, [sl], #2
9001edfe:	441e      	add	r6, r3
9001ee00:	e723      	b.n	9001ec4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ee02:	2800      	cmp	r0, #0
9001ee04:	d0b1      	beq.n	9001ed6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ee06:	5cd3      	ldrb	r3, [r2, r3]
9001ee08:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ee0c:	930a      	str	r3, [sp, #40]	; 0x28
9001ee0e:	e7ac      	b.n	9001ed6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ee10:	b013      	add	sp, #76	; 0x4c
9001ee12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ee16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001ee16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ee1a:	880d      	ldrh	r5, [r1, #0]
9001ee1c:	b087      	sub	sp, #28
9001ee1e:	10ef      	asrs	r7, r5, #3
9001ee20:	9103      	str	r1, [sp, #12]
9001ee22:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001ee26:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9001ee2a:	00ed      	lsls	r5, r5, #3
9001ee2c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ee30:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
9001ee34:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001ee38:	b2ed      	uxtb	r5, r5
9001ee3a:	9701      	str	r7, [sp, #4]
9001ee3c:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9001ee40:	9502      	str	r5, [sp, #8]
9001ee42:	9d01      	ldr	r5, [sp, #4]
9001ee44:	9902      	ldr	r1, [sp, #8]
9001ee46:	022d      	lsls	r5, r5, #8
9001ee48:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9001ee4c:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
9001ee50:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001ee54:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
9001ee58:	430d      	orrs	r5, r1
9001ee5a:	fb06 0709 	mla	r7, r6, r9, r0
9001ee5e:	2e00      	cmp	r6, #0
9001ee60:	9505      	str	r5, [sp, #20]
9001ee62:	eb02 0c07 	add.w	ip, r2, r7
9001ee66:	f2c0 80b6 	blt.w	9001efd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ee6a:	45b3      	cmp	fp, r6
9001ee6c:	f340 80b3 	ble.w	9001efd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001ee70:	2800      	cmp	r0, #0
9001ee72:	f2c0 80ae 	blt.w	9001efd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ee76:	4581      	cmp	r9, r0
9001ee78:	f340 80ab 	ble.w	9001efd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001ee7c:	5dd7      	ldrb	r7, [r2, r7]
9001ee7e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001ee82:	441f      	add	r7, r3
9001ee84:	1c42      	adds	r2, r0, #1
9001ee86:	f100 80a9 	bmi.w	9001efdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ee8a:	4591      	cmp	r9, r2
9001ee8c:	f340 80a6 	ble.w	9001efdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ee90:	2c00      	cmp	r4, #0
9001ee92:	f000 80a3 	beq.w	9001efdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001ee96:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001ee9a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001ee9e:	441d      	add	r5, r3
9001eea0:	3601      	adds	r6, #1
9001eea2:	f100 809f 	bmi.w	9001efe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001eea6:	45b3      	cmp	fp, r6
9001eea8:	f340 809c 	ble.w	9001efe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001eeac:	f1be 0f00 	cmp.w	lr, #0
9001eeb0:	f000 8098 	beq.w	9001efe4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001eeb4:	2800      	cmp	r0, #0
9001eeb6:	f2c0 8093 	blt.w	9001efe0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001eeba:	4581      	cmp	r9, r0
9001eebc:	f340 8090 	ble.w	9001efe0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001eec0:	f81c 6009 	ldrb.w	r6, [ip, r9]
9001eec4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001eec8:	441e      	add	r6, r3
9001eeca:	3001      	adds	r0, #1
9001eecc:	f100 808d 	bmi.w	9001efea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001eed0:	4581      	cmp	r9, r0
9001eed2:	f340 808a 	ble.w	9001efea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001eed6:	2c00      	cmp	r4, #0
9001eed8:	f000 8087 	beq.w	9001efea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001eedc:	44e1      	add	r9, ip
9001eede:	f899 2001 	ldrb.w	r2, [r9, #1]
9001eee2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001eee6:	4413      	add	r3, r2
9001eee8:	b2a4      	uxth	r4, r4
9001eeea:	f897 c002 	ldrb.w	ip, [r7, #2]
9001eeee:	fa1f fe8e 	uxth.w	lr, lr
9001eef2:	9901      	ldr	r1, [sp, #4]
9001eef4:	fb04 fb0e 	mul.w	fp, r4, lr
9001eef8:	0124      	lsls	r4, r4, #4
9001eefa:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9001eefe:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
9001ef02:	eba4 040b 	sub.w	r4, r4, fp
9001ef06:	fa1f f08e 	uxth.w	r0, lr
9001ef0a:	b2a2      	uxth	r2, r4
9001ef0c:	78ac      	ldrb	r4, [r5, #2]
9001ef0e:	eba9 0900 	sub.w	r9, r9, r0
9001ef12:	fa1f fe88 	uxth.w	lr, r8
9001ef16:	4354      	muls	r4, r2
9001ef18:	ea6f 0808 	mvn.w	r8, r8
9001ef1c:	fa1f f989 	uxth.w	r9, r9
9001ef20:	fa5f f888 	uxtb.w	r8, r8
9001ef24:	fb09 440c 	mla	r4, r9, ip, r4
9001ef28:	f896 c002 	ldrb.w	ip, [r6, #2]
9001ef2c:	fb1a fa08 	smulbb	sl, sl, r8
9001ef30:	fb00 440c 	mla	r4, r0, ip, r4
9001ef34:	f893 c002 	ldrb.w	ip, [r3, #2]
9001ef38:	fb0b 4c0c 	mla	ip, fp, ip, r4
9001ef3c:	787c      	ldrb	r4, [r7, #1]
9001ef3e:	783f      	ldrb	r7, [r7, #0]
9001ef40:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001ef44:	fb0c ac0e 	mla	ip, ip, lr, sl
9001ef48:	f895 a001 	ldrb.w	sl, [r5, #1]
9001ef4c:	782d      	ldrb	r5, [r5, #0]
9001ef4e:	fb02 fa0a 	mul.w	sl, r2, sl
9001ef52:	fa1f fc8c 	uxth.w	ip, ip
9001ef56:	436a      	muls	r2, r5
9001ef58:	7835      	ldrb	r5, [r6, #0]
9001ef5a:	fb09 aa04 	mla	sl, r9, r4, sl
9001ef5e:	7874      	ldrb	r4, [r6, #1]
9001ef60:	fb09 2207 	mla	r2, r9, r7, r2
9001ef64:	fb00 aa04 	mla	sl, r0, r4, sl
9001ef68:	785c      	ldrb	r4, [r3, #1]
9001ef6a:	fb00 2005 	mla	r0, r0, r5, r2
9001ef6e:	781b      	ldrb	r3, [r3, #0]
9001ef70:	fb0b a404 	mla	r4, fp, r4, sl
9001ef74:	fb11 fa08 	smulbb	sl, r1, r8
9001ef78:	fb0b 0b03 	mla	fp, fp, r3, r0
9001ef7c:	9b02      	ldr	r3, [sp, #8]
9001ef7e:	f3c4 2407 	ubfx	r4, r4, #8, #8
9001ef82:	fb13 f808 	smulbb	r8, r3, r8
9001ef86:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9001ef8a:	fb04 a40e 	mla	r4, r4, lr, sl
9001ef8e:	f10c 0301 	add.w	r3, ip, #1
9001ef92:	fb0b 8e0e 	mla	lr, fp, lr, r8
9001ef96:	b2a4      	uxth	r4, r4
9001ef98:	fa1f fe8e 	uxth.w	lr, lr
9001ef9c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001efa0:	f104 0a01 	add.w	sl, r4, #1
9001efa4:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
9001efa8:	f10e 0c01 	add.w	ip, lr, #1
9001efac:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001efb0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001efb4:	0964      	lsrs	r4, r4, #5
9001efb6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001efba:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001efbe:	ea4c 0c03 	orr.w	ip, ip, r3
9001efc2:	9b03      	ldr	r3, [sp, #12]
9001efc4:	ea4c 0c04 	orr.w	ip, ip, r4
9001efc8:	f8a3 c000 	strh.w	ip, [r3]
9001efcc:	b007      	add	sp, #28
9001efce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001efd2:	af05      	add	r7, sp, #20
9001efd4:	e756      	b.n	9001ee84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9001efd6:	ad05      	add	r5, sp, #20
9001efd8:	462f      	mov	r7, r5
9001efda:	e761      	b.n	9001eea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001efdc:	ad05      	add	r5, sp, #20
9001efde:	e75f      	b.n	9001eea0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001efe0:	ae05      	add	r6, sp, #20
9001efe2:	e772      	b.n	9001eeca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9001efe4:	ab05      	add	r3, sp, #20
9001efe6:	461e      	mov	r6, r3
9001efe8:	e77e      	b.n	9001eee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9001efea:	ab05      	add	r3, sp, #20
9001efec:	e77c      	b.n	9001eee8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9001efee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001efee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eff2:	b095      	sub	sp, #84	; 0x54
9001eff4:	9212      	str	r2, [sp, #72]	; 0x48
9001eff6:	9309      	str	r3, [sp, #36]	; 0x24
9001eff8:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9001effa:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9001effe:	9013      	str	r0, [sp, #76]	; 0x4c
9001f000:	930f      	str	r3, [sp, #60]	; 0x3c
9001f002:	6850      	ldr	r0, [r2, #4]
9001f004:	910e      	str	r1, [sp, #56]	; 0x38
9001f006:	6812      	ldr	r2, [r2, #0]
9001f008:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9001f00c:	fb00 1303 	mla	r3, r0, r3, r1
9001f010:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f014:	930a      	str	r3, [sp, #40]	; 0x28
9001f016:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f018:	681b      	ldr	r3, [r3, #0]
9001f01a:	930d      	str	r3, [sp, #52]	; 0x34
9001f01c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f01e:	685c      	ldr	r4, [r3, #4]
9001f020:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f022:	3404      	adds	r4, #4
9001f024:	43db      	mvns	r3, r3
9001f026:	b2db      	uxtb	r3, r3
9001f028:	930b      	str	r3, [sp, #44]	; 0x2c
9001f02a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f02c:	2b00      	cmp	r3, #0
9001f02e:	dc03      	bgt.n	9001f038 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001f030:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001f032:	2b00      	cmp	r3, #0
9001f034:	f340 8255 	ble.w	9001f4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f038:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f03a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f03e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f042:	1e48      	subs	r0, r1, #1
9001f044:	1e55      	subs	r5, r2, #1
9001f046:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f048:	2b00      	cmp	r3, #0
9001f04a:	f340 80f9 	ble.w	9001f240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f04e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9001f050:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f052:	1436      	asrs	r6, r6, #16
9001f054:	ea4f 4323 	mov.w	r3, r3, asr #16
9001f058:	d406      	bmi.n	9001f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f05a:	4286      	cmp	r6, r0
9001f05c:	da04      	bge.n	9001f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f05e:	2b00      	cmp	r3, #0
9001f060:	db02      	blt.n	9001f068 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f062:	42ab      	cmp	r3, r5
9001f064:	f2c0 80ed 	blt.w	9001f242 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9001f068:	3601      	adds	r6, #1
9001f06a:	f100 80da 	bmi.w	9001f222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f06e:	42b1      	cmp	r1, r6
9001f070:	f2c0 80d7 	blt.w	9001f222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f074:	3301      	adds	r3, #1
9001f076:	f100 80d4 	bmi.w	9001f222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f07a:	429a      	cmp	r2, r3
9001f07c:	f2c0 80d1 	blt.w	9001f222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f080:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f082:	9311      	str	r3, [sp, #68]	; 0x44
9001f084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f086:	930c      	str	r3, [sp, #48]	; 0x30
9001f088:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f08a:	2b00      	cmp	r3, #0
9001f08c:	f340 80fa 	ble.w	9001f284 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f090:	9826      	ldr	r0, [sp, #152]	; 0x98
9001f092:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f094:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f096:	68c6      	ldr	r6, [r0, #12]
9001f098:	141d      	asrs	r5, r3, #16
9001f09a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001f09c:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f0a0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f0a2:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f0a4:	1400      	asrs	r0, r0, #16
9001f0a6:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f0aa:	6892      	ldr	r2, [r2, #8]
9001f0ac:	f100 813e 	bmi.w	9001f32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f0b0:	1e57      	subs	r7, r2, #1
9001f0b2:	42b8      	cmp	r0, r7
9001f0b4:	f280 813a 	bge.w	9001f32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f0b8:	2d00      	cmp	r5, #0
9001f0ba:	f2c0 8137 	blt.w	9001f32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f0be:	1e77      	subs	r7, r6, #1
9001f0c0:	42bd      	cmp	r5, r7
9001f0c2:	f280 8133 	bge.w	9001f32c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f0c6:	b212      	sxth	r2, r2
9001f0c8:	fb05 0002 	mla	r0, r5, r2, r0
9001f0cc:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f0ce:	f815 a000 	ldrb.w	sl, [r5, r0]
9001f0d2:	182e      	adds	r6, r5, r0
9001f0d4:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9001f0d8:	eb04 050a 	add.w	r5, r4, sl
9001f0dc:	2b00      	cmp	r3, #0
9001f0de:	f000 8117 	beq.w	9001f310 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9001f0e2:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f0e6:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f0ea:	44a4      	add	ip, r4
9001f0ec:	2900      	cmp	r1, #0
9001f0ee:	f000 8117 	beq.w	9001f320 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9001f0f2:	18b0      	adds	r0, r6, r2
9001f0f4:	5cb2      	ldrb	r2, [r6, r2]
9001f0f6:	7840      	ldrb	r0, [r0, #1]
9001f0f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f0fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f100:	4422      	add	r2, r4
9001f102:	4420      	add	r0, r4
9001f104:	b29b      	uxth	r3, r3
9001f106:	f89c 7002 	ldrb.w	r7, [ip, #2]
9001f10a:	b289      	uxth	r1, r1
9001f10c:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f110:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f112:	fb03 f901 	mul.w	r9, r3, r1
9001f116:	011b      	lsls	r3, r3, #4
9001f118:	f8b6 e000 	ldrh.w	lr, [r6]
9001f11c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f120:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
9001f124:	eba3 0309 	sub.w	r3, r3, r9
9001f128:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9001f12c:	b289      	uxth	r1, r1
9001f12e:	f814 a00a 	ldrb.w	sl, [r4, sl]
9001f132:	b29b      	uxth	r3, r3
9001f134:	eba8 0801 	sub.w	r8, r8, r1
9001f138:	435f      	muls	r7, r3
9001f13a:	fa1f f888 	uxth.w	r8, r8
9001f13e:	9310      	str	r3, [sp, #64]	; 0x40
9001f140:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f142:	fb08 770b 	mla	r7, r8, fp, r7
9001f146:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f14a:	fb01 770b 	mla	r7, r1, fp, r7
9001f14e:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f152:	fb09 770b 	mla	r7, r9, fp, r7
9001f156:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9001f15a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f15e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f162:	fb1b fb03 	smulbb	fp, fp, r3
9001f166:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f168:	fb07 b706 	mla	r7, r7, r6, fp
9001f16c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f170:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f174:	f89c c000 	ldrb.w	ip, [ip]
9001f178:	b2bf      	uxth	r7, r7
9001f17a:	435d      	muls	r5, r3
9001f17c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f17e:	fb08 550b 	mla	r5, r8, fp, r5
9001f182:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f186:	fb01 550b 	mla	r5, r1, fp, r5
9001f18a:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f18e:	fb09 550b 	mla	r5, r9, fp, r5
9001f192:	ea4f 0bee 	mov.w	fp, lr, asr #3
9001f196:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f19a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f19e:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f1a2:	fa5f fe8e 	uxtb.w	lr, lr
9001f1a6:	fb1b fb03 	smulbb	fp, fp, r3
9001f1aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f1ac:	fb03 f30c 	mul.w	r3, r3, ip
9001f1b0:	f892 c000 	ldrb.w	ip, [r2]
9001f1b4:	fb05 b506 	mla	r5, r5, r6, fp
9001f1b8:	fb08 330a 	mla	r3, r8, sl, r3
9001f1bc:	b2ad      	uxth	r5, r5
9001f1be:	fb01 330c 	mla	r3, r1, ip, r3
9001f1c2:	f890 c000 	ldrb.w	ip, [r0]
9001f1c6:	f105 0b01 	add.w	fp, r5, #1
9001f1ca:	fb09 3c0c 	mla	ip, r9, ip, r3
9001f1ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f1d0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f1d4:	fb1e fe03 	smulbb	lr, lr, r3
9001f1d8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f1dc:	1c7b      	adds	r3, r7, #1
9001f1de:	096d      	lsrs	r5, r5, #5
9001f1e0:	fb0c e606 	mla	r6, ip, r6, lr
9001f1e4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9001f1e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f1ec:	b2b6      	uxth	r6, r6
9001f1ee:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
9001f1f2:	1c77      	adds	r7, r6, #1
9001f1f4:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9001f1f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f1fc:	431f      	orrs	r7, r3
9001f1fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f200:	433d      	orrs	r5, r7
9001f202:	801d      	strh	r5, [r3, #0]
9001f204:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f206:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f208:	3302      	adds	r3, #2
9001f20a:	930c      	str	r3, [sp, #48]	; 0x30
9001f20c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f20e:	4413      	add	r3, r2
9001f210:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f212:	931f      	str	r3, [sp, #124]	; 0x7c
9001f214:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f216:	4413      	add	r3, r2
9001f218:	9320      	str	r3, [sp, #128]	; 0x80
9001f21a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f21c:	3b01      	subs	r3, #1
9001f21e:	9311      	str	r3, [sp, #68]	; 0x44
9001f220:	e732      	b.n	9001f088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f222:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f224:	9e21      	ldr	r6, [sp, #132]	; 0x84
9001f226:	4433      	add	r3, r6
9001f228:	9e22      	ldr	r6, [sp, #136]	; 0x88
9001f22a:	931f      	str	r3, [sp, #124]	; 0x7c
9001f22c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f22e:	4433      	add	r3, r6
9001f230:	9320      	str	r3, [sp, #128]	; 0x80
9001f232:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f234:	3b01      	subs	r3, #1
9001f236:	9309      	str	r3, [sp, #36]	; 0x24
9001f238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f23a:	3302      	adds	r3, #2
9001f23c:	930a      	str	r3, [sp, #40]	; 0x28
9001f23e:	e702      	b.n	9001f046 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f240:	d027      	beq.n	9001f292 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9001f242:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f244:	9821      	ldr	r0, [sp, #132]	; 0x84
9001f246:	3b01      	subs	r3, #1
9001f248:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f24a:	fb00 5003 	mla	r0, r0, r3, r5
9001f24e:	1400      	asrs	r0, r0, #16
9001f250:	f53f af16 	bmi.w	9001f080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f254:	3901      	subs	r1, #1
9001f256:	4288      	cmp	r0, r1
9001f258:	f6bf af12 	bge.w	9001f080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f25c:	9922      	ldr	r1, [sp, #136]	; 0x88
9001f25e:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f260:	fb01 0303 	mla	r3, r1, r3, r0
9001f264:	141b      	asrs	r3, r3, #16
9001f266:	f53f af0b 	bmi.w	9001f080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f26a:	3a01      	subs	r2, #1
9001f26c:	4293      	cmp	r3, r2
9001f26e:	f6bf af07 	bge.w	9001f080 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f272:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f274:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
9001f278:	9311      	str	r3, [sp, #68]	; 0x44
9001f27a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f27c:	930c      	str	r3, [sp, #48]	; 0x30
9001f27e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f280:	2b00      	cmp	r3, #0
9001f282:	dc70      	bgt.n	9001f366 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9001f284:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f286:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f288:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f28c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f290:	930a      	str	r3, [sp, #40]	; 0x28
9001f292:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f294:	2b00      	cmp	r3, #0
9001f296:	f340 8124 	ble.w	9001f4e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f29a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f29e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f2a0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f2a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f2a8:	eef0 6a62 	vmov.f32	s13, s5
9001f2ac:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f2b0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f2b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f2b8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001f2bc:	eef0 6a43 	vmov.f32	s13, s6
9001f2c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f2c4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
9001f2c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f2cc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f2d0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f2d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f2d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f2dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f2e0:	ee12 2a90 	vmov	r2, s5
9001f2e4:	eef0 2a47 	vmov.f32	s5, s14
9001f2e8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f2ec:	ee13 2a10 	vmov	r2, s6
9001f2f0:	9321      	str	r3, [sp, #132]	; 0x84
9001f2f2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f2f4:	eeb0 3a67 	vmov.f32	s6, s15
9001f2f8:	fb92 f3f3 	sdiv	r3, r2, r3
9001f2fc:	9322      	str	r3, [sp, #136]	; 0x88
9001f2fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f300:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f302:	3b01      	subs	r3, #1
9001f304:	930e      	str	r3, [sp, #56]	; 0x38
9001f306:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f308:	bf08      	it	eq
9001f30a:	4613      	moveq	r3, r2
9001f30c:	9309      	str	r3, [sp, #36]	; 0x24
9001f30e:	e68c      	b.n	9001f02a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f310:	b149      	cbz	r1, 9001f326 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9001f312:	5cb2      	ldrb	r2, [r6, r2]
9001f314:	4628      	mov	r0, r5
9001f316:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f31a:	4422      	add	r2, r4
9001f31c:	46ac      	mov	ip, r5
9001f31e:	e6f1      	b.n	9001f104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f320:	4628      	mov	r0, r5
9001f322:	462a      	mov	r2, r5
9001f324:	e6ee      	b.n	9001f104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f326:	4628      	mov	r0, r5
9001f328:	462a      	mov	r2, r5
9001f32a:	e7f7      	b.n	9001f31c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9001f32c:	1c47      	adds	r7, r0, #1
9001f32e:	f53f af69 	bmi.w	9001f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f332:	42ba      	cmp	r2, r7
9001f334:	f6ff af66 	blt.w	9001f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f338:	1c6f      	adds	r7, r5, #1
9001f33a:	f53f af63 	bmi.w	9001f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f33e:	42be      	cmp	r6, r7
9001f340:	f6ff af60 	blt.w	9001f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f344:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f346:	b236      	sxth	r6, r6
9001f348:	b212      	sxth	r2, r2
9001f34a:	9002      	str	r0, [sp, #8]
9001f34c:	9601      	str	r6, [sp, #4]
9001f34e:	9200      	str	r2, [sp, #0]
9001f350:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f352:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001f356:	e9cd 5303 	strd	r5, r3, [sp, #12]
9001f35a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9001f35e:	4623      	mov	r3, r4
9001f360:	f7ff fd59 	bl	9001ee16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001f364:	e74e      	b.n	9001f204 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f366:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f368:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f36a:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f36e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f370:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f372:	1400      	asrs	r0, r0, #16
9001f374:	142d      	asrs	r5, r5, #16
9001f376:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f378:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f37c:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f380:	fb02 5000 	mla	r0, r2, r0, r5
9001f384:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f386:	f815 9000 	ldrb.w	r9, [r5, r0]
9001f38a:	182e      	adds	r6, r5, r0
9001f38c:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9001f390:	eb04 0509 	add.w	r5, r4, r9
9001f394:	2b00      	cmp	r3, #0
9001f396:	f000 8096 	beq.w	9001f4c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001f39a:	7877      	ldrb	r7, [r6, #1]
9001f39c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f3a0:	4427      	add	r7, r4
9001f3a2:	2900      	cmp	r1, #0
9001f3a4:	f000 8097 	beq.w	9001f4d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9001f3a8:	18b0      	adds	r0, r6, r2
9001f3aa:	5cb2      	ldrb	r2, [r6, r2]
9001f3ac:	7840      	ldrb	r0, [r0, #1]
9001f3ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f3b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f3b6:	4422      	add	r2, r4
9001f3b8:	4420      	add	r0, r4
9001f3ba:	b29b      	uxth	r3, r3
9001f3bc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f3be:	b289      	uxth	r1, r1
9001f3c0:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f3c4:	f8b6 c000 	ldrh.w	ip, [r6]
9001f3c8:	fb03 f801 	mul.w	r8, r3, r1
9001f3cc:	011b      	lsls	r3, r3, #4
9001f3ce:	78be      	ldrb	r6, [r7, #2]
9001f3d0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001f3d4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f3d8:	eba3 0308 	sub.w	r3, r3, r8
9001f3dc:	f814 9009 	ldrb.w	r9, [r4, r9]
9001f3e0:	b289      	uxth	r1, r1
9001f3e2:	b29b      	uxth	r3, r3
9001f3e4:	ebae 0e01 	sub.w	lr, lr, r1
9001f3e8:	435e      	muls	r6, r3
9001f3ea:	fa1f fe8e 	uxth.w	lr, lr
9001f3ee:	9310      	str	r3, [sp, #64]	; 0x40
9001f3f0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f3f2:	fb0e 660b 	mla	r6, lr, fp, r6
9001f3f6:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f3fa:	fb01 660b 	mla	r6, r1, fp, r6
9001f3fe:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f402:	fb08 660b 	mla	r6, r8, fp, r6
9001f406:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9001f40a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f40e:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f412:	fb1b fb03 	smulbb	fp, fp, r3
9001f416:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f418:	fb06 b60a 	mla	r6, r6, sl, fp
9001f41c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f420:	787d      	ldrb	r5, [r7, #1]
9001f422:	783f      	ldrb	r7, [r7, #0]
9001f424:	b2b6      	uxth	r6, r6
9001f426:	435d      	muls	r5, r3
9001f428:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f42a:	fb0e 550b 	mla	r5, lr, fp, r5
9001f42e:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f432:	fb01 550b 	mla	r5, r1, fp, r5
9001f436:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f43a:	fb08 550b 	mla	r5, r8, fp, r5
9001f43e:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f442:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f446:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f44a:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f44e:	fa5f fc8c 	uxtb.w	ip, ip
9001f452:	fb1b fb03 	smulbb	fp, fp, r3
9001f456:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f458:	437b      	muls	r3, r7
9001f45a:	7817      	ldrb	r7, [r2, #0]
9001f45c:	fb05 b50a 	mla	r5, r5, sl, fp
9001f460:	fb0e 3309 	mla	r3, lr, r9, r3
9001f464:	b2ad      	uxth	r5, r5
9001f466:	fb01 3307 	mla	r3, r1, r7, r3
9001f46a:	7807      	ldrb	r7, [r0, #0]
9001f46c:	f105 0b01 	add.w	fp, r5, #1
9001f470:	fb08 3707 	mla	r7, r8, r7, r3
9001f474:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f476:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f47a:	fb1c fc03 	smulbb	ip, ip, r3
9001f47e:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f482:	1c73      	adds	r3, r6, #1
9001f484:	096d      	lsrs	r5, r5, #5
9001f486:	fb07 c70a 	mla	r7, r7, sl, ip
9001f48a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9001f48e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f492:	b2bf      	uxth	r7, r7
9001f494:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f496:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f49a:	1c7a      	adds	r2, r7, #1
9001f49c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9001f4a0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f4a4:	4316      	orrs	r6, r2
9001f4a6:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f4a8:	432e      	orrs	r6, r5
9001f4aa:	f823 6b02 	strh.w	r6, [r3], #2
9001f4ae:	930c      	str	r3, [sp, #48]	; 0x30
9001f4b0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f4b2:	4413      	add	r3, r2
9001f4b4:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f4b6:	931f      	str	r3, [sp, #124]	; 0x7c
9001f4b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f4ba:	4413      	add	r3, r2
9001f4bc:	9320      	str	r3, [sp, #128]	; 0x80
9001f4be:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f4c0:	3b01      	subs	r3, #1
9001f4c2:	9311      	str	r3, [sp, #68]	; 0x44
9001f4c4:	e6db      	b.n	9001f27e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001f4c6:	b149      	cbz	r1, 9001f4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
9001f4c8:	5cb2      	ldrb	r2, [r6, r2]
9001f4ca:	4628      	mov	r0, r5
9001f4cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f4d0:	4422      	add	r2, r4
9001f4d2:	462f      	mov	r7, r5
9001f4d4:	e771      	b.n	9001f3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f4d6:	4628      	mov	r0, r5
9001f4d8:	462a      	mov	r2, r5
9001f4da:	e76e      	b.n	9001f3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f4dc:	4628      	mov	r0, r5
9001f4de:	462a      	mov	r2, r5
9001f4e0:	e7f7      	b.n	9001f4d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9001f4e2:	b015      	add	sp, #84	; 0x54
9001f4e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
9001f4e8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f4ec:	880f      	ldrh	r7, [r1, #0]
9001f4ee:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
9001f4f2:	023c      	lsls	r4, r7, #8
9001f4f4:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001f4f8:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
9001f4fc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
9001f500:	017c      	lsls	r4, r7, #5
9001f502:	00ff      	lsls	r7, r7, #3
9001f504:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9001f508:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
9001f50c:	b2ff      	uxtb	r7, r7
9001f50e:	ea4b 0404 	orr.w	r4, fp, r4
9001f512:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
9001f516:	4327      	orrs	r7, r4
9001f518:	fb05 ca0e 	mla	sl, r5, lr, ip
9001f51c:	2d00      	cmp	r5, #0
9001f51e:	9701      	str	r7, [sp, #4]
9001f520:	eb02 080a 	add.w	r8, r2, sl
9001f524:	db7e      	blt.n	9001f624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f526:	45a9      	cmp	r9, r5
9001f528:	dd7c      	ble.n	9001f624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f52a:	f1bc 0f00 	cmp.w	ip, #0
9001f52e:	db77      	blt.n	9001f620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f530:	45e6      	cmp	lr, ip
9001f532:	dd75      	ble.n	9001f620 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f534:	f812 700a 	ldrb.w	r7, [r2, sl]
9001f538:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f53c:	441f      	add	r7, r3
9001f53e:	f11c 0201 	adds.w	r2, ip, #1
9001f542:	d472      	bmi.n	9001f62a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f544:	4596      	cmp	lr, r2
9001f546:	dd70      	ble.n	9001f62a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f548:	2800      	cmp	r0, #0
9001f54a:	d06e      	beq.n	9001f62a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f54c:	f898 4001 	ldrb.w	r4, [r8, #1]
9001f550:	eb04 0444 	add.w	r4, r4, r4, lsl #1
9001f554:	441c      	add	r4, r3
9001f556:	3501      	adds	r5, #1
9001f558:	d46b      	bmi.n	9001f632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f55a:	45a9      	cmp	r9, r5
9001f55c:	dd69      	ble.n	9001f632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f55e:	2e00      	cmp	r6, #0
9001f560:	d067      	beq.n	9001f632 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f562:	f1bc 0f00 	cmp.w	ip, #0
9001f566:	db62      	blt.n	9001f62e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f568:	45e6      	cmp	lr, ip
9001f56a:	dd60      	ble.n	9001f62e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f56c:	f818 500e 	ldrb.w	r5, [r8, lr]
9001f570:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f574:	441d      	add	r5, r3
9001f576:	f11c 0201 	adds.w	r2, ip, #1
9001f57a:	d45d      	bmi.n	9001f638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f57c:	4596      	cmp	lr, r2
9001f57e:	dd5b      	ble.n	9001f638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f580:	2800      	cmp	r0, #0
9001f582:	d059      	beq.n	9001f638 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f584:	44c6      	add	lr, r8
9001f586:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f58a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f58e:	4413      	add	r3, r2
9001f590:	b280      	uxth	r0, r0
9001f592:	f897 e002 	ldrb.w	lr, [r7, #2]
9001f596:	b2b2      	uxth	r2, r6
9001f598:	f897 9000 	ldrb.w	r9, [r7]
9001f59c:	787f      	ldrb	r7, [r7, #1]
9001f59e:	fb00 f602 	mul.w	r6, r0, r2
9001f5a2:	0100      	lsls	r0, r0, #4
9001f5a4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
9001f5a8:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
9001f5ac:	1b80      	subs	r0, r0, r6
9001f5ae:	fa1f fc82 	uxth.w	ip, r2
9001f5b2:	b282      	uxth	r2, r0
9001f5b4:	78a0      	ldrb	r0, [r4, #2]
9001f5b6:	eba8 080c 	sub.w	r8, r8, ip
9001f5ba:	4350      	muls	r0, r2
9001f5bc:	fa1f f888 	uxth.w	r8, r8
9001f5c0:	fb08 0e0e 	mla	lr, r8, lr, r0
9001f5c4:	78a8      	ldrb	r0, [r5, #2]
9001f5c6:	fb0c e000 	mla	r0, ip, r0, lr
9001f5ca:	f893 e002 	ldrb.w	lr, [r3, #2]
9001f5ce:	fb06 0e0e 	mla	lr, r6, lr, r0
9001f5d2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
9001f5d6:	f894 e000 	ldrb.w	lr, [r4]
9001f5da:	fb02 fe0e 	mul.w	lr, r2, lr
9001f5de:	fb08 e909 	mla	r9, r8, r9, lr
9001f5e2:	f895 e000 	ldrb.w	lr, [r5]
9001f5e6:	fb0c 990e 	mla	r9, ip, lr, r9
9001f5ea:	f893 e000 	ldrb.w	lr, [r3]
9001f5ee:	785b      	ldrb	r3, [r3, #1]
9001f5f0:	fb06 9e0e 	mla	lr, r6, lr, r9
9001f5f4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f5f8:	ea4e 0e00 	orr.w	lr, lr, r0
9001f5fc:	7860      	ldrb	r0, [r4, #1]
9001f5fe:	4350      	muls	r0, r2
9001f600:	786a      	ldrb	r2, [r5, #1]
9001f602:	fb08 0007 	mla	r0, r8, r7, r0
9001f606:	fb0c 0202 	mla	r2, ip, r2, r0
9001f60a:	fb06 2303 	mla	r3, r6, r3, r2
9001f60e:	095b      	lsrs	r3, r3, #5
9001f610:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f614:	ea4e 0303 	orr.w	r3, lr, r3
9001f618:	800b      	strh	r3, [r1, #0]
9001f61a:	b003      	add	sp, #12
9001f61c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f620:	af01      	add	r7, sp, #4
9001f622:	e78c      	b.n	9001f53e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9001f624:	ac01      	add	r4, sp, #4
9001f626:	4627      	mov	r7, r4
9001f628:	e795      	b.n	9001f556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f62a:	ac01      	add	r4, sp, #4
9001f62c:	e793      	b.n	9001f556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f62e:	ad01      	add	r5, sp, #4
9001f630:	e7a1      	b.n	9001f576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9001f632:	ab01      	add	r3, sp, #4
9001f634:	461d      	mov	r5, r3
9001f636:	e7ab      	b.n	9001f590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9001f638:	ab01      	add	r3, sp, #4
9001f63a:	e7a9      	b.n	9001f590 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9001f63c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f640:	b08f      	sub	sp, #60	; 0x3c
9001f642:	920c      	str	r2, [sp, #48]	; 0x30
9001f644:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001f646:	900d      	str	r0, [sp, #52]	; 0x34
9001f648:	910a      	str	r1, [sp, #40]	; 0x28
9001f64a:	6850      	ldr	r0, [r2, #4]
9001f64c:	9306      	str	r3, [sp, #24]
9001f64e:	6812      	ldr	r2, [r2, #0]
9001f650:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
9001f654:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
9001f658:	fb00 1303 	mla	r3, r0, r3, r1
9001f65c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f660:	9307      	str	r3, [sp, #28]
9001f662:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f664:	681b      	ldr	r3, [r3, #0]
9001f666:	9308      	str	r3, [sp, #32]
9001f668:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f66a:	685c      	ldr	r4, [r3, #4]
9001f66c:	3404      	adds	r4, #4
9001f66e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f670:	2b00      	cmp	r3, #0
9001f672:	dc03      	bgt.n	9001f67c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f674:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f676:	2b00      	cmp	r3, #0
9001f678:	f340 81d5 	ble.w	9001fa26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f67c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f67e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f682:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f686:	1e48      	subs	r0, r1, #1
9001f688:	1e56      	subs	r6, r2, #1
9001f68a:	9b06      	ldr	r3, [sp, #24]
9001f68c:	2b00      	cmp	r3, #0
9001f68e:	f340 80b6 	ble.w	9001f7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9001f692:	ea5f 472b 	movs.w	r7, fp, asr #16
9001f696:	ea4f 4325 	mov.w	r3, r5, asr #16
9001f69a:	d406      	bmi.n	9001f6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f69c:	4287      	cmp	r7, r0
9001f69e:	da04      	bge.n	9001f6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f6a0:	2b00      	cmp	r3, #0
9001f6a2:	db02      	blt.n	9001f6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f6a4:	42b3      	cmp	r3, r6
9001f6a6:	f2c0 80ab 	blt.w	9001f800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9001f6aa:	3701      	adds	r7, #1
9001f6ac:	f100 809c 	bmi.w	9001f7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f6b0:	42b9      	cmp	r1, r7
9001f6b2:	f2c0 8099 	blt.w	9001f7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f6b6:	3301      	adds	r3, #1
9001f6b8:	f100 8096 	bmi.w	9001f7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f6bc:	429a      	cmp	r2, r3
9001f6be:	f2c0 8093 	blt.w	9001f7e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f6c2:	9b06      	ldr	r3, [sp, #24]
9001f6c4:	930b      	str	r3, [sp, #44]	; 0x2c
9001f6c6:	9b07      	ldr	r3, [sp, #28]
9001f6c8:	9309      	str	r3, [sp, #36]	; 0x24
9001f6ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f6cc:	2b00      	cmp	r3, #0
9001f6ce:	f340 80b4 	ble.w	9001f83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001f6d2:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f6d4:	142e      	asrs	r6, r5, #16
9001f6d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f6d8:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f6dc:	68c7      	ldr	r7, [r0, #12]
9001f6de:	ea5f 402b 	movs.w	r0, fp, asr #16
9001f6e2:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f6e6:	6892      	ldr	r2, [r2, #8]
9001f6e8:	f100 80fb 	bmi.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f6ec:	f102 3cff 	add.w	ip, r2, #4294967295
9001f6f0:	4560      	cmp	r0, ip
9001f6f2:	f280 80f6 	bge.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f6f6:	2e00      	cmp	r6, #0
9001f6f8:	f2c0 80f3 	blt.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f6fc:	f107 3cff 	add.w	ip, r7, #4294967295
9001f700:	4566      	cmp	r6, ip
9001f702:	f280 80ee 	bge.w	9001f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f706:	b212      	sxth	r2, r2
9001f708:	fb06 0002 	mla	r0, r6, r2, r0
9001f70c:	9e08      	ldr	r6, [sp, #32]
9001f70e:	1837      	adds	r7, r6, r0
9001f710:	5c30      	ldrb	r0, [r6, r0]
9001f712:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9001f716:	eb04 0c08 	add.w	ip, r4, r8
9001f71a:	2b00      	cmp	r3, #0
9001f71c:	f000 80d3 	beq.w	9001f8c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9001f720:	787e      	ldrb	r6, [r7, #1]
9001f722:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f726:	4426      	add	r6, r4
9001f728:	2900      	cmp	r1, #0
9001f72a:	f000 80d4 	beq.w	9001f8d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001f72e:	18b8      	adds	r0, r7, r2
9001f730:	5cba      	ldrb	r2, [r7, r2]
9001f732:	7840      	ldrb	r0, [r0, #1]
9001f734:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f738:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f73c:	4422      	add	r2, r4
9001f73e:	4420      	add	r0, r4
9001f740:	b29b      	uxth	r3, r3
9001f742:	78b7      	ldrb	r7, [r6, #2]
9001f744:	b289      	uxth	r1, r1
9001f746:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f74a:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f74e:	fb03 f901 	mul.w	r9, r3, r1
9001f752:	011b      	lsls	r3, r3, #4
9001f754:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f758:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f75c:	eba3 0309 	sub.w	r3, r3, r9
9001f760:	b289      	uxth	r1, r1
9001f762:	b29b      	uxth	r3, r3
9001f764:	ebae 0e01 	sub.w	lr, lr, r1
9001f768:	435f      	muls	r7, r3
9001f76a:	fa1f fe8e 	uxth.w	lr, lr
9001f76e:	fb0e 770a 	mla	r7, lr, sl, r7
9001f772:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f776:	fb01 770a 	mla	r7, r1, sl, r7
9001f77a:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f77e:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f782:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f786:	f896 8000 	ldrb.w	r8, [r6]
9001f78a:	7876      	ldrb	r6, [r6, #1]
9001f78c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f790:	fb03 f808 	mul.w	r8, r3, r8
9001f794:	4373      	muls	r3, r6
9001f796:	fb0e 8807 	mla	r8, lr, r7, r8
9001f79a:	7817      	ldrb	r7, [r2, #0]
9001f79c:	fb0e 330c 	mla	r3, lr, ip, r3
9001f7a0:	fb01 8807 	mla	r8, r1, r7, r8
9001f7a4:	7807      	ldrb	r7, [r0, #0]
9001f7a6:	fb09 8707 	mla	r7, r9, r7, r8
9001f7aa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f7ae:	ea47 070a 	orr.w	r7, r7, sl
9001f7b2:	f892 a001 	ldrb.w	sl, [r2, #1]
9001f7b6:	fb01 310a 	mla	r1, r1, sl, r3
9001f7ba:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f7be:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f7c0:	fb09 1a0a 	mla	sl, r9, sl, r1
9001f7c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f7c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f7cc:	ea47 070a 	orr.w	r7, r7, sl
9001f7d0:	801f      	strh	r7, [r3, #0]
9001f7d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f7d4:	3302      	adds	r3, #2
9001f7d6:	9309      	str	r3, [sp, #36]	; 0x24
9001f7d8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f7da:	449b      	add	fp, r3
9001f7dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f7de:	441d      	add	r5, r3
9001f7e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f7e2:	3b01      	subs	r3, #1
9001f7e4:	930b      	str	r3, [sp, #44]	; 0x2c
9001f7e6:	e770      	b.n	9001f6ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9001f7e8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f7ea:	449b      	add	fp, r3
9001f7ec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f7ee:	441d      	add	r5, r3
9001f7f0:	9b06      	ldr	r3, [sp, #24]
9001f7f2:	3b01      	subs	r3, #1
9001f7f4:	9306      	str	r3, [sp, #24]
9001f7f6:	9b07      	ldr	r3, [sp, #28]
9001f7f8:	3302      	adds	r3, #2
9001f7fa:	9307      	str	r3, [sp, #28]
9001f7fc:	e745      	b.n	9001f68a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001f7fe:	d023      	beq.n	9001f848 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9001f800:	9b06      	ldr	r3, [sp, #24]
9001f802:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001f804:	3b01      	subs	r3, #1
9001f806:	fb00 b003 	mla	r0, r0, r3, fp
9001f80a:	1400      	asrs	r0, r0, #16
9001f80c:	f53f af59 	bmi.w	9001f6c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f810:	3901      	subs	r1, #1
9001f812:	4288      	cmp	r0, r1
9001f814:	f6bf af55 	bge.w	9001f6c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f818:	991c      	ldr	r1, [sp, #112]	; 0x70
9001f81a:	fb01 5303 	mla	r3, r1, r3, r5
9001f81e:	141b      	asrs	r3, r3, #16
9001f820:	f53f af4f 	bmi.w	9001f6c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f824:	3a01      	subs	r2, #1
9001f826:	4293      	cmp	r3, r2
9001f828:	f6bf af4b 	bge.w	9001f6c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f82c:	9b06      	ldr	r3, [sp, #24]
9001f82e:	9309      	str	r3, [sp, #36]	; 0x24
9001f830:	9b07      	ldr	r3, [sp, #28]
9001f832:	930b      	str	r3, [sp, #44]	; 0x2c
9001f834:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f836:	2b00      	cmp	r3, #0
9001f838:	dc70      	bgt.n	9001f91c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9001f83a:	9b06      	ldr	r3, [sp, #24]
9001f83c:	9a07      	ldr	r2, [sp, #28]
9001f83e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f842:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f846:	9307      	str	r3, [sp, #28]
9001f848:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f84a:	2b00      	cmp	r3, #0
9001f84c:	f340 80eb 	ble.w	9001fa26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f850:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f854:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f856:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f85a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f85e:	eef0 6a62 	vmov.f32	s13, s5
9001f862:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f866:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f86a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f86e:	ee16 ba90 	vmov	fp, s13
9001f872:	eef0 6a43 	vmov.f32	s13, s6
9001f876:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f87a:	ee16 5a90 	vmov	r5, s13
9001f87e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f882:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f886:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f88a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f88e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f892:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f896:	ee12 2a90 	vmov	r2, s5
9001f89a:	eef0 2a47 	vmov.f32	s5, s14
9001f89e:	fb92 f3f3 	sdiv	r3, r2, r3
9001f8a2:	ee13 2a10 	vmov	r2, s6
9001f8a6:	931b      	str	r3, [sp, #108]	; 0x6c
9001f8a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f8aa:	eeb0 3a67 	vmov.f32	s6, s15
9001f8ae:	fb92 f3f3 	sdiv	r3, r2, r3
9001f8b2:	931c      	str	r3, [sp, #112]	; 0x70
9001f8b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f8b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001f8b8:	3b01      	subs	r3, #1
9001f8ba:	930a      	str	r3, [sp, #40]	; 0x28
9001f8bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f8be:	bf08      	it	eq
9001f8c0:	4613      	moveq	r3, r2
9001f8c2:	9306      	str	r3, [sp, #24]
9001f8c4:	e6d3      	b.n	9001f66e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001f8c6:	b149      	cbz	r1, 9001f8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9001f8c8:	5cba      	ldrb	r2, [r7, r2]
9001f8ca:	4660      	mov	r0, ip
9001f8cc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f8d0:	4422      	add	r2, r4
9001f8d2:	4666      	mov	r6, ip
9001f8d4:	e734      	b.n	9001f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001f8d6:	4660      	mov	r0, ip
9001f8d8:	4662      	mov	r2, ip
9001f8da:	e731      	b.n	9001f740 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001f8dc:	4660      	mov	r0, ip
9001f8de:	4662      	mov	r2, ip
9001f8e0:	e7f7      	b.n	9001f8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f8e2:	f110 0c01 	adds.w	ip, r0, #1
9001f8e6:	f53f af74 	bmi.w	9001f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f8ea:	4562      	cmp	r2, ip
9001f8ec:	f6ff af71 	blt.w	9001f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f8f0:	f116 0c01 	adds.w	ip, r6, #1
9001f8f4:	f53f af6d 	bmi.w	9001f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f8f8:	4567      	cmp	r7, ip
9001f8fa:	f6ff af6a 	blt.w	9001f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f8fe:	b23f      	sxth	r7, r7
9001f900:	b212      	sxth	r2, r2
9001f902:	9701      	str	r7, [sp, #4]
9001f904:	9200      	str	r2, [sp, #0]
9001f906:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001f90a:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001f90e:	4623      	mov	r3, r4
9001f910:	980d      	ldr	r0, [sp, #52]	; 0x34
9001f912:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001f916:	f7ff fde7 	bl	9001f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001f91a:	e75a      	b.n	9001f7d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001f91c:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f91e:	ea4f 462b 	mov.w	r6, fp, asr #16
9001f922:	1428      	asrs	r0, r5, #16
9001f924:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f928:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f92c:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f930:	fb02 6000 	mla	r0, r2, r0, r6
9001f934:	9e08      	ldr	r6, [sp, #32]
9001f936:	f816 8000 	ldrb.w	r8, [r6, r0]
9001f93a:	1837      	adds	r7, r6, r0
9001f93c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001f940:	eb04 0c08 	add.w	ip, r4, r8
9001f944:	2b00      	cmp	r3, #0
9001f946:	d060      	beq.n	9001fa0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001f948:	787e      	ldrb	r6, [r7, #1]
9001f94a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f94e:	4426      	add	r6, r4
9001f950:	2900      	cmp	r1, #0
9001f952:	d062      	beq.n	9001fa1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001f954:	18b8      	adds	r0, r7, r2
9001f956:	5cba      	ldrb	r2, [r7, r2]
9001f958:	7840      	ldrb	r0, [r0, #1]
9001f95a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f95e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f962:	4422      	add	r2, r4
9001f964:	4420      	add	r0, r4
9001f966:	b29b      	uxth	r3, r3
9001f968:	78b7      	ldrb	r7, [r6, #2]
9001f96a:	b289      	uxth	r1, r1
9001f96c:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f970:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f974:	fb03 f901 	mul.w	r9, r3, r1
9001f978:	011b      	lsls	r3, r3, #4
9001f97a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f97e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f982:	eba3 0309 	sub.w	r3, r3, r9
9001f986:	b289      	uxth	r1, r1
9001f988:	b29b      	uxth	r3, r3
9001f98a:	ebae 0e01 	sub.w	lr, lr, r1
9001f98e:	435f      	muls	r7, r3
9001f990:	fa1f fe8e 	uxth.w	lr, lr
9001f994:	fb0e 770a 	mla	r7, lr, sl, r7
9001f998:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f99c:	fb01 770a 	mla	r7, r1, sl, r7
9001f9a0:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f9a4:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f9a8:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f9ac:	f896 8000 	ldrb.w	r8, [r6]
9001f9b0:	7876      	ldrb	r6, [r6, #1]
9001f9b2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f9b6:	fb03 f808 	mul.w	r8, r3, r8
9001f9ba:	4373      	muls	r3, r6
9001f9bc:	7856      	ldrb	r6, [r2, #1]
9001f9be:	fb0e 8807 	mla	r8, lr, r7, r8
9001f9c2:	7817      	ldrb	r7, [r2, #0]
9001f9c4:	fb0e 330c 	mla	r3, lr, ip, r3
9001f9c8:	fb01 8807 	mla	r8, r1, r7, r8
9001f9cc:	7807      	ldrb	r7, [r0, #0]
9001f9ce:	fb01 3306 	mla	r3, r1, r6, r3
9001f9d2:	fb09 8707 	mla	r7, r9, r7, r8
9001f9d6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f9da:	ea47 070a 	orr.w	r7, r7, sl
9001f9de:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f9e2:	fb09 3a0a 	mla	sl, r9, sl, r3
9001f9e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f9e8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f9ec:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f9f0:	ea47 070a 	orr.w	r7, r7, sl
9001f9f4:	f823 7b02 	strh.w	r7, [r3], #2
9001f9f8:	930b      	str	r3, [sp, #44]	; 0x2c
9001f9fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f9fc:	449b      	add	fp, r3
9001f9fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001fa00:	441d      	add	r5, r3
9001fa02:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fa04:	3b01      	subs	r3, #1
9001fa06:	9309      	str	r3, [sp, #36]	; 0x24
9001fa08:	e714      	b.n	9001f834 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9001fa0a:	b149      	cbz	r1, 9001fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001fa0c:	5cba      	ldrb	r2, [r7, r2]
9001fa0e:	4660      	mov	r0, ip
9001fa10:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fa14:	4422      	add	r2, r4
9001fa16:	4666      	mov	r6, ip
9001fa18:	e7a5      	b.n	9001f966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fa1a:	4660      	mov	r0, ip
9001fa1c:	4662      	mov	r2, ip
9001fa1e:	e7a2      	b.n	9001f966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fa20:	4660      	mov	r0, ip
9001fa22:	4662      	mov	r2, ip
9001fa24:	e7f7      	b.n	9001fa16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9001fa26:	b00f      	add	sp, #60	; 0x3c
9001fa28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001fa2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9001fa2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa30:	b085      	sub	sp, #20
9001fa32:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
9001fa36:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
9001fa3a:	9102      	str	r1, [sp, #8]
9001fa3c:	2c00      	cmp	r4, #0
9001fa3e:	fb04 710c 	mla	r1, r4, ip, r7
9001fa42:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001fa46:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
9001fa4a:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9001fa4e:	eb02 0e01 	add.w	lr, r2, r1
9001fa52:	f2c0 8122 	blt.w	9001fc9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fa56:	45a0      	cmp	r8, r4
9001fa58:	f340 811f 	ble.w	9001fc9a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fa5c:	2f00      	cmp	r7, #0
9001fa5e:	f2c0 811a 	blt.w	9001fc96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fa62:	45bc      	cmp	ip, r7
9001fa64:	f340 8117 	ble.w	9001fc96 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fa68:	5c52      	ldrb	r2, [r2, r1]
9001fa6a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001fa6e:	1c7a      	adds	r2, r7, #1
9001fa70:	f100 8116 	bmi.w	9001fca0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fa74:	4594      	cmp	ip, r2
9001fa76:	f340 8113 	ble.w	9001fca0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fa7a:	2e00      	cmp	r6, #0
9001fa7c:	f000 8112 	beq.w	9001fca4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9001fa80:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fa84:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9001fa88:	3401      	adds	r4, #1
9001fa8a:	f100 810f 	bmi.w	9001fcac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fa8e:	45a0      	cmp	r8, r4
9001fa90:	f340 810c 	ble.w	9001fcac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fa94:	2800      	cmp	r0, #0
9001fa96:	f000 810c 	beq.w	9001fcb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9001fa9a:	2f00      	cmp	r7, #0
9001fa9c:	f2c0 8104 	blt.w	9001fca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001faa0:	45bc      	cmp	ip, r7
9001faa2:	f340 8101 	ble.w	9001fca8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001faa6:	f81e 200c 	ldrb.w	r2, [lr, ip]
9001faaa:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9001faae:	3701      	adds	r7, #1
9001fab0:	f100 8102 	bmi.w	9001fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fab4:	45bc      	cmp	ip, r7
9001fab6:	f340 80ff 	ble.w	9001fcb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001faba:	2e00      	cmp	r6, #0
9001fabc:	f000 80fe 	beq.w	9001fcbc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9001fac0:	44f4      	add	ip, lr
9001fac2:	f89c 2001 	ldrb.w	r2, [ip, #1]
9001fac6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001faca:	b2b6      	uxth	r6, r6
9001facc:	b280      	uxth	r0, r0
9001face:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9001fad2:	fb00 fe06 	mul.w	lr, r0, r6
9001fad6:	0136      	lsls	r6, r6, #4
9001fad8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9001fadc:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9001fae0:	eba6 070e 	sub.w	r7, r6, lr
9001fae4:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9001fae8:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001faec:	b280      	uxth	r0, r0
9001faee:	b2bf      	uxth	r7, r7
9001faf0:	1a1b      	subs	r3, r3, r0
9001faf2:	ea4f 6812 	mov.w	r8, r2, lsr #24
9001faf6:	fb0a f607 	mul.w	r6, sl, r7
9001fafa:	b29b      	uxth	r3, r3
9001fafc:	fb0b 6603 	mla	r6, fp, r3, r6
9001fb00:	fb00 6609 	mla	r6, r0, r9, r6
9001fb04:	fb0e 6608 	mla	r6, lr, r8, r6
9001fb08:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001fb0c:	9600      	str	r6, [sp, #0]
9001fb0e:	2e00      	cmp	r6, #0
9001fb10:	f000 80be 	beq.w	9001fc90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9001fb14:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001fb18:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9001fb1c:	9e02      	ldr	r6, [sp, #8]
9001fb1e:	fb0b fc0c 	mul.w	ip, fp, ip
9001fb22:	fb0b f505 	mul.w	r5, fp, r5
9001fb26:	8836      	ldrh	r6, [r6, #0]
9001fb28:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9001fb2c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fb30:	9501      	str	r5, [sp, #4]
9001fb32:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9001fb36:	44dc      	add	ip, fp
9001fb38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fb3c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9001fb40:	9503      	str	r5, [sp, #12]
9001fb42:	9d01      	ldr	r5, [sp, #4]
9001fb44:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9001fb48:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fb4c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9001fb50:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fb54:	fb0a fc0c 	mul.w	ip, sl, ip
9001fb58:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9001fb5c:	fb0a fa01 	mul.w	sl, sl, r1
9001fb60:	ea4f 251c 	mov.w	r5, ip, lsr #8
9001fb64:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fb68:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9001fb6c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fb70:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9001fb74:	4465      	add	r5, ip
9001fb76:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001fb7a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001fb7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fb82:	fb09 fc0c 	mul.w	ip, r9, ip
9001fb86:	0a2d      	lsrs	r5, r5, #8
9001fb88:	fb09 f904 	mul.w	r9, r9, r4
9001fb8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fb90:	ea4f 211c 	mov.w	r1, ip, lsr #8
9001fb94:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fb98:	f509 7480 	add.w	r4, r9, #256	; 0x100
9001fb9c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fba0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fba4:	437d      	muls	r5, r7
9001fba6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9001fbaa:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9001fbae:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001fbb2:	4461      	add	r1, ip
9001fbb4:	fb08 f404 	mul.w	r4, r8, r4
9001fbb8:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001fbbc:	fb08 f802 	mul.w	r8, r8, r2
9001fbc0:	0a09      	lsrs	r1, r1, #8
9001fbc2:	0a22      	lsrs	r2, r4, #8
9001fbc4:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9001fbc8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fbcc:	fb07 f70a 	mul.w	r7, r7, sl
9001fbd0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001fbd4:	4414      	add	r4, r2
9001fbd6:	f508 7280 	add.w	r2, r8, #256	; 0x100
9001fbda:	0a24      	lsrs	r4, r4, #8
9001fbdc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9001fbe0:	9a03      	ldr	r2, [sp, #12]
9001fbe2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001fbe6:	fb02 5503 	mla	r5, r2, r3, r5
9001fbea:	ea4f 2818 	mov.w	r8, r8, lsr #8
9001fbee:	9a00      	ldr	r2, [sp, #0]
9001fbf0:	fb04 540e 	mla	r4, r4, lr, r5
9001fbf4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9001fbf8:	1235      	asrs	r5, r6, #8
9001fbfa:	fb01 4100 	mla	r1, r1, r0, r4
9001fbfe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fc02:	0a09      	lsrs	r1, r1, #8
9001fc04:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9001fc08:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9001fc0c:	fb03 7101 	mla	r1, r3, r1, r7
9001fc10:	fb0e 1e08 	mla	lr, lr, r8, r1
9001fc14:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9001fc18:	fb00 e101 	mla	r1, r0, r1, lr
9001fc1c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001fc20:	b287      	uxth	r7, r0
9001fc22:	0a09      	lsrs	r1, r1, #8
9001fc24:	437a      	muls	r2, r7
9001fc26:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fc2a:	1c53      	adds	r3, r2, #1
9001fc2c:	4321      	orrs	r1, r4
9001fc2e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fc32:	0c0a      	lsrs	r2, r1, #16
9001fc34:	f3c1 2407 	ubfx	r4, r1, #8, #8
9001fc38:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9001fc3c:	b2c8      	uxtb	r0, r1
9001fc3e:	fb12 f207 	smulbb	r2, r2, r7
9001fc42:	fb14 f407 	smulbb	r4, r4, r7
9001fc46:	b2db      	uxtb	r3, r3
9001fc48:	fb10 f007 	smulbb	r0, r0, r7
9001fc4c:	fb05 2503 	mla	r5, r5, r3, r2
9001fc50:	10f2      	asrs	r2, r6, #3
9001fc52:	00f6      	lsls	r6, r6, #3
9001fc54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fc58:	b2ad      	uxth	r5, r5
9001fc5a:	b2f6      	uxtb	r6, r6
9001fc5c:	fb02 4203 	mla	r2, r2, r3, r4
9001fc60:	fb06 0303 	mla	r3, r6, r3, r0
9001fc64:	b294      	uxth	r4, r2
9001fc66:	b299      	uxth	r1, r3
9001fc68:	1c6b      	adds	r3, r5, #1
9001fc6a:	1c62      	adds	r2, r4, #1
9001fc6c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fc70:	1c4b      	adds	r3, r1, #1
9001fc72:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001fc76:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001fc7a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fc7e:	0952      	lsrs	r2, r2, #5
9001fc80:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fc84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fc88:	432b      	orrs	r3, r5
9001fc8a:	4313      	orrs	r3, r2
9001fc8c:	9a02      	ldr	r2, [sp, #8]
9001fc8e:	8013      	strh	r3, [r2, #0]
9001fc90:	b005      	add	sp, #20
9001fc92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fc96:	2500      	movs	r5, #0
9001fc98:	e6e9      	b.n	9001fa6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9001fc9a:	2100      	movs	r1, #0
9001fc9c:	460d      	mov	r5, r1
9001fc9e:	e6f3      	b.n	9001fa88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fca0:	2100      	movs	r1, #0
9001fca2:	e6f1      	b.n	9001fa88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fca4:	4631      	mov	r1, r6
9001fca6:	e6ef      	b.n	9001fa88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fca8:	2400      	movs	r4, #0
9001fcaa:	e700      	b.n	9001faae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
9001fcac:	2200      	movs	r2, #0
9001fcae:	4614      	mov	r4, r2
9001fcb0:	e70b      	b.n	9001faca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fcb2:	4602      	mov	r2, r0
9001fcb4:	4604      	mov	r4, r0
9001fcb6:	e708      	b.n	9001faca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fcb8:	2200      	movs	r2, #0
9001fcba:	e706      	b.n	9001faca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fcbc:	4632      	mov	r2, r6
9001fcbe:	e704      	b.n	9001faca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9001fcc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fcc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fcc4:	b09f      	sub	sp, #124	; 0x7c
9001fcc6:	921b      	str	r2, [sp, #108]	; 0x6c
9001fcc8:	9309      	str	r3, [sp, #36]	; 0x24
9001fcca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001fccc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001fcd0:	901d      	str	r0, [sp, #116]	; 0x74
9001fcd2:	931c      	str	r3, [sp, #112]	; 0x70
9001fcd4:	6850      	ldr	r0, [r2, #4]
9001fcd6:	9119      	str	r1, [sp, #100]	; 0x64
9001fcd8:	6812      	ldr	r2, [r2, #0]
9001fcda:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001fcdc:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001fce0:	fb00 1303 	mla	r3, r0, r3, r1
9001fce4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fce8:	930c      	str	r3, [sp, #48]	; 0x30
9001fcea:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fcec:	681b      	ldr	r3, [r3, #0]
9001fcee:	9312      	str	r3, [sp, #72]	; 0x48
9001fcf0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fcf2:	685e      	ldr	r6, [r3, #4]
9001fcf4:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
9001fcf8:	3604      	adds	r6, #4
9001fcfa:	930d      	str	r3, [sp, #52]	; 0x34
9001fcfc:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001fcfe:	2b00      	cmp	r3, #0
9001fd00:	dc03      	bgt.n	9001fd0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001fd02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fd04:	2b00      	cmp	r3, #0
9001fd06:	f340 8387 	ble.w	90020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001fd0a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fd0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fd10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fd14:	1e48      	subs	r0, r1, #1
9001fd16:	1e57      	subs	r7, r2, #1
9001fd18:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fd1a:	2b00      	cmp	r3, #0
9001fd1c:	f340 8194 	ble.w	90020048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9001fd20:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001fd22:	142b      	asrs	r3, r5, #16
9001fd24:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001fd28:	d406      	bmi.n	9001fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fd2a:	4584      	cmp	ip, r0
9001fd2c:	da04      	bge.n	9001fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fd2e:	2b00      	cmp	r3, #0
9001fd30:	db02      	blt.n	9001fd38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fd32:	42bb      	cmp	r3, r7
9001fd34:	f2c0 8189 	blt.w	9002004a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001fd38:	f11c 0c01 	adds.w	ip, ip, #1
9001fd3c:	f100 8177 	bmi.w	9002002e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fd40:	4561      	cmp	r1, ip
9001fd42:	f2c0 8174 	blt.w	9002002e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fd46:	3301      	adds	r3, #1
9001fd48:	f100 8171 	bmi.w	9002002e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fd4c:	429a      	cmp	r2, r3
9001fd4e:	f2c0 816e 	blt.w	9002002e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fd52:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fd54:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001fd56:	931a      	str	r3, [sp, #104]	; 0x68
9001fd58:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001fd5a:	2b00      	cmp	r3, #0
9001fd5c:	f340 8193 	ble.w	90020086 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001fd60:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fd62:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fd66:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001fd6a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001fd6e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fd70:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9001fd74:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fd76:	141b      	asrs	r3, r3, #16
9001fd78:	f100 81d6 	bmi.w	90020128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fd7c:	f100 38ff 	add.w	r8, r0, #4294967295
9001fd80:	4543      	cmp	r3, r8
9001fd82:	f280 81d1 	bge.w	90020128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fd86:	f1bc 0f00 	cmp.w	ip, #0
9001fd8a:	f2c0 81cd 	blt.w	90020128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fd8e:	f10e 38ff 	add.w	r8, lr, #4294967295
9001fd92:	45c4      	cmp	ip, r8
9001fd94:	f280 81c8 	bge.w	90020128 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fd98:	b200      	sxth	r0, r0
9001fd9a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001fd9c:	fb0c 3300 	mla	r3, ip, r0, r3
9001fda0:	eb04 0803 	add.w	r8, r4, r3
9001fda4:	5ce3      	ldrb	r3, [r4, r3]
9001fda6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001fdaa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9001fdae:	2a00      	cmp	r2, #0
9001fdb0:	f000 81af 	beq.w	90020112 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001fdb4:	f898 c001 	ldrb.w	ip, [r8, #1]
9001fdb8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9001fdbc:	940e      	str	r4, [sp, #56]	; 0x38
9001fdbe:	0e24      	lsrs	r4, r4, #24
9001fdc0:	9415      	str	r4, [sp, #84]	; 0x54
9001fdc2:	b179      	cbz	r1, 9001fde4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001fdc4:	eb08 0c00 	add.w	ip, r8, r0
9001fdc8:	f818 0000 	ldrb.w	r0, [r8, r0]
9001fdcc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fdd0:	900a      	str	r0, [sp, #40]	; 0x28
9001fdd2:	0e00      	lsrs	r0, r0, #24
9001fdd4:	9013      	str	r0, [sp, #76]	; 0x4c
9001fdd6:	f89c 0001 	ldrb.w	r0, [ip, #1]
9001fdda:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001fdde:	900f      	str	r0, [sp, #60]	; 0x3c
9001fde0:	0e00      	lsrs	r0, r0, #24
9001fde2:	9016      	str	r0, [sp, #88]	; 0x58
9001fde4:	b292      	uxth	r2, r2
9001fde6:	9815      	ldr	r0, [sp, #84]	; 0x54
9001fde8:	b289      	uxth	r1, r1
9001fdea:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fdec:	fb02 f901 	mul.w	r9, r2, r1
9001fdf0:	0112      	lsls	r2, r2, #4
9001fdf2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001fdf6:	eba2 0809 	sub.w	r8, r2, r9
9001fdfa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001fdfe:	b289      	uxth	r1, r1
9001fe00:	fa1f f888 	uxth.w	r8, r8
9001fe04:	1a52      	subs	r2, r2, r1
9001fe06:	fb08 f000 	mul.w	r0, r8, r0
9001fe0a:	b292      	uxth	r2, r2
9001fe0c:	fb02 000e 	mla	r0, r2, lr, r0
9001fe10:	fb01 0004 	mla	r0, r1, r4, r0
9001fe14:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fe16:	fb09 0004 	mla	r0, r9, r4, r0
9001fe1a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001fe1e:	2800      	cmp	r0, #0
9001fe20:	f000 80fa 	beq.w	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001fe24:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001fe28:	d01b      	beq.n	9001fe62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9001fe2a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001fe2e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001fe32:	fb0e fa0a 	mul.w	sl, lr, sl
9001fe36:	fb0e fe03 	mul.w	lr, lr, r3
9001fe3a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001fe3e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001fe42:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001fe46:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001fe4a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001fe4e:	4453      	add	r3, sl
9001fe50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fe54:	0a1b      	lsrs	r3, r3, #8
9001fe56:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001fe5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001fe5e:	ea43 030c 	orr.w	r3, r3, ip
9001fe62:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fe64:	2cff      	cmp	r4, #255	; 0xff
9001fe66:	d021      	beq.n	9001feac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9001fe68:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fe6a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001fe6e:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fe70:	fb04 fb0b 	mul.w	fp, r4, fp
9001fe74:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001fe76:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001fe7a:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001fe7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001fe80:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fe84:	fb04 fa0a 	mul.w	sl, r4, sl
9001fe88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fe8c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001fe90:	44de      	add	lr, fp
9001fe92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001fe96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001fe9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fe9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fea2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fea6:	ea4e 040a 	orr.w	r4, lr, sl
9001feaa:	940e      	str	r4, [sp, #56]	; 0x38
9001feac:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001feae:	2cff      	cmp	r4, #255	; 0xff
9001feb0:	d021      	beq.n	9001fef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001feb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001feb4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001feb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001feba:	fb04 fb0b 	mul.w	fp, r4, fp
9001febe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001fec0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001fec4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001fec6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001feca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fece:	fb04 fa0a 	mul.w	sl, r4, sl
9001fed2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fed6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001feda:	44de      	add	lr, fp
9001fedc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001fee0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001fee4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fee8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001feec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fef0:	ea4e 040a 	orr.w	r4, lr, sl
9001fef4:	940a      	str	r4, [sp, #40]	; 0x28
9001fef6:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001fef8:	2cff      	cmp	r4, #255	; 0xff
9001fefa:	d021      	beq.n	9001ff40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9001fefc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001fefe:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001ff02:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001ff04:	fb04 fb0b 	mul.w	fp, r4, fp
9001ff08:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001ff0a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001ff0e:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001ff10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001ff14:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001ff18:	fb04 fa0a 	mul.w	sl, r4, sl
9001ff1c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001ff20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9001ff24:	44de      	add	lr, fp
9001ff26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9001ff2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9001ff2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001ff32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001ff36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001ff3a:	ea4e 040a 	orr.w	r4, lr, sl
9001ff3e:	940f      	str	r4, [sp, #60]	; 0x3c
9001ff40:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ff42:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
9001ff46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001ff4a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001ff4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001ff50:	fb08 fc0c 	mul.w	ip, r8, ip
9001ff54:	fb02 cc0e 	mla	ip, r2, lr, ip
9001ff58:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001ff5c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9001ff5e:	fb01 cc0e 	mla	ip, r1, lr, ip
9001ff62:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9001ff66:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ff68:	fb09 cc0e 	mla	ip, r9, lr, ip
9001ff6c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
9001ff70:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001ff72:	fb08 f80e 	mul.w	r8, r8, lr
9001ff76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ff7a:	fb02 8303 	mla	r3, r2, r3, r8
9001ff7e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001ff80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9001ff84:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9001ff88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ff8a:	fb01 330a 	mla	r3, r1, sl, r3
9001ff8e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
9001ff92:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9001ff94:	fb09 3901 	mla	r9, r9, r1, r3
9001ff98:	883b      	ldrh	r3, [r7, #0]
9001ff9a:	4342      	muls	r2, r0
9001ff9c:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001ffa0:	1c50      	adds	r0, r2, #1
9001ffa2:	1219      	asrs	r1, r3, #8
9001ffa4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9001ffa8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001ffac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001ffb0:	ea4c 0c09 	orr.w	ip, ip, r9
9001ffb4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
9001ffb8:	ea4f 421c 	mov.w	r2, ip, lsr #16
9001ffbc:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9001ffc0:	b2c0      	uxtb	r0, r0
9001ffc2:	fb12 f204 	smulbb	r2, r2, r4
9001ffc6:	fa5f fc8c 	uxtb.w	ip, ip
9001ffca:	fb1e fe04 	smulbb	lr, lr, r4
9001ffce:	fb01 2100 	mla	r1, r1, r0, r2
9001ffd2:	10da      	asrs	r2, r3, #3
9001ffd4:	fb1c fc04 	smulbb	ip, ip, r4
9001ffd8:	00db      	lsls	r3, r3, #3
9001ffda:	b289      	uxth	r1, r1
9001ffdc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001ffe0:	b2db      	uxtb	r3, r3
9001ffe2:	fb02 e200 	mla	r2, r2, r0, lr
9001ffe6:	fb03 c300 	mla	r3, r3, r0, ip
9001ffea:	b292      	uxth	r2, r2
9001ffec:	fa1f fc83 	uxth.w	ip, r3
9001fff0:	1c4b      	adds	r3, r1, #1
9001fff2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001fff6:	f10c 0301 	add.w	r3, ip, #1
9001fffa:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9001fffe:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90020002:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020006:	430b      	orrs	r3, r1
90020008:	1c51      	adds	r1, r2, #1
9002000a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002000e:	0952      	lsrs	r2, r2, #5
90020010:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020014:	4313      	orrs	r3, r2
90020016:	803b      	strh	r3, [r7, #0]
90020018:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002001a:	3702      	adds	r7, #2
9002001c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002001e:	441a      	add	r2, r3
90020020:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020022:	441d      	add	r5, r3
90020024:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90020026:	9229      	str	r2, [sp, #164]	; 0xa4
90020028:	3b01      	subs	r3, #1
9002002a:	931a      	str	r3, [sp, #104]	; 0x68
9002002c:	e694      	b.n	9001fd58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002002e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90020030:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020032:	441c      	add	r4, r3
90020034:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020036:	441d      	add	r5, r3
90020038:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002003a:	9429      	str	r4, [sp, #164]	; 0xa4
9002003c:	3b01      	subs	r3, #1
9002003e:	9309      	str	r3, [sp, #36]	; 0x24
90020040:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90020042:	3302      	adds	r3, #2
90020044:	930c      	str	r3, [sp, #48]	; 0x30
90020046:	e667      	b.n	9001fd18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90020048:	d024      	beq.n	90020094 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
9002004a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002004c:	982b      	ldr	r0, [sp, #172]	; 0xac
9002004e:	3b01      	subs	r3, #1
90020050:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020052:	fb00 4003 	mla	r0, r0, r3, r4
90020056:	1400      	asrs	r0, r0, #16
90020058:	f53f ae7b 	bmi.w	9001fd52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002005c:	3901      	subs	r1, #1
9002005e:	4288      	cmp	r0, r1
90020060:	f6bf ae77 	bge.w	9001fd52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020064:	992c      	ldr	r1, [sp, #176]	; 0xb0
90020066:	fb01 5303 	mla	r3, r1, r3, r5
9002006a:	141b      	asrs	r3, r3, #16
9002006c:	f53f ae71 	bmi.w	9001fd52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020070:	3a01      	subs	r2, #1
90020072:	4293      	cmp	r3, r2
90020074:	f6bf ae6d 	bge.w	9001fd52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90020078:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9002007c:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
90020080:	f1bb 0f00 	cmp.w	fp, #0
90020084:	dc70      	bgt.n	90020168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90020086:	9b09      	ldr	r3, [sp, #36]	; 0x24
90020088:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002008c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9002008e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020092:	930c      	str	r3, [sp, #48]	; 0x30
90020094:	9b19      	ldr	r3, [sp, #100]	; 0x64
90020096:	2b00      	cmp	r3, #0
90020098:	f340 81be 	ble.w	90020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002009c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900200a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900200a2:	ee30 0a04 	vadd.f32	s0, s0, s8
900200a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900200aa:	eef0 6a62 	vmov.f32	s13, s5
900200ae:	eec7 7a00 	vdiv.f32	s15, s14, s0
900200b2:	ee31 1a05 	vadd.f32	s2, s2, s10
900200b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900200ba:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
900200be:	eef0 6a43 	vmov.f32	s13, s6
900200c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900200c6:	ee16 5a90 	vmov	r5, s13
900200ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
900200ce:	ee61 7a27 	vmul.f32	s15, s2, s15
900200d2:	ee77 2a62 	vsub.f32	s5, s14, s5
900200d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900200da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900200de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900200e2:	ee12 2a90 	vmov	r2, s5
900200e6:	eef0 2a47 	vmov.f32	s5, s14
900200ea:	fb92 f3f3 	sdiv	r3, r2, r3
900200ee:	ee13 2a10 	vmov	r2, s6
900200f2:	932b      	str	r3, [sp, #172]	; 0xac
900200f4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900200f6:	eeb0 3a67 	vmov.f32	s6, s15
900200fa:	fb92 f3f3 	sdiv	r3, r2, r3
900200fe:	932c      	str	r3, [sp, #176]	; 0xb0
90020100:	9b19      	ldr	r3, [sp, #100]	; 0x64
90020102:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90020104:	3b01      	subs	r3, #1
90020106:	9319      	str	r3, [sp, #100]	; 0x64
90020108:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002010a:	bf08      	it	eq
9002010c:	4613      	moveq	r3, r2
9002010e:	9309      	str	r3, [sp, #36]	; 0x24
90020110:	e5f4      	b.n	9001fcfc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020112:	2900      	cmp	r1, #0
90020114:	f43f ae66 	beq.w	9001fde4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020118:	f818 0000 	ldrb.w	r0, [r8, r0]
9002011c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020120:	900a      	str	r0, [sp, #40]	; 0x28
90020122:	0e00      	lsrs	r0, r0, #24
90020124:	9013      	str	r0, [sp, #76]	; 0x4c
90020126:	e65d      	b.n	9001fde4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020128:	f113 0801 	adds.w	r8, r3, #1
9002012c:	f53f af74 	bmi.w	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020130:	4540      	cmp	r0, r8
90020132:	f6ff af71 	blt.w	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020136:	f11c 0801 	adds.w	r8, ip, #1
9002013a:	f53f af6d 	bmi.w	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002013e:	45c6      	cmp	lr, r8
90020140:	f6ff af6a 	blt.w	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020144:	9c1c      	ldr	r4, [sp, #112]	; 0x70
90020146:	b200      	sxth	r0, r0
90020148:	9302      	str	r3, [sp, #8]
9002014a:	fa0f f38e 	sxth.w	r3, lr
9002014e:	9000      	str	r0, [sp, #0]
90020150:	9301      	str	r3, [sp, #4]
90020152:	4633      	mov	r3, r6
90020154:	981d      	ldr	r0, [sp, #116]	; 0x74
90020156:	e9cd 1405 	strd	r1, r4, [sp, #20]
9002015a:	e9cd c203 	strd	ip, r2, [sp, #12]
9002015e:	4639      	mov	r1, r7
90020160:	9a12      	ldr	r2, [sp, #72]	; 0x48
90020162:	f7ff fc63 	bl	9001fa2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90020166:	e757      	b.n	90020018 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020168:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002016a:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002016e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
90020170:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020174:	9b30      	ldr	r3, [sp, #192]	; 0xc0
90020176:	1427      	asrs	r7, r4, #16
90020178:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002017a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002017e:	142b      	asrs	r3, r5, #16
90020180:	fb01 7303 	mla	r3, r1, r3, r7
90020184:	18e7      	adds	r7, r4, r3
90020186:	5ce3      	ldrb	r3, [r4, r3]
90020188:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002018c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020190:	2a00      	cmp	r2, #0
90020192:	f000 8137 	beq.w	90020404 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90020196:	f897 e001 	ldrb.w	lr, [r7, #1]
9002019a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002019e:	9410      	str	r4, [sp, #64]	; 0x40
900201a0:	0e24      	lsrs	r4, r4, #24
900201a2:	9417      	str	r4, [sp, #92]	; 0x5c
900201a4:	b170      	cbz	r0, 900201c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
900201a6:	eb07 0e01 	add.w	lr, r7, r1
900201aa:	5c79      	ldrb	r1, [r7, r1]
900201ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900201b0:	910b      	str	r1, [sp, #44]	; 0x2c
900201b2:	0e09      	lsrs	r1, r1, #24
900201b4:	9114      	str	r1, [sp, #80]	; 0x50
900201b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
900201ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900201be:	9111      	str	r1, [sp, #68]	; 0x44
900201c0:	0e09      	lsrs	r1, r1, #24
900201c2:	9118      	str	r1, [sp, #96]	; 0x60
900201c4:	b292      	uxth	r2, r2
900201c6:	9917      	ldr	r1, [sp, #92]	; 0x5c
900201c8:	b280      	uxth	r0, r0
900201ca:	9c14      	ldr	r4, [sp, #80]	; 0x50
900201cc:	fb02 f800 	mul.w	r8, r2, r0
900201d0:	0112      	lsls	r2, r2, #4
900201d2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900201d6:	eba2 0e08 	sub.w	lr, r2, r8
900201da:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900201de:	b280      	uxth	r0, r0
900201e0:	fa1f fe8e 	uxth.w	lr, lr
900201e4:	1a12      	subs	r2, r2, r0
900201e6:	fb0e f101 	mul.w	r1, lr, r1
900201ea:	b292      	uxth	r2, r2
900201ec:	fb02 110c 	mla	r1, r2, ip, r1
900201f0:	fb00 1104 	mla	r1, r0, r4, r1
900201f4:	9c18      	ldr	r4, [sp, #96]	; 0x60
900201f6:	fb08 1104 	mla	r1, r8, r4, r1
900201fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
900201fe:	2900      	cmp	r1, #0
90020200:	f000 80f5 	beq.w	900203ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90020204:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020208:	d019      	beq.n	9002023e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002020a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002020e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020212:	fb0c fa0a 	mul.w	sl, ip, sl
90020216:	fb0c fc03 	mul.w	ip, ip, r3
9002021a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002021e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020222:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020226:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002022a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002022e:	4453      	add	r3, sl
90020230:	0a3f      	lsrs	r7, r7, #8
90020232:	0a1b      	lsrs	r3, r3, #8
90020234:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020238:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002023c:	433b      	orrs	r3, r7
9002023e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
90020240:	2cff      	cmp	r4, #255	; 0xff
90020242:	d020      	beq.n	90020286 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90020244:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020246:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002024a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002024c:	4367      	muls	r7, r4
9002024e:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020250:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020254:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020258:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9002025a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002025e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020262:	fb04 fa0a 	mul.w	sl, r4, sl
90020266:	44bc      	add	ip, r7
90020268:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002026c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020270:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020274:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020278:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002027c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020280:	ea4c 040a 	orr.w	r4, ip, sl
90020284:	9410      	str	r4, [sp, #64]	; 0x40
90020286:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020288:	2cff      	cmp	r4, #255	; 0xff
9002028a:	d020      	beq.n	900202ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
9002028c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002028e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020292:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020294:	4367      	muls	r7, r4
90020296:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020298:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002029c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900202a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
900202a2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900202a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900202aa:	fb04 fa0a 	mul.w	sl, r4, sl
900202ae:	44bc      	add	ip, r7
900202b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900202b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900202b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900202bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900202c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900202c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900202c8:	ea4c 040a 	orr.w	r4, ip, sl
900202cc:	940b      	str	r4, [sp, #44]	; 0x2c
900202ce:	9c18      	ldr	r4, [sp, #96]	; 0x60
900202d0:	2cff      	cmp	r4, #255	; 0xff
900202d2:	d020      	beq.n	90020316 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
900202d4:	9c11      	ldr	r4, [sp, #68]	; 0x44
900202d6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900202da:	9c18      	ldr	r4, [sp, #96]	; 0x60
900202dc:	4367      	muls	r7, r4
900202de:	9c11      	ldr	r4, [sp, #68]	; 0x44
900202e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900202e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900202e8:	9c18      	ldr	r4, [sp, #96]	; 0x60
900202ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900202ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900202f2:	fb04 fa0a 	mul.w	sl, r4, sl
900202f6:	44bc      	add	ip, r7
900202f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900202fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020300:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020304:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020308:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002030c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020310:	ea4c 040a 	orr.w	r4, ip, sl
90020314:	9411      	str	r4, [sp, #68]	; 0x44
90020316:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020318:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002031c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020320:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020324:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020326:	fb0e f707 	mul.w	r7, lr, r7
9002032a:	fb02 770c 	mla	r7, r2, ip, r7
9002032e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020332:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020334:	fb00 770c 	mla	r7, r0, ip, r7
90020338:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9002033c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002033e:	fb08 770c 	mla	r7, r8, ip, r7
90020342:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020346:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020348:	fb0e fe0c 	mul.w	lr, lr, ip
9002034c:	0a3f      	lsrs	r7, r7, #8
9002034e:	fb02 e303 	mla	r3, r2, r3, lr
90020352:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90020354:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020358:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
9002035c:	9a11      	ldr	r2, [sp, #68]	; 0x44
9002035e:	fb00 330a 	mla	r3, r0, sl, r3
90020362:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
90020366:	f8b9 0000 	ldrh.w	r0, [r9]
9002036a:	fb08 3c0c 	mla	ip, r8, ip, r3
9002036e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90020370:	1202      	asrs	r2, r0, #8
90020372:	434b      	muls	r3, r1
90020374:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020378:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002037c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020380:	1c59      	adds	r1, r3, #1
90020382:	ea47 070c 	orr.w	r7, r7, ip
90020386:	eb01 2113 	add.w	r1, r1, r3, lsr #8
9002038a:	0c3b      	lsrs	r3, r7, #16
9002038c:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90020390:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90020394:	b2ff      	uxtb	r7, r7
90020396:	fb13 f304 	smulbb	r3, r3, r4
9002039a:	b2c9      	uxtb	r1, r1
9002039c:	fb1c fc04 	smulbb	ip, ip, r4
900203a0:	fb02 3201 	mla	r2, r2, r1, r3
900203a4:	10c3      	asrs	r3, r0, #3
900203a6:	fb17 f704 	smulbb	r7, r7, r4
900203aa:	00c0      	lsls	r0, r0, #3
900203ac:	b292      	uxth	r2, r2
900203ae:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900203b2:	b2c0      	uxtb	r0, r0
900203b4:	fb03 c301 	mla	r3, r3, r1, ip
900203b8:	f102 0c01 	add.w	ip, r2, #1
900203bc:	fb00 7001 	mla	r0, r0, r1, r7
900203c0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
900203c4:	b280      	uxth	r0, r0
900203c6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
900203ca:	b29b      	uxth	r3, r3
900203cc:	1c42      	adds	r2, r0, #1
900203ce:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900203d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900203d6:	ea42 020c 	orr.w	r2, r2, ip
900203da:	f103 0c01 	add.w	ip, r3, #1
900203de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900203e2:	095b      	lsrs	r3, r3, #5
900203e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900203e8:	431a      	orrs	r2, r3
900203ea:	f8a9 2000 	strh.w	r2, [r9]
900203ee:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900203f0:	f109 0902 	add.w	r9, r9, #2
900203f4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900203f6:	f10b 3bff 	add.w	fp, fp, #4294967295
900203fa:	441a      	add	r2, r3
900203fc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900203fe:	9229      	str	r2, [sp, #164]	; 0xa4
90020400:	441d      	add	r5, r3
90020402:	e63d      	b.n	90020080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90020404:	2800      	cmp	r0, #0
90020406:	f43f aedd 	beq.w	900201c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002040a:	5c79      	ldrb	r1, [r7, r1]
9002040c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020410:	910b      	str	r1, [sp, #44]	; 0x2c
90020412:	0e09      	lsrs	r1, r1, #24
90020414:	9114      	str	r1, [sp, #80]	; 0x50
90020416:	e6d5      	b.n	900201c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90020418:	b01f      	add	sp, #124	; 0x7c
9002041a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002041e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002041e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020422:	b089      	sub	sp, #36	; 0x24
90020424:	9101      	str	r1, [sp, #4]
90020426:	9801      	ldr	r0, [sp, #4]
90020428:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002042c:	8800      	ldrh	r0, [r0, #0]
9002042e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
90020432:	1206      	asrs	r6, r0, #8
90020434:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90020438:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
9002043c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
90020440:	9602      	str	r6, [sp, #8]
90020442:	10c6      	asrs	r6, r0, #3
90020444:	00c0      	lsls	r0, r0, #3
90020446:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002044a:	b2c0      	uxtb	r0, r0
9002044c:	9603      	str	r6, [sp, #12]
9002044e:	9004      	str	r0, [sp, #16]
90020450:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
90020454:	fb07 100c 	mla	r0, r7, ip, r1
90020458:	2f00      	cmp	r7, #0
9002045a:	eb02 0e00 	add.w	lr, r2, r0
9002045e:	f2c0 810a 	blt.w	90020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020462:	45b8      	cmp	r8, r7
90020464:	f340 8107 	ble.w	90020676 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90020468:	2900      	cmp	r1, #0
9002046a:	f2c0 8102 	blt.w	90020672 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
9002046e:	458c      	cmp	ip, r1
90020470:	f340 80ff 	ble.w	90020672 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90020474:	5c12      	ldrb	r2, [r2, r0]
90020476:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9002047a:	1c4a      	adds	r2, r1, #1
9002047c:	f100 80fe 	bmi.w	9002067c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90020480:	4594      	cmp	ip, r2
90020482:	f340 80fb 	ble.w	9002067c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90020486:	2d00      	cmp	r5, #0
90020488:	f000 80fa 	beq.w	90020680 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
9002048c:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020490:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90020494:	3701      	adds	r7, #1
90020496:	f100 80f7 	bmi.w	90020688 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002049a:	45b8      	cmp	r8, r7
9002049c:	f340 80f4 	ble.w	90020688 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
900204a0:	2c00      	cmp	r4, #0
900204a2:	f000 80f4 	beq.w	9002068e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
900204a6:	2900      	cmp	r1, #0
900204a8:	eb0e 020c 	add.w	r2, lr, ip
900204ac:	f2c0 80ea 	blt.w	90020684 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900204b0:	458c      	cmp	ip, r1
900204b2:	f340 80e7 	ble.w	90020684 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
900204b6:	f81e 700c 	ldrb.w	r7, [lr, ip]
900204ba:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
900204be:	3101      	adds	r1, #1
900204c0:	f100 80e8 	bmi.w	90020694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900204c4:	458c      	cmp	ip, r1
900204c6:	f340 80e5 	ble.w	90020694 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
900204ca:	2d00      	cmp	r5, #0
900204cc:	f000 80e4 	beq.w	90020698 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
900204d0:	7852      	ldrb	r2, [r2, #1]
900204d2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
900204d6:	0e0b      	lsrs	r3, r1, #24
900204d8:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
900204dc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
900204e0:	9300      	str	r3, [sp, #0]
900204e2:	b2a4      	uxth	r4, r4
900204e4:	b2ab      	uxth	r3, r5
900204e6:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
900204ea:	ea4f 6b16 	mov.w	fp, r6, lsr #24
900204ee:	fb03 f904 	mul.w	r9, r3, r4
900204f2:	011b      	lsls	r3, r3, #4
900204f4:	fb0a f505 	mul.w	r5, sl, r5
900204f8:	ea4f 6817 	mov.w	r8, r7, lsr #24
900204fc:	eba3 0e09 	sub.w	lr, r3, r9
90020500:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90020504:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90020508:	0a28      	lsrs	r0, r5, #8
9002050a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
9002050e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020512:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020516:	fb0a f303 	mul.w	r3, sl, r3
9002051a:	fb08 f707 	mul.w	r7, r8, r7
9002051e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90020522:	4405      	add	r5, r0
90020524:	fb08 fc0c 	mul.w	ip, r8, ip
90020528:	b2a4      	uxth	r4, r4
9002052a:	0a2d      	lsrs	r5, r5, #8
9002052c:	fa1f fe8e 	uxth.w	lr, lr
90020530:	1b12      	subs	r2, r2, r4
90020532:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
90020536:	b292      	uxth	r2, r2
90020538:	9005      	str	r0, [sp, #20]
9002053a:	f503 7080 	add.w	r0, r3, #256	; 0x100
9002053e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90020542:	ea4f 201c 	mov.w	r0, ip, lsr #8
90020546:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002054a:	0a1b      	lsrs	r3, r3, #8
9002054c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020550:	9306      	str	r3, [sp, #24]
90020552:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
90020556:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002055a:	4460      	add	r0, ip
9002055c:	fb0b f303 	mul.w	r3, fp, r3
90020560:	fb0b f606 	mul.w	r6, fp, r6
90020564:	0a00      	lsrs	r0, r0, #8
90020566:	0a1d      	lsrs	r5, r3, #8
90020568:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
9002056c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020570:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020574:	441d      	add	r5, r3
90020576:	f506 7380 	add.w	r3, r6, #256	; 0x100
9002057a:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9002057e:	f507 7380 	add.w	r3, r7, #256	; 0x100
90020582:	0a2d      	lsrs	r5, r5, #8
90020584:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90020588:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
9002058c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020590:	0a36      	lsrs	r6, r6, #8
90020592:	0a1b      	lsrs	r3, r3, #8
90020594:	fb05 f50e 	mul.w	r5, r5, lr
90020598:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002059c:	9307      	str	r3, [sp, #28]
9002059e:	0e0b      	lsrs	r3, r1, #24
900205a0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900205a4:	fb0e f606 	mul.w	r6, lr, r6
900205a8:	435f      	muls	r7, r3
900205aa:	4359      	muls	r1, r3
900205ac:	9b05      	ldr	r3, [sp, #20]
900205ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900205b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900205b6:	fb03 5502 	mla	r5, r3, r2, r5
900205ba:	9b06      	ldr	r3, [sp, #24]
900205bc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900205c0:	fb0e fe0b 	mul.w	lr, lr, fp
900205c4:	44bc      	add	ip, r7
900205c6:	f501 7780 	add.w	r7, r1, #256	; 0x100
900205ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900205ce:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900205d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900205d6:	0a09      	lsrs	r1, r1, #8
900205d8:	fb0c 5509 	mla	r5, ip, r9, r5
900205dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900205e0:	fb00 5504 	mla	r5, r0, r4, r5
900205e4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
900205e8:	9b07      	ldr	r3, [sp, #28]
900205ea:	fb02 6000 	mla	r0, r2, r0, r6
900205ee:	0a2d      	lsrs	r5, r5, #8
900205f0:	fb02 e20a 	mla	r2, r2, sl, lr
900205f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900205f8:	fb09 0001 	mla	r0, r9, r1, r0
900205fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020600:	fb04 0003 	mla	r0, r4, r3, r0
90020604:	9b00      	ldr	r3, [sp, #0]
90020606:	fb04 2408 	mla	r4, r4, r8, r2
9002060a:	9a04      	ldr	r2, [sp, #16]
9002060c:	0a00      	lsrs	r0, r0, #8
9002060e:	fb09 4903 	mla	r9, r9, r3, r4
90020612:	9b02      	ldr	r3, [sp, #8]
90020614:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90020618:	ea6f 2929 	mvn.w	r9, r9, asr #8
9002061c:	4305      	orrs	r5, r0
9002061e:	fa5f f989 	uxtb.w	r9, r9
90020622:	fb03 f109 	mul.w	r1, r3, r9
90020626:	9b03      	ldr	r3, [sp, #12]
90020628:	fb03 f309 	mul.w	r3, r3, r9
9002062c:	fb02 f909 	mul.w	r9, r2, r9
90020630:	1c4a      	adds	r2, r1, #1
90020632:	1c58      	adds	r0, r3, #1
90020634:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020638:	eb00 2013 	add.w	r0, r0, r3, lsr #8
9002063c:	0c2a      	lsrs	r2, r5, #16
9002063e:	0a2b      	lsrs	r3, r5, #8
90020640:	eb02 2211 	add.w	r2, r2, r1, lsr #8
90020644:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020648:	0212      	lsls	r2, r2, #8
9002064a:	00db      	lsls	r3, r3, #3
9002064c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90020650:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020654:	4313      	orrs	r3, r2
90020656:	f109 0201 	add.w	r2, r9, #1
9002065a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
9002065e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
90020662:	f3c5 05c4 	ubfx	r5, r5, #3, #5
90020666:	431d      	orrs	r5, r3
90020668:	9b01      	ldr	r3, [sp, #4]
9002066a:	801d      	strh	r5, [r3, #0]
9002066c:	b009      	add	sp, #36	; 0x24
9002066e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020672:	2000      	movs	r0, #0
90020674:	e701      	b.n	9002047a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
90020676:	2600      	movs	r6, #0
90020678:	4630      	mov	r0, r6
9002067a:	e70b      	b.n	90020494 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002067c:	2600      	movs	r6, #0
9002067e:	e709      	b.n	90020494 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90020680:	462e      	mov	r6, r5
90020682:	e707      	b.n	90020494 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90020684:	2700      	movs	r7, #0
90020686:	e71a      	b.n	900204be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90020688:	2100      	movs	r1, #0
9002068a:	460f      	mov	r7, r1
9002068c:	e723      	b.n	900204d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002068e:	4621      	mov	r1, r4
90020690:	4627      	mov	r7, r4
90020692:	e720      	b.n	900204d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020694:	2100      	movs	r1, #0
90020696:	e71e      	b.n	900204d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020698:	4629      	mov	r1, r5
9002069a:	e71c      	b.n	900204d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

9002069c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002069c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900206a0:	b09b      	sub	sp, #108	; 0x6c
900206a2:	9218      	str	r2, [sp, #96]	; 0x60
900206a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900206a6:	9019      	str	r0, [sp, #100]	; 0x64
900206a8:	9116      	str	r1, [sp, #88]	; 0x58
900206aa:	6850      	ldr	r0, [r2, #4]
900206ac:	9307      	str	r3, [sp, #28]
900206ae:	6812      	ldr	r2, [r2, #0]
900206b0:	9d26      	ldr	r5, [sp, #152]	; 0x98
900206b2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
900206b6:	fb00 1303 	mla	r3, r0, r3, r1
900206ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900206be:	930a      	str	r3, [sp, #40]	; 0x28
900206c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900206c2:	681b      	ldr	r3, [r3, #0]
900206c4:	930f      	str	r3, [sp, #60]	; 0x3c
900206c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900206c8:	685e      	ldr	r6, [r3, #4]
900206ca:	3604      	adds	r6, #4
900206cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
900206ce:	2b00      	cmp	r3, #0
900206d0:	dc03      	bgt.n	900206da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900206d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900206d4:	2b00      	cmp	r3, #0
900206d6:	f340 8373 	ble.w	90020dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
900206da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900206dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900206e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900206e4:	1e48      	subs	r0, r1, #1
900206e6:	1e57      	subs	r7, r2, #1
900206e8:	9b07      	ldr	r3, [sp, #28]
900206ea:	2b00      	cmp	r3, #0
900206ec:	f340 818f 	ble.w	90020a0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
900206f0:	9c25      	ldr	r4, [sp, #148]	; 0x94
900206f2:	142b      	asrs	r3, r5, #16
900206f4:	ea5f 4c24 	movs.w	ip, r4, asr #16
900206f8:	d406      	bmi.n	90020708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900206fa:	4584      	cmp	ip, r0
900206fc:	da04      	bge.n	90020708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900206fe:	2b00      	cmp	r3, #0
90020700:	db02      	blt.n	90020708 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020702:	42bb      	cmp	r3, r7
90020704:	f2c0 8184 	blt.w	90020a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90020708:	f11c 0c01 	adds.w	ip, ip, #1
9002070c:	f100 8172 	bmi.w	900209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020710:	4561      	cmp	r1, ip
90020712:	f2c0 816f 	blt.w	900209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020716:	3301      	adds	r3, #1
90020718:	f100 816c 	bmi.w	900209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002071c:	429a      	cmp	r2, r3
9002071e:	f2c0 8169 	blt.w	900209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020722:	9b07      	ldr	r3, [sp, #28]
90020724:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90020726:	9317      	str	r3, [sp, #92]	; 0x5c
90020728:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002072a:	2b00      	cmp	r3, #0
9002072c:	f340 818e 	ble.w	90020a4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
90020730:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020732:	ea4f 4c25 	mov.w	ip, r5, asr #16
90020736:	f3c5 3003 	ubfx	r0, r5, #12, #4
9002073a:	f3c3 3203 	ubfx	r2, r3, #12, #4
9002073e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020740:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
90020744:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020746:	141b      	asrs	r3, r3, #16
90020748:	f100 81d1 	bmi.w	90020aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002074c:	f101 38ff 	add.w	r8, r1, #4294967295
90020750:	4543      	cmp	r3, r8
90020752:	f280 81cc 	bge.w	90020aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020756:	f1bc 0f00 	cmp.w	ip, #0
9002075a:	f2c0 81c8 	blt.w	90020aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002075e:	f10e 38ff 	add.w	r8, lr, #4294967295
90020762:	45c4      	cmp	ip, r8
90020764:	f280 81c3 	bge.w	90020aee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90020768:	b209      	sxth	r1, r1
9002076a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002076c:	fb0c 3301 	mla	r3, ip, r1, r3
90020770:	eb04 0803 	add.w	r8, r4, r3
90020774:	5ce3      	ldrb	r3, [r4, r3]
90020776:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9002077a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9002077e:	2a00      	cmp	r2, #0
90020780:	f000 81aa 	beq.w	90020ad8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
90020784:	f898 c001 	ldrb.w	ip, [r8, #1]
90020788:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9002078c:	940b      	str	r4, [sp, #44]	; 0x2c
9002078e:	0e24      	lsrs	r4, r4, #24
90020790:	9412      	str	r4, [sp, #72]	; 0x48
90020792:	b178      	cbz	r0, 900207b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020794:	eb08 0c01 	add.w	ip, r8, r1
90020798:	f818 1001 	ldrb.w	r1, [r8, r1]
9002079c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900207a0:	9108      	str	r1, [sp, #32]
900207a2:	0e09      	lsrs	r1, r1, #24
900207a4:	9110      	str	r1, [sp, #64]	; 0x40
900207a6:	f89c 1001 	ldrb.w	r1, [ip, #1]
900207aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
900207ae:	910c      	str	r1, [sp, #48]	; 0x30
900207b0:	0e09      	lsrs	r1, r1, #24
900207b2:	9113      	str	r1, [sp, #76]	; 0x4c
900207b4:	b292      	uxth	r2, r2
900207b6:	9912      	ldr	r1, [sp, #72]	; 0x48
900207b8:	b280      	uxth	r0, r0
900207ba:	9c10      	ldr	r4, [sp, #64]	; 0x40
900207bc:	fb02 f900 	mul.w	r9, r2, r0
900207c0:	0112      	lsls	r2, r2, #4
900207c2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
900207c6:	eba2 0809 	sub.w	r8, r2, r9
900207ca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
900207ce:	b280      	uxth	r0, r0
900207d0:	fa1f f888 	uxth.w	r8, r8
900207d4:	1a12      	subs	r2, r2, r0
900207d6:	fb08 f101 	mul.w	r1, r8, r1
900207da:	b292      	uxth	r2, r2
900207dc:	fb02 110e 	mla	r1, r2, lr, r1
900207e0:	fb00 1104 	mla	r1, r0, r4, r1
900207e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900207e6:	fb09 1104 	mla	r1, r9, r4, r1
900207ea:	f3c1 2107 	ubfx	r1, r1, #8, #8
900207ee:	2900      	cmp	r1, #0
900207f0:	f000 80f5 	beq.w	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900207f4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900207f8:	d01b      	beq.n	90020832 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900207fa:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900207fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020802:	fb0e fa0a 	mul.w	sl, lr, sl
90020806:	fb0e fe03 	mul.w	lr, lr, r3
9002080a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002080e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020812:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90020816:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002081a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002081e:	4453      	add	r3, sl
90020820:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020824:	0a1b      	lsrs	r3, r3, #8
90020826:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002082a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002082e:	ea43 030c 	orr.w	r3, r3, ip
90020832:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020834:	2cff      	cmp	r4, #255	; 0xff
90020836:	d021      	beq.n	9002087c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
90020838:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002083a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9002083e:	9c12      	ldr	r4, [sp, #72]	; 0x48
90020840:	fb04 fb0b 	mul.w	fp, r4, fp
90020844:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020846:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002084a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002084c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020850:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020854:	fb04 fa0a 	mul.w	sl, r4, sl
90020858:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002085c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020860:	44de      	add	lr, fp
90020862:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020866:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002086a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002086e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020872:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020876:	ea4e 040a 	orr.w	r4, lr, sl
9002087a:	940b      	str	r4, [sp, #44]	; 0x2c
9002087c:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002087e:	2cff      	cmp	r4, #255	; 0xff
90020880:	d021      	beq.n	900208c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020882:	9c08      	ldr	r4, [sp, #32]
90020884:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020888:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002088a:	fb04 fb0b 	mul.w	fp, r4, fp
9002088e:	9c08      	ldr	r4, [sp, #32]
90020890:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020894:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020896:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002089a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002089e:	fb04 fa0a 	mul.w	sl, r4, sl
900208a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900208a6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900208aa:	44de      	add	lr, fp
900208ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900208b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900208b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900208b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900208bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900208c0:	ea4e 040a 	orr.w	r4, lr, sl
900208c4:	9408      	str	r4, [sp, #32]
900208c6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900208c8:	2cff      	cmp	r4, #255	; 0xff
900208ca:	d021      	beq.n	90020910 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
900208cc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900208ce:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900208d2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900208d4:	fb04 fb0b 	mul.w	fp, r4, fp
900208d8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900208da:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900208de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
900208e0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900208e4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900208e8:	fb04 fa0a 	mul.w	sl, r4, sl
900208ec:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900208f0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900208f4:	44de      	add	lr, fp
900208f6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900208fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900208fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020902:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020906:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002090a:	ea4e 040a 	orr.w	r4, lr, sl
9002090e:	940c      	str	r4, [sp, #48]	; 0x30
90020910:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020912:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90020916:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9002091a:	43c9      	mvns	r1, r1
9002091c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020920:	9c08      	ldr	r4, [sp, #32]
90020922:	fb08 fc0c 	mul.w	ip, r8, ip
90020926:	fb02 cc0e 	mla	ip, r2, lr, ip
9002092a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
9002092e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020930:	fb00 cc0e 	mla	ip, r0, lr, ip
90020934:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020938:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002093a:	fb09 cc0e 	mla	ip, r9, lr, ip
9002093e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90020942:	fb08 f80e 	mul.w	r8, r8, lr
90020946:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002094a:	fa5f fe81 	uxtb.w	lr, r1
9002094e:	fb02 8303 	mla	r3, r2, r3, r8
90020952:	9a08      	ldr	r2, [sp, #32]
90020954:	f8b7 8000 	ldrh.w	r8, [r7]
90020958:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002095c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90020960:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90020962:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90020966:	fb00 330a 	mla	r3, r0, sl, r3
9002096a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
9002096e:	ea4f 2228 	mov.w	r2, r8, asr #8
90020972:	fb09 3900 	mla	r9, r9, r0, r3
90020976:	ea4f 00e8 	mov.w	r0, r8, asr #3
9002097a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9002097e:	b2c9      	uxtb	r1, r1
90020980:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020984:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90020988:	fb02 f20e 	mul.w	r2, r2, lr
9002098c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90020990:	fb00 f00e 	mul.w	r0, r0, lr
90020994:	1c53      	adds	r3, r2, #1
90020996:	fb01 f10e 	mul.w	r1, r1, lr
9002099a:	ea4c 0c09 	orr.w	ip, ip, r9
9002099e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
900209a2:	ea4f 431c 	mov.w	r3, ip, lsr #16
900209a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900209aa:	4a60      	ldr	r2, [pc, #384]	; (90020b2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
900209ac:	b2db      	uxtb	r3, r3
900209ae:	ea02 2203 	and.w	r2, r2, r3, lsl #8
900209b2:	1c43      	adds	r3, r0, #1
900209b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900209b8:	ea4f 231c 	mov.w	r3, ip, lsr #8
900209bc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900209c0:	00db      	lsls	r3, r3, #3
900209c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900209c6:	4313      	orrs	r3, r2
900209c8:	1c4a      	adds	r2, r1, #1
900209ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900209ce:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900209d2:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
900209d6:	ea4c 0c03 	orr.w	ip, ip, r3
900209da:	f8a7 c000 	strh.w	ip, [r7]
900209de:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900209e0:	3702      	adds	r7, #2
900209e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900209e4:	441a      	add	r2, r3
900209e6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900209e8:	441d      	add	r5, r3
900209ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900209ec:	9225      	str	r2, [sp, #148]	; 0x94
900209ee:	3b01      	subs	r3, #1
900209f0:	9317      	str	r3, [sp, #92]	; 0x5c
900209f2:	e699      	b.n	90020728 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900209f4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900209f6:	9c25      	ldr	r4, [sp, #148]	; 0x94
900209f8:	441c      	add	r4, r3
900209fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900209fc:	441d      	add	r5, r3
900209fe:	9b07      	ldr	r3, [sp, #28]
90020a00:	9425      	str	r4, [sp, #148]	; 0x94
90020a02:	3b01      	subs	r3, #1
90020a04:	9307      	str	r3, [sp, #28]
90020a06:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020a08:	3302      	adds	r3, #2
90020a0a:	930a      	str	r3, [sp, #40]	; 0x28
90020a0c:	e66c      	b.n	900206e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020a0e:	d024      	beq.n	90020a5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90020a10:	9b07      	ldr	r3, [sp, #28]
90020a12:	9827      	ldr	r0, [sp, #156]	; 0x9c
90020a14:	3b01      	subs	r3, #1
90020a16:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020a18:	fb00 4003 	mla	r0, r0, r3, r4
90020a1c:	1400      	asrs	r0, r0, #16
90020a1e:	f53f ae80 	bmi.w	90020722 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020a22:	3901      	subs	r1, #1
90020a24:	4288      	cmp	r0, r1
90020a26:	f6bf ae7c 	bge.w	90020722 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020a2a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90020a2c:	fb01 5303 	mla	r3, r1, r3, r5
90020a30:	141b      	asrs	r3, r3, #16
90020a32:	f53f ae76 	bmi.w	90020722 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020a36:	3a01      	subs	r2, #1
90020a38:	4293      	cmp	r3, r2
90020a3a:	f6bf ae72 	bge.w	90020722 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020a3e:	f8dd b01c 	ldr.w	fp, [sp, #28]
90020a42:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90020a46:	f1bb 0f00 	cmp.w	fp, #0
90020a4a:	dc71      	bgt.n	90020b30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90020a4c:	9b07      	ldr	r3, [sp, #28]
90020a4e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020a52:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020a54:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020a58:	930a      	str	r3, [sp, #40]	; 0x28
90020a5a:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020a5c:	2b00      	cmp	r3, #0
90020a5e:	f340 81af 	ble.w	90020dc0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020a62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020a66:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020a68:	ee30 0a04 	vadd.f32	s0, s0, s8
90020a6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020a70:	eef0 6a62 	vmov.f32	s13, s5
90020a74:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020a78:	ee31 1a05 	vadd.f32	s2, s2, s10
90020a7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020a80:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90020a84:	eef0 6a43 	vmov.f32	s13, s6
90020a88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020a8c:	ee16 5a90 	vmov	r5, s13
90020a90:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020a94:	ee61 7a27 	vmul.f32	s15, s2, s15
90020a98:	ee77 2a62 	vsub.f32	s5, s14, s5
90020a9c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020aa0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020aa4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020aa8:	ee12 2a90 	vmov	r2, s5
90020aac:	eef0 2a47 	vmov.f32	s5, s14
90020ab0:	fb92 f3f3 	sdiv	r3, r2, r3
90020ab4:	ee13 2a10 	vmov	r2, s6
90020ab8:	9327      	str	r3, [sp, #156]	; 0x9c
90020aba:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020abc:	eeb0 3a67 	vmov.f32	s6, s15
90020ac0:	fb92 f3f3 	sdiv	r3, r2, r3
90020ac4:	9328      	str	r3, [sp, #160]	; 0xa0
90020ac6:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020ac8:	9a18      	ldr	r2, [sp, #96]	; 0x60
90020aca:	3b01      	subs	r3, #1
90020acc:	9316      	str	r3, [sp, #88]	; 0x58
90020ace:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020ad0:	bf08      	it	eq
90020ad2:	4613      	moveq	r3, r2
90020ad4:	9307      	str	r3, [sp, #28]
90020ad6:	e5f9      	b.n	900206cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020ad8:	2800      	cmp	r0, #0
90020ada:	f43f ae6b 	beq.w	900207b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020ade:	f818 1001 	ldrb.w	r1, [r8, r1]
90020ae2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020ae6:	9108      	str	r1, [sp, #32]
90020ae8:	0e09      	lsrs	r1, r1, #24
90020aea:	9110      	str	r1, [sp, #64]	; 0x40
90020aec:	e662      	b.n	900207b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020aee:	f113 0801 	adds.w	r8, r3, #1
90020af2:	f53f af74 	bmi.w	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020af6:	4541      	cmp	r1, r8
90020af8:	f6ff af71 	blt.w	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020afc:	f11c 0801 	adds.w	r8, ip, #1
90020b00:	f53f af6d 	bmi.w	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020b04:	45c6      	cmp	lr, r8
90020b06:	f6ff af6a 	blt.w	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020b0a:	b209      	sxth	r1, r1
90020b0c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90020b10:	fa0f f38e 	sxth.w	r3, lr
90020b14:	9100      	str	r1, [sp, #0]
90020b16:	4639      	mov	r1, r7
90020b18:	9301      	str	r3, [sp, #4]
90020b1a:	4633      	mov	r3, r6
90020b1c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90020b20:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020b22:	9819      	ldr	r0, [sp, #100]	; 0x64
90020b24:	f7ff fc7b 	bl	9002041e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90020b28:	e759      	b.n	900209de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020b2a:	bf00      	nop
90020b2c:	fffff800 	.word	0xfffff800
90020b30:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020b32:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020b36:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020b38:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020b3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020b3e:	1427      	asrs	r7, r4, #16
90020b40:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90020b42:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020b46:	142b      	asrs	r3, r5, #16
90020b48:	fb01 7303 	mla	r3, r1, r3, r7
90020b4c:	18e7      	adds	r7, r4, r3
90020b4e:	5ce3      	ldrb	r3, [r4, r3]
90020b50:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020b54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020b58:	2a00      	cmp	r2, #0
90020b5a:	f000 8127 	beq.w	90020dac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90020b5e:	f897 e001 	ldrb.w	lr, [r7, #1]
90020b62:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020b66:	940d      	str	r4, [sp, #52]	; 0x34
90020b68:	0e24      	lsrs	r4, r4, #24
90020b6a:	9414      	str	r4, [sp, #80]	; 0x50
90020b6c:	b170      	cbz	r0, 90020b8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020b6e:	eb07 0e01 	add.w	lr, r7, r1
90020b72:	5c79      	ldrb	r1, [r7, r1]
90020b74:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020b78:	9109      	str	r1, [sp, #36]	; 0x24
90020b7a:	0e09      	lsrs	r1, r1, #24
90020b7c:	9111      	str	r1, [sp, #68]	; 0x44
90020b7e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90020b82:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020b86:	910e      	str	r1, [sp, #56]	; 0x38
90020b88:	0e09      	lsrs	r1, r1, #24
90020b8a:	9115      	str	r1, [sp, #84]	; 0x54
90020b8c:	b292      	uxth	r2, r2
90020b8e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020b90:	b280      	uxth	r0, r0
90020b92:	fb02 f800 	mul.w	r8, r2, r0
90020b96:	0112      	lsls	r2, r2, #4
90020b98:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020b9c:	eba2 0e08 	sub.w	lr, r2, r8
90020ba0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90020ba4:	9a14      	ldr	r2, [sp, #80]	; 0x50
90020ba6:	b280      	uxth	r0, r0
90020ba8:	fa1f fe8e 	uxth.w	lr, lr
90020bac:	1a09      	subs	r1, r1, r0
90020bae:	fb0e f202 	mul.w	r2, lr, r2
90020bb2:	b289      	uxth	r1, r1
90020bb4:	fb01 220c 	mla	r2, r1, ip, r2
90020bb8:	fb00 2204 	mla	r2, r0, r4, r2
90020bbc:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020bbe:	fb08 2204 	mla	r2, r8, r4, r2
90020bc2:	f3c2 2207 	ubfx	r2, r2, #8, #8
90020bc6:	2a00      	cmp	r2, #0
90020bc8:	f000 80e5 	beq.w	90020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90020bcc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020bd0:	d019      	beq.n	90020c06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90020bd2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90020bd6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020bda:	fb0c fa0a 	mul.w	sl, ip, sl
90020bde:	fb0c fc03 	mul.w	ip, ip, r3
90020be2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020be6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020bea:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020bee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020bf2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020bf6:	4453      	add	r3, sl
90020bf8:	0a3f      	lsrs	r7, r7, #8
90020bfa:	0a1b      	lsrs	r3, r3, #8
90020bfc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020c00:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020c04:	433b      	orrs	r3, r7
90020c06:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020c08:	2cff      	cmp	r4, #255	; 0xff
90020c0a:	d020      	beq.n	90020c4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90020c0c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020c0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020c12:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020c14:	4367      	muls	r7, r4
90020c16:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020c18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020c1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020c20:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020c22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020c26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020c2a:	fb04 fa0a 	mul.w	sl, r4, sl
90020c2e:	44bc      	add	ip, r7
90020c30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020c34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020c38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020c3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020c40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020c44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020c48:	ea4c 040a 	orr.w	r4, ip, sl
90020c4c:	940d      	str	r4, [sp, #52]	; 0x34
90020c4e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020c50:	2cff      	cmp	r4, #255	; 0xff
90020c52:	d020      	beq.n	90020c96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90020c54:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020c56:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020c5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020c5c:	4367      	muls	r7, r4
90020c5e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020c60:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020c64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020c68:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020c6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020c6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020c72:	fb04 fa0a 	mul.w	sl, r4, sl
90020c76:	44bc      	add	ip, r7
90020c78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020c7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020c80:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020c84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020c88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020c8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020c90:	ea4c 040a 	orr.w	r4, ip, sl
90020c94:	9409      	str	r4, [sp, #36]	; 0x24
90020c96:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020c98:	2cff      	cmp	r4, #255	; 0xff
90020c9a:	d020      	beq.n	90020cde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90020c9c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020c9e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020ca2:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020ca4:	4367      	muls	r7, r4
90020ca6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020ca8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020cac:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020cb0:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020cb2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020cb6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020cba:	fb04 fa0a 	mul.w	sl, r4, sl
90020cbe:	44bc      	add	ip, r7
90020cc0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020cc4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020cc8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020ccc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020cd0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020cd4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020cd8:	ea4c 040a 	orr.w	r4, ip, sl
90020cdc:	940e      	str	r4, [sp, #56]	; 0x38
90020cde:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020ce0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90020ce4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020ce8:	43d2      	mvns	r2, r2
90020cea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020cee:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020cf0:	b2d2      	uxtb	r2, r2
90020cf2:	fb0e f707 	mul.w	r7, lr, r7
90020cf6:	fb01 770c 	mla	r7, r1, ip, r7
90020cfa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020cfe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020d00:	fb00 770c 	mla	r7, r0, ip, r7
90020d04:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020d08:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020d0a:	fb08 770c 	mla	r7, r8, ip, r7
90020d0e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020d12:	fb0e fe0c 	mul.w	lr, lr, ip
90020d16:	0a3f      	lsrs	r7, r7, #8
90020d18:	fb01 e303 	mla	r3, r1, r3, lr
90020d1c:	9909      	ldr	r1, [sp, #36]	; 0x24
90020d1e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020d22:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90020d26:	990e      	ldr	r1, [sp, #56]	; 0x38
90020d28:	fb00 330a 	mla	r3, r0, sl, r3
90020d2c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90020d30:	fb08 3c0c 	mla	ip, r8, ip, r3
90020d34:	f8b9 3000 	ldrh.w	r3, [r9]
90020d38:	1218      	asrs	r0, r3, #8
90020d3a:	10d9      	asrs	r1, r3, #3
90020d3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020d40:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020d44:	00db      	lsls	r3, r3, #3
90020d46:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020d4a:	4350      	muls	r0, r2
90020d4c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020d50:	b2db      	uxtb	r3, r3
90020d52:	4351      	muls	r1, r2
90020d54:	ea47 070c 	orr.w	r7, r7, ip
90020d58:	4353      	muls	r3, r2
90020d5a:	1c42      	adds	r2, r0, #1
90020d5c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020d60:	0c3a      	lsrs	r2, r7, #16
90020d62:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020d66:	4a18      	ldr	r2, [pc, #96]	; (90020dc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90020d68:	b2c0      	uxtb	r0, r0
90020d6a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90020d6e:	1c4a      	adds	r2, r1, #1
90020d70:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020d74:	0a3a      	lsrs	r2, r7, #8
90020d76:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020d7a:	00c9      	lsls	r1, r1, #3
90020d7c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020d80:	4301      	orrs	r1, r0
90020d82:	1c58      	adds	r0, r3, #1
90020d84:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90020d88:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90020d8c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90020d90:	4308      	orrs	r0, r1
90020d92:	f8a9 0000 	strh.w	r0, [r9]
90020d96:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020d98:	f109 0902 	add.w	r9, r9, #2
90020d9c:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020d9e:	f10b 3bff 	add.w	fp, fp, #4294967295
90020da2:	441a      	add	r2, r3
90020da4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020da6:	9225      	str	r2, [sp, #148]	; 0x94
90020da8:	441d      	add	r5, r3
90020daa:	e64c      	b.n	90020a46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90020dac:	2800      	cmp	r0, #0
90020dae:	f43f aeed 	beq.w	90020b8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020db2:	5c79      	ldrb	r1, [r7, r1]
90020db4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020db8:	9109      	str	r1, [sp, #36]	; 0x24
90020dba:	0e09      	lsrs	r1, r1, #24
90020dbc:	9111      	str	r1, [sp, #68]	; 0x44
90020dbe:	e6e5      	b.n	90020b8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020dc0:	b01b      	add	sp, #108	; 0x6c
90020dc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020dc6:	bf00      	nop
90020dc8:	fffff800 	.word	0xfffff800

90020dcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90020dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020dd0:	b085      	sub	sp, #20
90020dd2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90020dd6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90020dda:	2800      	cmp	r0, #0
90020ddc:	9103      	str	r1, [sp, #12]
90020dde:	fb00 7406 	mla	r4, r0, r6, r7
90020de2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90020de6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90020dea:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90020dee:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90020df2:	eb03 0904 	add.w	r9, r3, r4
90020df6:	9501      	str	r5, [sp, #4]
90020df8:	f2c0 8150 	blt.w	9002109c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020dfc:	4583      	cmp	fp, r0
90020dfe:	f340 814d 	ble.w	9002109c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020e02:	2f00      	cmp	r7, #0
90020e04:	f2c0 8146 	blt.w	90021094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020e08:	42be      	cmp	r6, r7
90020e0a:	f340 8143 	ble.w	90021094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020e0e:	f813 c004 	ldrb.w	ip, [r3, r4]
90020e12:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90020e16:	f64f 041f 	movw	r4, #63519	; 0xf81f
90020e1a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90020e1e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90020e22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020e26:	4355      	muls	r5, r2
90020e28:	fb0c f203 	mul.w	r2, ip, r3
90020e2c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90020e30:	f605 0501 	addw	r5, r5, #2049	; 0x801
90020e34:	441d      	add	r5, r3
90020e36:	f102 0320 	add.w	r3, r2, #32
90020e3a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020e3e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90020e42:	0a1b      	lsrs	r3, r3, #8
90020e44:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020e48:	431c      	orrs	r4, r3
90020e4a:	1c7b      	adds	r3, r7, #1
90020e4c:	f100 812b 	bmi.w	900210a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020e50:	429e      	cmp	r6, r3
90020e52:	f340 8128 	ble.w	900210a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020e56:	2900      	cmp	r1, #0
90020e58:	f000 8128 	beq.w	900210ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90020e5c:	9a01      	ldr	r2, [sp, #4]
90020e5e:	f899 3001 	ldrb.w	r3, [r9, #1]
90020e62:	8855      	ldrh	r5, [r2, #2]
90020e64:	ea4f 08e3 	mov.w	r8, r3, asr #3
90020e68:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90020e6c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020e70:	fb08 f802 	mul.w	r8, r8, r2
90020e74:	f64f 021f 	movw	r2, #63519	; 0xf81f
90020e78:	435d      	muls	r5, r3
90020e7a:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90020e7e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90020e82:	44d0      	add	r8, sl
90020e84:	f105 0a20 	add.w	sl, r5, #32
90020e88:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90020e8c:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90020e90:	0a2d      	lsrs	r5, r5, #8
90020e92:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020e96:	432a      	orrs	r2, r5
90020e98:	3001      	adds	r0, #1
90020e9a:	f100 810d 	bmi.w	900210b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90020e9e:	4583      	cmp	fp, r0
90020ea0:	f340 810a 	ble.w	900210b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90020ea4:	f1be 0f00 	cmp.w	lr, #0
90020ea8:	f000 810b 	beq.w	900210c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90020eac:	2f00      	cmp	r7, #0
90020eae:	f2c0 8100 	blt.w	900210b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90020eb2:	42be      	cmp	r6, r7
90020eb4:	f340 80fd 	ble.w	900210b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90020eb8:	9801      	ldr	r0, [sp, #4]
90020eba:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90020ebe:	f819 5006 	ldrb.w	r5, [r9, r6]
90020ec2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90020ec6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90020eca:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90020ece:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90020ed2:	fb0a fa00 	mul.w	sl, sl, r0
90020ed6:	fb05 f808 	mul.w	r8, r5, r8
90020eda:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90020ede:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90020ee2:	4482      	add	sl, r0
90020ee4:	f108 0020 	add.w	r0, r8, #32
90020ee8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90020eec:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90020ef0:	0a00      	lsrs	r0, r0, #8
90020ef2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020ef6:	ea4b 0b00 	orr.w	fp, fp, r0
90020efa:	3701      	adds	r7, #1
90020efc:	f100 80e6 	bmi.w	900210cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90020f00:	42be      	cmp	r6, r7
90020f02:	f340 80e3 	ble.w	900210cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90020f06:	2900      	cmp	r1, #0
90020f08:	f000 80e3 	beq.w	900210d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
90020f0c:	3601      	adds	r6, #1
90020f0e:	9801      	ldr	r0, [sp, #4]
90020f10:	f819 7006 	ldrb.w	r7, [r9, r6]
90020f14:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90020f18:	ea4f 09e7 	mov.w	r9, r7, asr #3
90020f1c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90020f20:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020f24:	fb09 f906 	mul.w	r9, r9, r6
90020f28:	fb07 f800 	mul.w	r8, r7, r0
90020f2c:	f64f 001f 	movw	r0, #63519	; 0xf81f
90020f30:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90020f34:	f609 0901 	addw	r9, r9, #2049	; 0x801
90020f38:	44d1      	add	r9, sl
90020f3a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90020f3e:	f108 0020 	add.w	r0, r8, #32
90020f42:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90020f46:	0a00      	lsrs	r0, r0, #8
90020f48:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90020f4c:	4330      	orrs	r0, r6
90020f4e:	b28e      	uxth	r6, r1
90020f50:	fa1f f98e 	uxth.w	r9, lr
90020f54:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90020f58:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90020f5c:	fb06 f809 	mul.w	r8, r6, r9
90020f60:	0136      	lsls	r6, r6, #4
90020f62:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020f66:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90020f6a:	9601      	str	r6, [sp, #4]
90020f6c:	ea4a 0404 	orr.w	r4, sl, r4
90020f70:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90020f74:	fa1f f689 	uxth.w	r6, r9
90020f78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90020f7c:	fb11 f90e 	smulbb	r9, r1, lr
90020f80:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020f84:	9602      	str	r6, [sp, #8]
90020f86:	4626      	mov	r6, r4
90020f88:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90020f8c:	f1ce 0410 	rsb	r4, lr, #16
90020f90:	ea4a 0202 	orr.w	r2, sl, r2
90020f94:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90020f98:	1a64      	subs	r4, r4, r1
90020f9a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90020f9e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90020fa2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90020fa6:	434a      	muls	r2, r1
90020fa8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90020fac:	ea4a 0000 	orr.w	r0, sl, r0
90020fb0:	9903      	ldr	r1, [sp, #12]
90020fb2:	fb04 2406 	mla	r4, r4, r6, r2
90020fb6:	9e02      	ldr	r6, [sp, #8]
90020fb8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90020fbc:	fb09 4200 	mla	r2, r9, r0, r4
90020fc0:	ea4f 440b 	mov.w	r4, fp, lsl #16
90020fc4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90020fc8:	8808      	ldrh	r0, [r1, #0]
90020fca:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90020fce:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90020fd2:	ea44 0b0b 	orr.w	fp, r4, fp
90020fd6:	9c01      	ldr	r4, [sp, #4]
90020fd8:	b289      	uxth	r1, r1
90020fda:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
90020fde:	fb0e 2e0b 	mla	lr, lr, fp, r2
90020fe2:	1ba4      	subs	r4, r4, r6
90020fe4:	9e01      	ldr	r6, [sp, #4]
90020fe6:	ea4f 525e 	mov.w	r2, lr, lsr #21
90020fea:	eba6 0608 	sub.w	r6, r6, r8
90020fee:	b2a4      	uxth	r4, r4
90020ff0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90020ff4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020ff8:	b2b6      	uxth	r6, r6
90020ffa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90020ffe:	4373      	muls	r3, r6
90021000:	ea42 0e0e 	orr.w	lr, r2, lr
90021004:	fb0c 3304 	mla	r3, ip, r4, r3
90021008:	9c02      	ldr	r4, [sp, #8]
9002100a:	fa1f f28e 	uxth.w	r2, lr
9002100e:	fb04 3505 	mla	r5, r4, r5, r3
90021012:	10d4      	asrs	r4, r2, #3
90021014:	fb08 5707 	mla	r7, r8, r7, r5
90021018:	1215      	asrs	r5, r2, #8
9002101a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002101e:	00d2      	lsls	r2, r2, #3
90021020:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021024:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021028:	b2d2      	uxtb	r2, r2
9002102a:	434f      	muls	r7, r1
9002102c:	1c7b      	adds	r3, r7, #1
9002102e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90021032:	1203      	asrs	r3, r0, #8
90021034:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90021038:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
9002103c:	b2ff      	uxtb	r7, r7
9002103e:	fb13 f307 	smulbb	r3, r3, r7
90021042:	fb05 3501 	mla	r5, r5, r1, r3
90021046:	10c3      	asrs	r3, r0, #3
90021048:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002104c:	b2ad      	uxth	r5, r5
9002104e:	fb13 f307 	smulbb	r3, r3, r7
90021052:	fb04 3401 	mla	r4, r4, r1, r3
90021056:	00c3      	lsls	r3, r0, #3
90021058:	b2db      	uxtb	r3, r3
9002105a:	b2a4      	uxth	r4, r4
9002105c:	fb13 f307 	smulbb	r3, r3, r7
90021060:	fb02 3101 	mla	r1, r2, r1, r3
90021064:	1c6b      	adds	r3, r5, #1
90021066:	1c62      	adds	r2, r4, #1
90021068:	b289      	uxth	r1, r1
9002106a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002106e:	1c4b      	adds	r3, r1, #1
90021070:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90021074:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021078:	9a03      	ldr	r2, [sp, #12]
9002107a:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9002107e:	0964      	lsrs	r4, r4, #5
90021080:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021084:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90021088:	432b      	orrs	r3, r5
9002108a:	4323      	orrs	r3, r4
9002108c:	8013      	strh	r3, [r2, #0]
9002108e:	b005      	add	sp, #20
90021090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021094:	f04f 0c00 	mov.w	ip, #0
90021098:	4664      	mov	r4, ip
9002109a:	e6d6      	b.n	90020e4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
9002109c:	2300      	movs	r3, #0
9002109e:	469c      	mov	ip, r3
900210a0:	461a      	mov	r2, r3
900210a2:	461c      	mov	r4, r3
900210a4:	e6f8      	b.n	90020e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900210a6:	2300      	movs	r3, #0
900210a8:	461a      	mov	r2, r3
900210aa:	e6f5      	b.n	90020e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900210ac:	460b      	mov	r3, r1
900210ae:	460a      	mov	r2, r1
900210b0:	e6f2      	b.n	90020e98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
900210b2:	2500      	movs	r5, #0
900210b4:	46ab      	mov	fp, r5
900210b6:	e720      	b.n	90020efa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
900210b8:	2700      	movs	r7, #0
900210ba:	463d      	mov	r5, r7
900210bc:	4638      	mov	r0, r7
900210be:	46bb      	mov	fp, r7
900210c0:	e745      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900210c2:	4677      	mov	r7, lr
900210c4:	4675      	mov	r5, lr
900210c6:	4670      	mov	r0, lr
900210c8:	46f3      	mov	fp, lr
900210ca:	e740      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900210cc:	2700      	movs	r7, #0
900210ce:	4638      	mov	r0, r7
900210d0:	e73d      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
900210d2:	460f      	mov	r7, r1
900210d4:	4608      	mov	r0, r1
900210d6:	e73a      	b.n	90020f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

900210d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900210d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900210dc:	b097      	sub	sp, #92	; 0x5c
900210de:	9214      	str	r2, [sp, #80]	; 0x50
900210e0:	9308      	str	r3, [sp, #32]
900210e2:	9a25      	ldr	r2, [sp, #148]	; 0x94
900210e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900210e8:	9015      	str	r0, [sp, #84]	; 0x54
900210ea:	9312      	str	r3, [sp, #72]	; 0x48
900210ec:	6850      	ldr	r0, [r2, #4]
900210ee:	9111      	str	r1, [sp, #68]	; 0x44
900210f0:	6812      	ldr	r2, [r2, #0]
900210f2:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900210f6:	fb00 1303 	mla	r3, r0, r3, r1
900210fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900210fe:	9309      	str	r3, [sp, #36]	; 0x24
90021100:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021102:	681b      	ldr	r3, [r3, #0]
90021104:	930b      	str	r3, [sp, #44]	; 0x2c
90021106:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021108:	685b      	ldr	r3, [r3, #4]
9002110a:	930c      	str	r3, [sp, #48]	; 0x30
9002110c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90021110:	930a      	str	r3, [sp, #40]	; 0x28
90021112:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021114:	2b00      	cmp	r3, #0
90021116:	dc03      	bgt.n	90021120 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90021118:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002111a:	2b00      	cmp	r3, #0
9002111c:	f340 83cd 	ble.w	900218ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90021120:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021122:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021126:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002112a:	1e48      	subs	r0, r1, #1
9002112c:	1e55      	subs	r5, r2, #1
9002112e:	9b08      	ldr	r3, [sp, #32]
90021130:	2b00      	cmp	r3, #0
90021132:	f340 81a5 	ble.w	90021480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90021136:	9e21      	ldr	r6, [sp, #132]	; 0x84
90021138:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002113a:	1436      	asrs	r6, r6, #16
9002113c:	ea4f 4323 	mov.w	r3, r3, asr #16
90021140:	d406      	bmi.n	90021150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021142:	4286      	cmp	r6, r0
90021144:	da04      	bge.n	90021150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90021146:	2b00      	cmp	r3, #0
90021148:	db02      	blt.n	90021150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002114a:	42ab      	cmp	r3, r5
9002114c:	f2c0 8199 	blt.w	90021482 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90021150:	3601      	adds	r6, #1
90021152:	f100 8186 	bmi.w	90021462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021156:	42b1      	cmp	r1, r6
90021158:	f2c0 8183 	blt.w	90021462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9002115c:	3301      	adds	r3, #1
9002115e:	f100 8180 	bmi.w	90021462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021162:	429a      	cmp	r2, r3
90021164:	f2c0 817d 	blt.w	90021462 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021168:	9b08      	ldr	r3, [sp, #32]
9002116a:	f64f 061f 	movw	r6, #63519	; 0xf81f
9002116e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90021170:	9313      	str	r3, [sp, #76]	; 0x4c
90021172:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021174:	2b00      	cmp	r3, #0
90021176:	f340 81a6 	ble.w	900214c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
9002117a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002117c:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002117e:	1418      	asrs	r0, r3, #16
90021180:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021182:	142d      	asrs	r5, r5, #16
90021184:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021188:	9b22      	ldr	r3, [sp, #136]	; 0x88
9002118a:	f3c3 3c03 	ubfx	ip, r3, #12, #4
9002118e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021190:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021194:	f100 81fa 	bmi.w	9002158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021198:	f102 3eff 	add.w	lr, r2, #4294967295
9002119c:	4575      	cmp	r5, lr
9002119e:	f280 81f5 	bge.w	9002158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900211a2:	2800      	cmp	r0, #0
900211a4:	f2c0 81f2 	blt.w	9002158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900211a8:	f103 3eff 	add.w	lr, r3, #4294967295
900211ac:	4570      	cmp	r0, lr
900211ae:	f280 81ed 	bge.w	9002158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900211b2:	b212      	sxth	r2, r2
900211b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900211b6:	fa1f fe81 	uxth.w	lr, r1
900211ba:	fb00 5002 	mla	r0, r0, r2, r5
900211be:	ea4f 150e 	mov.w	r5, lr, lsl #4
900211c2:	eb03 0a00 	add.w	sl, r3, r0
900211c6:	f813 9000 	ldrb.w	r9, [r3, r0]
900211ca:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
900211ce:	f89a 8001 	ldrb.w	r8, [sl, #1]
900211d2:	b29b      	uxth	r3, r3
900211d4:	f1bc 0f00 	cmp.w	ip, #0
900211d8:	f000 81bb 	beq.w	90021552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
900211dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
900211e0:	eb0a 0b02 	add.w	fp, sl, r2
900211e4:	fa1f fa8c 	uxth.w	sl, ip
900211e8:	940d      	str	r4, [sp, #52]	; 0x34
900211ea:	fb0a fe0e 	mul.w	lr, sl, lr
900211ee:	f89b 4001 	ldrb.w	r4, [fp, #1]
900211f2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
900211f6:	eba5 050e 	sub.w	r5, r5, lr
900211fa:	940e      	str	r4, [sp, #56]	; 0x38
900211fc:	fa1f fa8a 	uxth.w	sl, sl
90021200:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021202:	b2ad      	uxth	r5, r5
90021204:	eba3 030a 	sub.w	r3, r3, sl
90021208:	fb08 f505 	mul.w	r5, r8, r5
9002120c:	b29b      	uxth	r3, r3
9002120e:	fb09 5303 	mla	r3, r9, r3, r5
90021212:	fb0a 3304 	mla	r3, sl, r4, r3
90021216:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021218:	fb0e 3304 	mla	r3, lr, r4, r3
9002121c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021220:	2b00      	cmp	r3, #0
90021222:	f000 8111 	beq.w	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021226:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021228:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002122c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021230:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021234:	f000 8192 	beq.w	9002155c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90021238:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002123c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021240:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021244:	fb0a fe0e 	mul.w	lr, sl, lr
90021248:	fb09 f000 	mul.w	r0, r9, r0
9002124c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021250:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021254:	f100 0b20 	add.w	fp, r0, #32
90021258:	44ce      	add	lr, r9
9002125a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
9002125e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021262:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021266:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002126a:	ea4e 0909 	orr.w	r9, lr, r9
9002126e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021272:	8868      	ldrh	r0, [r5, #2]
90021274:	d019      	beq.n	900212aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90021276:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
9002127a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002127e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021282:	fb0a fe0e 	mul.w	lr, sl, lr
90021286:	fb08 f800 	mul.w	r8, r8, r0
9002128a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
9002128e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021292:	f108 0b20 	add.w	fp, r8, #32
90021296:	4486      	add	lr, r0
90021298:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002129c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900212a0:	0a00      	lsrs	r0, r0, #8
900212a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900212a6:	ea4e 0000 	orr.w	r0, lr, r0
900212aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
900212ae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900212b2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
900212b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900212ba:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900212be:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900212c2:	ea4e 0909 	orr.w	r9, lr, r9
900212c6:	ea4a 0000 	orr.w	r0, sl, r0
900212ca:	f1bc 0f00 	cmp.w	ip, #0
900212ce:	f000 8147 	beq.w	90021560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
900212d2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
900212d6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900212d8:	3a01      	subs	r2, #1
900212da:	2cff      	cmp	r4, #255	; 0xff
900212dc:	ea4f 0242 	mov.w	r2, r2, lsl #1
900212e0:	f102 0202 	add.w	r2, r2, #2
900212e4:	eb05 0e02 	add.w	lr, r5, r2
900212e8:	5aaa      	ldrh	r2, [r5, r2]
900212ea:	d018      	beq.n	9002131e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
900212ec:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
900212f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900212f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900212f8:	fb04 fa02 	mul.w	sl, r4, r2
900212fc:	fb08 f805 	mul.w	r8, r8, r5
90021300:	f10a 0520 	add.w	r5, sl, #32
90021304:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021308:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002130c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021310:	4442      	add	r2, r8
90021312:	0a2d      	lsrs	r5, r5, #8
90021314:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021318:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002131c:	432a      	orrs	r2, r5
9002131e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021320:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021324:	2cff      	cmp	r4, #255	; 0xff
90021326:	d01a      	beq.n	9002135e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90021328:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002132c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021330:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021334:	fb04 fa05 	mul.w	sl, r4, r5
90021338:	fb08 f80e 	mul.w	r8, r8, lr
9002133c:	f10a 0e20 	add.w	lr, sl, #32
90021340:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90021344:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021348:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
9002134c:	4445      	add	r5, r8
9002134e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021352:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021356:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
9002135a:	ea45 050e 	orr.w	r5, r5, lr
9002135e:	fb1c fe01 	smulbb	lr, ip, r1
90021362:	f1cc 0810 	rsb	r8, ip, #16
90021366:	ea4f 4a02 	mov.w	sl, r2, lsl #16
9002136a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002136e:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021372:	eba8 0801 	sub.w	r8, r8, r1
90021376:	ea4f 4b05 	mov.w	fp, r5, lsl #16
9002137a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002137e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90021382:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021386:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
9002138a:	ea4a 0202 	orr.w	r2, sl, r2
9002138e:	4341      	muls	r1, r0
90021390:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021394:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021398:	fb09 1108 	mla	r1, r9, r8, r1
9002139c:	ea4b 0505 	orr.w	r5, fp, r5
900213a0:	fb0c 1102 	mla	r1, ip, r2, r1
900213a4:	fb0e 1e05 	mla	lr, lr, r5, r1
900213a8:	ea4f 525e 	mov.w	r2, lr, lsr #21
900213ac:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
900213b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900213b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900213b8:	ea42 0e0e 	orr.w	lr, r2, lr
900213bc:	fa1f f28e 	uxth.w	r2, lr
900213c0:	2bff      	cmp	r3, #255	; 0xff
900213c2:	d103      	bne.n	900213cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900213c4:	9912      	ldr	r1, [sp, #72]	; 0x48
900213c6:	29ff      	cmp	r1, #255	; 0xff
900213c8:	f000 80de 	beq.w	90021588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
900213cc:	990a      	ldr	r1, [sp, #40]	; 0x28
900213ce:	1215      	asrs	r5, r2, #8
900213d0:	8838      	ldrh	r0, [r7, #0]
900213d2:	434b      	muls	r3, r1
900213d4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900213d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900213da:	f103 0c01 	add.w	ip, r3, #1
900213de:	eb0c 2323 	add.w	r3, ip, r3, asr #8
900213e2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900213e6:	fa5f fc83 	uxtb.w	ip, r3
900213ea:	1203      	asrs	r3, r0, #8
900213ec:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900213f0:	fb13 f30c 	smulbb	r3, r3, ip
900213f4:	fb05 3501 	mla	r5, r5, r1, r3
900213f8:	10c3      	asrs	r3, r0, #3
900213fa:	10d1      	asrs	r1, r2, #3
900213fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90021400:	00d2      	lsls	r2, r2, #3
90021402:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021406:	b2ad      	uxth	r5, r5
90021408:	fb13 f30c 	smulbb	r3, r3, ip
9002140c:	b2d2      	uxtb	r2, r2
9002140e:	fb01 3104 	mla	r1, r1, r4, r3
90021412:	00c3      	lsls	r3, r0, #3
90021414:	b2db      	uxtb	r3, r3
90021416:	b289      	uxth	r1, r1
90021418:	fb13 f30c 	smulbb	r3, r3, ip
9002141c:	fb02 3304 	mla	r3, r2, r4, r3
90021420:	b29a      	uxth	r2, r3
90021422:	1c6b      	adds	r3, r5, #1
90021424:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021428:	1c53      	adds	r3, r2, #1
9002142a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002142e:	1c4a      	adds	r2, r1, #1
90021430:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90021434:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90021438:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002143c:	0949      	lsrs	r1, r1, #5
9002143e:	432b      	orrs	r3, r5
90021440:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021444:	430b      	orrs	r3, r1
90021446:	803b      	strh	r3, [r7, #0]
90021448:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002144a:	3702      	adds	r7, #2
9002144c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9002144e:	4413      	add	r3, r2
90021450:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021452:	9321      	str	r3, [sp, #132]	; 0x84
90021454:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021456:	441a      	add	r2, r3
90021458:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002145a:	3b01      	subs	r3, #1
9002145c:	9222      	str	r2, [sp, #136]	; 0x88
9002145e:	9313      	str	r3, [sp, #76]	; 0x4c
90021460:	e687      	b.n	90021172 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021462:	9b21      	ldr	r3, [sp, #132]	; 0x84
90021464:	9e23      	ldr	r6, [sp, #140]	; 0x8c
90021466:	9c22      	ldr	r4, [sp, #136]	; 0x88
90021468:	4433      	add	r3, r6
9002146a:	9321      	str	r3, [sp, #132]	; 0x84
9002146c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002146e:	441c      	add	r4, r3
90021470:	9b08      	ldr	r3, [sp, #32]
90021472:	3b01      	subs	r3, #1
90021474:	9422      	str	r4, [sp, #136]	; 0x88
90021476:	9308      	str	r3, [sp, #32]
90021478:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002147a:	3302      	adds	r3, #2
9002147c:	9309      	str	r3, [sp, #36]	; 0x24
9002147e:	e656      	b.n	9002112e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90021480:	d028      	beq.n	900214d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021482:	9b08      	ldr	r3, [sp, #32]
90021484:	9823      	ldr	r0, [sp, #140]	; 0x8c
90021486:	3b01      	subs	r3, #1
90021488:	9d21      	ldr	r5, [sp, #132]	; 0x84
9002148a:	fb00 5003 	mla	r0, r0, r3, r5
9002148e:	1400      	asrs	r0, r0, #16
90021490:	f53f ae6a 	bmi.w	90021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021494:	3901      	subs	r1, #1
90021496:	4288      	cmp	r0, r1
90021498:	f6bf ae66 	bge.w	90021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002149c:	9924      	ldr	r1, [sp, #144]	; 0x90
9002149e:	9822      	ldr	r0, [sp, #136]	; 0x88
900214a0:	fb01 0303 	mla	r3, r1, r3, r0
900214a4:	141b      	asrs	r3, r3, #16
900214a6:	f53f ae5f 	bmi.w	90021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900214aa:	3a01      	subs	r2, #1
900214ac:	4293      	cmp	r3, r2
900214ae:	f6bf ae5b 	bge.w	90021168 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900214b2:	9b08      	ldr	r3, [sp, #32]
900214b4:	f64f 061f 	movw	r6, #63519	; 0xf81f
900214b8:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
900214bc:	9313      	str	r3, [sp, #76]	; 0x4c
900214be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900214c0:	2b00      	cmp	r3, #0
900214c2:	f300 8082 	bgt.w	900215ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
900214c6:	9b08      	ldr	r3, [sp, #32]
900214c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900214cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
900214ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900214d2:	9309      	str	r3, [sp, #36]	; 0x24
900214d4:	9b11      	ldr	r3, [sp, #68]	; 0x44
900214d6:	2b00      	cmp	r3, #0
900214d8:	f340 81ef 	ble.w	900218ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
900214dc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900214e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
900214e2:	ee30 0a04 	vadd.f32	s0, s0, s8
900214e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
900214ea:	eef0 6a62 	vmov.f32	s13, s5
900214ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
900214f2:	ee31 1a05 	vadd.f32	s2, s2, s10
900214f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900214fa:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
900214fe:	eef0 6a43 	vmov.f32	s13, s6
90021502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021506:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
9002150a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002150e:	ee61 7a27 	vmul.f32	s15, s2, s15
90021512:	ee77 2a62 	vsub.f32	s5, s14, s5
90021516:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002151a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002151e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021522:	ee12 2a90 	vmov	r2, s5
90021526:	eef0 2a47 	vmov.f32	s5, s14
9002152a:	fb92 f3f3 	sdiv	r3, r2, r3
9002152e:	ee13 2a10 	vmov	r2, s6
90021532:	9323      	str	r3, [sp, #140]	; 0x8c
90021534:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021536:	eeb0 3a67 	vmov.f32	s6, s15
9002153a:	fb92 f3f3 	sdiv	r3, r2, r3
9002153e:	9324      	str	r3, [sp, #144]	; 0x90
90021540:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021542:	9a14      	ldr	r2, [sp, #80]	; 0x50
90021544:	3b01      	subs	r3, #1
90021546:	9311      	str	r3, [sp, #68]	; 0x44
90021548:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002154a:	bf08      	it	eq
9002154c:	4613      	moveq	r3, r2
9002154e:	9308      	str	r3, [sp, #32]
90021550:	e5df      	b.n	90021112 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90021552:	fb08 f505 	mul.w	r5, r8, r5
90021556:	fb09 5303 	mla	r3, r9, r3, r5
9002155a:	e65f      	b.n	9002121c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
9002155c:	4681      	mov	r9, r0
9002155e:	e686      	b.n	9002126e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90021560:	f1c1 0210 	rsb	r2, r1, #16
90021564:	4341      	muls	r1, r0
90021566:	fb09 1902 	mla	r9, r9, r2, r1
9002156a:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002156e:	ea4f 5259 	mov.w	r2, r9, lsr #21
90021572:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021576:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002157a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002157e:	ea42 0909 	orr.w	r9, r2, r9
90021582:	fa1f f289 	uxth.w	r2, r9
90021586:	e71b      	b.n	900213c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90021588:	803a      	strh	r2, [r7, #0]
9002158a:	e75d      	b.n	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002158c:	f115 0e01 	adds.w	lr, r5, #1
90021590:	f53f af5a 	bmi.w	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021594:	4572      	cmp	r2, lr
90021596:	f6ff af57 	blt.w	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002159a:	f110 0e01 	adds.w	lr, r0, #1
9002159e:	f53f af53 	bmi.w	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900215a2:	4573      	cmp	r3, lr
900215a4:	f6ff af50 	blt.w	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900215a8:	9c12      	ldr	r4, [sp, #72]	; 0x48
900215aa:	b21b      	sxth	r3, r3
900215ac:	b212      	sxth	r2, r2
900215ae:	9502      	str	r5, [sp, #8]
900215b0:	9301      	str	r3, [sp, #4]
900215b2:	9200      	str	r2, [sp, #0]
900215b4:	e9cd 0103 	strd	r0, r1, [sp, #12]
900215b8:	e9cd c405 	strd	ip, r4, [sp, #20]
900215bc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
900215c0:	4639      	mov	r1, r7
900215c2:	9815      	ldr	r0, [sp, #84]	; 0x54
900215c4:	f7ff fc02 	bl	90020dcc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
900215c8:	e73e      	b.n	90021448 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900215ca:	9b21      	ldr	r3, [sp, #132]	; 0x84
900215cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
900215d0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900215d2:	f3c3 3503 	ubfx	r5, r3, #12, #4
900215d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900215d8:	fa1f fc82 	uxth.w	ip, r2
900215dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900215e0:	9b22      	ldr	r3, [sp, #136]	; 0x88
900215e2:	ea4f 100c 	mov.w	r0, ip, lsl #4
900215e6:	141f      	asrs	r7, r3, #16
900215e8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900215ea:	141b      	asrs	r3, r3, #16
900215ec:	fb01 3707 	mla	r7, r1, r7, r3
900215f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900215f2:	eb03 0a07 	add.w	sl, r3, r7
900215f6:	f813 9007 	ldrb.w	r9, [r3, r7]
900215fa:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900215fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021602:	b29b      	uxth	r3, r3
90021604:	2d00      	cmp	r5, #0
90021606:	f000 813d 	beq.w	90021884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002160a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002160e:	eb0a 0b01 	add.w	fp, sl, r1
90021612:	fa1f fa85 	uxth.w	sl, r5
90021616:	940f      	str	r4, [sp, #60]	; 0x3c
90021618:	fb0a fc0c 	mul.w	ip, sl, ip
9002161c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021620:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90021624:	eba0 000c 	sub.w	r0, r0, ip
90021628:	9410      	str	r4, [sp, #64]	; 0x40
9002162a:	fa1f fa8a 	uxth.w	sl, sl
9002162e:	b280      	uxth	r0, r0
90021630:	eba3 030a 	sub.w	r3, r3, sl
90021634:	fb08 f000 	mul.w	r0, r8, r0
90021638:	b29b      	uxth	r3, r3
9002163a:	fb09 0303 	mla	r3, r9, r3, r0
9002163e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021640:	fb0a 3300 	mla	r3, sl, r0, r3
90021644:	fb0c 3304 	mla	r3, ip, r4, r3
90021648:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002164c:	2b00      	cmp	r3, #0
9002164e:	f000 810b 	beq.w	90021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021652:	980b      	ldr	r0, [sp, #44]	; 0x2c
90021654:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021658:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9002165a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
9002165e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90021662:	f000 8114 	beq.w	9002188e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
90021666:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002166a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
9002166e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021672:	fb0a fc0c 	mul.w	ip, sl, ip
90021676:	fb09 f707 	mul.w	r7, r9, r7
9002167a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
9002167e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90021682:	f107 0b20 	add.w	fp, r7, #32
90021686:	44cc      	add	ip, r9
90021688:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
9002168c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021690:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021694:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021698:	ea4c 0909 	orr.w	r9, ip, r9
9002169c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900216a0:	8847      	ldrh	r7, [r0, #2]
900216a2:	d019      	beq.n	900216d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
900216a4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900216a8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900216ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900216b0:	fb0a fc0c 	mul.w	ip, sl, ip
900216b4:	fb08 f807 	mul.w	r8, r8, r7
900216b8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900216bc:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900216c0:	f108 0b20 	add.w	fp, r8, #32
900216c4:	44bc      	add	ip, r7
900216c6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900216ca:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900216ce:	0a3f      	lsrs	r7, r7, #8
900216d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900216d4:	ea4c 0707 	orr.w	r7, ip, r7
900216d8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
900216dc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900216e0:	ea4f 4a07 	mov.w	sl, r7, lsl #16
900216e4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900216e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900216ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900216f0:	ea4c 0909 	orr.w	r9, ip, r9
900216f4:	ea4a 0707 	orr.w	r7, sl, r7
900216f8:	2d00      	cmp	r5, #0
900216fa:	f000 80ca 	beq.w	90021892 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900216fe:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90021702:	3901      	subs	r1, #1
90021704:	0049      	lsls	r1, r1, #1
90021706:	3102      	adds	r1, #2
90021708:	eb00 0c01 	add.w	ip, r0, r1
9002170c:	5a41      	ldrh	r1, [r0, r1]
9002170e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021710:	28ff      	cmp	r0, #255	; 0xff
90021712:	d019      	beq.n	90021748 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90021714:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90021718:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002171a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002171e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021722:	fb04 fa01 	mul.w	sl, r4, r1
90021726:	fb08 f800 	mul.w	r8, r8, r0
9002172a:	f10a 0020 	add.w	r0, sl, #32
9002172e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90021732:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021736:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002173a:	4441      	add	r1, r8
9002173c:	0a00      	lsrs	r0, r0, #8
9002173e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90021742:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021746:	4301      	orrs	r1, r0
90021748:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002174a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
9002174e:	2cff      	cmp	r4, #255	; 0xff
90021750:	d01a      	beq.n	90021788 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
90021752:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
90021756:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002175a:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002175e:	fb04 fa00 	mul.w	sl, r4, r0
90021762:	fb08 f80c 	mul.w	r8, r8, ip
90021766:	f10a 0c20 	add.w	ip, sl, #32
9002176a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
9002176e:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021772:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90021776:	4440      	add	r0, r8
90021778:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002177c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90021780:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90021784:	ea40 000c 	orr.w	r0, r0, ip
90021788:	fb15 fc02 	smulbb	ip, r5, r2
9002178c:	f1c5 0810 	rsb	r8, r5, #16
90021790:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90021794:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021798:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002179c:	eba8 0802 	sub.w	r8, r8, r2
900217a0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900217a4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900217a8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900217ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900217b0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900217b4:	ea4a 0101 	orr.w	r1, sl, r1
900217b8:	437a      	muls	r2, r7
900217ba:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900217be:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900217c2:	fb09 2208 	mla	r2, r9, r8, r2
900217c6:	ea4b 0000 	orr.w	r0, fp, r0
900217ca:	fb05 2201 	mla	r2, r5, r1, r2
900217ce:	fb0c 2200 	mla	r2, ip, r0, r2
900217d2:	0d57      	lsrs	r7, r2, #21
900217d4:	0952      	lsrs	r2, r2, #5
900217d6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900217da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900217de:	433a      	orrs	r2, r7
900217e0:	2bff      	cmp	r3, #255	; 0xff
900217e2:	b292      	uxth	r2, r2
900217e4:	d102      	bne.n	900217ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
900217e6:	9912      	ldr	r1, [sp, #72]	; 0x48
900217e8:	29ff      	cmp	r1, #255	; 0xff
900217ea:	d063      	beq.n	900218b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
900217ec:	980a      	ldr	r0, [sp, #40]	; 0x28
900217ee:	1215      	asrs	r5, r2, #8
900217f0:	f8be 1000 	ldrh.w	r1, [lr]
900217f4:	4343      	muls	r3, r0
900217f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900217f8:	10cf      	asrs	r7, r1, #3
900217fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900217fe:	1c58      	adds	r0, r3, #1
90021800:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021804:	eb00 2323 	add.w	r3, r0, r3, asr #8
90021808:	1208      	asrs	r0, r1, #8
9002180a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002180e:	00c9      	lsls	r1, r1, #3
90021810:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021814:	b2db      	uxtb	r3, r3
90021816:	b2c9      	uxtb	r1, r1
90021818:	fb10 f003 	smulbb	r0, r0, r3
9002181c:	fb11 f103 	smulbb	r1, r1, r3
90021820:	fb05 0504 	mla	r5, r5, r4, r0
90021824:	10d0      	asrs	r0, r2, #3
90021826:	fb17 f703 	smulbb	r7, r7, r3
9002182a:	00d2      	lsls	r2, r2, #3
9002182c:	b2ad      	uxth	r5, r5
9002182e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021832:	b2d2      	uxtb	r2, r2
90021834:	fb00 7004 	mla	r0, r0, r4, r7
90021838:	1c6b      	adds	r3, r5, #1
9002183a:	fb02 1204 	mla	r2, r2, r4, r1
9002183e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021842:	b292      	uxth	r2, r2
90021844:	b280      	uxth	r0, r0
90021846:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9002184a:	1c57      	adds	r7, r2, #1
9002184c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90021850:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021854:	433d      	orrs	r5, r7
90021856:	1c47      	adds	r7, r0, #1
90021858:	eb07 2710 	add.w	r7, r7, r0, lsr #8
9002185c:	097f      	lsrs	r7, r7, #5
9002185e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021862:	433d      	orrs	r5, r7
90021864:	f8ae 5000 	strh.w	r5, [lr]
90021868:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002186a:	f10e 0e02 	add.w	lr, lr, #2
9002186e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
90021870:	4413      	add	r3, r2
90021872:	9a22      	ldr	r2, [sp, #136]	; 0x88
90021874:	9321      	str	r3, [sp, #132]	; 0x84
90021876:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021878:	441a      	add	r2, r3
9002187a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9002187c:	3b01      	subs	r3, #1
9002187e:	9222      	str	r2, [sp, #136]	; 0x88
90021880:	9313      	str	r3, [sp, #76]	; 0x4c
90021882:	e61c      	b.n	900214be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90021884:	fb08 f000 	mul.w	r0, r8, r0
90021888:	fb09 0303 	mla	r3, r9, r3, r0
9002188c:	e6dc      	b.n	90021648 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
9002188e:	46b9      	mov	r9, r7
90021890:	e704      	b.n	9002169c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90021892:	f1c2 0110 	rsb	r1, r2, #16
90021896:	437a      	muls	r2, r7
90021898:	fb09 2901 	mla	r9, r9, r1, r2
9002189c:	ea4f 0949 	mov.w	r9, r9, lsl #1
900218a0:	ea4f 5059 	mov.w	r0, r9, lsr #21
900218a4:	ea4f 1259 	mov.w	r2, r9, lsr #5
900218a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900218ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900218b0:	4302      	orrs	r2, r0
900218b2:	e795      	b.n	900217e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
900218b4:	f8ae 2000 	strh.w	r2, [lr]
900218b8:	e7d6      	b.n	90021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900218ba:	b017      	add	sp, #92	; 0x5c
900218bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900218c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
900218c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900218c4:	b085      	sub	sp, #20
900218c6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
900218ca:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
900218ce:	2800      	cmp	r0, #0
900218d0:	9103      	str	r1, [sp, #12]
900218d2:	fb00 7406 	mla	r4, r0, r6, r7
900218d6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
900218da:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
900218de:	eb03 0544 	add.w	r5, r3, r4, lsl #1
900218e2:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
900218e6:	eb02 0904 	add.w	r9, r2, r4
900218ea:	9501      	str	r5, [sp, #4]
900218ec:	f2c0 8141 	blt.w	90021b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900218f0:	4583      	cmp	fp, r0
900218f2:	f340 813e 	ble.w	90021b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
900218f6:	2f00      	cmp	r7, #0
900218f8:	f2c0 8137 	blt.w	90021b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900218fc:	42be      	cmp	r6, r7
900218fe:	f340 8134 	ble.w	90021b6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021902:	f812 c004 	ldrb.w	ip, [r2, r4]
90021906:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
9002190a:	f64f 041f 	movw	r4, #63519	; 0xf81f
9002190e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021912:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90021916:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002191a:	4355      	muls	r5, r2
9002191c:	fb0c f203 	mul.w	r2, ip, r3
90021920:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021924:	f605 0501 	addw	r5, r5, #2049	; 0x801
90021928:	441d      	add	r5, r3
9002192a:	f102 0320 	add.w	r3, r2, #32
9002192e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021932:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021936:	0a1b      	lsrs	r3, r3, #8
90021938:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002193c:	431c      	orrs	r4, r3
9002193e:	1c7b      	adds	r3, r7, #1
90021940:	f100 811c 	bmi.w	90021b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021944:	429e      	cmp	r6, r3
90021946:	f340 8119 	ble.w	90021b7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
9002194a:	2900      	cmp	r1, #0
9002194c:	f000 8119 	beq.w	90021b82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90021950:	9a01      	ldr	r2, [sp, #4]
90021952:	f899 3001 	ldrb.w	r3, [r9, #1]
90021956:	8855      	ldrh	r5, [r2, #2]
90021958:	ea4f 08e3 	mov.w	r8, r3, asr #3
9002195c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90021960:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021964:	fb08 f802 	mul.w	r8, r8, r2
90021968:	f64f 021f 	movw	r2, #63519	; 0xf81f
9002196c:	435d      	muls	r5, r3
9002196e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021972:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021976:	44d0      	add	r8, sl
90021978:	f105 0a20 	add.w	sl, r5, #32
9002197c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021980:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021984:	0a2d      	lsrs	r5, r5, #8
90021986:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002198a:	432a      	orrs	r2, r5
9002198c:	3001      	adds	r0, #1
9002198e:	f100 80fe 	bmi.w	90021b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021992:	4583      	cmp	fp, r0
90021994:	f340 80fb 	ble.w	90021b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021998:	f1be 0f00 	cmp.w	lr, #0
9002199c:	f000 80fc 	beq.w	90021b98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
900219a0:	2f00      	cmp	r7, #0
900219a2:	f2c0 80f1 	blt.w	90021b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
900219a6:	42be      	cmp	r6, r7
900219a8:	f340 80ee 	ble.w	90021b88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
900219ac:	9801      	ldr	r0, [sp, #4]
900219ae:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
900219b2:	f819 5006 	ldrb.w	r5, [r9, r6]
900219b6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
900219ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900219be:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
900219c2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
900219c6:	fb0a fa00 	mul.w	sl, sl, r0
900219ca:	fb05 f808 	mul.w	r8, r5, r8
900219ce:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
900219d2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
900219d6:	4482      	add	sl, r0
900219d8:	f108 0020 	add.w	r0, r8, #32
900219dc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900219e0:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
900219e4:	0a00      	lsrs	r0, r0, #8
900219e6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900219ea:	ea4b 0b00 	orr.w	fp, fp, r0
900219ee:	3701      	adds	r7, #1
900219f0:	f100 80d7 	bmi.w	90021ba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900219f4:	42be      	cmp	r6, r7
900219f6:	f340 80d4 	ble.w	90021ba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900219fa:	2900      	cmp	r1, #0
900219fc:	f000 80d4 	beq.w	90021ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90021a00:	3601      	adds	r6, #1
90021a02:	9801      	ldr	r0, [sp, #4]
90021a04:	f819 7006 	ldrb.w	r7, [r9, r6]
90021a08:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021a0c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90021a10:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90021a14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021a18:	fb09 f906 	mul.w	r9, r9, r6
90021a1c:	fb07 f800 	mul.w	r8, r7, r0
90021a20:	f64f 001f 	movw	r0, #63519	; 0xf81f
90021a24:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90021a28:	f609 0901 	addw	r9, r9, #2049	; 0x801
90021a2c:	44d1      	add	r9, sl
90021a2e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90021a32:	f108 0020 	add.w	r0, r8, #32
90021a36:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021a3a:	0a00      	lsrs	r0, r0, #8
90021a3c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021a40:	4330      	orrs	r0, r6
90021a42:	b28e      	uxth	r6, r1
90021a44:	fa1f f98e 	uxth.w	r9, lr
90021a48:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90021a4c:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021a50:	fb06 f809 	mul.w	r8, r6, r9
90021a54:	0136      	lsls	r6, r6, #4
90021a56:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021a5a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90021a5e:	9601      	str	r6, [sp, #4]
90021a60:	ea4a 0404 	orr.w	r4, sl, r4
90021a64:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021a68:	fa1f f689 	uxth.w	r6, r9
90021a6c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021a70:	fb11 f90e 	smulbb	r9, r1, lr
90021a74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021a78:	9602      	str	r6, [sp, #8]
90021a7a:	4626      	mov	r6, r4
90021a7c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021a80:	f1ce 0410 	rsb	r4, lr, #16
90021a84:	ea4a 0202 	orr.w	r2, sl, r2
90021a88:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021a8c:	1a64      	subs	r4, r4, r1
90021a8e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021a92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021a96:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021a9a:	434a      	muls	r2, r1
90021a9c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021aa0:	ea4a 0000 	orr.w	r0, sl, r0
90021aa4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021aa8:	fb04 2406 	mla	r4, r4, r6, r2
90021aac:	9903      	ldr	r1, [sp, #12]
90021aae:	fb09 4200 	mla	r2, r9, r0, r4
90021ab2:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021ab6:	9801      	ldr	r0, [sp, #4]
90021ab8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90021abc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021ac0:	8809      	ldrh	r1, [r1, #0]
90021ac2:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90021ac6:	ea44 0b0b 	orr.w	fp, r4, fp
90021aca:	9c02      	ldr	r4, [sp, #8]
90021acc:	1b00      	subs	r0, r0, r4
90021ace:	9c01      	ldr	r4, [sp, #4]
90021ad0:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021ad4:	eba4 0608 	sub.w	r6, r4, r8
90021ad8:	b280      	uxth	r0, r0
90021ada:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021ade:	b2b6      	uxth	r6, r6
90021ae0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021ae4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021ae8:	4373      	muls	r3, r6
90021aea:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021aee:	fb0c 3300 	mla	r3, ip, r0, r3
90021af2:	9802      	ldr	r0, [sp, #8]
90021af4:	ea42 0e0e 	orr.w	lr, r2, lr
90021af8:	fb00 3505 	mla	r5, r0, r5, r3
90021afc:	120b      	asrs	r3, r1, #8
90021afe:	10c8      	asrs	r0, r1, #3
90021b00:	fb08 5707 	mla	r7, r8, r7, r5
90021b04:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90021b08:	00c9      	lsls	r1, r1, #3
90021b0a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021b0e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90021b12:	fa1f f28e 	uxth.w	r2, lr
90021b16:	b2c9      	uxtb	r1, r1
90021b18:	b2ff      	uxtb	r7, r7
90021b1a:	437b      	muls	r3, r7
90021b1c:	4378      	muls	r0, r7
90021b1e:	434f      	muls	r7, r1
90021b20:	1c59      	adds	r1, r3, #1
90021b22:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021b26:	1213      	asrs	r3, r2, #8
90021b28:	f023 0307 	bic.w	r3, r3, #7
90021b2c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021b30:	1c41      	adds	r1, r0, #1
90021b32:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90021b36:	10d1      	asrs	r1, r2, #3
90021b38:	021b      	lsls	r3, r3, #8
90021b3a:	f021 0103 	bic.w	r1, r1, #3
90021b3e:	00d2      	lsls	r2, r2, #3
90021b40:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90021b44:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90021b48:	00c9      	lsls	r1, r1, #3
90021b4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021b4e:	430b      	orrs	r3, r1
90021b50:	1c79      	adds	r1, r7, #1
90021b52:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90021b56:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021b5a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021b5e:	431a      	orrs	r2, r3
90021b60:	9b03      	ldr	r3, [sp, #12]
90021b62:	801a      	strh	r2, [r3, #0]
90021b64:	b005      	add	sp, #20
90021b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021b6a:	f04f 0c00 	mov.w	ip, #0
90021b6e:	4664      	mov	r4, ip
90021b70:	e6e5      	b.n	9002193e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90021b72:	2300      	movs	r3, #0
90021b74:	469c      	mov	ip, r3
90021b76:	461a      	mov	r2, r3
90021b78:	461c      	mov	r4, r3
90021b7a:	e707      	b.n	9002198c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021b7c:	2300      	movs	r3, #0
90021b7e:	461a      	mov	r2, r3
90021b80:	e704      	b.n	9002198c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021b82:	460b      	mov	r3, r1
90021b84:	460a      	mov	r2, r1
90021b86:	e701      	b.n	9002198c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021b88:	2500      	movs	r5, #0
90021b8a:	46ab      	mov	fp, r5
90021b8c:	e72f      	b.n	900219ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90021b8e:	2700      	movs	r7, #0
90021b90:	463d      	mov	r5, r7
90021b92:	4638      	mov	r0, r7
90021b94:	46bb      	mov	fp, r7
90021b96:	e754      	b.n	90021a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021b98:	4677      	mov	r7, lr
90021b9a:	4675      	mov	r5, lr
90021b9c:	4670      	mov	r0, lr
90021b9e:	46f3      	mov	fp, lr
90021ba0:	e74f      	b.n	90021a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021ba2:	2700      	movs	r7, #0
90021ba4:	4638      	mov	r0, r7
90021ba6:	e74c      	b.n	90021a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021ba8:	460f      	mov	r7, r1
90021baa:	4608      	mov	r0, r1
90021bac:	e749      	b.n	90021a42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90021bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021bb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021bb4:	b093      	sub	sp, #76	; 0x4c
90021bb6:	9210      	str	r2, [sp, #64]	; 0x40
90021bb8:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021bba:	9011      	str	r0, [sp, #68]	; 0x44
90021bbc:	910e      	str	r1, [sp, #56]	; 0x38
90021bbe:	6850      	ldr	r0, [r2, #4]
90021bc0:	9306      	str	r3, [sp, #24]
90021bc2:	6812      	ldr	r2, [r2, #0]
90021bc4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021bc8:	fb00 1303 	mla	r3, r0, r3, r1
90021bcc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021bd0:	9307      	str	r3, [sp, #28]
90021bd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021bd4:	681b      	ldr	r3, [r3, #0]
90021bd6:	9308      	str	r3, [sp, #32]
90021bd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021bda:	685b      	ldr	r3, [r3, #4]
90021bdc:	9309      	str	r3, [sp, #36]	; 0x24
90021bde:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021be0:	2b00      	cmp	r3, #0
90021be2:	dc03      	bgt.n	90021bec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021be4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021be6:	2b00      	cmp	r3, #0
90021be8:	f340 83b6 	ble.w	90022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021bec:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021bee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021bf2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021bf6:	1e48      	subs	r0, r1, #1
90021bf8:	1e55      	subs	r5, r2, #1
90021bfa:	9b06      	ldr	r3, [sp, #24]
90021bfc:	2b00      	cmp	r3, #0
90021bfe:	f340 8165 	ble.w	90021ecc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90021c02:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90021c04:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021c06:	1436      	asrs	r6, r6, #16
90021c08:	ea4f 4323 	mov.w	r3, r3, asr #16
90021c0c:	d406      	bmi.n	90021c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021c0e:	4286      	cmp	r6, r0
90021c10:	da04      	bge.n	90021c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021c12:	2b00      	cmp	r3, #0
90021c14:	db02      	blt.n	90021c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021c16:	42ab      	cmp	r3, r5
90021c18:	f2c0 8159 	blt.w	90021ece <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90021c1c:	3601      	adds	r6, #1
90021c1e:	f100 8146 	bmi.w	90021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021c22:	42b1      	cmp	r1, r6
90021c24:	f2c0 8143 	blt.w	90021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021c28:	3301      	adds	r3, #1
90021c2a:	f100 8140 	bmi.w	90021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021c2e:	429a      	cmp	r2, r3
90021c30:	f2c0 813d 	blt.w	90021eae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021c34:	9b06      	ldr	r3, [sp, #24]
90021c36:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021c3a:	9f07      	ldr	r7, [sp, #28]
90021c3c:	930f      	str	r3, [sp, #60]	; 0x3c
90021c3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021c40:	2b00      	cmp	r3, #0
90021c42:	f340 8166 	ble.w	90021f12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90021c46:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021c48:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021c4a:	1418      	asrs	r0, r3, #16
90021c4c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021c4e:	142d      	asrs	r5, r5, #16
90021c50:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021c54:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021c56:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021c5a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021c5c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021c60:	f100 81f0 	bmi.w	90022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021c64:	f102 3eff 	add.w	lr, r2, #4294967295
90021c68:	4575      	cmp	r5, lr
90021c6a:	f280 81eb 	bge.w	90022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021c6e:	2800      	cmp	r0, #0
90021c70:	f2c0 81e8 	blt.w	90022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021c74:	f103 3eff 	add.w	lr, r3, #4294967295
90021c78:	4570      	cmp	r0, lr
90021c7a:	f280 81e3 	bge.w	90022044 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021c7e:	b212      	sxth	r2, r2
90021c80:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021c82:	fa1f fe81 	uxth.w	lr, r1
90021c86:	fb00 5002 	mla	r0, r0, r2, r5
90021c8a:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021c8e:	eb03 0a00 	add.w	sl, r3, r0
90021c92:	f813 9000 	ldrb.w	r9, [r3, r0]
90021c96:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90021c9a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021c9e:	b29b      	uxth	r3, r3
90021ca0:	f1bc 0f00 	cmp.w	ip, #0
90021ca4:	f000 817b 	beq.w	90021f9e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90021ca8:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021cac:	eb0a 0b02 	add.w	fp, sl, r2
90021cb0:	fa1f fa8c 	uxth.w	sl, ip
90021cb4:	940a      	str	r4, [sp, #40]	; 0x28
90021cb6:	fb0a fe0e 	mul.w	lr, sl, lr
90021cba:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021cbe:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021cc2:	eba5 050e 	sub.w	r5, r5, lr
90021cc6:	940b      	str	r4, [sp, #44]	; 0x2c
90021cc8:	fa1f fa8a 	uxth.w	sl, sl
90021ccc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021cce:	b2ad      	uxth	r5, r5
90021cd0:	eba3 030a 	sub.w	r3, r3, sl
90021cd4:	fb08 f505 	mul.w	r5, r8, r5
90021cd8:	b29b      	uxth	r3, r3
90021cda:	fb09 5303 	mla	r3, r9, r3, r5
90021cde:	fb0a 3304 	mla	r3, sl, r4, r3
90021ce2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021ce4:	fb0e 3304 	mla	r3, lr, r4, r3
90021ce8:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021cec:	2b00      	cmp	r3, #0
90021cee:	f000 80d1 	beq.w	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021cf2:	9c08      	ldr	r4, [sp, #32]
90021cf4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021cf8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021cfc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021d00:	f000 8152 	beq.w	90021fa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90021d04:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021d08:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021d0c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021d10:	fb0a fe0e 	mul.w	lr, sl, lr
90021d14:	fb09 f000 	mul.w	r0, r9, r0
90021d18:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021d1c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021d20:	f100 0b20 	add.w	fp, r0, #32
90021d24:	44ce      	add	lr, r9
90021d26:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90021d2a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021d2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021d32:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021d36:	ea4e 0909 	orr.w	r9, lr, r9
90021d3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021d3e:	8868      	ldrh	r0, [r5, #2]
90021d40:	d019      	beq.n	90021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90021d42:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021d46:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90021d4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021d4e:	fb0a fe0e 	mul.w	lr, sl, lr
90021d52:	fb08 f800 	mul.w	r8, r8, r0
90021d56:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90021d5a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021d5e:	f108 0b20 	add.w	fp, r8, #32
90021d62:	4486      	add	lr, r0
90021d64:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90021d68:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021d6c:	0a00      	lsrs	r0, r0, #8
90021d6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021d72:	ea4e 0000 	orr.w	r0, lr, r0
90021d76:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90021d7a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021d7e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021d82:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021d86:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021d8a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021d8e:	ea4e 0909 	orr.w	r9, lr, r9
90021d92:	ea4a 0000 	orr.w	r0, sl, r0
90021d96:	f1bc 0f00 	cmp.w	ip, #0
90021d9a:	f000 8107 	beq.w	90021fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021d9e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021da2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021da4:	3a01      	subs	r2, #1
90021da6:	2cff      	cmp	r4, #255	; 0xff
90021da8:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021dac:	f102 0202 	add.w	r2, r2, #2
90021db0:	eb05 0e02 	add.w	lr, r5, r2
90021db4:	5aaa      	ldrh	r2, [r5, r2]
90021db6:	d018      	beq.n	90021dea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90021db8:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021dbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021dc0:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021dc4:	fb04 fa02 	mul.w	sl, r4, r2
90021dc8:	fb08 f805 	mul.w	r8, r8, r5
90021dcc:	f10a 0520 	add.w	r5, sl, #32
90021dd0:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021dd4:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021dd8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021ddc:	4442      	add	r2, r8
90021dde:	0a2d      	lsrs	r5, r5, #8
90021de0:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021de4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021de8:	432a      	orrs	r2, r5
90021dea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021dec:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021df0:	2cff      	cmp	r4, #255	; 0xff
90021df2:	d01a      	beq.n	90021e2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90021df4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90021df8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021dfc:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021e00:	fb04 fa05 	mul.w	sl, r4, r5
90021e04:	fb08 f80e 	mul.w	r8, r8, lr
90021e08:	f10a 0e20 	add.w	lr, sl, #32
90021e0c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90021e10:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021e14:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90021e18:	4445      	add	r5, r8
90021e1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021e1e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021e22:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90021e26:	ea45 050e 	orr.w	r5, r5, lr
90021e2a:	fb1c fe01 	smulbb	lr, ip, r1
90021e2e:	f1cc 0810 	rsb	r8, ip, #16
90021e32:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021e36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021e3a:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021e3e:	eba8 0801 	sub.w	r8, r8, r1
90021e42:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90021e46:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021e4a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90021e4e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021e52:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90021e56:	ea4a 0202 	orr.w	r2, sl, r2
90021e5a:	4341      	muls	r1, r0
90021e5c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021e60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021e64:	fb09 1108 	mla	r1, r9, r8, r1
90021e68:	ea4b 0505 	orr.w	r5, fp, r5
90021e6c:	fb0c 1102 	mla	r1, ip, r2, r1
90021e70:	fb0e 1e05 	mla	lr, lr, r5, r1
90021e74:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021e78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021e7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021e80:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021e84:	ea42 0e0e 	orr.w	lr, r2, lr
90021e88:	fa1f f28e 	uxth.w	r2, lr
90021e8c:	2bff      	cmp	r3, #255	; 0xff
90021e8e:	f040 80a1 	bne.w	90021fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90021e92:	803a      	strh	r2, [r7, #0]
90021e94:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021e96:	3702      	adds	r7, #2
90021e98:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90021e9a:	4413      	add	r3, r2
90021e9c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
90021e9e:	931d      	str	r3, [sp, #116]	; 0x74
90021ea0:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021ea2:	441a      	add	r2, r3
90021ea4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021ea6:	3b01      	subs	r3, #1
90021ea8:	921e      	str	r2, [sp, #120]	; 0x78
90021eaa:	930f      	str	r3, [sp, #60]	; 0x3c
90021eac:	e6c7      	b.n	90021c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90021eae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021eb0:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90021eb2:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90021eb4:	4433      	add	r3, r6
90021eb6:	931d      	str	r3, [sp, #116]	; 0x74
90021eb8:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021eba:	441c      	add	r4, r3
90021ebc:	9b06      	ldr	r3, [sp, #24]
90021ebe:	3b01      	subs	r3, #1
90021ec0:	941e      	str	r4, [sp, #120]	; 0x78
90021ec2:	9306      	str	r3, [sp, #24]
90021ec4:	9b07      	ldr	r3, [sp, #28]
90021ec6:	3302      	adds	r3, #2
90021ec8:	9307      	str	r3, [sp, #28]
90021eca:	e696      	b.n	90021bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021ecc:	d028      	beq.n	90021f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021ece:	9b06      	ldr	r3, [sp, #24]
90021ed0:	981f      	ldr	r0, [sp, #124]	; 0x7c
90021ed2:	3b01      	subs	r3, #1
90021ed4:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021ed6:	fb00 5003 	mla	r0, r0, r3, r5
90021eda:	1400      	asrs	r0, r0, #16
90021edc:	f53f aeaa 	bmi.w	90021c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021ee0:	3901      	subs	r1, #1
90021ee2:	4288      	cmp	r0, r1
90021ee4:	f6bf aea6 	bge.w	90021c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021ee8:	9920      	ldr	r1, [sp, #128]	; 0x80
90021eea:	981e      	ldr	r0, [sp, #120]	; 0x78
90021eec:	fb01 0303 	mla	r3, r1, r3, r0
90021ef0:	141b      	asrs	r3, r3, #16
90021ef2:	f53f ae9f 	bmi.w	90021c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021ef6:	3a01      	subs	r2, #1
90021ef8:	4293      	cmp	r3, r2
90021efa:	f6bf ae9b 	bge.w	90021c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90021efe:	9b06      	ldr	r3, [sp, #24]
90021f00:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021f04:	f8dd e01c 	ldr.w	lr, [sp, #28]
90021f08:	930f      	str	r3, [sp, #60]	; 0x3c
90021f0a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021f0c:	2b00      	cmp	r3, #0
90021f0e:	f300 80b6 	bgt.w	9002207e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90021f12:	9b06      	ldr	r3, [sp, #24]
90021f14:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90021f18:	9b07      	ldr	r3, [sp, #28]
90021f1a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021f1e:	9307      	str	r3, [sp, #28]
90021f20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021f22:	2b00      	cmp	r3, #0
90021f24:	f340 8218 	ble.w	90022358 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021f28:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021f2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021f2e:	ee30 0a04 	vadd.f32	s0, s0, s8
90021f32:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021f36:	eef0 6a62 	vmov.f32	s13, s5
90021f3a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021f3e:	ee31 1a05 	vadd.f32	s2, s2, s10
90021f42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021f46:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
90021f4a:	eef0 6a43 	vmov.f32	s13, s6
90021f4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021f52:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
90021f56:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021f5a:	ee61 7a27 	vmul.f32	s15, s2, s15
90021f5e:	ee77 2a62 	vsub.f32	s5, s14, s5
90021f62:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021f66:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021f6a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021f6e:	ee12 2a90 	vmov	r2, s5
90021f72:	eef0 2a47 	vmov.f32	s5, s14
90021f76:	fb92 f3f3 	sdiv	r3, r2, r3
90021f7a:	ee13 2a10 	vmov	r2, s6
90021f7e:	931f      	str	r3, [sp, #124]	; 0x7c
90021f80:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021f82:	eeb0 3a67 	vmov.f32	s6, s15
90021f86:	fb92 f3f3 	sdiv	r3, r2, r3
90021f8a:	9320      	str	r3, [sp, #128]	; 0x80
90021f8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021f8e:	9a10      	ldr	r2, [sp, #64]	; 0x40
90021f90:	3b01      	subs	r3, #1
90021f92:	930e      	str	r3, [sp, #56]	; 0x38
90021f94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90021f96:	bf08      	it	eq
90021f98:	4613      	moveq	r3, r2
90021f9a:	9306      	str	r3, [sp, #24]
90021f9c:	e61f      	b.n	90021bde <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90021f9e:	fb08 f505 	mul.w	r5, r8, r5
90021fa2:	fb09 5303 	mla	r3, r9, r3, r5
90021fa6:	e69f      	b.n	90021ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90021fa8:	4681      	mov	r9, r0
90021faa:	e6c6      	b.n	90021d3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90021fac:	f1c1 0210 	rsb	r2, r1, #16
90021fb0:	4341      	muls	r1, r0
90021fb2:	fb09 1902 	mla	r9, r9, r2, r1
90021fb6:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021fba:	ea4f 5259 	mov.w	r2, r9, lsr #21
90021fbe:	ea4f 1959 	mov.w	r9, r9, lsr #5
90021fc2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021fc6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021fca:	ea42 0909 	orr.w	r9, r2, r9
90021fce:	fa1f f289 	uxth.w	r2, r9
90021fd2:	e75b      	b.n	90021e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90021fd4:	f8b7 c000 	ldrh.w	ip, [r7]
90021fd8:	43db      	mvns	r3, r3
90021fda:	ea4f 202c 	mov.w	r0, ip, asr #8
90021fde:	fa5f fe83 	uxtb.w	lr, r3
90021fe2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021fe6:	ea4f 05ec 	mov.w	r5, ip, asr #3
90021fea:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90021fee:	fb00 f00e 	mul.w	r0, r0, lr
90021ff2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90021ff6:	b2db      	uxtb	r3, r3
90021ff8:	1c41      	adds	r1, r0, #1
90021ffa:	fb05 f50e 	mul.w	r5, r5, lr
90021ffe:	fb03 f30e 	mul.w	r3, r3, lr
90022002:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90022006:	1211      	asrs	r1, r2, #8
90022008:	f021 0107 	bic.w	r1, r1, #7
9002200c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90022010:	48d3      	ldr	r0, [pc, #844]	; (90022360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022012:	b2c9      	uxtb	r1, r1
90022014:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90022018:	1c69      	adds	r1, r5, #1
9002201a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002201e:	10d1      	asrs	r1, r2, #3
90022020:	00d2      	lsls	r2, r2, #3
90022022:	f021 0103 	bic.w	r1, r1, #3
90022026:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002202a:	00c9      	lsls	r1, r1, #3
9002202c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022030:	4301      	orrs	r1, r0
90022032:	1c58      	adds	r0, r3, #1
90022034:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90022038:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002203c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90022040:	430a      	orrs	r2, r1
90022042:	e726      	b.n	90021e92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90022044:	f115 0e01 	adds.w	lr, r5, #1
90022048:	f53f af24 	bmi.w	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002204c:	4572      	cmp	r2, lr
9002204e:	f6ff af21 	blt.w	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022052:	f110 0e01 	adds.w	lr, r0, #1
90022056:	f53f af1d 	bmi.w	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002205a:	4573      	cmp	r3, lr
9002205c:	f6ff af1a 	blt.w	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90022060:	b21b      	sxth	r3, r3
90022062:	b212      	sxth	r2, r2
90022064:	9301      	str	r3, [sp, #4]
90022066:	9200      	str	r2, [sp, #0]
90022068:	e9cd 1c04 	strd	r1, ip, [sp, #16]
9002206c:	e9cd 5002 	strd	r5, r0, [sp, #8]
90022070:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90022074:	4639      	mov	r1, r7
90022076:	9811      	ldr	r0, [sp, #68]	; 0x44
90022078:	f7ff fc22 	bl	900218c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9002207c:	e70a      	b.n	90021e94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002207e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022080:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022084:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022086:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002208a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002208c:	fa1f fc82 	uxth.w	ip, r2
90022090:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022094:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022096:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002209a:	141f      	asrs	r7, r3, #16
9002209c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002209e:	141b      	asrs	r3, r3, #16
900220a0:	fb01 3707 	mla	r7, r1, r7, r3
900220a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900220a6:	eb03 0a07 	add.w	sl, r3, r7
900220aa:	f813 9007 	ldrb.w	r9, [r3, r7]
900220ae:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900220b2:	f89a 8001 	ldrb.w	r8, [sl, #1]
900220b6:	b29b      	uxth	r3, r3
900220b8:	2d00      	cmp	r5, #0
900220ba:	f000 80fe 	beq.w	900222ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
900220be:	f81a 4001 	ldrb.w	r4, [sl, r1]
900220c2:	eb0a 0b01 	add.w	fp, sl, r1
900220c6:	fa1f fa85 	uxth.w	sl, r5
900220ca:	940c      	str	r4, [sp, #48]	; 0x30
900220cc:	fb0a fc0c 	mul.w	ip, sl, ip
900220d0:	f89b 4001 	ldrb.w	r4, [fp, #1]
900220d4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900220d8:	eba0 000c 	sub.w	r0, r0, ip
900220dc:	940d      	str	r4, [sp, #52]	; 0x34
900220de:	fa1f fa8a 	uxth.w	sl, sl
900220e2:	b280      	uxth	r0, r0
900220e4:	eba3 030a 	sub.w	r3, r3, sl
900220e8:	fb08 f000 	mul.w	r0, r8, r0
900220ec:	b29b      	uxth	r3, r3
900220ee:	fb09 0303 	mla	r3, r9, r3, r0
900220f2:	980c      	ldr	r0, [sp, #48]	; 0x30
900220f4:	fb0a 3300 	mla	r3, sl, r0, r3
900220f8:	fb0c 3304 	mla	r3, ip, r4, r3
900220fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022100:	2b00      	cmp	r3, #0
90022102:	f000 80cc 	beq.w	9002229e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022106:	9808      	ldr	r0, [sp, #32]
90022108:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002210c:	9c08      	ldr	r4, [sp, #32]
9002210e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022112:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022116:	f000 80d5 	beq.w	900222c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002211a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002211e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022122:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022126:	fb0a fc0c 	mul.w	ip, sl, ip
9002212a:	fb09 f707 	mul.w	r7, r9, r7
9002212e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90022132:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022136:	f107 0b20 	add.w	fp, r7, #32
9002213a:	44cc      	add	ip, r9
9002213c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90022140:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022144:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022148:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9002214c:	ea4c 0909 	orr.w	r9, ip, r9
90022150:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90022154:	8847      	ldrh	r7, [r0, #2]
90022156:	d019      	beq.n	9002218c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90022158:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002215c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90022160:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022164:	fb0a fc0c 	mul.w	ip, sl, ip
90022168:	fb08 f807 	mul.w	r8, r8, r7
9002216c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90022170:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90022174:	f108 0b20 	add.w	fp, r8, #32
90022178:	44bc      	add	ip, r7
9002217a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002217e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90022182:	0a3f      	lsrs	r7, r7, #8
90022184:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022188:	ea4c 0707 	orr.w	r7, ip, r7
9002218c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022190:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022194:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022198:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002219c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
900221a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900221a4:	ea4c 0909 	orr.w	r9, ip, r9
900221a8:	ea4a 0707 	orr.w	r7, sl, r7
900221ac:	2d00      	cmp	r5, #0
900221ae:	f000 808b 	beq.w	900222c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
900221b2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900221b6:	3901      	subs	r1, #1
900221b8:	0049      	lsls	r1, r1, #1
900221ba:	3102      	adds	r1, #2
900221bc:	eb00 0c01 	add.w	ip, r0, r1
900221c0:	5a41      	ldrh	r1, [r0, r1]
900221c2:	980c      	ldr	r0, [sp, #48]	; 0x30
900221c4:	28ff      	cmp	r0, #255	; 0xff
900221c6:	d019      	beq.n	900221fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
900221c8:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
900221cc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
900221ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900221d2:	ea4f 08e4 	mov.w	r8, r4, asr #3
900221d6:	fb04 fa01 	mul.w	sl, r4, r1
900221da:	fb08 f800 	mul.w	r8, r8, r0
900221de:	f10a 0020 	add.w	r0, sl, #32
900221e2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900221e6:	f608 0801 	addw	r8, r8, #2049	; 0x801
900221ea:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900221ee:	4441      	add	r1, r8
900221f0:	0a00      	lsrs	r0, r0, #8
900221f2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900221f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900221fa:	4301      	orrs	r1, r0
900221fc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900221fe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022202:	2cff      	cmp	r4, #255	; 0xff
90022204:	d01a      	beq.n	9002223c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90022206:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002220a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002220e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022212:	fb04 fa00 	mul.w	sl, r4, r0
90022216:	fb08 f80c 	mul.w	r8, r8, ip
9002221a:	f10a 0c20 	add.w	ip, sl, #32
9002221e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022222:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022226:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002222a:	4440      	add	r0, r8
9002222c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022230:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90022234:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022238:	ea40 000c 	orr.w	r0, r0, ip
9002223c:	fb15 fc02 	smulbb	ip, r5, r2
90022240:	f1c5 0810 	rsb	r8, r5, #16
90022244:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90022248:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9002224c:	ea4f 0cec 	mov.w	ip, ip, asr #3
90022250:	eba8 0802 	sub.w	r8, r8, r2
90022254:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022258:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002225c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90022260:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022264:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90022268:	ea4a 0101 	orr.w	r1, sl, r1
9002226c:	437a      	muls	r2, r7
9002226e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90022272:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022276:	fb09 2208 	mla	r2, r9, r8, r2
9002227a:	ea4b 0000 	orr.w	r0, fp, r0
9002227e:	fb05 2201 	mla	r2, r5, r1, r2
90022282:	fb0c 2200 	mla	r2, ip, r0, r2
90022286:	0d57      	lsrs	r7, r2, #21
90022288:	0952      	lsrs	r2, r2, #5
9002228a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002228e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022292:	433a      	orrs	r2, r7
90022294:	2bff      	cmp	r3, #255	; 0xff
90022296:	b292      	uxth	r2, r2
90022298:	d127      	bne.n	900222ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002229a:	f8ae 2000 	strh.w	r2, [lr]
9002229e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900222a0:	f10e 0e02 	add.w	lr, lr, #2
900222a4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
900222a6:	4413      	add	r3, r2
900222a8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
900222aa:	931d      	str	r3, [sp, #116]	; 0x74
900222ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
900222ae:	441a      	add	r2, r3
900222b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
900222b2:	3b01      	subs	r3, #1
900222b4:	921e      	str	r2, [sp, #120]	; 0x78
900222b6:	930f      	str	r3, [sp, #60]	; 0x3c
900222b8:	e627      	b.n	90021f0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900222ba:	fb08 f000 	mul.w	r0, r8, r0
900222be:	fb09 0303 	mla	r3, r9, r3, r0
900222c2:	e71b      	b.n	900220fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
900222c4:	46b9      	mov	r9, r7
900222c6:	e743      	b.n	90022150 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
900222c8:	f1c2 0110 	rsb	r1, r2, #16
900222cc:	437a      	muls	r2, r7
900222ce:	fb09 2901 	mla	r9, r9, r1, r2
900222d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
900222d6:	ea4f 5059 	mov.w	r0, r9, lsr #21
900222da:	ea4f 1259 	mov.w	r2, r9, lsr #5
900222de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900222e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900222e6:	4302      	orrs	r2, r0
900222e8:	e7d4      	b.n	90022294 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
900222ea:	f8be 7000 	ldrh.w	r7, [lr]
900222ee:	43db      	mvns	r3, r3
900222f0:	4c1b      	ldr	r4, [pc, #108]	; (90022360 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
900222f2:	1238      	asrs	r0, r7, #8
900222f4:	fa5f fc83 	uxtb.w	ip, r3
900222f8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900222fc:	10fd      	asrs	r5, r7, #3
900222fe:	00fb      	lsls	r3, r7, #3
90022300:	fb00 f00c 	mul.w	r0, r0, ip
90022304:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90022308:	b2db      	uxtb	r3, r3
9002230a:	fb05 f10c 	mul.w	r1, r5, ip
9002230e:	1c45      	adds	r5, r0, #1
90022310:	fb03 f30c 	mul.w	r3, r3, ip
90022314:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022318:	1215      	asrs	r5, r2, #8
9002231a:	f025 0507 	bic.w	r5, r5, #7
9002231e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022322:	1c4d      	adds	r5, r1, #1
90022324:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90022328:	10d1      	asrs	r1, r2, #3
9002232a:	b2c0      	uxtb	r0, r0
9002232c:	f021 0103 	bic.w	r1, r1, #3
90022330:	00d2      	lsls	r2, r2, #3
90022332:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90022336:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002233a:	00c9      	lsls	r1, r1, #3
9002233c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022340:	4308      	orrs	r0, r1
90022342:	1c59      	adds	r1, r3, #1
90022344:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90022348:	eb02 2313 	add.w	r3, r2, r3, lsr #8
9002234c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90022350:	4318      	orrs	r0, r3
90022352:	f8ae 0000 	strh.w	r0, [lr]
90022356:	e7a2      	b.n	9002229e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022358:	b013      	add	sp, #76	; 0x4c
9002235a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002235e:	bf00      	nop
90022360:	fffff800 	.word	0xfffff800

90022364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90022364:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90022368:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
9002236c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90022370:	fb05 4c03 	mla	ip, r5, r3, r4
90022374:	2d00      	cmp	r5, #0
90022376:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
9002237a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002237e:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90022382:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
90022386:	8808      	ldrh	r0, [r1, #0]
90022388:	f2c0 80a7 	blt.w	900224da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
9002238c:	45aa      	cmp	sl, r5
9002238e:	f340 80a4 	ble.w	900224da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90022392:	2c00      	cmp	r4, #0
90022394:	f2c0 809f 	blt.w	900224d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90022398:	42a3      	cmp	r3, r4
9002239a:	f340 809c 	ble.w	900224d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002239e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
900223a2:	1c62      	adds	r2, r4, #1
900223a4:	f100 809c 	bmi.w	900224e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900223a8:	4293      	cmp	r3, r2
900223aa:	f340 8099 	ble.w	900224e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900223ae:	f1b9 0f00 	cmp.w	r9, #0
900223b2:	f000 8095 	beq.w	900224e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
900223b6:	f8be c002 	ldrh.w	ip, [lr, #2]
900223ba:	3501      	adds	r5, #1
900223bc:	f100 8094 	bmi.w	900224e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900223c0:	45aa      	cmp	sl, r5
900223c2:	f340 8091 	ble.w	900224e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900223c6:	2f00      	cmp	r7, #0
900223c8:	f000 808e 	beq.w	900224e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
900223cc:	2c00      	cmp	r4, #0
900223ce:	f2c0 8089 	blt.w	900224e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900223d2:	42a3      	cmp	r3, r4
900223d4:	f340 8086 	ble.w	900224e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
900223d8:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
900223dc:	3401      	adds	r4, #1
900223de:	f100 8086 	bmi.w	900224ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900223e2:	42a3      	cmp	r3, r4
900223e4:	f340 8083 	ble.w	900224ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900223e8:	f1b9 0f00 	cmp.w	r9, #0
900223ec:	d07f      	beq.n	900224ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
900223ee:	3301      	adds	r3, #1
900223f0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
900223f4:	ea4f 4408 	mov.w	r4, r8, lsl #16
900223f8:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
900223fc:	fb19 fe07 	smulbb	lr, r9, r7
90022400:	f1c7 0210 	rsb	r2, r7, #16
90022404:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022408:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002240c:	eba2 0209 	sub.w	r2, r2, r9
90022410:	ea44 0808 	orr.w	r8, r4, r8
90022414:	ea4f 440c 	mov.w	r4, ip, lsl #16
90022418:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002241c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022420:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022424:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90022428:	ea44 0c0c 	orr.w	ip, r4, ip
9002242c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90022430:	fb04 f40c 	mul.w	r4, r4, ip
90022434:	fb02 4808 	mla	r8, r2, r8, r4
90022438:	041a      	lsls	r2, r3, #16
9002243a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002243e:	b2b4      	uxth	r4, r6
90022440:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022444:	43f6      	mvns	r6, r6
90022446:	4313      	orrs	r3, r2
90022448:	042a      	lsls	r2, r5, #16
9002244a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9002244e:	b2f6      	uxtb	r6, r6
90022450:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022454:	fb0e 8303 	mla	r3, lr, r3, r8
90022458:	432a      	orrs	r2, r5
9002245a:	fb07 3202 	mla	r2, r7, r2, r3
9002245e:	10c7      	asrs	r7, r0, #3
90022460:	0d53      	lsrs	r3, r2, #21
90022462:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90022466:	0952      	lsrs	r2, r2, #5
90022468:	fb17 f706 	smulbb	r7, r7, r6
9002246c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022470:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022474:	431a      	orrs	r2, r3
90022476:	b293      	uxth	r3, r2
90022478:	1202      	asrs	r2, r0, #8
9002247a:	121d      	asrs	r5, r3, #8
9002247c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90022480:	00c0      	lsls	r0, r0, #3
90022482:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022486:	fb12 f206 	smulbb	r2, r2, r6
9002248a:	b2c0      	uxtb	r0, r0
9002248c:	fb05 2504 	mla	r5, r5, r4, r2
90022490:	10da      	asrs	r2, r3, #3
90022492:	fb10 f006 	smulbb	r0, r0, r6
90022496:	00db      	lsls	r3, r3, #3
90022498:	b2ad      	uxth	r5, r5
9002249a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002249e:	b2db      	uxtb	r3, r3
900224a0:	fb02 7204 	mla	r2, r2, r4, r7
900224a4:	fb03 0004 	mla	r0, r3, r4, r0
900224a8:	1c6b      	adds	r3, r5, #1
900224aa:	b292      	uxth	r2, r2
900224ac:	b280      	uxth	r0, r0
900224ae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900224b2:	1c43      	adds	r3, r0, #1
900224b4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900224b8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900224bc:	1c50      	adds	r0, r2, #1
900224be:	eb00 2212 	add.w	r2, r0, r2, lsr #8
900224c2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900224c6:	0952      	lsrs	r2, r2, #5
900224c8:	432b      	orrs	r3, r5
900224ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900224ce:	4313      	orrs	r3, r2
900224d0:	800b      	strh	r3, [r1, #0]
900224d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900224d6:	4680      	mov	r8, r0
900224d8:	e763      	b.n	900223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
900224da:	4684      	mov	ip, r0
900224dc:	4680      	mov	r8, r0
900224de:	e76c      	b.n	900223ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900224e0:	4684      	mov	ip, r0
900224e2:	e76a      	b.n	900223ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
900224e4:	4605      	mov	r5, r0
900224e6:	e779      	b.n	900223dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
900224e8:	4603      	mov	r3, r0
900224ea:	4605      	mov	r5, r0
900224ec:	e782      	b.n	900223f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
900224ee:	4603      	mov	r3, r0
900224f0:	e780      	b.n	900223f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

900224f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900224f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900224f6:	b093      	sub	sp, #76	; 0x4c
900224f8:	461d      	mov	r5, r3
900224fa:	9210      	str	r2, [sp, #64]	; 0x40
900224fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
900224fe:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90022502:	910a      	str	r1, [sp, #40]	; 0x28
90022504:	920b      	str	r2, [sp, #44]	; 0x2c
90022506:	6859      	ldr	r1, [r3, #4]
90022508:	681b      	ldr	r3, [r3, #0]
9002250a:	9011      	str	r0, [sp, #68]	; 0x44
9002250c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90022510:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90022514:	fb01 2707 	mla	r7, r1, r7, r2
90022518:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9002251c:	9307      	str	r3, [sp, #28]
9002251e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022520:	681b      	ldr	r3, [r3, #0]
90022522:	9309      	str	r3, [sp, #36]	; 0x24
90022524:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022526:	43db      	mvns	r3, r3
90022528:	b2db      	uxtb	r3, r3
9002252a:	9308      	str	r3, [sp, #32]
9002252c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002252e:	2b00      	cmp	r3, #0
90022530:	dc03      	bgt.n	9002253a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022532:	9b10      	ldr	r3, [sp, #64]	; 0x40
90022534:	2b00      	cmp	r3, #0
90022536:	f340 8205 	ble.w	90022944 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002253a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9002253c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022540:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022544:	1e48      	subs	r0, r1, #1
90022546:	f102 3cff 	add.w	ip, r2, #4294967295
9002254a:	2d00      	cmp	r5, #0
9002254c:	f340 80da 	ble.w	90022704 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90022550:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022554:	ea4f 4326 	mov.w	r3, r6, asr #16
90022558:	d406      	bmi.n	90022568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002255a:	4586      	cmp	lr, r0
9002255c:	da04      	bge.n	90022568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002255e:	2b00      	cmp	r3, #0
90022560:	db02      	blt.n	90022568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90022562:	4563      	cmp	r3, ip
90022564:	f2c0 80cf 	blt.w	90022706 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90022568:	f11e 0e01 	adds.w	lr, lr, #1
9002256c:	f100 80c1 	bmi.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022570:	4571      	cmp	r1, lr
90022572:	f2c0 80be 	blt.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022576:	3301      	adds	r3, #1
90022578:	f100 80bb 	bmi.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002257c:	429a      	cmp	r2, r3
9002257e:	f2c0 80b8 	blt.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90022582:	46a9      	mov	r9, r5
90022584:	f8dd 801c 	ldr.w	r8, [sp, #28]
90022588:	f1b9 0f00 	cmp.w	r9, #0
9002258c:	f340 80d8 	ble.w	90022740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90022590:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022592:	1421      	asrs	r1, r4, #16
90022594:	ea4f 4026 	mov.w	r0, r6, asr #16
90022598:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002259c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900225a0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
900225a4:	f100 8112 	bmi.w	900227cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900225a8:	f10e 3aff 	add.w	sl, lr, #4294967295
900225ac:	4551      	cmp	r1, sl
900225ae:	f280 810d 	bge.w	900227cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900225b2:	2800      	cmp	r0, #0
900225b4:	f2c0 810a 	blt.w	900227cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900225b8:	f103 3aff 	add.w	sl, r3, #4294967295
900225bc:	4550      	cmp	r0, sl
900225be:	f280 8105 	bge.w	900227cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
900225c2:	fa0f f38e 	sxth.w	r3, lr
900225c6:	fb00 1103 	mla	r1, r0, r3, r1
900225ca:	9809      	ldr	r0, [sp, #36]	; 0x24
900225cc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
900225d0:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
900225d4:	f8ba 1002 	ldrh.w	r1, [sl, #2]
900225d8:	f1bc 0f00 	cmp.w	ip, #0
900225dc:	d007      	beq.n	900225ee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
900225de:	005b      	lsls	r3, r3, #1
900225e0:	eb0a 0003 	add.w	r0, sl, r3
900225e4:	f83a 3003 	ldrh.w	r3, [sl, r3]
900225e8:	930c      	str	r3, [sp, #48]	; 0x30
900225ea:	8843      	ldrh	r3, [r0, #2]
900225ec:	930d      	str	r3, [sp, #52]	; 0x34
900225ee:	ea4f 400e 	mov.w	r0, lr, lsl #16
900225f2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
900225f6:	fb12 f30c 	smulbb	r3, r2, ip
900225fa:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900225fe:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022602:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022606:	10db      	asrs	r3, r3, #3
90022608:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002260c:	ea40 000e 	orr.w	r0, r0, lr
90022610:	f1cc 0e10 	rsb	lr, ip, #16
90022614:	ea4a 0101 	orr.w	r1, sl, r1
90022618:	9f08      	ldr	r7, [sp, #32]
9002261a:	ebae 0e02 	sub.w	lr, lr, r2
9002261e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022622:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022626:	4351      	muls	r1, r2
90022628:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9002262a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002262e:	990c      	ldr	r1, [sp, #48]	; 0x30
90022630:	0410      	lsls	r0, r2, #16
90022632:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022636:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9002263a:	4310      	orrs	r0, r2
9002263c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9002263e:	0412      	lsls	r2, r2, #16
90022640:	fb03 e000 	mla	r0, r3, r0, lr
90022644:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022648:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
9002264c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022650:	ea42 020e 	orr.w	r2, r2, lr
90022654:	fb03 0302 	mla	r3, r3, r2, r0
90022658:	f8b8 0000 	ldrh.w	r0, [r8]
9002265c:	0d5a      	lsrs	r2, r3, #21
9002265e:	095b      	lsrs	r3, r3, #5
90022660:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022664:	1201      	asrs	r1, r0, #8
90022666:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9002266a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9002266e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022672:	00c0      	lsls	r0, r0, #3
90022674:	4313      	orrs	r3, r2
90022676:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
9002267a:	fb11 f107 	smulbb	r1, r1, r7
9002267e:	b2c0      	uxtb	r0, r0
90022680:	b29b      	uxth	r3, r3
90022682:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
90022686:	fb10 f007 	smulbb	r0, r0, r7
9002268a:	fb1e fe07 	smulbb	lr, lr, r7
9002268e:	ea4f 2c23 	mov.w	ip, r3, asr #8
90022692:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90022696:	fb0c 1c02 	mla	ip, ip, r2, r1
9002269a:	10d9      	asrs	r1, r3, #3
9002269c:	00db      	lsls	r3, r3, #3
9002269e:	fa1f fc8c 	uxth.w	ip, ip
900226a2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900226a6:	b2db      	uxtb	r3, r3
900226a8:	fb01 e102 	mla	r1, r1, r2, lr
900226ac:	fb03 0302 	mla	r3, r3, r2, r0
900226b0:	b289      	uxth	r1, r1
900226b2:	b29a      	uxth	r2, r3
900226b4:	f10c 0301 	add.w	r3, ip, #1
900226b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
900226bc:	1c53      	adds	r3, r2, #1
900226be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900226c2:	1c4a      	adds	r2, r1, #1
900226c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900226c8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900226cc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900226d0:	0949      	lsrs	r1, r1, #5
900226d2:	ea43 030c 	orr.w	r3, r3, ip
900226d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900226da:	430b      	orrs	r3, r1
900226dc:	f8a8 3000 	strh.w	r3, [r8]
900226e0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900226e2:	f108 0802 	add.w	r8, r8, #2
900226e6:	f109 39ff 	add.w	r9, r9, #4294967295
900226ea:	441c      	add	r4, r3
900226ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
900226ee:	441e      	add	r6, r3
900226f0:	e74a      	b.n	90022588 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900226f2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
900226f4:	3d01      	subs	r5, #1
900226f6:	441c      	add	r4, r3
900226f8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900226fa:	441e      	add	r6, r3
900226fc:	9b07      	ldr	r3, [sp, #28]
900226fe:	3302      	adds	r3, #2
90022700:	9307      	str	r3, [sp, #28]
90022702:	e722      	b.n	9002254a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022704:	d022      	beq.n	9002274c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90022706:	1e6b      	subs	r3, r5, #1
90022708:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002270a:	fb00 4003 	mla	r0, r0, r3, r4
9002270e:	1400      	asrs	r0, r0, #16
90022710:	f53f af37 	bmi.w	90022582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022714:	3901      	subs	r1, #1
90022716:	4288      	cmp	r0, r1
90022718:	f6bf af33 	bge.w	90022582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002271c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002271e:	fb01 6303 	mla	r3, r1, r3, r6
90022722:	141b      	asrs	r3, r3, #16
90022724:	f53f af2d 	bmi.w	90022582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022728:	3a01      	subs	r2, #1
9002272a:	4293      	cmp	r3, r2
9002272c:	f6bf af29 	bge.w	90022582 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022730:	46a8      	mov	r8, r5
90022732:	f8dd 901c 	ldr.w	r9, [sp, #28]
90022736:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
9002273a:	f1b8 0f00 	cmp.w	r8, #0
9002273e:	dc60      	bgt.n	90022802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
90022740:	9b07      	ldr	r3, [sp, #28]
90022742:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022746:	eb03 0345 	add.w	r3, r3, r5, lsl #1
9002274a:	9307      	str	r3, [sp, #28]
9002274c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002274e:	2b00      	cmp	r3, #0
90022750:	f340 80f8 	ble.w	90022944 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90022754:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022758:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002275a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002275e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022762:	eef0 6a62 	vmov.f32	s13, s5
90022766:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002276a:	ee31 1a05 	vadd.f32	s2, s2, s10
9002276e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022772:	ee16 4a90 	vmov	r4, s13
90022776:	eef0 6a43 	vmov.f32	s13, s6
9002277a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002277e:	ee16 6a90 	vmov	r6, s13
90022782:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022786:	ee61 7a27 	vmul.f32	s15, s2, s15
9002278a:	ee77 2a62 	vsub.f32	s5, s14, s5
9002278e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022792:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022796:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002279a:	ee12 2a90 	vmov	r2, s5
9002279e:	eef0 2a47 	vmov.f32	s5, s14
900227a2:	fb92 f3f3 	sdiv	r3, r2, r3
900227a6:	ee13 2a10 	vmov	r2, s6
900227aa:	931f      	str	r3, [sp, #124]	; 0x7c
900227ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900227ae:	eeb0 3a67 	vmov.f32	s6, s15
900227b2:	fb92 f3f3 	sdiv	r3, r2, r3
900227b6:	9320      	str	r3, [sp, #128]	; 0x80
900227b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900227ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
900227bc:	3b01      	subs	r3, #1
900227be:	930a      	str	r3, [sp, #40]	; 0x28
900227c0:	bf08      	it	eq
900227c2:	4615      	moveq	r5, r2
900227c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900227c6:	bf18      	it	ne
900227c8:	461d      	movne	r5, r3
900227ca:	e6af      	b.n	9002252c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900227cc:	f111 0a01 	adds.w	sl, r1, #1
900227d0:	d486      	bmi.n	900226e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900227d2:	45d6      	cmp	lr, sl
900227d4:	db84      	blt.n	900226e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900227d6:	f110 0a01 	adds.w	sl, r0, #1
900227da:	d481      	bmi.n	900226e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900227dc:	4553      	cmp	r3, sl
900227de:	f6ff af7f 	blt.w	900226e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900227e2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
900227e4:	b21b      	sxth	r3, r3
900227e6:	9101      	str	r1, [sp, #4]
900227e8:	4641      	mov	r1, r8
900227ea:	9300      	str	r3, [sp, #0]
900227ec:	fa0f f38e 	sxth.w	r3, lr
900227f0:	e9cd 0202 	strd	r0, r2, [sp, #8]
900227f4:	e9cd c704 	strd	ip, r7, [sp, #16]
900227f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
900227fa:	9811      	ldr	r0, [sp, #68]	; 0x44
900227fc:	f7ff fdb2 	bl	90022364 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90022800:	e76e      	b.n	900226e0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022802:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022804:	1430      	asrs	r0, r6, #16
90022806:	9f09      	ldr	r7, [sp, #36]	; 0x24
90022808:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002280c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022810:	1423      	asrs	r3, r4, #16
90022812:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022816:	fb01 3000 	mla	r0, r1, r0, r3
9002281a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002281c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90022820:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90022824:	8858      	ldrh	r0, [r3, #2]
90022826:	f1be 0f00 	cmp.w	lr, #0
9002282a:	d00b      	beq.n	90022844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002282c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022830:	3901      	subs	r1, #1
90022832:	0049      	lsls	r1, r1, #1
90022834:	3102      	adds	r1, #2
90022836:	eb03 0b01 	add.w	fp, r3, r1
9002283a:	5a5b      	ldrh	r3, [r3, r1]
9002283c:	930e      	str	r3, [sp, #56]	; 0x38
9002283e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022842:	930f      	str	r3, [sp, #60]	; 0x3c
90022844:	ea4f 410c 	mov.w	r1, ip, lsl #16
90022848:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002284c:	fb12 f30e 	smulbb	r3, r2, lr
90022850:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90022854:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
90022858:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002285c:	10db      	asrs	r3, r3, #3
9002285e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022862:	ea41 010c 	orr.w	r1, r1, ip
90022866:	f1ce 0c10 	rsb	ip, lr, #16
9002286a:	ea4b 0000 	orr.w	r0, fp, r0
9002286e:	9f08      	ldr	r7, [sp, #32]
90022870:	ebac 0c02 	sub.w	ip, ip, r2
90022874:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022878:	f108 38ff 	add.w	r8, r8, #4294967295
9002287c:	4350      	muls	r0, r2
9002287e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022882:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90022884:	fb0c 0c01 	mla	ip, ip, r1, r0
90022888:	980e      	ldr	r0, [sp, #56]	; 0x38
9002288a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
9002288e:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90022892:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90022894:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022898:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9002289c:	0412      	lsls	r2, r2, #16
9002289e:	ea4b 0101 	orr.w	r1, fp, r1
900228a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900228a6:	fb03 c101 	mla	r1, r3, r1, ip
900228aa:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
900228ae:	4302      	orrs	r2, r0
900228b0:	fb03 1202 	mla	r2, r3, r2, r1
900228b4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
900228b8:	0952      	lsrs	r2, r2, #5
900228ba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
900228be:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
900228c2:	f8b9 2000 	ldrh.w	r2, [r9]
900228c6:	ea4b 0303 	orr.w	r3, fp, r3
900228ca:	1211      	asrs	r1, r2, #8
900228cc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
900228d0:	b29b      	uxth	r3, r3
900228d2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900228d6:	00d2      	lsls	r2, r2, #3
900228d8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
900228dc:	fb11 f107 	smulbb	r1, r1, r7
900228e0:	1218      	asrs	r0, r3, #8
900228e2:	fb1c fc07 	smulbb	ip, ip, r7
900228e6:	b2d2      	uxtb	r2, r2
900228e8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900228ec:	fb12 f207 	smulbb	r2, r2, r7
900228f0:	fb00 100a 	mla	r0, r0, sl, r1
900228f4:	10d9      	asrs	r1, r3, #3
900228f6:	00db      	lsls	r3, r3, #3
900228f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900228fc:	b280      	uxth	r0, r0
900228fe:	b2db      	uxtb	r3, r3
90022900:	fb01 c10a 	mla	r1, r1, sl, ip
90022904:	fb03 230a 	mla	r3, r3, sl, r2
90022908:	1c42      	adds	r2, r0, #1
9002290a:	b289      	uxth	r1, r1
9002290c:	b29b      	uxth	r3, r3
9002290e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022912:	f101 0c01 	add.w	ip, r1, #1
90022916:	1c5a      	adds	r2, r3, #1
90022918:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002291c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022920:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022924:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022926:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9002292a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9002292e:	441c      	add	r4, r3
90022930:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022934:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022936:	4310      	orrs	r0, r2
90022938:	441e      	add	r6, r3
9002293a:	ea40 000c 	orr.w	r0, r0, ip
9002293e:	f829 0b02 	strh.w	r0, [r9], #2
90022942:	e6fa      	b.n	9002273a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90022944:	b013      	add	sp, #76	; 0x4c
90022946:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002294a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
9002294a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9002294e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90022952:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90022956:	fb0e 4703 	mla	r7, lr, r3, r4
9002295a:	f1be 0f00 	cmp.w	lr, #0
9002295e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90022962:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90022966:	eb02 0847 	add.w	r8, r2, r7, lsl #1
9002296a:	8808      	ldrh	r0, [r1, #0]
9002296c:	db60      	blt.n	90022a30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002296e:	45f1      	cmp	r9, lr
90022970:	dd5e      	ble.n	90022a30 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022972:	2c00      	cmp	r4, #0
90022974:	db5a      	blt.n	90022a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022976:	42a3      	cmp	r3, r4
90022978:	dd58      	ble.n	90022a2c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002297a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
9002297e:	1c62      	adds	r2, r4, #1
90022980:	d459      	bmi.n	90022a36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022982:	4293      	cmp	r3, r2
90022984:	dd57      	ble.n	90022a36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022986:	2d00      	cmp	r5, #0
90022988:	d055      	beq.n	90022a36 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002298a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
9002298e:	f11e 0e01 	adds.w	lr, lr, #1
90022992:	d454      	bmi.n	90022a3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022994:	45f1      	cmp	r9, lr
90022996:	dd52      	ble.n	90022a3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022998:	2e00      	cmp	r6, #0
9002299a:	d050      	beq.n	90022a3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002299c:	2c00      	cmp	r4, #0
9002299e:	db4c      	blt.n	90022a3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900229a0:	42a3      	cmp	r3, r4
900229a2:	dd4a      	ble.n	90022a3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
900229a4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
900229a8:	3401      	adds	r4, #1
900229aa:	d405      	bmi.n	900229b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900229ac:	42a3      	cmp	r3, r4
900229ae:	dd03      	ble.n	900229b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900229b0:	b115      	cbz	r5, 900229b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
900229b2:	3301      	adds	r3, #1
900229b4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
900229b8:	fb15 f406 	smulbb	r4, r5, r6
900229bc:	ea4f 430c 	mov.w	r3, ip, lsl #16
900229c0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
900229c4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900229c8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
900229cc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900229d0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
900229d4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
900229d8:	ea43 0c0c 	orr.w	ip, r3, ip
900229dc:	f1c6 0310 	rsb	r3, r6, #16
900229e0:	ea4e 0707 	orr.w	r7, lr, r7
900229e4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900229e8:	1b5b      	subs	r3, r3, r5
900229ea:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900229ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900229f2:	437d      	muls	r5, r7
900229f4:	fb03 5c0c 	mla	ip, r3, ip, r5
900229f8:	0403      	lsls	r3, r0, #16
900229fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900229fe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022a02:	4318      	orrs	r0, r3
90022a04:	0413      	lsls	r3, r2, #16
90022a06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022a0a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022a0e:	fb04 c000 	mla	r0, r4, r0, ip
90022a12:	4313      	orrs	r3, r2
90022a14:	fb06 0003 	mla	r0, r6, r3, r0
90022a18:	0d43      	lsrs	r3, r0, #21
90022a1a:	0940      	lsrs	r0, r0, #5
90022a1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022a20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022a24:	4318      	orrs	r0, r3
90022a26:	8008      	strh	r0, [r1, #0]
90022a28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90022a2c:	4684      	mov	ip, r0
90022a2e:	e7a6      	b.n	9002297e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90022a30:	4607      	mov	r7, r0
90022a32:	4684      	mov	ip, r0
90022a34:	e7ab      	b.n	9002298e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022a36:	4607      	mov	r7, r0
90022a38:	e7a9      	b.n	9002298e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022a3a:	4602      	mov	r2, r0
90022a3c:	e7b4      	b.n	900229a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90022a3e:	4602      	mov	r2, r0
90022a40:	e7ba      	b.n	900229b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90022a42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022a42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022a46:	b08f      	sub	sp, #60	; 0x3c
90022a48:	461d      	mov	r5, r3
90022a4a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022a4c:	9107      	str	r1, [sp, #28]
90022a4e:	920c      	str	r2, [sp, #48]	; 0x30
90022a50:	6859      	ldr	r1, [r3, #4]
90022a52:	681b      	ldr	r3, [r3, #0]
90022a54:	900d      	str	r0, [sp, #52]	; 0x34
90022a56:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90022a5a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90022a5e:	fb01 2707 	mla	r7, r1, r7, r2
90022a62:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90022a66:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022a68:	f8d3 8000 	ldr.w	r8, [r3]
90022a6c:	9b07      	ldr	r3, [sp, #28]
90022a6e:	2b00      	cmp	r3, #0
90022a70:	dc03      	bgt.n	90022a7a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90022a72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022a74:	2b00      	cmp	r3, #0
90022a76:	f340 8182 	ble.w	90022d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022a7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022a7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022a80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022a84:	1e48      	subs	r0, r1, #1
90022a86:	f102 3cff 	add.w	ip, r2, #4294967295
90022a8a:	2d00      	cmp	r5, #0
90022a8c:	f340 809b 	ble.w	90022bc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90022a90:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022a94:	ea4f 4326 	mov.w	r3, r6, asr #16
90022a98:	d406      	bmi.n	90022aa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022a9a:	4586      	cmp	lr, r0
90022a9c:	da04      	bge.n	90022aa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022a9e:	2b00      	cmp	r3, #0
90022aa0:	db02      	blt.n	90022aa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022aa2:	4563      	cmp	r3, ip
90022aa4:	f2c0 8090 	blt.w	90022bc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022aa8:	f11e 0e01 	adds.w	lr, lr, #1
90022aac:	f100 8084 	bmi.w	90022bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022ab0:	4571      	cmp	r1, lr
90022ab2:	f2c0 8081 	blt.w	90022bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022ab6:	3301      	adds	r3, #1
90022ab8:	d47e      	bmi.n	90022bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022aba:	429a      	cmp	r2, r3
90022abc:	db7c      	blt.n	90022bb8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022abe:	46aa      	mov	sl, r5
90022ac0:	46b9      	mov	r9, r7
90022ac2:	f1ba 0f00 	cmp.w	sl, #0
90022ac6:	f340 8099 	ble.w	90022bfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90022aca:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022acc:	1421      	asrs	r1, r4, #16
90022ace:	ea4f 4026 	mov.w	r0, r6, asr #16
90022ad2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022ad6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022ada:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022ade:	f100 80d1 	bmi.w	90022c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022ae2:	f10e 3bff 	add.w	fp, lr, #4294967295
90022ae6:	4559      	cmp	r1, fp
90022ae8:	f280 80cc 	bge.w	90022c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022aec:	2800      	cmp	r0, #0
90022aee:	f2c0 80c9 	blt.w	90022c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022af2:	f103 3bff 	add.w	fp, r3, #4294967295
90022af6:	4558      	cmp	r0, fp
90022af8:	f280 80c4 	bge.w	90022c84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022afc:	fa0f fe8e 	sxth.w	lr, lr
90022b00:	fb00 110e 	mla	r1, r0, lr, r1
90022b04:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022b08:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90022b0c:	8841      	ldrh	r1, [r0, #2]
90022b0e:	f1bc 0f00 	cmp.w	ip, #0
90022b12:	d00b      	beq.n	90022b2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90022b14:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90022b18:	3b01      	subs	r3, #1
90022b1a:	005b      	lsls	r3, r3, #1
90022b1c:	3302      	adds	r3, #2
90022b1e:	eb00 0e03 	add.w	lr, r0, r3
90022b22:	5ac3      	ldrh	r3, [r0, r3]
90022b24:	9308      	str	r3, [sp, #32]
90022b26:	f8be 3002 	ldrh.w	r3, [lr, #2]
90022b2a:	9309      	str	r3, [sp, #36]	; 0x24
90022b2c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90022b30:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022b34:	fb12 f30c 	smulbb	r3, r2, ip
90022b38:	f1cc 0e10 	rsb	lr, ip, #16
90022b3c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022b40:	10db      	asrs	r3, r3, #3
90022b42:	ebae 0e02 	sub.w	lr, lr, r2
90022b46:	ea40 000b 	orr.w	r0, r0, fp
90022b4a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022b4e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022b52:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022b56:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022b5a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022b5e:	ea4b 0101 	orr.w	r1, fp, r1
90022b62:	4351      	muls	r1, r2
90022b64:	9a09      	ldr	r2, [sp, #36]	; 0x24
90022b66:	fb0e 1e00 	mla	lr, lr, r0, r1
90022b6a:	0410      	lsls	r0, r2, #16
90022b6c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022b70:	9908      	ldr	r1, [sp, #32]
90022b72:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022b76:	4310      	orrs	r0, r2
90022b78:	9a08      	ldr	r2, [sp, #32]
90022b7a:	0412      	lsls	r2, r2, #16
90022b7c:	fb03 e000 	mla	r0, r3, r0, lr
90022b80:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022b84:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90022b88:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022b8c:	ea42 020e 	orr.w	r2, r2, lr
90022b90:	fb03 0302 	mla	r3, r3, r2, r0
90022b94:	0d5a      	lsrs	r2, r3, #21
90022b96:	095b      	lsrs	r3, r3, #5
90022b98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022b9c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022ba0:	4313      	orrs	r3, r2
90022ba2:	f8a9 3000 	strh.w	r3, [r9]
90022ba6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022ba8:	f109 0902 	add.w	r9, r9, #2
90022bac:	f10a 3aff 	add.w	sl, sl, #4294967295
90022bb0:	441c      	add	r4, r3
90022bb2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022bb4:	441e      	add	r6, r3
90022bb6:	e784      	b.n	90022ac2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90022bb8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022bba:	3d01      	subs	r5, #1
90022bbc:	3702      	adds	r7, #2
90022bbe:	441c      	add	r4, r3
90022bc0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022bc2:	441e      	add	r6, r3
90022bc4:	e761      	b.n	90022a8a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022bc6:	d01d      	beq.n	90022c04 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022bc8:	1e6b      	subs	r3, r5, #1
90022bca:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022bcc:	fb00 4003 	mla	r0, r0, r3, r4
90022bd0:	1400      	asrs	r0, r0, #16
90022bd2:	f53f af74 	bmi.w	90022abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022bd6:	3901      	subs	r1, #1
90022bd8:	4288      	cmp	r0, r1
90022bda:	f6bf af70 	bge.w	90022abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022bde:	991c      	ldr	r1, [sp, #112]	; 0x70
90022be0:	fb01 6303 	mla	r3, r1, r3, r6
90022be4:	141b      	asrs	r3, r3, #16
90022be6:	f53f af6a 	bmi.w	90022abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022bea:	3a01      	subs	r2, #1
90022bec:	4293      	cmp	r3, r2
90022bee:	f6bf af66 	bge.w	90022abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022bf2:	46a9      	mov	r9, r5
90022bf4:	46ba      	mov	sl, r7
90022bf6:	f1b9 0f00 	cmp.w	r9, #0
90022bfa:	dc5b      	bgt.n	90022cb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022bfc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022c00:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90022c04:	9b07      	ldr	r3, [sp, #28]
90022c06:	2b00      	cmp	r3, #0
90022c08:	f340 80b9 	ble.w	90022d7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022c0c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022c10:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022c12:	ee30 0a04 	vadd.f32	s0, s0, s8
90022c16:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022c1a:	eef0 6a62 	vmov.f32	s13, s5
90022c1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022c22:	ee31 1a05 	vadd.f32	s2, s2, s10
90022c26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c2a:	ee16 4a90 	vmov	r4, s13
90022c2e:	eef0 6a43 	vmov.f32	s13, s6
90022c32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022c36:	ee16 6a90 	vmov	r6, s13
90022c3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022c3e:	ee61 7a27 	vmul.f32	s15, s2, s15
90022c42:	ee77 2a62 	vsub.f32	s5, s14, s5
90022c46:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022c4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022c4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022c52:	ee12 2a90 	vmov	r2, s5
90022c56:	eef0 2a47 	vmov.f32	s5, s14
90022c5a:	fb92 f3f3 	sdiv	r3, r2, r3
90022c5e:	ee13 2a10 	vmov	r2, s6
90022c62:	931b      	str	r3, [sp, #108]	; 0x6c
90022c64:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022c66:	eeb0 3a67 	vmov.f32	s6, s15
90022c6a:	fb92 f3f3 	sdiv	r3, r2, r3
90022c6e:	931c      	str	r3, [sp, #112]	; 0x70
90022c70:	9b07      	ldr	r3, [sp, #28]
90022c72:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022c74:	3b01      	subs	r3, #1
90022c76:	9307      	str	r3, [sp, #28]
90022c78:	bf08      	it	eq
90022c7a:	4615      	moveq	r5, r2
90022c7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022c7e:	bf18      	it	ne
90022c80:	461d      	movne	r5, r3
90022c82:	e6f3      	b.n	90022a6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90022c84:	f111 0b01 	adds.w	fp, r1, #1
90022c88:	d48d      	bmi.n	90022ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022c8a:	45de      	cmp	lr, fp
90022c8c:	db8b      	blt.n	90022ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022c8e:	f110 0b01 	adds.w	fp, r0, #1
90022c92:	d488      	bmi.n	90022ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022c94:	455b      	cmp	r3, fp
90022c96:	db86      	blt.n	90022ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022c98:	b21b      	sxth	r3, r3
90022c9a:	e9cd 1001 	strd	r1, r0, [sp, #4]
90022c9e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90022ca2:	9300      	str	r3, [sp, #0]
90022ca4:	4642      	mov	r2, r8
90022ca6:	fa0f f38e 	sxth.w	r3, lr
90022caa:	4649      	mov	r1, r9
90022cac:	980d      	ldr	r0, [sp, #52]	; 0x34
90022cae:	f7ff fe4c 	bl	9002294a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90022cb2:	e778      	b.n	90022ba6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022cb4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022cb6:	1420      	asrs	r0, r4, #16
90022cb8:	1431      	asrs	r1, r6, #16
90022cba:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022cbe:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022cc2:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022cc6:	fb03 0101 	mla	r1, r3, r1, r0
90022cca:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022cce:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90022cd2:	8841      	ldrh	r1, [r0, #2]
90022cd4:	f1be 0f00 	cmp.w	lr, #0
90022cd8:	d00b      	beq.n	90022cf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90022cda:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90022cde:	3b01      	subs	r3, #1
90022ce0:	005b      	lsls	r3, r3, #1
90022ce2:	3302      	adds	r3, #2
90022ce4:	eb00 0b03 	add.w	fp, r0, r3
90022ce8:	5ac3      	ldrh	r3, [r0, r3]
90022cea:	930a      	str	r3, [sp, #40]	; 0x28
90022cec:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022cf0:	930b      	str	r3, [sp, #44]	; 0x2c
90022cf2:	ea4f 400c 	mov.w	r0, ip, lsl #16
90022cf6:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022cfa:	fb12 f30e 	smulbb	r3, r2, lr
90022cfe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022d02:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022d06:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022d0a:	10db      	asrs	r3, r3, #3
90022d0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022d10:	ea40 000c 	orr.w	r0, r0, ip
90022d14:	f1ce 0c10 	rsb	ip, lr, #16
90022d18:	ea4b 0101 	orr.w	r1, fp, r1
90022d1c:	f109 39ff 	add.w	r9, r9, #4294967295
90022d20:	ebac 0c02 	sub.w	ip, ip, r2
90022d24:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022d28:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022d2c:	4351      	muls	r1, r2
90022d2e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022d30:	fb0c 1c00 	mla	ip, ip, r0, r1
90022d34:	990a      	ldr	r1, [sp, #40]	; 0x28
90022d36:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022d3a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
90022d3e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022d40:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022d44:	0412      	lsls	r2, r2, #16
90022d46:	ea4b 0000 	orr.w	r0, fp, r0
90022d4a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
90022d4e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022d52:	fb03 c000 	mla	r0, r3, r0, ip
90022d56:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022d5a:	ea42 0b0b 	orr.w	fp, r2, fp
90022d5e:	fb03 000b 	mla	r0, r3, fp, r0
90022d62:	0d43      	lsrs	r3, r0, #21
90022d64:	0940      	lsrs	r0, r0, #5
90022d66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022d6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022d6e:	4318      	orrs	r0, r3
90022d70:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022d72:	441c      	add	r4, r3
90022d74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022d76:	f82a 0b02 	strh.w	r0, [sl], #2
90022d7a:	441e      	add	r6, r3
90022d7c:	e73b      	b.n	90022bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90022d7e:	b00f      	add	sp, #60	; 0x3c
90022d80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90022d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022d88:	b085      	sub	sp, #20
90022d8a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90022d8e:	9102      	str	r1, [sp, #8]
90022d90:	2c00      	cmp	r4, #0
90022d92:	fb04 7103 	mla	r1, r4, r3, r7
90022d96:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90022d9a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022d9e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90022da2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90022da6:	f2c0 811b 	blt.w	90022fe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022daa:	45a6      	cmp	lr, r4
90022dac:	f340 8118 	ble.w	90022fe0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022db0:	2f00      	cmp	r7, #0
90022db2:	f2c0 8113 	blt.w	90022fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022db6:	42bb      	cmp	r3, r7
90022db8:	f340 8110 	ble.w	90022fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022dbc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90022dc0:	1c7a      	adds	r2, r7, #1
90022dc2:	f100 8110 	bmi.w	90022fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022dc6:	4293      	cmp	r3, r2
90022dc8:	f340 810d 	ble.w	90022fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022dcc:	2e00      	cmp	r6, #0
90022dce:	f000 810c 	beq.w	90022fea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90022dd2:	f8dc 1004 	ldr.w	r1, [ip, #4]
90022dd6:	3401      	adds	r4, #1
90022dd8:	f100 810b 	bmi.w	90022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022ddc:	45a6      	cmp	lr, r4
90022dde:	f340 8108 	ble.w	90022ff2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022de2:	2800      	cmp	r0, #0
90022de4:	f000 8108 	beq.w	90022ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90022de8:	2f00      	cmp	r7, #0
90022dea:	f2c0 8100 	blt.w	90022fee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022dee:	42bb      	cmp	r3, r7
90022df0:	f340 80fd 	ble.w	90022fee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022df4:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90022df8:	3701      	adds	r7, #1
90022dfa:	f100 8100 	bmi.w	90022ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022dfe:	42bb      	cmp	r3, r7
90022e00:	f340 80fd 	ble.w	90022ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022e04:	2e00      	cmp	r6, #0
90022e06:	f000 80fc 	beq.w	90023002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90022e0a:	3301      	adds	r3, #1
90022e0c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90022e10:	b2b6      	uxth	r6, r6
90022e12:	b280      	uxth	r0, r0
90022e14:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022e18:	fb00 fe06 	mul.w	lr, r0, r6
90022e1c:	0136      	lsls	r6, r6, #4
90022e1e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022e22:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022e26:	eba6 070e 	sub.w	r7, r6, lr
90022e2a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90022e2e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022e32:	b280      	uxth	r0, r0
90022e34:	b2bf      	uxth	r7, r7
90022e36:	1a1b      	subs	r3, r3, r0
90022e38:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022e3c:	fb0a f607 	mul.w	r6, sl, r7
90022e40:	b29b      	uxth	r3, r3
90022e42:	fb0b 6603 	mla	r6, fp, r3, r6
90022e46:	fb00 6609 	mla	r6, r0, r9, r6
90022e4a:	fb0e 6608 	mla	r6, lr, r8, r6
90022e4e:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022e52:	9600      	str	r6, [sp, #0]
90022e54:	2e00      	cmp	r6, #0
90022e56:	f000 80be 	beq.w	90022fd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90022e5a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90022e5e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90022e62:	9e02      	ldr	r6, [sp, #8]
90022e64:	fb0b fc0c 	mul.w	ip, fp, ip
90022e68:	fb0b f505 	mul.w	r5, fp, r5
90022e6c:	8836      	ldrh	r6, [r6, #0]
90022e6e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022e72:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022e76:	9501      	str	r5, [sp, #4]
90022e78:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90022e7c:	44dc      	add	ip, fp
90022e7e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e82:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90022e86:	9503      	str	r5, [sp, #12]
90022e88:	9d01      	ldr	r5, [sp, #4]
90022e8a:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90022e8e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90022e92:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90022e96:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022e9a:	fb0a fc0c 	mul.w	ip, sl, ip
90022e9e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022ea2:	fb0a fa01 	mul.w	sl, sl, r1
90022ea6:	ea4f 251c 	mov.w	r5, ip, lsr #8
90022eaa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022eae:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90022eb2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022eb6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90022eba:	4465      	add	r5, ip
90022ebc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90022ec0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90022ec4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022ec8:	fb09 fc0c 	mul.w	ip, r9, ip
90022ecc:	0a2d      	lsrs	r5, r5, #8
90022ece:	fb09 f904 	mul.w	r9, r9, r4
90022ed2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90022ed6:	ea4f 211c 	mov.w	r1, ip, lsr #8
90022eda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90022ede:	f509 7480 	add.w	r4, r9, #256	; 0x100
90022ee2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022ee6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022eea:	437d      	muls	r5, r7
90022eec:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022ef0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90022ef4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90022ef8:	4461      	add	r1, ip
90022efa:	fb08 f404 	mul.w	r4, r8, r4
90022efe:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022f02:	fb08 f802 	mul.w	r8, r8, r2
90022f06:	0a09      	lsrs	r1, r1, #8
90022f08:	0a22      	lsrs	r2, r4, #8
90022f0a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90022f0e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90022f12:	fb07 f70a 	mul.w	r7, r7, sl
90022f16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90022f1a:	4414      	add	r4, r2
90022f1c:	f508 7280 	add.w	r2, r8, #256	; 0x100
90022f20:	0a24      	lsrs	r4, r4, #8
90022f22:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022f26:	9a03      	ldr	r2, [sp, #12]
90022f28:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90022f2c:	fb02 5503 	mla	r5, r2, r3, r5
90022f30:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022f34:	9a00      	ldr	r2, [sp, #0]
90022f36:	fb04 540e 	mla	r4, r4, lr, r5
90022f3a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90022f3e:	1235      	asrs	r5, r6, #8
90022f40:	fb01 4100 	mla	r1, r1, r0, r4
90022f44:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90022f48:	0a09      	lsrs	r1, r1, #8
90022f4a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90022f4e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90022f52:	fb03 7101 	mla	r1, r3, r1, r7
90022f56:	fb0e 1e08 	mla	lr, lr, r8, r1
90022f5a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90022f5e:	fb00 e101 	mla	r1, r0, r1, lr
90022f62:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
90022f66:	b287      	uxth	r7, r0
90022f68:	0a09      	lsrs	r1, r1, #8
90022f6a:	437a      	muls	r2, r7
90022f6c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90022f70:	1c53      	adds	r3, r2, #1
90022f72:	4321      	orrs	r1, r4
90022f74:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022f78:	0c0a      	lsrs	r2, r1, #16
90022f7a:	f3c1 2407 	ubfx	r4, r1, #8, #8
90022f7e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90022f82:	b2c8      	uxtb	r0, r1
90022f84:	fb12 f207 	smulbb	r2, r2, r7
90022f88:	fb14 f407 	smulbb	r4, r4, r7
90022f8c:	b2db      	uxtb	r3, r3
90022f8e:	fb10 f007 	smulbb	r0, r0, r7
90022f92:	fb05 2503 	mla	r5, r5, r3, r2
90022f96:	10f2      	asrs	r2, r6, #3
90022f98:	00f6      	lsls	r6, r6, #3
90022f9a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90022f9e:	b2ad      	uxth	r5, r5
90022fa0:	b2f6      	uxtb	r6, r6
90022fa2:	fb02 4203 	mla	r2, r2, r3, r4
90022fa6:	fb06 0303 	mla	r3, r6, r3, r0
90022faa:	b294      	uxth	r4, r2
90022fac:	b299      	uxth	r1, r3
90022fae:	1c6b      	adds	r3, r5, #1
90022fb0:	1c62      	adds	r2, r4, #1
90022fb2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022fb6:	1c4b      	adds	r3, r1, #1
90022fb8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90022fbc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022fc0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022fc4:	0952      	lsrs	r2, r2, #5
90022fc6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022fca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022fce:	432b      	orrs	r3, r5
90022fd0:	4313      	orrs	r3, r2
90022fd2:	9a02      	ldr	r2, [sp, #8]
90022fd4:	8013      	strh	r3, [r2, #0]
90022fd6:	b005      	add	sp, #20
90022fd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90022fdc:	2500      	movs	r5, #0
90022fde:	e6ef      	b.n	90022dc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90022fe0:	2100      	movs	r1, #0
90022fe2:	460d      	mov	r5, r1
90022fe4:	e6f7      	b.n	90022dd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022fe6:	2100      	movs	r1, #0
90022fe8:	e6f5      	b.n	90022dd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022fea:	4631      	mov	r1, r6
90022fec:	e6f3      	b.n	90022dd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90022fee:	2400      	movs	r4, #0
90022ff0:	e702      	b.n	90022df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90022ff2:	2200      	movs	r2, #0
90022ff4:	4614      	mov	r4, r2
90022ff6:	e70b      	b.n	90022e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90022ff8:	4602      	mov	r2, r0
90022ffa:	4604      	mov	r4, r0
90022ffc:	e708      	b.n	90022e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90022ffe:	2200      	movs	r2, #0
90023000:	e706      	b.n	90022e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023002:	4632      	mov	r2, r6
90023004:	e704      	b.n	90022e10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90023006 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023006:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002300a:	b09d      	sub	sp, #116	; 0x74
9002300c:	9219      	str	r2, [sp, #100]	; 0x64
9002300e:	9307      	str	r3, [sp, #28]
90023010:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90023012:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90023016:	901b      	str	r0, [sp, #108]	; 0x6c
90023018:	931a      	str	r3, [sp, #104]	; 0x68
9002301a:	6850      	ldr	r0, [r2, #4]
9002301c:	9117      	str	r1, [sp, #92]	; 0x5c
9002301e:	6812      	ldr	r2, [r2, #0]
90023020:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90023024:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90023028:	fb00 1303 	mla	r3, r0, r3, r1
9002302c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023030:	930a      	str	r3, [sp, #40]	; 0x28
90023032:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90023034:	681b      	ldr	r3, [r3, #0]
90023036:	9310      	str	r3, [sp, #64]	; 0x40
90023038:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9002303c:	930b      	str	r3, [sp, #44]	; 0x2c
9002303e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023040:	2b00      	cmp	r3, #0
90023042:	dc03      	bgt.n	9002304c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90023044:	9b19      	ldr	r3, [sp, #100]	; 0x64
90023046:	2b00      	cmp	r3, #0
90023048:	f340 8375 	ble.w	90023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
9002304c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002304e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023052:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023056:	1e48      	subs	r0, r1, #1
90023058:	1e57      	subs	r7, r2, #1
9002305a:	9b07      	ldr	r3, [sp, #28]
9002305c:	2b00      	cmp	r3, #0
9002305e:	f340 818e 	ble.w	9002337e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90023062:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023066:	ea4f 4326 	mov.w	r3, r6, asr #16
9002306a:	d406      	bmi.n	9002307a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9002306c:	4584      	cmp	ip, r0
9002306e:	da04      	bge.n	9002307a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90023070:	2b00      	cmp	r3, #0
90023072:	db02      	blt.n	9002307a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90023074:	42bb      	cmp	r3, r7
90023076:	f2c0 8183 	blt.w	90023380 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
9002307a:	f11c 0c01 	adds.w	ip, ip, #1
9002307e:	f100 8173 	bmi.w	90023368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023082:	4561      	cmp	r1, ip
90023084:	f2c0 8170 	blt.w	90023368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023088:	3301      	adds	r3, #1
9002308a:	f100 816d 	bmi.w	90023368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
9002308e:	429a      	cmp	r2, r3
90023090:	f2c0 816a 	blt.w	90023368 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023094:	9b07      	ldr	r3, [sp, #28]
90023096:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023098:	9318      	str	r3, [sp, #96]	; 0x60
9002309a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002309c:	2b00      	cmp	r3, #0
9002309e:	f340 818c 	ble.w	900233ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
900230a2:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
900230a4:	ea4f 4c26 	mov.w	ip, r6, asr #16
900230a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900230aa:	f3c4 3003 	ubfx	r0, r4, #12, #4
900230ae:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900230b2:	1422      	asrs	r2, r4, #16
900230b4:	f3c6 3103 	ubfx	r1, r6, #12, #4
900230b8:	689b      	ldr	r3, [r3, #8]
900230ba:	f100 81cd 	bmi.w	90023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900230be:	f103 38ff 	add.w	r8, r3, #4294967295
900230c2:	4542      	cmp	r2, r8
900230c4:	f280 81c8 	bge.w	90023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900230c8:	f1bc 0f00 	cmp.w	ip, #0
900230cc:	f2c0 81c4 	blt.w	90023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900230d0:	f10e 38ff 	add.w	r8, lr, #4294967295
900230d4:	45c4      	cmp	ip, r8
900230d6:	f280 81bf 	bge.w	90023458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900230da:	b21b      	sxth	r3, r3
900230dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
900230de:	fb0c 2203 	mla	r2, ip, r3, r2
900230e2:	eb05 0882 	add.w	r8, r5, r2, lsl #2
900230e6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
900230ea:	ea4f 6e12 	mov.w	lr, r2, lsr #24
900230ee:	2800      	cmp	r0, #0
900230f0:	f000 81a9 	beq.w	90023446 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
900230f4:	f8d8 5004 	ldr.w	r5, [r8, #4]
900230f8:	950c      	str	r5, [sp, #48]	; 0x30
900230fa:	0e2d      	lsrs	r5, r5, #24
900230fc:	9513      	str	r5, [sp, #76]	; 0x4c
900230fe:	b181      	cbz	r1, 90023122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023100:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023104:	3b01      	subs	r3, #1
90023106:	009b      	lsls	r3, r3, #2
90023108:	3304      	adds	r3, #4
9002310a:	eb08 0c03 	add.w	ip, r8, r3
9002310e:	f858 3003 	ldr.w	r3, [r8, r3]
90023112:	9308      	str	r3, [sp, #32]
90023114:	0e1b      	lsrs	r3, r3, #24
90023116:	9311      	str	r3, [sp, #68]	; 0x44
90023118:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002311c:	930d      	str	r3, [sp, #52]	; 0x34
9002311e:	0e1b      	lsrs	r3, r3, #24
90023120:	9314      	str	r3, [sp, #80]	; 0x50
90023122:	b280      	uxth	r0, r0
90023124:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023126:	b289      	uxth	r1, r1
90023128:	fb00 f901 	mul.w	r9, r0, r1
9002312c:	0100      	lsls	r0, r0, #4
9002312e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90023132:	eba0 0809 	sub.w	r8, r0, r9
90023136:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002313a:	9813      	ldr	r0, [sp, #76]	; 0x4c
9002313c:	b289      	uxth	r1, r1
9002313e:	fa1f f888 	uxth.w	r8, r8
90023142:	1a5b      	subs	r3, r3, r1
90023144:	fb08 f000 	mul.w	r0, r8, r0
90023148:	b29b      	uxth	r3, r3
9002314a:	fb03 000e 	mla	r0, r3, lr, r0
9002314e:	fb01 0005 	mla	r0, r1, r5, r0
90023152:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023154:	fb09 0005 	mla	r0, r9, r5, r0
90023158:	f3c0 2007 	ubfx	r0, r0, #8, #8
9002315c:	2800      	cmp	r0, #0
9002315e:	f000 80fa 	beq.w	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023162:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023166:	d01b      	beq.n	900231a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90023168:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
9002316c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023170:	fb0e fa0a 	mul.w	sl, lr, sl
90023174:	fb0e fe02 	mul.w	lr, lr, r2
90023178:	ea4f 221a 	mov.w	r2, sl, lsr #8
9002317c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023180:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023184:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023188:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002318c:	4452      	add	r2, sl
9002318e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023192:	0a12      	lsrs	r2, r2, #8
90023194:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023198:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002319c:	ea42 020c 	orr.w	r2, r2, ip
900231a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900231a2:	2dff      	cmp	r5, #255	; 0xff
900231a4:	d021      	beq.n	900231ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
900231a6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900231a8:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900231ac:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900231ae:	fb05 fb0b 	mul.w	fp, r5, fp
900231b2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900231b4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900231b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900231ba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900231be:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900231c2:	fb05 fa0a 	mul.w	sl, r5, sl
900231c6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900231ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900231ce:	44de      	add	lr, fp
900231d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900231d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900231d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900231dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900231e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900231e4:	ea4e 050a 	orr.w	r5, lr, sl
900231e8:	950c      	str	r5, [sp, #48]	; 0x30
900231ea:	9d11      	ldr	r5, [sp, #68]	; 0x44
900231ec:	2dff      	cmp	r5, #255	; 0xff
900231ee:	d021      	beq.n	90023234 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
900231f0:	9d08      	ldr	r5, [sp, #32]
900231f2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900231f6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900231f8:	fb05 fb0b 	mul.w	fp, r5, fp
900231fc:	9d08      	ldr	r5, [sp, #32]
900231fe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023202:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023204:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023208:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002320c:	fb05 fa0a 	mul.w	sl, r5, sl
90023210:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023214:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023218:	44de      	add	lr, fp
9002321a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002321e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023222:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023226:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002322a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002322e:	ea4e 050a 	orr.w	r5, lr, sl
90023232:	9508      	str	r5, [sp, #32]
90023234:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023236:	2dff      	cmp	r5, #255	; 0xff
90023238:	d021      	beq.n	9002327e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
9002323a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002323c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023240:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023242:	fb05 fb0b 	mul.w	fp, r5, fp
90023246:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023248:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002324c:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002324e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023252:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023256:	fb05 fa0a 	mul.w	sl, r5, sl
9002325a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002325e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023262:	44de      	add	lr, fp
90023264:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023268:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002326c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023270:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023274:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023278:	ea4e 050a 	orr.w	r5, lr, sl
9002327c:	950d      	str	r5, [sp, #52]	; 0x34
9002327e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023280:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023284:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023288:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002328c:	9d08      	ldr	r5, [sp, #32]
9002328e:	fb08 fc0c 	mul.w	ip, r8, ip
90023292:	fb03 cc0e 	mla	ip, r3, lr, ip
90023296:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002329a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002329c:	fb01 cc0e 	mla	ip, r1, lr, ip
900232a0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
900232a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900232a6:	fb09 cc0e 	mla	ip, r9, lr, ip
900232aa:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
900232ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900232b0:	fb08 f80e 	mul.w	r8, r8, lr
900232b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900232b8:	fb03 8202 	mla	r2, r3, r2, r8
900232bc:	9b08      	ldr	r3, [sp, #32]
900232be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900232c2:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
900232c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900232c8:	fb01 220a 	mla	r2, r1, sl, r2
900232cc:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
900232d0:	883b      	ldrh	r3, [r7, #0]
900232d2:	fb09 2901 	mla	r9, r9, r1, r2
900232d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900232d8:	1219      	asrs	r1, r3, #8
900232da:	4342      	muls	r2, r0
900232dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
900232e0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900232e4:	1c50      	adds	r0, r2, #1
900232e6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
900232ea:	eb00 2012 	add.w	r0, r0, r2, lsr #8
900232ee:	ea4c 0c09 	orr.w	ip, ip, r9
900232f2:	ea6f 2010 	mvn.w	r0, r0, lsr #8
900232f6:	ea4f 421c 	mov.w	r2, ip, lsr #16
900232fa:	f3cc 2e07 	ubfx	lr, ip, #8, #8
900232fe:	fa5f fc8c 	uxtb.w	ip, ip
90023302:	fb12 f205 	smulbb	r2, r2, r5
90023306:	b2c0      	uxtb	r0, r0
90023308:	fb1c fc05 	smulbb	ip, ip, r5
9002330c:	fb01 2100 	mla	r1, r1, r0, r2
90023310:	10da      	asrs	r2, r3, #3
90023312:	fb1e fe05 	smulbb	lr, lr, r5
90023316:	00db      	lsls	r3, r3, #3
90023318:	b289      	uxth	r1, r1
9002331a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002331e:	b2db      	uxtb	r3, r3
90023320:	fb02 e200 	mla	r2, r2, r0, lr
90023324:	fb03 c300 	mla	r3, r3, r0, ip
90023328:	b292      	uxth	r2, r2
9002332a:	fa1f fc83 	uxth.w	ip, r3
9002332e:	1c4b      	adds	r3, r1, #1
90023330:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90023334:	f10c 0301 	add.w	r3, ip, #1
90023338:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002333c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90023340:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023344:	430b      	orrs	r3, r1
90023346:	1c51      	adds	r1, r2, #1
90023348:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002334c:	0952      	lsrs	r2, r2, #5
9002334e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023352:	4313      	orrs	r3, r2
90023354:	803b      	strh	r3, [r7, #0]
90023356:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023358:	3702      	adds	r7, #2
9002335a:	441c      	add	r4, r3
9002335c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002335e:	441e      	add	r6, r3
90023360:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023362:	3b01      	subs	r3, #1
90023364:	9318      	str	r3, [sp, #96]	; 0x60
90023366:	e698      	b.n	9002309a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90023368:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9002336a:	441c      	add	r4, r3
9002336c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9002336e:	441e      	add	r6, r3
90023370:	9b07      	ldr	r3, [sp, #28]
90023372:	3b01      	subs	r3, #1
90023374:	9307      	str	r3, [sp, #28]
90023376:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023378:	3302      	adds	r3, #2
9002337a:	930a      	str	r3, [sp, #40]	; 0x28
9002337c:	e66d      	b.n	9002305a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9002337e:	d023      	beq.n	900233c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90023380:	9b07      	ldr	r3, [sp, #28]
90023382:	9829      	ldr	r0, [sp, #164]	; 0xa4
90023384:	3b01      	subs	r3, #1
90023386:	fb00 4003 	mla	r0, r0, r3, r4
9002338a:	1400      	asrs	r0, r0, #16
9002338c:	f53f ae82 	bmi.w	90023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023390:	3901      	subs	r1, #1
90023392:	4288      	cmp	r0, r1
90023394:	f6bf ae7e 	bge.w	90023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023398:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002339a:	fb01 6303 	mla	r3, r1, r3, r6
9002339e:	141b      	asrs	r3, r3, #16
900233a0:	f53f ae78 	bmi.w	90023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900233a4:	3a01      	subs	r2, #1
900233a6:	4293      	cmp	r3, r2
900233a8:	f6bf ae74 	bge.w	90023094 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
900233ac:	f8dd b01c 	ldr.w	fp, [sp, #28]
900233b0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
900233b4:	f1bb 0f00 	cmp.w	fp, #0
900233b8:	dc6c      	bgt.n	90023494 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900233ba:	9b07      	ldr	r3, [sp, #28]
900233bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900233c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900233c2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900233c6:	930a      	str	r3, [sp, #40]	; 0x28
900233c8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900233ca:	2b00      	cmp	r3, #0
900233cc:	f340 81b3 	ble.w	90023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900233d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900233d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
900233d6:	ee30 0a04 	vadd.f32	s0, s0, s8
900233da:	ee70 0aa4 	vadd.f32	s1, s1, s9
900233de:	eef0 6a62 	vmov.f32	s13, s5
900233e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900233e6:	ee31 1a05 	vadd.f32	s2, s2, s10
900233ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900233ee:	ee16 4a90 	vmov	r4, s13
900233f2:	eef0 6a43 	vmov.f32	s13, s6
900233f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900233fa:	ee16 6a90 	vmov	r6, s13
900233fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023402:	ee61 7a27 	vmul.f32	s15, s2, s15
90023406:	ee77 2a62 	vsub.f32	s5, s14, s5
9002340a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002340e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023412:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023416:	ee12 2a90 	vmov	r2, s5
9002341a:	eef0 2a47 	vmov.f32	s5, s14
9002341e:	fb92 f3f3 	sdiv	r3, r2, r3
90023422:	ee13 2a10 	vmov	r2, s6
90023426:	9329      	str	r3, [sp, #164]	; 0xa4
90023428:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002342a:	eeb0 3a67 	vmov.f32	s6, s15
9002342e:	fb92 f3f3 	sdiv	r3, r2, r3
90023432:	932a      	str	r3, [sp, #168]	; 0xa8
90023434:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023436:	9a19      	ldr	r2, [sp, #100]	; 0x64
90023438:	3b01      	subs	r3, #1
9002343a:	9317      	str	r3, [sp, #92]	; 0x5c
9002343c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002343e:	bf08      	it	eq
90023440:	4613      	moveq	r3, r2
90023442:	9307      	str	r3, [sp, #28]
90023444:	e5fb      	b.n	9002303e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90023446:	2900      	cmp	r1, #0
90023448:	f43f ae6b 	beq.w	90023122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9002344c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023450:	9308      	str	r3, [sp, #32]
90023452:	0e1b      	lsrs	r3, r3, #24
90023454:	9311      	str	r3, [sp, #68]	; 0x44
90023456:	e664      	b.n	90023122 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023458:	f112 0801 	adds.w	r8, r2, #1
9002345c:	f53f af7b 	bmi.w	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023460:	4543      	cmp	r3, r8
90023462:	f6ff af78 	blt.w	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023466:	f11c 0801 	adds.w	r8, ip, #1
9002346a:	f53f af74 	bmi.w	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
9002346e:	45c6      	cmp	lr, r8
90023470:	f6ff af71 	blt.w	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023474:	9d1a      	ldr	r5, [sp, #104]	; 0x68
90023476:	b21b      	sxth	r3, r3
90023478:	9201      	str	r2, [sp, #4]
9002347a:	fa0f f28e 	sxth.w	r2, lr
9002347e:	e9cd 1504 	strd	r1, r5, [sp, #16]
90023482:	e9cd c002 	strd	ip, r0, [sp, #8]
90023486:	9200      	str	r2, [sp, #0]
90023488:	4639      	mov	r1, r7
9002348a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002348c:	981b      	ldr	r0, [sp, #108]	; 0x6c
9002348e:	f7ff fc79 	bl	90022d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90023492:	e760      	b.n	90023356 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023494:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90023496:	1427      	asrs	r7, r4, #16
90023498:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002349a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002349e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900234a2:	1433      	asrs	r3, r6, #16
900234a4:	f3c6 3003 	ubfx	r0, r6, #12, #4
900234a8:	fb01 7303 	mla	r3, r1, r3, r7
900234ac:	eb05 0783 	add.w	r7, r5, r3, lsl #2
900234b0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900234b4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900234b8:	2a00      	cmp	r2, #0
900234ba:	f000 8133 	beq.w	90023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
900234be:	687d      	ldr	r5, [r7, #4]
900234c0:	950e      	str	r5, [sp, #56]	; 0x38
900234c2:	0e2d      	lsrs	r5, r5, #24
900234c4:	9515      	str	r5, [sp, #84]	; 0x54
900234c6:	b178      	cbz	r0, 900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900234c8:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
900234cc:	3901      	subs	r1, #1
900234ce:	0089      	lsls	r1, r1, #2
900234d0:	3104      	adds	r1, #4
900234d2:	eb07 0e01 	add.w	lr, r7, r1
900234d6:	5879      	ldr	r1, [r7, r1]
900234d8:	9109      	str	r1, [sp, #36]	; 0x24
900234da:	0e09      	lsrs	r1, r1, #24
900234dc:	9112      	str	r1, [sp, #72]	; 0x48
900234de:	f8de 1004 	ldr.w	r1, [lr, #4]
900234e2:	910f      	str	r1, [sp, #60]	; 0x3c
900234e4:	0e09      	lsrs	r1, r1, #24
900234e6:	9116      	str	r1, [sp, #88]	; 0x58
900234e8:	b292      	uxth	r2, r2
900234ea:	9915      	ldr	r1, [sp, #84]	; 0x54
900234ec:	b280      	uxth	r0, r0
900234ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
900234f0:	fb02 f800 	mul.w	r8, r2, r0
900234f4:	0112      	lsls	r2, r2, #4
900234f6:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
900234fa:	eba2 0e08 	sub.w	lr, r2, r8
900234fe:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023502:	b280      	uxth	r0, r0
90023504:	fa1f fe8e 	uxth.w	lr, lr
90023508:	1a12      	subs	r2, r2, r0
9002350a:	fb0e f101 	mul.w	r1, lr, r1
9002350e:	b292      	uxth	r2, r2
90023510:	fb02 110c 	mla	r1, r2, ip, r1
90023514:	fb00 1105 	mla	r1, r0, r5, r1
90023518:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002351a:	fb08 1105 	mla	r1, r8, r5, r1
9002351e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023522:	2900      	cmp	r1, #0
90023524:	f000 80f5 	beq.w	90023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90023528:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002352c:	d019      	beq.n	90023562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002352e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023532:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023536:	fb0c fa0a 	mul.w	sl, ip, sl
9002353a:	fb0c fc03 	mul.w	ip, ip, r3
9002353e:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023542:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023546:	f50c 7780 	add.w	r7, ip, #256	; 0x100
9002354a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002354e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023552:	4453      	add	r3, sl
90023554:	0a3f      	lsrs	r7, r7, #8
90023556:	0a1b      	lsrs	r3, r3, #8
90023558:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
9002355c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023560:	433b      	orrs	r3, r7
90023562:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023564:	2dff      	cmp	r5, #255	; 0xff
90023566:	d020      	beq.n	900235aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90023568:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002356a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002356e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023570:	436f      	muls	r7, r5
90023572:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023574:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023578:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002357c:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002357e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023582:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023586:	fb05 fa0a 	mul.w	sl, r5, sl
9002358a:	44bc      	add	ip, r7
9002358c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023590:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023594:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023598:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002359c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900235a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900235a4:	ea4c 050a 	orr.w	r5, ip, sl
900235a8:	950e      	str	r5, [sp, #56]	; 0x38
900235aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
900235ac:	2dff      	cmp	r5, #255	; 0xff
900235ae:	d020      	beq.n	900235f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
900235b0:	9d09      	ldr	r5, [sp, #36]	; 0x24
900235b2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900235b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
900235b8:	436f      	muls	r7, r5
900235ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
900235bc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900235c0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900235c4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900235c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900235ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900235ce:	fb05 fa0a 	mul.w	sl, r5, sl
900235d2:	44bc      	add	ip, r7
900235d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900235d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900235dc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900235e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900235e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900235e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900235ec:	ea4c 050a 	orr.w	r5, ip, sl
900235f0:	9509      	str	r5, [sp, #36]	; 0x24
900235f2:	9d16      	ldr	r5, [sp, #88]	; 0x58
900235f4:	2dff      	cmp	r5, #255	; 0xff
900235f6:	d020      	beq.n	9002363a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900235f8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900235fa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900235fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
90023600:	436f      	muls	r7, r5
90023602:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023604:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023608:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002360c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002360e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023612:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023616:	fb05 fa0a 	mul.w	sl, r5, sl
9002361a:	44bc      	add	ip, r7
9002361c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023620:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023624:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023628:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002362c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023630:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023634:	ea4c 050a 	orr.w	r5, ip, sl
90023638:	950f      	str	r5, [sp, #60]	; 0x3c
9002363a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002363c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90023640:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023644:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023648:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002364a:	fb0e f707 	mul.w	r7, lr, r7
9002364e:	fb02 770c 	mla	r7, r2, ip, r7
90023652:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023656:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023658:	fb00 770c 	mla	r7, r0, ip, r7
9002365c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023660:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023662:	fb08 770c 	mla	r7, r8, ip, r7
90023666:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
9002366a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
9002366c:	fb0e fe0c 	mul.w	lr, lr, ip
90023670:	0a3f      	lsrs	r7, r7, #8
90023672:	fb02 e303 	mla	r3, r2, r3, lr
90023676:	9a09      	ldr	r2, [sp, #36]	; 0x24
90023678:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002367c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90023680:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023682:	fb00 330a 	mla	r3, r0, sl, r3
90023686:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
9002368a:	f8b9 0000 	ldrh.w	r0, [r9]
9002368e:	fb08 3c0c 	mla	ip, r8, ip, r3
90023692:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023694:	1202      	asrs	r2, r0, #8
90023696:	4359      	muls	r1, r3
90023698:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002369c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900236a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900236a4:	1c4b      	adds	r3, r1, #1
900236a6:	ea47 070c 	orr.w	r7, r7, ip
900236aa:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900236ae:	0c3b      	lsrs	r3, r7, #16
900236b0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
900236b4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
900236b8:	b2ff      	uxtb	r7, r7
900236ba:	fb13 f305 	smulbb	r3, r3, r5
900236be:	b2c9      	uxtb	r1, r1
900236c0:	fb17 f705 	smulbb	r7, r7, r5
900236c4:	fb02 3201 	mla	r2, r2, r1, r3
900236c8:	10c3      	asrs	r3, r0, #3
900236ca:	fb1c fc05 	smulbb	ip, ip, r5
900236ce:	00c0      	lsls	r0, r0, #3
900236d0:	b292      	uxth	r2, r2
900236d2:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900236d6:	b2c0      	uxtb	r0, r0
900236d8:	fb03 c301 	mla	r3, r3, r1, ip
900236dc:	fb00 7001 	mla	r0, r0, r1, r7
900236e0:	1c51      	adds	r1, r2, #1
900236e2:	b29b      	uxth	r3, r3
900236e4:	b280      	uxth	r0, r0
900236e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900236ea:	f100 0c01 	add.w	ip, r0, #1
900236ee:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900236f2:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
900236f6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900236fa:	ea4c 0202 	orr.w	r2, ip, r2
900236fe:	f103 0c01 	add.w	ip, r3, #1
90023702:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023706:	095b      	lsrs	r3, r3, #5
90023708:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002370c:	431a      	orrs	r2, r3
9002370e:	f8a9 2000 	strh.w	r2, [r9]
90023712:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023714:	f109 0902 	add.w	r9, r9, #2
90023718:	f10b 3bff 	add.w	fp, fp, #4294967295
9002371c:	441c      	add	r4, r3
9002371e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90023720:	441e      	add	r6, r3
90023722:	e647      	b.n	900233b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90023724:	2800      	cmp	r0, #0
90023726:	f43f aedf 	beq.w	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002372a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002372e:	9109      	str	r1, [sp, #36]	; 0x24
90023730:	0e09      	lsrs	r1, r1, #24
90023732:	9112      	str	r1, [sp, #72]	; 0x48
90023734:	e6d8      	b.n	900234e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023736:	b01d      	add	sp, #116	; 0x74
90023738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002373c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
9002373c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023740:	b085      	sub	sp, #20
90023742:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90023746:	9102      	str	r1, [sp, #8]
90023748:	2c00      	cmp	r4, #0
9002374a:	fb04 7103 	mla	r1, r4, r3, r7
9002374e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90023752:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90023756:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002375a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
9002375e:	f2c0 810c 	blt.w	9002397a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023762:	45a6      	cmp	lr, r4
90023764:	f340 8109 	ble.w	9002397a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90023768:	2f00      	cmp	r7, #0
9002376a:	f2c0 8104 	blt.w	90023976 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002376e:	42bb      	cmp	r3, r7
90023770:	f340 8101 	ble.w	90023976 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90023774:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90023778:	1c7a      	adds	r2, r7, #1
9002377a:	f100 8101 	bmi.w	90023980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002377e:	4293      	cmp	r3, r2
90023780:	f340 80fe 	ble.w	90023980 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90023784:	2e00      	cmp	r6, #0
90023786:	f000 80fd 	beq.w	90023984 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
9002378a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002378e:	3401      	adds	r4, #1
90023790:	f100 80fc 	bmi.w	9002398c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90023794:	45a6      	cmp	lr, r4
90023796:	f340 80f9 	ble.w	9002398c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002379a:	2800      	cmp	r0, #0
9002379c:	f000 80f9 	beq.w	90023992 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
900237a0:	2f00      	cmp	r7, #0
900237a2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
900237a6:	f2c0 80ef 	blt.w	90023988 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900237aa:	42bb      	cmp	r3, r7
900237ac:	f340 80ec 	ble.w	90023988 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
900237b0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900237b4:	3701      	adds	r7, #1
900237b6:	f100 80ef 	bmi.w	90023998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
900237ba:	42bb      	cmp	r3, r7
900237bc:	f340 80ec 	ble.w	90023998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
900237c0:	2e00      	cmp	r6, #0
900237c2:	f000 80eb 	beq.w	9002399c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
900237c6:	6852      	ldr	r2, [r2, #4]
900237c8:	b2b6      	uxth	r6, r6
900237ca:	b280      	uxth	r0, r0
900237cc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900237d0:	fb00 fe06 	mul.w	lr, r0, r6
900237d4:	0136      	lsls	r6, r6, #4
900237d6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900237da:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900237de:	eba6 070e 	sub.w	r7, r6, lr
900237e2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
900237e6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900237ea:	b280      	uxth	r0, r0
900237ec:	b2bf      	uxth	r7, r7
900237ee:	1a1b      	subs	r3, r3, r0
900237f0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900237f4:	fb07 f60a 	mul.w	r6, r7, sl
900237f8:	b29b      	uxth	r3, r3
900237fa:	fb0b 6603 	mla	r6, fp, r3, r6
900237fe:	fb00 6609 	mla	r6, r0, r9, r6
90023802:	fb0e 6608 	mla	r6, lr, r8, r6
90023806:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002380a:	9600      	str	r6, [sp, #0]
9002380c:	2e00      	cmp	r6, #0
9002380e:	f000 80af 	beq.w	90023970 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90023812:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023816:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9002381a:	9e02      	ldr	r6, [sp, #8]
9002381c:	fb0b fc0c 	mul.w	ip, fp, ip
90023820:	fb0b f505 	mul.w	r5, fp, r5
90023824:	8836      	ldrh	r6, [r6, #0]
90023826:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002382a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002382e:	9501      	str	r5, [sp, #4]
90023830:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90023834:	44dc      	add	ip, fp
90023836:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002383a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9002383e:	9503      	str	r5, [sp, #12]
90023840:	9d01      	ldr	r5, [sp, #4]
90023842:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90023846:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002384a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9002384e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023852:	fb0a fc0c 	mul.w	ip, sl, ip
90023856:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002385a:	fb0a fa01 	mul.w	sl, sl, r1
9002385e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90023862:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023866:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9002386a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002386e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90023872:	4465      	add	r5, ip
90023874:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023878:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9002387c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023880:	fb09 fc0c 	mul.w	ip, r9, ip
90023884:	0a2d      	lsrs	r5, r5, #8
90023886:	fb09 f904 	mul.w	r9, r9, r4
9002388a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002388e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023892:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023896:	f509 7480 	add.w	r4, r9, #256	; 0x100
9002389a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002389e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900238a2:	437d      	muls	r5, r7
900238a4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
900238a8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
900238ac:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900238b0:	4461      	add	r1, ip
900238b2:	fb08 f404 	mul.w	r4, r8, r4
900238b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900238ba:	fb08 f802 	mul.w	r8, r8, r2
900238be:	0a09      	lsrs	r1, r1, #8
900238c0:	0a22      	lsrs	r2, r4, #8
900238c2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
900238c6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
900238ca:	fb07 f70a 	mul.w	r7, r7, sl
900238ce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900238d2:	4414      	add	r4, r2
900238d4:	f508 7280 	add.w	r2, r8, #256	; 0x100
900238d8:	0a24      	lsrs	r4, r4, #8
900238da:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900238de:	9a03      	ldr	r2, [sp, #12]
900238e0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
900238e4:	fb02 5503 	mla	r5, r2, r3, r5
900238e8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900238ec:	fb04 540e 	mla	r4, r4, lr, r5
900238f0:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900238f4:	fb01 4100 	mla	r1, r1, r0, r4
900238f8:	0a09      	lsrs	r1, r1, #8
900238fa:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900238fe:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90023902:	fb03 7101 	mla	r1, r3, r1, r7
90023906:	9b00      	ldr	r3, [sp, #0]
90023908:	fb0e 1e08 	mla	lr, lr, r8, r1
9002390c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90023910:	43da      	mvns	r2, r3
90023912:	1233      	asrs	r3, r6, #8
90023914:	fb00 e101 	mla	r1, r0, r1, lr
90023918:	10f0      	asrs	r0, r6, #3
9002391a:	b2d2      	uxtb	r2, r2
9002391c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90023920:	0a09      	lsrs	r1, r1, #8
90023922:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023926:	00f6      	lsls	r6, r6, #3
90023928:	4353      	muls	r3, r2
9002392a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002392e:	4350      	muls	r0, r2
90023930:	b2f6      	uxtb	r6, r6
90023932:	4321      	orrs	r1, r4
90023934:	4356      	muls	r6, r2
90023936:	1c5a      	adds	r2, r3, #1
90023938:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9002393c:	0c0b      	lsrs	r3, r1, #16
9002393e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023942:	1c42      	adds	r2, r0, #1
90023944:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023948:	0a0a      	lsrs	r2, r1, #8
9002394a:	021b      	lsls	r3, r3, #8
9002394c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023950:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023954:	00d2      	lsls	r2, r2, #3
90023956:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002395a:	4313      	orrs	r3, r2
9002395c:	1c72      	adds	r2, r6, #1
9002395e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90023962:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90023966:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002396a:	4319      	orrs	r1, r3
9002396c:	9b02      	ldr	r3, [sp, #8]
9002396e:	8019      	strh	r1, [r3, #0]
90023970:	b005      	add	sp, #20
90023972:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023976:	2500      	movs	r5, #0
90023978:	e6fe      	b.n	90023778 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
9002397a:	2100      	movs	r1, #0
9002397c:	460d      	mov	r5, r1
9002397e:	e706      	b.n	9002378e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023980:	2100      	movs	r1, #0
90023982:	e704      	b.n	9002378e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023984:	4631      	mov	r1, r6
90023986:	e702      	b.n	9002378e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023988:	2400      	movs	r4, #0
9002398a:	e713      	b.n	900237b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
9002398c:	2200      	movs	r2, #0
9002398e:	4614      	mov	r4, r2
90023990:	e71a      	b.n	900237c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023992:	4602      	mov	r2, r0
90023994:	4604      	mov	r4, r0
90023996:	e717      	b.n	900237c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023998:	2200      	movs	r2, #0
9002399a:	e715      	b.n	900237c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002399c:	4632      	mov	r2, r6
9002399e:	e713      	b.n	900237c8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

900239a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900239a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900239a4:	b09b      	sub	sp, #108	; 0x6c
900239a6:	9218      	str	r2, [sp, #96]	; 0x60
900239a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900239aa:	9019      	str	r0, [sp, #100]	; 0x64
900239ac:	9116      	str	r1, [sp, #88]	; 0x58
900239ae:	6850      	ldr	r0, [r2, #4]
900239b0:	9307      	str	r3, [sp, #28]
900239b2:	6812      	ldr	r2, [r2, #0]
900239b4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
900239b8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
900239bc:	fb00 1303 	mla	r3, r0, r3, r1
900239c0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900239c4:	930a      	str	r3, [sp, #40]	; 0x28
900239c6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900239c8:	681b      	ldr	r3, [r3, #0]
900239ca:	930f      	str	r3, [sp, #60]	; 0x3c
900239cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
900239ce:	2b00      	cmp	r3, #0
900239d0:	dc03      	bgt.n	900239da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900239d2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900239d4:	2b00      	cmp	r3, #0
900239d6:	f340 8387 	ble.w	900240e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900239da:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900239dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900239e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900239e4:	1e48      	subs	r0, r1, #1
900239e6:	1e57      	subs	r7, r2, #1
900239e8:	9b07      	ldr	r3, [sp, #28]
900239ea:	2b00      	cmp	r3, #0
900239ec:	f340 8166 	ble.w	90023cbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900239f0:	ea5f 4c24 	movs.w	ip, r4, asr #16
900239f4:	ea4f 4326 	mov.w	r3, r6, asr #16
900239f8:	d406      	bmi.n	90023a08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900239fa:	4584      	cmp	ip, r0
900239fc:	da04      	bge.n	90023a08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900239fe:	2b00      	cmp	r3, #0
90023a00:	db02      	blt.n	90023a08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023a02:	42bb      	cmp	r3, r7
90023a04:	f2c0 815b 	blt.w	90023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023a08:	f11c 0c01 	adds.w	ip, ip, #1
90023a0c:	f100 814b 	bmi.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023a10:	4561      	cmp	r1, ip
90023a12:	f2c0 8148 	blt.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023a16:	3301      	adds	r3, #1
90023a18:	f100 8145 	bmi.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023a1c:	429a      	cmp	r2, r3
90023a1e:	f2c0 8142 	blt.w	90023ca6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023a22:	9b07      	ldr	r3, [sp, #28]
90023a24:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023a26:	9317      	str	r3, [sp, #92]	; 0x5c
90023a28:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023a2a:	2b00      	cmp	r3, #0
90023a2c:	f340 8165 	ble.w	90023cfa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023a30:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90023a32:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023a36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023a38:	f3c4 3103 	ubfx	r1, r4, #12, #4
90023a3c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023a40:	1422      	asrs	r2, r4, #16
90023a42:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023a46:	689b      	ldr	r3, [r3, #8]
90023a48:	f100 81d5 	bmi.w	90023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023a4c:	f103 38ff 	add.w	r8, r3, #4294967295
90023a50:	4542      	cmp	r2, r8
90023a52:	f280 81d0 	bge.w	90023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023a56:	f1bc 0f00 	cmp.w	ip, #0
90023a5a:	f2c0 81cc 	blt.w	90023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023a5e:	f10e 38ff 	add.w	r8, lr, #4294967295
90023a62:	45c4      	cmp	ip, r8
90023a64:	f280 81c7 	bge.w	90023df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023a68:	b21b      	sxth	r3, r3
90023a6a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023a6c:	fb0c 2203 	mla	r2, ip, r3, r2
90023a70:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023a74:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90023a78:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90023a7c:	2900      	cmp	r1, #0
90023a7e:	f000 8182 	beq.w	90023d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023a82:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023a86:	950b      	str	r5, [sp, #44]	; 0x2c
90023a88:	0e2d      	lsrs	r5, r5, #24
90023a8a:	9512      	str	r5, [sp, #72]	; 0x48
90023a8c:	b180      	cbz	r0, 90023ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023a8e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023a92:	3b01      	subs	r3, #1
90023a94:	009b      	lsls	r3, r3, #2
90023a96:	3304      	adds	r3, #4
90023a98:	eb08 0c03 	add.w	ip, r8, r3
90023a9c:	f858 3003 	ldr.w	r3, [r8, r3]
90023aa0:	9308      	str	r3, [sp, #32]
90023aa2:	0e1b      	lsrs	r3, r3, #24
90023aa4:	9310      	str	r3, [sp, #64]	; 0x40
90023aa6:	f8dc 3004 	ldr.w	r3, [ip, #4]
90023aaa:	930c      	str	r3, [sp, #48]	; 0x30
90023aac:	0e1b      	lsrs	r3, r3, #24
90023aae:	9313      	str	r3, [sp, #76]	; 0x4c
90023ab0:	b289      	uxth	r1, r1
90023ab2:	9b12      	ldr	r3, [sp, #72]	; 0x48
90023ab4:	b280      	uxth	r0, r0
90023ab6:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023ab8:	fb01 f900 	mul.w	r9, r1, r0
90023abc:	0109      	lsls	r1, r1, #4
90023abe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023ac2:	eba1 0809 	sub.w	r8, r1, r9
90023ac6:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90023aca:	b280      	uxth	r0, r0
90023acc:	fa1f f888 	uxth.w	r8, r8
90023ad0:	1a09      	subs	r1, r1, r0
90023ad2:	fb08 f303 	mul.w	r3, r8, r3
90023ad6:	b289      	uxth	r1, r1
90023ad8:	fb01 330e 	mla	r3, r1, lr, r3
90023adc:	fb00 3305 	mla	r3, r0, r5, r3
90023ae0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023ae2:	fb09 3305 	mla	r3, r9, r5, r3
90023ae6:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023aea:	2b00      	cmp	r3, #0
90023aec:	f000 80d2 	beq.w	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023af0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023af4:	d01b      	beq.n	90023b2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90023af6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90023afa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023afe:	fb0e fa0a 	mul.w	sl, lr, sl
90023b02:	fb0e fe02 	mul.w	lr, lr, r2
90023b06:	ea4f 221a 	mov.w	r2, sl, lsr #8
90023b0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023b0e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023b12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023b16:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023b1a:	4452      	add	r2, sl
90023b1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023b20:	0a12      	lsrs	r2, r2, #8
90023b22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023b26:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023b2a:	ea42 020c 	orr.w	r2, r2, ip
90023b2e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023b30:	2dff      	cmp	r5, #255	; 0xff
90023b32:	d021      	beq.n	90023b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90023b34:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023b36:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023b3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023b3c:	fb05 fb0b 	mul.w	fp, r5, fp
90023b40:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023b42:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023b46:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023b48:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023b4c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023b50:	fb05 fa0a 	mul.w	sl, r5, sl
90023b54:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023b58:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023b5c:	44de      	add	lr, fp
90023b5e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023b62:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023b66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023b6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023b6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023b72:	ea4e 050a 	orr.w	r5, lr, sl
90023b76:	950b      	str	r5, [sp, #44]	; 0x2c
90023b78:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023b7a:	2dff      	cmp	r5, #255	; 0xff
90023b7c:	d021      	beq.n	90023bc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90023b7e:	9d08      	ldr	r5, [sp, #32]
90023b80:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023b84:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023b86:	fb05 fb0b 	mul.w	fp, r5, fp
90023b8a:	9d08      	ldr	r5, [sp, #32]
90023b8c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023b90:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023b92:	fb05 fa0e 	mul.w	sl, r5, lr
90023b96:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023b9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023b9e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023ba2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023ba6:	44de      	add	lr, fp
90023ba8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023bac:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023bb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023bb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023bb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023bbc:	ea4e 050a 	orr.w	r5, lr, sl
90023bc0:	9508      	str	r5, [sp, #32]
90023bc2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023bc4:	2dff      	cmp	r5, #255	; 0xff
90023bc6:	d021      	beq.n	90023c0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90023bc8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023bca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023bce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023bd0:	fb05 fb0b 	mul.w	fp, r5, fp
90023bd4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023bd6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023bda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023bdc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023be0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023be4:	fb05 fa0a 	mul.w	sl, r5, sl
90023be8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023bec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023bf0:	44de      	add	lr, fp
90023bf2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023bf6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023bfa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023bfe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023c02:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023c06:	ea4e 050a 	orr.w	r5, lr, sl
90023c0a:	950c      	str	r5, [sp, #48]	; 0x30
90023c0c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023c0e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023c12:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023c16:	2bff      	cmp	r3, #255	; 0xff
90023c18:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023c1c:	9d08      	ldr	r5, [sp, #32]
90023c1e:	fb08 fc0c 	mul.w	ip, r8, ip
90023c22:	fb01 cc0e 	mla	ip, r1, lr, ip
90023c26:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023c2a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023c2c:	fb00 cc0e 	mla	ip, r0, lr, ip
90023c30:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023c34:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023c36:	fb09 cc0e 	mla	ip, r9, lr, ip
90023c3a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023c3e:	fb08 f80e 	mul.w	r8, r8, lr
90023c42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023c46:	fb01 8202 	mla	r2, r1, r2, r8
90023c4a:	9908      	ldr	r1, [sp, #32]
90023c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023c50:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90023c54:	990c      	ldr	r1, [sp, #48]	; 0x30
90023c56:	fb00 220a 	mla	r2, r0, sl, r2
90023c5a:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
90023c5e:	fb09 2900 	mla	r9, r9, r0, r2
90023c62:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023c66:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023c6a:	ea4c 0c09 	orr.w	ip, ip, r9
90023c6e:	ea4f 221c 	mov.w	r2, ip, lsr #8
90023c72:	f040 8091 	bne.w	90023d98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023c76:	ea4f 135c 	mov.w	r3, ip, lsr #5
90023c7a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90023c7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023c82:	f022 0207 	bic.w	r2, r2, #7
90023c86:	431a      	orrs	r2, r3
90023c88:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023c8c:	ea4c 0c02 	orr.w	ip, ip, r2
90023c90:	f8a7 c000 	strh.w	ip, [r7]
90023c94:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023c96:	3702      	adds	r7, #2
90023c98:	441c      	add	r4, r3
90023c9a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023c9c:	441e      	add	r6, r3
90023c9e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023ca0:	3b01      	subs	r3, #1
90023ca2:	9317      	str	r3, [sp, #92]	; 0x5c
90023ca4:	e6c0      	b.n	90023a28 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90023ca6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023ca8:	441c      	add	r4, r3
90023caa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023cac:	441e      	add	r6, r3
90023cae:	9b07      	ldr	r3, [sp, #28]
90023cb0:	3b01      	subs	r3, #1
90023cb2:	9307      	str	r3, [sp, #28]
90023cb4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023cb6:	3302      	adds	r3, #2
90023cb8:	930a      	str	r3, [sp, #40]	; 0x28
90023cba:	e695      	b.n	900239e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023cbc:	d024      	beq.n	90023d08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90023cbe:	9b07      	ldr	r3, [sp, #28]
90023cc0:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023cc2:	3b01      	subs	r3, #1
90023cc4:	fb00 4003 	mla	r0, r0, r3, r4
90023cc8:	1400      	asrs	r0, r0, #16
90023cca:	f53f aeaa 	bmi.w	90023a22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023cce:	3901      	subs	r1, #1
90023cd0:	4288      	cmp	r0, r1
90023cd2:	f6bf aea6 	bge.w	90023a22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023cd6:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023cd8:	fb01 6303 	mla	r3, r1, r3, r6
90023cdc:	141b      	asrs	r3, r3, #16
90023cde:	f53f aea0 	bmi.w	90023a22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023ce2:	3a01      	subs	r2, #1
90023ce4:	4293      	cmp	r3, r2
90023ce6:	f6bf ae9c 	bge.w	90023a22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023cea:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023cee:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90023cf2:	f1bb 0f00 	cmp.w	fp, #0
90023cf6:	f300 809a 	bgt.w	90023e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90023cfa:	9b07      	ldr	r3, [sp, #28]
90023cfc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023d00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023d02:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023d06:	930a      	str	r3, [sp, #40]	; 0x28
90023d08:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023d0a:	2b00      	cmp	r3, #0
90023d0c:	f340 81ec 	ble.w	900240e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023d10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023d14:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023d16:	ee30 0a04 	vadd.f32	s0, s0, s8
90023d1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023d1e:	eef0 6a62 	vmov.f32	s13, s5
90023d22:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023d26:	ee31 1a05 	vadd.f32	s2, s2, s10
90023d2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d2e:	ee16 4a90 	vmov	r4, s13
90023d32:	eef0 6a43 	vmov.f32	s13, s6
90023d36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023d3a:	ee16 6a90 	vmov	r6, s13
90023d3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023d42:	ee61 7a27 	vmul.f32	s15, s2, s15
90023d46:	ee77 2a62 	vsub.f32	s5, s14, s5
90023d4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023d4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023d52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023d56:	ee12 2a90 	vmov	r2, s5
90023d5a:	eef0 2a47 	vmov.f32	s5, s14
90023d5e:	fb92 f3f3 	sdiv	r3, r2, r3
90023d62:	ee13 2a10 	vmov	r2, s6
90023d66:	9327      	str	r3, [sp, #156]	; 0x9c
90023d68:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023d6a:	eeb0 3a67 	vmov.f32	s6, s15
90023d6e:	fb92 f3f3 	sdiv	r3, r2, r3
90023d72:	9328      	str	r3, [sp, #160]	; 0xa0
90023d74:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023d76:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023d78:	3b01      	subs	r3, #1
90023d7a:	9316      	str	r3, [sp, #88]	; 0x58
90023d7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023d7e:	bf08      	it	eq
90023d80:	4613      	moveq	r3, r2
90023d82:	9307      	str	r3, [sp, #28]
90023d84:	e622      	b.n	900239cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90023d86:	2800      	cmp	r0, #0
90023d88:	f43f ae92 	beq.w	90023ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023d8c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023d90:	9308      	str	r3, [sp, #32]
90023d92:	0e1b      	lsrs	r3, r3, #24
90023d94:	9310      	str	r3, [sp, #64]	; 0x40
90023d96:	e68b      	b.n	90023ab0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023d98:	8839      	ldrh	r1, [r7, #0]
90023d9a:	43db      	mvns	r3, r3
90023d9c:	4dd4      	ldr	r5, [pc, #848]	; (900240f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90023d9e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90023da2:	fa5f f883 	uxtb.w	r8, r3
90023da6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90023daa:	10c8      	asrs	r0, r1, #3
90023dac:	00cb      	lsls	r3, r1, #3
90023dae:	fb0e fe08 	mul.w	lr, lr, r8
90023db2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023db6:	b2db      	uxtb	r3, r3
90023db8:	f10e 0101 	add.w	r1, lr, #1
90023dbc:	fb00 f008 	mul.w	r0, r0, r8
90023dc0:	fb03 f308 	mul.w	r3, r3, r8
90023dc4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90023dc8:	ea4f 411c 	mov.w	r1, ip, lsr #16
90023dcc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90023dd0:	f100 0e01 	add.w	lr, r0, #1
90023dd4:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90023dd8:	b2c9      	uxtb	r1, r1
90023dda:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023dde:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90023de2:	00d2      	lsls	r2, r2, #3
90023de4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023de8:	430a      	orrs	r2, r1
90023dea:	1c59      	adds	r1, r3, #1
90023dec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023df0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90023df4:	e748      	b.n	90023c88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90023df6:	f112 0801 	adds.w	r8, r2, #1
90023dfa:	f53f af4b 	bmi.w	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023dfe:	4543      	cmp	r3, r8
90023e00:	f6ff af48 	blt.w	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e04:	f11c 0801 	adds.w	r8, ip, #1
90023e08:	f53f af44 	bmi.w	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e0c:	45c6      	cmp	lr, r8
90023e0e:	f6ff af41 	blt.w	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e12:	b21b      	sxth	r3, r3
90023e14:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90023e18:	fa0f f28e 	sxth.w	r2, lr
90023e1c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90023e20:	9200      	str	r2, [sp, #0]
90023e22:	4639      	mov	r1, r7
90023e24:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023e26:	9819      	ldr	r0, [sp, #100]	; 0x64
90023e28:	f7ff fc88 	bl	9002373c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90023e2c:	e732      	b.n	90023c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e2e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023e30:	1421      	asrs	r1, r4, #16
90023e32:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023e34:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023e38:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90023e3c:	1433      	asrs	r3, r6, #16
90023e3e:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023e42:	fb07 1303 	mla	r3, r7, r3, r1
90023e46:	990f      	ldr	r1, [sp, #60]	; 0x3c
90023e48:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90023e4c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023e50:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023e54:	2a00      	cmp	r2, #0
90023e56:	f000 8108 	beq.w	9002406a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90023e5a:	684d      	ldr	r5, [r1, #4]
90023e5c:	950d      	str	r5, [sp, #52]	; 0x34
90023e5e:	0e2d      	lsrs	r5, r5, #24
90023e60:	9514      	str	r5, [sp, #80]	; 0x50
90023e62:	b178      	cbz	r0, 90023e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023e64:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90023e68:	3f01      	subs	r7, #1
90023e6a:	00bf      	lsls	r7, r7, #2
90023e6c:	3704      	adds	r7, #4
90023e6e:	eb01 0e07 	add.w	lr, r1, r7
90023e72:	59c9      	ldr	r1, [r1, r7]
90023e74:	9109      	str	r1, [sp, #36]	; 0x24
90023e76:	0e09      	lsrs	r1, r1, #24
90023e78:	9111      	str	r1, [sp, #68]	; 0x44
90023e7a:	f8de 1004 	ldr.w	r1, [lr, #4]
90023e7e:	910e      	str	r1, [sp, #56]	; 0x38
90023e80:	0e09      	lsrs	r1, r1, #24
90023e82:	9115      	str	r1, [sp, #84]	; 0x54
90023e84:	b292      	uxth	r2, r2
90023e86:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023e88:	b280      	uxth	r0, r0
90023e8a:	fb02 f900 	mul.w	r9, r2, r0
90023e8e:	0112      	lsls	r2, r2, #4
90023e90:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023e94:	eba2 0e09 	sub.w	lr, r2, r9
90023e98:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90023e9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
90023e9e:	b280      	uxth	r0, r0
90023ea0:	fa1f fe8e 	uxth.w	lr, lr
90023ea4:	1a09      	subs	r1, r1, r0
90023ea6:	fb0e f202 	mul.w	r2, lr, r2
90023eaa:	b289      	uxth	r1, r1
90023eac:	fb01 220c 	mla	r2, r1, ip, r2
90023eb0:	fb00 2205 	mla	r2, r0, r5, r2
90023eb4:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023eb6:	fb09 2205 	mla	r2, r9, r5, r2
90023eba:	f3c2 2207 	ubfx	r2, r2, #8, #8
90023ebe:	2a00      	cmp	r2, #0
90023ec0:	f000 80ca 	beq.w	90024058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90023ec4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90023ec8:	d019      	beq.n	90023efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90023eca:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90023ece:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023ed2:	fb0c fa0a 	mul.w	sl, ip, sl
90023ed6:	fb0c fc03 	mul.w	ip, ip, r3
90023eda:	ea4f 231a 	mov.w	r3, sl, lsr #8
90023ede:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023ee2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90023ee6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023eea:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90023eee:	4453      	add	r3, sl
90023ef0:	0a3f      	lsrs	r7, r7, #8
90023ef2:	0a1b      	lsrs	r3, r3, #8
90023ef4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90023ef8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90023efc:	433b      	orrs	r3, r7
90023efe:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023f00:	2dff      	cmp	r5, #255	; 0xff
90023f02:	d020      	beq.n	90023f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90023f04:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023f06:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023f0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023f0c:	436f      	muls	r7, r5
90023f0e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023f10:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023f14:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023f18:	9d14      	ldr	r5, [sp, #80]	; 0x50
90023f1a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023f1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023f22:	fb05 fa0a 	mul.w	sl, r5, sl
90023f26:	44bc      	add	ip, r7
90023f28:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023f2c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023f34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023f38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f3c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023f40:	ea4c 050a 	orr.w	r5, ip, sl
90023f44:	950d      	str	r5, [sp, #52]	; 0x34
90023f46:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023f48:	2dff      	cmp	r5, #255	; 0xff
90023f4a:	d020      	beq.n	90023f8e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
90023f4c:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023f4e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023f52:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023f54:	436f      	muls	r7, r5
90023f56:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023f58:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90023f5c:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023f5e:	fb05 fa0c 	mul.w	sl, r5, ip
90023f62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023f66:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023f6a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023f6e:	44bc      	add	ip, r7
90023f70:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023f74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023f78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023f7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023f80:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023f84:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023f88:	ea4c 050a 	orr.w	r5, ip, sl
90023f8c:	9509      	str	r5, [sp, #36]	; 0x24
90023f8e:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023f90:	2dff      	cmp	r5, #255	; 0xff
90023f92:	d020      	beq.n	90023fd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90023f94:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023f96:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023f9a:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023f9c:	436f      	muls	r7, r5
90023f9e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023fa0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023fa4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023fa8:	9d15      	ldr	r5, [sp, #84]	; 0x54
90023faa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023fae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023fb2:	fb05 fa0a 	mul.w	sl, r5, sl
90023fb6:	44bc      	add	ip, r7
90023fb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023fbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023fc0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023fc4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023fc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023fcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023fd0:	ea4c 050a 	orr.w	r5, ip, sl
90023fd4:	950e      	str	r5, [sp, #56]	; 0x38
90023fd6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90023fd8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90023fdc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90023fe0:	2aff      	cmp	r2, #255	; 0xff
90023fe2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023fe6:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023fe8:	fb0e f707 	mul.w	r7, lr, r7
90023fec:	fb01 770c 	mla	r7, r1, ip, r7
90023ff0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023ff4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90023ff6:	fb00 770c 	mla	r7, r0, ip, r7
90023ffa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023ffe:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024000:	fb09 770c 	mla	r7, r9, ip, r7
90024004:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90024008:	fb0e fe0c 	mul.w	lr, lr, ip
9002400c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90024010:	fb01 e303 	mla	r3, r1, r3, lr
90024014:	9909      	ldr	r1, [sp, #36]	; 0x24
90024016:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002401a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002401e:	990e      	ldr	r1, [sp, #56]	; 0x38
90024020:	fb00 330a 	mla	r3, r0, sl, r3
90024024:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90024028:	fb09 3c0c 	mla	ip, r9, ip, r3
9002402c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024030:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90024034:	ea47 070c 	orr.w	r7, r7, ip
90024038:	ea4f 2317 	mov.w	r3, r7, lsr #8
9002403c:	d11e      	bne.n	9002407c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
9002403e:	097a      	lsrs	r2, r7, #5
90024040:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
90024044:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90024048:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002404c:	f023 0307 	bic.w	r3, r3, #7
90024050:	4313      	orrs	r3, r2
90024052:	431f      	orrs	r7, r3
90024054:	f8a8 7000 	strh.w	r7, [r8]
90024058:	9b27      	ldr	r3, [sp, #156]	; 0x9c
9002405a:	f108 0802 	add.w	r8, r8, #2
9002405e:	f10b 3bff 	add.w	fp, fp, #4294967295
90024062:	441c      	add	r4, r3
90024064:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024066:	441e      	add	r6, r3
90024068:	e643      	b.n	90023cf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002406a:	2800      	cmp	r0, #0
9002406c:	f43f af0a 	beq.w	90023e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90024070:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90024074:	9109      	str	r1, [sp, #36]	; 0x24
90024076:	0e09      	lsrs	r1, r1, #24
90024078:	9111      	str	r1, [sp, #68]	; 0x44
9002407a:	e703      	b.n	90023e84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002407c:	f8b8 1000 	ldrh.w	r1, [r8]
90024080:	43d2      	mvns	r2, r2
90024082:	ea4f 2c21 	mov.w	ip, r1, asr #8
90024086:	fa5f fe82 	uxtb.w	lr, r2
9002408a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9002408e:	10c8      	asrs	r0, r1, #3
90024090:	00ca      	lsls	r2, r1, #3
90024092:	fb0c fc0e 	mul.w	ip, ip, lr
90024096:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002409a:	b2d2      	uxtb	r2, r2
9002409c:	f10c 0101 	add.w	r1, ip, #1
900240a0:	fb00 f00e 	mul.w	r0, r0, lr
900240a4:	fb02 f20e 	mul.w	r2, r2, lr
900240a8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900240ac:	0c39      	lsrs	r1, r7, #16
900240ae:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900240b2:	490f      	ldr	r1, [pc, #60]	; (900240f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
900240b4:	fa5f fc8c 	uxtb.w	ip, ip
900240b8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
900240bc:	1c41      	adds	r1, r0, #1
900240be:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900240c2:	1c51      	adds	r1, r2, #1
900240c4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900240c8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900240cc:	00c0      	lsls	r0, r0, #3
900240ce:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900240d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900240d6:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900240da:	ea4c 0c00 	orr.w	ip, ip, r0
900240de:	ea47 0c0c 	orr.w	ip, r7, ip
900240e2:	f8a8 c000 	strh.w	ip, [r8]
900240e6:	e7b7      	b.n	90024058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
900240e8:	b01b      	add	sp, #108	; 0x6c
900240ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900240ee:	bf00      	nop
900240f0:	fffff800 	.word	0xfffff800

900240f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
900240f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900240f8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
900240fc:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024100:	2d00      	cmp	r5, #0
90024102:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90024106:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002410a:	fb05 0e03 	mla	lr, r5, r3, r0
9002410e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90024112:	f2c0 808c 	blt.w	9002422e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90024116:	45a9      	cmp	r9, r5
90024118:	f340 8089 	ble.w	9002422e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002411c:	2800      	cmp	r0, #0
9002411e:	f2c0 8084 	blt.w	9002422a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024122:	4580      	cmp	r8, r0
90024124:	f340 8081 	ble.w	9002422a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024128:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002412c:	f01e 0f01 	tst.w	lr, #1
90024130:	5d16      	ldrb	r6, [r2, r4]
90024132:	bf0c      	ite	eq
90024134:	f006 060f 	andeq.w	r6, r6, #15
90024138:	1136      	asrne	r6, r6, #4
9002413a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002413e:	b2f6      	uxtb	r6, r6
90024140:	1c44      	adds	r4, r0, #1
90024142:	d477      	bmi.n	90024234 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90024144:	45a0      	cmp	r8, r4
90024146:	dd75      	ble.n	90024234 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90024148:	2f00      	cmp	r7, #0
9002414a:	d075      	beq.n	90024238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
9002414c:	f10e 0a01 	add.w	sl, lr, #1
90024150:	ea4f 045a 	mov.w	r4, sl, lsr #1
90024154:	f01a 0f01 	tst.w	sl, #1
90024158:	5d14      	ldrb	r4, [r2, r4]
9002415a:	bf0c      	ite	eq
9002415c:	f004 040f 	andeq.w	r4, r4, #15
90024160:	1124      	asrne	r4, r4, #4
90024162:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024166:	b2e4      	uxtb	r4, r4
90024168:	3501      	adds	r5, #1
9002416a:	d469      	bmi.n	90024240 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
9002416c:	45a9      	cmp	r9, r5
9002416e:	dd67      	ble.n	90024240 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90024170:	f1bc 0f00 	cmp.w	ip, #0
90024174:	d067      	beq.n	90024246 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90024176:	2800      	cmp	r0, #0
90024178:	db60      	blt.n	9002423c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002417a:	4580      	cmp	r8, r0
9002417c:	dd5e      	ble.n	9002423c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
9002417e:	eb03 090e 	add.w	r9, r3, lr
90024182:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024186:	f019 0f01 	tst.w	r9, #1
9002418a:	5d55      	ldrb	r5, [r2, r5]
9002418c:	bf0c      	ite	eq
9002418e:	f005 050f 	andeq.w	r5, r5, #15
90024192:	112d      	asrne	r5, r5, #4
90024194:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024198:	b2ed      	uxtb	r5, r5
9002419a:	3001      	adds	r0, #1
9002419c:	d456      	bmi.n	9002424c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002419e:	4580      	cmp	r8, r0
900241a0:	dd54      	ble.n	9002424c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
900241a2:	2f00      	cmp	r7, #0
900241a4:	d054      	beq.n	90024250 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
900241a6:	3301      	adds	r3, #1
900241a8:	449e      	add	lr, r3
900241aa:	ea4f 035e 	mov.w	r3, lr, lsr #1
900241ae:	f01e 0f01 	tst.w	lr, #1
900241b2:	5cd0      	ldrb	r0, [r2, r3]
900241b4:	bf0c      	ite	eq
900241b6:	f000 000f 	andeq.w	r0, r0, #15
900241ba:	1100      	asrne	r0, r0, #4
900241bc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900241c0:	b2c3      	uxtb	r3, r0
900241c2:	b2ba      	uxth	r2, r7
900241c4:	fa1f fc8c 	uxth.w	ip, ip
900241c8:	fb02 f00c 	mul.w	r0, r2, ip
900241cc:	0112      	lsls	r2, r2, #4
900241ce:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900241d2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
900241d6:	1a12      	subs	r2, r2, r0
900241d8:	fa1f fc8c 	uxth.w	ip, ip
900241dc:	b292      	uxth	r2, r2
900241de:	eba7 070c 	sub.w	r7, r7, ip
900241e2:	4362      	muls	r2, r4
900241e4:	b2bf      	uxth	r7, r7
900241e6:	fb06 2207 	mla	r2, r6, r7, r2
900241ea:	fb0c 2505 	mla	r5, ip, r5, r2
900241ee:	fb00 5303 	mla	r3, r0, r3, r5
900241f2:	f3c3 2307 	ubfx	r3, r3, #8, #8
900241f6:	b1b3      	cbz	r3, 90024226 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900241f8:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
900241fc:	435a      	muls	r2, r3
900241fe:	1c53      	adds	r3, r2, #1
90024200:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024204:	4a2d      	ldr	r2, [pc, #180]	; (900242bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90024206:	121b      	asrs	r3, r3, #8
90024208:	6812      	ldr	r2, [r2, #0]
9002420a:	2bff      	cmp	r3, #255	; 0xff
9002420c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90024210:	d120      	bne.n	90024254 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90024212:	0950      	lsrs	r0, r2, #5
90024214:	4b2a      	ldr	r3, [pc, #168]	; (900242c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90024216:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002421a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002421e:	4033      	ands	r3, r6
90024220:	4318      	orrs	r0, r3
90024222:	4302      	orrs	r2, r0
90024224:	800a      	strh	r2, [r1, #0]
90024226:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002422a:	2600      	movs	r6, #0
9002422c:	e788      	b.n	90024140 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002422e:	2400      	movs	r4, #0
90024230:	4626      	mov	r6, r4
90024232:	e799      	b.n	90024168 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90024234:	2400      	movs	r4, #0
90024236:	e797      	b.n	90024168 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90024238:	463c      	mov	r4, r7
9002423a:	e795      	b.n	90024168 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
9002423c:	2500      	movs	r5, #0
9002423e:	e7ac      	b.n	9002419a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90024240:	2300      	movs	r3, #0
90024242:	461d      	mov	r5, r3
90024244:	e7bd      	b.n	900241c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024246:	4663      	mov	r3, ip
90024248:	4665      	mov	r5, ip
9002424a:	e7ba      	b.n	900241c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
9002424c:	2300      	movs	r3, #0
9002424e:	e7b8      	b.n	900241c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024250:	463b      	mov	r3, r7
90024252:	e7b6      	b.n	900241c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90024254:	880d      	ldrh	r5, [r1, #0]
90024256:	b29f      	uxth	r7, r3
90024258:	f3c2 4007 	ubfx	r0, r2, #16, #8
9002425c:	43db      	mvns	r3, r3
9002425e:	122c      	asrs	r4, r5, #8
90024260:	fb10 f007 	smulbb	r0, r0, r7
90024264:	b2db      	uxtb	r3, r3
90024266:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002426a:	b2f6      	uxtb	r6, r6
9002426c:	b2d2      	uxtb	r2, r2
9002426e:	fb04 0403 	mla	r4, r4, r3, r0
90024272:	10e8      	asrs	r0, r5, #3
90024274:	fb12 f207 	smulbb	r2, r2, r7
90024278:	00ed      	lsls	r5, r5, #3
9002427a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002427e:	b2a4      	uxth	r4, r4
90024280:	fb16 f607 	smulbb	r6, r6, r7
90024284:	b2ed      	uxtb	r5, r5
90024286:	fb00 6603 	mla	r6, r0, r3, r6
9002428a:	fb05 2303 	mla	r3, r5, r3, r2
9002428e:	b2b0      	uxth	r0, r6
90024290:	b29a      	uxth	r2, r3
90024292:	1c63      	adds	r3, r4, #1
90024294:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024298:	1c53      	adds	r3, r2, #1
9002429a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002429e:	1c42      	adds	r2, r0, #1
900242a0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
900242a4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900242a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900242ac:	0940      	lsrs	r0, r0, #5
900242ae:	4323      	orrs	r3, r4
900242b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900242b4:	4303      	orrs	r3, r0
900242b6:	800b      	strh	r3, [r1, #0]
900242b8:	e7b5      	b.n	90024226 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
900242ba:	bf00      	nop
900242bc:	2402357c 	.word	0x2402357c
900242c0:	00fff800 	.word	0x00fff800

900242c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900242c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900242c8:	b097      	sub	sp, #92	; 0x5c
900242ca:	9214      	str	r2, [sp, #80]	; 0x50
900242cc:	9309      	str	r3, [sp, #36]	; 0x24
900242ce:	9a25      	ldr	r2, [sp, #148]	; 0x94
900242d0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
900242d4:	9015      	str	r0, [sp, #84]	; 0x54
900242d6:	910d      	str	r1, [sp, #52]	; 0x34
900242d8:	6850      	ldr	r0, [r2, #4]
900242da:	930f      	str	r3, [sp, #60]	; 0x3c
900242dc:	6812      	ldr	r2, [r2, #0]
900242de:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
900242e2:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
900242e6:	fb00 1303 	mla	r3, r0, r3, r1
900242ea:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900242ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900242f0:	689b      	ldr	r3, [r3, #8]
900242f2:	3301      	adds	r3, #1
900242f4:	f023 0301 	bic.w	r3, r3, #1
900242f8:	930a      	str	r3, [sp, #40]	; 0x28
900242fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900242fc:	681f      	ldr	r7, [r3, #0]
900242fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024300:	2b00      	cmp	r3, #0
90024302:	dc03      	bgt.n	9002430c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024304:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024306:	2b00      	cmp	r3, #0
90024308:	f340 8289 	ble.w	9002481e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002430c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002430e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024312:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024316:	1e48      	subs	r0, r1, #1
90024318:	f102 3cff 	add.w	ip, r2, #4294967295
9002431c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002431e:	2b00      	cmp	r3, #0
90024320:	f340 80c5 	ble.w	900244ae <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90024324:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024328:	ea4f 4326 	mov.w	r3, r6, asr #16
9002432c:	d406      	bmi.n	9002433c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002432e:	4586      	cmp	lr, r0
90024330:	da04      	bge.n	9002433c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024332:	2b00      	cmp	r3, #0
90024334:	db02      	blt.n	9002433c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90024336:	4563      	cmp	r3, ip
90024338:	f2c0 80ba 	blt.w	900244b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9002433c:	f11e 0e01 	adds.w	lr, lr, #1
90024340:	f100 80ab 	bmi.w	9002449a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024344:	4571      	cmp	r1, lr
90024346:	f2c0 80a8 	blt.w	9002449a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
9002434a:	3301      	adds	r3, #1
9002434c:	f100 80a5 	bmi.w	9002449a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024350:	429a      	cmp	r2, r3
90024352:	f2c0 80a2 	blt.w	9002449a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90024356:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024358:	46c8      	mov	r8, r9
9002435a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
9002435e:	930e      	str	r3, [sp, #56]	; 0x38
90024360:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024362:	2b00      	cmp	r3, #0
90024364:	f340 80c4 	ble.w	900244f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90024368:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002436a:	1430      	asrs	r0, r6, #16
9002436c:	f3c4 3203 	ubfx	r2, r4, #12, #4
90024370:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024374:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024378:	1423      	asrs	r3, r4, #16
9002437a:	f100 814f 	bmi.w	9002461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002437e:	f10c 3bff 	add.w	fp, ip, #4294967295
90024382:	455b      	cmp	r3, fp
90024384:	f280 814a 	bge.w	9002461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024388:	2800      	cmp	r0, #0
9002438a:	f2c0 8147 	blt.w	9002461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002438e:	f10e 3bff 	add.w	fp, lr, #4294967295
90024392:	4558      	cmp	r0, fp
90024394:	f280 8142 	bge.w	9002461c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024398:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002439a:	fb00 3305 	mla	r3, r0, r5, r3
9002439e:	0858      	lsrs	r0, r3, #1
900243a0:	07dd      	lsls	r5, r3, #31
900243a2:	f817 c000 	ldrb.w	ip, [r7, r0]
900243a6:	bf54      	ite	pl
900243a8:	f00c 0c0f 	andpl.w	ip, ip, #15
900243ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900243b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900243b4:	fa5f fc8c 	uxtb.w	ip, ip
900243b8:	2a00      	cmp	r2, #0
900243ba:	f000 80dd 	beq.w	90024578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
900243be:	1c58      	adds	r0, r3, #1
900243c0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
900243c4:	07c0      	lsls	r0, r0, #31
900243c6:	f817 e00e 	ldrb.w	lr, [r7, lr]
900243ca:	bf54      	ite	pl
900243cc:	f00e 0e0f 	andpl.w	lr, lr, #15
900243d0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
900243d4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
900243d8:	fa5f f08e 	uxtb.w	r0, lr
900243dc:	9010      	str	r0, [sp, #64]	; 0x40
900243de:	b1d9      	cbz	r1, 90024418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900243e0:	4453      	add	r3, sl
900243e2:	0858      	lsrs	r0, r3, #1
900243e4:	07dd      	lsls	r5, r3, #31
900243e6:	f103 0301 	add.w	r3, r3, #1
900243ea:	5c38      	ldrb	r0, [r7, r0]
900243ec:	bf54      	ite	pl
900243ee:	f000 000f 	andpl.w	r0, r0, #15
900243f2:	1100      	asrmi	r0, r0, #4
900243f4:	07dd      	lsls	r5, r3, #31
900243f6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900243fa:	b2c0      	uxtb	r0, r0
900243fc:	900b      	str	r0, [sp, #44]	; 0x2c
900243fe:	ea4f 0053 	mov.w	r0, r3, lsr #1
90024402:	f817 e000 	ldrb.w	lr, [r7, r0]
90024406:	bf54      	ite	pl
90024408:	f00e 030f 	andpl.w	r3, lr, #15
9002440c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90024410:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024414:	b2db      	uxtb	r3, r3
90024416:	9311      	str	r3, [sp, #68]	; 0x44
90024418:	b292      	uxth	r2, r2
9002441a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002441c:	b289      	uxth	r1, r1
9002441e:	fb02 f301 	mul.w	r3, r2, r1
90024422:	0112      	lsls	r2, r2, #4
90024424:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024428:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002442c:	1ad2      	subs	r2, r2, r3
9002442e:	b289      	uxth	r1, r1
90024430:	b292      	uxth	r2, r2
90024432:	1a40      	subs	r0, r0, r1
90024434:	436a      	muls	r2, r5
90024436:	b280      	uxth	r0, r0
90024438:	fb0c 2c00 	mla	ip, ip, r0, r2
9002443c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9002443e:	fb01 c102 	mla	r1, r1, r2, ip
90024442:	9a11      	ldr	r2, [sp, #68]	; 0x44
90024444:	fb03 1302 	mla	r3, r3, r2, r1
90024448:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002444c:	b1db      	cbz	r3, 90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002444e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90024450:	4353      	muls	r3, r2
90024452:	1c5a      	adds	r2, r3, #1
90024454:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024458:	4ac6      	ldr	r2, [pc, #792]	; (90024774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
9002445a:	121b      	asrs	r3, r3, #8
9002445c:	6812      	ldr	r2, [r2, #0]
9002445e:	2bff      	cmp	r3, #255	; 0xff
90024460:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024464:	f040 8099 	bne.w	9002459a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90024468:	0953      	lsrs	r3, r2, #5
9002446a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002446e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024472:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024476:	f02c 0c07 	bic.w	ip, ip, #7
9002447a:	ea43 0c0c 	orr.w	ip, r3, ip
9002447e:	ea4c 0202 	orr.w	r2, ip, r2
90024482:	f8a8 2000 	strh.w	r2, [r8]
90024486:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90024488:	f108 0802 	add.w	r8, r8, #2
9002448c:	441c      	add	r4, r3
9002448e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024490:	441e      	add	r6, r3
90024492:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024494:	3b01      	subs	r3, #1
90024496:	930e      	str	r3, [sp, #56]	; 0x38
90024498:	e762      	b.n	90024360 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002449a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9002449c:	f109 0902 	add.w	r9, r9, #2
900244a0:	441c      	add	r4, r3
900244a2:	9b24      	ldr	r3, [sp, #144]	; 0x90
900244a4:	441e      	add	r6, r3
900244a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900244a8:	3b01      	subs	r3, #1
900244aa:	9309      	str	r3, [sp, #36]	; 0x24
900244ac:	e736      	b.n	9002431c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900244ae:	d024      	beq.n	900244fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
900244b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900244b2:	9823      	ldr	r0, [sp, #140]	; 0x8c
900244b4:	3b01      	subs	r3, #1
900244b6:	fb00 4003 	mla	r0, r0, r3, r4
900244ba:	1400      	asrs	r0, r0, #16
900244bc:	f53f af4b 	bmi.w	90024356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900244c0:	3901      	subs	r1, #1
900244c2:	4288      	cmp	r0, r1
900244c4:	f6bf af47 	bge.w	90024356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900244c8:	9924      	ldr	r1, [sp, #144]	; 0x90
900244ca:	fb01 6303 	mla	r3, r1, r3, r6
900244ce:	141b      	asrs	r3, r3, #16
900244d0:	f53f af41 	bmi.w	90024356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900244d4:	3a01      	subs	r2, #1
900244d6:	4293      	cmp	r3, r2
900244d8:	f6bf af3d 	bge.w	90024356 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900244dc:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
900244e0:	46c8      	mov	r8, r9
900244e2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900244e6:	930e      	str	r3, [sp, #56]	; 0x38
900244e8:	f1bb 0f00 	cmp.w	fp, #0
900244ec:	f300 80b7 	bgt.w	9002465e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
900244f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900244f2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900244f6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
900244fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900244fc:	2b00      	cmp	r3, #0
900244fe:	f340 818e 	ble.w	9002481e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90024502:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024506:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024508:	ee30 0a04 	vadd.f32	s0, s0, s8
9002450c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024510:	eef0 6a62 	vmov.f32	s13, s5
90024514:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024518:	ee31 1a05 	vadd.f32	s2, s2, s10
9002451c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024520:	ee16 4a90 	vmov	r4, s13
90024524:	eef0 6a43 	vmov.f32	s13, s6
90024528:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002452c:	ee16 6a90 	vmov	r6, s13
90024530:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024534:	ee61 7a27 	vmul.f32	s15, s2, s15
90024538:	ee77 2a62 	vsub.f32	s5, s14, s5
9002453c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024540:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024544:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024548:	ee12 2a90 	vmov	r2, s5
9002454c:	eef0 2a47 	vmov.f32	s5, s14
90024550:	fb92 f3f3 	sdiv	r3, r2, r3
90024554:	ee13 2a10 	vmov	r2, s6
90024558:	9323      	str	r3, [sp, #140]	; 0x8c
9002455a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002455c:	eeb0 3a67 	vmov.f32	s6, s15
90024560:	fb92 f3f3 	sdiv	r3, r2, r3
90024564:	9324      	str	r3, [sp, #144]	; 0x90
90024566:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024568:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002456a:	3b01      	subs	r3, #1
9002456c:	930d      	str	r3, [sp, #52]	; 0x34
9002456e:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024570:	bf08      	it	eq
90024572:	4613      	moveq	r3, r2
90024574:	9309      	str	r3, [sp, #36]	; 0x24
90024576:	e6c2      	b.n	900242fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90024578:	2900      	cmp	r1, #0
9002457a:	f43f af4d 	beq.w	90024418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002457e:	eb0a 0003 	add.w	r0, sl, r3
90024582:	0843      	lsrs	r3, r0, #1
90024584:	07c0      	lsls	r0, r0, #31
90024586:	5cfb      	ldrb	r3, [r7, r3]
90024588:	bf54      	ite	pl
9002458a:	f003 030f 	andpl.w	r3, r3, #15
9002458e:	111b      	asrmi	r3, r3, #4
90024590:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024594:	b2db      	uxtb	r3, r3
90024596:	930b      	str	r3, [sp, #44]	; 0x2c
90024598:	e73e      	b.n	90024418 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002459a:	f8b8 e000 	ldrh.w	lr, [r8]
9002459e:	fa1f fb83 	uxth.w	fp, r3
900245a2:	f3c2 4107 	ubfx	r1, r2, #16, #8
900245a6:	43db      	mvns	r3, r3
900245a8:	ea4f 202e 	mov.w	r0, lr, asr #8
900245ac:	fb11 f10b 	smulbb	r1, r1, fp
900245b0:	b2db      	uxtb	r3, r3
900245b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900245b6:	fa5f fc8c 	uxtb.w	ip, ip
900245ba:	b2d2      	uxtb	r2, r2
900245bc:	fb00 1003 	mla	r0, r0, r3, r1
900245c0:	ea4f 01ee 	mov.w	r1, lr, asr #3
900245c4:	fb1c fc0b 	smulbb	ip, ip, fp
900245c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900245cc:	b280      	uxth	r0, r0
900245ce:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900245d2:	fb12 fb0b 	smulbb	fp, r2, fp
900245d6:	fa5f fe8e 	uxtb.w	lr, lr
900245da:	fb01 cc03 	mla	ip, r1, r3, ip
900245de:	fb0e bb03 	mla	fp, lr, r3, fp
900245e2:	1c43      	adds	r3, r0, #1
900245e4:	fa1f fc8c 	uxth.w	ip, ip
900245e8:	fa1f fb8b 	uxth.w	fp, fp
900245ec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900245f0:	f10c 0101 	add.w	r1, ip, #1
900245f4:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
900245f8:	f10b 0001 	add.w	r0, fp, #1
900245fc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024600:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90024604:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024608:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002460c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024610:	4318      	orrs	r0, r3
90024612:	ea40 000c 	orr.w	r0, r0, ip
90024616:	f8a8 0000 	strh.w	r0, [r8]
9002461a:	e734      	b.n	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002461c:	f113 0b01 	adds.w	fp, r3, #1
90024620:	f53f af31 	bmi.w	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024624:	45dc      	cmp	ip, fp
90024626:	f6ff af2e 	blt.w	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002462a:	f110 0b01 	adds.w	fp, r0, #1
9002462e:	f53f af2a 	bmi.w	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024632:	45de      	cmp	lr, fp
90024634:	f6ff af27 	blt.w	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024638:	9302      	str	r3, [sp, #8]
9002463a:	fa0f f38e 	sxth.w	r3, lr
9002463e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90024640:	9301      	str	r3, [sp, #4]
90024642:	fa0f f38c 	sxth.w	r3, ip
90024646:	e9cd 0203 	strd	r0, r2, [sp, #12]
9002464a:	e9cd 1505 	strd	r1, r5, [sp, #20]
9002464e:	9300      	str	r3, [sp, #0]
90024650:	463a      	mov	r2, r7
90024652:	4653      	mov	r3, sl
90024654:	4641      	mov	r1, r8
90024656:	9815      	ldr	r0, [sp, #84]	; 0x54
90024658:	f7ff fd4c 	bl	900240f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
9002465c:	e713      	b.n	90024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002465e:	1422      	asrs	r2, r4, #16
90024660:	9d0a      	ldr	r5, [sp, #40]	; 0x28
90024662:	1433      	asrs	r3, r6, #16
90024664:	f3c4 3103 	ubfx	r1, r4, #12, #4
90024668:	f3c6 3003 	ubfx	r0, r6, #12, #4
9002466c:	fb05 2303 	mla	r3, r5, r3, r2
90024670:	085a      	lsrs	r2, r3, #1
90024672:	07dd      	lsls	r5, r3, #31
90024674:	5cba      	ldrb	r2, [r7, r2]
90024676:	bf54      	ite	pl
90024678:	f002 020f 	andpl.w	r2, r2, #15
9002467c:	1112      	asrmi	r2, r2, #4
9002467e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024682:	b2d2      	uxtb	r2, r2
90024684:	2900      	cmp	r1, #0
90024686:	d077      	beq.n	90024778 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90024688:	f103 0e01 	add.w	lr, r3, #1
9002468c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90024690:	f01e 0f01 	tst.w	lr, #1
90024694:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024698:	bf0c      	ite	eq
9002469a:	f00c 0c0f 	andeq.w	ip, ip, #15
9002469e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
900246a2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900246a6:	fa5f f58c 	uxtb.w	r5, ip
900246aa:	9512      	str	r5, [sp, #72]	; 0x48
900246ac:	b308      	cbz	r0, 900246f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900246ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900246b0:	442b      	add	r3, r5
900246b2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900246b6:	07dd      	lsls	r5, r3, #31
900246b8:	f103 0301 	add.w	r3, r3, #1
900246bc:	f817 c00c 	ldrb.w	ip, [r7, ip]
900246c0:	bf54      	ite	pl
900246c2:	f00c 0c0f 	andpl.w	ip, ip, #15
900246c6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900246ca:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900246ce:	fa5f f58c 	uxtb.w	r5, ip
900246d2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900246d6:	950c      	str	r5, [sp, #48]	; 0x30
900246d8:	07dd      	lsls	r5, r3, #31
900246da:	f817 c00c 	ldrb.w	ip, [r7, ip]
900246de:	bf54      	ite	pl
900246e0:	f00c 0c0f 	andpl.w	ip, ip, #15
900246e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
900246e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
900246ec:	fa5f f38c 	uxtb.w	r3, ip
900246f0:	9313      	str	r3, [sp, #76]	; 0x4c
900246f2:	b289      	uxth	r1, r1
900246f4:	9d12      	ldr	r5, [sp, #72]	; 0x48
900246f6:	b280      	uxth	r0, r0
900246f8:	fb01 f300 	mul.w	r3, r1, r0
900246fc:	0109      	lsls	r1, r1, #4
900246fe:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90024702:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90024706:	1ac9      	subs	r1, r1, r3
90024708:	b280      	uxth	r0, r0
9002470a:	b289      	uxth	r1, r1
9002470c:	ebac 0c00 	sub.w	ip, ip, r0
90024710:	4369      	muls	r1, r5
90024712:	fa1f fc8c 	uxth.w	ip, ip
90024716:	fb02 120c 	mla	r2, r2, ip, r1
9002471a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002471c:	fb00 2001 	mla	r0, r0, r1, r2
90024720:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90024722:	fb03 0302 	mla	r3, r3, r2, r0
90024726:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002472a:	b1d3      	cbz	r3, 90024762 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002472c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002472e:	4353      	muls	r3, r2
90024730:	1c5a      	adds	r2, r3, #1
90024732:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024736:	4a0f      	ldr	r2, [pc, #60]	; (90024774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90024738:	121b      	asrs	r3, r3, #8
9002473a:	6812      	ldr	r2, [r2, #0]
9002473c:	2bff      	cmp	r3, #255	; 0xff
9002473e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90024742:	d12d      	bne.n	900247a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
90024744:	0953      	lsrs	r3, r2, #5
90024746:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9002474a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002474e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90024752:	f02c 0c07 	bic.w	ip, ip, #7
90024756:	ea43 0c0c 	orr.w	ip, r3, ip
9002475a:	ea4c 0202 	orr.w	r2, ip, r2
9002475e:	f8a8 2000 	strh.w	r2, [r8]
90024762:	9b23      	ldr	r3, [sp, #140]	; 0x8c
90024764:	f108 0802 	add.w	r8, r8, #2
90024768:	f10b 3bff 	add.w	fp, fp, #4294967295
9002476c:	441c      	add	r4, r3
9002476e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024770:	441e      	add	r6, r3
90024772:	e6b9      	b.n	900244e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
90024774:	2402357c 	.word	0x2402357c
90024778:	2800      	cmp	r0, #0
9002477a:	d0ba      	beq.n	900246f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002477c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9002477e:	442b      	add	r3, r5
90024780:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024784:	07db      	lsls	r3, r3, #31
90024786:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002478a:	bf54      	ite	pl
9002478c:	f00c 0c0f 	andpl.w	ip, ip, #15
90024790:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024794:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024798:	fa5f f38c 	uxtb.w	r3, ip
9002479c:	930c      	str	r3, [sp, #48]	; 0x30
9002479e:	e7a8      	b.n	900246f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900247a0:	f8b8 e000 	ldrh.w	lr, [r8]
900247a4:	fa1f fa83 	uxth.w	sl, r3
900247a8:	f3c2 4107 	ubfx	r1, r2, #16, #8
900247ac:	43db      	mvns	r3, r3
900247ae:	ea4f 202e 	mov.w	r0, lr, asr #8
900247b2:	fb11 f10a 	smulbb	r1, r1, sl
900247b6:	b2db      	uxtb	r3, r3
900247b8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
900247bc:	b2d2      	uxtb	r2, r2
900247be:	fa5f fc8c 	uxtb.w	ip, ip
900247c2:	fb00 1003 	mla	r0, r0, r3, r1
900247c6:	ea4f 01ee 	mov.w	r1, lr, asr #3
900247ca:	fb12 f20a 	smulbb	r2, r2, sl
900247ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900247d2:	b280      	uxth	r0, r0
900247d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
900247d8:	fb1c fc0a 	smulbb	ip, ip, sl
900247dc:	fa5f fe8e 	uxtb.w	lr, lr
900247e0:	fb0e 2203 	mla	r2, lr, r3, r2
900247e4:	fb01 cc03 	mla	ip, r1, r3, ip
900247e8:	1c43      	adds	r3, r0, #1
900247ea:	b292      	uxth	r2, r2
900247ec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
900247f0:	1c51      	adds	r1, r2, #1
900247f2:	fa1f fc8c 	uxth.w	ip, ip
900247f6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
900247fa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900247fe:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024802:	4308      	orrs	r0, r1
90024804:	f10c 0101 	add.w	r1, ip, #1
90024808:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002480c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024810:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024814:	ea40 000c 	orr.w	r0, r0, ip
90024818:	f8a8 0000 	strh.w	r0, [r8]
9002481c:	e7a1      	b.n	90024762 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002481e:	b017      	add	sp, #92	; 0x5c
90024820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024824 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90024824:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024828:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002482c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024830:	2d00      	cmp	r5, #0
90024832:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90024836:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002483a:	fb05 0e03 	mla	lr, r5, r3, r0
9002483e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90024842:	f2c0 80b0 	blt.w	900249a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
90024846:	45a9      	cmp	r9, r5
90024848:	f340 80ad 	ble.w	900249a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
9002484c:	2800      	cmp	r0, #0
9002484e:	f2c0 80a8 	blt.w	900249a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024852:	4580      	cmp	r8, r0
90024854:	f340 80a5 	ble.w	900249a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90024858:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002485c:	f01e 0f01 	tst.w	lr, #1
90024860:	5d16      	ldrb	r6, [r2, r4]
90024862:	bf0c      	ite	eq
90024864:	f006 060f 	andeq.w	r6, r6, #15
90024868:	1136      	asrne	r6, r6, #4
9002486a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
9002486e:	b2f6      	uxtb	r6, r6
90024870:	1c44      	adds	r4, r0, #1
90024872:	f100 809b 	bmi.w	900249ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90024876:	45a0      	cmp	r8, r4
90024878:	f340 8098 	ble.w	900249ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002487c:	2f00      	cmp	r7, #0
9002487e:	f000 8097 	beq.w	900249b0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
90024882:	f10e 0a01 	add.w	sl, lr, #1
90024886:	ea4f 045a 	mov.w	r4, sl, lsr #1
9002488a:	f01a 0f01 	tst.w	sl, #1
9002488e:	5d14      	ldrb	r4, [r2, r4]
90024890:	bf0c      	ite	eq
90024892:	f004 040f 	andeq.w	r4, r4, #15
90024896:	1124      	asrne	r4, r4, #4
90024898:	eb04 1404 	add.w	r4, r4, r4, lsl #4
9002489c:	b2e4      	uxtb	r4, r4
9002489e:	3501      	adds	r5, #1
900248a0:	f100 808a 	bmi.w	900249b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900248a4:	45a9      	cmp	r9, r5
900248a6:	f340 8087 	ble.w	900249b8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
900248aa:	f1bc 0f00 	cmp.w	ip, #0
900248ae:	f000 8086 	beq.w	900249be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
900248b2:	2800      	cmp	r0, #0
900248b4:	db7e      	blt.n	900249b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
900248b6:	4580      	cmp	r8, r0
900248b8:	dd7c      	ble.n	900249b4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
900248ba:	eb03 090e 	add.w	r9, r3, lr
900248be:	ea4f 0559 	mov.w	r5, r9, lsr #1
900248c2:	f019 0f01 	tst.w	r9, #1
900248c6:	5d55      	ldrb	r5, [r2, r5]
900248c8:	bf0c      	ite	eq
900248ca:	f005 050f 	andeq.w	r5, r5, #15
900248ce:	112d      	asrne	r5, r5, #4
900248d0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
900248d4:	b2ed      	uxtb	r5, r5
900248d6:	3001      	adds	r0, #1
900248d8:	d474      	bmi.n	900249c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900248da:	4580      	cmp	r8, r0
900248dc:	dd72      	ble.n	900249c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
900248de:	2f00      	cmp	r7, #0
900248e0:	d072      	beq.n	900249c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
900248e2:	3301      	adds	r3, #1
900248e4:	449e      	add	lr, r3
900248e6:	ea4f 035e 	mov.w	r3, lr, lsr #1
900248ea:	f01e 0f01 	tst.w	lr, #1
900248ee:	5cd0      	ldrb	r0, [r2, r3]
900248f0:	bf0c      	ite	eq
900248f2:	f000 000f 	andeq.w	r0, r0, #15
900248f6:	1100      	asrne	r0, r0, #4
900248f8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900248fc:	b2c3      	uxtb	r3, r0
900248fe:	b2ba      	uxth	r2, r7
90024900:	fa1f fc8c 	uxth.w	ip, ip
90024904:	fb02 f00c 	mul.w	r0, r2, ip
90024908:	0112      	lsls	r2, r2, #4
9002490a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
9002490e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90024912:	1a12      	subs	r2, r2, r0
90024914:	fa1f fc8c 	uxth.w	ip, ip
90024918:	b292      	uxth	r2, r2
9002491a:	eba7 070c 	sub.w	r7, r7, ip
9002491e:	4362      	muls	r2, r4
90024920:	b2bf      	uxth	r7, r7
90024922:	fb06 2207 	mla	r2, r6, r7, r2
90024926:	fb0c 2505 	mla	r5, ip, r5, r2
9002492a:	fb00 5303 	mla	r3, r0, r3, r5
9002492e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024932:	b3a3      	cbz	r3, 9002499e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90024934:	4a25      	ldr	r2, [pc, #148]	; (900249cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90024936:	880e      	ldrh	r6, [r1, #0]
90024938:	6815      	ldr	r5, [r2, #0]
9002493a:	b29a      	uxth	r2, r3
9002493c:	1234      	asrs	r4, r6, #8
9002493e:	43db      	mvns	r3, r3
90024940:	f3c5 4007 	ubfx	r0, r5, #16, #8
90024944:	f3c5 2707 	ubfx	r7, r5, #8, #8
90024948:	b2db      	uxtb	r3, r3
9002494a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9002494e:	fb10 f002 	smulbb	r0, r0, r2
90024952:	b2ed      	uxtb	r5, r5
90024954:	fb17 f702 	smulbb	r7, r7, r2
90024958:	fb04 0403 	mla	r4, r4, r3, r0
9002495c:	10f0      	asrs	r0, r6, #3
9002495e:	fb15 f202 	smulbb	r2, r5, r2
90024962:	00f6      	lsls	r6, r6, #3
90024964:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024968:	b2a4      	uxth	r4, r4
9002496a:	b2f6      	uxtb	r6, r6
9002496c:	fb00 7003 	mla	r0, r0, r3, r7
90024970:	fb06 2303 	mla	r3, r6, r3, r2
90024974:	b280      	uxth	r0, r0
90024976:	b29a      	uxth	r2, r3
90024978:	1c63      	adds	r3, r4, #1
9002497a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
9002497e:	1c53      	adds	r3, r2, #1
90024980:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024984:	1c42      	adds	r2, r0, #1
90024986:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9002498a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002498e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024992:	0940      	lsrs	r0, r0, #5
90024994:	4323      	orrs	r3, r4
90024996:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002499a:	4303      	orrs	r3, r0
9002499c:	800b      	strh	r3, [r1, #0]
9002499e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900249a2:	2600      	movs	r6, #0
900249a4:	e764      	b.n	90024870 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
900249a6:	2400      	movs	r4, #0
900249a8:	4626      	mov	r6, r4
900249aa:	e778      	b.n	9002489e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900249ac:	2400      	movs	r4, #0
900249ae:	e776      	b.n	9002489e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900249b0:	463c      	mov	r4, r7
900249b2:	e774      	b.n	9002489e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
900249b4:	2500      	movs	r5, #0
900249b6:	e78e      	b.n	900248d6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
900249b8:	2300      	movs	r3, #0
900249ba:	461d      	mov	r5, r3
900249bc:	e79f      	b.n	900248fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900249be:	4663      	mov	r3, ip
900249c0:	4665      	mov	r5, ip
900249c2:	e79c      	b.n	900248fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900249c4:	2300      	movs	r3, #0
900249c6:	e79a      	b.n	900248fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900249c8:	463b      	mov	r3, r7
900249ca:	e798      	b.n	900248fe <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
900249cc:	2402357c 	.word	0x2402357c

900249d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900249d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900249d4:	b093      	sub	sp, #76	; 0x4c
900249d6:	461d      	mov	r5, r3
900249d8:	920c      	str	r2, [sp, #48]	; 0x30
900249da:	9a21      	ldr	r2, [sp, #132]	; 0x84
900249dc:	9011      	str	r0, [sp, #68]	; 0x44
900249de:	9107      	str	r1, [sp, #28]
900249e0:	6850      	ldr	r0, [r2, #4]
900249e2:	6812      	ldr	r2, [r2, #0]
900249e4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
900249e8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
900249ec:	fb00 1303 	mla	r3, r0, r3, r1
900249f0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
900249f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900249f6:	689b      	ldr	r3, [r3, #8]
900249f8:	3301      	adds	r3, #1
900249fa:	f023 0301 	bic.w	r3, r3, #1
900249fe:	9306      	str	r3, [sp, #24]
90024a00:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024a02:	681f      	ldr	r7, [r3, #0]
90024a04:	9b07      	ldr	r3, [sp, #28]
90024a06:	2b00      	cmp	r3, #0
90024a08:	dc03      	bgt.n	90024a12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90024a0a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024a0c:	2b00      	cmp	r3, #0
90024a0e:	f340 8267 	ble.w	90024ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024a12:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024a14:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024a18:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024a1c:	1e48      	subs	r0, r1, #1
90024a1e:	f102 3cff 	add.w	ip, r2, #4294967295
90024a22:	2d00      	cmp	r5, #0
90024a24:	f340 80b7 	ble.w	90024b96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90024a28:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024a2c:	ea4f 4326 	mov.w	r3, r6, asr #16
90024a30:	d406      	bmi.n	90024a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024a32:	4586      	cmp	lr, r0
90024a34:	da04      	bge.n	90024a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024a36:	2b00      	cmp	r3, #0
90024a38:	db02      	blt.n	90024a40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024a3a:	4563      	cmp	r3, ip
90024a3c:	f2c0 80ac 	blt.w	90024b98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90024a40:	f11e 0e01 	adds.w	lr, lr, #1
90024a44:	f100 809f 	bmi.w	90024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024a48:	4571      	cmp	r1, lr
90024a4a:	f2c0 809c 	blt.w	90024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024a4e:	3301      	adds	r3, #1
90024a50:	f100 8099 	bmi.w	90024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024a54:	429a      	cmp	r2, r3
90024a56:	f2c0 8096 	blt.w	90024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024a5a:	46c8      	mov	r8, r9
90024a5c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90024a60:	9509      	str	r5, [sp, #36]	; 0x24
90024a62:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024a64:	2b00      	cmp	r3, #0
90024a66:	f340 80b5 	ble.w	90024bd4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024a6a:	f3c4 3303 	ubfx	r3, r4, #12, #4
90024a6e:	1430      	asrs	r0, r6, #16
90024a70:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024a74:	9308      	str	r3, [sp, #32]
90024a76:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024a78:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024a7c:	1423      	asrs	r3, r4, #16
90024a7e:	f100 813f 	bmi.w	90024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024a82:	f10c 3bff 	add.w	fp, ip, #4294967295
90024a86:	455b      	cmp	r3, fp
90024a88:	f280 813a 	bge.w	90024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024a8c:	2800      	cmp	r0, #0
90024a8e:	f2c0 8137 	blt.w	90024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024a92:	f10e 3bff 	add.w	fp, lr, #4294967295
90024a96:	4558      	cmp	r0, fp
90024a98:	f280 8132 	bge.w	90024d00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024a9c:	9a06      	ldr	r2, [sp, #24]
90024a9e:	fb00 3302 	mla	r3, r0, r2, r3
90024aa2:	0858      	lsrs	r0, r3, #1
90024aa4:	07da      	lsls	r2, r3, #31
90024aa6:	9a08      	ldr	r2, [sp, #32]
90024aa8:	f817 c000 	ldrb.w	ip, [r7, r0]
90024aac:	bf54      	ite	pl
90024aae:	f00c 0c0f 	andpl.w	ip, ip, #15
90024ab2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024ab6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024aba:	fa5f fc8c 	uxtb.w	ip, ip
90024abe:	2a00      	cmp	r2, #0
90024ac0:	f000 80cc 	beq.w	90024c5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90024ac4:	1c58      	adds	r0, r3, #1
90024ac6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024aca:	07c0      	lsls	r0, r0, #31
90024acc:	f817 e00e 	ldrb.w	lr, [r7, lr]
90024ad0:	bf54      	ite	pl
90024ad2:	f00e 0e0f 	andpl.w	lr, lr, #15
90024ad6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024ada:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024ade:	fa5f fe8e 	uxtb.w	lr, lr
90024ae2:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90024ae6:	b1b9      	cbz	r1, 90024b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024ae8:	4453      	add	r3, sl
90024aea:	0858      	lsrs	r0, r3, #1
90024aec:	07da      	lsls	r2, r3, #31
90024aee:	5c38      	ldrb	r0, [r7, r0]
90024af0:	bf54      	ite	pl
90024af2:	f000 000f 	andpl.w	r0, r0, #15
90024af6:	1100      	asrmi	r0, r0, #4
90024af8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024afc:	b2c0      	uxtb	r0, r0
90024afe:	900a      	str	r0, [sp, #40]	; 0x28
90024b00:	1c58      	adds	r0, r3, #1
90024b02:	0843      	lsrs	r3, r0, #1
90024b04:	07c2      	lsls	r2, r0, #31
90024b06:	5cfb      	ldrb	r3, [r7, r3]
90024b08:	bf54      	ite	pl
90024b0a:	f003 030f 	andpl.w	r3, r3, #15
90024b0e:	111b      	asrmi	r3, r3, #4
90024b10:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024b14:	b2db      	uxtb	r3, r3
90024b16:	930e      	str	r3, [sp, #56]	; 0x38
90024b18:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90024b1c:	b289      	uxth	r1, r1
90024b1e:	fb02 f301 	mul.w	r3, r2, r1
90024b22:	0112      	lsls	r2, r2, #4
90024b24:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024b28:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90024b2c:	1ad2      	subs	r2, r2, r3
90024b2e:	b289      	uxth	r1, r1
90024b30:	b292      	uxth	r2, r2
90024b32:	1a40      	subs	r0, r0, r1
90024b34:	fa1f fe80 	uxth.w	lr, r0
90024b38:	980d      	ldr	r0, [sp, #52]	; 0x34
90024b3a:	4342      	muls	r2, r0
90024b3c:	fb0c 2c0e 	mla	ip, ip, lr, r2
90024b40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90024b42:	fb01 c102 	mla	r1, r1, r2, ip
90024b46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90024b48:	fb03 1302 	mla	r3, r3, r2, r1
90024b4c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024b50:	2bff      	cmp	r3, #255	; 0xff
90024b52:	f040 8094 	bne.w	90024c7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90024b56:	4bbf      	ldr	r3, [pc, #764]	; (90024e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024b58:	681a      	ldr	r2, [r3, #0]
90024b5a:	4bbf      	ldr	r3, [pc, #764]	; (90024e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024b5c:	0951      	lsrs	r1, r2, #5
90024b5e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024b62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024b66:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024b6a:	430b      	orrs	r3, r1
90024b6c:	4313      	orrs	r3, r2
90024b6e:	f8a8 3000 	strh.w	r3, [r8]
90024b72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024b74:	f108 0802 	add.w	r8, r8, #2
90024b78:	441c      	add	r4, r3
90024b7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024b7c:	441e      	add	r6, r3
90024b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024b80:	3b01      	subs	r3, #1
90024b82:	9309      	str	r3, [sp, #36]	; 0x24
90024b84:	e76d      	b.n	90024a62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024b86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024b88:	3d01      	subs	r5, #1
90024b8a:	f109 0902 	add.w	r9, r9, #2
90024b8e:	441c      	add	r4, r3
90024b90:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024b92:	441e      	add	r6, r3
90024b94:	e745      	b.n	90024a22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90024b96:	d021      	beq.n	90024bdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024b98:	1e6b      	subs	r3, r5, #1
90024b9a:	981f      	ldr	r0, [sp, #124]	; 0x7c
90024b9c:	fb00 4003 	mla	r0, r0, r3, r4
90024ba0:	1400      	asrs	r0, r0, #16
90024ba2:	f53f af5a 	bmi.w	90024a5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024ba6:	3901      	subs	r1, #1
90024ba8:	4288      	cmp	r0, r1
90024baa:	f6bf af56 	bge.w	90024a5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024bae:	9920      	ldr	r1, [sp, #128]	; 0x80
90024bb0:	fb01 6303 	mla	r3, r1, r3, r6
90024bb4:	141b      	asrs	r3, r3, #16
90024bb6:	f53f af50 	bmi.w	90024a5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024bba:	3a01      	subs	r2, #1
90024bbc:	4293      	cmp	r3, r2
90024bbe:	f6bf af4c 	bge.w	90024a5a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024bc2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90024bc6:	46a8      	mov	r8, r5
90024bc8:	46ce      	mov	lr, r9
90024bca:	9308      	str	r3, [sp, #32]
90024bcc:	f1b8 0f00 	cmp.w	r8, #0
90024bd0:	f300 80b6 	bgt.w	90024d40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024bd4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024bd8:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024bdc:	9b07      	ldr	r3, [sp, #28]
90024bde:	2b00      	cmp	r3, #0
90024be0:	f340 817e 	ble.w	90024ee0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024be4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024be8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024bea:	ee30 0a04 	vadd.f32	s0, s0, s8
90024bee:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024bf2:	eef0 6a62 	vmov.f32	s13, s5
90024bf6:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024bfa:	ee31 1a05 	vadd.f32	s2, s2, s10
90024bfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024c02:	ee16 4a90 	vmov	r4, s13
90024c06:	eef0 6a43 	vmov.f32	s13, s6
90024c0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024c0e:	ee16 6a90 	vmov	r6, s13
90024c12:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024c16:	ee61 7a27 	vmul.f32	s15, s2, s15
90024c1a:	ee77 2a62 	vsub.f32	s5, s14, s5
90024c1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024c22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024c26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024c2a:	ee12 2a90 	vmov	r2, s5
90024c2e:	eef0 2a47 	vmov.f32	s5, s14
90024c32:	fb92 f3f3 	sdiv	r3, r2, r3
90024c36:	ee13 2a10 	vmov	r2, s6
90024c3a:	931f      	str	r3, [sp, #124]	; 0x7c
90024c3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024c3e:	eeb0 3a67 	vmov.f32	s6, s15
90024c42:	fb92 f3f3 	sdiv	r3, r2, r3
90024c46:	9320      	str	r3, [sp, #128]	; 0x80
90024c48:	9b07      	ldr	r3, [sp, #28]
90024c4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024c4c:	3b01      	subs	r3, #1
90024c4e:	9307      	str	r3, [sp, #28]
90024c50:	bf08      	it	eq
90024c52:	4615      	moveq	r5, r2
90024c54:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024c56:	bf18      	it	ne
90024c58:	461d      	movne	r5, r3
90024c5a:	e6d3      	b.n	90024a04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024c5c:	2900      	cmp	r1, #0
90024c5e:	f43f af5b 	beq.w	90024b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024c62:	eb0a 0003 	add.w	r0, sl, r3
90024c66:	0843      	lsrs	r3, r0, #1
90024c68:	07c0      	lsls	r0, r0, #31
90024c6a:	5cfb      	ldrb	r3, [r7, r3]
90024c6c:	bf54      	ite	pl
90024c6e:	f003 030f 	andpl.w	r3, r3, #15
90024c72:	111b      	asrmi	r3, r3, #4
90024c74:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024c78:	b2db      	uxtb	r3, r3
90024c7a:	930a      	str	r3, [sp, #40]	; 0x28
90024c7c:	e74c      	b.n	90024b18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024c7e:	2b00      	cmp	r3, #0
90024c80:	f43f af77 	beq.w	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024c84:	4a73      	ldr	r2, [pc, #460]	; (90024e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024c86:	fa1f fe83 	uxth.w	lr, r3
90024c8a:	f8b8 c000 	ldrh.w	ip, [r8]
90024c8e:	43db      	mvns	r3, r3
90024c90:	6810      	ldr	r0, [r2, #0]
90024c92:	ea4f 212c 	mov.w	r1, ip, asr #8
90024c96:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024c9a:	b2db      	uxtb	r3, r3
90024c9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024ca0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024ca4:	fb12 f20e 	smulbb	r2, r2, lr
90024ca8:	b2c0      	uxtb	r0, r0
90024caa:	fb1b fb0e 	smulbb	fp, fp, lr
90024cae:	fb01 2103 	mla	r1, r1, r3, r2
90024cb2:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024cb6:	fb10 fe0e 	smulbb	lr, r0, lr
90024cba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024cbe:	b289      	uxth	r1, r1
90024cc0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024cc4:	fa5f fc8c 	uxtb.w	ip, ip
90024cc8:	fb02 b203 	mla	r2, r2, r3, fp
90024ccc:	1c48      	adds	r0, r1, #1
90024cce:	fb0c e303 	mla	r3, ip, r3, lr
90024cd2:	b292      	uxth	r2, r2
90024cd4:	b29b      	uxth	r3, r3
90024cd6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90024cda:	f102 0b01 	add.w	fp, r2, #1
90024cde:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90024ce2:	1c59      	adds	r1, r3, #1
90024ce4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024ce8:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024cec:	0952      	lsrs	r2, r2, #5
90024cee:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024cf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024cf6:	4301      	orrs	r1, r0
90024cf8:	4311      	orrs	r1, r2
90024cfa:	f8a8 1000 	strh.w	r1, [r8]
90024cfe:	e738      	b.n	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d00:	f113 0b01 	adds.w	fp, r3, #1
90024d04:	f53f af35 	bmi.w	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d08:	45dc      	cmp	ip, fp
90024d0a:	f6ff af32 	blt.w	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d0e:	f110 0b01 	adds.w	fp, r0, #1
90024d12:	f53f af2e 	bmi.w	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d16:	45de      	cmp	lr, fp
90024d18:	f6ff af2b 	blt.w	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d1c:	9302      	str	r3, [sp, #8]
90024d1e:	fa0f f38e 	sxth.w	r3, lr
90024d22:	9a08      	ldr	r2, [sp, #32]
90024d24:	9301      	str	r3, [sp, #4]
90024d26:	fa0f f38c 	sxth.w	r3, ip
90024d2a:	9105      	str	r1, [sp, #20]
90024d2c:	4641      	mov	r1, r8
90024d2e:	9300      	str	r3, [sp, #0]
90024d30:	4653      	mov	r3, sl
90024d32:	e9cd 0203 	strd	r0, r2, [sp, #12]
90024d36:	463a      	mov	r2, r7
90024d38:	9811      	ldr	r0, [sp, #68]	; 0x44
90024d3a:	f7ff fd73 	bl	90024824 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90024d3e:	e718      	b.n	90024b72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024d40:	1422      	asrs	r2, r4, #16
90024d42:	9906      	ldr	r1, [sp, #24]
90024d44:	1433      	asrs	r3, r6, #16
90024d46:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024d4a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024d4e:	fb01 2303 	mla	r3, r1, r3, r2
90024d52:	085a      	lsrs	r2, r3, #1
90024d54:	07d9      	lsls	r1, r3, #31
90024d56:	5cba      	ldrb	r2, [r7, r2]
90024d58:	bf54      	ite	pl
90024d5a:	f002 020f 	andpl.w	r2, r2, #15
90024d5e:	1112      	asrmi	r2, r2, #4
90024d60:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024d64:	b2d2      	uxtb	r2, r2
90024d66:	2800      	cmp	r0, #0
90024d68:	d063      	beq.n	90024e32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90024d6a:	f103 0a01 	add.w	sl, r3, #1
90024d6e:	ea4f 015a 	mov.w	r1, sl, lsr #1
90024d72:	f01a 0f01 	tst.w	sl, #1
90024d76:	5c79      	ldrb	r1, [r7, r1]
90024d78:	bf0c      	ite	eq
90024d7a:	f001 010f 	andeq.w	r1, r1, #15
90024d7e:	1109      	asrne	r1, r1, #4
90024d80:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024d84:	b2c9      	uxtb	r1, r1
90024d86:	910f      	str	r1, [sp, #60]	; 0x3c
90024d88:	f1bc 0f00 	cmp.w	ip, #0
90024d8c:	d01a      	beq.n	90024dc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024d8e:	9908      	ldr	r1, [sp, #32]
90024d90:	440b      	add	r3, r1
90024d92:	0859      	lsrs	r1, r3, #1
90024d94:	f013 0f01 	tst.w	r3, #1
90024d98:	f103 0301 	add.w	r3, r3, #1
90024d9c:	5c79      	ldrb	r1, [r7, r1]
90024d9e:	bf0c      	ite	eq
90024da0:	f001 010f 	andeq.w	r1, r1, #15
90024da4:	1109      	asrne	r1, r1, #4
90024da6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024daa:	b2c9      	uxtb	r1, r1
90024dac:	910b      	str	r1, [sp, #44]	; 0x2c
90024dae:	0859      	lsrs	r1, r3, #1
90024db0:	07db      	lsls	r3, r3, #31
90024db2:	5c79      	ldrb	r1, [r7, r1]
90024db4:	bf54      	ite	pl
90024db6:	f001 010f 	andpl.w	r1, r1, #15
90024dba:	1109      	asrmi	r1, r1, #4
90024dbc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024dc0:	b2c9      	uxtb	r1, r1
90024dc2:	9110      	str	r1, [sp, #64]	; 0x40
90024dc4:	b280      	uxth	r0, r0
90024dc6:	fa1f fc8c 	uxth.w	ip, ip
90024dca:	fb00 f30c 	mul.w	r3, r0, ip
90024dce:	0100      	lsls	r0, r0, #4
90024dd0:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90024dd4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90024dd8:	1ac0      	subs	r0, r0, r3
90024dda:	fa1f fc8c 	uxth.w	ip, ip
90024dde:	b280      	uxth	r0, r0
90024de0:	eba1 010c 	sub.w	r1, r1, ip
90024de4:	fa1f fa81 	uxth.w	sl, r1
90024de8:	990f      	ldr	r1, [sp, #60]	; 0x3c
90024dea:	4348      	muls	r0, r1
90024dec:	990b      	ldr	r1, [sp, #44]	; 0x2c
90024dee:	fb02 020a 	mla	r2, r2, sl, r0
90024df2:	fb0c 2c01 	mla	ip, ip, r1, r2
90024df6:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024df8:	fb03 c302 	mla	r3, r3, r2, ip
90024dfc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024e00:	2bff      	cmp	r3, #255	; 0xff
90024e02:	d12b      	bne.n	90024e5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90024e04:	4b13      	ldr	r3, [pc, #76]	; (90024e54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024e06:	681a      	ldr	r2, [r3, #0]
90024e08:	4b13      	ldr	r3, [pc, #76]	; (90024e58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024e0a:	0951      	lsrs	r1, r2, #5
90024e0c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024e10:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024e14:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024e18:	430b      	orrs	r3, r1
90024e1a:	4313      	orrs	r3, r2
90024e1c:	f8ae 3000 	strh.w	r3, [lr]
90024e20:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024e22:	f10e 0e02 	add.w	lr, lr, #2
90024e26:	f108 38ff 	add.w	r8, r8, #4294967295
90024e2a:	441c      	add	r4, r3
90024e2c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024e2e:	441e      	add	r6, r3
90024e30:	e6cc      	b.n	90024bcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90024e32:	f1bc 0f00 	cmp.w	ip, #0
90024e36:	d0c5      	beq.n	90024dc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024e38:	9908      	ldr	r1, [sp, #32]
90024e3a:	440b      	add	r3, r1
90024e3c:	0859      	lsrs	r1, r3, #1
90024e3e:	07db      	lsls	r3, r3, #31
90024e40:	5c79      	ldrb	r1, [r7, r1]
90024e42:	bf54      	ite	pl
90024e44:	f001 010f 	andpl.w	r1, r1, #15
90024e48:	1109      	asrmi	r1, r1, #4
90024e4a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024e4e:	b2c9      	uxtb	r1, r1
90024e50:	910b      	str	r1, [sp, #44]	; 0x2c
90024e52:	e7b7      	b.n	90024dc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024e54:	2402357c 	.word	0x2402357c
90024e58:	fffff800 	.word	0xfffff800
90024e5c:	2b00      	cmp	r3, #0
90024e5e:	d0df      	beq.n	90024e20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90024e60:	4a21      	ldr	r2, [pc, #132]	; (90024ee8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90024e62:	fa1f fa83 	uxth.w	sl, r3
90024e66:	f8be c000 	ldrh.w	ip, [lr]
90024e6a:	43db      	mvns	r3, r3
90024e6c:	6810      	ldr	r0, [r2, #0]
90024e6e:	ea4f 212c 	mov.w	r1, ip, asr #8
90024e72:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024e76:	b2db      	uxtb	r3, r3
90024e78:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024e7c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024e80:	fb12 f20a 	smulbb	r2, r2, sl
90024e84:	b2c0      	uxtb	r0, r0
90024e86:	fb1b fb0a 	smulbb	fp, fp, sl
90024e8a:	fb01 2103 	mla	r1, r1, r3, r2
90024e8e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024e92:	fb10 f00a 	smulbb	r0, r0, sl
90024e96:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024e9a:	b289      	uxth	r1, r1
90024e9c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024ea0:	fa5f fc8c 	uxtb.w	ip, ip
90024ea4:	fb02 b203 	mla	r2, r2, r3, fp
90024ea8:	fb0c 0003 	mla	r0, ip, r3, r0
90024eac:	1c4b      	adds	r3, r1, #1
90024eae:	b292      	uxth	r2, r2
90024eb0:	b280      	uxth	r0, r0
90024eb2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90024eb6:	f100 0b01 	add.w	fp, r0, #1
90024eba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90024ebe:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90024ec2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90024ec6:	ea4b 0101 	orr.w	r1, fp, r1
90024eca:	f102 0b01 	add.w	fp, r2, #1
90024ece:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024ed2:	0952      	lsrs	r2, r2, #5
90024ed4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024ed8:	4311      	orrs	r1, r2
90024eda:	f8ae 1000 	strh.w	r1, [lr]
90024ede:	e79f      	b.n	90024e20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90024ee0:	b013      	add	sp, #76	; 0x4c
90024ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024ee6:	bf00      	nop
90024ee8:	2402357c 	.word	0x2402357c

90024eec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90024eec:	b570      	push	{r4, r5, r6, lr}
90024eee:	1208      	asrs	r0, r1, #8
90024ef0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90024ef4:	b29e      	uxth	r6, r3
90024ef6:	1213      	asrs	r3, r2, #8
90024ef8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024efc:	10cc      	asrs	r4, r1, #3
90024efe:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90024f02:	00c9      	lsls	r1, r1, #3
90024f04:	fb10 f006 	smulbb	r0, r0, r6
90024f08:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
90024f0c:	fb13 f305 	smulbb	r3, r3, r5
90024f10:	fb14 f406 	smulbb	r4, r4, r6
90024f14:	4418      	add	r0, r3
90024f16:	10d3      	asrs	r3, r2, #3
90024f18:	00d2      	lsls	r2, r2, #3
90024f1a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90024f1e:	b280      	uxth	r0, r0
90024f20:	b2d2      	uxtb	r2, r2
90024f22:	fb13 f305 	smulbb	r3, r3, r5
90024f26:	fb12 f205 	smulbb	r2, r2, r5
90024f2a:	441c      	add	r4, r3
90024f2c:	b2cb      	uxtb	r3, r1
90024f2e:	fb13 f306 	smulbb	r3, r3, r6
90024f32:	b2a4      	uxth	r4, r4
90024f34:	4413      	add	r3, r2
90024f36:	1c42      	adds	r2, r0, #1
90024f38:	b29b      	uxth	r3, r3
90024f3a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024f3e:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
90024f42:	1c58      	adds	r0, r3, #1
90024f44:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90024f48:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90024f4c:	4310      	orrs	r0, r2
90024f4e:	1c62      	adds	r2, r4, #1
90024f50:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90024f54:	0964      	lsrs	r4, r4, #5
90024f56:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90024f5a:	4320      	orrs	r0, r4
90024f5c:	bd70      	pop	{r4, r5, r6, pc}
	...

90024f60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90024f60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f64:	b08f      	sub	sp, #60	; 0x3c
90024f66:	461c      	mov	r4, r3
90024f68:	460d      	mov	r5, r1
90024f6a:	4616      	mov	r6, r2
90024f6c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90024f70:	9004      	str	r0, [sp, #16]
90024f72:	9b18      	ldr	r3, [sp, #96]	; 0x60
90024f74:	2f00      	cmp	r7, #0
90024f76:	f000 80f6 	beq.w	90025166 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90024f7a:	6820      	ldr	r0, [r4, #0]
90024f7c:	aa0a      	add	r2, sp, #40	; 0x28
90024f7e:	6861      	ldr	r1, [r4, #4]
90024f80:	f04f 0802 	mov.w	r8, #2
90024f84:	3604      	adds	r6, #4
90024f86:	c203      	stmia	r2!, {r0, r1}
90024f88:	6818      	ldr	r0, [r3, #0]
90024f8a:	aa0c      	add	r2, sp, #48	; 0x30
90024f8c:	6859      	ldr	r1, [r3, #4]
90024f8e:	c203      	stmia	r2!, {r0, r1}
90024f90:	a80a      	add	r0, sp, #40	; 0x28
90024f92:	f7ef fd53 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90024f96:	4621      	mov	r1, r4
90024f98:	a80c      	add	r0, sp, #48	; 0x30
90024f9a:	f7ef fd93 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90024f9e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90024fa2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90024fa6:	f002 0301 	and.w	r3, r2, #1
90024faa:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
90024fae:	9306      	str	r3, [sp, #24]
90024fb0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90024fb4:	f003 0101 	and.w	r1, r3, #1
90024fb8:	9105      	str	r1, [sp, #20]
90024fba:	9805      	ldr	r0, [sp, #20]
90024fbc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90024fc0:	4403      	add	r3, r0
90024fc2:	fb01 2303 	mla	r3, r1, r3, r2
90024fc6:	fb93 f3f8 	sdiv	r3, r3, r8
90024fca:	441d      	add	r5, r3
90024fcc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90024fd0:	441a      	add	r2, r3
90024fd2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90024fd6:	4419      	add	r1, r3
90024fd8:	4b64      	ldr	r3, [pc, #400]	; (9002516c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90024fda:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90024fde:	6818      	ldr	r0, [r3, #0]
90024fe0:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90024fe4:	6803      	ldr	r3, [r0, #0]
90024fe6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90024fe8:	4798      	blx	r3
90024fea:	4a61      	ldr	r2, [pc, #388]	; (90025170 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90024fec:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90024ff0:	2fff      	cmp	r7, #255	; 0xff
90024ff2:	8813      	ldrh	r3, [r2, #0]
90024ff4:	4611      	mov	r1, r2
90024ff6:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
90024ffa:	fb03 fb0b 	mul.w	fp, r3, fp
90024ffe:	fb03 a404 	mla	r4, r3, r4, sl
90025002:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025006:	d06b      	beq.n	900250e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90025008:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002500c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90025010:	9303      	str	r3, [sp, #12]
90025012:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90025016:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002501a:	9b07      	ldr	r3, [sp, #28]
9002501c:	42a3      	cmp	r3, r4
9002501e:	f240 809d 	bls.w	9002515c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025022:	9b06      	ldr	r3, [sp, #24]
90025024:	2b00      	cmp	r3, #0
90025026:	d039      	beq.n	9002509c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90025028:	782b      	ldrb	r3, [r5, #0]
9002502a:	f105 0801 	add.w	r8, r5, #1
9002502e:	f109 3bff 	add.w	fp, r9, #4294967295
90025032:	8822      	ldrh	r2, [r4, #0]
90025034:	f003 030f 	and.w	r3, r3, #15
90025038:	9804      	ldr	r0, [sp, #16]
9002503a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002503e:	9b03      	ldr	r3, [sp, #12]
90025040:	9300      	str	r3, [sp, #0]
90025042:	463b      	mov	r3, r7
90025044:	f7ff ff52 	bl	90024eec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025048:	f824 0b02 	strh.w	r0, [r4], #2
9002504c:	f1bb 0f01 	cmp.w	fp, #1
90025050:	46a2      	mov	sl, r4
90025052:	f104 0404 	add.w	r4, r4, #4
90025056:	dd24      	ble.n	900250a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90025058:	f898 3000 	ldrb.w	r3, [r8]
9002505c:	f1ab 0b02 	sub.w	fp, fp, #2
90025060:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025064:	091b      	lsrs	r3, r3, #4
90025066:	9804      	ldr	r0, [sp, #16]
90025068:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002506c:	9b03      	ldr	r3, [sp, #12]
9002506e:	9300      	str	r3, [sp, #0]
90025070:	463b      	mov	r3, r7
90025072:	f7ff ff3b 	bl	90024eec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025076:	f824 0c04 	strh.w	r0, [r4, #-4]
9002507a:	f818 3b01 	ldrb.w	r3, [r8], #1
9002507e:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90025082:	f003 030f 	and.w	r3, r3, #15
90025086:	9804      	ldr	r0, [sp, #16]
90025088:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
9002508c:	9b03      	ldr	r3, [sp, #12]
9002508e:	9300      	str	r3, [sp, #0]
90025090:	463b      	mov	r3, r7
90025092:	f7ff ff2b 	bl	90024eec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025096:	f824 0c02 	strh.w	r0, [r4, #-2]
9002509a:	e7d7      	b.n	9002504c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002509c:	46a8      	mov	r8, r5
9002509e:	46cb      	mov	fp, r9
900250a0:	e7d4      	b.n	9002504c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
900250a2:	d10e      	bne.n	900250c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
900250a4:	f898 3000 	ldrb.w	r3, [r8]
900250a8:	f8ba 2000 	ldrh.w	r2, [sl]
900250ac:	091b      	lsrs	r3, r3, #4
900250ae:	9804      	ldr	r0, [sp, #16]
900250b0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900250b4:	9b03      	ldr	r3, [sp, #12]
900250b6:	9300      	str	r3, [sp, #0]
900250b8:	463b      	mov	r3, r7
900250ba:	f7ff ff17 	bl	90024eec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900250be:	f82a 0b02 	strh.w	r0, [sl], #2
900250c2:	9b08      	ldr	r3, [sp, #32]
900250c4:	9a05      	ldr	r2, [sp, #20]
900250c6:	881c      	ldrh	r4, [r3, #0]
900250c8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900250cc:	eba4 0409 	sub.w	r4, r4, r9
900250d0:	4413      	add	r3, r2
900250d2:	9a09      	ldr	r2, [sp, #36]	; 0x24
900250d4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
900250d8:	fb93 f3f2 	sdiv	r3, r3, r2
900250dc:	441d      	add	r5, r3
900250de:	e79c      	b.n	9002501a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
900250e0:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
900250e4:	45a3      	cmp	fp, r4
900250e6:	d939      	bls.n	9002515c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
900250e8:	9b06      	ldr	r3, [sp, #24]
900250ea:	b1fb      	cbz	r3, 9002512c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
900250ec:	782b      	ldrb	r3, [r5, #0]
900250ee:	1c6a      	adds	r2, r5, #1
900250f0:	f109 30ff 	add.w	r0, r9, #4294967295
900250f4:	3402      	adds	r4, #2
900250f6:	f003 030f 	and.w	r3, r3, #15
900250fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900250fe:	f824 3c02 	strh.w	r3, [r4, #-2]
90025102:	2801      	cmp	r0, #1
90025104:	4623      	mov	r3, r4
90025106:	f104 0404 	add.w	r4, r4, #4
9002510a:	dd12      	ble.n	90025132 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002510c:	7813      	ldrb	r3, [r2, #0]
9002510e:	3802      	subs	r0, #2
90025110:	091b      	lsrs	r3, r3, #4
90025112:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025116:	f824 3c04 	strh.w	r3, [r4, #-4]
9002511a:	f812 3b01 	ldrb.w	r3, [r2], #1
9002511e:	f003 030f 	and.w	r3, r3, #15
90025122:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025126:	f824 3c02 	strh.w	r3, [r4, #-2]
9002512a:	e7ea      	b.n	90025102 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002512c:	462a      	mov	r2, r5
9002512e:	4648      	mov	r0, r9
90025130:	e7e7      	b.n	90025102 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90025132:	d106      	bne.n	90025142 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90025134:	7812      	ldrb	r2, [r2, #0]
90025136:	3302      	adds	r3, #2
90025138:	0912      	lsrs	r2, r2, #4
9002513a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9002513e:	f823 2c02 	strh.w	r2, [r3, #-2]
90025142:	880c      	ldrh	r4, [r1, #0]
90025144:	9a05      	ldr	r2, [sp, #20]
90025146:	eba4 0409 	sub.w	r4, r4, r9
9002514a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
9002514e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025152:	4413      	add	r3, r2
90025154:	fb93 f3f8 	sdiv	r3, r3, r8
90025158:	441d      	add	r5, r3
9002515a:	e7c3      	b.n	900250e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
9002515c:	4b03      	ldr	r3, [pc, #12]	; (9002516c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002515e:	6818      	ldr	r0, [r3, #0]
90025160:	6803      	ldr	r3, [r0, #0]
90025162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025164:	4798      	blx	r3
90025166:	b00f      	add	sp, #60	; 0x3c
90025168:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002516c:	2402356c 	.word	0x2402356c
90025170:	24023566 	.word	0x24023566

90025174 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90025174:	b5f0      	push	{r4, r5, r6, r7, lr}
90025176:	f89d 5014 	ldrb.w	r5, [sp, #20]
9002517a:	0a0f      	lsrs	r7, r1, #8
9002517c:	2dff      	cmp	r5, #255	; 0xff
9002517e:	d10c      	bne.n	9002519a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90025180:	2bff      	cmp	r3, #255	; 0xff
90025182:	d10a      	bne.n	9002519a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90025184:	0948      	lsrs	r0, r1, #5
90025186:	4b25      	ldr	r3, [pc, #148]	; (9002521c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90025188:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9002518c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025190:	403b      	ands	r3, r7
90025192:	4318      	orrs	r0, r3
90025194:	4308      	orrs	r0, r1
90025196:	b280      	uxth	r0, r0
90025198:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002519a:	fb15 f503 	smulbb	r5, r5, r3
9002519e:	1214      	asrs	r4, r2, #8
900251a0:	10d6      	asrs	r6, r2, #3
900251a2:	b2ab      	uxth	r3, r5
900251a4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900251a8:	00d0      	lsls	r0, r2, #3
900251aa:	f3c1 4207 	ubfx	r2, r1, #16, #8
900251ae:	1c5d      	adds	r5, r3, #1
900251b0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900251b4:	b2c0      	uxtb	r0, r0
900251b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900251ba:	eb05 2513 	add.w	r5, r5, r3, lsr #8
900251be:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
900251c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
900251c6:	fa1f fc85 	uxth.w	ip, r5
900251ca:	43ed      	mvns	r5, r5
900251cc:	fb12 f20c 	smulbb	r2, r2, ip
900251d0:	b2eb      	uxtb	r3, r5
900251d2:	b2fd      	uxtb	r5, r7
900251d4:	fb04 2403 	mla	r4, r4, r3, r2
900251d8:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
900251dc:	fb15 f50c 	smulbb	r5, r5, ip
900251e0:	b2c8      	uxtb	r0, r1
900251e2:	b2a4      	uxth	r4, r4
900251e4:	fb10 f00c 	smulbb	r0, r0, ip
900251e8:	fb06 5503 	mla	r5, r6, r3, r5
900251ec:	fb02 0003 	mla	r0, r2, r3, r0
900251f0:	b2ad      	uxth	r5, r5
900251f2:	b283      	uxth	r3, r0
900251f4:	1c60      	adds	r0, r4, #1
900251f6:	eb00 2414 	add.w	r4, r0, r4, lsr #8
900251fa:	1c58      	adds	r0, r3, #1
900251fc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025200:	1c6b      	adds	r3, r5, #1
90025202:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025206:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002520a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002520e:	096d      	lsrs	r5, r5, #5
90025210:	4320      	orrs	r0, r4
90025212:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025216:	4328      	orrs	r0, r5
90025218:	e7be      	b.n	90025198 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002521a:	bf00      	nop
9002521c:	00fff800 	.word	0x00fff800

90025220 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90025220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025224:	461c      	mov	r4, r3
90025226:	b08d      	sub	sp, #52	; 0x34
90025228:	460d      	mov	r5, r1
9002522a:	4616      	mov	r6, r2
9002522c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002522e:	4680      	mov	r8, r0
90025230:	6861      	ldr	r1, [r4, #4]
90025232:	aa08      	add	r2, sp, #32
90025234:	6820      	ldr	r0, [r4, #0]
90025236:	f04f 0a02 	mov.w	sl, #2
9002523a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
9002523e:	3604      	adds	r6, #4
90025240:	c203      	stmia	r2!, {r0, r1}
90025242:	6818      	ldr	r0, [r3, #0]
90025244:	aa0a      	add	r2, sp, #40	; 0x28
90025246:	6859      	ldr	r1, [r3, #4]
90025248:	c203      	stmia	r2!, {r0, r1}
9002524a:	a808      	add	r0, sp, #32
9002524c:	f7ef fbf6 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025250:	4621      	mov	r1, r4
90025252:	a80a      	add	r0, sp, #40	; 0x28
90025254:	f7ef fc36 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025258:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9002525c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
90025260:	f002 0301 	and.w	r3, r2, #1
90025264:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
90025268:	9303      	str	r3, [sp, #12]
9002526a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
9002526e:	f003 0101 	and.w	r1, r3, #1
90025272:	9102      	str	r1, [sp, #8]
90025274:	9802      	ldr	r0, [sp, #8]
90025276:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
9002527a:	4403      	add	r3, r0
9002527c:	fb01 2303 	mla	r3, r1, r3, r2
90025280:	fb93 f3fa 	sdiv	r3, r3, sl
90025284:	441d      	add	r5, r3
90025286:	f8bd 3020 	ldrh.w	r3, [sp, #32]
9002528a:	441a      	add	r2, r3
9002528c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90025290:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90025294:	4419      	add	r1, r3
90025296:	4a3e      	ldr	r2, [pc, #248]	; (90025390 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90025298:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
9002529c:	6810      	ldr	r0, [r2, #0]
9002529e:	9205      	str	r2, [sp, #20]
900252a0:	6803      	ldr	r3, [r0, #0]
900252a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900252a4:	4798      	blx	r3
900252a6:	4b3b      	ldr	r3, [pc, #236]	; (90025394 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
900252a8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
900252ac:	8819      	ldrh	r1, [r3, #0]
900252ae:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
900252b2:	434f      	muls	r7, r1
900252b4:	fb01 c404 	mla	r4, r1, r4, ip
900252b8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900252bc:	eb04 0247 	add.w	r2, r4, r7, lsl #1
900252c0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
900252c4:	9204      	str	r2, [sp, #16]
900252c6:	9b04      	ldr	r3, [sp, #16]
900252c8:	429c      	cmp	r4, r3
900252ca:	d258      	bcs.n	9002537e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
900252cc:	9b03      	ldr	r3, [sp, #12]
900252ce:	2b00      	cmp	r3, #0
900252d0:	d034      	beq.n	9002533c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
900252d2:	782b      	ldrb	r3, [r5, #0]
900252d4:	1c6f      	adds	r7, r5, #1
900252d6:	f003 030f 	and.w	r3, r3, #15
900252da:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900252de:	0e0b      	lsrs	r3, r1, #24
900252e0:	d006      	beq.n	900252f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
900252e2:	8822      	ldrh	r2, [r4, #0]
900252e4:	4640      	mov	r0, r8
900252e6:	9300      	str	r3, [sp, #0]
900252e8:	464b      	mov	r3, r9
900252ea:	f7ff ff43 	bl	90025174 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900252ee:	8020      	strh	r0, [r4, #0]
900252f0:	3402      	adds	r4, #2
900252f2:	f10b 3aff 	add.w	sl, fp, #4294967295
900252f6:	f1ba 0f01 	cmp.w	sl, #1
900252fa:	dd22      	ble.n	90025342 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
900252fc:	783b      	ldrb	r3, [r7, #0]
900252fe:	091b      	lsrs	r3, r3, #4
90025300:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025304:	0e0b      	lsrs	r3, r1, #24
90025306:	d006      	beq.n	90025316 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90025308:	8822      	ldrh	r2, [r4, #0]
9002530a:	4640      	mov	r0, r8
9002530c:	9300      	str	r3, [sp, #0]
9002530e:	464b      	mov	r3, r9
90025310:	f7ff ff30 	bl	90025174 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025314:	8020      	strh	r0, [r4, #0]
90025316:	f817 3b01 	ldrb.w	r3, [r7], #1
9002531a:	f003 030f 	and.w	r3, r3, #15
9002531e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025322:	0e0b      	lsrs	r3, r1, #24
90025324:	d006      	beq.n	90025334 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90025326:	8862      	ldrh	r2, [r4, #2]
90025328:	4640      	mov	r0, r8
9002532a:	9300      	str	r3, [sp, #0]
9002532c:	464b      	mov	r3, r9
9002532e:	f7ff ff21 	bl	90025174 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025332:	8060      	strh	r0, [r4, #2]
90025334:	3404      	adds	r4, #4
90025336:	f1aa 0a02 	sub.w	sl, sl, #2
9002533a:	e7dc      	b.n	900252f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
9002533c:	462f      	mov	r7, r5
9002533e:	46da      	mov	sl, fp
90025340:	e7d9      	b.n	900252f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90025342:	d10d      	bne.n	90025360 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90025344:	783b      	ldrb	r3, [r7, #0]
90025346:	091b      	lsrs	r3, r3, #4
90025348:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002534c:	0e0b      	lsrs	r3, r1, #24
9002534e:	d006      	beq.n	9002535e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90025350:	8822      	ldrh	r2, [r4, #0]
90025352:	4640      	mov	r0, r8
90025354:	9300      	str	r3, [sp, #0]
90025356:	464b      	mov	r3, r9
90025358:	f7ff ff0c 	bl	90025174 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002535c:	8020      	strh	r0, [r4, #0]
9002535e:	3402      	adds	r4, #2
90025360:	9b06      	ldr	r3, [sp, #24]
90025362:	9a02      	ldr	r2, [sp, #8]
90025364:	881b      	ldrh	r3, [r3, #0]
90025366:	eba3 030b 	sub.w	r3, r3, fp
9002536a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9002536e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90025372:	4413      	add	r3, r2
90025374:	9a07      	ldr	r2, [sp, #28]
90025376:	fb93 f3f2 	sdiv	r3, r3, r2
9002537a:	441d      	add	r5, r3
9002537c:	e7a3      	b.n	900252c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
9002537e:	9b05      	ldr	r3, [sp, #20]
90025380:	6818      	ldr	r0, [r3, #0]
90025382:	6803      	ldr	r3, [r0, #0]
90025384:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025386:	4798      	blx	r3
90025388:	b00d      	add	sp, #52	; 0x34
9002538a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002538e:	bf00      	nop
90025390:	2402356c 	.word	0x2402356c
90025394:	24023566 	.word	0x24023566

90025398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90025398:	b570      	push	{r4, r5, r6, lr}
9002539a:	1214      	asrs	r4, r2, #8
9002539c:	788d      	ldrb	r5, [r1, #2]
9002539e:	f89d 6010 	ldrb.w	r6, [sp, #16]
900253a2:	10d0      	asrs	r0, r2, #3
900253a4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900253a8:	00d2      	lsls	r2, r2, #3
900253aa:	fb15 f503 	smulbb	r5, r5, r3
900253ae:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900253b2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
900253b6:	b2d2      	uxtb	r2, r2
900253b8:	fb04 5506 	mla	r5, r4, r6, r5
900253bc:	784c      	ldrb	r4, [r1, #1]
900253be:	7809      	ldrb	r1, [r1, #0]
900253c0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
900253c4:	fb14 f403 	smulbb	r4, r4, r3
900253c8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
900253cc:	fb11 f303 	smulbb	r3, r1, r3
900253d0:	b2ad      	uxth	r5, r5
900253d2:	fb00 4406 	mla	r4, r0, r6, r4
900253d6:	fb02 3306 	mla	r3, r2, r6, r3
900253da:	1c68      	adds	r0, r5, #1
900253dc:	b2a4      	uxth	r4, r4
900253de:	b29b      	uxth	r3, r3
900253e0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
900253e4:	1c62      	adds	r2, r4, #1
900253e6:	1c58      	adds	r0, r3, #1
900253e8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900253ec:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900253f0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900253f4:	0964      	lsrs	r4, r4, #5
900253f6:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900253fa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900253fe:	4328      	orrs	r0, r5
90025400:	4320      	orrs	r0, r4
90025402:	bd70      	pop	{r4, r5, r6, pc}

90025404 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90025404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025408:	b08f      	sub	sp, #60	; 0x3c
9002540a:	461c      	mov	r4, r3
9002540c:	4682      	mov	sl, r0
9002540e:	460e      	mov	r6, r1
90025410:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90025414:	4615      	mov	r5, r2
90025416:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025418:	2f00      	cmp	r7, #0
9002541a:	f000 8141 	beq.w	900256a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002541e:	6820      	ldr	r0, [r4, #0]
90025420:	aa0a      	add	r2, sp, #40	; 0x28
90025422:	6861      	ldr	r1, [r4, #4]
90025424:	f04f 0802 	mov.w	r8, #2
90025428:	3504      	adds	r5, #4
9002542a:	c203      	stmia	r2!, {r0, r1}
9002542c:	6818      	ldr	r0, [r3, #0]
9002542e:	aa0c      	add	r2, sp, #48	; 0x30
90025430:	6859      	ldr	r1, [r3, #4]
90025432:	c203      	stmia	r2!, {r0, r1}
90025434:	a80a      	add	r0, sp, #40	; 0x28
90025436:	f7ef fb01 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002543a:	4621      	mov	r1, r4
9002543c:	a80c      	add	r0, sp, #48	; 0x30
9002543e:	f7ef fb41 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025442:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90025446:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
9002544a:	f002 0301 	and.w	r3, r2, #1
9002544e:	9306      	str	r3, [sp, #24]
90025450:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025454:	f003 0101 	and.w	r1, r3, #1
90025458:	9105      	str	r1, [sp, #20]
9002545a:	9805      	ldr	r0, [sp, #20]
9002545c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90025460:	4403      	add	r3, r0
90025462:	fb01 2303 	mla	r3, r1, r3, r2
90025466:	fb93 f3f8 	sdiv	r3, r3, r8
9002546a:	441e      	add	r6, r3
9002546c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90025470:	441a      	add	r2, r3
90025472:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90025476:	4419      	add	r1, r3
90025478:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9002547c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
90025480:	9303      	str	r3, [sp, #12]
90025482:	4b89      	ldr	r3, [pc, #548]	; (900256a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025484:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90025488:	6818      	ldr	r0, [r3, #0]
9002548a:	6803      	ldr	r3, [r0, #0]
9002548c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9002548e:	4798      	blx	r3
90025490:	4a86      	ldr	r2, [pc, #536]	; (900256ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90025492:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90025496:	2fff      	cmp	r7, #255	; 0xff
90025498:	8813      	ldrh	r3, [r2, #0]
9002549a:	4694      	mov	ip, r2
9002549c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
900254a0:	fb03 9404 	mla	r4, r3, r4, r9
900254a4:	fb03 f30b 	mul.w	r3, r3, fp
900254a8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900254ac:	d071      	beq.n	90025592 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
900254ae:	43f9      	mvns	r1, r7
900254b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900254b4:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
900254b8:	b2c9      	uxtb	r1, r1
900254ba:	e9cd 3207 	strd	r3, r2, [sp, #28]
900254be:	9104      	str	r1, [sp, #16]
900254c0:	9b07      	ldr	r3, [sp, #28]
900254c2:	42a3      	cmp	r3, r4
900254c4:	f240 80e7 	bls.w	90025696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
900254c8:	9b06      	ldr	r3, [sp, #24]
900254ca:	2b00      	cmp	r3, #0
900254cc:	d03d      	beq.n	9002554a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
900254ce:	7831      	ldrb	r1, [r6, #0]
900254d0:	4650      	mov	r0, sl
900254d2:	9b04      	ldr	r3, [sp, #16]
900254d4:	f106 0801 	add.w	r8, r6, #1
900254d8:	f001 010f 	and.w	r1, r1, #15
900254dc:	8822      	ldrh	r2, [r4, #0]
900254de:	9300      	str	r3, [sp, #0]
900254e0:	463b      	mov	r3, r7
900254e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900254e6:	4429      	add	r1, r5
900254e8:	f7ff ff56 	bl	90025398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900254ec:	9b03      	ldr	r3, [sp, #12]
900254ee:	f824 0b02 	strh.w	r0, [r4], #2
900254f2:	f103 3bff 	add.w	fp, r3, #4294967295
900254f6:	f1bb 0f01 	cmp.w	fp, #1
900254fa:	46a1      	mov	r9, r4
900254fc:	f104 0404 	add.w	r4, r4, #4
90025500:	dd27      	ble.n	90025552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90025502:	f898 1000 	ldrb.w	r1, [r8]
90025506:	4650      	mov	r0, sl
90025508:	9b04      	ldr	r3, [sp, #16]
9002550a:	f1ab 0b02 	sub.w	fp, fp, #2
9002550e:	0909      	lsrs	r1, r1, #4
90025510:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025514:	9300      	str	r3, [sp, #0]
90025516:	463b      	mov	r3, r7
90025518:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002551c:	4429      	add	r1, r5
9002551e:	f7ff ff3b 	bl	90025398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025522:	f824 0c04 	strh.w	r0, [r4, #-4]
90025526:	f818 1b01 	ldrb.w	r1, [r8], #1
9002552a:	4650      	mov	r0, sl
9002552c:	9b04      	ldr	r3, [sp, #16]
9002552e:	f001 010f 	and.w	r1, r1, #15
90025532:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90025536:	9300      	str	r3, [sp, #0]
90025538:	463b      	mov	r3, r7
9002553a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002553e:	4429      	add	r1, r5
90025540:	f7ff ff2a 	bl	90025398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025544:	f824 0c02 	strh.w	r0, [r4, #-2]
90025548:	e7d5      	b.n	900254f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
9002554a:	46b0      	mov	r8, r6
9002554c:	f8dd b00c 	ldr.w	fp, [sp, #12]
90025550:	e7d1      	b.n	900254f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90025552:	d10f      	bne.n	90025574 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90025554:	f898 1000 	ldrb.w	r1, [r8]
90025558:	4650      	mov	r0, sl
9002555a:	9b04      	ldr	r3, [sp, #16]
9002555c:	0909      	lsrs	r1, r1, #4
9002555e:	f8b9 2000 	ldrh.w	r2, [r9]
90025562:	9300      	str	r3, [sp, #0]
90025564:	463b      	mov	r3, r7
90025566:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002556a:	4429      	add	r1, r5
9002556c:	f7ff ff14 	bl	90025398 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025570:	f829 0b02 	strh.w	r0, [r9], #2
90025574:	9b08      	ldr	r3, [sp, #32]
90025576:	9a05      	ldr	r2, [sp, #20]
90025578:	881c      	ldrh	r4, [r3, #0]
9002557a:	9b03      	ldr	r3, [sp, #12]
9002557c:	1ae4      	subs	r4, r4, r3
9002557e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025582:	4413      	add	r3, r2
90025584:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025586:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002558a:	fb93 f3f2 	sdiv	r3, r3, r2
9002558e:	441e      	add	r6, r3
90025590:	e796      	b.n	900254c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90025592:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025596:	4f46      	ldr	r7, [pc, #280]	; (900256b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90025598:	42a3      	cmp	r3, r4
9002559a:	d97c      	bls.n	90025696 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002559c:	9a06      	ldr	r2, [sp, #24]
9002559e:	2a00      	cmp	r2, #0
900255a0:	d054      	beq.n	9002564c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
900255a2:	7830      	ldrb	r0, [r6, #0]
900255a4:	1c71      	adds	r1, r6, #1
900255a6:	f000 000f 	and.w	r0, r0, #15
900255aa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900255ae:	eb05 0e00 	add.w	lr, r5, r0
900255b2:	5c28      	ldrb	r0, [r5, r0]
900255b4:	f89e 2002 	ldrb.w	r2, [lr, #2]
900255b8:	f89e e001 	ldrb.w	lr, [lr, #1]
900255bc:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900255c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900255c4:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900255c8:	ea42 020e 	orr.w	r2, r2, lr
900255cc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
900255d0:	f824 2b02 	strh.w	r2, [r4], #2
900255d4:	9a03      	ldr	r2, [sp, #12]
900255d6:	f102 3eff 	add.w	lr, r2, #4294967295
900255da:	f1be 0f01 	cmp.w	lr, #1
900255de:	4620      	mov	r0, r4
900255e0:	f104 0404 	add.w	r4, r4, #4
900255e4:	dd36      	ble.n	90025654 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
900255e6:	7808      	ldrb	r0, [r1, #0]
900255e8:	f1ae 0e02 	sub.w	lr, lr, #2
900255ec:	0900      	lsrs	r0, r0, #4
900255ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900255f2:	eb05 0a00 	add.w	sl, r5, r0
900255f6:	f89a 2001 	ldrb.w	r2, [sl, #1]
900255fa:	f89a 9002 	ldrb.w	r9, [sl, #2]
900255fe:	00d2      	lsls	r2, r2, #3
90025600:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025604:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025608:	ea49 0202 	orr.w	r2, r9, r2
9002560c:	f815 9000 	ldrb.w	r9, [r5, r0]
90025610:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025614:	f824 2c04 	strh.w	r2, [r4, #-4]
90025618:	f811 0b01 	ldrb.w	r0, [r1], #1
9002561c:	f000 000f 	and.w	r0, r0, #15
90025620:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025624:	eb05 0a00 	add.w	sl, r5, r0
90025628:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002562c:	f89a 9002 	ldrb.w	r9, [sl, #2]
90025630:	00d2      	lsls	r2, r2, #3
90025632:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025636:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002563a:	ea49 0202 	orr.w	r2, r9, r2
9002563e:	f815 9000 	ldrb.w	r9, [r5, r0]
90025642:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025646:	f824 2c02 	strh.w	r2, [r4, #-2]
9002564a:	e7c6      	b.n	900255da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
9002564c:	4631      	mov	r1, r6
9002564e:	f8dd e00c 	ldr.w	lr, [sp, #12]
90025652:	e7c2      	b.n	900255da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
90025654:	d111      	bne.n	9002567a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
90025656:	7809      	ldrb	r1, [r1, #0]
90025658:	0909      	lsrs	r1, r1, #4
9002565a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002565e:	186c      	adds	r4, r5, r1
90025660:	5c69      	ldrb	r1, [r5, r1]
90025662:	78a2      	ldrb	r2, [r4, #2]
90025664:	7864      	ldrb	r4, [r4, #1]
90025666:	ea07 2202 	and.w	r2, r7, r2, lsl #8
9002566a:	00e4      	lsls	r4, r4, #3
9002566c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
90025670:	4322      	orrs	r2, r4
90025672:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
90025676:	f820 2b02 	strh.w	r2, [r0], #2
9002567a:	9a03      	ldr	r2, [sp, #12]
9002567c:	f8bc 4000 	ldrh.w	r4, [ip]
90025680:	9905      	ldr	r1, [sp, #20]
90025682:	1aa4      	subs	r4, r4, r2
90025684:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
90025688:	440a      	add	r2, r1
9002568a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002568e:	fb92 f2f8 	sdiv	r2, r2, r8
90025692:	4416      	add	r6, r2
90025694:	e780      	b.n	90025598 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90025696:	4b04      	ldr	r3, [pc, #16]	; (900256a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025698:	6818      	ldr	r0, [r3, #0]
9002569a:	6803      	ldr	r3, [r0, #0]
9002569c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002569e:	4798      	blx	r3
900256a0:	b00f      	add	sp, #60	; 0x3c
900256a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900256a6:	bf00      	nop
900256a8:	2402356c 	.word	0x2402356c
900256ac:	24023566 	.word	0x24023566
900256b0:	fffff800 	.word	0xfffff800

900256b4 <CRC_Lock>:
900256b4:	4a20      	ldr	r2, [pc, #128]	; (90025738 <CRC_Lock+0x84>)
900256b6:	b530      	push	{r4, r5, lr}
900256b8:	6813      	ldr	r3, [r2, #0]
900256ba:	f64f 74f0 	movw	r4, #65520	; 0xfff0
900256be:	f24c 2540 	movw	r5, #49728	; 0xc240
900256c2:	f023 0301 	bic.w	r3, r3, #1
900256c6:	6013      	str	r3, [r2, #0]
900256c8:	4b1c      	ldr	r3, [pc, #112]	; (9002573c <CRC_Lock+0x88>)
900256ca:	681a      	ldr	r2, [r3, #0]
900256cc:	4022      	ands	r2, r4
900256ce:	42aa      	cmp	r2, r5
900256d0:	d005      	beq.n	900256de <CRC_Lock+0x2a>
900256d2:	681b      	ldr	r3, [r3, #0]
900256d4:	f24c 2270 	movw	r2, #49776	; 0xc270
900256d8:	4023      	ands	r3, r4
900256da:	4293      	cmp	r3, r2
900256dc:	d124      	bne.n	90025728 <CRC_Lock+0x74>
900256de:	4b18      	ldr	r3, [pc, #96]	; (90025740 <CRC_Lock+0x8c>)
900256e0:	681b      	ldr	r3, [r3, #0]
900256e2:	bb0b      	cbnz	r3, 90025728 <CRC_Lock+0x74>
900256e4:	4b17      	ldr	r3, [pc, #92]	; (90025744 <CRC_Lock+0x90>)
900256e6:	681a      	ldr	r2, [r3, #0]
900256e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
900256ec:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
900256f0:	d00d      	beq.n	9002570e <CRC_Lock+0x5a>
900256f2:	681a      	ldr	r2, [r3, #0]
900256f4:	f240 4483 	movw	r4, #1155	; 0x483
900256f8:	f3c2 020b 	ubfx	r2, r2, #0, #12
900256fc:	42a2      	cmp	r2, r4
900256fe:	d006      	beq.n	9002570e <CRC_Lock+0x5a>
90025700:	681b      	ldr	r3, [r3, #0]
90025702:	f240 4285 	movw	r2, #1157	; 0x485
90025706:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002570a:	4293      	cmp	r3, r2
9002570c:	d10c      	bne.n	90025728 <CRC_Lock+0x74>
9002570e:	4b0e      	ldr	r3, [pc, #56]	; (90025748 <CRC_Lock+0x94>)
90025710:	2201      	movs	r2, #1
90025712:	601a      	str	r2, [r3, #0]
90025714:	681a      	ldr	r2, [r3, #0]
90025716:	2a00      	cmp	r2, #0
90025718:	d1fc      	bne.n	90025714 <CRC_Lock+0x60>
9002571a:	4b0c      	ldr	r3, [pc, #48]	; (9002574c <CRC_Lock+0x98>)
9002571c:	6018      	str	r0, [r3, #0]
9002571e:	6818      	ldr	r0, [r3, #0]
90025720:	1a43      	subs	r3, r0, r1
90025722:	4258      	negs	r0, r3
90025724:	4158      	adcs	r0, r3
90025726:	bd30      	pop	{r4, r5, pc}
90025728:	4b09      	ldr	r3, [pc, #36]	; (90025750 <CRC_Lock+0x9c>)
9002572a:	2201      	movs	r2, #1
9002572c:	601a      	str	r2, [r3, #0]
9002572e:	681a      	ldr	r2, [r3, #0]
90025730:	2a00      	cmp	r2, #0
90025732:	d1fc      	bne.n	9002572e <CRC_Lock+0x7a>
90025734:	4b07      	ldr	r3, [pc, #28]	; (90025754 <CRC_Lock+0xa0>)
90025736:	e7f1      	b.n	9002571c <CRC_Lock+0x68>
90025738:	e0002000 	.word	0xe0002000
9002573c:	e000ed00 	.word	0xe000ed00
90025740:	e0042000 	.word	0xe0042000
90025744:	5c001000 	.word	0x5c001000
90025748:	58024c08 	.word	0x58024c08
9002574c:	58024c00 	.word	0x58024c00
90025750:	40023008 	.word	0x40023008
90025754:	40023000 	.word	0x40023000

90025758 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90025758:	6101      	str	r1, [r0, #16]
9002575a:	4770      	bx	lr

9002575c <_ZN8touchgfx8Gestures4tickEv>:
9002575c:	7b83      	ldrb	r3, [r0, #14]
9002575e:	b14b      	cbz	r3, 90025774 <_ZN8touchgfx8Gestures4tickEv+0x18>
90025760:	8903      	ldrh	r3, [r0, #8]
90025762:	3301      	adds	r3, #1
90025764:	b29b      	uxth	r3, r3
90025766:	2b07      	cmp	r3, #7
90025768:	8103      	strh	r3, [r0, #8]
9002576a:	bf81      	itttt	hi
9002576c:	2300      	movhi	r3, #0
9002576e:	8143      	strhhi	r3, [r0, #10]
90025770:	8183      	strhhi	r3, [r0, #12]
90025772:	7383      	strbhi	r3, [r0, #14]
90025774:	4770      	bx	lr
	...

90025778 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90025778:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
9002577c:	4698      	mov	r8, r3
9002577e:	8883      	ldrh	r3, [r0, #4]
90025780:	4604      	mov	r4, r0
90025782:	4617      	mov	r7, r2
90025784:	f8ad 3006 	strh.w	r3, [sp, #6]
90025788:	eba8 0303 	sub.w	r3, r8, r3
9002578c:	4a19      	ldr	r2, [pc, #100]	; (900257f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
9002578e:	460e      	mov	r6, r1
90025790:	b21b      	sxth	r3, r3
90025792:	88c1      	ldrh	r1, [r0, #6]
90025794:	9200      	str	r2, [sp, #0]
90025796:	2000      	movs	r0, #0
90025798:	2b00      	cmp	r3, #0
9002579a:	8aa2      	ldrh	r2, [r4, #20]
9002579c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
900257a0:	bfb8      	it	lt
900257a2:	425b      	neglt	r3, r3
900257a4:	f88d 0004 	strb.w	r0, [sp, #4]
900257a8:	f8ad 1008 	strh.w	r1, [sp, #8]
900257ac:	b21b      	sxth	r3, r3
900257ae:	f8ad 800a 	strh.w	r8, [sp, #10]
900257b2:	f8ad 500c 	strh.w	r5, [sp, #12]
900257b6:	4293      	cmp	r3, r2
900257b8:	dc07      	bgt.n	900257ca <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
900257ba:	1a69      	subs	r1, r5, r1
900257bc:	b209      	sxth	r1, r1
900257be:	2900      	cmp	r1, #0
900257c0:	bfb8      	it	lt
900257c2:	4249      	neglt	r1, r1
900257c4:	b209      	sxth	r1, r1
900257c6:	428a      	cmp	r2, r1
900257c8:	da10      	bge.n	900257ec <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900257ca:	6920      	ldr	r0, [r4, #16]
900257cc:	4669      	mov	r1, sp
900257ce:	eba8 0606 	sub.w	r6, r8, r6
900257d2:	1bef      	subs	r7, r5, r7
900257d4:	6803      	ldr	r3, [r0, #0]
900257d6:	685b      	ldr	r3, [r3, #4]
900257d8:	4798      	blx	r3
900257da:	2300      	movs	r3, #0
900257dc:	2001      	movs	r0, #1
900257de:	8166      	strh	r6, [r4, #10]
900257e0:	8123      	strh	r3, [r4, #8]
900257e2:	81a7      	strh	r7, [r4, #12]
900257e4:	f8a4 8004 	strh.w	r8, [r4, #4]
900257e8:	80e5      	strh	r5, [r4, #6]
900257ea:	73a0      	strb	r0, [r4, #14]
900257ec:	b004      	add	sp, #16
900257ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900257f2:	bf00      	nop
900257f4:	9002a638 	.word	0x9002a638

900257f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900257f8:	b5f0      	push	{r4, r5, r6, r7, lr}
900257fa:	461e      	mov	r6, r3
900257fc:	1e4b      	subs	r3, r1, #1
900257fe:	b085      	sub	sp, #20
90025800:	4604      	mov	r4, r0
90025802:	2b01      	cmp	r3, #1
90025804:	460d      	mov	r5, r1
90025806:	4617      	mov	r7, r2
90025808:	d84b      	bhi.n	900258a2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002580a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002580e:	1cd3      	adds	r3, r2, #3
90025810:	b29b      	uxth	r3, r3
90025812:	2b06      	cmp	r3, #6
90025814:	d916      	bls.n	90025844 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90025816:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 900258b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002581a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002581e:	f8cd c004 	str.w	ip, [sp, #4]
90025822:	f04f 0c00 	mov.w	ip, #0
90025826:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002582a:	6900      	ldr	r0, [r0, #16]
9002582c:	f8ad 100c 	strh.w	r1, [sp, #12]
90025830:	a901      	add	r1, sp, #4
90025832:	f88d c008 	strb.w	ip, [sp, #8]
90025836:	f8ad 200a 	strh.w	r2, [sp, #10]
9002583a:	f8ad 300e 	strh.w	r3, [sp, #14]
9002583e:	6803      	ldr	r3, [r0, #0]
90025840:	689b      	ldr	r3, [r3, #8]
90025842:	4798      	blx	r3
90025844:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025848:	1cd3      	adds	r3, r2, #3
9002584a:	b29b      	uxth	r3, r3
9002584c:	2b06      	cmp	r3, #6
9002584e:	d916      	bls.n	9002587e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025850:	f8df c064 	ldr.w	ip, [pc, #100]	; 900258b8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90025854:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90025858:	f8cd c004 	str.w	ip, [sp, #4]
9002585c:	f04f 0c01 	mov.w	ip, #1
90025860:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90025864:	6920      	ldr	r0, [r4, #16]
90025866:	f8ad 100c 	strh.w	r1, [sp, #12]
9002586a:	a901      	add	r1, sp, #4
9002586c:	f88d c008 	strb.w	ip, [sp, #8]
90025870:	f8ad 200a 	strh.w	r2, [sp, #10]
90025874:	f8ad 300e 	strh.w	r3, [sp, #14]
90025878:	6803      	ldr	r3, [r0, #0]
9002587a:	689b      	ldr	r3, [r3, #8]
9002587c:	4798      	blx	r3
9002587e:	4b0d      	ldr	r3, [pc, #52]	; (900258b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90025880:	a901      	add	r1, sp, #4
90025882:	6920      	ldr	r0, [r4, #16]
90025884:	9301      	str	r3, [sp, #4]
90025886:	2300      	movs	r3, #0
90025888:	f88d 5008 	strb.w	r5, [sp, #8]
9002588c:	f8ad 700a 	strh.w	r7, [sp, #10]
90025890:	f8ad 600c 	strh.w	r6, [sp, #12]
90025894:	f8ad 300e 	strh.w	r3, [sp, #14]
90025898:	6803      	ldr	r3, [r0, #0]
9002589a:	681b      	ldr	r3, [r3, #0]
9002589c:	4798      	blx	r3
9002589e:	b005      	add	sp, #20
900258a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
900258a2:	2900      	cmp	r1, #0
900258a4:	d1eb      	bne.n	9002587e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900258a6:	80a2      	strh	r2, [r4, #4]
900258a8:	80c6      	strh	r6, [r0, #6]
900258aa:	60a1      	str	r1, [r4, #8]
900258ac:	81a1      	strh	r1, [r4, #12]
900258ae:	73a1      	strb	r1, [r4, #14]
900258b0:	e7e5      	b.n	9002587e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900258b2:	bf00      	nop
900258b4:	9002a624 	.word	0x9002a624
900258b8:	9002a64c 	.word	0x9002a64c

900258bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
900258bc:	10c9      	asrs	r1, r1, #3
900258be:	2900      	cmp	r1, #0
900258c0:	bfb8      	it	lt
900258c2:	4249      	neglt	r1, r1
900258c4:	2801      	cmp	r0, #1
900258c6:	d108      	bne.n	900258da <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900258c8:	f3c1 0008 	ubfx	r0, r1, #0, #9
900258cc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
900258d0:	4601      	mov	r1, r0
900258d2:	dd02      	ble.n	900258da <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900258d4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
900258d8:	4770      	bx	lr
900258da:	29ff      	cmp	r1, #255	; 0xff
900258dc:	bfa8      	it	ge
900258de:	21ff      	movge	r1, #255	; 0xff
900258e0:	4608      	mov	r0, r1
900258e2:	4770      	bx	lr

900258e4 <_ZN8touchgfx10Rasterizer6lineToEii>:
900258e4:	b410      	push	{r4}
900258e6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900258ea:	429c      	cmp	r4, r3
900258ec:	d803      	bhi.n	900258f6 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900258ee:	f85d 4b04 	ldr.w	r4, [sp], #4
900258f2:	f7ed bb99 	b.w	90013028 <_ZN8touchgfx7Outline6lineToEii>
900258f6:	f85d 4b04 	ldr.w	r4, [sp], #4
900258fa:	4770      	bx	lr

900258fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900258fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025900:	b08b      	sub	sp, #44	; 0x2c
90025902:	4606      	mov	r6, r0
90025904:	468a      	mov	sl, r1
90025906:	e9cd 2306 	strd	r2, r3, [sp, #24]
9002590a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
9002590e:	9308      	str	r3, [sp, #32]
90025910:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90025914:	9309      	str	r3, [sp, #36]	; 0x24
90025916:	f7ed fcf2 	bl	900132fe <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
9002591a:	68b5      	ldr	r5, [r6, #8]
9002591c:	4604      	mov	r4, r0
9002591e:	2d00      	cmp	r5, #0
90025920:	d044      	beq.n	900259ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025922:	6873      	ldr	r3, [r6, #4]
90025924:	42ab      	cmp	r3, r5
90025926:	d33d      	bcc.n	900259a4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90025928:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
9002592c:	f04f 0800 	mov.w	r8, #0
90025930:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90025934:	eb02 0b03 	add.w	fp, r2, r3
90025938:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
9002593c:	fb02 1203 	mla	r2, r2, r3, r1
90025940:	9205      	str	r2, [sp, #20]
90025942:	1e6a      	subs	r2, r5, #1
90025944:	9204      	str	r2, [sp, #16]
90025946:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
9002594a:	f9b4 7000 	ldrsh.w	r7, [r4]
9002594e:	454b      	cmp	r3, r9
90025950:	463a      	mov	r2, r7
90025952:	d008      	beq.n	90025966 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90025954:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90025958:	eb03 0b09 	add.w	fp, r3, r9
9002595c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90025960:	fb03 1309 	mla	r3, r3, r9, r1
90025964:	9305      	str	r3, [sp, #20]
90025966:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9002596a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
9002596e:	4498      	add	r8, r3
90025970:	9b04      	ldr	r3, [sp, #16]
90025972:	3b01      	subs	r3, #1
90025974:	9304      	str	r3, [sp, #16]
90025976:	9b04      	ldr	r3, [sp, #16]
90025978:	3301      	adds	r3, #1
9002597a:	d015      	beq.n	900259a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
9002597c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90025980:	42bb      	cmp	r3, r7
90025982:	d117      	bne.n	900259b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90025984:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90025988:	9b04      	ldr	r3, [sp, #16]
9002598a:	4548      	cmp	r0, r9
9002598c:	f103 33ff 	add.w	r3, r3, #4294967295
90025990:	d17d      	bne.n	90025a8e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90025992:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90025996:	4401      	add	r1, r0
90025998:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9002599c:	4480      	add	r8, r0
9002599e:	e7e9      	b.n	90025974 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
900259a0:	461f      	mov	r7, r3
900259a2:	e042      	b.n	90025a2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
900259a4:	2000      	movs	r0, #0
900259a6:	e002      	b.n	900259ae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
900259a8:	2900      	cmp	r1, #0
900259aa:	d16d      	bne.n	90025a88 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
900259ac:	2001      	movs	r0, #1
900259ae:	b00b      	add	sp, #44	; 0x2c
900259b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900259b4:	b379      	cbz	r1, 90025a16 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
900259b6:	2f00      	cmp	r7, #0
900259b8:	db29      	blt.n	90025a0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900259ba:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
900259be:	42bb      	cmp	r3, r7
900259c0:	dd25      	ble.n	90025a0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900259c2:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
900259c6:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
900259ca:	f7ff ff77 	bl	900258bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900259ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
900259d0:	fb10 f003 	smulbb	r0, r0, r3
900259d4:	b280      	uxth	r0, r0
900259d6:	1c41      	adds	r1, r0, #1
900259d8:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900259dc:	1209      	asrs	r1, r1, #8
900259de:	f011 0fff 	tst.w	r1, #255	; 0xff
900259e2:	d014      	beq.n	90025a0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900259e4:	b2c9      	uxtb	r1, r1
900259e6:	9808      	ldr	r0, [sp, #32]
900259e8:	b2ba      	uxth	r2, r7
900259ea:	8e73      	ldrh	r3, [r6, #50]	; 0x32
900259ec:	9102      	str	r1, [sp, #8]
900259ee:	2101      	movs	r1, #1
900259f0:	4413      	add	r3, r2
900259f2:	4402      	add	r2, r0
900259f4:	9101      	str	r1, [sp, #4]
900259f6:	fa0f f18b 	sxth.w	r1, fp
900259fa:	f8da 0000 	ldr.w	r0, [sl]
900259fe:	b21b      	sxth	r3, r3
90025a00:	9100      	str	r1, [sp, #0]
90025a02:	b212      	sxth	r2, r2
90025a04:	6941      	ldr	r1, [r0, #20]
90025a06:	4650      	mov	r0, sl
90025a08:	460d      	mov	r5, r1
90025a0a:	9905      	ldr	r1, [sp, #20]
90025a0c:	47a8      	blx	r5
90025a0e:	9b04      	ldr	r3, [sp, #16]
90025a10:	1c7a      	adds	r2, r7, #1
90025a12:	3301      	adds	r3, #1
90025a14:	d0ca      	beq.n	900259ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025a16:	f9b4 7000 	ldrsh.w	r7, [r4]
90025a1a:	1abb      	subs	r3, r7, r2
90025a1c:	2b00      	cmp	r3, #0
90025a1e:	dd31      	ble.n	90025a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025a20:	2a00      	cmp	r2, #0
90025a22:	dabd      	bge.n	900259a0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90025a24:	2f00      	cmp	r7, #0
90025a26:	dd2d      	ble.n	90025a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025a28:	2200      	movs	r2, #0
90025a2a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90025a2e:	19d1      	adds	r1, r2, r7
90025a30:	4299      	cmp	r1, r3
90025a32:	db02      	blt.n	90025a3a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90025a34:	1a9f      	subs	r7, r3, r2
90025a36:	2f00      	cmp	r7, #0
90025a38:	dd24      	ble.n	90025a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025a3a:	ea4f 1188 	mov.w	r1, r8, lsl #6
90025a3e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90025a42:	f7ff ff3b 	bl	900258bc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025a46:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025a48:	fb10 f003 	smulbb	r0, r0, r3
90025a4c:	b280      	uxth	r0, r0
90025a4e:	1c41      	adds	r1, r0, #1
90025a50:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025a54:	1209      	asrs	r1, r1, #8
90025a56:	f011 0fff 	tst.w	r1, #255	; 0xff
90025a5a:	d013      	beq.n	90025a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025a5c:	b292      	uxth	r2, r2
90025a5e:	9808      	ldr	r0, [sp, #32]
90025a60:	b2c9      	uxtb	r1, r1
90025a62:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025a64:	b23f      	sxth	r7, r7
90025a66:	4413      	add	r3, r2
90025a68:	9102      	str	r1, [sp, #8]
90025a6a:	4402      	add	r2, r0
90025a6c:	fa0f f18b 	sxth.w	r1, fp
90025a70:	f8da 0000 	ldr.w	r0, [sl]
90025a74:	b21b      	sxth	r3, r3
90025a76:	9100      	str	r1, [sp, #0]
90025a78:	b212      	sxth	r2, r2
90025a7a:	9701      	str	r7, [sp, #4]
90025a7c:	9905      	ldr	r1, [sp, #20]
90025a7e:	6947      	ldr	r7, [r0, #20]
90025a80:	4650      	mov	r0, sl
90025a82:	47b8      	blx	r7
90025a84:	464b      	mov	r3, r9
90025a86:	e75e      	b.n	90025946 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90025a88:	2f00      	cmp	r7, #0
90025a8a:	da96      	bge.n	900259ba <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90025a8c:	e78e      	b.n	900259ac <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025a8e:	2900      	cmp	r1, #0
90025a90:	d0f8      	beq.n	90025a84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025a92:	e790      	b.n	900259b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90025a94 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90025a94:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025a98:	461e      	mov	r6, r3
90025a9a:	4b36      	ldr	r3, [pc, #216]	; (90025b74 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90025a9c:	2500      	movs	r5, #0
90025a9e:	f100 0814 	add.w	r8, r0, #20
90025aa2:	4604      	mov	r4, r0
90025aa4:	4617      	mov	r7, r2
90025aa6:	e9c0 3100 	strd	r3, r1, [r0]
90025aaa:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90025aae:	8185      	strh	r5, [r0, #12]
90025ab0:	8103      	strh	r3, [r0, #8]
90025ab2:	f89d 3020 	ldrb.w	r3, [sp, #32]
90025ab6:	81c5      	strh	r5, [r0, #14]
90025ab8:	7283      	strb	r3, [r0, #10]
90025aba:	8205      	strh	r5, [r0, #16]
90025abc:	8245      	strh	r5, [r0, #18]
90025abe:	4640      	mov	r0, r8
90025ac0:	f7ec fdf8 	bl	900126b4 <_ZN8touchgfx7OutlineC1Ev>
90025ac4:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
90025ac8:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
90025acc:	466b      	mov	r3, sp
90025ace:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
90025ad2:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
90025ad6:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
90025ada:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
90025ade:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
90025ae2:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
90025ae6:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
90025aea:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
90025aee:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
90025af2:	6830      	ldr	r0, [r6, #0]
90025af4:	6871      	ldr	r1, [r6, #4]
90025af6:	8872      	ldrh	r2, [r6, #2]
90025af8:	8835      	ldrh	r5, [r6, #0]
90025afa:	c303      	stmia	r3!, {r0, r1}
90025afc:	887b      	ldrh	r3, [r7, #2]
90025afe:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90025b02:	4413      	add	r3, r2
90025b04:	883a      	ldrh	r2, [r7, #0]
90025b06:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90025b0a:	442a      	add	r2, r5
90025b0c:	81e3      	strh	r3, [r4, #14]
90025b0e:	8220      	strh	r0, [r4, #16]
90025b10:	4668      	mov	r0, sp
90025b12:	81a2      	strh	r2, [r4, #12]
90025b14:	8261      	strh	r1, [r4, #18]
90025b16:	4639      	mov	r1, r7
90025b18:	f7ee ffd4 	bl	90014ac4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025b1c:	f104 000c 	add.w	r0, r4, #12
90025b20:	f7ee ff8c 	bl	90014a3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025b24:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025b28:	f8bd 2000 	ldrh.w	r2, [sp]
90025b2c:	4640      	mov	r0, r8
90025b2e:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
90025b32:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
90025b36:	f7ec fda1 	bl	9001267c <_ZN8touchgfx7Outline5resetEv>
90025b3a:	f9bd 3000 	ldrsh.w	r3, [sp]
90025b3e:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90025b42:	4620      	mov	r0, r4
90025b44:	015b      	lsls	r3, r3, #5
90025b46:	64e3      	str	r3, [r4, #76]	; 0x4c
90025b48:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025b4c:	015b      	lsls	r3, r3, #5
90025b4e:	6523      	str	r3, [r4, #80]	; 0x50
90025b50:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90025b54:	015b      	lsls	r3, r3, #5
90025b56:	6563      	str	r3, [r4, #84]	; 0x54
90025b58:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90025b5c:	015b      	lsls	r3, r3, #5
90025b5e:	65a3      	str	r3, [r4, #88]	; 0x58
90025b60:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90025b64:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
90025b68:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
90025b6c:	b002      	add	sp, #8
90025b6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025b72:	bf00      	nop
90025b74:	9002a970 	.word	0x9002a970

90025b78 <_ZN8touchgfx6Canvas5closeEv>:
90025b78:	b538      	push	{r3, r4, r5, lr}
90025b7a:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025b7e:	4604      	mov	r4, r0
90025b80:	b193      	cbz	r3, 90025ba8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025b82:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
90025b86:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
90025b8a:	4213      	tst	r3, r2
90025b8c:	d10c      	bne.n	90025ba8 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025b8e:	f100 0514 	add.w	r5, r0, #20
90025b92:	b123      	cbz	r3, 90025b9e <_ZN8touchgfx6Canvas5closeEv+0x26>
90025b94:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
90025b98:	4628      	mov	r0, r5
90025b9a:	f7ff fea3 	bl	900258e4 <_ZN8touchgfx10Rasterizer6lineToEii>
90025b9e:	4628      	mov	r0, r5
90025ba0:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
90025ba4:	f7ff fe9e 	bl	900258e4 <_ZN8touchgfx10Rasterizer6lineToEii>
90025ba8:	2300      	movs	r3, #0
90025baa:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025bae:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90025bb2:	4298      	cmp	r0, r3
90025bb4:	bf34      	ite	cc
90025bb6:	2000      	movcc	r0, #0
90025bb8:	2001      	movcs	r0, #1
90025bba:	bd38      	pop	{r3, r4, r5, pc}

90025bbc <_ZN8touchgfx6Canvas6renderEh>:
90025bbc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025bc0:	7a85      	ldrb	r5, [r0, #10]
90025bc2:	4604      	mov	r4, r0
90025bc4:	4369      	muls	r1, r5
90025bc6:	1c4d      	adds	r5, r1, #1
90025bc8:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025bcc:	122d      	asrs	r5, r5, #8
90025bce:	f000 8098 	beq.w	90025d02 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025bd2:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
90025bd6:	2b00      	cmp	r3, #0
90025bd8:	f000 8093 	beq.w	90025d02 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025bdc:	f7ff ffcc 	bl	90025b78 <_ZN8touchgfx6Canvas5closeEv>
90025be0:	4607      	mov	r7, r0
90025be2:	2800      	cmp	r0, #0
90025be4:	d045      	beq.n	90025c72 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025be6:	6860      	ldr	r0, [r4, #4]
90025be8:	4e47      	ldr	r6, [pc, #284]	; (90025d08 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90025bea:	6803      	ldr	r3, [r0, #0]
90025bec:	6837      	ldr	r7, [r6, #0]
90025bee:	689b      	ldr	r3, [r3, #8]
90025bf0:	4798      	blx	r3
90025bf2:	4601      	mov	r1, r0
90025bf4:	4638      	mov	r0, r7
90025bf6:	f7eb f8d7 	bl	90010da8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90025bfa:	4607      	mov	r7, r0
90025bfc:	f7ea fc98 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90025c00:	6803      	ldr	r3, [r0, #0]
90025c02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90025c04:	4798      	blx	r3
90025c06:	4680      	mov	r8, r0
90025c08:	f7ea fc92 	bl	90010530 <_ZN8touchgfx3HAL3lcdEv>
90025c0c:	6803      	ldr	r3, [r0, #0]
90025c0e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025c10:	4798      	blx	r3
90025c12:	280b      	cmp	r0, #11
90025c14:	d85a      	bhi.n	90025ccc <_ZN8touchgfx6Canvas6renderEh+0x110>
90025c16:	e8df f000 	tbb	[pc, r0]
90025c1a:	5b50      	.short	0x5b50
90025c1c:	3059066b 	.word	0x3059066b
90025c20:	64646440 	.word	0x64646440
90025c24:	6464      	.short	0x6464
90025c26:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025c2a:	2208      	movs	r2, #8
90025c2c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025c30:	fb91 f2f2 	sdiv	r2, r1, r2
90025c34:	fb08 2303 	mla	r3, r8, r3, r2
90025c38:	441f      	add	r7, r3
90025c3a:	424b      	negs	r3, r1
90025c3c:	f001 0107 	and.w	r1, r1, #7
90025c40:	f003 0307 	and.w	r3, r3, #7
90025c44:	bf58      	it	pl
90025c46:	4259      	negpl	r1, r3
90025c48:	b2c9      	uxtb	r1, r1
90025c4a:	b2ed      	uxtb	r5, r5
90025c4c:	463a      	mov	r2, r7
90025c4e:	fa0f f388 	sxth.w	r3, r8
90025c52:	f104 0014 	add.w	r0, r4, #20
90025c56:	e9cd 1500 	strd	r1, r5, [sp]
90025c5a:	6861      	ldr	r1, [r4, #4]
90025c5c:	f7ff fe4e 	bl	900258fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90025c60:	4607      	mov	r7, r0
90025c62:	6860      	ldr	r0, [r4, #4]
90025c64:	6803      	ldr	r3, [r0, #0]
90025c66:	691b      	ldr	r3, [r3, #16]
90025c68:	4798      	blx	r3
90025c6a:	6830      	ldr	r0, [r6, #0]
90025c6c:	6803      	ldr	r3, [r0, #0]
90025c6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025c70:	4798      	blx	r3
90025c72:	4638      	mov	r0, r7
90025c74:	b002      	add	sp, #8
90025c76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025c7a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025c7e:	2204      	movs	r2, #4
90025c80:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025c84:	fb91 f2f2 	sdiv	r2, r1, r2
90025c88:	fb08 2303 	mla	r3, r8, r3, r2
90025c8c:	441f      	add	r7, r3
90025c8e:	424b      	negs	r3, r1
90025c90:	f001 0103 	and.w	r1, r1, #3
90025c94:	f003 0303 	and.w	r3, r3, #3
90025c98:	e7d4      	b.n	90025c44 <_ZN8touchgfx6Canvas6renderEh+0x88>
90025c9a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025c9e:	2202      	movs	r2, #2
90025ca0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ca4:	2900      	cmp	r1, #0
90025ca6:	fb91 f2f2 	sdiv	r2, r1, r2
90025caa:	f001 0101 	and.w	r1, r1, #1
90025cae:	fb08 2303 	mla	r3, r8, r3, r2
90025cb2:	bfb8      	it	lt
90025cb4:	4249      	neglt	r1, r1
90025cb6:	441f      	add	r7, r3
90025cb8:	e7c6      	b.n	90025c48 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90025cba:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025cbe:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025cc2:	fb08 f303 	mul.w	r3, r8, r3
90025cc6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90025cca:	441f      	add	r7, r3
90025ccc:	2100      	movs	r1, #0
90025cce:	e7bc      	b.n	90025c4a <_ZN8touchgfx6Canvas6renderEh+0x8e>
90025cd0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025cd4:	2103      	movs	r1, #3
90025cd6:	fb08 f203 	mul.w	r2, r8, r3
90025cda:	89a3      	ldrh	r3, [r4, #12]
90025cdc:	fb13 2301 	smlabb	r3, r3, r1, r2
90025ce0:	e7f3      	b.n	90025cca <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025ce2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025ce6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025cea:	fb08 2303 	mla	r3, r8, r3, r2
90025cee:	e7ec      	b.n	90025cca <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025cf0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025cf4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025cf8:	fb08 f303 	mul.w	r3, r8, r3
90025cfc:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90025d00:	e7e3      	b.n	90025cca <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025d02:	2701      	movs	r7, #1
90025d04:	e7b5      	b.n	90025c72 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025d06:	bf00      	nop
90025d08:	2402356c 	.word	0x2402356c

90025d0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90025d0c:	4b06      	ldr	r3, [pc, #24]	; (90025d28 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90025d0e:	b510      	push	{r4, lr}
90025d10:	781b      	ldrb	r3, [r3, #0]
90025d12:	2b01      	cmp	r3, #1
90025d14:	d107      	bne.n	90025d26 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90025d16:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90025d1a:	680b      	ldr	r3, [r1, #0]
90025d1c:	6814      	ldr	r4, [r2, #0]
90025d1e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90025d22:	6013      	str	r3, [r2, #0]
90025d24:	600c      	str	r4, [r1, #0]
90025d26:	bd10      	pop	{r4, pc}
90025d28:	24023564 	.word	0x24023564

90025d2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90025d2c:	b513      	push	{r0, r1, r4, lr}
90025d2e:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025d32:	4604      	mov	r4, r0
90025d34:	e9cd 2100 	strd	r2, r1, [sp]
90025d38:	b9a3      	cbnz	r3, 90025d64 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90025d3a:	466a      	mov	r2, sp
90025d3c:	a901      	add	r1, sp, #4
90025d3e:	4620      	mov	r0, r4
90025d40:	f7ff ffe4 	bl	90025d0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025d44:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025d46:	9901      	ldr	r1, [sp, #4]
90025d48:	9a00      	ldr	r2, [sp, #0]
90025d4a:	1ac9      	subs	r1, r1, r3
90025d4c:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025d4e:	1ad2      	subs	r2, r2, r3
90025d50:	9101      	str	r1, [sp, #4]
90025d52:	2a00      	cmp	r2, #0
90025d54:	9200      	str	r2, [sp, #0]
90025d56:	da0b      	bge.n	90025d70 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90025d58:	2301      	movs	r3, #1
90025d5a:	2900      	cmp	r1, #0
90025d5c:	da0e      	bge.n	90025d7c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90025d5e:	f043 0304 	orr.w	r3, r3, #4
90025d62:	e013      	b.n	90025d8c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90025d64:	f7ff ff08 	bl	90025b78 <_ZN8touchgfx6Canvas5closeEv>
90025d68:	2800      	cmp	r0, #0
90025d6a:	d1e6      	bne.n	90025d3a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90025d6c:	b002      	add	sp, #8
90025d6e:	bd10      	pop	{r4, pc}
90025d70:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025d72:	429a      	cmp	r2, r3
90025d74:	bfac      	ite	ge
90025d76:	2302      	movge	r3, #2
90025d78:	2300      	movlt	r3, #0
90025d7a:	e7ee      	b.n	90025d5a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90025d7c:	6d60      	ldr	r0, [r4, #84]	; 0x54
90025d7e:	4281      	cmp	r1, r0
90025d80:	bfac      	ite	ge
90025d82:	2008      	movge	r0, #8
90025d84:	2000      	movlt	r0, #0
90025d86:	4318      	orrs	r0, r3
90025d88:	b2c3      	uxtb	r3, r0
90025d8a:	b158      	cbz	r0, 90025da4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90025d8c:	2200      	movs	r2, #0
90025d8e:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
90025d92:	9901      	ldr	r1, [sp, #4]
90025d94:	9a00      	ldr	r2, [sp, #0]
90025d96:	66e1      	str	r1, [r4, #108]	; 0x6c
90025d98:	6722      	str	r2, [r4, #112]	; 0x70
90025d9a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
90025d9e:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
90025da2:	e7e3      	b.n	90025d6c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90025da4:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025da8:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025dac:	4298      	cmp	r0, r3
90025dae:	d803      	bhi.n	90025db8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90025db0:	f104 0014 	add.w	r0, r4, #20
90025db4:	f7ed f952 	bl	9001305c <_ZN8touchgfx7Outline6moveToEii>
90025db8:	2301      	movs	r3, #1
90025dba:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025dbe:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025dc2:	2300      	movs	r3, #0
90025dc4:	e7e5      	b.n	90025d92 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90025dc6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90025dc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
90025dc8:	ab02      	add	r3, sp, #8
90025dca:	4604      	mov	r4, r0
90025dcc:	9101      	str	r1, [sp, #4]
90025dce:	a901      	add	r1, sp, #4
90025dd0:	f843 2d08 	str.w	r2, [r3, #-8]!
90025dd4:	461a      	mov	r2, r3
90025dd6:	f7ff ff99 	bl	90025d0c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025dda:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025ddc:	9901      	ldr	r1, [sp, #4]
90025dde:	9a00      	ldr	r2, [sp, #0]
90025de0:	1ac9      	subs	r1, r1, r3
90025de2:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025de4:	1ad2      	subs	r2, r2, r3
90025de6:	9101      	str	r1, [sp, #4]
90025de8:	2a00      	cmp	r2, #0
90025dea:	9200      	str	r2, [sp, #0]
90025dec:	db1c      	blt.n	90025e28 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90025dee:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025df0:	429a      	cmp	r2, r3
90025df2:	bfac      	ite	ge
90025df4:	2002      	movge	r0, #2
90025df6:	2000      	movlt	r0, #0
90025df8:	2900      	cmp	r1, #0
90025dfa:	db17      	blt.n	90025e2c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90025dfc:	6d63      	ldr	r3, [r4, #84]	; 0x54
90025dfe:	4299      	cmp	r1, r3
90025e00:	bfac      	ite	ge
90025e02:	2308      	movge	r3, #8
90025e04:	2300      	movlt	r3, #0
90025e06:	4303      	orrs	r3, r0
90025e08:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
90025e0c:	b2dd      	uxtb	r5, r3
90025e0e:	b978      	cbnz	r0, 90025e30 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90025e10:	f104 0014 	add.w	r0, r4, #20
90025e14:	f7ff fd66 	bl	900258e4 <_ZN8touchgfx10Rasterizer6lineToEii>
90025e18:	9b01      	ldr	r3, [sp, #4]
90025e1a:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
90025e1e:	6623      	str	r3, [r4, #96]	; 0x60
90025e20:	9b00      	ldr	r3, [sp, #0]
90025e22:	6663      	str	r3, [r4, #100]	; 0x64
90025e24:	b002      	add	sp, #8
90025e26:	bd70      	pop	{r4, r5, r6, pc}
90025e28:	2001      	movs	r0, #1
90025e2a:	e7e5      	b.n	90025df8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90025e2c:	2304      	movs	r3, #4
90025e2e:	e7ea      	b.n	90025e06 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90025e30:	b113      	cbz	r3, 90025e38 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90025e32:	ea10 0305 	ands.w	r3, r0, r5
90025e36:	d11c      	bne.n	90025e72 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90025e38:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
90025e3c:	f104 0614 	add.w	r6, r4, #20
90025e40:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
90025e44:	b98b      	cbnz	r3, 90025e6a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90025e46:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025e4a:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025e4e:	4298      	cmp	r0, r3
90025e50:	d802      	bhi.n	90025e58 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90025e52:	4630      	mov	r0, r6
90025e54:	f7ed f902 	bl	9001305c <_ZN8touchgfx7Outline6moveToEii>
90025e58:	2301      	movs	r3, #1
90025e5a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025e5e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025e62:	4630      	mov	r0, r6
90025e64:	e9dd 2100 	ldrd	r2, r1, [sp]
90025e68:	e7d4      	b.n	90025e14 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90025e6a:	4630      	mov	r0, r6
90025e6c:	f7ff fd3a 	bl	900258e4 <_ZN8touchgfx10Rasterizer6lineToEii>
90025e70:	e7f7      	b.n	90025e62 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90025e72:	461d      	mov	r5, r3
90025e74:	e7d0      	b.n	90025e18 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90025e78 <_ZN8touchgfx6CanvasD1Ev>:
90025e78:	4b04      	ldr	r3, [pc, #16]	; (90025e8c <_ZN8touchgfx6CanvasD1Ev+0x14>)
90025e7a:	b510      	push	{r4, lr}
90025e7c:	4604      	mov	r4, r0
90025e7e:	f840 3b14 	str.w	r3, [r0], #20
90025e82:	f7ec fbf3 	bl	9001266c <_ZN8touchgfx7OutlineD1Ev>
90025e86:	4620      	mov	r0, r4
90025e88:	bd10      	pop	{r4, pc}
90025e8a:	bf00      	nop
90025e8c:	9002a970 	.word	0x9002a970

90025e90 <_ZN8touchgfx6CanvasD0Ev>:
90025e90:	b510      	push	{r4, lr}
90025e92:	4604      	mov	r4, r0
90025e94:	f7ff fff0 	bl	90025e78 <_ZN8touchgfx6CanvasD1Ev>
90025e98:	2174      	movs	r1, #116	; 0x74
90025e9a:	4620      	mov	r0, r4
90025e9c:	f000 f8d1 	bl	90026042 <_ZdlPvj>
90025ea0:	4620      	mov	r0, r4
90025ea2:	bd10      	pop	{r4, pc}

90025ea4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90025ea4:	790b      	ldrb	r3, [r1, #4]
90025ea6:	2b00      	cmp	r3, #0
90025ea8:	bf0c      	ite	eq
90025eaa:	2301      	moveq	r3, #1
90025eac:	2300      	movne	r3, #0
90025eae:	b570      	push	{r4, r5, r6, lr}
90025eb0:	4604      	mov	r4, r0
90025eb2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90025eb6:	460e      	mov	r6, r1
90025eb8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
90025ebc:	d109      	bne.n	90025ed2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90025ebe:	b14d      	cbz	r5, 90025ed4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90025ec0:	7933      	ldrb	r3, [r6, #4]
90025ec2:	2b01      	cmp	r3, #1
90025ec4:	d10c      	bne.n	90025ee0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90025ec6:	6823      	ldr	r3, [r4, #0]
90025ec8:	4620      	mov	r0, r4
90025eca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90025ecc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90025ed0:	4718      	bx	r3
90025ed2:	b12d      	cbz	r5, 90025ee0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90025ed4:	6823      	ldr	r3, [r4, #0]
90025ed6:	4620      	mov	r0, r4
90025ed8:	695b      	ldr	r3, [r3, #20]
90025eda:	4798      	blx	r3
90025edc:	2d00      	cmp	r5, #0
90025ede:	d1ef      	bne.n	90025ec0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90025ee0:	bd70      	pop	{r4, r5, r6, pc}

90025ee2 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90025ee2:	b570      	push	{r4, r5, r6, lr}
90025ee4:	880b      	ldrh	r3, [r1, #0]
90025ee6:	4605      	mov	r5, r0
90025ee8:	4604      	mov	r4, r0
90025eea:	85c3      	strh	r3, [r0, #46]	; 0x2e
90025eec:	8813      	ldrh	r3, [r2, #0]
90025eee:	f825 3f30 	strh.w	r3, [r5, #48]!
90025ef2:	4628      	mov	r0, r5
90025ef4:	f7f2 f898 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90025ef8:	4606      	mov	r6, r0
90025efa:	4628      	mov	r0, r5
90025efc:	f7f2 f8c8 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
90025f00:	6823      	ldr	r3, [r4, #0]
90025f02:	4605      	mov	r5, r0
90025f04:	4631      	mov	r1, r6
90025f06:	4620      	mov	r0, r4
90025f08:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90025f0a:	4798      	blx	r3
90025f0c:	6823      	ldr	r3, [r4, #0]
90025f0e:	4629      	mov	r1, r5
90025f10:	4620      	mov	r0, r4
90025f12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90025f14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90025f18:	4718      	bx	r3

90025f1a <_ZNK8touchgfx6Button12getSolidRectEv>:
90025f1a:	b510      	push	{r4, lr}
90025f1c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90025f20:	4604      	mov	r4, r0
90025f22:	2bff      	cmp	r3, #255	; 0xff
90025f24:	d006      	beq.n	90025f34 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90025f26:	2300      	movs	r3, #0
90025f28:	8003      	strh	r3, [r0, #0]
90025f2a:	8043      	strh	r3, [r0, #2]
90025f2c:	8083      	strh	r3, [r0, #4]
90025f2e:	80c3      	strh	r3, [r0, #6]
90025f30:	4620      	mov	r0, r4
90025f32:	bd10      	pop	{r4, pc}
90025f34:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
90025f38:	b11b      	cbz	r3, 90025f42 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
90025f3a:	3130      	adds	r1, #48	; 0x30
90025f3c:	f7f2 f8dc 	bl	900180f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90025f40:	e7f6      	b.n	90025f30 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90025f42:	312e      	adds	r1, #46	; 0x2e
90025f44:	e7fa      	b.n	90025f3c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90025f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90025f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90025f4c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
90025f50:	b08a      	sub	sp, #40	; 0x28
90025f52:	4604      	mov	r4, r0
90025f54:	4688      	mov	r8, r1
90025f56:	2b00      	cmp	r3, #0
90025f58:	d066      	beq.n	90026028 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
90025f5a:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90025f5c:	a805      	add	r0, sp, #20
90025f5e:	f8ad 3014 	strh.w	r3, [sp, #20]
90025f62:	f7f2 f861 	bl	90018028 <_ZNK8touchgfx6Bitmap8getWidthEv>
90025f66:	4607      	mov	r7, r0
90025f68:	a805      	add	r0, sp, #20
90025f6a:	f7f2 f891 	bl	90018090 <_ZNK8touchgfx6Bitmap9getHeightEv>
90025f6e:	f9b8 6000 	ldrsh.w	r6, [r8]
90025f72:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90025f76:	2300      	movs	r3, #0
90025f78:	4432      	add	r2, r6
90025f7a:	9306      	str	r3, [sp, #24]
90025f7c:	b292      	uxth	r2, r2
90025f7e:	fa0f fc82 	sxth.w	ip, r2
90025f82:	459c      	cmp	ip, r3
90025f84:	dd52      	ble.n	9002602c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025f86:	42b7      	cmp	r7, r6
90025f88:	dd50      	ble.n	9002602c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025f8a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
90025f8e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90025f92:	442b      	add	r3, r5
90025f94:	b29b      	uxth	r3, r3
90025f96:	b219      	sxth	r1, r3
90025f98:	2900      	cmp	r1, #0
90025f9a:	dd47      	ble.n	9002602c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025f9c:	42a8      	cmp	r0, r5
90025f9e:	dd45      	ble.n	9002602c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90025fa0:	4567      	cmp	r7, ip
90025fa2:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90025fa6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90025faa:	bfb8      	it	lt
90025fac:	b2ba      	uxthlt	r2, r7
90025fae:	4288      	cmp	r0, r1
90025fb0:	f8ad 6018 	strh.w	r6, [sp, #24]
90025fb4:	bfb8      	it	lt
90025fb6:	b283      	uxthlt	r3, r0
90025fb8:	1b92      	subs	r2, r2, r6
90025fba:	f8ad 501a 	strh.w	r5, [sp, #26]
90025fbe:	1b5b      	subs	r3, r3, r5
90025fc0:	f8ad 201c 	strh.w	r2, [sp, #28]
90025fc4:	f8ad 301e 	strh.w	r3, [sp, #30]
90025fc8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90025fcc:	f64f 73ff 	movw	r3, #65535	; 0xffff
90025fd0:	429a      	cmp	r2, r3
90025fd2:	d026      	beq.n	90026022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025fd4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90025fd8:	2b00      	cmp	r3, #0
90025fda:	dd22      	ble.n	90026022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025fdc:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90025fe0:	2b00      	cmp	r3, #0
90025fe2:	dd1e      	ble.n	90026022 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90025fe4:	2300      	movs	r3, #0
90025fe6:	a908      	add	r1, sp, #32
90025fe8:	4620      	mov	r0, r4
90025fea:	e9cd 3308 	strd	r3, r3, [sp, #32]
90025fee:	6823      	ldr	r3, [r4, #0]
90025ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025ff2:	4798      	blx	r3
90025ff4:	4b0f      	ldr	r3, [pc, #60]	; (90026034 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90025ff6:	681b      	ldr	r3, [r3, #0]
90025ff8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90025ffc:	b10a      	cbz	r2, 90026002 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
90025ffe:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90026000:	b900      	cbnz	r0, 90026004 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90026002:	6898      	ldr	r0, [r3, #8]
90026004:	2501      	movs	r5, #1
90026006:	6801      	ldr	r1, [r0, #0]
90026008:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9002600c:	9502      	str	r5, [sp, #8]
9002600e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90026012:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90026016:	9401      	str	r4, [sp, #4]
90026018:	ac06      	add	r4, sp, #24
9002601a:	9400      	str	r4, [sp, #0]
9002601c:	688c      	ldr	r4, [r1, #8]
9002601e:	a905      	add	r1, sp, #20
90026020:	47a0      	blx	r4
90026022:	b00a      	add	sp, #40	; 0x28
90026024:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026028:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9002602a:	e797      	b.n	90025f5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9002602c:	2300      	movs	r3, #0
9002602e:	9307      	str	r3, [sp, #28]
90026030:	e7ca      	b.n	90025fc8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90026032:	bf00      	nop
90026034:	2402356c 	.word	0x2402356c

90026038 <__aeabi_atexit>:
90026038:	460b      	mov	r3, r1
9002603a:	4601      	mov	r1, r0
9002603c:	4618      	mov	r0, r3
9002603e:	f000 b94d 	b.w	900262dc <__cxa_atexit>

90026042 <_ZdlPvj>:
90026042:	f000 b812 	b.w	9002606a <_ZdlPv>

90026046 <__cxa_guard_acquire>:
90026046:	6803      	ldr	r3, [r0, #0]
90026048:	07db      	lsls	r3, r3, #31
9002604a:	d406      	bmi.n	9002605a <__cxa_guard_acquire+0x14>
9002604c:	7843      	ldrb	r3, [r0, #1]
9002604e:	b103      	cbz	r3, 90026052 <__cxa_guard_acquire+0xc>
90026050:	deff      	udf	#255	; 0xff
90026052:	2301      	movs	r3, #1
90026054:	7043      	strb	r3, [r0, #1]
90026056:	4618      	mov	r0, r3
90026058:	4770      	bx	lr
9002605a:	2000      	movs	r0, #0
9002605c:	4770      	bx	lr

9002605e <__cxa_guard_release>:
9002605e:	2301      	movs	r3, #1
90026060:	6003      	str	r3, [r0, #0]
90026062:	4770      	bx	lr

90026064 <__cxa_pure_virtual>:
90026064:	b508      	push	{r3, lr}
90026066:	f000 f80f 	bl	90026088 <_ZSt9terminatev>

9002606a <_ZdlPv>:
9002606a:	f000 b845 	b.w	900260f8 <free>

9002606e <_ZN10__cxxabiv111__terminateEPFvvE>:
9002606e:	b508      	push	{r3, lr}
90026070:	4780      	blx	r0
90026072:	f000 f80e 	bl	90026092 <abort>
	...

90026078 <_ZSt13get_terminatev>:
90026078:	4b02      	ldr	r3, [pc, #8]	; (90026084 <_ZSt13get_terminatev+0xc>)
9002607a:	6818      	ldr	r0, [r3, #0]
9002607c:	f3bf 8f5b 	dmb	ish
90026080:	4770      	bx	lr
90026082:	bf00      	nop
90026084:	240000f0 	.word	0x240000f0

90026088 <_ZSt9terminatev>:
90026088:	b508      	push	{r3, lr}
9002608a:	f7ff fff5 	bl	90026078 <_ZSt13get_terminatev>
9002608e:	f7ff ffee 	bl	9002606e <_ZN10__cxxabiv111__terminateEPFvvE>

90026092 <abort>:
90026092:	b508      	push	{r3, lr}
90026094:	2006      	movs	r0, #6
90026096:	f000 fb1d 	bl	900266d4 <raise>
9002609a:	2001      	movs	r0, #1
9002609c:	f7dd fb34 	bl	90003708 <_exit>

900260a0 <__assert_func>:
900260a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
900260a2:	4614      	mov	r4, r2
900260a4:	461a      	mov	r2, r3
900260a6:	4b09      	ldr	r3, [pc, #36]	; (900260cc <__assert_func+0x2c>)
900260a8:	681b      	ldr	r3, [r3, #0]
900260aa:	4605      	mov	r5, r0
900260ac:	68d8      	ldr	r0, [r3, #12]
900260ae:	b14c      	cbz	r4, 900260c4 <__assert_func+0x24>
900260b0:	4b07      	ldr	r3, [pc, #28]	; (900260d0 <__assert_func+0x30>)
900260b2:	9100      	str	r1, [sp, #0]
900260b4:	e9cd 3401 	strd	r3, r4, [sp, #4]
900260b8:	4906      	ldr	r1, [pc, #24]	; (900260d4 <__assert_func+0x34>)
900260ba:	462b      	mov	r3, r5
900260bc:	f000 f9c0 	bl	90026440 <fiprintf>
900260c0:	f7ff ffe7 	bl	90026092 <abort>
900260c4:	4b04      	ldr	r3, [pc, #16]	; (900260d8 <__assert_func+0x38>)
900260c6:	461c      	mov	r4, r3
900260c8:	e7f3      	b.n	900260b2 <__assert_func+0x12>
900260ca:	bf00      	nop
900260cc:	2400014c 	.word	0x2400014c
900260d0:	9002a97c 	.word	0x9002a97c
900260d4:	9002a989 	.word	0x9002a989
900260d8:	9002a9b7 	.word	0x9002a9b7

900260dc <atexit>:
900260dc:	2300      	movs	r3, #0
900260de:	4601      	mov	r1, r0
900260e0:	461a      	mov	r2, r3
900260e2:	4618      	mov	r0, r3
900260e4:	f000 bba4 	b.w	90026830 <__register_exitproc>

900260e8 <malloc>:
900260e8:	4b02      	ldr	r3, [pc, #8]	; (900260f4 <malloc+0xc>)
900260ea:	4601      	mov	r1, r0
900260ec:	6818      	ldr	r0, [r3, #0]
900260ee:	f000 b82b 	b.w	90026148 <_malloc_r>
900260f2:	bf00      	nop
900260f4:	2400014c 	.word	0x2400014c

900260f8 <free>:
900260f8:	4b02      	ldr	r3, [pc, #8]	; (90026104 <free+0xc>)
900260fa:	4601      	mov	r1, r0
900260fc:	6818      	ldr	r0, [r3, #0]
900260fe:	f000 bbf5 	b.w	900268ec <_free_r>
90026102:	bf00      	nop
90026104:	2400014c 	.word	0x2400014c

90026108 <sbrk_aligned>:
90026108:	b570      	push	{r4, r5, r6, lr}
9002610a:	4e0e      	ldr	r6, [pc, #56]	; (90026144 <sbrk_aligned+0x3c>)
9002610c:	460c      	mov	r4, r1
9002610e:	6831      	ldr	r1, [r6, #0]
90026110:	4605      	mov	r5, r0
90026112:	b911      	cbnz	r1, 9002611a <sbrk_aligned+0x12>
90026114:	f000 fb2e 	bl	90026774 <_sbrk_r>
90026118:	6030      	str	r0, [r6, #0]
9002611a:	4621      	mov	r1, r4
9002611c:	4628      	mov	r0, r5
9002611e:	f000 fb29 	bl	90026774 <_sbrk_r>
90026122:	1c43      	adds	r3, r0, #1
90026124:	d00a      	beq.n	9002613c <sbrk_aligned+0x34>
90026126:	1cc4      	adds	r4, r0, #3
90026128:	f024 0403 	bic.w	r4, r4, #3
9002612c:	42a0      	cmp	r0, r4
9002612e:	d007      	beq.n	90026140 <sbrk_aligned+0x38>
90026130:	1a21      	subs	r1, r4, r0
90026132:	4628      	mov	r0, r5
90026134:	f000 fb1e 	bl	90026774 <_sbrk_r>
90026138:	3001      	adds	r0, #1
9002613a:	d101      	bne.n	90026140 <sbrk_aligned+0x38>
9002613c:	f04f 34ff 	mov.w	r4, #4294967295
90026140:	4620      	mov	r0, r4
90026142:	bd70      	pop	{r4, r5, r6, pc}
90026144:	24023ec4 	.word	0x24023ec4

90026148 <_malloc_r>:
90026148:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9002614c:	1ccd      	adds	r5, r1, #3
9002614e:	f025 0503 	bic.w	r5, r5, #3
90026152:	3508      	adds	r5, #8
90026154:	2d0c      	cmp	r5, #12
90026156:	bf38      	it	cc
90026158:	250c      	movcc	r5, #12
9002615a:	2d00      	cmp	r5, #0
9002615c:	4607      	mov	r7, r0
9002615e:	db01      	blt.n	90026164 <_malloc_r+0x1c>
90026160:	42a9      	cmp	r1, r5
90026162:	d905      	bls.n	90026170 <_malloc_r+0x28>
90026164:	230c      	movs	r3, #12
90026166:	603b      	str	r3, [r7, #0]
90026168:	2600      	movs	r6, #0
9002616a:	4630      	mov	r0, r6
9002616c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026170:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 90026244 <_malloc_r+0xfc>
90026174:	f000 f868 	bl	90026248 <__malloc_lock>
90026178:	f8d8 3000 	ldr.w	r3, [r8]
9002617c:	461c      	mov	r4, r3
9002617e:	bb5c      	cbnz	r4, 900261d8 <_malloc_r+0x90>
90026180:	4629      	mov	r1, r5
90026182:	4638      	mov	r0, r7
90026184:	f7ff ffc0 	bl	90026108 <sbrk_aligned>
90026188:	1c43      	adds	r3, r0, #1
9002618a:	4604      	mov	r4, r0
9002618c:	d155      	bne.n	9002623a <_malloc_r+0xf2>
9002618e:	f8d8 4000 	ldr.w	r4, [r8]
90026192:	4626      	mov	r6, r4
90026194:	2e00      	cmp	r6, #0
90026196:	d145      	bne.n	90026224 <_malloc_r+0xdc>
90026198:	2c00      	cmp	r4, #0
9002619a:	d048      	beq.n	9002622e <_malloc_r+0xe6>
9002619c:	6823      	ldr	r3, [r4, #0]
9002619e:	4631      	mov	r1, r6
900261a0:	4638      	mov	r0, r7
900261a2:	eb04 0903 	add.w	r9, r4, r3
900261a6:	f000 fae5 	bl	90026774 <_sbrk_r>
900261aa:	4581      	cmp	r9, r0
900261ac:	d13f      	bne.n	9002622e <_malloc_r+0xe6>
900261ae:	6821      	ldr	r1, [r4, #0]
900261b0:	1a6d      	subs	r5, r5, r1
900261b2:	4629      	mov	r1, r5
900261b4:	4638      	mov	r0, r7
900261b6:	f7ff ffa7 	bl	90026108 <sbrk_aligned>
900261ba:	3001      	adds	r0, #1
900261bc:	d037      	beq.n	9002622e <_malloc_r+0xe6>
900261be:	6823      	ldr	r3, [r4, #0]
900261c0:	442b      	add	r3, r5
900261c2:	6023      	str	r3, [r4, #0]
900261c4:	f8d8 3000 	ldr.w	r3, [r8]
900261c8:	2b00      	cmp	r3, #0
900261ca:	d038      	beq.n	9002623e <_malloc_r+0xf6>
900261cc:	685a      	ldr	r2, [r3, #4]
900261ce:	42a2      	cmp	r2, r4
900261d0:	d12b      	bne.n	9002622a <_malloc_r+0xe2>
900261d2:	2200      	movs	r2, #0
900261d4:	605a      	str	r2, [r3, #4]
900261d6:	e00f      	b.n	900261f8 <_malloc_r+0xb0>
900261d8:	6822      	ldr	r2, [r4, #0]
900261da:	1b52      	subs	r2, r2, r5
900261dc:	d41f      	bmi.n	9002621e <_malloc_r+0xd6>
900261de:	2a0b      	cmp	r2, #11
900261e0:	d917      	bls.n	90026212 <_malloc_r+0xca>
900261e2:	1961      	adds	r1, r4, r5
900261e4:	42a3      	cmp	r3, r4
900261e6:	6025      	str	r5, [r4, #0]
900261e8:	bf18      	it	ne
900261ea:	6059      	strne	r1, [r3, #4]
900261ec:	6863      	ldr	r3, [r4, #4]
900261ee:	bf08      	it	eq
900261f0:	f8c8 1000 	streq.w	r1, [r8]
900261f4:	5162      	str	r2, [r4, r5]
900261f6:	604b      	str	r3, [r1, #4]
900261f8:	4638      	mov	r0, r7
900261fa:	f104 060b 	add.w	r6, r4, #11
900261fe:	f000 f829 	bl	90026254 <__malloc_unlock>
90026202:	f026 0607 	bic.w	r6, r6, #7
90026206:	1d23      	adds	r3, r4, #4
90026208:	1af2      	subs	r2, r6, r3
9002620a:	d0ae      	beq.n	9002616a <_malloc_r+0x22>
9002620c:	1b9b      	subs	r3, r3, r6
9002620e:	50a3      	str	r3, [r4, r2]
90026210:	e7ab      	b.n	9002616a <_malloc_r+0x22>
90026212:	42a3      	cmp	r3, r4
90026214:	6862      	ldr	r2, [r4, #4]
90026216:	d1dd      	bne.n	900261d4 <_malloc_r+0x8c>
90026218:	f8c8 2000 	str.w	r2, [r8]
9002621c:	e7ec      	b.n	900261f8 <_malloc_r+0xb0>
9002621e:	4623      	mov	r3, r4
90026220:	6864      	ldr	r4, [r4, #4]
90026222:	e7ac      	b.n	9002617e <_malloc_r+0x36>
90026224:	4634      	mov	r4, r6
90026226:	6876      	ldr	r6, [r6, #4]
90026228:	e7b4      	b.n	90026194 <_malloc_r+0x4c>
9002622a:	4613      	mov	r3, r2
9002622c:	e7cc      	b.n	900261c8 <_malloc_r+0x80>
9002622e:	230c      	movs	r3, #12
90026230:	603b      	str	r3, [r7, #0]
90026232:	4638      	mov	r0, r7
90026234:	f000 f80e 	bl	90026254 <__malloc_unlock>
90026238:	e797      	b.n	9002616a <_malloc_r+0x22>
9002623a:	6025      	str	r5, [r4, #0]
9002623c:	e7dc      	b.n	900261f8 <_malloc_r+0xb0>
9002623e:	605b      	str	r3, [r3, #4]
90026240:	deff      	udf	#255	; 0xff
90026242:	bf00      	nop
90026244:	24023ec0 	.word	0x24023ec0

90026248 <__malloc_lock>:
90026248:	4801      	ldr	r0, [pc, #4]	; (90026250 <__malloc_lock+0x8>)
9002624a:	f000 bae0 	b.w	9002680e <__retarget_lock_acquire_recursive>
9002624e:	bf00      	nop
90026250:	24024009 	.word	0x24024009

90026254 <__malloc_unlock>:
90026254:	4801      	ldr	r0, [pc, #4]	; (9002625c <__malloc_unlock+0x8>)
90026256:	f000 badb 	b.w	90026810 <__retarget_lock_release_recursive>
9002625a:	bf00      	nop
9002625c:	24024009 	.word	0x24024009

90026260 <rand>:
90026260:	4b16      	ldr	r3, [pc, #88]	; (900262bc <rand+0x5c>)
90026262:	b510      	push	{r4, lr}
90026264:	681c      	ldr	r4, [r3, #0]
90026266:	6b23      	ldr	r3, [r4, #48]	; 0x30
90026268:	b9b3      	cbnz	r3, 90026298 <rand+0x38>
9002626a:	2018      	movs	r0, #24
9002626c:	f7ff ff3c 	bl	900260e8 <malloc>
90026270:	4602      	mov	r2, r0
90026272:	6320      	str	r0, [r4, #48]	; 0x30
90026274:	b920      	cbnz	r0, 90026280 <rand+0x20>
90026276:	4b12      	ldr	r3, [pc, #72]	; (900262c0 <rand+0x60>)
90026278:	4812      	ldr	r0, [pc, #72]	; (900262c4 <rand+0x64>)
9002627a:	2152      	movs	r1, #82	; 0x52
9002627c:	f7ff ff10 	bl	900260a0 <__assert_func>
90026280:	4911      	ldr	r1, [pc, #68]	; (900262c8 <rand+0x68>)
90026282:	4b12      	ldr	r3, [pc, #72]	; (900262cc <rand+0x6c>)
90026284:	e9c0 1300 	strd	r1, r3, [r0]
90026288:	4b11      	ldr	r3, [pc, #68]	; (900262d0 <rand+0x70>)
9002628a:	6083      	str	r3, [r0, #8]
9002628c:	230b      	movs	r3, #11
9002628e:	8183      	strh	r3, [r0, #12]
90026290:	2100      	movs	r1, #0
90026292:	2001      	movs	r0, #1
90026294:	e9c2 0104 	strd	r0, r1, [r2, #16]
90026298:	6b21      	ldr	r1, [r4, #48]	; 0x30
9002629a:	480e      	ldr	r0, [pc, #56]	; (900262d4 <rand+0x74>)
9002629c:	690b      	ldr	r3, [r1, #16]
9002629e:	694c      	ldr	r4, [r1, #20]
900262a0:	4a0d      	ldr	r2, [pc, #52]	; (900262d8 <rand+0x78>)
900262a2:	4358      	muls	r0, r3
900262a4:	fb02 0004 	mla	r0, r2, r4, r0
900262a8:	fba3 3202 	umull	r3, r2, r3, r2
900262ac:	3301      	adds	r3, #1
900262ae:	eb40 0002 	adc.w	r0, r0, r2
900262b2:	e9c1 3004 	strd	r3, r0, [r1, #16]
900262b6:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
900262ba:	bd10      	pop	{r4, pc}
900262bc:	2400014c 	.word	0x2400014c
900262c0:	9002a9b8 	.word	0x9002a9b8
900262c4:	9002a9cf 	.word	0x9002a9cf
900262c8:	abcd330e 	.word	0xabcd330e
900262cc:	e66d1234 	.word	0xe66d1234
900262d0:	0005deec 	.word	0x0005deec
900262d4:	5851f42d 	.word	0x5851f42d
900262d8:	4c957f2d 	.word	0x4c957f2d

900262dc <__cxa_atexit>:
900262dc:	b510      	push	{r4, lr}
900262de:	4c05      	ldr	r4, [pc, #20]	; (900262f4 <__cxa_atexit+0x18>)
900262e0:	4613      	mov	r3, r2
900262e2:	b12c      	cbz	r4, 900262f0 <__cxa_atexit+0x14>
900262e4:	460a      	mov	r2, r1
900262e6:	4601      	mov	r1, r0
900262e8:	2002      	movs	r0, #2
900262ea:	f000 faa1 	bl	90026830 <__register_exitproc>
900262ee:	bd10      	pop	{r4, pc}
900262f0:	4620      	mov	r0, r4
900262f2:	e7fc      	b.n	900262ee <__cxa_atexit+0x12>
900262f4:	90026831 	.word	0x90026831

900262f8 <std>:
900262f8:	2300      	movs	r3, #0
900262fa:	b510      	push	{r4, lr}
900262fc:	4604      	mov	r4, r0
900262fe:	e9c0 3300 	strd	r3, r3, [r0]
90026302:	e9c0 3304 	strd	r3, r3, [r0, #16]
90026306:	6083      	str	r3, [r0, #8]
90026308:	8181      	strh	r1, [r0, #12]
9002630a:	6643      	str	r3, [r0, #100]	; 0x64
9002630c:	81c2      	strh	r2, [r0, #14]
9002630e:	6183      	str	r3, [r0, #24]
90026310:	4619      	mov	r1, r3
90026312:	2208      	movs	r2, #8
90026314:	305c      	adds	r0, #92	; 0x5c
90026316:	f000 f99b 	bl	90026650 <memset>
9002631a:	4b0d      	ldr	r3, [pc, #52]	; (90026350 <std+0x58>)
9002631c:	6263      	str	r3, [r4, #36]	; 0x24
9002631e:	4b0d      	ldr	r3, [pc, #52]	; (90026354 <std+0x5c>)
90026320:	62a3      	str	r3, [r4, #40]	; 0x28
90026322:	4b0d      	ldr	r3, [pc, #52]	; (90026358 <std+0x60>)
90026324:	62e3      	str	r3, [r4, #44]	; 0x2c
90026326:	4b0d      	ldr	r3, [pc, #52]	; (9002635c <std+0x64>)
90026328:	6323      	str	r3, [r4, #48]	; 0x30
9002632a:	4b0d      	ldr	r3, [pc, #52]	; (90026360 <std+0x68>)
9002632c:	6224      	str	r4, [r4, #32]
9002632e:	429c      	cmp	r4, r3
90026330:	d006      	beq.n	90026340 <std+0x48>
90026332:	f103 0268 	add.w	r2, r3, #104	; 0x68
90026336:	4294      	cmp	r4, r2
90026338:	d002      	beq.n	90026340 <std+0x48>
9002633a:	33d0      	adds	r3, #208	; 0xd0
9002633c:	429c      	cmp	r4, r3
9002633e:	d105      	bne.n	9002634c <std+0x54>
90026340:	f104 0058 	add.w	r0, r4, #88	; 0x58
90026344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026348:	f000 ba60 	b.w	9002680c <__retarget_lock_init_recursive>
9002634c:	bd10      	pop	{r4, pc}
9002634e:	bf00      	nop
90026350:	900264a1 	.word	0x900264a1
90026354:	900264c3 	.word	0x900264c3
90026358:	900264fb 	.word	0x900264fb
9002635c:	9002651f 	.word	0x9002651f
90026360:	24023ec8 	.word	0x24023ec8

90026364 <stdio_exit_handler>:
90026364:	4a02      	ldr	r2, [pc, #8]	; (90026370 <stdio_exit_handler+0xc>)
90026366:	4903      	ldr	r1, [pc, #12]	; (90026374 <stdio_exit_handler+0x10>)
90026368:	4803      	ldr	r0, [pc, #12]	; (90026378 <stdio_exit_handler+0x14>)
9002636a:	f000 b87b 	b.w	90026464 <_fwalk_sglue>
9002636e:	bf00      	nop
90026370:	240000f4 	.word	0x240000f4
90026374:	90027039 	.word	0x90027039
90026378:	24000100 	.word	0x24000100

9002637c <cleanup_stdio>:
9002637c:	6841      	ldr	r1, [r0, #4]
9002637e:	4b0c      	ldr	r3, [pc, #48]	; (900263b0 <cleanup_stdio+0x34>)
90026380:	4299      	cmp	r1, r3
90026382:	b510      	push	{r4, lr}
90026384:	4604      	mov	r4, r0
90026386:	d001      	beq.n	9002638c <cleanup_stdio+0x10>
90026388:	f000 fe56 	bl	90027038 <_fflush_r>
9002638c:	68a1      	ldr	r1, [r4, #8]
9002638e:	4b09      	ldr	r3, [pc, #36]	; (900263b4 <cleanup_stdio+0x38>)
90026390:	4299      	cmp	r1, r3
90026392:	d002      	beq.n	9002639a <cleanup_stdio+0x1e>
90026394:	4620      	mov	r0, r4
90026396:	f000 fe4f 	bl	90027038 <_fflush_r>
9002639a:	68e1      	ldr	r1, [r4, #12]
9002639c:	4b06      	ldr	r3, [pc, #24]	; (900263b8 <cleanup_stdio+0x3c>)
9002639e:	4299      	cmp	r1, r3
900263a0:	d004      	beq.n	900263ac <cleanup_stdio+0x30>
900263a2:	4620      	mov	r0, r4
900263a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900263a8:	f000 be46 	b.w	90027038 <_fflush_r>
900263ac:	bd10      	pop	{r4, pc}
900263ae:	bf00      	nop
900263b0:	24023ec8 	.word	0x24023ec8
900263b4:	24023f30 	.word	0x24023f30
900263b8:	24023f98 	.word	0x24023f98

900263bc <global_stdio_init.part.0>:
900263bc:	b510      	push	{r4, lr}
900263be:	4b0b      	ldr	r3, [pc, #44]	; (900263ec <global_stdio_init.part.0+0x30>)
900263c0:	4c0b      	ldr	r4, [pc, #44]	; (900263f0 <global_stdio_init.part.0+0x34>)
900263c2:	4a0c      	ldr	r2, [pc, #48]	; (900263f4 <global_stdio_init.part.0+0x38>)
900263c4:	601a      	str	r2, [r3, #0]
900263c6:	4620      	mov	r0, r4
900263c8:	2200      	movs	r2, #0
900263ca:	2104      	movs	r1, #4
900263cc:	f7ff ff94 	bl	900262f8 <std>
900263d0:	f104 0068 	add.w	r0, r4, #104	; 0x68
900263d4:	2201      	movs	r2, #1
900263d6:	2109      	movs	r1, #9
900263d8:	f7ff ff8e 	bl	900262f8 <std>
900263dc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
900263e0:	2202      	movs	r2, #2
900263e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900263e6:	2112      	movs	r1, #18
900263e8:	f7ff bf86 	b.w	900262f8 <std>
900263ec:	24024000 	.word	0x24024000
900263f0:	24023ec8 	.word	0x24023ec8
900263f4:	90026365 	.word	0x90026365

900263f8 <__sfp_lock_acquire>:
900263f8:	4801      	ldr	r0, [pc, #4]	; (90026400 <__sfp_lock_acquire+0x8>)
900263fa:	f000 ba08 	b.w	9002680e <__retarget_lock_acquire_recursive>
900263fe:	bf00      	nop
90026400:	2402400a 	.word	0x2402400a

90026404 <__sfp_lock_release>:
90026404:	4801      	ldr	r0, [pc, #4]	; (9002640c <__sfp_lock_release+0x8>)
90026406:	f000 ba03 	b.w	90026810 <__retarget_lock_release_recursive>
9002640a:	bf00      	nop
9002640c:	2402400a 	.word	0x2402400a

90026410 <__sinit>:
90026410:	b510      	push	{r4, lr}
90026412:	4604      	mov	r4, r0
90026414:	f7ff fff0 	bl	900263f8 <__sfp_lock_acquire>
90026418:	6a23      	ldr	r3, [r4, #32]
9002641a:	b11b      	cbz	r3, 90026424 <__sinit+0x14>
9002641c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026420:	f7ff bff0 	b.w	90026404 <__sfp_lock_release>
90026424:	4b04      	ldr	r3, [pc, #16]	; (90026438 <__sinit+0x28>)
90026426:	6223      	str	r3, [r4, #32]
90026428:	4b04      	ldr	r3, [pc, #16]	; (9002643c <__sinit+0x2c>)
9002642a:	681b      	ldr	r3, [r3, #0]
9002642c:	2b00      	cmp	r3, #0
9002642e:	d1f5      	bne.n	9002641c <__sinit+0xc>
90026430:	f7ff ffc4 	bl	900263bc <global_stdio_init.part.0>
90026434:	e7f2      	b.n	9002641c <__sinit+0xc>
90026436:	bf00      	nop
90026438:	9002637d 	.word	0x9002637d
9002643c:	24024000 	.word	0x24024000

90026440 <fiprintf>:
90026440:	b40e      	push	{r1, r2, r3}
90026442:	b503      	push	{r0, r1, lr}
90026444:	4601      	mov	r1, r0
90026446:	ab03      	add	r3, sp, #12
90026448:	4805      	ldr	r0, [pc, #20]	; (90026460 <fiprintf+0x20>)
9002644a:	f853 2b04 	ldr.w	r2, [r3], #4
9002644e:	6800      	ldr	r0, [r0, #0]
90026450:	9301      	str	r3, [sp, #4]
90026452:	f000 fac1 	bl	900269d8 <_vfiprintf_r>
90026456:	b002      	add	sp, #8
90026458:	f85d eb04 	ldr.w	lr, [sp], #4
9002645c:	b003      	add	sp, #12
9002645e:	4770      	bx	lr
90026460:	2400014c 	.word	0x2400014c

90026464 <_fwalk_sglue>:
90026464:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026468:	4607      	mov	r7, r0
9002646a:	4688      	mov	r8, r1
9002646c:	4614      	mov	r4, r2
9002646e:	2600      	movs	r6, #0
90026470:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
90026474:	f1b9 0901 	subs.w	r9, r9, #1
90026478:	d505      	bpl.n	90026486 <_fwalk_sglue+0x22>
9002647a:	6824      	ldr	r4, [r4, #0]
9002647c:	2c00      	cmp	r4, #0
9002647e:	d1f7      	bne.n	90026470 <_fwalk_sglue+0xc>
90026480:	4630      	mov	r0, r6
90026482:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026486:	89ab      	ldrh	r3, [r5, #12]
90026488:	2b01      	cmp	r3, #1
9002648a:	d907      	bls.n	9002649c <_fwalk_sglue+0x38>
9002648c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90026490:	3301      	adds	r3, #1
90026492:	d003      	beq.n	9002649c <_fwalk_sglue+0x38>
90026494:	4629      	mov	r1, r5
90026496:	4638      	mov	r0, r7
90026498:	47c0      	blx	r8
9002649a:	4306      	orrs	r6, r0
9002649c:	3568      	adds	r5, #104	; 0x68
9002649e:	e7e9      	b.n	90026474 <_fwalk_sglue+0x10>

900264a0 <__sread>:
900264a0:	b510      	push	{r4, lr}
900264a2:	460c      	mov	r4, r1
900264a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900264a8:	f000 f93e 	bl	90026728 <_read_r>
900264ac:	2800      	cmp	r0, #0
900264ae:	bfab      	itete	ge
900264b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
900264b2:	89a3      	ldrhlt	r3, [r4, #12]
900264b4:	181b      	addge	r3, r3, r0
900264b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
900264ba:	bfac      	ite	ge
900264bc:	6563      	strge	r3, [r4, #84]	; 0x54
900264be:	81a3      	strhlt	r3, [r4, #12]
900264c0:	bd10      	pop	{r4, pc}

900264c2 <__swrite>:
900264c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900264c6:	461f      	mov	r7, r3
900264c8:	898b      	ldrh	r3, [r1, #12]
900264ca:	05db      	lsls	r3, r3, #23
900264cc:	4605      	mov	r5, r0
900264ce:	460c      	mov	r4, r1
900264d0:	4616      	mov	r6, r2
900264d2:	d505      	bpl.n	900264e0 <__swrite+0x1e>
900264d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900264d8:	2302      	movs	r3, #2
900264da:	2200      	movs	r2, #0
900264dc:	f000 f912 	bl	90026704 <_lseek_r>
900264e0:	89a3      	ldrh	r3, [r4, #12]
900264e2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900264e6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
900264ea:	81a3      	strh	r3, [r4, #12]
900264ec:	4632      	mov	r2, r6
900264ee:	463b      	mov	r3, r7
900264f0:	4628      	mov	r0, r5
900264f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
900264f6:	f000 b94d 	b.w	90026794 <_write_r>

900264fa <__sseek>:
900264fa:	b510      	push	{r4, lr}
900264fc:	460c      	mov	r4, r1
900264fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026502:	f000 f8ff 	bl	90026704 <_lseek_r>
90026506:	1c43      	adds	r3, r0, #1
90026508:	89a3      	ldrh	r3, [r4, #12]
9002650a:	bf15      	itete	ne
9002650c:	6560      	strne	r0, [r4, #84]	; 0x54
9002650e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90026512:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90026516:	81a3      	strheq	r3, [r4, #12]
90026518:	bf18      	it	ne
9002651a:	81a3      	strhne	r3, [r4, #12]
9002651c:	bd10      	pop	{r4, pc}

9002651e <__sclose>:
9002651e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026522:	f000 b8df 	b.w	900266e4 <_close_r>

90026526 <__swbuf_r>:
90026526:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026528:	460e      	mov	r6, r1
9002652a:	4614      	mov	r4, r2
9002652c:	4605      	mov	r5, r0
9002652e:	b118      	cbz	r0, 90026538 <__swbuf_r+0x12>
90026530:	6a03      	ldr	r3, [r0, #32]
90026532:	b90b      	cbnz	r3, 90026538 <__swbuf_r+0x12>
90026534:	f7ff ff6c 	bl	90026410 <__sinit>
90026538:	69a3      	ldr	r3, [r4, #24]
9002653a:	60a3      	str	r3, [r4, #8]
9002653c:	89a3      	ldrh	r3, [r4, #12]
9002653e:	071a      	lsls	r2, r3, #28
90026540:	d525      	bpl.n	9002658e <__swbuf_r+0x68>
90026542:	6923      	ldr	r3, [r4, #16]
90026544:	b31b      	cbz	r3, 9002658e <__swbuf_r+0x68>
90026546:	6823      	ldr	r3, [r4, #0]
90026548:	6922      	ldr	r2, [r4, #16]
9002654a:	1a98      	subs	r0, r3, r2
9002654c:	6963      	ldr	r3, [r4, #20]
9002654e:	b2f6      	uxtb	r6, r6
90026550:	4283      	cmp	r3, r0
90026552:	4637      	mov	r7, r6
90026554:	dc04      	bgt.n	90026560 <__swbuf_r+0x3a>
90026556:	4621      	mov	r1, r4
90026558:	4628      	mov	r0, r5
9002655a:	f000 fd6d 	bl	90027038 <_fflush_r>
9002655e:	b9e0      	cbnz	r0, 9002659a <__swbuf_r+0x74>
90026560:	68a3      	ldr	r3, [r4, #8]
90026562:	3b01      	subs	r3, #1
90026564:	60a3      	str	r3, [r4, #8]
90026566:	6823      	ldr	r3, [r4, #0]
90026568:	1c5a      	adds	r2, r3, #1
9002656a:	6022      	str	r2, [r4, #0]
9002656c:	701e      	strb	r6, [r3, #0]
9002656e:	6962      	ldr	r2, [r4, #20]
90026570:	1c43      	adds	r3, r0, #1
90026572:	429a      	cmp	r2, r3
90026574:	d004      	beq.n	90026580 <__swbuf_r+0x5a>
90026576:	89a3      	ldrh	r3, [r4, #12]
90026578:	07db      	lsls	r3, r3, #31
9002657a:	d506      	bpl.n	9002658a <__swbuf_r+0x64>
9002657c:	2e0a      	cmp	r6, #10
9002657e:	d104      	bne.n	9002658a <__swbuf_r+0x64>
90026580:	4621      	mov	r1, r4
90026582:	4628      	mov	r0, r5
90026584:	f000 fd58 	bl	90027038 <_fflush_r>
90026588:	b938      	cbnz	r0, 9002659a <__swbuf_r+0x74>
9002658a:	4638      	mov	r0, r7
9002658c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9002658e:	4621      	mov	r1, r4
90026590:	4628      	mov	r0, r5
90026592:	f000 f805 	bl	900265a0 <__swsetup_r>
90026596:	2800      	cmp	r0, #0
90026598:	d0d5      	beq.n	90026546 <__swbuf_r+0x20>
9002659a:	f04f 37ff 	mov.w	r7, #4294967295
9002659e:	e7f4      	b.n	9002658a <__swbuf_r+0x64>

900265a0 <__swsetup_r>:
900265a0:	b538      	push	{r3, r4, r5, lr}
900265a2:	4b2a      	ldr	r3, [pc, #168]	; (9002664c <__swsetup_r+0xac>)
900265a4:	4605      	mov	r5, r0
900265a6:	6818      	ldr	r0, [r3, #0]
900265a8:	460c      	mov	r4, r1
900265aa:	b118      	cbz	r0, 900265b4 <__swsetup_r+0x14>
900265ac:	6a03      	ldr	r3, [r0, #32]
900265ae:	b90b      	cbnz	r3, 900265b4 <__swsetup_r+0x14>
900265b0:	f7ff ff2e 	bl	90026410 <__sinit>
900265b4:	89a3      	ldrh	r3, [r4, #12]
900265b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900265ba:	0718      	lsls	r0, r3, #28
900265bc:	d422      	bmi.n	90026604 <__swsetup_r+0x64>
900265be:	06d9      	lsls	r1, r3, #27
900265c0:	d407      	bmi.n	900265d2 <__swsetup_r+0x32>
900265c2:	2309      	movs	r3, #9
900265c4:	602b      	str	r3, [r5, #0]
900265c6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
900265ca:	81a3      	strh	r3, [r4, #12]
900265cc:	f04f 30ff 	mov.w	r0, #4294967295
900265d0:	e034      	b.n	9002663c <__swsetup_r+0x9c>
900265d2:	0758      	lsls	r0, r3, #29
900265d4:	d512      	bpl.n	900265fc <__swsetup_r+0x5c>
900265d6:	6b61      	ldr	r1, [r4, #52]	; 0x34
900265d8:	b141      	cbz	r1, 900265ec <__swsetup_r+0x4c>
900265da:	f104 0344 	add.w	r3, r4, #68	; 0x44
900265de:	4299      	cmp	r1, r3
900265e0:	d002      	beq.n	900265e8 <__swsetup_r+0x48>
900265e2:	4628      	mov	r0, r5
900265e4:	f000 f982 	bl	900268ec <_free_r>
900265e8:	2300      	movs	r3, #0
900265ea:	6363      	str	r3, [r4, #52]	; 0x34
900265ec:	89a3      	ldrh	r3, [r4, #12]
900265ee:	f023 0324 	bic.w	r3, r3, #36	; 0x24
900265f2:	81a3      	strh	r3, [r4, #12]
900265f4:	2300      	movs	r3, #0
900265f6:	6063      	str	r3, [r4, #4]
900265f8:	6923      	ldr	r3, [r4, #16]
900265fa:	6023      	str	r3, [r4, #0]
900265fc:	89a3      	ldrh	r3, [r4, #12]
900265fe:	f043 0308 	orr.w	r3, r3, #8
90026602:	81a3      	strh	r3, [r4, #12]
90026604:	6923      	ldr	r3, [r4, #16]
90026606:	b94b      	cbnz	r3, 9002661c <__swsetup_r+0x7c>
90026608:	89a3      	ldrh	r3, [r4, #12]
9002660a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002660e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90026612:	d003      	beq.n	9002661c <__swsetup_r+0x7c>
90026614:	4621      	mov	r1, r4
90026616:	4628      	mov	r0, r5
90026618:	f000 fd5c 	bl	900270d4 <__smakebuf_r>
9002661c:	89a0      	ldrh	r0, [r4, #12]
9002661e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026622:	f010 0301 	ands.w	r3, r0, #1
90026626:	d00a      	beq.n	9002663e <__swsetup_r+0x9e>
90026628:	2300      	movs	r3, #0
9002662a:	60a3      	str	r3, [r4, #8]
9002662c:	6963      	ldr	r3, [r4, #20]
9002662e:	425b      	negs	r3, r3
90026630:	61a3      	str	r3, [r4, #24]
90026632:	6923      	ldr	r3, [r4, #16]
90026634:	b943      	cbnz	r3, 90026648 <__swsetup_r+0xa8>
90026636:	f010 0080 	ands.w	r0, r0, #128	; 0x80
9002663a:	d1c4      	bne.n	900265c6 <__swsetup_r+0x26>
9002663c:	bd38      	pop	{r3, r4, r5, pc}
9002663e:	0781      	lsls	r1, r0, #30
90026640:	bf58      	it	pl
90026642:	6963      	ldrpl	r3, [r4, #20]
90026644:	60a3      	str	r3, [r4, #8]
90026646:	e7f4      	b.n	90026632 <__swsetup_r+0x92>
90026648:	2000      	movs	r0, #0
9002664a:	e7f7      	b.n	9002663c <__swsetup_r+0x9c>
9002664c:	2400014c 	.word	0x2400014c

90026650 <memset>:
90026650:	4402      	add	r2, r0
90026652:	4603      	mov	r3, r0
90026654:	4293      	cmp	r3, r2
90026656:	d100      	bne.n	9002665a <memset+0xa>
90026658:	4770      	bx	lr
9002665a:	f803 1b01 	strb.w	r1, [r3], #1
9002665e:	e7f9      	b.n	90026654 <memset+0x4>

90026660 <strncmp>:
90026660:	b510      	push	{r4, lr}
90026662:	b16a      	cbz	r2, 90026680 <strncmp+0x20>
90026664:	3901      	subs	r1, #1
90026666:	1884      	adds	r4, r0, r2
90026668:	f810 2b01 	ldrb.w	r2, [r0], #1
9002666c:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90026670:	429a      	cmp	r2, r3
90026672:	d103      	bne.n	9002667c <strncmp+0x1c>
90026674:	42a0      	cmp	r0, r4
90026676:	d001      	beq.n	9002667c <strncmp+0x1c>
90026678:	2a00      	cmp	r2, #0
9002667a:	d1f5      	bne.n	90026668 <strncmp+0x8>
9002667c:	1ad0      	subs	r0, r2, r3
9002667e:	bd10      	pop	{r4, pc}
90026680:	4610      	mov	r0, r2
90026682:	e7fc      	b.n	9002667e <strncmp+0x1e>

90026684 <_raise_r>:
90026684:	291f      	cmp	r1, #31
90026686:	b538      	push	{r3, r4, r5, lr}
90026688:	4604      	mov	r4, r0
9002668a:	460d      	mov	r5, r1
9002668c:	d904      	bls.n	90026698 <_raise_r+0x14>
9002668e:	2316      	movs	r3, #22
90026690:	6003      	str	r3, [r0, #0]
90026692:	f04f 30ff 	mov.w	r0, #4294967295
90026696:	bd38      	pop	{r3, r4, r5, pc}
90026698:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
9002669a:	b112      	cbz	r2, 900266a2 <_raise_r+0x1e>
9002669c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
900266a0:	b94b      	cbnz	r3, 900266b6 <_raise_r+0x32>
900266a2:	4620      	mov	r0, r4
900266a4:	f000 f864 	bl	90026770 <_getpid_r>
900266a8:	462a      	mov	r2, r5
900266aa:	4601      	mov	r1, r0
900266ac:	4620      	mov	r0, r4
900266ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
900266b2:	f000 b84b 	b.w	9002674c <_kill_r>
900266b6:	2b01      	cmp	r3, #1
900266b8:	d00a      	beq.n	900266d0 <_raise_r+0x4c>
900266ba:	1c59      	adds	r1, r3, #1
900266bc:	d103      	bne.n	900266c6 <_raise_r+0x42>
900266be:	2316      	movs	r3, #22
900266c0:	6003      	str	r3, [r0, #0]
900266c2:	2001      	movs	r0, #1
900266c4:	e7e7      	b.n	90026696 <_raise_r+0x12>
900266c6:	2400      	movs	r4, #0
900266c8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
900266cc:	4628      	mov	r0, r5
900266ce:	4798      	blx	r3
900266d0:	2000      	movs	r0, #0
900266d2:	e7e0      	b.n	90026696 <_raise_r+0x12>

900266d4 <raise>:
900266d4:	4b02      	ldr	r3, [pc, #8]	; (900266e0 <raise+0xc>)
900266d6:	4601      	mov	r1, r0
900266d8:	6818      	ldr	r0, [r3, #0]
900266da:	f7ff bfd3 	b.w	90026684 <_raise_r>
900266de:	bf00      	nop
900266e0:	2400014c 	.word	0x2400014c

900266e4 <_close_r>:
900266e4:	b538      	push	{r3, r4, r5, lr}
900266e6:	4d06      	ldr	r5, [pc, #24]	; (90026700 <_close_r+0x1c>)
900266e8:	2300      	movs	r3, #0
900266ea:	4604      	mov	r4, r0
900266ec:	4608      	mov	r0, r1
900266ee:	602b      	str	r3, [r5, #0]
900266f0:	f7dd f82c 	bl	9000374c <_close>
900266f4:	1c43      	adds	r3, r0, #1
900266f6:	d102      	bne.n	900266fe <_close_r+0x1a>
900266f8:	682b      	ldr	r3, [r5, #0]
900266fa:	b103      	cbz	r3, 900266fe <_close_r+0x1a>
900266fc:	6023      	str	r3, [r4, #0]
900266fe:	bd38      	pop	{r3, r4, r5, pc}
90026700:	24024004 	.word	0x24024004

90026704 <_lseek_r>:
90026704:	b538      	push	{r3, r4, r5, lr}
90026706:	4d07      	ldr	r5, [pc, #28]	; (90026724 <_lseek_r+0x20>)
90026708:	4604      	mov	r4, r0
9002670a:	4608      	mov	r0, r1
9002670c:	4611      	mov	r1, r2
9002670e:	2200      	movs	r2, #0
90026710:	602a      	str	r2, [r5, #0]
90026712:	461a      	mov	r2, r3
90026714:	f7dd f826 	bl	90003764 <_lseek>
90026718:	1c43      	adds	r3, r0, #1
9002671a:	d102      	bne.n	90026722 <_lseek_r+0x1e>
9002671c:	682b      	ldr	r3, [r5, #0]
9002671e:	b103      	cbz	r3, 90026722 <_lseek_r+0x1e>
90026720:	6023      	str	r3, [r4, #0]
90026722:	bd38      	pop	{r3, r4, r5, pc}
90026724:	24024004 	.word	0x24024004

90026728 <_read_r>:
90026728:	b538      	push	{r3, r4, r5, lr}
9002672a:	4d07      	ldr	r5, [pc, #28]	; (90026748 <_read_r+0x20>)
9002672c:	4604      	mov	r4, r0
9002672e:	4608      	mov	r0, r1
90026730:	4611      	mov	r1, r2
90026732:	2200      	movs	r2, #0
90026734:	602a      	str	r2, [r5, #0]
90026736:	461a      	mov	r2, r3
90026738:	f7dc ffec 	bl	90003714 <_read>
9002673c:	1c43      	adds	r3, r0, #1
9002673e:	d102      	bne.n	90026746 <_read_r+0x1e>
90026740:	682b      	ldr	r3, [r5, #0]
90026742:	b103      	cbz	r3, 90026746 <_read_r+0x1e>
90026744:	6023      	str	r3, [r4, #0]
90026746:	bd38      	pop	{r3, r4, r5, pc}
90026748:	24024004 	.word	0x24024004

9002674c <_kill_r>:
9002674c:	b538      	push	{r3, r4, r5, lr}
9002674e:	4d07      	ldr	r5, [pc, #28]	; (9002676c <_kill_r+0x20>)
90026750:	2300      	movs	r3, #0
90026752:	4604      	mov	r4, r0
90026754:	4608      	mov	r0, r1
90026756:	4611      	mov	r1, r2
90026758:	602b      	str	r3, [r5, #0]
9002675a:	f7dc ffcb 	bl	900036f4 <_kill>
9002675e:	1c43      	adds	r3, r0, #1
90026760:	d102      	bne.n	90026768 <_kill_r+0x1c>
90026762:	682b      	ldr	r3, [r5, #0]
90026764:	b103      	cbz	r3, 90026768 <_kill_r+0x1c>
90026766:	6023      	str	r3, [r4, #0]
90026768:	bd38      	pop	{r3, r4, r5, pc}
9002676a:	bf00      	nop
9002676c:	24024004 	.word	0x24024004

90026770 <_getpid_r>:
90026770:	f7dc bfbe 	b.w	900036f0 <_getpid>

90026774 <_sbrk_r>:
90026774:	b538      	push	{r3, r4, r5, lr}
90026776:	4d06      	ldr	r5, [pc, #24]	; (90026790 <_sbrk_r+0x1c>)
90026778:	2300      	movs	r3, #0
9002677a:	4604      	mov	r4, r0
9002677c:	4608      	mov	r0, r1
9002677e:	602b      	str	r3, [r5, #0]
90026780:	f000 fd06 	bl	90027190 <_sbrk>
90026784:	1c43      	adds	r3, r0, #1
90026786:	d102      	bne.n	9002678e <_sbrk_r+0x1a>
90026788:	682b      	ldr	r3, [r5, #0]
9002678a:	b103      	cbz	r3, 9002678e <_sbrk_r+0x1a>
9002678c:	6023      	str	r3, [r4, #0]
9002678e:	bd38      	pop	{r3, r4, r5, pc}
90026790:	24024004 	.word	0x24024004

90026794 <_write_r>:
90026794:	b538      	push	{r3, r4, r5, lr}
90026796:	4d07      	ldr	r5, [pc, #28]	; (900267b4 <_write_r+0x20>)
90026798:	4604      	mov	r4, r0
9002679a:	4608      	mov	r0, r1
9002679c:	4611      	mov	r1, r2
9002679e:	2200      	movs	r2, #0
900267a0:	602a      	str	r2, [r5, #0]
900267a2:	461a      	mov	r2, r3
900267a4:	f7dc ffc4 	bl	90003730 <_write>
900267a8:	1c43      	adds	r3, r0, #1
900267aa:	d102      	bne.n	900267b2 <_write_r+0x1e>
900267ac:	682b      	ldr	r3, [r5, #0]
900267ae:	b103      	cbz	r3, 900267b2 <_write_r+0x1e>
900267b0:	6023      	str	r3, [r4, #0]
900267b2:	bd38      	pop	{r3, r4, r5, pc}
900267b4:	24024004 	.word	0x24024004

900267b8 <__errno>:
900267b8:	4b01      	ldr	r3, [pc, #4]	; (900267c0 <__errno+0x8>)
900267ba:	6818      	ldr	r0, [r3, #0]
900267bc:	4770      	bx	lr
900267be:	bf00      	nop
900267c0:	2400014c 	.word	0x2400014c

900267c4 <__libc_init_array>:
900267c4:	b570      	push	{r4, r5, r6, lr}
900267c6:	4d0d      	ldr	r5, [pc, #52]	; (900267fc <__libc_init_array+0x38>)
900267c8:	4c0d      	ldr	r4, [pc, #52]	; (90026800 <__libc_init_array+0x3c>)
900267ca:	1b64      	subs	r4, r4, r5
900267cc:	10a4      	asrs	r4, r4, #2
900267ce:	2600      	movs	r6, #0
900267d0:	42a6      	cmp	r6, r4
900267d2:	d109      	bne.n	900267e8 <__libc_init_array+0x24>
900267d4:	4d0b      	ldr	r5, [pc, #44]	; (90026804 <__libc_init_array+0x40>)
900267d6:	4c0c      	ldr	r4, [pc, #48]	; (90026808 <__libc_init_array+0x44>)
900267d8:	f000 fce8 	bl	900271ac <_init>
900267dc:	1b64      	subs	r4, r4, r5
900267de:	10a4      	asrs	r4, r4, #2
900267e0:	2600      	movs	r6, #0
900267e2:	42a6      	cmp	r6, r4
900267e4:	d105      	bne.n	900267f2 <__libc_init_array+0x2e>
900267e6:	bd70      	pop	{r4, r5, r6, pc}
900267e8:	f855 3b04 	ldr.w	r3, [r5], #4
900267ec:	4798      	blx	r3
900267ee:	3601      	adds	r6, #1
900267f0:	e7ee      	b.n	900267d0 <__libc_init_array+0xc>
900267f2:	f855 3b04 	ldr.w	r3, [r5], #4
900267f6:	4798      	blx	r3
900267f8:	3601      	adds	r6, #1
900267fa:	e7f2      	b.n	900267e2 <__libc_init_array+0x1e>
900267fc:	9002b0b8 	.word	0x9002b0b8
90026800:	9002b0b8 	.word	0x9002b0b8
90026804:	9002b0b8 	.word	0x9002b0b8
90026808:	9002b0d0 	.word	0x9002b0d0

9002680c <__retarget_lock_init_recursive>:
9002680c:	4770      	bx	lr

9002680e <__retarget_lock_acquire_recursive>:
9002680e:	4770      	bx	lr

90026810 <__retarget_lock_release_recursive>:
90026810:	4770      	bx	lr

90026812 <memcpy>:
90026812:	440a      	add	r2, r1
90026814:	4291      	cmp	r1, r2
90026816:	f100 33ff 	add.w	r3, r0, #4294967295
9002681a:	d100      	bne.n	9002681e <memcpy+0xc>
9002681c:	4770      	bx	lr
9002681e:	b510      	push	{r4, lr}
90026820:	f811 4b01 	ldrb.w	r4, [r1], #1
90026824:	f803 4f01 	strb.w	r4, [r3, #1]!
90026828:	4291      	cmp	r1, r2
9002682a:	d1f9      	bne.n	90026820 <memcpy+0xe>
9002682c:	bd10      	pop	{r4, pc}
	...

90026830 <__register_exitproc>:
90026830:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90026834:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 900268e8 <__register_exitproc+0xb8>
90026838:	4606      	mov	r6, r0
9002683a:	f8d8 0000 	ldr.w	r0, [r8]
9002683e:	461f      	mov	r7, r3
90026840:	460d      	mov	r5, r1
90026842:	4691      	mov	r9, r2
90026844:	f7ff ffe3 	bl	9002680e <__retarget_lock_acquire_recursive>
90026848:	4b23      	ldr	r3, [pc, #140]	; (900268d8 <__register_exitproc+0xa8>)
9002684a:	681c      	ldr	r4, [r3, #0]
9002684c:	b934      	cbnz	r4, 9002685c <__register_exitproc+0x2c>
9002684e:	4c23      	ldr	r4, [pc, #140]	; (900268dc <__register_exitproc+0xac>)
90026850:	601c      	str	r4, [r3, #0]
90026852:	4b23      	ldr	r3, [pc, #140]	; (900268e0 <__register_exitproc+0xb0>)
90026854:	b113      	cbz	r3, 9002685c <__register_exitproc+0x2c>
90026856:	681b      	ldr	r3, [r3, #0]
90026858:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
9002685c:	6863      	ldr	r3, [r4, #4]
9002685e:	2b1f      	cmp	r3, #31
90026860:	dd07      	ble.n	90026872 <__register_exitproc+0x42>
90026862:	f8d8 0000 	ldr.w	r0, [r8]
90026866:	f7ff ffd3 	bl	90026810 <__retarget_lock_release_recursive>
9002686a:	f04f 30ff 	mov.w	r0, #4294967295
9002686e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90026872:	b32e      	cbz	r6, 900268c0 <__register_exitproc+0x90>
90026874:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
90026878:	b968      	cbnz	r0, 90026896 <__register_exitproc+0x66>
9002687a:	4b1a      	ldr	r3, [pc, #104]	; (900268e4 <__register_exitproc+0xb4>)
9002687c:	2b00      	cmp	r3, #0
9002687e:	d0f0      	beq.n	90026862 <__register_exitproc+0x32>
90026880:	f44f 7084 	mov.w	r0, #264	; 0x108
90026884:	f7ff fc30 	bl	900260e8 <malloc>
90026888:	2800      	cmp	r0, #0
9002688a:	d0ea      	beq.n	90026862 <__register_exitproc+0x32>
9002688c:	2300      	movs	r3, #0
9002688e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90026892:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90026896:	6863      	ldr	r3, [r4, #4]
90026898:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
9002689c:	2201      	movs	r2, #1
9002689e:	409a      	lsls	r2, r3
900268a0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
900268a4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
900268a8:	4313      	orrs	r3, r2
900268aa:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
900268ae:	2e02      	cmp	r6, #2
900268b0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
900268b4:	bf02      	ittt	eq
900268b6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
900268ba:	4313      	orreq	r3, r2
900268bc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
900268c0:	6863      	ldr	r3, [r4, #4]
900268c2:	f8d8 0000 	ldr.w	r0, [r8]
900268c6:	1c5a      	adds	r2, r3, #1
900268c8:	3302      	adds	r3, #2
900268ca:	6062      	str	r2, [r4, #4]
900268cc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
900268d0:	f7ff ff9e 	bl	90026810 <__retarget_lock_release_recursive>
900268d4:	2000      	movs	r0, #0
900268d6:	e7ca      	b.n	9002686e <__register_exitproc+0x3e>
900268d8:	24024098 	.word	0x24024098
900268dc:	2402400c 	.word	0x2402400c
900268e0:	9002aa28 	.word	0x9002aa28
900268e4:	900260e9 	.word	0x900260e9
900268e8:	24000150 	.word	0x24000150

900268ec <_free_r>:
900268ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
900268ee:	2900      	cmp	r1, #0
900268f0:	d044      	beq.n	9002697c <_free_r+0x90>
900268f2:	f851 3c04 	ldr.w	r3, [r1, #-4]
900268f6:	9001      	str	r0, [sp, #4]
900268f8:	2b00      	cmp	r3, #0
900268fa:	f1a1 0404 	sub.w	r4, r1, #4
900268fe:	bfb8      	it	lt
90026900:	18e4      	addlt	r4, r4, r3
90026902:	f7ff fca1 	bl	90026248 <__malloc_lock>
90026906:	4a1e      	ldr	r2, [pc, #120]	; (90026980 <_free_r+0x94>)
90026908:	9801      	ldr	r0, [sp, #4]
9002690a:	6813      	ldr	r3, [r2, #0]
9002690c:	b933      	cbnz	r3, 9002691c <_free_r+0x30>
9002690e:	6063      	str	r3, [r4, #4]
90026910:	6014      	str	r4, [r2, #0]
90026912:	b003      	add	sp, #12
90026914:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90026918:	f7ff bc9c 	b.w	90026254 <__malloc_unlock>
9002691c:	42a3      	cmp	r3, r4
9002691e:	d908      	bls.n	90026932 <_free_r+0x46>
90026920:	6825      	ldr	r5, [r4, #0]
90026922:	1961      	adds	r1, r4, r5
90026924:	428b      	cmp	r3, r1
90026926:	bf01      	itttt	eq
90026928:	6819      	ldreq	r1, [r3, #0]
9002692a:	685b      	ldreq	r3, [r3, #4]
9002692c:	1949      	addeq	r1, r1, r5
9002692e:	6021      	streq	r1, [r4, #0]
90026930:	e7ed      	b.n	9002690e <_free_r+0x22>
90026932:	461a      	mov	r2, r3
90026934:	685b      	ldr	r3, [r3, #4]
90026936:	b10b      	cbz	r3, 9002693c <_free_r+0x50>
90026938:	42a3      	cmp	r3, r4
9002693a:	d9fa      	bls.n	90026932 <_free_r+0x46>
9002693c:	6811      	ldr	r1, [r2, #0]
9002693e:	1855      	adds	r5, r2, r1
90026940:	42a5      	cmp	r5, r4
90026942:	d10b      	bne.n	9002695c <_free_r+0x70>
90026944:	6824      	ldr	r4, [r4, #0]
90026946:	4421      	add	r1, r4
90026948:	1854      	adds	r4, r2, r1
9002694a:	42a3      	cmp	r3, r4
9002694c:	6011      	str	r1, [r2, #0]
9002694e:	d1e0      	bne.n	90026912 <_free_r+0x26>
90026950:	681c      	ldr	r4, [r3, #0]
90026952:	685b      	ldr	r3, [r3, #4]
90026954:	6053      	str	r3, [r2, #4]
90026956:	440c      	add	r4, r1
90026958:	6014      	str	r4, [r2, #0]
9002695a:	e7da      	b.n	90026912 <_free_r+0x26>
9002695c:	d902      	bls.n	90026964 <_free_r+0x78>
9002695e:	230c      	movs	r3, #12
90026960:	6003      	str	r3, [r0, #0]
90026962:	e7d6      	b.n	90026912 <_free_r+0x26>
90026964:	6825      	ldr	r5, [r4, #0]
90026966:	1961      	adds	r1, r4, r5
90026968:	428b      	cmp	r3, r1
9002696a:	bf04      	itt	eq
9002696c:	6819      	ldreq	r1, [r3, #0]
9002696e:	685b      	ldreq	r3, [r3, #4]
90026970:	6063      	str	r3, [r4, #4]
90026972:	bf04      	itt	eq
90026974:	1949      	addeq	r1, r1, r5
90026976:	6021      	streq	r1, [r4, #0]
90026978:	6054      	str	r4, [r2, #4]
9002697a:	e7ca      	b.n	90026912 <_free_r+0x26>
9002697c:	b003      	add	sp, #12
9002697e:	bd30      	pop	{r4, r5, pc}
90026980:	24023ec0 	.word	0x24023ec0

90026984 <__sfputc_r>:
90026984:	6893      	ldr	r3, [r2, #8]
90026986:	3b01      	subs	r3, #1
90026988:	2b00      	cmp	r3, #0
9002698a:	b410      	push	{r4}
9002698c:	6093      	str	r3, [r2, #8]
9002698e:	da08      	bge.n	900269a2 <__sfputc_r+0x1e>
90026990:	6994      	ldr	r4, [r2, #24]
90026992:	42a3      	cmp	r3, r4
90026994:	db01      	blt.n	9002699a <__sfputc_r+0x16>
90026996:	290a      	cmp	r1, #10
90026998:	d103      	bne.n	900269a2 <__sfputc_r+0x1e>
9002699a:	f85d 4b04 	ldr.w	r4, [sp], #4
9002699e:	f7ff bdc2 	b.w	90026526 <__swbuf_r>
900269a2:	6813      	ldr	r3, [r2, #0]
900269a4:	1c58      	adds	r0, r3, #1
900269a6:	6010      	str	r0, [r2, #0]
900269a8:	7019      	strb	r1, [r3, #0]
900269aa:	4608      	mov	r0, r1
900269ac:	f85d 4b04 	ldr.w	r4, [sp], #4
900269b0:	4770      	bx	lr

900269b2 <__sfputs_r>:
900269b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900269b4:	4606      	mov	r6, r0
900269b6:	460f      	mov	r7, r1
900269b8:	4614      	mov	r4, r2
900269ba:	18d5      	adds	r5, r2, r3
900269bc:	42ac      	cmp	r4, r5
900269be:	d101      	bne.n	900269c4 <__sfputs_r+0x12>
900269c0:	2000      	movs	r0, #0
900269c2:	e007      	b.n	900269d4 <__sfputs_r+0x22>
900269c4:	f814 1b01 	ldrb.w	r1, [r4], #1
900269c8:	463a      	mov	r2, r7
900269ca:	4630      	mov	r0, r6
900269cc:	f7ff ffda 	bl	90026984 <__sfputc_r>
900269d0:	1c43      	adds	r3, r0, #1
900269d2:	d1f3      	bne.n	900269bc <__sfputs_r+0xa>
900269d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

900269d8 <_vfiprintf_r>:
900269d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900269dc:	460d      	mov	r5, r1
900269de:	b09d      	sub	sp, #116	; 0x74
900269e0:	4614      	mov	r4, r2
900269e2:	4698      	mov	r8, r3
900269e4:	4606      	mov	r6, r0
900269e6:	b118      	cbz	r0, 900269f0 <_vfiprintf_r+0x18>
900269e8:	6a03      	ldr	r3, [r0, #32]
900269ea:	b90b      	cbnz	r3, 900269f0 <_vfiprintf_r+0x18>
900269ec:	f7ff fd10 	bl	90026410 <__sinit>
900269f0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
900269f2:	07d9      	lsls	r1, r3, #31
900269f4:	d405      	bmi.n	90026a02 <_vfiprintf_r+0x2a>
900269f6:	89ab      	ldrh	r3, [r5, #12]
900269f8:	059a      	lsls	r2, r3, #22
900269fa:	d402      	bmi.n	90026a02 <_vfiprintf_r+0x2a>
900269fc:	6da8      	ldr	r0, [r5, #88]	; 0x58
900269fe:	f7ff ff06 	bl	9002680e <__retarget_lock_acquire_recursive>
90026a02:	89ab      	ldrh	r3, [r5, #12]
90026a04:	071b      	lsls	r3, r3, #28
90026a06:	d501      	bpl.n	90026a0c <_vfiprintf_r+0x34>
90026a08:	692b      	ldr	r3, [r5, #16]
90026a0a:	b99b      	cbnz	r3, 90026a34 <_vfiprintf_r+0x5c>
90026a0c:	4629      	mov	r1, r5
90026a0e:	4630      	mov	r0, r6
90026a10:	f7ff fdc6 	bl	900265a0 <__swsetup_r>
90026a14:	b170      	cbz	r0, 90026a34 <_vfiprintf_r+0x5c>
90026a16:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026a18:	07dc      	lsls	r4, r3, #31
90026a1a:	d504      	bpl.n	90026a26 <_vfiprintf_r+0x4e>
90026a1c:	f04f 30ff 	mov.w	r0, #4294967295
90026a20:	b01d      	add	sp, #116	; 0x74
90026a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026a26:	89ab      	ldrh	r3, [r5, #12]
90026a28:	0598      	lsls	r0, r3, #22
90026a2a:	d4f7      	bmi.n	90026a1c <_vfiprintf_r+0x44>
90026a2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026a2e:	f7ff feef 	bl	90026810 <__retarget_lock_release_recursive>
90026a32:	e7f3      	b.n	90026a1c <_vfiprintf_r+0x44>
90026a34:	2300      	movs	r3, #0
90026a36:	9309      	str	r3, [sp, #36]	; 0x24
90026a38:	2320      	movs	r3, #32
90026a3a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90026a3e:	f8cd 800c 	str.w	r8, [sp, #12]
90026a42:	2330      	movs	r3, #48	; 0x30
90026a44:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90026bf8 <_vfiprintf_r+0x220>
90026a48:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90026a4c:	f04f 0901 	mov.w	r9, #1
90026a50:	4623      	mov	r3, r4
90026a52:	469a      	mov	sl, r3
90026a54:	f813 2b01 	ldrb.w	r2, [r3], #1
90026a58:	b10a      	cbz	r2, 90026a5e <_vfiprintf_r+0x86>
90026a5a:	2a25      	cmp	r2, #37	; 0x25
90026a5c:	d1f9      	bne.n	90026a52 <_vfiprintf_r+0x7a>
90026a5e:	ebba 0b04 	subs.w	fp, sl, r4
90026a62:	d00b      	beq.n	90026a7c <_vfiprintf_r+0xa4>
90026a64:	465b      	mov	r3, fp
90026a66:	4622      	mov	r2, r4
90026a68:	4629      	mov	r1, r5
90026a6a:	4630      	mov	r0, r6
90026a6c:	f7ff ffa1 	bl	900269b2 <__sfputs_r>
90026a70:	3001      	adds	r0, #1
90026a72:	f000 80a9 	beq.w	90026bc8 <_vfiprintf_r+0x1f0>
90026a76:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026a78:	445a      	add	r2, fp
90026a7a:	9209      	str	r2, [sp, #36]	; 0x24
90026a7c:	f89a 3000 	ldrb.w	r3, [sl]
90026a80:	2b00      	cmp	r3, #0
90026a82:	f000 80a1 	beq.w	90026bc8 <_vfiprintf_r+0x1f0>
90026a86:	2300      	movs	r3, #0
90026a88:	f04f 32ff 	mov.w	r2, #4294967295
90026a8c:	e9cd 2305 	strd	r2, r3, [sp, #20]
90026a90:	f10a 0a01 	add.w	sl, sl, #1
90026a94:	9304      	str	r3, [sp, #16]
90026a96:	9307      	str	r3, [sp, #28]
90026a98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90026a9c:	931a      	str	r3, [sp, #104]	; 0x68
90026a9e:	4654      	mov	r4, sl
90026aa0:	2205      	movs	r2, #5
90026aa2:	f814 1b01 	ldrb.w	r1, [r4], #1
90026aa6:	4854      	ldr	r0, [pc, #336]	; (90026bf8 <_vfiprintf_r+0x220>)
90026aa8:	f7d9 fc1a 	bl	900002e0 <memchr>
90026aac:	9a04      	ldr	r2, [sp, #16]
90026aae:	b9d8      	cbnz	r0, 90026ae8 <_vfiprintf_r+0x110>
90026ab0:	06d1      	lsls	r1, r2, #27
90026ab2:	bf44      	itt	mi
90026ab4:	2320      	movmi	r3, #32
90026ab6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026aba:	0713      	lsls	r3, r2, #28
90026abc:	bf44      	itt	mi
90026abe:	232b      	movmi	r3, #43	; 0x2b
90026ac0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026ac4:	f89a 3000 	ldrb.w	r3, [sl]
90026ac8:	2b2a      	cmp	r3, #42	; 0x2a
90026aca:	d015      	beq.n	90026af8 <_vfiprintf_r+0x120>
90026acc:	9a07      	ldr	r2, [sp, #28]
90026ace:	4654      	mov	r4, sl
90026ad0:	2000      	movs	r0, #0
90026ad2:	f04f 0c0a 	mov.w	ip, #10
90026ad6:	4621      	mov	r1, r4
90026ad8:	f811 3b01 	ldrb.w	r3, [r1], #1
90026adc:	3b30      	subs	r3, #48	; 0x30
90026ade:	2b09      	cmp	r3, #9
90026ae0:	d94d      	bls.n	90026b7e <_vfiprintf_r+0x1a6>
90026ae2:	b1b0      	cbz	r0, 90026b12 <_vfiprintf_r+0x13a>
90026ae4:	9207      	str	r2, [sp, #28]
90026ae6:	e014      	b.n	90026b12 <_vfiprintf_r+0x13a>
90026ae8:	eba0 0308 	sub.w	r3, r0, r8
90026aec:	fa09 f303 	lsl.w	r3, r9, r3
90026af0:	4313      	orrs	r3, r2
90026af2:	9304      	str	r3, [sp, #16]
90026af4:	46a2      	mov	sl, r4
90026af6:	e7d2      	b.n	90026a9e <_vfiprintf_r+0xc6>
90026af8:	9b03      	ldr	r3, [sp, #12]
90026afa:	1d19      	adds	r1, r3, #4
90026afc:	681b      	ldr	r3, [r3, #0]
90026afe:	9103      	str	r1, [sp, #12]
90026b00:	2b00      	cmp	r3, #0
90026b02:	bfbb      	ittet	lt
90026b04:	425b      	neglt	r3, r3
90026b06:	f042 0202 	orrlt.w	r2, r2, #2
90026b0a:	9307      	strge	r3, [sp, #28]
90026b0c:	9307      	strlt	r3, [sp, #28]
90026b0e:	bfb8      	it	lt
90026b10:	9204      	strlt	r2, [sp, #16]
90026b12:	7823      	ldrb	r3, [r4, #0]
90026b14:	2b2e      	cmp	r3, #46	; 0x2e
90026b16:	d10c      	bne.n	90026b32 <_vfiprintf_r+0x15a>
90026b18:	7863      	ldrb	r3, [r4, #1]
90026b1a:	2b2a      	cmp	r3, #42	; 0x2a
90026b1c:	d134      	bne.n	90026b88 <_vfiprintf_r+0x1b0>
90026b1e:	9b03      	ldr	r3, [sp, #12]
90026b20:	1d1a      	adds	r2, r3, #4
90026b22:	681b      	ldr	r3, [r3, #0]
90026b24:	9203      	str	r2, [sp, #12]
90026b26:	2b00      	cmp	r3, #0
90026b28:	bfb8      	it	lt
90026b2a:	f04f 33ff 	movlt.w	r3, #4294967295
90026b2e:	3402      	adds	r4, #2
90026b30:	9305      	str	r3, [sp, #20]
90026b32:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90026c08 <_vfiprintf_r+0x230>
90026b36:	7821      	ldrb	r1, [r4, #0]
90026b38:	2203      	movs	r2, #3
90026b3a:	4650      	mov	r0, sl
90026b3c:	f7d9 fbd0 	bl	900002e0 <memchr>
90026b40:	b138      	cbz	r0, 90026b52 <_vfiprintf_r+0x17a>
90026b42:	9b04      	ldr	r3, [sp, #16]
90026b44:	eba0 000a 	sub.w	r0, r0, sl
90026b48:	2240      	movs	r2, #64	; 0x40
90026b4a:	4082      	lsls	r2, r0
90026b4c:	4313      	orrs	r3, r2
90026b4e:	3401      	adds	r4, #1
90026b50:	9304      	str	r3, [sp, #16]
90026b52:	f814 1b01 	ldrb.w	r1, [r4], #1
90026b56:	4829      	ldr	r0, [pc, #164]	; (90026bfc <_vfiprintf_r+0x224>)
90026b58:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90026b5c:	2206      	movs	r2, #6
90026b5e:	f7d9 fbbf 	bl	900002e0 <memchr>
90026b62:	2800      	cmp	r0, #0
90026b64:	d03f      	beq.n	90026be6 <_vfiprintf_r+0x20e>
90026b66:	4b26      	ldr	r3, [pc, #152]	; (90026c00 <_vfiprintf_r+0x228>)
90026b68:	bb1b      	cbnz	r3, 90026bb2 <_vfiprintf_r+0x1da>
90026b6a:	9b03      	ldr	r3, [sp, #12]
90026b6c:	3307      	adds	r3, #7
90026b6e:	f023 0307 	bic.w	r3, r3, #7
90026b72:	3308      	adds	r3, #8
90026b74:	9303      	str	r3, [sp, #12]
90026b76:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026b78:	443b      	add	r3, r7
90026b7a:	9309      	str	r3, [sp, #36]	; 0x24
90026b7c:	e768      	b.n	90026a50 <_vfiprintf_r+0x78>
90026b7e:	fb0c 3202 	mla	r2, ip, r2, r3
90026b82:	460c      	mov	r4, r1
90026b84:	2001      	movs	r0, #1
90026b86:	e7a6      	b.n	90026ad6 <_vfiprintf_r+0xfe>
90026b88:	2300      	movs	r3, #0
90026b8a:	3401      	adds	r4, #1
90026b8c:	9305      	str	r3, [sp, #20]
90026b8e:	4619      	mov	r1, r3
90026b90:	f04f 0c0a 	mov.w	ip, #10
90026b94:	4620      	mov	r0, r4
90026b96:	f810 2b01 	ldrb.w	r2, [r0], #1
90026b9a:	3a30      	subs	r2, #48	; 0x30
90026b9c:	2a09      	cmp	r2, #9
90026b9e:	d903      	bls.n	90026ba8 <_vfiprintf_r+0x1d0>
90026ba0:	2b00      	cmp	r3, #0
90026ba2:	d0c6      	beq.n	90026b32 <_vfiprintf_r+0x15a>
90026ba4:	9105      	str	r1, [sp, #20]
90026ba6:	e7c4      	b.n	90026b32 <_vfiprintf_r+0x15a>
90026ba8:	fb0c 2101 	mla	r1, ip, r1, r2
90026bac:	4604      	mov	r4, r0
90026bae:	2301      	movs	r3, #1
90026bb0:	e7f0      	b.n	90026b94 <_vfiprintf_r+0x1bc>
90026bb2:	ab03      	add	r3, sp, #12
90026bb4:	9300      	str	r3, [sp, #0]
90026bb6:	462a      	mov	r2, r5
90026bb8:	4b12      	ldr	r3, [pc, #72]	; (90026c04 <_vfiprintf_r+0x22c>)
90026bba:	a904      	add	r1, sp, #16
90026bbc:	4630      	mov	r0, r6
90026bbe:	f3af 8000 	nop.w
90026bc2:	4607      	mov	r7, r0
90026bc4:	1c78      	adds	r0, r7, #1
90026bc6:	d1d6      	bne.n	90026b76 <_vfiprintf_r+0x19e>
90026bc8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026bca:	07d9      	lsls	r1, r3, #31
90026bcc:	d405      	bmi.n	90026bda <_vfiprintf_r+0x202>
90026bce:	89ab      	ldrh	r3, [r5, #12]
90026bd0:	059a      	lsls	r2, r3, #22
90026bd2:	d402      	bmi.n	90026bda <_vfiprintf_r+0x202>
90026bd4:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026bd6:	f7ff fe1b 	bl	90026810 <__retarget_lock_release_recursive>
90026bda:	89ab      	ldrh	r3, [r5, #12]
90026bdc:	065b      	lsls	r3, r3, #25
90026bde:	f53f af1d 	bmi.w	90026a1c <_vfiprintf_r+0x44>
90026be2:	9809      	ldr	r0, [sp, #36]	; 0x24
90026be4:	e71c      	b.n	90026a20 <_vfiprintf_r+0x48>
90026be6:	ab03      	add	r3, sp, #12
90026be8:	9300      	str	r3, [sp, #0]
90026bea:	462a      	mov	r2, r5
90026bec:	4b05      	ldr	r3, [pc, #20]	; (90026c04 <_vfiprintf_r+0x22c>)
90026bee:	a904      	add	r1, sp, #16
90026bf0:	4630      	mov	r0, r6
90026bf2:	f000 f879 	bl	90026ce8 <_printf_i>
90026bf6:	e7e4      	b.n	90026bc2 <_vfiprintf_r+0x1ea>
90026bf8:	9002aa2c 	.word	0x9002aa2c
90026bfc:	9002aa36 	.word	0x9002aa36
90026c00:	00000000 	.word	0x00000000
90026c04:	900269b3 	.word	0x900269b3
90026c08:	9002aa32 	.word	0x9002aa32

90026c0c <_printf_common>:
90026c0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026c10:	4616      	mov	r6, r2
90026c12:	4699      	mov	r9, r3
90026c14:	688a      	ldr	r2, [r1, #8]
90026c16:	690b      	ldr	r3, [r1, #16]
90026c18:	f8dd 8020 	ldr.w	r8, [sp, #32]
90026c1c:	4293      	cmp	r3, r2
90026c1e:	bfb8      	it	lt
90026c20:	4613      	movlt	r3, r2
90026c22:	6033      	str	r3, [r6, #0]
90026c24:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90026c28:	4607      	mov	r7, r0
90026c2a:	460c      	mov	r4, r1
90026c2c:	b10a      	cbz	r2, 90026c32 <_printf_common+0x26>
90026c2e:	3301      	adds	r3, #1
90026c30:	6033      	str	r3, [r6, #0]
90026c32:	6823      	ldr	r3, [r4, #0]
90026c34:	0699      	lsls	r1, r3, #26
90026c36:	bf42      	ittt	mi
90026c38:	6833      	ldrmi	r3, [r6, #0]
90026c3a:	3302      	addmi	r3, #2
90026c3c:	6033      	strmi	r3, [r6, #0]
90026c3e:	6825      	ldr	r5, [r4, #0]
90026c40:	f015 0506 	ands.w	r5, r5, #6
90026c44:	d106      	bne.n	90026c54 <_printf_common+0x48>
90026c46:	f104 0a19 	add.w	sl, r4, #25
90026c4a:	68e3      	ldr	r3, [r4, #12]
90026c4c:	6832      	ldr	r2, [r6, #0]
90026c4e:	1a9b      	subs	r3, r3, r2
90026c50:	42ab      	cmp	r3, r5
90026c52:	dc26      	bgt.n	90026ca2 <_printf_common+0x96>
90026c54:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90026c58:	1e13      	subs	r3, r2, #0
90026c5a:	6822      	ldr	r2, [r4, #0]
90026c5c:	bf18      	it	ne
90026c5e:	2301      	movne	r3, #1
90026c60:	0692      	lsls	r2, r2, #26
90026c62:	d42b      	bmi.n	90026cbc <_printf_common+0xb0>
90026c64:	f104 0243 	add.w	r2, r4, #67	; 0x43
90026c68:	4649      	mov	r1, r9
90026c6a:	4638      	mov	r0, r7
90026c6c:	47c0      	blx	r8
90026c6e:	3001      	adds	r0, #1
90026c70:	d01e      	beq.n	90026cb0 <_printf_common+0xa4>
90026c72:	6823      	ldr	r3, [r4, #0]
90026c74:	6922      	ldr	r2, [r4, #16]
90026c76:	f003 0306 	and.w	r3, r3, #6
90026c7a:	2b04      	cmp	r3, #4
90026c7c:	bf02      	ittt	eq
90026c7e:	68e5      	ldreq	r5, [r4, #12]
90026c80:	6833      	ldreq	r3, [r6, #0]
90026c82:	1aed      	subeq	r5, r5, r3
90026c84:	68a3      	ldr	r3, [r4, #8]
90026c86:	bf0c      	ite	eq
90026c88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90026c8c:	2500      	movne	r5, #0
90026c8e:	4293      	cmp	r3, r2
90026c90:	bfc4      	itt	gt
90026c92:	1a9b      	subgt	r3, r3, r2
90026c94:	18ed      	addgt	r5, r5, r3
90026c96:	2600      	movs	r6, #0
90026c98:	341a      	adds	r4, #26
90026c9a:	42b5      	cmp	r5, r6
90026c9c:	d11a      	bne.n	90026cd4 <_printf_common+0xc8>
90026c9e:	2000      	movs	r0, #0
90026ca0:	e008      	b.n	90026cb4 <_printf_common+0xa8>
90026ca2:	2301      	movs	r3, #1
90026ca4:	4652      	mov	r2, sl
90026ca6:	4649      	mov	r1, r9
90026ca8:	4638      	mov	r0, r7
90026caa:	47c0      	blx	r8
90026cac:	3001      	adds	r0, #1
90026cae:	d103      	bne.n	90026cb8 <_printf_common+0xac>
90026cb0:	f04f 30ff 	mov.w	r0, #4294967295
90026cb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026cb8:	3501      	adds	r5, #1
90026cba:	e7c6      	b.n	90026c4a <_printf_common+0x3e>
90026cbc:	18e1      	adds	r1, r4, r3
90026cbe:	1c5a      	adds	r2, r3, #1
90026cc0:	2030      	movs	r0, #48	; 0x30
90026cc2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90026cc6:	4422      	add	r2, r4
90026cc8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90026ccc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90026cd0:	3302      	adds	r3, #2
90026cd2:	e7c7      	b.n	90026c64 <_printf_common+0x58>
90026cd4:	2301      	movs	r3, #1
90026cd6:	4622      	mov	r2, r4
90026cd8:	4649      	mov	r1, r9
90026cda:	4638      	mov	r0, r7
90026cdc:	47c0      	blx	r8
90026cde:	3001      	adds	r0, #1
90026ce0:	d0e6      	beq.n	90026cb0 <_printf_common+0xa4>
90026ce2:	3601      	adds	r6, #1
90026ce4:	e7d9      	b.n	90026c9a <_printf_common+0x8e>
	...

90026ce8 <_printf_i>:
90026ce8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90026cec:	7e0f      	ldrb	r7, [r1, #24]
90026cee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026cf0:	2f78      	cmp	r7, #120	; 0x78
90026cf2:	4691      	mov	r9, r2
90026cf4:	4680      	mov	r8, r0
90026cf6:	460c      	mov	r4, r1
90026cf8:	469a      	mov	sl, r3
90026cfa:	f101 0243 	add.w	r2, r1, #67	; 0x43
90026cfe:	d807      	bhi.n	90026d10 <_printf_i+0x28>
90026d00:	2f62      	cmp	r7, #98	; 0x62
90026d02:	d80a      	bhi.n	90026d1a <_printf_i+0x32>
90026d04:	2f00      	cmp	r7, #0
90026d06:	f000 80d4 	beq.w	90026eb2 <_printf_i+0x1ca>
90026d0a:	2f58      	cmp	r7, #88	; 0x58
90026d0c:	f000 80c0 	beq.w	90026e90 <_printf_i+0x1a8>
90026d10:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026d14:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90026d18:	e03a      	b.n	90026d90 <_printf_i+0xa8>
90026d1a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90026d1e:	2b15      	cmp	r3, #21
90026d20:	d8f6      	bhi.n	90026d10 <_printf_i+0x28>
90026d22:	a101      	add	r1, pc, #4	; (adr r1, 90026d28 <_printf_i+0x40>)
90026d24:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90026d28:	90026d81 	.word	0x90026d81
90026d2c:	90026d95 	.word	0x90026d95
90026d30:	90026d11 	.word	0x90026d11
90026d34:	90026d11 	.word	0x90026d11
90026d38:	90026d11 	.word	0x90026d11
90026d3c:	90026d11 	.word	0x90026d11
90026d40:	90026d95 	.word	0x90026d95
90026d44:	90026d11 	.word	0x90026d11
90026d48:	90026d11 	.word	0x90026d11
90026d4c:	90026d11 	.word	0x90026d11
90026d50:	90026d11 	.word	0x90026d11
90026d54:	90026e99 	.word	0x90026e99
90026d58:	90026dc1 	.word	0x90026dc1
90026d5c:	90026e53 	.word	0x90026e53
90026d60:	90026d11 	.word	0x90026d11
90026d64:	90026d11 	.word	0x90026d11
90026d68:	90026ebb 	.word	0x90026ebb
90026d6c:	90026d11 	.word	0x90026d11
90026d70:	90026dc1 	.word	0x90026dc1
90026d74:	90026d11 	.word	0x90026d11
90026d78:	90026d11 	.word	0x90026d11
90026d7c:	90026e5b 	.word	0x90026e5b
90026d80:	682b      	ldr	r3, [r5, #0]
90026d82:	1d1a      	adds	r2, r3, #4
90026d84:	681b      	ldr	r3, [r3, #0]
90026d86:	602a      	str	r2, [r5, #0]
90026d88:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026d8c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90026d90:	2301      	movs	r3, #1
90026d92:	e09f      	b.n	90026ed4 <_printf_i+0x1ec>
90026d94:	6820      	ldr	r0, [r4, #0]
90026d96:	682b      	ldr	r3, [r5, #0]
90026d98:	0607      	lsls	r7, r0, #24
90026d9a:	f103 0104 	add.w	r1, r3, #4
90026d9e:	6029      	str	r1, [r5, #0]
90026da0:	d501      	bpl.n	90026da6 <_printf_i+0xbe>
90026da2:	681e      	ldr	r6, [r3, #0]
90026da4:	e003      	b.n	90026dae <_printf_i+0xc6>
90026da6:	0646      	lsls	r6, r0, #25
90026da8:	d5fb      	bpl.n	90026da2 <_printf_i+0xba>
90026daa:	f9b3 6000 	ldrsh.w	r6, [r3]
90026dae:	2e00      	cmp	r6, #0
90026db0:	da03      	bge.n	90026dba <_printf_i+0xd2>
90026db2:	232d      	movs	r3, #45	; 0x2d
90026db4:	4276      	negs	r6, r6
90026db6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026dba:	485a      	ldr	r0, [pc, #360]	; (90026f24 <_printf_i+0x23c>)
90026dbc:	230a      	movs	r3, #10
90026dbe:	e012      	b.n	90026de6 <_printf_i+0xfe>
90026dc0:	682b      	ldr	r3, [r5, #0]
90026dc2:	6820      	ldr	r0, [r4, #0]
90026dc4:	1d19      	adds	r1, r3, #4
90026dc6:	6029      	str	r1, [r5, #0]
90026dc8:	0605      	lsls	r5, r0, #24
90026dca:	d501      	bpl.n	90026dd0 <_printf_i+0xe8>
90026dcc:	681e      	ldr	r6, [r3, #0]
90026dce:	e002      	b.n	90026dd6 <_printf_i+0xee>
90026dd0:	0641      	lsls	r1, r0, #25
90026dd2:	d5fb      	bpl.n	90026dcc <_printf_i+0xe4>
90026dd4:	881e      	ldrh	r6, [r3, #0]
90026dd6:	4853      	ldr	r0, [pc, #332]	; (90026f24 <_printf_i+0x23c>)
90026dd8:	2f6f      	cmp	r7, #111	; 0x6f
90026dda:	bf0c      	ite	eq
90026ddc:	2308      	moveq	r3, #8
90026dde:	230a      	movne	r3, #10
90026de0:	2100      	movs	r1, #0
90026de2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
90026de6:	6865      	ldr	r5, [r4, #4]
90026de8:	60a5      	str	r5, [r4, #8]
90026dea:	2d00      	cmp	r5, #0
90026dec:	bfa2      	ittt	ge
90026dee:	6821      	ldrge	r1, [r4, #0]
90026df0:	f021 0104 	bicge.w	r1, r1, #4
90026df4:	6021      	strge	r1, [r4, #0]
90026df6:	b90e      	cbnz	r6, 90026dfc <_printf_i+0x114>
90026df8:	2d00      	cmp	r5, #0
90026dfa:	d04b      	beq.n	90026e94 <_printf_i+0x1ac>
90026dfc:	4615      	mov	r5, r2
90026dfe:	fbb6 f1f3 	udiv	r1, r6, r3
90026e02:	fb03 6711 	mls	r7, r3, r1, r6
90026e06:	5dc7      	ldrb	r7, [r0, r7]
90026e08:	f805 7d01 	strb.w	r7, [r5, #-1]!
90026e0c:	4637      	mov	r7, r6
90026e0e:	42bb      	cmp	r3, r7
90026e10:	460e      	mov	r6, r1
90026e12:	d9f4      	bls.n	90026dfe <_printf_i+0x116>
90026e14:	2b08      	cmp	r3, #8
90026e16:	d10b      	bne.n	90026e30 <_printf_i+0x148>
90026e18:	6823      	ldr	r3, [r4, #0]
90026e1a:	07de      	lsls	r6, r3, #31
90026e1c:	d508      	bpl.n	90026e30 <_printf_i+0x148>
90026e1e:	6923      	ldr	r3, [r4, #16]
90026e20:	6861      	ldr	r1, [r4, #4]
90026e22:	4299      	cmp	r1, r3
90026e24:	bfde      	ittt	le
90026e26:	2330      	movle	r3, #48	; 0x30
90026e28:	f805 3c01 	strble.w	r3, [r5, #-1]
90026e2c:	f105 35ff 	addle.w	r5, r5, #4294967295
90026e30:	1b52      	subs	r2, r2, r5
90026e32:	6122      	str	r2, [r4, #16]
90026e34:	f8cd a000 	str.w	sl, [sp]
90026e38:	464b      	mov	r3, r9
90026e3a:	aa03      	add	r2, sp, #12
90026e3c:	4621      	mov	r1, r4
90026e3e:	4640      	mov	r0, r8
90026e40:	f7ff fee4 	bl	90026c0c <_printf_common>
90026e44:	3001      	adds	r0, #1
90026e46:	d14a      	bne.n	90026ede <_printf_i+0x1f6>
90026e48:	f04f 30ff 	mov.w	r0, #4294967295
90026e4c:	b004      	add	sp, #16
90026e4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026e52:	6823      	ldr	r3, [r4, #0]
90026e54:	f043 0320 	orr.w	r3, r3, #32
90026e58:	6023      	str	r3, [r4, #0]
90026e5a:	4833      	ldr	r0, [pc, #204]	; (90026f28 <_printf_i+0x240>)
90026e5c:	2778      	movs	r7, #120	; 0x78
90026e5e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
90026e62:	6823      	ldr	r3, [r4, #0]
90026e64:	6829      	ldr	r1, [r5, #0]
90026e66:	061f      	lsls	r7, r3, #24
90026e68:	f851 6b04 	ldr.w	r6, [r1], #4
90026e6c:	d402      	bmi.n	90026e74 <_printf_i+0x18c>
90026e6e:	065f      	lsls	r7, r3, #25
90026e70:	bf48      	it	mi
90026e72:	b2b6      	uxthmi	r6, r6
90026e74:	07df      	lsls	r7, r3, #31
90026e76:	bf48      	it	mi
90026e78:	f043 0320 	orrmi.w	r3, r3, #32
90026e7c:	6029      	str	r1, [r5, #0]
90026e7e:	bf48      	it	mi
90026e80:	6023      	strmi	r3, [r4, #0]
90026e82:	b91e      	cbnz	r6, 90026e8c <_printf_i+0x1a4>
90026e84:	6823      	ldr	r3, [r4, #0]
90026e86:	f023 0320 	bic.w	r3, r3, #32
90026e8a:	6023      	str	r3, [r4, #0]
90026e8c:	2310      	movs	r3, #16
90026e8e:	e7a7      	b.n	90026de0 <_printf_i+0xf8>
90026e90:	4824      	ldr	r0, [pc, #144]	; (90026f24 <_printf_i+0x23c>)
90026e92:	e7e4      	b.n	90026e5e <_printf_i+0x176>
90026e94:	4615      	mov	r5, r2
90026e96:	e7bd      	b.n	90026e14 <_printf_i+0x12c>
90026e98:	682b      	ldr	r3, [r5, #0]
90026e9a:	6826      	ldr	r6, [r4, #0]
90026e9c:	6961      	ldr	r1, [r4, #20]
90026e9e:	1d18      	adds	r0, r3, #4
90026ea0:	6028      	str	r0, [r5, #0]
90026ea2:	0635      	lsls	r5, r6, #24
90026ea4:	681b      	ldr	r3, [r3, #0]
90026ea6:	d501      	bpl.n	90026eac <_printf_i+0x1c4>
90026ea8:	6019      	str	r1, [r3, #0]
90026eaa:	e002      	b.n	90026eb2 <_printf_i+0x1ca>
90026eac:	0670      	lsls	r0, r6, #25
90026eae:	d5fb      	bpl.n	90026ea8 <_printf_i+0x1c0>
90026eb0:	8019      	strh	r1, [r3, #0]
90026eb2:	2300      	movs	r3, #0
90026eb4:	6123      	str	r3, [r4, #16]
90026eb6:	4615      	mov	r5, r2
90026eb8:	e7bc      	b.n	90026e34 <_printf_i+0x14c>
90026eba:	682b      	ldr	r3, [r5, #0]
90026ebc:	1d1a      	adds	r2, r3, #4
90026ebe:	602a      	str	r2, [r5, #0]
90026ec0:	681d      	ldr	r5, [r3, #0]
90026ec2:	6862      	ldr	r2, [r4, #4]
90026ec4:	2100      	movs	r1, #0
90026ec6:	4628      	mov	r0, r5
90026ec8:	f7d9 fa0a 	bl	900002e0 <memchr>
90026ecc:	b108      	cbz	r0, 90026ed2 <_printf_i+0x1ea>
90026ece:	1b40      	subs	r0, r0, r5
90026ed0:	6060      	str	r0, [r4, #4]
90026ed2:	6863      	ldr	r3, [r4, #4]
90026ed4:	6123      	str	r3, [r4, #16]
90026ed6:	2300      	movs	r3, #0
90026ed8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026edc:	e7aa      	b.n	90026e34 <_printf_i+0x14c>
90026ede:	6923      	ldr	r3, [r4, #16]
90026ee0:	462a      	mov	r2, r5
90026ee2:	4649      	mov	r1, r9
90026ee4:	4640      	mov	r0, r8
90026ee6:	47d0      	blx	sl
90026ee8:	3001      	adds	r0, #1
90026eea:	d0ad      	beq.n	90026e48 <_printf_i+0x160>
90026eec:	6823      	ldr	r3, [r4, #0]
90026eee:	079b      	lsls	r3, r3, #30
90026ef0:	d413      	bmi.n	90026f1a <_printf_i+0x232>
90026ef2:	68e0      	ldr	r0, [r4, #12]
90026ef4:	9b03      	ldr	r3, [sp, #12]
90026ef6:	4298      	cmp	r0, r3
90026ef8:	bfb8      	it	lt
90026efa:	4618      	movlt	r0, r3
90026efc:	e7a6      	b.n	90026e4c <_printf_i+0x164>
90026efe:	2301      	movs	r3, #1
90026f00:	4632      	mov	r2, r6
90026f02:	4649      	mov	r1, r9
90026f04:	4640      	mov	r0, r8
90026f06:	47d0      	blx	sl
90026f08:	3001      	adds	r0, #1
90026f0a:	d09d      	beq.n	90026e48 <_printf_i+0x160>
90026f0c:	3501      	adds	r5, #1
90026f0e:	68e3      	ldr	r3, [r4, #12]
90026f10:	9903      	ldr	r1, [sp, #12]
90026f12:	1a5b      	subs	r3, r3, r1
90026f14:	42ab      	cmp	r3, r5
90026f16:	dcf2      	bgt.n	90026efe <_printf_i+0x216>
90026f18:	e7eb      	b.n	90026ef2 <_printf_i+0x20a>
90026f1a:	2500      	movs	r5, #0
90026f1c:	f104 0619 	add.w	r6, r4, #25
90026f20:	e7f5      	b.n	90026f0e <_printf_i+0x226>
90026f22:	bf00      	nop
90026f24:	9002aa3d 	.word	0x9002aa3d
90026f28:	9002aa4e 	.word	0x9002aa4e

90026f2c <__sflush_r>:
90026f2c:	898a      	ldrh	r2, [r1, #12]
90026f2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90026f32:	4605      	mov	r5, r0
90026f34:	0710      	lsls	r0, r2, #28
90026f36:	460c      	mov	r4, r1
90026f38:	d458      	bmi.n	90026fec <__sflush_r+0xc0>
90026f3a:	684b      	ldr	r3, [r1, #4]
90026f3c:	2b00      	cmp	r3, #0
90026f3e:	dc05      	bgt.n	90026f4c <__sflush_r+0x20>
90026f40:	6c0b      	ldr	r3, [r1, #64]	; 0x40
90026f42:	2b00      	cmp	r3, #0
90026f44:	dc02      	bgt.n	90026f4c <__sflush_r+0x20>
90026f46:	2000      	movs	r0, #0
90026f48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026f4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90026f4e:	2e00      	cmp	r6, #0
90026f50:	d0f9      	beq.n	90026f46 <__sflush_r+0x1a>
90026f52:	2300      	movs	r3, #0
90026f54:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
90026f58:	682f      	ldr	r7, [r5, #0]
90026f5a:	6a21      	ldr	r1, [r4, #32]
90026f5c:	602b      	str	r3, [r5, #0]
90026f5e:	d032      	beq.n	90026fc6 <__sflush_r+0x9a>
90026f60:	6d60      	ldr	r0, [r4, #84]	; 0x54
90026f62:	89a3      	ldrh	r3, [r4, #12]
90026f64:	075a      	lsls	r2, r3, #29
90026f66:	d505      	bpl.n	90026f74 <__sflush_r+0x48>
90026f68:	6863      	ldr	r3, [r4, #4]
90026f6a:	1ac0      	subs	r0, r0, r3
90026f6c:	6b63      	ldr	r3, [r4, #52]	; 0x34
90026f6e:	b10b      	cbz	r3, 90026f74 <__sflush_r+0x48>
90026f70:	6c23      	ldr	r3, [r4, #64]	; 0x40
90026f72:	1ac0      	subs	r0, r0, r3
90026f74:	2300      	movs	r3, #0
90026f76:	4602      	mov	r2, r0
90026f78:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90026f7a:	6a21      	ldr	r1, [r4, #32]
90026f7c:	4628      	mov	r0, r5
90026f7e:	47b0      	blx	r6
90026f80:	1c43      	adds	r3, r0, #1
90026f82:	89a3      	ldrh	r3, [r4, #12]
90026f84:	d106      	bne.n	90026f94 <__sflush_r+0x68>
90026f86:	6829      	ldr	r1, [r5, #0]
90026f88:	291d      	cmp	r1, #29
90026f8a:	d82b      	bhi.n	90026fe4 <__sflush_r+0xb8>
90026f8c:	4a29      	ldr	r2, [pc, #164]	; (90027034 <__sflush_r+0x108>)
90026f8e:	410a      	asrs	r2, r1
90026f90:	07d6      	lsls	r6, r2, #31
90026f92:	d427      	bmi.n	90026fe4 <__sflush_r+0xb8>
90026f94:	2200      	movs	r2, #0
90026f96:	6062      	str	r2, [r4, #4]
90026f98:	04d9      	lsls	r1, r3, #19
90026f9a:	6922      	ldr	r2, [r4, #16]
90026f9c:	6022      	str	r2, [r4, #0]
90026f9e:	d504      	bpl.n	90026faa <__sflush_r+0x7e>
90026fa0:	1c42      	adds	r2, r0, #1
90026fa2:	d101      	bne.n	90026fa8 <__sflush_r+0x7c>
90026fa4:	682b      	ldr	r3, [r5, #0]
90026fa6:	b903      	cbnz	r3, 90026faa <__sflush_r+0x7e>
90026fa8:	6560      	str	r0, [r4, #84]	; 0x54
90026faa:	6b61      	ldr	r1, [r4, #52]	; 0x34
90026fac:	602f      	str	r7, [r5, #0]
90026fae:	2900      	cmp	r1, #0
90026fb0:	d0c9      	beq.n	90026f46 <__sflush_r+0x1a>
90026fb2:	f104 0344 	add.w	r3, r4, #68	; 0x44
90026fb6:	4299      	cmp	r1, r3
90026fb8:	d002      	beq.n	90026fc0 <__sflush_r+0x94>
90026fba:	4628      	mov	r0, r5
90026fbc:	f7ff fc96 	bl	900268ec <_free_r>
90026fc0:	2000      	movs	r0, #0
90026fc2:	6360      	str	r0, [r4, #52]	; 0x34
90026fc4:	e7c0      	b.n	90026f48 <__sflush_r+0x1c>
90026fc6:	2301      	movs	r3, #1
90026fc8:	4628      	mov	r0, r5
90026fca:	47b0      	blx	r6
90026fcc:	1c41      	adds	r1, r0, #1
90026fce:	d1c8      	bne.n	90026f62 <__sflush_r+0x36>
90026fd0:	682b      	ldr	r3, [r5, #0]
90026fd2:	2b00      	cmp	r3, #0
90026fd4:	d0c5      	beq.n	90026f62 <__sflush_r+0x36>
90026fd6:	2b1d      	cmp	r3, #29
90026fd8:	d001      	beq.n	90026fde <__sflush_r+0xb2>
90026fda:	2b16      	cmp	r3, #22
90026fdc:	d101      	bne.n	90026fe2 <__sflush_r+0xb6>
90026fde:	602f      	str	r7, [r5, #0]
90026fe0:	e7b1      	b.n	90026f46 <__sflush_r+0x1a>
90026fe2:	89a3      	ldrh	r3, [r4, #12]
90026fe4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90026fe8:	81a3      	strh	r3, [r4, #12]
90026fea:	e7ad      	b.n	90026f48 <__sflush_r+0x1c>
90026fec:	690f      	ldr	r7, [r1, #16]
90026fee:	2f00      	cmp	r7, #0
90026ff0:	d0a9      	beq.n	90026f46 <__sflush_r+0x1a>
90026ff2:	0793      	lsls	r3, r2, #30
90026ff4:	680e      	ldr	r6, [r1, #0]
90026ff6:	bf08      	it	eq
90026ff8:	694b      	ldreq	r3, [r1, #20]
90026ffa:	600f      	str	r7, [r1, #0]
90026ffc:	bf18      	it	ne
90026ffe:	2300      	movne	r3, #0
90027000:	eba6 0807 	sub.w	r8, r6, r7
90027004:	608b      	str	r3, [r1, #8]
90027006:	f1b8 0f00 	cmp.w	r8, #0
9002700a:	dd9c      	ble.n	90026f46 <__sflush_r+0x1a>
9002700c:	6a21      	ldr	r1, [r4, #32]
9002700e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90027010:	4643      	mov	r3, r8
90027012:	463a      	mov	r2, r7
90027014:	4628      	mov	r0, r5
90027016:	47b0      	blx	r6
90027018:	2800      	cmp	r0, #0
9002701a:	dc06      	bgt.n	9002702a <__sflush_r+0xfe>
9002701c:	89a3      	ldrh	r3, [r4, #12]
9002701e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90027022:	81a3      	strh	r3, [r4, #12]
90027024:	f04f 30ff 	mov.w	r0, #4294967295
90027028:	e78e      	b.n	90026f48 <__sflush_r+0x1c>
9002702a:	4407      	add	r7, r0
9002702c:	eba8 0800 	sub.w	r8, r8, r0
90027030:	e7e9      	b.n	90027006 <__sflush_r+0xda>
90027032:	bf00      	nop
90027034:	dfbffffe 	.word	0xdfbffffe

90027038 <_fflush_r>:
90027038:	b538      	push	{r3, r4, r5, lr}
9002703a:	690b      	ldr	r3, [r1, #16]
9002703c:	4605      	mov	r5, r0
9002703e:	460c      	mov	r4, r1
90027040:	b913      	cbnz	r3, 90027048 <_fflush_r+0x10>
90027042:	2500      	movs	r5, #0
90027044:	4628      	mov	r0, r5
90027046:	bd38      	pop	{r3, r4, r5, pc}
90027048:	b118      	cbz	r0, 90027052 <_fflush_r+0x1a>
9002704a:	6a03      	ldr	r3, [r0, #32]
9002704c:	b90b      	cbnz	r3, 90027052 <_fflush_r+0x1a>
9002704e:	f7ff f9df 	bl	90026410 <__sinit>
90027052:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027056:	2b00      	cmp	r3, #0
90027058:	d0f3      	beq.n	90027042 <_fflush_r+0xa>
9002705a:	6e62      	ldr	r2, [r4, #100]	; 0x64
9002705c:	07d0      	lsls	r0, r2, #31
9002705e:	d404      	bmi.n	9002706a <_fflush_r+0x32>
90027060:	0599      	lsls	r1, r3, #22
90027062:	d402      	bmi.n	9002706a <_fflush_r+0x32>
90027064:	6da0      	ldr	r0, [r4, #88]	; 0x58
90027066:	f7ff fbd2 	bl	9002680e <__retarget_lock_acquire_recursive>
9002706a:	4628      	mov	r0, r5
9002706c:	4621      	mov	r1, r4
9002706e:	f7ff ff5d 	bl	90026f2c <__sflush_r>
90027072:	6e63      	ldr	r3, [r4, #100]	; 0x64
90027074:	07da      	lsls	r2, r3, #31
90027076:	4605      	mov	r5, r0
90027078:	d4e4      	bmi.n	90027044 <_fflush_r+0xc>
9002707a:	89a3      	ldrh	r3, [r4, #12]
9002707c:	059b      	lsls	r3, r3, #22
9002707e:	d4e1      	bmi.n	90027044 <_fflush_r+0xc>
90027080:	6da0      	ldr	r0, [r4, #88]	; 0x58
90027082:	f7ff fbc5 	bl	90026810 <__retarget_lock_release_recursive>
90027086:	e7dd      	b.n	90027044 <_fflush_r+0xc>

90027088 <__swhatbuf_r>:
90027088:	b570      	push	{r4, r5, r6, lr}
9002708a:	460c      	mov	r4, r1
9002708c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027090:	2900      	cmp	r1, #0
90027092:	b096      	sub	sp, #88	; 0x58
90027094:	4615      	mov	r5, r2
90027096:	461e      	mov	r6, r3
90027098:	da0d      	bge.n	900270b6 <__swhatbuf_r+0x2e>
9002709a:	89a3      	ldrh	r3, [r4, #12]
9002709c:	f013 0f80 	tst.w	r3, #128	; 0x80
900270a0:	f04f 0100 	mov.w	r1, #0
900270a4:	bf0c      	ite	eq
900270a6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
900270aa:	2340      	movne	r3, #64	; 0x40
900270ac:	2000      	movs	r0, #0
900270ae:	6031      	str	r1, [r6, #0]
900270b0:	602b      	str	r3, [r5, #0]
900270b2:	b016      	add	sp, #88	; 0x58
900270b4:	bd70      	pop	{r4, r5, r6, pc}
900270b6:	466a      	mov	r2, sp
900270b8:	f000 f848 	bl	9002714c <_fstat_r>
900270bc:	2800      	cmp	r0, #0
900270be:	dbec      	blt.n	9002709a <__swhatbuf_r+0x12>
900270c0:	9901      	ldr	r1, [sp, #4]
900270c2:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
900270c6:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
900270ca:	4259      	negs	r1, r3
900270cc:	4159      	adcs	r1, r3
900270ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
900270d2:	e7eb      	b.n	900270ac <__swhatbuf_r+0x24>

900270d4 <__smakebuf_r>:
900270d4:	898b      	ldrh	r3, [r1, #12]
900270d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
900270d8:	079d      	lsls	r5, r3, #30
900270da:	4606      	mov	r6, r0
900270dc:	460c      	mov	r4, r1
900270de:	d507      	bpl.n	900270f0 <__smakebuf_r+0x1c>
900270e0:	f104 0347 	add.w	r3, r4, #71	; 0x47
900270e4:	6023      	str	r3, [r4, #0]
900270e6:	6123      	str	r3, [r4, #16]
900270e8:	2301      	movs	r3, #1
900270ea:	6163      	str	r3, [r4, #20]
900270ec:	b002      	add	sp, #8
900270ee:	bd70      	pop	{r4, r5, r6, pc}
900270f0:	ab01      	add	r3, sp, #4
900270f2:	466a      	mov	r2, sp
900270f4:	f7ff ffc8 	bl	90027088 <__swhatbuf_r>
900270f8:	9900      	ldr	r1, [sp, #0]
900270fa:	4605      	mov	r5, r0
900270fc:	4630      	mov	r0, r6
900270fe:	f7ff f823 	bl	90026148 <_malloc_r>
90027102:	b948      	cbnz	r0, 90027118 <__smakebuf_r+0x44>
90027104:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027108:	059a      	lsls	r2, r3, #22
9002710a:	d4ef      	bmi.n	900270ec <__smakebuf_r+0x18>
9002710c:	f023 0303 	bic.w	r3, r3, #3
90027110:	f043 0302 	orr.w	r3, r3, #2
90027114:	81a3      	strh	r3, [r4, #12]
90027116:	e7e3      	b.n	900270e0 <__smakebuf_r+0xc>
90027118:	89a3      	ldrh	r3, [r4, #12]
9002711a:	6020      	str	r0, [r4, #0]
9002711c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90027120:	81a3      	strh	r3, [r4, #12]
90027122:	9b00      	ldr	r3, [sp, #0]
90027124:	6163      	str	r3, [r4, #20]
90027126:	9b01      	ldr	r3, [sp, #4]
90027128:	6120      	str	r0, [r4, #16]
9002712a:	b15b      	cbz	r3, 90027144 <__smakebuf_r+0x70>
9002712c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90027130:	4630      	mov	r0, r6
90027132:	f000 f81d 	bl	90027170 <_isatty_r>
90027136:	b128      	cbz	r0, 90027144 <__smakebuf_r+0x70>
90027138:	89a3      	ldrh	r3, [r4, #12]
9002713a:	f023 0303 	bic.w	r3, r3, #3
9002713e:	f043 0301 	orr.w	r3, r3, #1
90027142:	81a3      	strh	r3, [r4, #12]
90027144:	89a3      	ldrh	r3, [r4, #12]
90027146:	431d      	orrs	r5, r3
90027148:	81a5      	strh	r5, [r4, #12]
9002714a:	e7cf      	b.n	900270ec <__smakebuf_r+0x18>

9002714c <_fstat_r>:
9002714c:	b538      	push	{r3, r4, r5, lr}
9002714e:	4d07      	ldr	r5, [pc, #28]	; (9002716c <_fstat_r+0x20>)
90027150:	2300      	movs	r3, #0
90027152:	4604      	mov	r4, r0
90027154:	4608      	mov	r0, r1
90027156:	4611      	mov	r1, r2
90027158:	602b      	str	r3, [r5, #0]
9002715a:	f7dc fafb 	bl	90003754 <_fstat>
9002715e:	1c43      	adds	r3, r0, #1
90027160:	d102      	bne.n	90027168 <_fstat_r+0x1c>
90027162:	682b      	ldr	r3, [r5, #0]
90027164:	b103      	cbz	r3, 90027168 <_fstat_r+0x1c>
90027166:	6023      	str	r3, [r4, #0]
90027168:	bd38      	pop	{r3, r4, r5, pc}
9002716a:	bf00      	nop
9002716c:	24024004 	.word	0x24024004

90027170 <_isatty_r>:
90027170:	b538      	push	{r3, r4, r5, lr}
90027172:	4d06      	ldr	r5, [pc, #24]	; (9002718c <_isatty_r+0x1c>)
90027174:	2300      	movs	r3, #0
90027176:	4604      	mov	r4, r0
90027178:	4608      	mov	r0, r1
9002717a:	602b      	str	r3, [r5, #0]
9002717c:	f7dc faf0 	bl	90003760 <_isatty>
90027180:	1c43      	adds	r3, r0, #1
90027182:	d102      	bne.n	9002718a <_isatty_r+0x1a>
90027184:	682b      	ldr	r3, [r5, #0]
90027186:	b103      	cbz	r3, 9002718a <_isatty_r+0x1a>
90027188:	6023      	str	r3, [r4, #0]
9002718a:	bd38      	pop	{r3, r4, r5, pc}
9002718c:	24024004 	.word	0x24024004

90027190 <_sbrk>:
90027190:	4a04      	ldr	r2, [pc, #16]	; (900271a4 <_sbrk+0x14>)
90027192:	6811      	ldr	r1, [r2, #0]
90027194:	4603      	mov	r3, r0
90027196:	b909      	cbnz	r1, 9002719c <_sbrk+0xc>
90027198:	4903      	ldr	r1, [pc, #12]	; (900271a8 <_sbrk+0x18>)
9002719a:	6011      	str	r1, [r2, #0]
9002719c:	6810      	ldr	r0, [r2, #0]
9002719e:	4403      	add	r3, r0
900271a0:	6013      	str	r3, [r2, #0]
900271a2:	4770      	bx	lr
900271a4:	240241a4 	.word	0x240241a4
900271a8:	240241a8 	.word	0x240241a8

900271ac <_init>:
900271ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900271ae:	bf00      	nop
900271b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
900271b2:	bc08      	pop	{r3}
900271b4:	469e      	mov	lr, r3
900271b6:	4770      	bx	lr

900271b8 <_fini>:
900271b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900271ba:	bf00      	nop
900271bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
900271be:	bc08      	pop	{r3}
900271c0:	469e      	mov	lr, r3
900271c2:	4770      	bx	lr
