
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00020000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00027094  900002a0  900002a0  000202a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00003954  90027334  90027334  00047334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000658  9002ac88  9002ac88  0004ac88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002b2e0  9002b2e0  000d718c  2**0
                  CONTENTS
  6 .ARM          00000000  9002b2e0  9002b2e0  000d718c  2**0
                  CONTENTS
  7 .preinit_array 00000000  9002b2e0  9002b2e0  000d718c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002b2e0  9002b2e0  0004b2e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002b2f8  9002b2f8  0004b2f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000154  24000000  9002b300  00050000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00024060  24000158  9002b454  00050158  2**3
                  ALLOC
 12 ._user_heap_stack 00002000  240241b8  9002b454  000541b8  2**0
                  ALLOC
 13 .ARM.attributes 0000002e  00000000  00000000  000d718c  2**0
                  CONTENTS, READONLY
 14 FontFlashSection 00015818  90200000  90200000  00060000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000064  90215818  90215818  00075818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 ExtFlashSection 00061910  9021587c  9021587c  0007587c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  000e0000  2**2
                  ALLOC
 18 Video_RGB_Buffer 00043800  d00bf400  d00bf400  000e0000  2**2
                  ALLOC
 19 .comment      000000c2  00000000  00000000  000d71ba  2**0
                  CONTENTS, READONLY
 20 .debug_line   00073a7c  00000000  00000000  000d727c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005f  00000000  00000000  0014acf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_info   000f7af1  00000000  00000000  0014ad57  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_abbrev 000186b6  00000000  00000000  00242848  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_aranges 000035a0  00000000  00000000  0025af00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    001a1b84  00000000  00000000  0025e4a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_rnglists 0000758a  00000000  00000000  00400024  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_macro  0004863e  00000000  00000000  004075ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_frame  0000acac  00000000  00000000  0044fbec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_loclists 00034453  00000000  00000000  0045a898  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	; (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	; (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	; (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24000158 	.word	0x24000158
900002bc:	00000000 	.word	0x00000000
900002c0:	9002731c 	.word	0x9002731c

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	; (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	; (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	; (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	2400015c 	.word	0x2400015c
900002dc:	9002731c 	.word	0x9002731c

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	; 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	; 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000380:	f8df d034 	ldr.w	sp, [pc, #52]	; 900003b8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000384:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000386:	e003      	b.n	90000390 <LoopCopyDataInit>

90000388 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000388:	4b0c      	ldr	r3, [pc, #48]	; (900003bc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
9000038a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
9000038c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
9000038e:	3104      	adds	r1, #4

90000390 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000390:	480b      	ldr	r0, [pc, #44]	; (900003c0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000392:	4b0c      	ldr	r3, [pc, #48]	; (900003c4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000394:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000396:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000398:	d3f6      	bcc.n	90000388 <CopyDataInit>
  ldr  r2, =_sbss
9000039a:	4a0b      	ldr	r2, [pc, #44]	; (900003c8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
9000039c:	e002      	b.n	900003a4 <LoopFillZerobss>

9000039e <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
9000039e:	2300      	movs	r3, #0
  str  r3, [r2], #4
900003a0:	f842 3b04 	str.w	r3, [r2], #4

900003a4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
900003a4:	4b09      	ldr	r3, [pc, #36]	; (900003cc <LoopFillZerobss+0x28>)
  cmp  r2, r3
900003a6:	429a      	cmp	r2, r3
  bcc  FillZerobss
900003a8:	d3f9      	bcc.n	9000039e <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
900003aa:	f007 fba5 	bl	90007af8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
900003ae:	f026 fac1 	bl	90026934 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
900003b2:	f002 fc43 	bl	90002c3c <main>
  bx  lr    
900003b6:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
900003b8:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
900003bc:	9002b300 	.word	0x9002b300
  ldr  r0, =_sdata
900003c0:	24000000 	.word	0x24000000
  ldr  r3, =_edata
900003c4:	24000154 	.word	0x24000154
  ldr  r2, =_sbss
900003c8:	24000158 	.word	0x24000158
  ldr  r3, = _ebss
900003cc:	240241b8 	.word	0x240241b8

900003d0 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
900003d0:	e7fe      	b.n	900003d0 <ADC3_IRQHandler>
	...

900003d4 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
900003d4:	4770      	bx	lr
900003d6:	bf00      	nop

900003d8 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
900003d8:	4770      	bx	lr
900003da:	bf00      	nop

900003dc <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
900003dc:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
900003de:	f001 ff8b 	bl	900022f8 <touchgfx_components_init>
    touchgfx_init();
}
900003e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
900003e6:	f001 bf0b 	b.w	90002200 <touchgfx_init>
900003ea:	bf00      	nop

900003ec <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
900003ec:	f001 bf86 	b.w	900022fc <touchgfx_taskEntry>

900003f0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
900003f0:	6840      	ldr	r0, [r0, #4]
    }
900003f2:	4770      	bx	lr

900003f4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
900003f4:	6041      	str	r1, [r0, #4]
    }
900003f6:	4770      	bx	lr

900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
900003f8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
900003fc:	4b08      	ldr	r3, [pc, #32]	; (90000420 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
900003fe:	4a09      	ldr	r2, [pc, #36]	; (90000424 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000400:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	; 0xdfc
90000404:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
90000408:	f8c0 1dfc 	str.w	r1, [r0, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
9000040c:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
90000410:	430a      	orrs	r2, r1
90000412:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000416:	681a      	ldr	r2, [r3, #0]
90000418:	f042 0201 	orr.w	r2, r2, #1
9000041c:	601a      	str	r2, [r3, #0]
}
9000041e:	4770      	bx	lr
90000420:	e0001000 	.word	0xe0001000
90000424:	c5acce55 	.word	0xc5acce55

90000428 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000428:	1a51      	subs	r1, r2, r1
9000042a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
9000042e:	fbb1 f0f3 	udiv	r0, r1, r3
90000432:	4770      	bx	lr

90000434 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000434:	4b01      	ldr	r3, [pc, #4]	; (9000043c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000436:	6858      	ldr	r0, [r3, #4]
}
90000438:	4770      	bx	lr
9000043a:	bf00      	nop
9000043c:	e0001000 	.word	0xe0001000

90000440 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000440:	4770      	bx	lr
90000442:	bf00      	nop

90000444 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000444:	b510      	push	{r4, lr}
90000446:	4604      	mov	r4, r0
90000448:	210c      	movs	r1, #12
9000044a:	f025 feb2 	bl	900261b2 <_ZdlPvj>
9000044e:	4620      	mov	r0, r4
90000450:	bd10      	pop	{r4, pc}
90000452:	bf00      	nop

90000454 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000454:	6803      	ldr	r3, [r0, #0]
90000456:	4a0c      	ldr	r2, [pc, #48]	; (90000488 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000458:	691b      	ldr	r3, [r3, #16]
{
9000045a:	b510      	push	{r4, lr}
9000045c:	4604      	mov	r4, r0
    if (active) //idle task sched out
9000045e:	b149      	cbz	r1, 90000474 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000460:	4293      	cmp	r3, r2
90000462:	d10d      	bne.n	90000480 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000464:	4b09      	ldr	r3, [pc, #36]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000466:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000468:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
9000046a:	6863      	ldr	r3, [r4, #4]
9000046c:	1a9b      	subs	r3, r3, r2
9000046e:	4403      	add	r3, r0
90000470:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000472:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000474:	4293      	cmp	r3, r2
90000476:	d105      	bne.n	90000484 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000478:	4b04      	ldr	r3, [pc, #16]	; (9000048c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
9000047a:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
9000047c:	60a0      	str	r0, [r4, #8]
}
9000047e:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000480:	4798      	blx	r3
90000482:	e7f1      	b.n	90000468 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000484:	4798      	blx	r3
90000486:	e7f9      	b.n	9000047c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000488:	90000435 	.word	0x90000435
9000048c:	e0001000 	.word	0xe0001000

90000490 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000490:	4770      	bx	lr
90000492:	bf00      	nop
90000494:	0000      	movs	r0, r0
	...

90000498 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000498:	b500      	push	{lr}
9000049a:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
9000049c:	2208      	movs	r2, #8
9000049e:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
900004a0:	2000      	movs	r0, #0
900004a2:	4669      	mov	r1, sp
    hTS.Width = 480;
900004a4:	ed9f 7b06 	vldr	d7, [pc, #24]	; 900004c0 <_ZN20STM32TouchController4initEv+0x28>
900004a8:	e9cd 2302 	strd	r2, r3, [sp, #8]
900004ac:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
900004b0:	f007 fa30 	bl	90007914 <BSP_TS_Init>
}
900004b4:	b005      	add	sp, #20
900004b6:	f85d fb04 	ldr.w	pc, [sp], #4
900004ba:	bf00      	nop
900004bc:	f3af 8000 	nop.w
900004c0:	000001e0 	.word	0x000001e0
900004c4:	00000110 	.word	0x00000110

900004c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
900004c8:	b530      	push	{r4, r5, lr}
900004ca:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
900004cc:	2000      	movs	r0, #0
{
900004ce:	460d      	mov	r5, r1
900004d0:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
900004d2:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
900004d4:	9001      	str	r0, [sp, #4]
900004d6:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
900004da:	f007 faa9 	bl	90007a30 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
900004de:	9801      	ldr	r0, [sp, #4]
900004e0:	b120      	cbz	r0, 900004ec <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
900004e2:	2001      	movs	r0, #1
        y = TS_State.TouchY;
900004e4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
900004e8:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
900004ea:	6023      	str	r3, [r4, #0]
    }

    return false;
}
900004ec:	b005      	add	sp, #20
900004ee:	bd30      	pop	{r4, r5, pc}

900004f0 <_ZN20STM32TouchControllerD0Ev>:
900004f0:	b510      	push	{r4, lr}
900004f2:	4604      	mov	r4, r0
900004f4:	2104      	movs	r1, #4
900004f6:	f025 fe5c 	bl	900261b2 <_ZdlPvj>
900004fa:	4620      	mov	r0, r4
900004fc:	bd10      	pop	{r4, pc}
900004fe:	bf00      	nop

90000500 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000500:	2108      	movs	r1, #8
90000502:	4810      	ldr	r0, [pc, #64]	; (90000544 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000504:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000506:	f007 fff9 	bl	900084fc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000050a:	2801      	cmp	r0, #1
9000050c:	d101      	bne.n	90000512 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
9000050e:	4b0e      	ldr	r3, [pc, #56]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000510:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000512:	2180      	movs	r1, #128	; 0x80
90000514:	480d      	ldr	r0, [pc, #52]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000516:	f007 fff1 	bl	900084fc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000051a:	2801      	cmp	r0, #1
9000051c:	d101      	bne.n	90000522 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
9000051e:	4b0a      	ldr	r3, [pc, #40]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000520:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000522:	2140      	movs	r1, #64	; 0x40
90000524:	4809      	ldr	r0, [pc, #36]	; (9000054c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000526:	f007 ffe9 	bl	900084fc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000052a:	2801      	cmp	r0, #1
9000052c:	d101      	bne.n	90000532 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
9000052e:	4b06      	ldr	r3, [pc, #24]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000530:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000532:	2140      	movs	r1, #64	; 0x40
90000534:	4806      	ldr	r0, [pc, #24]	; (90000550 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000536:	f007 ffe1 	bl	900084fc <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
9000053a:	2801      	cmp	r0, #1
9000053c:	d101      	bne.n	90000542 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
9000053e:	4b02      	ldr	r3, [pc, #8]	; (90000548 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000540:	60d8      	str	r0, [r3, #12]
}
90000542:	bd08      	pop	{r3, pc}
90000544:	58021800 	.word	0x58021800
90000548:	24000174 	.word	0x24000174
9000054c:	58020400 	.word	0x58020400
90000550:	58020000 	.word	0x58020000

90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000554:	2803      	cmp	r0, #3
90000556:	d827      	bhi.n	900005a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000558:	e8df f000 	tbb	[pc, r0]
9000055c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000560:	4b12      	ldr	r3, [pc, #72]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000562:	2140      	movs	r1, #64	; 0x40
90000564:	4812      	ldr	r0, [pc, #72]	; (900005b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000566:	68da      	ldr	r2, [r3, #12]
90000568:	fab2 f282 	clz	r2, r2
9000056c:	0952      	lsrs	r2, r2, #5
9000056e:	f007 bfcb 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000572:	4b0e      	ldr	r3, [pc, #56]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000574:	2140      	movs	r1, #64	; 0x40
90000576:	480f      	ldr	r0, [pc, #60]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000578:	689a      	ldr	r2, [r3, #8]
9000057a:	fab2 f282 	clz	r2, r2
9000057e:	0952      	lsrs	r2, r2, #5
90000580:	f007 bfc2 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000584:	4b09      	ldr	r3, [pc, #36]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000586:	2180      	movs	r1, #128	; 0x80
90000588:	480a      	ldr	r0, [pc, #40]	; (900005b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
9000058a:	685a      	ldr	r2, [r3, #4]
9000058c:	fab2 f282 	clz	r2, r2
90000590:	0952      	lsrs	r2, r2, #5
90000592:	f007 bfb9 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000596:	4b05      	ldr	r3, [pc, #20]	; (900005ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000598:	2108      	movs	r1, #8
9000059a:	4807      	ldr	r0, [pc, #28]	; (900005b8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
9000059c:	681a      	ldr	r2, [r3, #0]
9000059e:	fab2 f282 	clz	r2, r2
900005a2:	0952      	lsrs	r2, r2, #5
900005a4:	f007 bfb0 	b.w	90008508 <HAL_GPIO_WritePin>
}
900005a8:	4770      	bx	lr
900005aa:	bf00      	nop
900005ac:	24000174 	.word	0x24000174
900005b0:	58020000 	.word	0x58020000
900005b4:	58020400 	.word	0x58020400
900005b8:	58021800 	.word	0x58021800

900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
900005bc:	2803      	cmp	r0, #3
900005be:	d827      	bhi.n	90000610 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
900005c0:	e8df f000 	tbb	[pc, r0]
900005c4:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
900005c8:	4b12      	ldr	r3, [pc, #72]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ca:	2140      	movs	r1, #64	; 0x40
900005cc:	4812      	ldr	r0, [pc, #72]	; (90000618 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
900005ce:	68da      	ldr	r2, [r3, #12]
900005d0:	3a00      	subs	r2, #0
900005d2:	bf18      	it	ne
900005d4:	2201      	movne	r2, #1
900005d6:	f007 bf97 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
900005da:	4b0e      	ldr	r3, [pc, #56]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005dc:	2140      	movs	r1, #64	; 0x40
900005de:	480f      	ldr	r0, [pc, #60]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005e0:	689a      	ldr	r2, [r3, #8]
900005e2:	3a00      	subs	r2, #0
900005e4:	bf18      	it	ne
900005e6:	2201      	movne	r2, #1
900005e8:	f007 bf8e 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
900005ec:	4b09      	ldr	r3, [pc, #36]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
900005ee:	2180      	movs	r1, #128	; 0x80
900005f0:	480a      	ldr	r0, [pc, #40]	; (9000061c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
900005f2:	685a      	ldr	r2, [r3, #4]
900005f4:	3a00      	subs	r2, #0
900005f6:	bf18      	it	ne
900005f8:	2201      	movne	r2, #1
900005fa:	f007 bf85 	b.w	90008508 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
900005fe:	4b05      	ldr	r3, [pc, #20]	; (90000614 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000600:	2108      	movs	r1, #8
90000602:	4807      	ldr	r0, [pc, #28]	; (90000620 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000604:	681a      	ldr	r2, [r3, #0]
90000606:	3a00      	subs	r2, #0
90000608:	bf18      	it	ne
9000060a:	2201      	movne	r2, #1
9000060c:	f007 bf7c 	b.w	90008508 <HAL_GPIO_WritePin>
}
90000610:	4770      	bx	lr
90000612:	bf00      	nop
90000614:	24000174 	.word	0x24000174
90000618:	58020000 	.word	0x58020000
9000061c:	58020400 	.word	0x58020400
90000620:	58021800 	.word	0x58021800

90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000624:	2803      	cmp	r0, #3
90000626:	d813      	bhi.n	90000650 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000628:	e8df f000 	tbb	[pc, r0]
9000062c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000630:	2140      	movs	r1, #64	; 0x40
90000632:	4808      	ldr	r0, [pc, #32]	; (90000654 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000634:	f007 bf6c 	b.w	90008510 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000638:	2140      	movs	r1, #64	; 0x40
9000063a:	4807      	ldr	r0, [pc, #28]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
9000063c:	f007 bf68 	b.w	90008510 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000640:	2180      	movs	r1, #128	; 0x80
90000642:	4805      	ldr	r0, [pc, #20]	; (90000658 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000644:	f007 bf64 	b.w	90008510 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000648:	2108      	movs	r1, #8
9000064a:	4804      	ldr	r0, [pc, #16]	; (9000065c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
9000064c:	f007 bf60 	b.w	90008510 <HAL_GPIO_TogglePin>
}
90000650:	4770      	bx	lr
90000652:	bf00      	nop
90000654:	58020000 	.word	0x58020000
90000658:	58020400 	.word	0x58020400
9000065c:	58021800 	.word	0x58021800

90000660 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000660:	2000      	movs	r0, #0
90000662:	4770      	bx	lr

90000664 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000664:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000666:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
9000066a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
9000066e:	4770      	bx	lr

90000670 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000670:	2000      	movs	r0, #0
90000672:	4770      	bx	lr

90000674 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000674:	1e0a      	subs	r2, r1, #0
90000676:	4b03      	ldr	r3, [pc, #12]	; (90000684 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000678:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000067a:	bf18      	it	ne
9000067c:	2201      	movne	r2, #1
9000067e:	701a      	strb	r2, [r3, #0]
    }
90000680:	4770      	bx	lr
90000682:	bf00      	nop
90000684:	2402357b 	.word	0x2402357b

90000688 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000688:	2000      	movs	r0, #0
9000068a:	4770      	bx	lr

9000068c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
9000068c:	6b83      	ldr	r3, [r0, #56]	; 0x38
    virtual void taskDelay(uint16_t ms)
9000068e:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000690:	b103      	cbz	r3, 90000694 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000692:	4718      	bx	r3
        }
    }
90000694:	4770      	bx	lr
90000696:	bf00      	nop

90000698 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000698:	f64f 70ff 	movw	r0, #65535	; 0xffff
9000069c:	4770      	bx	lr
9000069e:	bf00      	nop

900006a0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
900006a0:	4770      	bx	lr
900006a2:	bf00      	nop

900006a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
900006a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006a6:	4b09      	ldr	r3, [pc, #36]	; (900006cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
900006a8:	881b      	ldrh	r3, [r3, #0]
900006aa:	428b      	cmp	r3, r1
900006ac:	d808      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
900006ae:	4b08      	ldr	r3, [pc, #32]	; (900006d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
900006b0:	881b      	ldrh	r3, [r3, #0]
900006b2:	4293      	cmp	r3, r2
900006b4:	d804      	bhi.n	900006c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
900006b6:	4807      	ldr	r0, [pc, #28]	; (900006d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
900006b8:	4b07      	ldr	r3, [pc, #28]	; (900006d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
900006ba:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
900006bc:	801a      	strh	r2, [r3, #0]
    }
900006be:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
900006c0:	4b06      	ldr	r3, [pc, #24]	; (900006dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
900006c2:	219e      	movs	r1, #158	; 0x9e
900006c4:	4a06      	ldr	r2, [pc, #24]	; (900006e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
900006c6:	4807      	ldr	r0, [pc, #28]	; (900006e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
900006c8:	f025 fda2 	bl	90026210 <__assert_func>
900006cc:	24023570 	.word	0x24023570
900006d0:	24023572 	.word	0x24023572
900006d4:	24023576 	.word	0x24023576
900006d8:	24023578 	.word	0x24023578
900006dc:	900273b4 	.word	0x900273b4
900006e0:	90027418 	.word	0x90027418
900006e4:	9002745c 	.word	0x9002745c

900006e8 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
900006e8:	b510      	push	{r4, lr}
900006ea:	4604      	mov	r4, r0
        swapFrameBuffers();
900006ec:	f010 fbb2 	bl	90010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900006f0:	6823      	ldr	r3, [r4, #0]
900006f2:	4620      	mov	r0, r4
900006f4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
900006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
900006fc:	4718      	bx	r3
900006fe:	bf00      	nop

90000700 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000700:	f001 bef4 	b.w	900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000704 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000704:	f001 bef8 	b.w	900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000708 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000708:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
9000070a:	f001 ffe1 	bl	900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000070e:	4812      	ldr	r0, [pc, #72]	; (90000758 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000710:	2300      	movs	r3, #0
90000712:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000716:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
9000071a:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000071e:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000722:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000726:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
9000072a:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000072e:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000732:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000734:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000738:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000073a:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
9000073e:	1c5a      	adds	r2, r3, #1
90000740:	d1f8      	bne.n	90000734 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000742:	f1ac 0c20 	sub.w	ip, ip, #32
90000746:	f11c 0f20 	cmn.w	ip, #32
9000074a:	d1f0      	bne.n	9000072e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
9000074c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000750:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000754:	bd10      	pop	{r4, pc}
90000756:	bf00      	nop
90000758:	e000ed00 	.word	0xe000ed00

9000075c <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
9000075c:	f001 bea2 	b.w	900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000760 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000760:	f002 b8b4 	b.w	900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000764 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000764:	f002 b89e 	b.w	900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000768 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000768:	f001 bea6 	b.w	900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

9000076c <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * @brief Unlocks the framebuffer.
     *
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
9000076c:	b510      	push	{r4, lr}
9000076e:	4604      	mov	r4, r0
    {
        HAL::unlockFrameBuffer();
90000770:	f00f feec 	bl	9001054c <_ZN8touchgfx3HAL17unlockFrameBufferEv>
        dma.start();
90000774:	6860      	ldr	r0, [r4, #4]
90000776:	6803      	ldr	r3, [r0, #0]
    }
90000778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dma.start();
9000077c:	691b      	ldr	r3, [r3, #16]
9000077e:	4718      	bx	r3

90000780 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000780:	f00f bdba 	b.w	900102f8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000784 <_ZN11TouchGFXHALD0Ev>:
90000784:	b510      	push	{r4, lr}
90000786:	4604      	mov	r4, r0
90000788:	2188      	movs	r1, #136	; 0x88
9000078a:	f025 fd12 	bl	900261b2 <_ZdlPvj>
9000078e:	4620      	mov	r0, r4
90000790:	bd10      	pop	{r4, pc}
90000792:	bf00      	nop

90000794 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
90000794:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
90000798:	b11b      	cbz	r3, 900007a2 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
9000079a:	6840      	ldr	r0, [r0, #4]
9000079c:	6803      	ldr	r3, [r0, #0]
9000079e:	681b      	ldr	r3, [r3, #0]
900007a0:	4718      	bx	r3
    }
900007a2:	4618      	mov	r0, r3
900007a4:	4770      	bx	lr
900007a6:	bf00      	nop

900007a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
900007a8:	f890 2078 	ldrb.w	r2, [r0, #120]	; 0x78
900007ac:	f890 3034 	ldrb.w	r3, [r0, #52]	; 0x34
900007b0:	429a      	cmp	r2, r3
        {
            if (DISPLAY_ROTATION == rotate0)
900007b2:	4b0b      	ldr	r3, [pc, #44]	; (900007e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
900007b4:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
900007b6:	d00b      	beq.n	900007d0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
900007b8:	b94a      	cbnz	r2, 900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
900007ba:	4a0a      	ldr	r2, [pc, #40]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
                DISPLAY_WIDTH = tmp;
                DISPLAY_ROTATION = rotate90;
900007bc:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c0:	4909      	ldr	r1, [pc, #36]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            }
        }
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
900007c2:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
900007c4:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007c8:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
900007ca:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007cc:	8013      	strh	r3, [r2, #0]
        }
    }
900007ce:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
900007d0:	2a00      	cmp	r2, #0
900007d2:	d0fc      	beq.n	900007ce <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
900007d4:	4a03      	ldr	r2, [pc, #12]	; (900007e4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
900007d6:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
900007da:	4903      	ldr	r1, [pc, #12]	; (900007e8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
900007dc:	e7f1      	b.n	900007c2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
900007de:	bf00      	nop
900007e0:	24023574 	.word	0x24023574
900007e4:	24023572 	.word	0x24023572
900007e8:	24023570 	.word	0x24023570

900007ec <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
900007ec:	6840      	ldr	r0, [r0, #4]
900007ee:	4a04      	ldr	r2, [pc, #16]	; (90000800 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
900007f0:	6803      	ldr	r3, [r0, #0]
900007f2:	699b      	ldr	r3, [r3, #24]
900007f4:	4293      	cmp	r3, r2
900007f6:	d101      	bne.n	900007fc <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
900007f8:	2000      	movs	r0, #0
900007fa:	4770      	bx	lr
        return dma.getDMAType();
900007fc:	4718      	bx	r3
900007fe:	bf00      	nop
90000800:	90000661 	.word	0x90000661

90000804 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000804:	b1a9      	cbz	r1, 90000832 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000806:	6402      	str	r2, [r0, #64]	; 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000808:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000080a:	63c1      	str	r1, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000080c:	bf18      	it	ne
9000080e:	2201      	movne	r2, #1
90000810:	490c      	ldr	r1, [pc, #48]	; (90000844 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000812:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000814:	6802      	ldr	r2, [r0, #0]
90000816:	490c      	ldr	r1, [pc, #48]	; (90000848 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000818:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
9000081c:	428a      	cmp	r2, r1
9000081e:	d106      	bne.n	9000082e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000820:	1e19      	subs	r1, r3, #0
90000822:	4a0a      	ldr	r2, [pc, #40]	; (9000084c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000824:	6443      	str	r3, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000826:	bf18      	it	ne
90000828:	2101      	movne	r1, #1
9000082a:	7011      	strb	r1, [r2, #0]
9000082c:	4770      	bx	lr
        setAnimationStorage(animationStorage);
9000082e:	4619      	mov	r1, r3
90000830:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000832:	4b07      	ldr	r3, [pc, #28]	; (90000850 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000834:	f240 21d2 	movw	r1, #722	; 0x2d2
90000838:	4a06      	ldr	r2, [pc, #24]	; (90000854 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
9000083a:	4807      	ldr	r0, [pc, #28]	; (90000858 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
9000083c:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000083e:	f025 fce7 	bl	90026210 <__assert_func>
90000842:	bf00      	nop
90000844:	2402357a 	.word	0x2402357a
90000848:	90000675 	.word	0x90000675
9000084c:	2402357b 	.word	0x2402357b
90000850:	900274a4 	.word	0x900274a4
90000854:	900274dc 	.word	0x900274dc
90000858:	9002745c 	.word	0x9002745c

9000085c <_ZN11TouchGFXHAL9taskEntryEv>:
{
9000085c:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
9000085e:	6803      	ldr	r3, [r0, #0]
{
90000860:	4604      	mov	r4, r0
90000862:	4d17      	ldr	r5, [pc, #92]	; (900008c0 <_ZN11TouchGFXHAL9taskEntryEv+0x64>)
    enableLCDControllerInterrupt();
90000864:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90000868:	4798      	blx	r3
    enableInterrupts();
9000086a:	6823      	ldr	r3, [r4, #0]
9000086c:	4620      	mov	r0, r4
9000086e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
90000870:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000872:	f001 f8e3 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000876:	6823      	ldr	r3, [r4, #0]
90000878:	4620      	mov	r0, r4
9000087a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9000087c:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
9000087e:	2201      	movs	r2, #1
90000880:	2104      	movs	r1, #4
90000882:	4810      	ldr	r0, [pc, #64]	; (900008c4 <_ZN11TouchGFXHAL9taskEntryEv+0x68>)
90000884:	f007 fe40 	bl	90008508 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90000888:	2201      	movs	r2, #1
9000088a:	2180      	movs	r1, #128	; 0x80
9000088c:	480e      	ldr	r0, [pc, #56]	; (900008c8 <_ZN11TouchGFXHAL9taskEntryEv+0x6c>)
9000088e:	f007 fe3b 	bl	90008508 <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90000892:	2201      	movs	r2, #1
90000894:	480d      	ldr	r0, [pc, #52]	; (900008cc <_ZN11TouchGFXHAL9taskEntryEv+0x70>)
90000896:	4611      	mov	r1, r2
90000898:	f007 fe36 	bl	90008508 <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
9000089c:	f001 f8ce 	bl	90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
900008a0:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
900008a2:	4620      	mov	r0, r4
900008a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900008a6:	42ab      	cmp	r3, r5
900008a8:	d107      	bne.n	900008ba <_ZN11TouchGFXHAL9taskEntryEv+0x5e>
900008aa:	f010 fad3 	bl	90010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
900008ae:	6823      	ldr	r3, [r4, #0]
900008b0:	4620      	mov	r0, r4
900008b2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
900008b6:	4798      	blx	r3
    }
900008b8:	e7f0      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008ba:	4798      	blx	r3
900008bc:	e7ee      	b.n	9000089c <_ZN11TouchGFXHAL9taskEntryEv+0x40>
900008be:	bf00      	nop
900008c0:	900006e9 	.word	0x900006e9
900008c4:	58020000 	.word	0x58020000
900008c8:	58020c00 	.word	0x58020c00
900008cc:	58022800 	.word	0x58022800

900008d0 <_ZN11TouchGFXHAL10initializeEv>:
{
900008d0:	b538      	push	{r3, r4, r5, lr}
900008d2:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
900008d4:	f002 f804 	bl	900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
900008d8:	4817      	ldr	r0, [pc, #92]	; (90000938 <_ZN11TouchGFXHAL10initializeEv+0x68>)
900008da:	6823      	ldr	r3, [r4, #0]
900008dc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900008de:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900008e2:	6c22      	ldr	r2, [r4, #64]	; 0x40
900008e4:	4285      	cmp	r5, r0
900008e6:	d119      	bne.n	9000091c <_ZN11TouchGFXHAL10initializeEv+0x4c>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
900008e8:	b1f9      	cbz	r1, 9000092a <_ZN11TouchGFXHAL10initializeEv+0x5a>
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008ea:	3a00      	subs	r2, #0
900008ec:	4913      	ldr	r1, [pc, #76]	; (9000093c <_ZN11TouchGFXHAL10initializeEv+0x6c>)
        setAnimationStorage(animationStorage);
900008ee:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008f2:	bf18      	it	ne
900008f4:	2201      	movne	r2, #1
900008f6:	4812      	ldr	r0, [pc, #72]	; (90000940 <_ZN11TouchGFXHAL10initializeEv+0x70>)
900008f8:	428b      	cmp	r3, r1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
900008fa:	4912      	ldr	r1, [pc, #72]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
900008fc:	7002      	strb	r2, [r0, #0]
        setAnimationStorage(animationStorage);
900008fe:	d111      	bne.n	90000924 <_ZN11TouchGFXHAL10initializeEv+0x54>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000900:	4b11      	ldr	r3, [pc, #68]	; (90000948 <_ZN11TouchGFXHAL10initializeEv+0x78>)
90000902:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000904:	6461      	str	r1, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000906:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000908:	f104 057c 	add.w	r5, r4, #124	; 0x7c
9000090c:	4628      	mov	r0, r5
9000090e:	f7ff fd73 	bl	900003f8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000912:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000914:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000916:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
}
9000091a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationBuffer);
9000091c:	4b09      	ldr	r3, [pc, #36]	; (90000944 <_ZN11TouchGFXHAL10initializeEv+0x74>)
9000091e:	4620      	mov	r0, r4
90000920:	47a8      	blx	r5
90000922:	e7f1      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        setAnimationStorage(animationStorage);
90000924:	4620      	mov	r0, r4
90000926:	4798      	blx	r3
90000928:	e7ee      	b.n	90000908 <_ZN11TouchGFXHAL10initializeEv+0x38>
        assert(frameBuffer != 0 && "A framebuffer address must be set");
9000092a:	4b08      	ldr	r3, [pc, #32]	; (9000094c <_ZN11TouchGFXHAL10initializeEv+0x7c>)
9000092c:	f240 21d2 	movw	r1, #722	; 0x2d2
90000930:	4a07      	ldr	r2, [pc, #28]	; (90000950 <_ZN11TouchGFXHAL10initializeEv+0x80>)
90000932:	4808      	ldr	r0, [pc, #32]	; (90000954 <_ZN11TouchGFXHAL10initializeEv+0x84>)
90000934:	f025 fc6c 	bl	90026210 <__assert_func>
90000938:	90000805 	.word	0x90000805
9000093c:	90000675 	.word	0x90000675
90000940:	2402357a 	.word	0x2402357a
90000944:	d0000000 	.word	0xd0000000
90000948:	2402357b 	.word	0x2402357b
9000094c:	900274a4 	.word	0x900274a4
90000950:	900274dc 	.word	0x900274dc
90000954:	9002745c 	.word	0x9002745c

90000958 <IdleTaskHook>:
}

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
90000958:	b508      	push	{r3, lr}
        return instance;
9000095a:	4b07      	ldr	r3, [pc, #28]	; (90000978 <IdleTaskHook+0x20>)
        if ((int)p) //idle task sched out
9000095c:	b128      	cbz	r0, 9000096a <IdleTaskHook+0x12>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000095e:	6818      	ldr	r0, [r3, #0]
90000960:	2101      	movs	r1, #1
90000962:	f010 fa91 	bl	90010e88 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90000966:	2001      	movs	r0, #1
90000968:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
9000096a:	4601      	mov	r1, r0
9000096c:	6818      	ldr	r0, [r3, #0]
9000096e:	f010 fa8b 	bl	90010e88 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
90000972:	2001      	movs	r0, #1
90000974:	bd08      	pop	{r3, pc}
90000976:	bf00      	nop
90000978:	2402357c 	.word	0x2402357c

9000097c <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
9000097c:	6940      	ldr	r0, [r0, #20]
9000097e:	4770      	bx	lr

90000980 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90000980:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
90000984:	4770      	bx	lr
90000986:	bf00      	nop

90000988 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90000988:	6b03      	ldr	r3, [r0, #48]	; 0x30
9000098a:	b10b      	cbz	r3, 90000990 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
9000098c:	2001      	movs	r0, #1
}
9000098e:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90000990:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90000992:	3800      	subs	r0, #0
90000994:	bf18      	it	ne
90000996:	2001      	movne	r0, #1
90000998:	4770      	bx	lr
9000099a:	bf00      	nop

9000099c <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
9000099c:	6880      	ldr	r0, [r0, #8]
9000099e:	4770      	bx	lr

900009a0 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
900009a0:	4770      	bx	lr
900009a2:	bf00      	nop

900009a4 <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
900009a4:	3004      	adds	r0, #4
{
900009a6:	468c      	mov	ip, r1
    *data = videoInfo;
900009a8:	c80f      	ldmia	r0, {r0, r1, r2, r3}
900009aa:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
900009ae:	4770      	bx	lr

900009b0 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
900009b0:	4770      	bx	lr
900009b2:	bf00      	nop

900009b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
900009b4:	b508      	push	{r3, lr}
    assert(0);
900009b6:	4a03      	ldr	r2, [pc, #12]	; (900009c4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900009b8:	f240 11c5 	movw	r1, #453	; 0x1c5
900009bc:	4b02      	ldr	r3, [pc, #8]	; (900009c8 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900009be:	4803      	ldr	r0, [pc, #12]	; (900009cc <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900009c0:	f025 fc26 	bl	90026210 <__assert_func>
900009c4:	90027608 	.word	0x90027608
900009c8:	90027604 	.word	0x90027604
900009cc:	90027664 	.word	0x90027664

900009d0 <_ZN20HardwareMJPEGDecoderD0Ev>:
900009d0:	b510      	push	{r4, lr}
900009d2:	4604      	mov	r4, r0
900009d4:	2148      	movs	r1, #72	; 0x48
900009d6:	f025 fbec 	bl	900261b2 <_ZdlPvj>
900009da:	4620      	mov	r0, r4
900009dc:	bd10      	pop	{r4, pc}
900009de:	bf00      	nop

900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009e4:	4d4a      	ldr	r5, [pc, #296]	; (90000b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>)
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009e6:	4683      	mov	fp, r0
900009e8:	461c      	mov	r4, r3
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
900009ea:	68c0      	ldr	r0, [r0, #12]
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009ec:	2302      	movs	r3, #2
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
900009ee:	b083      	sub	sp, #12
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
        FrameBufferAddress = output;
        JPEG_output_is_paused = 0;
900009f0:	4f48      	ldr	r7, [pc, #288]	; (90000b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x134>)
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
900009f2:	612b      	str	r3, [r5, #16]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
900009f4:	0703      	lsls	r3, r0, #28
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
900009f6:	f44f 7370 	mov.w	r3, #960	; 0x3c0
        MCU_BlockIndex = 0;

        /* Init buffers */
        for (uint32_t i = 0; i < NB_OUTPUT_DATA_BUFFERS; ++i)
        {
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900009fa:	4e47      	ldr	r6, [pc, #284]	; (90000b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x138>)
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
900009fc:	bf18      	it	ne
900009fe:	f020 000f 	bicne.w	r0, r0, #15
        JPEG_OUT_Write_BufferIndex = 0;
90000a02:	f8df a140 	ldr.w	sl, [pc, #320]	; 90000b44 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x164>
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90000a06:	606b      	str	r3, [r5, #4]
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a08:	bf18      	it	ne
90000a0a:	3010      	addne	r0, #16
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a0c:	f8db 3010 	ldr.w	r3, [fp, #16]
        DMA2D_reference = dma;
90000a10:	f8df 8134 	ldr.w	r8, [pc, #308]	; 90000b48 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x168>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90000a14:	6028      	str	r0, [r5, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a16:	0900      	lsrs	r0, r0, #4
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a18:	f013 030f 	ands.w	r3, r3, #15
90000a1c:	f8df 912c 	ldr.w	r9, [pc, #300]	; 90000b4c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x16c>
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90000a20:	60e8      	str	r0, [r5, #12]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a26:	bf18      	it	ne
90000a28:	f1c3 0310 	rsbne	r3, r3, #16
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a2c:	01c0      	lsls	r0, r0, #7
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90000a2e:	60ab      	str	r3, [r5, #8]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a30:	9000      	str	r0, [sp, #0]
        JPEG_output_is_paused = 0;
90000a32:	2000      	movs	r0, #0
        JPEG_OUT_Read_BufferIndex = 0;
90000a34:	4b39      	ldr	r3, [pc, #228]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
        FrameBufferAddress = output;
90000a36:	4d3a      	ldr	r5, [pc, #232]	; (90000b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x140>)
        JPEG_output_is_paused = 0;
90000a38:	6038      	str	r0, [r7, #0]
        FrameBufferAddress = output;
90000a3a:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Read_BufferIndex = 0;
90000a3c:	6018      	str	r0, [r3, #0]
        JPEG_InputImageIndex = 0;
90000a3e:	4c39      	ldr	r4, [pc, #228]	; (90000b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x144>)
        MCU_BlockIndex = 0;
90000a40:	4b39      	ldr	r3, [pc, #228]	; (90000b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x148>)
        JPEG_OUT_Write_BufferIndex = 0;
90000a42:	f8ca 0000 	str.w	r0, [sl]
        JPEG_InputImageIndex = 0;
90000a46:	6020      	str	r0, [r4, #0]
        MCU_BlockIndex = 0;
90000a48:	6018      	str	r0, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a4a:	7030      	strb	r0, [r6, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a4c:	f8da 3000 	ldr.w	r3, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000a50:	7430      	strb	r0, [r6, #16]
        JPEG_InputImageAddress = (uint32_t)input;
90000a52:	4836      	ldr	r0, [pc, #216]	; (90000b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x14c>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a54:	eb06 1303 	add.w	r3, r6, r3, lsl #4
90000a58:	4d35      	ldr	r5, [pc, #212]	; (90000b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x150>)
        JPEG_InputImageAddress = (uint32_t)input;
90000a5a:	6001      	str	r1, [r0, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a5c:	4835      	ldr	r0, [pc, #212]	; (90000b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x154>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a5e:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000a60:	6002      	str	r2, [r0, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a62:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000a66:	4834      	ldr	r0, [pc, #208]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
90000a68:	4c34      	ldr	r4, [pc, #208]	; (90000b3c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x15c>)
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000a6a:	ed9f 7b27 	vldr	d7, [pc, #156]	; 90000b08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90000a6e:	ed86 7b02 	vstr	d7, [r6, #8]
90000a72:	ed86 7b06 	vstr	d7, [r6, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000a76:	f008 fe77 	bl	90009768 <HAL_JPEG_Decode_DMA>
        DMA2D_reference = dma;
90000a7a:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
90000a7e:	f8c8 3000 	str.w	r3, [r8]
 * @retval 1 : if JPEG processing has finished, 0 : if JPEG processing still ongoing
 */
uint32_t JPEG_OutputHandler(JPEG_HandleTypeDef* hjpeg)
{
    /* Decode frame complete */
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000a82:	682b      	ldr	r3, [r5, #0]
90000a84:	b113      	cbz	r3, 90000a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xac>
90000a86:	f8d9 3000 	ldr.w	r3, [r9]
90000a8a:	bb63      	cbnz	r3, 90000ae6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x106>
    {
        return 1;
    }

    /* Try to start DMA2D video transfer if next buffer if full */
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000a8c:	f8d8 0000 	ldr.w	r0, [r8]
90000a90:	7a03      	ldrb	r3, [r0, #8]
90000a92:	b92b      	cbnz	r3, 90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
90000a94:	4b21      	ldr	r3, [pc, #132]	; (90000b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x13c>)
90000a96:	681b      	ldr	r3, [r3, #0]
90000a98:	011b      	lsls	r3, r3, #4
90000a9a:	5cf3      	ldrb	r3, [r6, r3]
90000a9c:	2b01      	cmp	r3, #1
90000a9e:	d024      	beq.n	90000aea <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10a>
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000aa0:	683b      	ldr	r3, [r7, #0]
90000aa2:	2b01      	cmp	r3, #1
90000aa4:	d106      	bne.n	90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000aa6:	f8da 3000 	ldr.w	r3, [sl]
90000aaa:	011b      	lsls	r3, r3, #4
90000aac:	5cf3      	ldrb	r3, [r6, r3]
90000aae:	b90b      	cbnz	r3, 90000ab4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd4>
90000ab0:	682b      	ldr	r3, [r5, #0]
90000ab2:	b313      	cbz	r3, 90000afa <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11a>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90000ab4:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000ab6:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90000ab8:	6823      	ldr	r3, [r4, #0]
90000aba:	2b02      	cmp	r3, #2
90000abc:	d009      	beq.n	90000ad2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xf2>
        } while (JpegProcessing_End != 1);
90000abe:	6823      	ldr	r3, [r4, #0]
90000ac0:	2b01      	cmp	r3, #1
90000ac2:	d1de      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
        Jpeg_HWDecodingEnd = 0;
90000ac4:	2300      	movs	r3, #0
90000ac6:	602b      	str	r3, [r5, #0]
        DMA2D_CopyBufferEnd = 0;
90000ac8:	f8c9 3000 	str.w	r3, [r9]
}
90000acc:	b003      	add	sp, #12
90000ace:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
                SEM_WAIT(semDecodingDone);
90000ad2:	4b1b      	ldr	r3, [pc, #108]	; (90000b40 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x160>)
90000ad4:	f04f 31ff 	mov.w	r1, #4294967295
90000ad8:	6818      	ldr	r0, [r3, #0]
90000ada:	f00c faab 	bl	9000d034 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90000ade:	6823      	ldr	r3, [r4, #0]
90000ae0:	2b01      	cmp	r3, #1
90000ae2:	d1ce      	bne.n	90000a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xa2>
90000ae4:	e7ee      	b.n	90000ac4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xe4>
        return 1;
90000ae6:	2301      	movs	r3, #1
90000ae8:	e7e5      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000aea:	f8d9 3000 	ldr.w	r3, [r9]
90000aee:	2b00      	cmp	r3, #0
90000af0:	d1d6      	bne.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        DMA2D_reference->start();
90000af2:	6803      	ldr	r3, [r0, #0]
90000af4:	691b      	ldr	r3, [r3, #16]
90000af6:	4798      	blx	r3
90000af8:	e7d2      	b.n	90000aa0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc0>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000afa:	2102      	movs	r1, #2
90000afc:	480e      	ldr	r0, [pc, #56]	; (90000b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x158>)
        JPEG_output_is_paused = 0;
90000afe:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000b00:	f008 ff7a 	bl	900099f8 <HAL_JPEG_Resume>
90000b04:	2302      	movs	r3, #2
90000b06:	e7d6      	b.n	90000ab6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xd6>
	...
90000b10:	24005b90 	.word	0x24005b90
90000b14:	24005bbc 	.word	0x24005bbc
90000b18:	24000008 	.word	0x24000008
90000b1c:	24000188 	.word	0x24000188
90000b20:	24005bac 	.word	0x24005bac
90000b24:	24005bb8 	.word	0x24005bb8
90000b28:	2400018c 	.word	0x2400018c
90000b2c:	24005bc0 	.word	0x24005bc0
90000b30:	24005bb4 	.word	0x24005bb4
90000b34:	24005bc4 	.word	0x24005bc4
90000b38:	24009250 	.word	0x24009250
90000b3c:	24005bb0 	.word	0x24005bb0
90000b40:	24005bcc 	.word	0x24005bcc
90000b44:	24005bc8 	.word	0x24005bc8
90000b48:	24005ba8 	.word	0x24005ba8
90000b4c:	24000184 	.word	0x24000184

90000b50 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
90000b50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
90000b52:	6803      	ldr	r3, [r0, #0]
90000b54:	2901      	cmp	r1, #1
90000b56:	4e2f      	ldr	r6, [pc, #188]	; (90000c14 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc4>)
{
90000b58:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
90000b5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000b5c:	bf38      	it	cc
90000b5e:	2101      	movcc	r1, #1
90000b60:	42b3      	cmp	r3, r6
90000b62:	460d      	mov	r5, r1
90000b64:	d142      	bne.n	90000bec <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x9c>
    return videoInfo.number_of_frames;
90000b66:	6883      	ldr	r3, [r0, #8]
    if (frameNumber > getNumberOfFrames())
90000b68:	4299      	cmp	r1, r3
90000b6a:	d82a      	bhi.n	90000bc2 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x72>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b6c:	1e6b      	subs	r3, r5, #1
90000b6e:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
90000b70:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b72:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
90000b76:	b350      	cbz	r0, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        if (length > aviBufferLength)
90000b78:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000b7a:	2b0f      	cmp	r3, #15
90000b7c:	d941      	bls.n	90000c02 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb2>
        reader->seek(offset);
90000b7e:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
90000b80:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
90000b84:	68db      	ldr	r3, [r3, #12]
90000b86:	4631      	mov	r1, r6
90000b88:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000b8a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000b8c:	2210      	movs	r2, #16
90000b8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000b90:	6803      	ldr	r3, [r0, #0]
90000b92:	691b      	ldr	r3, [r3, #16]
90000b94:	4798      	blx	r3
90000b96:	b1b0      	cbz	r0, 90000bc6 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x76>
    if (reader != 0)
90000b98:	6b23      	ldr	r3, [r4, #48]	; 0x30
        aviBufferStartOffset = offset;
90000b9a:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000b9c:	b1bb      	cbz	r3, 90000bce <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x7e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000b9e:	6b62      	ldr	r2, [r4, #52]	; 0x34
90000ba0:	7a93      	ldrb	r3, [r2, #10]
90000ba2:	7a51      	ldrb	r1, [r2, #9]
90000ba4:	041b      	lsls	r3, r3, #16
90000ba6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90000baa:	7a11      	ldrb	r1, [r2, #8]
90000bac:	7ad2      	ldrb	r2, [r2, #11]
90000bae:	430b      	orrs	r3, r1
90000bb0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb4:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
90000bb6:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bb8:	3a04      	subs	r2, #4
90000bba:	441a      	add	r2, r3
90000bbc:	61a2      	str	r2, [r4, #24]
}
90000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return videoInfo.number_of_frames;
90000bc0:	68a3      	ldr	r3, [r4, #8]
{
90000bc2:	461d      	mov	r5, r3
90000bc4:	e7d2      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_EOF_REACHED;
90000bc6:	230d      	movs	r3, #13
90000bc8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000bcc:	e7e4      	b.n	90000b98 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90000bce:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90000bd2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90000bd4:	18d1      	adds	r1, r2, r3
        val |= d[0];
90000bd6:	5cd2      	ldrb	r2, [r2, r3]
        val |= d[1] << 8;
90000bd8:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90000bda:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90000bdc:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000bde:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90000be0:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000be4:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90000be8:	4313      	orrs	r3, r2
        return val;
90000bea:	e7e3      	b.n	90000bb4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
90000bec:	4798      	blx	r3
90000bee:	4285      	cmp	r5, r0
90000bf0:	d9bc      	bls.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
        frameNumber = getNumberOfFrames();
90000bf2:	6823      	ldr	r3, [r4, #0]
90000bf4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90000bf6:	42b3      	cmp	r3, r6
90000bf8:	d0e2      	beq.n	90000bc0 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
90000bfa:	4620      	mov	r0, r4
90000bfc:	4798      	blx	r3
90000bfe:	4605      	mov	r5, r0
90000c00:	e7b4      	b.n	90000b6c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c02:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000c04:	4b04      	ldr	r3, [pc, #16]	; (90000c18 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
90000c06:	4a05      	ldr	r2, [pc, #20]	; (90000c1c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
90000c08:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000c0a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000c0e:	4804      	ldr	r0, [pc, #16]	; (90000c20 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
90000c10:	f025 fafe 	bl	90026210 <__assert_func>
90000c14:	9000099d 	.word	0x9000099d
90000c18:	900276b4 	.word	0x900276b4
90000c1c:	900276c8 	.word	0x900276c8
90000c20:	90027664 	.word	0x90027664
90000c24:	00000000 	.word	0x00000000

90000c28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90000c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90000c2c:	4604      	mov	r4, r0
    if (reader != 0)
90000c2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
{
90000c30:	b083      	sub	sp, #12
90000c32:	4615      	mov	r5, r2
    readData(currentMovieOffset, 8);
90000c34:	69a6      	ldr	r6, [r4, #24]
    if (reader != 0)
90000c36:	2800      	cmp	r0, #0
90000c38:	f000 80ad 	beq.w	90000d96 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16e>
        if (length > aviBufferLength)
90000c3c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000c3e:	2b07      	cmp	r3, #7
90000c40:	f240 80b9 	bls.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c44:	6803      	ldr	r3, [r0, #0]
90000c46:	4631      	mov	r1, r6
90000c48:	68db      	ldr	r3, [r3, #12]
90000c4a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c4c:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c4e:	2208      	movs	r2, #8
90000c50:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000c52:	6803      	ldr	r3, [r0, #0]
90000c54:	691b      	ldr	r3, [r3, #16]
90000c56:	4798      	blx	r3
90000c58:	2800      	cmp	r0, #0
90000c5a:	f000 8091 	beq.w	90000d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x158>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c5e:	69a7      	ldr	r7, [r4, #24]
    if (reader != 0)
90000c60:	6b20      	ldr	r0, [r4, #48]	; 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90000c62:	1d3b      	adds	r3, r7, #4
        aviBufferStartOffset = offset;
90000c64:	63e6      	str	r6, [r4, #60]	; 0x3c
    if (reader != 0)
90000c66:	2800      	cmp	r0, #0
90000c68:	f000 80ae 	beq.w	90000dc8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
        const uint32_t index = offset - aviBufferStartOffset;
90000c6c:	1b9b      	subs	r3, r3, r6
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000c6e:	3708      	adds	r7, #8
        if (length > aviBufferLength)
90000c70:	e9d4 620d 	ldrd	r6, r2, [r4, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000c74:	18f1      	adds	r1, r6, r3
90000c76:	5cf3      	ldrb	r3, [r6, r3]
90000c78:	788e      	ldrb	r6, [r1, #2]
90000c7a:	f891 c001 	ldrb.w	ip, [r1, #1]
90000c7e:	0436      	lsls	r6, r6, #16
90000c80:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
90000c84:	431e      	orrs	r6, r3
90000c86:	78cb      	ldrb	r3, [r1, #3]
90000c88:	ea46 6603 	orr.w	r6, r6, r3, lsl #24
        if (length > aviBufferLength)
90000c8c:	42b2      	cmp	r2, r6
90000c8e:	f0c0 8092 	bcc.w	90000db6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
        reader->seek(offset);
90000c92:	6803      	ldr	r3, [r0, #0]
90000c94:	4639      	mov	r1, r7
90000c96:	68db      	ldr	r3, [r3, #12]
90000c98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000c9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000c9c:	4632      	mov	r2, r6
90000c9e:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ca0:	6803      	ldr	r3, [r0, #0]
90000ca2:	691b      	ldr	r3, [r3, #16]
90000ca4:	4798      	blx	r3
90000ca6:	b910      	cbnz	r0, 90000cae <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x86>
            lastError = AVI_ERROR_EOF_REACHED;
90000ca8:	230d      	movs	r3, #13
90000caa:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90000cae:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90000cb0:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (frameBuffer) /* only decode if buffers are assigned. */
90000cb2:	2d00      	cmp	r5, #0
90000cb4:	d058      	beq.n	90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
        FrameBufferAddress = output;
90000cb6:	4b48      	ldr	r3, [pc, #288]	; (90000dd8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b0>)
        JPEG_output_is_paused = 0;
90000cb8:	2200      	movs	r2, #0
90000cba:	4f48      	ldr	r7, [pc, #288]	; (90000ddc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b4>)
        FrameBufferAddress = output;
90000cbc:	601d      	str	r5, [r3, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cbe:	4b48      	ldr	r3, [pc, #288]	; (90000de0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1b8>)
        JPEG_output_is_paused = 0;
90000cc0:	603a      	str	r2, [r7, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc2:	68db      	ldr	r3, [r3, #12]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000cc4:	4d47      	ldr	r5, [pc, #284]	; (90000de4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1bc>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cc6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
        JPEG_OUT_Write_BufferIndex = 0;
90000cca:	f8df a144 	ldr.w	sl, [pc, #324]	; 90000e10 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e8>
        JPEG_OUT_Read_BufferIndex = 0;
90000cce:	f8df b144 	ldr.w	fp, [pc, #324]	; 90000e14 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1ec>
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cd2:	01db      	lsls	r3, r3, #7
        JPEG_InputImageIndex = 0;
90000cd4:	4844      	ldr	r0, [pc, #272]	; (90000de8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c0>)
        JPEG_OUT_Read_BufferIndex = 0;
90000cd6:	f8cb 2000 	str.w	r2, [fp]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cda:	9300      	str	r3, [sp, #0]
        MCU_BlockIndex = 0;
90000cdc:	4b43      	ldr	r3, [pc, #268]	; (90000dec <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c4>)
        JPEG_OUT_Write_BufferIndex = 0;
90000cde:	f8ca 2000 	str.w	r2, [sl]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce2:	702a      	strb	r2, [r5, #0]
        MCU_BlockIndex = 0;
90000ce4:	601a      	str	r2, [r3, #0]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
90000ce6:	742a      	strb	r2, [r5, #16]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000ce8:	f8da 3000 	ldr.w	r3, [sl]
        JPEG_InputImageIndex = 0;
90000cec:	6002      	str	r2, [r0, #0]
        JPEG_InputImageAddress = (uint32_t)input;
90000cee:	4a40      	ldr	r2, [pc, #256]	; (90000df0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1c8>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cf0:	eb05 1303 	add.w	r3, r5, r3, lsl #4
90000cf4:	483f      	ldr	r0, [pc, #252]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_InputImageAddress = (uint32_t)input;
90000cf6:	6011      	str	r1, [r2, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cf8:	4a3f      	ldr	r2, [pc, #252]	; (90000df8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d0>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfa:	685b      	ldr	r3, [r3, #4]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
90000cfc:	6016      	str	r6, [r2, #0]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000cfe:	f44f 4250 	mov.w	r2, #53248	; 0xd000
90000d02:	4e3e      	ldr	r6, [pc, #248]	; (90000dfc <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d4>)
90000d04:	4c3e      	ldr	r4, [pc, #248]	; (90000e00 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d8>)
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d06:	f8df 8110 	ldr.w	r8, [pc, #272]	; 90000e18 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f0>
90000d0a:	f8df 9110 	ldr.w	r9, [pc, #272]	; 90000e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
90000d0e:	ed9f 7b30 	vldr	d7, [pc, #192]	; 90000dd0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
90000d12:	ed85 7b02 	vstr	d7, [r5, #8]
90000d16:	ed85 7b06 	vstr	d7, [r5, #24]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90000d1a:	f008 fd25 	bl	90009768 <HAL_JPEG_Decode_DMA>
        return 0;
90000d1e:	e017      	b.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d20:	f8d8 0000 	ldr.w	r0, [r8]
90000d24:	7a03      	ldrb	r3, [r0, #8]
90000d26:	b92b      	cbnz	r3, 90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
90000d28:	f8db 3000 	ldr.w	r3, [fp]
90000d2c:	011b      	lsls	r3, r3, #4
90000d2e:	5ceb      	ldrb	r3, [r5, r3]
90000d30:	2b01      	cmp	r3, #1
90000d32:	d01d      	beq.n	90000d70 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90000d34:	683b      	ldr	r3, [r7, #0]
90000d36:	2b01      	cmp	r3, #1
90000d38:	d106      	bne.n	90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d3a:	f8da 3000 	ldr.w	r3, [sl]
90000d3e:	011b      	lsls	r3, r3, #4
90000d40:	5ceb      	ldrb	r3, [r5, r3]
90000d42:	b90b      	cbnz	r3, 90000d48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x120>
90000d44:	6833      	ldr	r3, [r6, #0]
90000d46:	b1fb      	cbz	r3, 90000d88 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x160>
    return 2;
90000d48:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d4a:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d4c:	6823      	ldr	r3, [r4, #0]
90000d4e:	b95b      	cbnz	r3, 90000d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x140>
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90000d50:	6833      	ldr	r3, [r6, #0]
90000d52:	2b00      	cmp	r3, #0
90000d54:	d0e4      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
90000d56:	f8d9 3000 	ldr.w	r3, [r9]
90000d5a:	2b00      	cmp	r3, #0
90000d5c:	d0e0      	beq.n	90000d20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xf8>
        return 1;
90000d5e:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90000d60:	6023      	str	r3, [r4, #0]
        } while (JpegProcessing_End == 0);
90000d62:	6823      	ldr	r3, [r4, #0]
90000d64:	2b00      	cmp	r3, #0
90000d66:	d0f3      	beq.n	90000d50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x128>
}
90000d68:	2001      	movs	r0, #1
90000d6a:	b003      	add	sp, #12
90000d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90000d70:	f8d9 3000 	ldr.w	r3, [r9]
90000d74:	2b00      	cmp	r3, #0
90000d76:	d1dd      	bne.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
        DMA2D_reference->start();
90000d78:	6803      	ldr	r3, [r0, #0]
90000d7a:	691b      	ldr	r3, [r3, #16]
90000d7c:	4798      	blx	r3
90000d7e:	e7d9      	b.n	90000d34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x10c>
            lastError = AVI_ERROR_EOF_REACHED;
90000d80:	230d      	movs	r3, #13
90000d82:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
90000d86:	e76a      	b.n	90000c5e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x36>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d88:	2102      	movs	r1, #2
90000d8a:	481a      	ldr	r0, [pc, #104]	; (90000df4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>)
        JPEG_output_is_paused = 0;
90000d8c:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90000d8e:	f008 fe33 	bl	900099f8 <HAL_JPEG_Resume>
90000d92:	2302      	movs	r3, #2
90000d94:	e7d9      	b.n	90000d4a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x122>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000d96:	1d33      	adds	r3, r6, #4
    if (reader != 0)
90000d98:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90000d9a:	3608      	adds	r6, #8
        volatile const uint8_t* const d = movieData + offset;
90000d9c:	18ca      	adds	r2, r1, r3
        val |= d[0];
90000d9e:	5ccb      	ldrb	r3, [r1, r3]
    return movieData + offset;
90000da0:	4431      	add	r1, r6
        val |= d[1] << 8;
90000da2:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90000da4:	7896      	ldrb	r6, [r2, #2]
        val |= d[3] << 24;
90000da6:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90000da8:	0436      	lsls	r6, r6, #16
        val |= d[3] << 24;
90000daa:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90000dae:	ea46 2600 	orr.w	r6, r6, r0, lsl #8
90000db2:	431e      	orrs	r6, r3
    return movieData + offset;
90000db4:	e77d      	b.n	90000cb2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x8a>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000db6:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000db8:	4b12      	ldr	r3, [pc, #72]	; (90000e04 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1dc>)
90000dba:	4a13      	ldr	r2, [pc, #76]	; (90000e08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>)
90000dbc:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000dbe:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
90000dc2:	4812      	ldr	r0, [pc, #72]	; (90000e0c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e4>)
90000dc4:	f025 fa24 	bl	90026210 <__assert_func>
    const uint32_t length = getU32(currentMovieOffset + 4);
90000dc8:	463e      	mov	r6, r7
90000dca:	e7e5      	b.n	90000d98 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90000dcc:	f3af 8000 	nop.w
	...
90000dd8:	24005bac 	.word	0x24005bac
90000ddc:	24005bbc 	.word	0x24005bbc
90000de0:	24005b90 	.word	0x24005b90
90000de4:	24000008 	.word	0x24000008
90000de8:	24005bb8 	.word	0x24005bb8
90000dec:	2400018c 	.word	0x2400018c
90000df0:	24005bc0 	.word	0x24005bc0
90000df4:	24009250 	.word	0x24009250
90000df8:	24005bc4 	.word	0x24005bc4
90000dfc:	24005bb4 	.word	0x24005bb4
90000e00:	24005bb0 	.word	0x24005bb0
90000e04:	900276b4 	.word	0x900276b4
90000e08:	900276c8 	.word	0x900276c8
90000e0c:	90027664 	.word	0x90027664
90000e10:	24005bc8 	.word	0x24005bc8
90000e14:	24000188 	.word	0x24000188
90000e18:	24005ba8 	.word	0x24005ba8
90000e1c:	24000184 	.word	0x24000184

90000e20 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e20:	6943      	ldr	r3, [r0, #20]
{
90000e22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000e26:	2b00      	cmp	r3, #0
90000e28:	f000 80c0 	beq.w	90000fac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18c>
    readData(currentMovieOffset, 8);
90000e2c:	4605      	mov	r5, r0
    if (reader != 0)
90000e2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
    readData(currentMovieOffset, 8);
90000e30:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
90000e32:	2800      	cmp	r0, #0
90000e34:	f000 80a0 	beq.w	90000f78 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x158>
        if (length > aviBufferLength)
90000e38:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e3a:	2b07      	cmp	r3, #7
90000e3c:	f240 80ab 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e40:	6803      	ldr	r3, [r0, #0]
90000e42:	4621      	mov	r1, r4
90000e44:	68db      	ldr	r3, [r3, #12]
90000e46:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e48:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e4a:	2208      	movs	r2, #8
90000e4c:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000e4e:	6803      	ldr	r3, [r0, #0]
90000e50:	691b      	ldr	r3, [r3, #16]
90000e52:	4798      	blx	r3
90000e54:	2800      	cmp	r0, #0
90000e56:	f000 808b 	beq.w	90000f70 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x150>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5a:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
90000e5c:	6b28      	ldr	r0, [r5, #48]	; 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000e5e:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
90000e60:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000e62:	2800      	cmp	r0, #0
90000e64:	f000 808a 	beq.w	90000f7c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15c>
        const uint32_t index = offset - aviBufferStartOffset;
90000e68:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000e6a:	6b6c      	ldr	r4, [r5, #52]	; 0x34
90000e6c:	18a1      	adds	r1, r4, r2
90000e6e:	5ca2      	ldrb	r2, [r4, r2]
90000e70:	788c      	ldrb	r4, [r1, #2]
90000e72:	784e      	ldrb	r6, [r1, #1]
90000e74:	0424      	lsls	r4, r4, #16
90000e76:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000e7a:	4314      	orrs	r4, r2
90000e7c:	78ca      	ldrb	r2, [r1, #3]
90000e7e:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90000e82:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000e84:	f243 0630 	movw	r6, #12336	; 0x3030
90000e88:	e03a      	b.n	90000f00 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
90000e8a:	6bab      	ldr	r3, [r5, #56]	; 0x38
90000e8c:	2b07      	cmp	r3, #7
90000e8e:	f240 8082 	bls.w	90000f96 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x176>
        reader->seek(offset);
90000e92:	6803      	ldr	r3, [r0, #0]
90000e94:	4621      	mov	r1, r4
90000e96:	68db      	ldr	r3, [r3, #12]
90000e98:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000e9a:	6b28      	ldr	r0, [r5, #48]	; 0x30
90000e9c:	2208      	movs	r2, #8
90000e9e:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000ea0:	6803      	ldr	r3, [r0, #0]
90000ea2:	691b      	ldr	r3, [r3, #16]
90000ea4:	4798      	blx	r3
90000ea6:	b908      	cbnz	r0, 90000eac <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90000ea8:	f885 7040 	strb.w	r7, [r5, #64]	; 0x40
    if (reader != 0)
90000eac:	6b28      	ldr	r0, [r5, #48]	; 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
90000eae:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90000eb0:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
90000eb2:	2800      	cmp	r0, #0
90000eb4:	d078      	beq.n	90000fa8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x188>
        const uint32_t index = offset - aviBufferStartOffset;
90000eb6:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eb8:	6b69      	ldr	r1, [r5, #52]	; 0x34
90000eba:	18ca      	adds	r2, r1, r3
90000ebc:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ebe:	7994      	ldrb	r4, [r2, #6]
90000ec0:	f892 a005 	ldrb.w	sl, [r2, #5]
90000ec4:	0424      	lsls	r4, r4, #16
90000ec6:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000eca:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ece:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90000ed2:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ed4:	f892 8003 	ldrb.w	r8, [r2, #3]
90000ed8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90000edc:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee0:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90000ee4:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90000ee8:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90000eec:	f246 3164 	movw	r1, #25444	; 0x6364
90000ef0:	42b3      	cmp	r3, r6
90000ef2:	bf08      	it	eq
90000ef4:	428a      	cmpeq	r2, r1
90000ef6:	bf0c      	ite	eq
90000ef8:	2301      	moveq	r3, #1
90000efa:	2300      	movne	r3, #0
90000efc:	d035      	beq.n	90000f6a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14a>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
90000efe:	69ab      	ldr	r3, [r5, #24]
90000f00:	441c      	add	r4, r3
90000f02:	6aab      	ldr	r3, [r5, #40]	; 0x28
90000f04:	f104 0208 	add.w	r2, r4, #8
90000f08:	429a      	cmp	r2, r3
90000f0a:	d229      	bcs.n	90000f60 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x140>
        frameNumber++;
90000f0c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f0e:	3409      	adds	r4, #9
        frameNumber++;
90000f10:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90000f12:	f024 0401 	bic.w	r4, r4, #1
90000f16:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
90000f1a:	2800      	cmp	r0, #0
90000f1c:	d1b5      	bne.n	90000e8a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
90000f1e:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
        chunkSize = getU32(currentMovieOffset + 4);
90000f20:	f104 0e04 	add.w	lr, r4, #4
        uint32_t chunkType = getU16(currentMovieOffset + 2);
90000f24:	1ca2      	adds	r2, r4, #2
        volatile const uint8_t* const d = movieData + offset;
90000f26:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
90000f2a:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
90000f2c:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
90000f30:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
90000f34:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90000f38:	188c      	adds	r4, r1, r2
        val |= d[0];
90000f3a:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
90000f3c:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
90000f3e:	f811 100e 	ldrb.w	r1, [r1, lr]
        val |= d[1] << 8;
90000f42:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
90000f46:	f89c e001 	ldrb.w	lr, [ip, #1]
        val |= d[2] << 16;
90000f4a:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
90000f4e:	f89c c003 	ldrb.w	ip, [ip, #3]
        val |= d[2] << 16;
90000f52:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f54:	ea41 610c 	orr.w	r1, r1, ip, lsl #24
90000f58:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
90000f5c:	430c      	orrs	r4, r1
        return val;
90000f5e:	e7c5      	b.n	90000eec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
90000f60:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
90000f62:	6a2a      	ldr	r2, [r5, #32]
    return false;
90000f64:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
90000f66:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
90000f6a:	4618      	mov	r0, r3
90000f6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90000f70:	230d      	movs	r3, #13
90000f72:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90000f76:	e770      	b.n	90000e5a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90000f78:	1d22      	adds	r2, r4, #4
90000f7a:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
90000f7c:	6aec      	ldr	r4, [r5, #44]	; 0x2c
90000f7e:	18a1      	adds	r1, r4, r2
        val |= d[0];
90000f80:	5ca2      	ldrb	r2, [r4, r2]
        val |= d[1] << 8;
90000f82:	784e      	ldrb	r6, [r1, #1]
        val |= d[2] << 16;
90000f84:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90000f86:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90000f88:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
90000f8a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
90000f8e:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
90000f92:	4314      	orrs	r4, r2
        return val;
90000f94:	e775      	b.n	90000e82 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f96:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90000f98:	4b07      	ldr	r3, [pc, #28]	; (90000fb8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x198>)
90000f9a:	4a08      	ldr	r2, [pc, #32]	; (90000fbc <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
90000f9c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90000f9e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
90000fa2:	4807      	ldr	r0, [pc, #28]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fa4:	f025 f934 	bl	90026210 <__assert_func>
        uint32_t streamNo  = getU16(currentMovieOffset);
90000fa8:	461c      	mov	r4, r3
90000faa:	e7b8      	b.n	90000f1e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fac:	4b05      	ldr	r3, [pc, #20]	; (90000fc4 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90000fae:	21e5      	movs	r1, #229	; 0xe5
90000fb0:	4a05      	ldr	r2, [pc, #20]	; (90000fc8 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90000fb2:	4803      	ldr	r0, [pc, #12]	; (90000fc0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
90000fb4:	f025 f92c 	bl	90026210 <__assert_func>
90000fb8:	900276b4 	.word	0x900276b4
90000fbc:	900276c8 	.word	0x900276c8
90000fc0:	90027664 	.word	0x90027664
90000fc4:	9002770c 	.word	0x9002770c
90000fc8:	90027758 	.word	0x90027758

90000fcc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fcc:	6943      	ldr	r3, [r0, #20]
{
90000fce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90000fd2:	2b00      	cmp	r3, #0
90000fd4:	f000 80ad 	beq.w	90001132 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90000fd8:	4604      	mov	r4, r0
    if (reader != 0)
90000fda:	6b00      	ldr	r0, [r0, #48]	; 0x30
90000fdc:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90000fde:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90000fe0:	2800      	cmp	r0, #0
90000fe2:	d05f      	beq.n	900010a4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90000fe4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
90000fe6:	2b07      	cmp	r3, #7
90000fe8:	f240 80a9 	bls.w	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90000fec:	6803      	ldr	r3, [r0, #0]
90000fee:	4629      	mov	r1, r5
90000ff0:	68db      	ldr	r3, [r3, #12]
90000ff2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90000ff4:	6b20      	ldr	r0, [r4, #48]	; 0x30
90000ff6:	2208      	movs	r2, #8
90000ff8:	6b61      	ldr	r1, [r4, #52]	; 0x34
90000ffa:	6803      	ldr	r3, [r0, #0]
90000ffc:	691b      	ldr	r3, [r3, #16]
90000ffe:	4798      	blx	r3
90001000:	2800      	cmp	r0, #0
90001002:	d04a      	beq.n	9000109a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    if (reader != 0)
90001004:	6b20      	ldr	r0, [r4, #48]	; 0x30
    uint32_t streamNo  = getU16(currentMovieOffset);
90001006:	69a1      	ldr	r1, [r4, #24]
        aviBufferStartOffset = offset;
90001008:	63e5      	str	r5, [r4, #60]	; 0x3c
    if (reader != 0)
9000100a:	2800      	cmp	r0, #0
9000100c:	d049      	beq.n	900010a2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
9000100e:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001012:	1c8a      	adds	r2, r1, #2
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001014:	6b63      	ldr	r3, [r4, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001016:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
9000101a:	1b52      	subs	r2, r2, r5
9000101c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000101e:	eb03 070c 	add.w	r7, r3, ip
90001022:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001026:	eb03 0805 	add.w	r8, r3, r5
9000102a:	f813 c005 	ldrb.w	ip, [r3, r5]
9000102e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001032:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001036:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000103a:	78bd      	ldrb	r5, [r7, #2]
9000103c:	78ff      	ldrb	r7, [r7, #3]
9000103e:	042d      	lsls	r5, r5, #16
90001040:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001044:	ea45 050e 	orr.w	r5, r5, lr
90001048:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000104c:	189f      	adds	r7, r3, r2
9000104e:	5c9b      	ldrb	r3, [r3, r2]
90001050:	787a      	ldrb	r2, [r7, #1]
90001052:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001056:	194a      	adds	r2, r1, r5
90001058:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000105a:	f102 0e08 	add.w	lr, r2, #8
9000105e:	459e      	cmp	lr, r3
90001060:	d214      	bcs.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001062:	f243 0330 	movw	r3, #12336	; 0x3030
90001066:	459c      	cmp	ip, r3
90001068:	d139      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
9000106a:	f246 3364 	movw	r3, #25444	; 0x6364
9000106e:	429f      	cmp	r7, r3
90001070:	d135      	bne.n	900010de <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001072:	2d00      	cmp	r5, #0
90001074:	d137      	bne.n	900010e6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
            currentMovieOffset += 8;
90001076:	4672      	mov	r2, lr
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001078:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
9000107a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000107c:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001080:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001082:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001084:	d002      	beq.n	9000108c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001086:	2001      	movs	r0, #1
}
90001088:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
9000108c:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
9000108e:	6a23      	ldr	r3, [r4, #32]
90001090:	2000      	movs	r0, #0
90001092:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
9000109a:	230d      	movs	r3, #13
9000109c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
900010a0:	e7b0      	b.n	90001004 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
    uint32_t streamNo  = getU16(currentMovieOffset);
900010a2:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
900010a4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
900010a6:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900010a8:	1d2a      	adds	r2, r5, #4
        volatile const uint8_t* const d = movieData + offset;
900010aa:	1959      	adds	r1, r3, r5
        val |= d[0];
900010ac:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
900010b0:	1898      	adds	r0, r3, r2
        val |= d[1] << 8;
900010b2:	7849      	ldrb	r1, [r1, #1]
900010b4:	ea4c 2c01 	orr.w	ip, ip, r1, lsl #8
        val |= d[3] << 24;
900010b8:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
900010ba:	19dd      	adds	r5, r3, r7
        val |= d[0];
900010bc:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
900010be:	786d      	ldrb	r5, [r5, #1]
        val |= d[0];
900010c0:	5c9a      	ldrb	r2, [r3, r2]
        val |= d[1] << 8;
900010c2:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
900010c6:	f890 e001 	ldrb.w	lr, [r0, #1]
        val |= d[2] << 16;
900010ca:	7885      	ldrb	r5, [r0, #2]
        val |= d[3] << 24;
900010cc:	78c3      	ldrb	r3, [r0, #3]
900010ce:	2000      	movs	r0, #0
        val |= d[2] << 16;
900010d0:	042d      	lsls	r5, r5, #16
        val |= d[3] << 24;
900010d2:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
900010d6:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
900010da:	431d      	orrs	r5, r3
        return val;
900010dc:	e7bb      	b.n	90001056 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        currentMovieOffset += chunkSize;
900010de:	61a2      	str	r2, [r4, #24]
        if (chunkSize == 0) /* Empty frame - Skip */
900010e0:	2d00      	cmp	r5, #0
900010e2:	d1c9      	bne.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
900010e4:	e7c7      	b.n	90001076 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xaa>
            currentMovieOffset += 8;
900010e6:	f101 0708 	add.w	r7, r1, #8
900010ea:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
900010ec:	b1f0      	cbz	r0, 9000112c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
900010ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
900010f0:	429d      	cmp	r5, r3
900010f2:	d824      	bhi.n	9000113e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
900010f4:	6803      	ldr	r3, [r0, #0]
900010f6:	4639      	mov	r1, r7
900010f8:	68db      	ldr	r3, [r3, #12]
900010fa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900010fc:	6b20      	ldr	r0, [r4, #48]	; 0x30
900010fe:	462a      	mov	r2, r5
90001100:	6b61      	ldr	r1, [r4, #52]	; 0x34
90001102:	6803      	ldr	r3, [r0, #0]
90001104:	691b      	ldr	r3, [r3, #16]
90001106:	4798      	blx	r3
90001108:	b910      	cbnz	r0, 90001110 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
9000110a:	230d      	movs	r3, #13
9000110c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
        return aviBuffer;
90001110:	6b61      	ldr	r1, [r4, #52]	; 0x34
        aviBufferStartOffset = offset;
90001112:	63e7      	str	r7, [r4, #60]	; 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001114:	b126      	cbz	r6, 90001120 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001116:	4633      	mov	r3, r6
90001118:	462a      	mov	r2, r5
9000111a:	4620      	mov	r0, r4
9000111c:	f7ff fc60 	bl	900009e0 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001120:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001124:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001126:	442a      	add	r2, r5
            frameNumber++;
90001128:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
9000112a:	e7a5      	b.n	90001078 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
9000112c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000112e:	4439      	add	r1, r7
90001130:	e7f0      	b.n	90001114 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001132:	4b07      	ldr	r3, [pc, #28]	; (90001150 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001134:	21b1      	movs	r1, #177	; 0xb1
90001136:	4a07      	ldr	r2, [pc, #28]	; (90001154 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001138:	4807      	ldr	r0, [pc, #28]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000113a:	f025 f869 	bl	90026210 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000113e:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001140:	4b06      	ldr	r3, [pc, #24]	; (9000115c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001142:	4a07      	ldr	r2, [pc, #28]	; (90001160 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001144:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001146:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
            assert(!"Buffer to small");
9000114a:	4803      	ldr	r0, [pc, #12]	; (90001158 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
9000114c:	f025 f860 	bl	90026210 <__assert_func>
90001150:	9002770c 	.word	0x9002770c
90001154:	9002778c 	.word	0x9002778c
90001158:	90027664 	.word	0x90027664
9000115c:	900276b4 	.word	0x900276b4
90001160:	900276c8 	.word	0x900276c8

90001164 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001164:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001166:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001168:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000116a:	4b0e      	ldr	r3, [pc, #56]	; (900011a4 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
9000116c:	2001      	movs	r0, #1
9000116e:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001170:	63e2      	str	r2, [r4, #60]	; 0x3c
90001172:	6023      	str	r3, [r4, #0]
90001174:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001178:	e9c4 2205 	strd	r2, r2, [r4, #20]
9000117c:	e9c4 2207 	strd	r2, r2, [r4, #28]
90001180:	e9c4 2209 	strd	r2, r2, [r4, #36]	; 0x24
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001184:	e9c4 220b 	strd	r2, r2, [r4, #44]	; 0x2c
90001188:	e9c4 220d 	strd	r2, r2, [r4, #52]	; 0x34
    videoInfo.frame_width = 0;
9000118c:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
90001190:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001194:	f00b fefe 	bl	9000cf94 <osSemaphoreNew>
90001198:	4b03      	ldr	r3, [pc, #12]	; (900011a8 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
9000119a:	4602      	mov	r2, r0
}
9000119c:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000119e:	601a      	str	r2, [r3, #0]
}
900011a0:	bd10      	pop	{r4, pc}
900011a2:	bf00      	nop
900011a4:	900278b0 	.word	0x900278b0
900011a8:	24005bcc 	.word	0x24005bcc

900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
900011ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
900011b0:	2100      	movs	r1, #0
    if (reader != 0)
900011b2:	6b06      	ldr	r6, [r0, #48]	; 0x30
{
900011b4:	b083      	sub	sp, #12
900011b6:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900011b8:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900011ba:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
    if (reader != 0)
900011be:	2e00      	cmp	r6, #0
900011c0:	f000 81b4 	beq.w	9000152c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x380>
        if (length > aviBufferLength)
900011c4:	6b83      	ldr	r3, [r0, #56]	; 0x38
900011c6:	2b47      	cmp	r3, #71	; 0x47
900011c8:	f240 8265 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900011cc:	6833      	ldr	r3, [r6, #0]
900011ce:	4630      	mov	r0, r6
900011d0:	68db      	ldr	r3, [r3, #12]
900011d2:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011d4:	6b28      	ldr	r0, [r5, #48]	; 0x30
900011d6:	2248      	movs	r2, #72	; 0x48
900011d8:	6b69      	ldr	r1, [r5, #52]	; 0x34
900011da:	6803      	ldr	r3, [r0, #0]
900011dc:	691b      	ldr	r3, [r3, #16]
900011de:	4798      	blx	r3
900011e0:	2800      	cmp	r0, #0
900011e2:	f000 80ce 	beq.w	90001382 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        aviBufferStartOffset = offset;
900011e6:	2300      	movs	r3, #0
    if (reader != 0)
900011e8:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900011ea:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900011ec:	46b1      	mov	r9, r6
        aviBufferStartOffset = offset;
900011ee:	63eb      	str	r3, [r5, #60]	; 0x3c
    if (reader != 0)
900011f0:	2e00      	cmp	r6, #0
900011f2:	f000 819c 	beq.w	9000152e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x382>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011f6:	f8d5 a034 	ldr.w	sl, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900011fa:	2204      	movs	r2, #4
900011fc:	49c3      	ldr	r1, [pc, #780]	; (9000150c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900011fe:	eb0a 0b07 	add.w	fp, sl, r7
    return strncmp(src, str, num);
90001202:	4658      	mov	r0, fp
90001204:	f025 fae4 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001208:	2800      	cmp	r0, #0
9000120a:	f040 824d 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
9000120e:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001212:	2204      	movs	r2, #4
90001214:	49be      	ldr	r1, [pc, #760]	; (90001510 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
    currentMovieOffset += 8;
90001216:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001218:	4450      	add	r0, sl
9000121a:	f025 fad9 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000121e:	2800      	cmp	r0, #0
90001220:	f040 825d 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
90001224:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
90001228:	2204      	movs	r2, #4
9000122a:	49ba      	ldr	r1, [pc, #744]	; (90001514 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000122c:	eb0a 0008 	add.w	r0, sl, r8
    currentMovieOffset += 4;
90001230:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
90001234:	f025 facc 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001238:	9001      	str	r0, [sp, #4]
9000123a:	2800      	cmp	r0, #0
9000123c:	f040 8245 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001240:	f89b 4012 	ldrb.w	r4, [fp, #18]
90001244:	f89b 2011 	ldrb.w	r2, [fp, #17]
90001248:	0424      	lsls	r4, r4, #16
9000124a:	f89b 3013 	ldrb.w	r3, [fp, #19]
9000124e:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
90001252:	f89b 2010 	ldrb.w	r2, [fp, #16]
90001256:	4314      	orrs	r4, r2
    assert(aviListSize);
90001258:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000125c:	f000 822e 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001260:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001264:	2204      	movs	r2, #4
90001266:	49ac      	ldr	r1, [pc, #688]	; (90001518 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
90001268:	4450      	add	r0, sl
9000126a:	f025 fab1 	bl	900267d0 <strncmp>
    if (compare(offset, "hdrl", 4))
9000126e:	2800      	cmp	r0, #0
90001270:	f000 808b 	beq.w	9000138a <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1de>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001274:	2306      	movs	r3, #6
        foundFrame = false;
90001276:	f8dd b004 	ldr.w	fp, [sp, #4]
    offset += 4;
9000127a:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000127e:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001282:	4450      	add	r0, sl
    return strncmp(src, str, num);
90001284:	2204      	movs	r2, #4
90001286:	49a5      	ldr	r1, [pc, #660]	; (9000151c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
90001288:	f025 faa2 	bl	900267d0 <strncmp>
    if (compare(offset, "avih", 4))
9000128c:	2800      	cmp	r0, #0
9000128e:	f000 808f 	beq.w	900013b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x204>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001292:	2307      	movs	r3, #7
90001294:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001298:	4444      	add	r4, r8
9000129a:	3408      	adds	r4, #8
    if (reader != 0)
9000129c:	f1b9 0f00 	cmp.w	r9, #0
900012a0:	d015      	beq.n	900012ce <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x122>
        if (length > aviBufferLength)
900012a2:	6bab      	ldr	r3, [r5, #56]	; 0x38
900012a4:	2b0b      	cmp	r3, #11
900012a6:	f240 81f6 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900012aa:	f8d9 3000 	ldr.w	r3, [r9]
900012ae:	4621      	mov	r1, r4
900012b0:	4648      	mov	r0, r9
900012b2:	68db      	ldr	r3, [r3, #12]
900012b4:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900012b6:	6b28      	ldr	r0, [r5, #48]	; 0x30
900012b8:	220c      	movs	r2, #12
900012ba:	6b69      	ldr	r1, [r5, #52]	; 0x34
900012bc:	6803      	ldr	r3, [r0, #0]
900012be:	691b      	ldr	r3, [r3, #16]
900012c0:	4798      	blx	r3
900012c2:	b910      	cbnz	r0, 900012ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x11e>
            lastError = AVI_ERROR_EOF_REACHED;
900012c4:	230d      	movs	r3, #13
900012c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
900012ca:	6b2e      	ldr	r6, [r5, #48]	; 0x30
900012cc:	63ec      	str	r4, [r5, #60]	; 0x3c
        return aviBuffer;
900012ce:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
    return strncmp(src, str, num);
900012d2:	4f93      	ldr	r7, [pc, #588]	; (90001520 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>)
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012d4:	f104 0808 	add.w	r8, r4, #8
    if (reader != 0)
900012d8:	2e00      	cmp	r6, #0
900012da:	d041      	beq.n	90001360 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b4>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012dc:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    return strncmp(src, str, num);
900012de:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e0:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900012e2:	4639      	mov	r1, r7
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900012e4:	eba8 0303 	sub.w	r3, r8, r3
900012e8:	4418      	add	r0, r3
    return strncmp(src, str, num);
900012ea:	f025 fa71 	bl	900267d0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900012ee:	2800      	cmp	r0, #0
900012f0:	d03e      	beq.n	90001370 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1c4>
900012f2:	f1b9 0f00 	cmp.w	r9, #0
900012f6:	d13e      	bne.n	90001376 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ca>
900012f8:	6aab      	ldr	r3, [r5, #40]	; 0x28
900012fa:	42a3      	cmp	r3, r4
900012fc:	f240 80b1 	bls.w	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
90001300:	3404      	adds	r4, #4
    if (reader != 0)
90001302:	2e00      	cmp	r6, #0
90001304:	d046      	beq.n	90001394 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
        const uint32_t index = offset - aviBufferStartOffset;
90001306:	6bea      	ldr	r2, [r5, #60]	; 0x3c
        if (length > aviBufferLength)
90001308:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000130c:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
9000130e:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001310:	eb01 0204 	add.w	r2, r1, r4
90001314:	5d09      	ldrb	r1, [r1, r4]
90001316:	7894      	ldrb	r4, [r2, #2]
90001318:	7850      	ldrb	r0, [r2, #1]
9000131a:	ea4f 4404 	mov.w	r4, r4, lsl #16
9000131e:	78d2      	ldrb	r2, [r2, #3]
90001320:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
90001324:	ea44 0401 	orr.w	r4, r4, r1
90001328:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
9000132c:	4444      	add	r4, r8
        if (length > aviBufferLength)
9000132e:	f240 81b2 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
90001332:	6833      	ldr	r3, [r6, #0]
90001334:	4621      	mov	r1, r4
90001336:	4630      	mov	r0, r6
90001338:	68db      	ldr	r3, [r3, #12]
9000133a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000133c:	6b28      	ldr	r0, [r5, #48]	; 0x30
9000133e:	220c      	movs	r2, #12
90001340:	6b69      	ldr	r1, [r5, #52]	; 0x34
90001342:	6803      	ldr	r3, [r0, #0]
90001344:	691b      	ldr	r3, [r3, #16]
90001346:	4798      	blx	r3
90001348:	b910      	cbnz	r0, 90001350 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a4>
            lastError = AVI_ERROR_EOF_REACHED;
9000134a:	230d      	movs	r3, #13
9000134c:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
90001350:	6b2e      	ldr	r6, [r5, #48]	; 0x30
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001352:	f104 0808 	add.w	r8, r4, #8
90001356:	f895 9040 	ldrb.w	r9, [r5, #64]	; 0x40
        aviBufferStartOffset = offset;
9000135a:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
9000135c:	2e00      	cmp	r6, #0
9000135e:	d1bd      	bne.n	900012dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x130>
        src = (const char*)movieData + offset;
90001360:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001362:	2204      	movs	r2, #4
90001364:	4639      	mov	r1, r7
        src = (const char*)movieData + offset;
90001366:	4440      	add	r0, r8
    return strncmp(src, str, num);
90001368:	f025 fa32 	bl	900267d0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000136c:	2800      	cmp	r0, #0
9000136e:	d1c0      	bne.n	900012f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x146>
    if (lastError != AVI_NO_ERROR)
90001370:	f1b9 0f00 	cmp.w	r9, #0
90001374:	d075      	beq.n	90001462 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b6>
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001376:	230a      	movs	r3, #10
90001378:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
9000137c:	b003      	add	sp, #12
9000137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001382:	230d      	movs	r3, #13
90001384:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
90001388:	e72d      	b.n	900011e6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x3a>
    offset += 4;
9000138a:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000138e:	f04f 0b01 	mov.w	fp, #1
90001392:	e776      	b.n	90001282 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd6>
        volatile const uint8_t* const d = movieData + offset;
90001394:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
90001396:	191a      	adds	r2, r3, r4
        val |= d[0];
90001398:	5d1b      	ldrb	r3, [r3, r4]
        val |= d[1] << 8;
9000139a:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
9000139c:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
9000139e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900013a0:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900013a2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
900013a6:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
900013aa:	431c      	orrs	r4, r3
        listOffset += listSize;
900013ac:	4444      	add	r4, r8
    return movieData + offset;
900013ae:	e791      	b.n	900012d4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    if (foundFrame)
900013b0:	f1bb 0f00 	cmp.w	fp, #0
900013b4:	f43f af70 	beq.w	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
900013b8:	f107 0120 	add.w	r1, r7, #32
    if (reader != 0)
900013bc:	f1b9 0f00 	cmp.w	r9, #0
900013c0:	f000 8125 	beq.w	9000160e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
900013c4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013c6:	6b6a      	ldr	r2, [r5, #52]	; 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900013c8:	1ac9      	subs	r1, r1, r3
900013ca:	f1c3 0030 	rsb	r0, r3, #48	; 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
900013ce:	f8df c158 	ldr.w	ip, [pc, #344]	; 90001528 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013d2:	f812 a001 	ldrb.w	sl, [r2, r1]
900013d6:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
900013da:	f1c3 0140 	rsb	r1, r3, #64	; 0x40
900013de:	f1c3 0344 	rsb	r3, r3, #68	; 0x44
900013e2:	4438      	add	r0, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013e4:	f89e b001 	ldrb.w	fp, [lr, #1]
        const uint32_t index = offset - aviBufferStartOffset;
900013e8:	4439      	add	r1, r7
900013ea:	441f      	add	r7, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900013ec:	f89e 3002 	ldrb.w	r3, [lr, #2]
900013f0:	f89e e003 	ldrb.w	lr, [lr, #3]
900013f4:	041b      	lsls	r3, r3, #16
900013f6:	ea43 230b 	orr.w	r3, r3, fp, lsl #8
900013fa:	ea43 030a 	orr.w	r3, r3, sl
900013fe:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001402:	fbac c303 	umull	ip, r3, ip, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001406:	eb02 0c00 	add.w	ip, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
9000140a:	099b      	lsrs	r3, r3, #6
9000140c:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000140e:	f89c 3002 	ldrb.w	r3, [ip, #2]
90001412:	f89c a001 	ldrb.w	sl, [ip, #1]
90001416:	041b      	lsls	r3, r3, #16
90001418:	f812 e000 	ldrb.w	lr, [r2, r0]
9000141c:	f89c c003 	ldrb.w	ip, [ip, #3]
90001420:	1850      	adds	r0, r2, r1
90001422:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001426:	ea43 030e 	orr.w	r3, r3, lr
9000142a:	ea43 630c 	orr.w	r3, r3, ip, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
9000142e:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001430:	7883      	ldrb	r3, [r0, #2]
90001432:	f890 c001 	ldrb.w	ip, [r0, #1]
90001436:	041b      	lsls	r3, r3, #16
90001438:	5c51      	ldrb	r1, [r2, r1]
9000143a:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000143e:	430b      	orrs	r3, r1
90001440:	78c1      	ldrb	r1, [r0, #3]
90001442:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
90001446:	19d1      	adds	r1, r2, r7
        videoInfo.frame_width = getU32(offset + 32);
90001448:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000144a:	788b      	ldrb	r3, [r1, #2]
9000144c:	7848      	ldrb	r0, [r1, #1]
9000144e:	041b      	lsls	r3, r3, #16
90001450:	5dd2      	ldrb	r2, [r2, r7]
90001452:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001456:	4313      	orrs	r3, r2
90001458:	78ca      	ldrb	r2, [r1, #3]
9000145a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
9000145e:	612b      	str	r3, [r5, #16]
90001460:	e71a      	b.n	90001298 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xec>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001462:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
90001466:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001468:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000146a:	2e00      	cmp	r6, #0
9000146c:	f000 80b4 	beq.w	900015d8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001470:	6beb      	ldr	r3, [r5, #60]	; 0x3c
90001472:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001474:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	; 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001478:	f104 0c02 	add.w	ip, r4, #2
9000147c:	1c67      	adds	r7, r4, #1
9000147e:	f811 e004 	ldrb.w	lr, [r1, r4]
90001482:	1ce0      	adds	r0, r4, #3
90001484:	f811 300c 	ldrb.w	r3, [r1, ip]
        if (length > aviBufferLength)
90001488:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000148a:	f811 9007 	ldrb.w	r9, [r1, r7]
9000148e:	ea4f 4303 	mov.w	r3, r3, lsl #16
90001492:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
90001496:	ea43 030e 	orr.w	r3, r3, lr
9000149a:	f811 e000 	ldrb.w	lr, [r1, r0]
9000149e:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900014a2:	4443      	add	r3, r8
900014a4:	626b      	str	r3, [r5, #36]	; 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014a6:	f811 300c 	ldrb.w	r3, [r1, ip]
900014aa:	f811 c007 	ldrb.w	ip, [r1, r7]
900014ae:	5d0f      	ldrb	r7, [r1, r4]
900014b0:	ea4f 4403 	mov.w	r4, r3, lsl #16
900014b4:	5c09      	ldrb	r1, [r1, r0]
900014b6:	ea44 240c 	orr.w	r4, r4, ip, lsl #8
900014ba:	ea44 0407 	orr.w	r4, r4, r7
900014be:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900014c2:	4444      	add	r4, r8
        if (length > aviBufferLength)
900014c4:	f240 80e7 	bls.w	90001696 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4ea>
        reader->seek(offset);
900014c8:	6833      	ldr	r3, [r6, #0]
900014ca:	4621      	mov	r1, r4
900014cc:	4630      	mov	r0, r6
900014ce:	68db      	ldr	r3, [r3, #12]
900014d0:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900014d2:	6b28      	ldr	r0, [r5, #48]	; 0x30
900014d4:	2204      	movs	r2, #4
900014d6:	6b69      	ldr	r1, [r5, #52]	; 0x34
900014d8:	6803      	ldr	r3, [r0, #0]
900014da:	691b      	ldr	r3, [r3, #16]
900014dc:	4798      	blx	r3
900014de:	2800      	cmp	r0, #0
900014e0:	d06a      	beq.n	900015b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40c>
    if (reader != 0)
900014e2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
        aviBufferStartOffset = offset;
900014e4:	63ec      	str	r4, [r5, #60]	; 0x3c
    if (reader != 0)
900014e6:	2b00      	cmp	r3, #0
900014e8:	f000 8103 	beq.w	900016f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014ec:	6b68      	ldr	r0, [r5, #52]	; 0x34
    return strncmp(src, str, num);
900014ee:	2204      	movs	r2, #4
900014f0:	490c      	ldr	r1, [pc, #48]	; (90001524 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>)
900014f2:	f025 f96d 	bl	900267d0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
900014f6:	2800      	cmp	r0, #0
900014f8:	d168      	bne.n	900015cc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x420>
    frameNumber = 1; /* next frame number is 1 */
900014fa:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
900014fc:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
900014fe:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
90001500:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
90001502:	622b      	str	r3, [r5, #32]
}
90001504:	b003      	add	sp, #12
90001506:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000150a:	bf00      	nop
9000150c:	900277e8 	.word	0x900277e8
90001510:	900278a0 	.word	0x900278a0
90001514:	90027898 	.word	0x90027898
90001518:	90027890 	.word	0x90027890
9000151c:	90027878 	.word	0x90027878
90001520:	90027880 	.word	0x90027880
90001524:	90027888 	.word	0x90027888
90001528:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
9000152c:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
9000152e:	f8d5 902c 	ldr.w	r9, [r5, #44]	; 0x2c
    return strncmp(src, str, num);
90001532:	2204      	movs	r2, #4
90001534:	4970      	ldr	r1, [pc, #448]	; (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x54c>)
90001536:	eb09 0007 	add.w	r0, r9, r7
9000153a:	f025 f949 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
9000153e:	2800      	cmp	r0, #0
90001540:	f040 80b2 	bne.w	900016a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fc>
    currentMovieOffset += 8;
90001544:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001548:	2204      	movs	r2, #4
9000154a:	496c      	ldr	r1, [pc, #432]	; (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x550>)
    currentMovieOffset += 8;
9000154c:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
9000154e:	4448      	add	r0, r9
90001550:	f025 f93e 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001554:	2800      	cmp	r0, #0
90001556:	f040 80c2 	bne.w	900016de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    currentMovieOffset += 4;
9000155a:	f107 080c 	add.w	r8, r7, #12
    return strncmp(src, str, num);
9000155e:	2204      	movs	r2, #4
90001560:	4967      	ldr	r1, [pc, #412]	; (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x554>)
90001562:	eb09 0008 	add.w	r0, r9, r8
    currentMovieOffset += 4;
90001566:	f8c5 8018 	str.w	r8, [r5, #24]
    return strncmp(src, str, num);
9000156a:	f025 f931 	bl	900267d0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
9000156e:	4683      	mov	fp, r0
90001570:	2800      	cmp	r0, #0
90001572:	f040 80aa 	bne.w	900016ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
90001576:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
9000157a:	eb09 0203 	add.w	r2, r9, r3
        val |= d[0];
9000157e:	f819 3003 	ldrb.w	r3, [r9, r3]
        val |= d[1] << 8;
90001582:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
90001584:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
90001586:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001588:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
9000158a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000158e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
    assert(aviListSize);
90001592:	431c      	orrs	r4, r3
90001594:	f000 8092 	beq.w	900016bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001598:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
9000159c:	2204      	movs	r2, #4
9000159e:	4959      	ldr	r1, [pc, #356]	; (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x558>)
900015a0:	4448      	add	r0, r9
900015a2:	f025 f915 	bl	900267d0 <strncmp>
    if (compare(offset, "hdrl", 4))
900015a6:	b958      	cbnz	r0, 900015c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x414>
    offset += 4;
900015a8:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
900015ac:	f04f 0b01 	mov.w	fp, #1
        src = (const char*)movieData + offset;
900015b0:	4448      	add	r0, r9
900015b2:	f04f 0900 	mov.w	r9, #0
900015b6:	e665      	b.n	90001284 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xd8>
            lastError = AVI_ERROR_EOF_REACHED;
900015b8:	230d      	movs	r3, #13
900015ba:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
900015be:	e790      	b.n	900014e2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x336>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c0:	2306      	movs	r3, #6
    offset += 4;
900015c2:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900015c6:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
    if (reader != 0)
900015ca:	e7f1      	b.n	900015b0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x404>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900015cc:	230b      	movs	r3, #11
900015ce:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
}
900015d2:	b003      	add	sp, #12
900015d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900015d8:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
        volatile const uint8_t* const d = movieData + offset;
900015da:	1902      	adds	r2, r0, r4
        val |= d[0];
900015dc:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900015de:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900015e0:	7893      	ldrb	r3, [r2, #2]
900015e2:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
900015e4:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900015e8:	78d6      	ldrb	r6, [r2, #3]
900015ea:	ea41 6106 	orr.w	r1, r1, r6, lsl #24
900015ee:	430b      	orrs	r3, r1
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015f0:	4443      	add	r3, r8
900015f2:	626b      	str	r3, [r5, #36]	; 0x24
        val |= d[0];
900015f4:	5d03      	ldrb	r3, [r0, r4]
        val |= d[1] << 8;
900015f6:	7851      	ldrb	r1, [r2, #1]
        val |= d[2] << 16;
900015f8:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900015fa:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
900015fc:	0424      	lsls	r4, r4, #16
        val |= d[3] << 24;
900015fe:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
90001602:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001606:	431c      	orrs	r4, r3
    listOffset += listSize;
90001608:	4444      	add	r4, r8
        src = (const char*)movieData + offset;
9000160a:	4420      	add	r0, r4
9000160c:	e76f      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
9000160e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
90001610:	f107 0e30 	add.w	lr, r7, #48	; 0x30
        videoInfo.frame_width = getU32(offset + 32);
90001614:	f107 0c40 	add.w	ip, r7, #64	; 0x40
        videoInfo.frame_height = getU32(offset + 36);
90001618:	3744      	adds	r7, #68	; 0x44
        volatile const uint8_t* const d = movieData + offset;
9000161a:	1850      	adds	r0, r2, r1
        val |= d[0];
9000161c:	f812 b001 	ldrb.w	fp, [r2, r1]
        volatile const uint8_t* const d = movieData + offset;
90001620:	eb02 010e 	add.w	r1, r2, lr
        val |= d[1] << 8;
90001624:	f890 a001 	ldrb.w	sl, [r0, #1]
        val |= d[2] << 16;
90001628:	7883      	ldrb	r3, [r0, #2]
        val |= d[3] << 24;
9000162a:	78c0      	ldrb	r0, [r0, #3]
        val |= d[2] << 16;
9000162c:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000162e:	ea4b 6000 	orr.w	r0, fp, r0, lsl #24
90001632:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
90001636:	4303      	orrs	r3, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001638:	4833      	ldr	r0, [pc, #204]	; (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55c>)
9000163a:	fba0 0303 	umull	r0, r3, r0, r3
9000163e:	099b      	lsrs	r3, r3, #6
90001640:	606b      	str	r3, [r5, #4]
        val |= d[0];
90001642:	f812 000e 	ldrb.w	r0, [r2, lr]
        val |= d[1] << 8;
90001646:	f891 e001 	ldrb.w	lr, [r1, #1]
        val |= d[2] << 16;
9000164a:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
9000164c:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
9000164e:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001650:	ea40 6101 	orr.w	r1, r0, r1, lsl #24
90001654:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
        volatile const uint8_t* const d = movieData + offset;
90001658:	eb02 0e0c 	add.w	lr, r2, ip
        val |= d[3] << 24;
9000165c:	430b      	orrs	r3, r1
        volatile const uint8_t* const d = movieData + offset;
9000165e:	19d1      	adds	r1, r2, r7
        videoInfo.number_of_frames = getU32(offset + 16);
90001660:	60ab      	str	r3, [r5, #8]
        val |= d[0];
90001662:	f812 000c 	ldrb.w	r0, [r2, ip]
        val |= d[1] << 8;
90001666:	f89e c001 	ldrb.w	ip, [lr, #1]
        val |= d[2] << 16;
9000166a:	f89e 3002 	ldrb.w	r3, [lr, #2]
        val |= d[3] << 24;
9000166e:	f89e e003 	ldrb.w	lr, [lr, #3]
        val |= d[2] << 16;
90001672:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
90001674:	ea40 600e 	orr.w	r0, r0, lr, lsl #24
90001678:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000167c:	4303      	orrs	r3, r0
        videoInfo.frame_width = getU32(offset + 32);
9000167e:	60eb      	str	r3, [r5, #12]
        val |= d[0];
90001680:	5dd2      	ldrb	r2, [r2, r7]
        val |= d[1] << 8;
90001682:	7848      	ldrb	r0, [r1, #1]
        val |= d[2] << 16;
90001684:	788b      	ldrb	r3, [r1, #2]
        val |= d[3] << 24;
90001686:	78c9      	ldrb	r1, [r1, #3]
        val |= d[2] << 16;
90001688:	041b      	lsls	r3, r3, #16
        val |= d[3] << 24;
9000168a:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
9000168e:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001692:	4313      	orrs	r3, r2
        return val;
90001694:	e6e3      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2b2>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001696:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001698:	4b1c      	ldr	r3, [pc, #112]	; (9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000169a:	4a1d      	ldr	r2, [pc, #116]	; (90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
9000169c:	219f      	movs	r1, #159	; 0x9f
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000169e:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
            assert(!"Buffer to small");
900016a2:	481c      	ldr	r0, [pc, #112]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016a4:	f024 fdb4 	bl	90026210 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900016a8:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900016aa:	4b1b      	ldr	r3, [pc, #108]	; (90001718 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
900016ac:	4a1b      	ldr	r2, [pc, #108]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016ae:	f240 112d 	movw	r1, #301	; 0x12d
        lastError = AVI_ERROR_NOT_RIFF;
900016b2:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"RIFF header not found");
900016b6:	4817      	ldr	r0, [pc, #92]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016b8:	f024 fdaa 	bl	90026210 <__assert_func>
    assert(aviListSize);
900016bc:	4b18      	ldr	r3, [pc, #96]	; (90001720 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
900016be:	f44f 71a1 	mov.w	r1, #322	; 0x142
900016c2:	4a16      	ldr	r2, [pc, #88]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016c4:	4813      	ldr	r0, [pc, #76]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016c6:	f024 fda3 	bl	90026210 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900016cc:	4b15      	ldr	r3, [pc, #84]	; (90001724 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900016ce:	4a13      	ldr	r2, [pc, #76]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016d0:	f44f 719e 	mov.w	r1, #316	; 0x13c
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900016d4:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI LIST not found");
900016d8:	480e      	ldr	r0, [pc, #56]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016da:	f024 fd99 	bl	90026210 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900016e0:	4b11      	ldr	r3, [pc, #68]	; (90001728 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900016e2:	4a0e      	ldr	r2, [pc, #56]	; (9000171c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
900016e4:	f240 1135 	movw	r1, #309	; 0x135
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900016e8:	f885 0040 	strb.w	r0, [r5, #64]	; 0x40
        assert(!"AVI header not found");
900016ec:	4809      	ldr	r0, [pc, #36]	; (90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
900016ee:	f024 fd8f 	bl	90026210 <__assert_func>
        src = (const char*)movieData + offset;
900016f2:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
900016f4:	4420      	add	r0, r4
900016f6:	e6fa      	b.n	900014ee <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x342>
900016f8:	900277e8 	.word	0x900277e8
900016fc:	900278a0 	.word	0x900278a0
90001700:	90027898 	.word	0x90027898
90001704:	90027890 	.word	0x90027890
90001708:	10624dd3 	.word	0x10624dd3
9000170c:	900276b4 	.word	0x900276b4
90001710:	900276c8 	.word	0x900276c8
90001714:	90027664 	.word	0x90027664
90001718:	900277f0 	.word	0x900277f0
9000171c:	9002780c 	.word	0x9002780c
90001720:	9002786c 	.word	0x9002786c
90001724:	90027854 	.word	0x90027854
90001728:	9002783c 	.word	0x9002783c

9000172c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000172c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000172e:	2400      	movs	r4, #0
    movieLength = length;
90001730:	e9c0 210a 	strd	r2, r1, [r0, #40]	; 0x28
    reader = 0; /* not using reader */
90001734:	6304      	str	r4, [r0, #48]	; 0x30
}
90001736:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000173a:	f7ff bd37 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000173e:	bf00      	nop

90001740 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001740:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001742:	680b      	ldr	r3, [r1, #0]
{
90001744:	4604      	mov	r4, r0
    movieData = 0;
90001746:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001748:	4608      	mov	r0, r1
9000174a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000174c:	e9c4 210b 	strd	r2, r1, [r4, #44]	; 0x2c
    movieLength = reader.getDataLength();
90001750:	4798      	blx	r3
90001752:	4603      	mov	r3, r0
    readVideoHeader();
90001754:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001756:	62a3      	str	r3, [r4, #40]	; 0x28
}
90001758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000175c:	f7ff bd26 	b.w	900011ac <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001760 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001760:	684b      	ldr	r3, [r1, #4]
90001762:	2b01      	cmp	r3, #1
90001764:	d015      	beq.n	90001792 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001766:	2b02      	cmp	r3, #2
90001768:	d00b      	beq.n	90001782 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
9000176a:	b94b      	cbnz	r3, 90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
9000176c:	68cb      	ldr	r3, [r1, #12]
9000176e:	0758      	lsls	r0, r3, #29
90001770:	d124      	bne.n	900017bc <HAL_JPEG_InfoReadyCallback+0x5c>
                if ((pInfo->ImageHeight % 8) != 0)
90001772:	688b      	ldr	r3, [r1, #8]
90001774:	075a      	lsls	r2, r3, #29
90001776:	d003      	beq.n	90001780 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001778:	f023 0307 	bic.w	r3, r3, #7
9000177c:	3308      	adds	r3, #8
9000177e:	608b      	str	r3, [r1, #8]
    }
90001780:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001782:	68cb      	ldr	r3, [r1, #12]
90001784:	071a      	lsls	r2, r3, #28
90001786:	d0f4      	beq.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001788:	f023 030f 	bic.w	r3, r3, #15
9000178c:	3310      	adds	r3, #16
9000178e:	60cb      	str	r3, [r1, #12]
90001790:	e7ef      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001792:	68cb      	ldr	r3, [r1, #12]
90001794:	071a      	lsls	r2, r3, #28
90001796:	d003      	beq.n	900017a0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001798:	f023 030f 	bic.w	r3, r3, #15
9000179c:	3310      	adds	r3, #16
9000179e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
900017a0:	688a      	ldr	r2, [r1, #8]
900017a2:	0710      	lsls	r0, r2, #28
900017a4:	d003      	beq.n	900017ae <HAL_JPEG_InfoReadyCallback+0x4e>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
900017a6:	f022 020f 	bic.w	r2, r2, #15
900017aa:	3210      	adds	r2, #16
900017ac:	608a      	str	r2, [r1, #8]
            hMCU = (pInfo->ImageWidth / MCU_WIDTH_PIXELS);
900017ae:	091b      	lsrs	r3, r3, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b0:	4905      	ldr	r1, [pc, #20]	; (900017c8 <HAL_JPEG_InfoReadyCallback+0x68>)
            vMCU = (pInfo->ImageHeight / MCU_HEIGHT_PIXELS);
900017b2:	0912      	lsrs	r2, r2, #4
            MCU_TotalNb = (hMCU * vMCU);
900017b4:	fb02 f303 	mul.w	r3, r2, r3
900017b8:	600b      	str	r3, [r1, #0]
900017ba:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
900017bc:	f023 0307 	bic.w	r3, r3, #7
900017c0:	3308      	adds	r3, #8
900017c2:	60cb      	str	r3, [r1, #12]
900017c4:	e7d5      	b.n	90001772 <HAL_JPEG_InfoReadyCallback+0x12>
900017c6:	bf00      	nop
900017c8:	24005ba4 	.word	0x24005ba4

900017cc <HAL_JPEG_GetDataCallback>:
    {
900017cc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
900017ce:	4c0c      	ldr	r4, [pc, #48]	; (90001800 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d0:	4a0c      	ldr	r2, [pc, #48]	; (90001804 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
900017d2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
900017d6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017d8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
900017da:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
900017dc:	d302      	bcc.n	900017e4 <HAL_JPEG_GetDataCallback+0x18>
    }
900017de:	f85d 4b04 	ldr.w	r4, [sp], #4
900017e2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
900017e4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017e6:	4b08      	ldr	r3, [pc, #32]	; (90001808 <HAL_JPEG_GetDataCallback+0x3c>)
900017e8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017ea:	f5b2 4f50 	cmp.w	r2, #53248	; 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017ee:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017f0:	bf28      	it	cs
900017f2:	f44f 4250 	movcs.w	r2, #53248	; 0xd000
    }
900017f6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
900017fa:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
900017fc:	f008 b82e 	b.w	9000985c <HAL_JPEG_ConfigInputBuffer>
90001800:	24005bb8 	.word	0x24005bb8
90001804:	24005bc4 	.word	0x24005bc4
90001808:	24005bc0 	.word	0x24005bc0

9000180c <HAL_JPEG_DataReadyCallback>:
    {
9000180c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000180e:	4c22      	ldr	r4, [pc, #136]	; (90001898 <HAL_JPEG_DataReadyCallback+0x8c>)
    {
90001810:	4606      	mov	r6, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001812:	4d22      	ldr	r5, [pc, #136]	; (9000189c <HAL_JPEG_DataReadyCallback+0x90>)
90001814:	6823      	ldr	r3, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001816:	6820      	ldr	r0, [r4, #0]
        const uint32_t MCU = MCU_BlockIndex;
90001818:	4921      	ldr	r1, [pc, #132]	; (900018a0 <HAL_JPEG_DataReadyCallback+0x94>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000181a:	011b      	lsls	r3, r3, #4
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
9000181c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001820:	4f20      	ldr	r7, [pc, #128]	; (900018a4 <HAL_JPEG_DataReadyCallback+0x98>)
        const uint32_t MCU = MCU_BlockIndex;
90001822:	f8d1 c000 	ldr.w	ip, [r1]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90001826:	6082      	str	r2, [r0, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
90001828:	6820      	ldr	r0, [r4, #0]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
9000182a:	68fa      	ldr	r2, [r7, #12]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_index = MCU;
9000182c:	eb05 1000 	add.w	r0, r5, r0, lsl #4
90001830:	f8c0 c00c 	str.w	ip, [r0, #12]
        MCU_BlockIndex += JPEG_ConvertorParams.MCU_pr_line;
90001834:	6808      	ldr	r0, [r1, #0]
90001836:	4410      	add	r0, r2
90001838:	6008      	str	r0, [r1, #0]
        JPEG_OUT_Write_BufferIndex++;
9000183a:	6821      	ldr	r1, [r4, #0]
9000183c:	3101      	adds	r1, #1
9000183e:	6021      	str	r1, [r4, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90001840:	2101      	movs	r1, #1
90001842:	54e9      	strb	r1, [r5, r3]
        if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90001844:	6823      	ldr	r3, [r4, #0]
90001846:	428b      	cmp	r3, r1
90001848:	d901      	bls.n	9000184e <HAL_JPEG_DataReadyCallback+0x42>
            JPEG_OUT_Write_BufferIndex = 0;
9000184a:	2300      	movs	r3, #0
9000184c:	6023      	str	r3, [r4, #0]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000184e:	6823      	ldr	r3, [r4, #0]
90001850:	011b      	lsls	r3, r3, #4
90001852:	5ceb      	ldrb	r3, [r5, r3]
90001854:	b983      	cbnz	r3, 90001878 <HAL_JPEG_DataReadyCallback+0x6c>
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001856:	6823      	ldr	r3, [r4, #0]
90001858:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000185c:	4630      	mov	r0, r6
9000185e:	eb05 1503 	add.w	r5, r5, r3, lsl #4
90001862:	01d2      	lsls	r2, r2, #7
90001864:	6869      	ldr	r1, [r5, #4]
90001866:	f007 fffd 	bl	90009864 <HAL_JPEG_ConfigOutputBuffer>
        if (!DMA2D_reference->isDMARunning() && !DMA2D_reference->getReserved())
9000186a:	4b0f      	ldr	r3, [pc, #60]	; (900018a8 <HAL_JPEG_DataReadyCallback+0x9c>)
9000186c:	681b      	ldr	r3, [r3, #0]
9000186e:	7a1a      	ldrb	r2, [r3, #8]
90001870:	b90a      	cbnz	r2, 90001876 <HAL_JPEG_DataReadyCallback+0x6a>
        return isReserved;
90001872:	7a9b      	ldrb	r3, [r3, #10]
90001874:	b14b      	cbz	r3, 9000188a <HAL_JPEG_DataReadyCallback+0x7e>
    }
90001876:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001878:	2102      	movs	r1, #2
9000187a:	4630      	mov	r0, r6
9000187c:	f007 ffb6 	bl	900097ec <HAL_JPEG_Pause>
            JPEG_output_is_paused = 1;
90001880:	4b0a      	ldr	r3, [pc, #40]	; (900018ac <HAL_JPEG_DataReadyCallback+0xa0>)
90001882:	2101      	movs	r1, #1
        HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001884:	68fa      	ldr	r2, [r7, #12]
            JPEG_output_is_paused = 1;
90001886:	6019      	str	r1, [r3, #0]
90001888:	e7e5      	b.n	90001856 <HAL_JPEG_DataReadyCallback+0x4a>
            SEM_POST(semDecodingDone);
9000188a:	4b09      	ldr	r3, [pc, #36]	; (900018b0 <HAL_JPEG_DataReadyCallback+0xa4>)
9000188c:	6818      	ldr	r0, [r3, #0]
    }
9000188e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
            SEM_POST(semDecodingDone);
90001892:	f00b bc03 	b.w	9000d09c <osSemaphoreRelease>
90001896:	bf00      	nop
90001898:	24005bc8 	.word	0x24005bc8
9000189c:	24000008 	.word	0x24000008
900018a0:	2400018c 	.word	0x2400018c
900018a4:	24005b90 	.word	0x24005b90
900018a8:	24005ba8 	.word	0x24005ba8
900018ac:	24005bbc 	.word	0x24005bbc
900018b0:	24005bcc 	.word	0x24005bcc

900018b4 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
900018b4:	b672      	cpsid	i
        while (1)
900018b6:	e7fe      	b.n	900018b6 <HAL_JPEG_ErrorCallback+0x2>

900018b8 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
900018b8:	4b01      	ldr	r3, [pc, #4]	; (900018c0 <HAL_JPEG_DecodeCpltCallback+0x8>)
900018ba:	2201      	movs	r2, #1
900018bc:	601a      	str	r2, [r3, #0]
    }
900018be:	4770      	bx	lr
900018c0:	24005bb4 	.word	0x24005bb4

900018c4 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
900018c4:	b570      	push	{r4, r5, r6, lr}
    uint32_t xRef, yRef, refline;

    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018c6:	491c      	ldr	r1, [pc, #112]	; (90001938 <DMA2D_CopyBuffer+0x74>)
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);

    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018c8:	2302      	movs	r3, #2
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ca:	68c5      	ldr	r5, [r0, #12]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018cc:	4c1b      	ldr	r4, [pc, #108]	; (9000193c <DMA2D_CopyBuffer+0x78>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018ce:	680a      	ldr	r2, [r1, #0]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900018d0:	6363      	str	r3, [r4, #52]	; 0x34
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d2:	012b      	lsls	r3, r5, #4

    /* Configure DMA2D data size */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018d4:	4e1a      	ldr	r6, [pc, #104]	; (90001940 <DMA2D_CopyBuffer+0x7c>)
    yRef = ((job.MCU_index * MCU_WIDTH_PIXELS) / JPEG_ConvertorParams.WidthExtend) * MCU_WIDTH_PIXELS;
900018d6:	fbb3 fcf2 	udiv	ip, r3, r2
    xRef = ((job.MCU_index * MCU_WIDTH_PIXELS) % JPEG_ConvertorParams.WidthExtend);
900018da:	fb02 321c 	mls	r2, r2, ip, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018de:	684b      	ldr	r3, [r1, #4]
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e0:	6836      	ldr	r6, [r6, #0]
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018e2:	fb03 fc0c 	mul.w	ip, r3, ip
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018e6:	68cb      	ldr	r3, [r1, #12]
900018e8:	eba6 0e03 	sub.w	lr, r6, r3
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018ec:	690e      	ldr	r6, [r1, #16]
900018ee:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f2:	4575      	cmp	r5, lr
    refline = (JPEG_ConvertorParams.ScaledWidth) * yRef + (JPEG_ConvertorParams.bytes_pr_pixel * xRef);
900018f4:	fb06 f202 	mul.w	r2, r6, r2
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))  /*  Last line of frame */
900018f8:	d318      	bcc.n	9000192c <DMA2D_CopyBuffer+0x68>
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.LastLineHeight | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
900018fa:	6889      	ldr	r1, [r1, #8]
900018fc:	f1c1 0110 	rsb	r1, r1, #16
90001900:	ea41 5103 	orr.w	r1, r1, r3, lsl #20
90001904:	6461      	str	r1, [r4, #68]	; 0x44
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001906:	490f      	ldr	r1, [pc, #60]	; (90001944 <DMA2D_CopyBuffer+0x80>)

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001908:	f1c3 031e 	rsb	r3, r3, #30

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
9000190c:	6840      	ldr	r0, [r0, #4]
    WRITE_REG(DMA2D->FGOR, 0);
9000190e:	2400      	movs	r4, #0
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001910:	6809      	ldr	r1, [r1, #0]
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
90001912:	011b      	lsls	r3, r3, #4
    WRITE_REG(DMA2D->OMAR, (reinterpret_cast<uint32_t>(FrameBufferAddress) + refline));
90001914:	4411      	add	r1, r2
90001916:	4a09      	ldr	r2, [pc, #36]	; (9000193c <DMA2D_CopyBuffer+0x78>)
90001918:	4461      	add	r1, ip
9000191a:	63d1      	str	r1, [r2, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, 480 - (MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line));
9000191c:	6413      	str	r3, [r2, #64]	; 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
9000191e:	490a      	ldr	r1, [pc, #40]	; (90001948 <DMA2D_CopyBuffer+0x84>)

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001920:	4b0a      	ldr	r3, [pc, #40]	; (9000194c <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, 0);
90001922:	6114      	str	r4, [r2, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
90001924:	61d1      	str	r1, [r2, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer));
90001926:	60d0      	str	r0, [r2, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001928:	6013      	str	r3, [r2, #0]
}
9000192a:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS | ((MCU_WIDTH_PIXELS * JPEG_ConvertorParams.MCU_pr_line) << DMA2D_NLR_PL_Pos)));
9000192c:	0519      	lsls	r1, r3, #20
9000192e:	f041 0110 	orr.w	r1, r1, #16
90001932:	6461      	str	r1, [r4, #68]	; 0x44
90001934:	e7e7      	b.n	90001906 <DMA2D_CopyBuffer+0x42>
90001936:	bf00      	nop
90001938:	24005b90 	.word	0x24005b90
9000193c:	52001000 	.word	0x52001000
90001940:	24005ba4 	.word	0x24005ba4
90001944:	24005bac 	.word	0x24005bac
90001948:	ff09000b 	.word	0xff09000b
9000194c:	00010201 	.word	0x00010201

90001950 <DMA2D_ExternalJobCompleted>:
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    job.State = JPEG_BUFFER_EMPTY;
    job.DataBufferSize = 0;

    JPEG_OUT_Read_BufferIndex++;
90001950:	4b0c      	ldr	r3, [pc, #48]	; (90001984 <DMA2D_ExternalJobCompleted+0x34>)
    job.State = JPEG_BUFFER_EMPTY;
90001952:	2100      	movs	r1, #0
90001954:	7001      	strb	r1, [r0, #0]
    JPEG_OUT_Read_BufferIndex++;
90001956:	681a      	ldr	r2, [r3, #0]
    job.DataBufferSize = 0;
90001958:	6081      	str	r1, [r0, #8]
    JPEG_OUT_Read_BufferIndex++;
9000195a:	3201      	adds	r2, #1
9000195c:	601a      	str	r2, [r3, #0]
    if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000195e:	681a      	ldr	r2, [r3, #0]
90001960:	2a01      	cmp	r2, #1
90001962:	d900      	bls.n	90001966 <DMA2D_ExternalJobCompleted+0x16>
    {
        JPEG_OUT_Read_BufferIndex = 0;
90001964:	6019      	str	r1, [r3, #0]
    }

    /* Check if last line */
    if (job.MCU_index >= (MCU_TotalNb - JPEG_ConvertorParams.MCU_pr_line))
90001966:	4b08      	ldr	r3, [pc, #32]	; (90001988 <DMA2D_ExternalJobCompleted+0x38>)
90001968:	4908      	ldr	r1, [pc, #32]	; (9000198c <DMA2D_ExternalJobCompleted+0x3c>)
9000196a:	681b      	ldr	r3, [r3, #0]
9000196c:	68c9      	ldr	r1, [r1, #12]
9000196e:	68c2      	ldr	r2, [r0, #12]
90001970:	1a5b      	subs	r3, r3, r1
90001972:	429a      	cmp	r2, r3
90001974:	d302      	bcc.n	9000197c <DMA2D_ExternalJobCompleted+0x2c>
    {
        DMA2D_CopyBufferEnd = 1;
90001976:	4b06      	ldr	r3, [pc, #24]	; (90001990 <DMA2D_ExternalJobCompleted+0x40>)
90001978:	2201      	movs	r2, #1
9000197a:	601a      	str	r2, [r3, #0]
    }

    /* Signal decoder thread to wake up and continue decoding */
    SEM_POST(semDecodingDone);
9000197c:	4b05      	ldr	r3, [pc, #20]	; (90001994 <DMA2D_ExternalJobCompleted+0x44>)
9000197e:	6818      	ldr	r0, [r3, #0]
90001980:	f00b bb8c 	b.w	9000d09c <osSemaphoreRelease>
90001984:	24000188 	.word	0x24000188
90001988:	24005ba4 	.word	0x24005ba4
9000198c:	24005b90 	.word	0x24005b90
90001990:	24000184 	.word	0x24000184
90001994:	24005bcc 	.word	0x24005bcc

90001998 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90001998:	2101      	movs	r1, #1
9000199a:	2200      	movs	r2, #0
{
9000199c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000199e:	4608      	mov	r0, r1
900019a0:	f00b faf8 	bl	9000cf94 <osSemaphoreNew>
900019a4:	4b0b      	ldr	r3, [pc, #44]	; (900019d4 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
900019a6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019a8:	b140      	cbz	r0, 900019bc <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
900019aa:	2200      	movs	r2, #0
900019ac:	2104      	movs	r1, #4
900019ae:	2001      	movs	r0, #1
900019b0:	f00b fbaa 	bl	9000d108 <osMessageQueueNew>
900019b4:	4b08      	ldr	r3, [pc, #32]	; (900019d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
900019b6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019b8:	b130      	cbz	r0, 900019c8 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
900019ba:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
900019bc:	4b07      	ldr	r3, [pc, #28]	; (900019dc <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
900019be:	2128      	movs	r1, #40	; 0x28
900019c0:	4a07      	ldr	r2, [pc, #28]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019c2:	4808      	ldr	r0, [pc, #32]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019c4:	f024 fc24 	bl	90026210 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
900019c8:	4b07      	ldr	r3, [pc, #28]	; (900019e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
900019ca:	212c      	movs	r1, #44	; 0x2c
900019cc:	4a04      	ldr	r2, [pc, #16]	; (900019e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
900019ce:	4805      	ldr	r0, [pc, #20]	; (900019e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
900019d0:	f024 fc1e 	bl	90026210 <__assert_func>
900019d4:	24005bd4 	.word	0x24005bd4
900019d8:	24005bd0 	.word	0x24005bd0
900019dc:	900278ec 	.word	0x900278ec
900019e0:	90027938 	.word	0x90027938
900019e4:	90027968 	.word	0x90027968
900019e8:	900279b0 	.word	0x900279b0

900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
900019ec:	4b02      	ldr	r3, [pc, #8]	; (900019f8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
900019ee:	f04f 31ff 	mov.w	r1, #4294967295
900019f2:	6818      	ldr	r0, [r3, #0]
900019f4:	f00b bb1e 	b.w	9000d034 <osSemaphoreAcquire>
900019f8:	24005bd4 	.word	0x24005bd4

900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
900019fc:	4b01      	ldr	r3, [pc, #4]	; (90001a04 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
900019fe:	6818      	ldr	r0, [r3, #0]
90001a00:	f00b bb4c 	b.w	9000d09c <osSemaphoreRelease>
90001a04:	24005bd4 	.word	0x24005bd4

90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
90001a08:	4b02      	ldr	r3, [pc, #8]	; (90001a14 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
90001a0a:	2100      	movs	r1, #0
90001a0c:	6818      	ldr	r0, [r3, #0]
90001a0e:	f00b bb11 	b.w	9000d034 <osSemaphoreAcquire>
90001a12:	bf00      	nop
90001a14:	24005bd4 	.word	0x24005bd4

90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
90001a18:	4b01      	ldr	r3, [pc, #4]	; (90001a20 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
90001a1a:	6818      	ldr	r0, [r3, #0]
90001a1c:	f00b bb3e 	b.w	9000d09c <osSemaphoreRelease>
90001a20:	24005bd4 	.word	0x24005bd4

90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
90001a24:	4803      	ldr	r0, [pc, #12]	; (90001a34 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
90001a26:	2300      	movs	r3, #0
90001a28:	4903      	ldr	r1, [pc, #12]	; (90001a38 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
90001a2a:	461a      	mov	r2, r3
90001a2c:	6800      	ldr	r0, [r0, #0]
90001a2e:	f00b bba9 	b.w	9000d184 <osMessageQueuePut>
90001a32:	bf00      	nop
90001a34:	24005bd0 	.word	0x24005bd0
90001a38:	24000028 	.word	0x24000028

90001a3c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
90001a3c:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a3e:	2300      	movs	r3, #0
{
90001a40:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
90001a42:	4c07      	ldr	r4, [pc, #28]	; (90001a60 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
90001a44:	461a      	mov	r2, r3
90001a46:	a901      	add	r1, sp, #4
90001a48:	6820      	ldr	r0, [r4, #0]
90001a4a:	f00b fbdd 	bl	9000d208 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
90001a4e:	f04f 33ff 	mov.w	r3, #4294967295
90001a52:	2200      	movs	r2, #0
90001a54:	a901      	add	r1, sp, #4
90001a56:	6820      	ldr	r0, [r4, #0]
90001a58:	f00b fbd6 	bl	9000d208 <osMessageQueueGet>
}
90001a5c:	b002      	add	sp, #8
90001a5e:	bd10      	pop	{r4, pc}
90001a60:	24005bd0 	.word	0x24005bd0

90001a64 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90001a64:	6803      	ldr	r3, [r0, #0]
90001a66:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90001a68:	4718      	bx	r3
90001a6a:	bf00      	nop

90001a6c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
90001a6c:	2001      	movs	r0, #1
90001a6e:	4770      	bx	lr

90001a70 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
{
    mutexIsRunning = MUTEX_CREATE();
}

STM32DMA::~STM32DMA()
90001a70:	4905      	ldr	r1, [pc, #20]	; (90001a88 <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001a72:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001a76:	4b05      	ldr	r3, [pc, #20]	; (90001a8c <_ZN8STM32DMAD1Ev+0x1c>)
90001a78:	6001      	str	r1, [r0, #0]
90001a7a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001a7e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001a82:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
90001a86:	4770      	bx	lr
90001a88:	90027b50 	.word	0x90027b50
90001a8c:	e000e100 	.word	0xe000e100

90001a90 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a90:	4b0f      	ldr	r3, [pc, #60]	; (90001ad0 <_ZN8STM32DMA10initializeEv+0x40>)
{
90001a92:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a94:	490f      	ldr	r1, [pc, #60]	; (90001ad4 <_ZN8STM32DMA10initializeEv+0x44>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a96:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001a9a:	480f      	ldr	r0, [pc, #60]	; (90001ad8 <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001a9c:	f042 0210 	orr.w	r2, r2, #16
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90001aa0:	6208      	str	r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
90001aa2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90001aa6:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90001aaa:	f002 0210 	and.w	r2, r2, #16
90001aae:	9201      	str	r2, [sp, #4]
90001ab0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
90001ab2:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001ab4:	f042 0210 	orr.w	r2, r2, #16
90001ab8:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90001aba:	6fda      	ldr	r2, [r3, #124]	; 0x7c
90001abc:	f022 0210 	bic.w	r2, r2, #16
90001ac0:	67da      	str	r2, [r3, #124]	; 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001ac2:	4b06      	ldr	r3, [pc, #24]	; (90001adc <_ZN8STM32DMA10initializeEv+0x4c>)
90001ac4:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001ac8:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90001aca:	b002      	add	sp, #8
90001acc:	4770      	bx	lr
90001ace:	bf00      	nop
90001ad0:	58024400 	.word	0x58024400
90001ad4:	240091e8 	.word	0x240091e8
90001ad8:	90001ec1 	.word	0x90001ec1
90001adc:	e000e100 	.word	0xe000e100

90001ae0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90001ae0:	f240 30ef 	movw	r0, #1007	; 0x3ef
90001ae4:	4770      	bx	lr
90001ae6:	bf00      	nop

90001ae8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90001ae8:	4909      	ldr	r1, [pc, #36]	; (90001b10 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90001aea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
90001aee:	4b09      	ldr	r3, [pc, #36]	; (90001b14 <_ZN8STM32DMAD0Ev+0x2c>)
90001af0:	b510      	push	{r4, lr}
90001af2:	6001      	str	r1, [r0, #0]
90001af4:	4604      	mov	r4, r0
90001af6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90001afa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90001afe:	f3bf 8f6f 	isb	sy
}
90001b02:	f640 51a8 	movw	r1, #3496	; 0xda8
90001b06:	f024 fb54 	bl	900261b2 <_ZdlPvj>
90001b0a:	4620      	mov	r0, r4
90001b0c:	bd10      	pop	{r4, pc}
90001b0e:	bf00      	nop
90001b10:	90027b50 	.word	0x90027b50
90001b14:	e000e100 	.word	0xe000e100

90001b18 <_ZN8STM32DMA5startEv>:
                execute();
            }
        }
    }

    virtual void start()
90001b18:	b510      	push	{r4, lr}
90001b1a:	4604      	mov	r4, r0
    {
        MUTEX_LOCK(mutexIsRunning);
90001b1c:	f04f 31ff 	mov.w	r1, #4294967295
90001b20:	f8d0 0da4 	ldr.w	r0, [r0, #3492]	; 0xda4
90001b24:	f00b f9f0 	bl	9000cf08 <osMutexAcquire>
        if (!queue.isEmpty() && isAllowed && !isRunning)
90001b28:	6860      	ldr	r0, [r4, #4]
90001b2a:	6803      	ldr	r3, [r0, #0]
90001b2c:	681b      	ldr	r3, [r3, #0]
90001b2e:	4798      	blx	r3
90001b30:	b978      	cbnz	r0, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b32:	7a63      	ldrb	r3, [r4, #9]
90001b34:	b16b      	cbz	r3, 90001b52 <_ZN8STM32DMA5startEv+0x3a>
90001b36:	7a23      	ldrb	r3, [r4, #8]
90001b38:	bb0b      	cbnz	r3, 90001b7e <_ZN8STM32DMA5startEv+0x66>
        {
            started_by_external_job = false;
            execute();
90001b3a:	6822      	ldr	r2, [r4, #0]
90001b3c:	4620      	mov	r0, r4
            started_by_external_job = false;
90001b3e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
            execute();
90001b42:	6a53      	ldr	r3, [r2, #36]	; 0x24
90001b44:	4798      	blx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
        {
            started_by_external_job = true;
            externalJobExecute();
        }
        MUTEX_UNLOCK(mutexIsRunning);
90001b46:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
    }
90001b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b4e:	f00b b9ff 	b.w	9000cf50 <osMutexRelease>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b52:	490f      	ldr	r1, [pc, #60]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
90001b54:	4a0f      	ldr	r2, [pc, #60]	; (90001b94 <_ZN8STM32DMA5startEv+0x7c>)
90001b56:	680b      	ldr	r3, [r1, #0]
90001b58:	011b      	lsls	r3, r3, #4
90001b5a:	5cd3      	ldrb	r3, [r2, r3]
90001b5c:	2b01      	cmp	r3, #1
90001b5e:	d1f2      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b60:	7a20      	ldrb	r0, [r4, #8]
90001b62:	2800      	cmp	r0, #0
90001b64:	d1ef      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
90001b66:	7aa0      	ldrb	r0, [r4, #10]
90001b68:	2800      	cmp	r0, #0
90001b6a:	d1ec      	bne.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b6c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
90001b6e:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b72:	eb02 1000 	add.w	r0, r2, r0, lsl #4
        isRunning = true;
90001b76:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001b78:	f7ff fea4 	bl	900018c4 <DMA2D_CopyBuffer>
    }
90001b7c:	e7e3      	b.n	90001b46 <_ZN8STM32DMA5startEv+0x2e>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b7e:	4b04      	ldr	r3, [pc, #16]	; (90001b90 <_ZN8STM32DMA5startEv+0x78>)
        MUTEX_UNLOCK(mutexIsRunning);
90001b80:	f8d4 0da4 	ldr.w	r0, [r4, #3492]	; 0xda4
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning && !isReserved)
90001b84:	681b      	ldr	r3, [r3, #0]
    }
90001b86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        MUTEX_UNLOCK(mutexIsRunning);
90001b8a:	f00b b9e1 	b.w	9000cf50 <osMutexRelease>
90001b8e:	bf00      	nop
90001b90:	24000188 	.word	0x24000188
90001b94:	24000008 	.word	0x24000008

90001b98 <_ZN8STM32DMA18signalDMAInterruptEv>:
        if (!started_by_external_job)
90001b98:	f890 3da0 	ldrb.w	r3, [r0, #3488]	; 0xda0
    virtual void signalDMAInterrupt()
90001b9c:	b510      	push	{r4, lr}
90001b9e:	4604      	mov	r4, r0
        if (!started_by_external_job)
90001ba0:	b953      	cbnz	r3, 90001bb8 <_ZN8STM32DMA18signalDMAInterruptEv+0x20>
            executeCompleted();
90001ba2:	6803      	ldr	r3, [r0, #0]
90001ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001ba6:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001ba8:	491c      	ldr	r1, [pc, #112]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
90001baa:	4a1d      	ldr	r2, [pc, #116]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001bac:	680b      	ldr	r3, [r1, #0]
90001bae:	011b      	lsls	r3, r3, #4
90001bb0:	5cd3      	ldrb	r3, [r2, r3]
90001bb2:	2b01      	cmp	r3, #1
90001bb4:	d014      	beq.n	90001be0 <_ZN8STM32DMA18signalDMAInterruptEv+0x48>
    }
90001bb6:	bd10      	pop	{r4, pc}
        if (isRunning)
90001bb8:	7a03      	ldrb	r3, [r0, #8]
90001bba:	bb2b      	cbnz	r3, 90001c08 <_ZN8STM32DMA18signalDMAInterruptEv+0x70>
            if (!queue.isEmpty() && isAllowed)
90001bbc:	6860      	ldr	r0, [r4, #4]
90001bbe:	6803      	ldr	r3, [r0, #0]
90001bc0:	681b      	ldr	r3, [r3, #0]
90001bc2:	4798      	blx	r3
90001bc4:	4603      	mov	r3, r0
90001bc6:	2800      	cmp	r0, #0
90001bc8:	d1f5      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bca:	7a62      	ldrb	r2, [r4, #9]
90001bcc:	2a00      	cmp	r2, #0
90001bce:	d0f2      	beq.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
                execute();
90001bd0:	6822      	ldr	r2, [r4, #0]
90001bd2:	4620      	mov	r0, r4
                started_by_external_job = false;
90001bd4:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001bd8:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001bda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90001bde:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001be0:	4810      	ldr	r0, [pc, #64]	; (90001c24 <_ZN8STM32DMA18signalDMAInterruptEv+0x8c>)
90001be2:	6800      	ldr	r0, [r0, #0]
90001be4:	2800      	cmp	r0, #0
90001be6:	d1e6      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001be8:	7a20      	ldrb	r0, [r4, #8]
90001bea:	2800      	cmp	r0, #0
90001bec:	d1e3      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
90001bee:	7aa0      	ldrb	r0, [r4, #10]
90001bf0:	2800      	cmp	r0, #0
90001bf2:	d1e0      	bne.n	90001bb6 <_ZN8STM32DMA18signalDMAInterruptEv+0x1e>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bf4:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001bf6:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001bfa:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001bfc:	eb02 1000 	add.w	r0, r2, r0, lsl #4
    }
90001c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c04:	f7ff be5e 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c08:	4904      	ldr	r1, [pc, #16]	; (90001c1c <_ZN8STM32DMA18signalDMAInterruptEv+0x84>)
            isRunning = false;
90001c0a:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c0c:	4b04      	ldr	r3, [pc, #16]	; (90001c20 <_ZN8STM32DMA18signalDMAInterruptEv+0x88>)
90001c0e:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001c10:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001c12:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001c16:	f7ff fe9b 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001c1a:	e7cf      	b.n	90001bbc <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
90001c1c:	24000188 	.word	0x24000188
90001c20:	24000008 	.word	0x24000008
90001c24:	24000184 	.word	0x24000184

90001c28 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90001c28:	b538      	push	{r3, r4, r5, lr}
    switch (format)
90001c2a:	7f8b      	ldrb	r3, [r1, #30]
90001c2c:	2b0a      	cmp	r3, #10
90001c2e:	d83e      	bhi.n	90001cae <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x86>
90001c30:	e8df f003 	tbb	[pc, r3]
90001c34:	3d2a063b 	.word	0x3d2a063b
90001c38:	063d3d3d 	.word	0x063d3d3d
90001c3c:	0606      	.short	0x0606
90001c3e:	06          	.byte	0x06
90001c3f:	00          	.byte	0x00
90001c40:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c42:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90001c46:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c48:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c4a:	4b1c      	ldr	r3, [pc, #112]	; (90001cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c4c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c50:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001c54:	635c      	str	r4, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001c56:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001c58:	6908      	ldr	r0, [r1, #16]
90001c5a:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c5c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
90001c5e:	680d      	ldr	r5, [r1, #0]
90001c60:	2d08      	cmp	r5, #8
90001c62:	d013      	beq.n	90001c8c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>
    {
        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);
90001c64:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90001c66:	61dc      	str	r4, [r3, #28]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c68:	4c15      	ldr	r4, [pc, #84]	; (90001cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
        WRITE_REG(DMA2D->FGOR, 0);
90001c6a:	611a      	str	r2, [r3, #16]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
90001c6c:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
90001c6e:	0a0a      	lsrs	r2, r1, #8
90001c70:	0948      	lsrs	r0, r1, #5
90001c72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90001c76:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90001c7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90001c7e:	4302      	orrs	r2, r0
90001c80:	430a      	orrs	r2, r1
90001c82:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
90001c84:	601c      	str	r4, [r3, #0]
    }
}
90001c86:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001c88:	2400      	movs	r4, #0
90001c8a:	e7da      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8c:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001c8e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001c90:	625c      	str	r4, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c92:	4a0c      	ldr	r2, [pc, #48]	; (90001cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
90001c94:	7f0c      	ldrb	r4, [r1, #28]
90001c96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001c9a:	4c0b      	ldr	r4, [pc, #44]	; (90001cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001c9c:	61da      	str	r2, [r3, #28]
90001c9e:	68ca      	ldr	r2, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001ca0:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca2:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001ca4:	60d8      	str	r0, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ca6:	601c      	str	r4, [r3, #0]
}
90001ca8:	bd38      	pop	{r3, r4, r5, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001caa:	2402      	movs	r4, #2
90001cac:	e7c9      	b.n	90001c42 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
90001cae:	4b07      	ldr	r3, [pc, #28]	; (90001ccc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90001cb0:	2187      	movs	r1, #135	; 0x87
90001cb2:	4a07      	ldr	r2, [pc, #28]	; (90001cd0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90001cb4:	4807      	ldr	r0, [pc, #28]	; (90001cd4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>)
90001cb6:	f024 faab 	bl	90026210 <__assert_func>
90001cba:	bf00      	nop
90001cbc:	52001000 	.word	0x52001000
90001cc0:	00030201 	.word	0x00030201
90001cc4:	00010009 	.word	0x00010009
90001cc8:	00020201 	.word	0x00020201
90001ccc:	900279f4 	.word	0x900279f4
90001cd0:	90027a10 	.word	0x90027a10
90001cd4:	90027a5c 	.word	0x90027a5c

90001cd8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90001cd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90001cda:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
90001cde:	f1be 0f0b 	cmp.w	lr, #11
90001ce2:	f200 80c1 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001ce6:	e8df f01e 	tbh	[pc, lr, lsl #1]
90001cea:	0063      	.short	0x0063
90001cec:	004c0065 	.word	0x004c0065
90001cf0:	00bf00bf 	.word	0x00bf00bf
90001cf4:	00bf00bf 	.word	0x00bf00bf
90001cf8:	000c000c 	.word	0x000c000c
90001cfc:	000c000c 	.word	0x000c000c
90001d00:	000c      	.short	0x000c
        dma2dColorMode = DMA2D_INPUT_L8;
90001d02:	2505      	movs	r5, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90001d04:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90001d08:	f1bc 0f0b 	cmp.w	ip, #11
90001d0c:	f200 80ac 	bhi.w	90001e68 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>
90001d10:	e8df f00c 	tbb	[pc, ip]
90001d14:	aa0e4b52 	.word	0xaa0e4b52
90001d18:	06aaaaaa 	.word	0x06aaaaaa
90001d1c:	06060606 	.word	0x06060606
    switch (format)
90001d20:	f1ac 0307 	sub.w	r3, ip, #7
90001d24:	2b03      	cmp	r3, #3
90001d26:	f200 80a5 	bhi.w	90001e74 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>
90001d2a:	2605      	movs	r6, #5
90001d2c:	2701      	movs	r7, #1
90001d2e:	e001      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d30:	2600      	movs	r6, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90001d32:	4637      	mov	r7, r6
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d34:	8a8b      	ldrh	r3, [r1, #20]
90001d36:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d38:	8b0c      	ldrh	r4, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d3a:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d3c:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d3e:	1ae4      	subs	r4, r4, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d40:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d44:	4b52      	ldr	r3, [pc, #328]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001d46:	641a      	str	r2, [r3, #64]	; 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90001d48:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90001d4a:	611c      	str	r4, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d4c:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
90001d4e:	635f      	str	r7, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90001d50:	6458      	str	r0, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d52:	6908      	ldr	r0, [r1, #16]
90001d54:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90001d56:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90001d58:	680a      	ldr	r2, [r1, #0]
90001d5a:	2a80      	cmp	r2, #128	; 0x80
90001d5c:	d03b      	beq.n	90001dd6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
90001d5e:	d812      	bhi.n	90001d86 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xae>
90001d60:	2a20      	cmp	r2, #32
90001d62:	d02c      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d64:	2a40      	cmp	r2, #64	; 0x40
90001d66:	d02a      	beq.n	90001dbe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
90001d68:	2a04      	cmp	r2, #4
90001d6a:	d169      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d6c:	7f0a      	ldrb	r2, [r1, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d6e:	4949      	ldr	r1, [pc, #292]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d70:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
90001d74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
90001d78:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001d7a:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001d7c:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d7e:	6019      	str	r1, [r3, #0]
}
90001d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
90001d82:	2500      	movs	r5, #0
90001d84:	e7be      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
    switch (blitOp.operation)
90001d86:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
90001d8a:	d067      	beq.n	90001e5c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>
90001d8c:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
90001d90:	d156      	bne.n	90001e40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x168>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001d92:	7f0c      	ldrb	r4, [r1, #28]
90001d94:	4a40      	ldr	r2, [pc, #256]	; (90001e98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c0>)
90001d96:	ea42 6204 	orr.w	r2, r2, r4, lsl #24
90001d9a:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001d9c:	4a3d      	ldr	r2, [pc, #244]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001d9e:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
90001da0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001da2:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001da4:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001da6:	601a      	str	r2, [r3, #0]
}
90001da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
90001daa:	2601      	movs	r6, #1
90001dac:	4637      	mov	r7, r6
90001dae:	e7c1      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
90001db0:	2502      	movs	r5, #2
90001db2:	e7a7      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB888;
90001db4:	2501      	movs	r5, #1
90001db6:	e7a5      	b.n	90001d04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
        dma2dColorMode = DMA2D_INPUT_RGB565;
90001db8:	2602      	movs	r6, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
90001dba:	4637      	mov	r7, r6
90001dbc:	e7ba      	b.n	90001d34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x5c>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001dbe:	7f0b      	ldrb	r3, [r1, #28]
90001dc0:	4a33      	ldr	r2, [pc, #204]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001dc2:	ea45 6303 	orr.w	r3, r5, r3, lsl #24
90001dc6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90001dca:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dcc:	4b31      	ldr	r3, [pc, #196]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dce:	6256      	str	r6, [r2, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dd0:	6150      	str	r0, [r2, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001dd2:	6013      	str	r3, [r2, #0]
}
90001dd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
90001dd6:	688a      	ldr	r2, [r1, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90001dd8:	1d14      	adds	r4, r2, #4
90001dda:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001ddc:	7f0c      	ldrb	r4, [r1, #28]
            switch ((Bitmap::ClutFormat)palette->format)
90001dde:	7811      	ldrb	r1, [r2, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001de0:	ea45 6504 	orr.w	r5, r5, r4, lsl #24
90001de4:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001de8:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001dea:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90001dec:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90001dee:	b9b1      	cbnz	r1, 90001e1e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x146>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df0:	8851      	ldrh	r1, [r2, #2]
            bool blend = true;
90001df2:	2401      	movs	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90001df4:	69d8      	ldr	r0, [r3, #28]
90001df6:	4a29      	ldr	r2, [pc, #164]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001df8:	3901      	subs	r1, #1
90001dfa:	4002      	ands	r2, r0
90001dfc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e00:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90001e02:	4a23      	ldr	r2, [pc, #140]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e04:	69d3      	ldr	r3, [r2, #28]
90001e06:	f043 0320 	orr.w	r3, r3, #32
90001e0a:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
90001e0c:	69d3      	ldr	r3, [r2, #28]
90001e0e:	069b      	lsls	r3, r3, #26
90001e10:	d4fc      	bmi.n	90001e0c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90001e12:	2310      	movs	r3, #16
90001e14:	6093      	str	r3, [r2, #8]
            if (blend)
90001e16:	b324      	cbz	r4, 90001e62 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18a>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
90001e18:	4b1e      	ldr	r3, [pc, #120]	; (90001e94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1bc>)
90001e1a:	6013      	str	r3, [r2, #0]
}
90001e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90001e1e:	2901      	cmp	r1, #1
90001e20:	d12e      	bne.n	90001e80 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e22:	8851      	ldrh	r1, [r2, #2]
                if (blitOp.alpha == 255)
90001e24:	3cff      	subs	r4, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e26:	69d8      	ldr	r0, [r3, #28]
90001e28:	4a1c      	ldr	r2, [pc, #112]	; (90001e9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c4>)
90001e2a:	f101 31ff 	add.w	r1, r1, #4294967295
                if (blitOp.alpha == 255)
90001e2e:	bf18      	it	ne
90001e30:	2401      	movne	r4, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90001e32:	4002      	ands	r2, r0
90001e34:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90001e38:	f042 0210 	orr.w	r2, r2, #16
90001e3c:	61da      	str	r2, [r3, #28]
                break;
90001e3e:	e7e0      	b.n	90001e02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12a>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e40:	7f0a      	ldrb	r2, [r1, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
90001e42:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e44:	4b12      	ldr	r3, [pc, #72]	; (90001e90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b8>)
90001e46:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e4a:	bf14      	ite	ne
90001e4c:	4a14      	ldrne	r2, [pc, #80]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e4e:	f240 2201 	movweq	r2, #513	; 0x201
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e52:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
90001e56:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
90001e58:	601a      	str	r2, [r3, #0]
}
90001e5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90001e5c:	7f0c      	ldrb	r4, [r1, #28]
90001e5e:	4a11      	ldr	r2, [pc, #68]	; (90001ea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1cc>)
90001e60:	e799      	b.n	90001d96 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbe>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
90001e62:	4b0f      	ldr	r3, [pc, #60]	; (90001ea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c8>)
90001e64:	6013      	str	r3, [r2, #0]
}
90001e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90001e68:	4b0f      	ldr	r3, [pc, #60]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e6a:	2166      	movs	r1, #102	; 0x66
90001e6c:	4a0f      	ldr	r2, [pc, #60]	; (90001eac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d4>)
90001e6e:	4810      	ldr	r0, [pc, #64]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e70:	f024 f9ce 	bl	90026210 <__assert_func>
        assert(0 && "Unsupported Format!");
90001e74:	4b0c      	ldr	r3, [pc, #48]	; (90001ea8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d0>)
90001e76:	2187      	movs	r1, #135	; 0x87
90001e78:	4a0e      	ldr	r2, [pc, #56]	; (90001eb4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1dc>)
90001e7a:	480d      	ldr	r0, [pc, #52]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e7c:	f024 f9c8 	bl	90026210 <__assert_func>
                assert(0 && "Unsupported format");
90001e80:	4b0d      	ldr	r3, [pc, #52]	; (90001eb8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e0>)
90001e82:	f240 1111 	movw	r1, #273	; 0x111
90001e86:	4a0d      	ldr	r2, [pc, #52]	; (90001ebc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e4>)
90001e88:	4809      	ldr	r0, [pc, #36]	; (90001eb0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1d8>)
90001e8a:	f024 f9c1 	bl	90026210 <__assert_func>
90001e8e:	bf00      	nop
90001e90:	52001000 	.word	0x52001000
90001e94:	00020201 	.word	0x00020201
90001e98:	00020009 	.word	0x00020009
90001e9c:	ffff00ef 	.word	0xffff00ef
90001ea0:	00010201 	.word	0x00010201
90001ea4:	0002000a 	.word	0x0002000a
90001ea8:	900279f4 	.word	0x900279f4
90001eac:	90027aa0 	.word	0x90027aa0
90001eb0:	90027a5c 	.word	0x90027a5c
90001eb4:	90027a10 	.word	0x90027a10
90001eb8:	90027aec 	.word	0x90027aec
90001ebc:	90027b08 	.word	0x90027b08

90001ec0 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90001ec0:	4b25      	ldr	r3, [pc, #148]	; (90001f58 <DMA2D_XferCpltCallback+0x98>)
90001ec2:	4926      	ldr	r1, [pc, #152]	; (90001f5c <DMA2D_XferCpltCallback+0x9c>)
90001ec4:	681b      	ldr	r3, [r3, #0]
    {
90001ec6:	b510      	push	{r4, lr}
90001ec8:	685c      	ldr	r4, [r3, #4]
90001eca:	6823      	ldr	r3, [r4, #0]
90001ecc:	695a      	ldr	r2, [r3, #20]
90001ece:	428a      	cmp	r2, r1
90001ed0:	d120      	bne.n	90001f14 <DMA2D_XferCpltCallback+0x54>
        if (!started_by_external_job)
90001ed2:	f894 2da0 	ldrb.w	r2, [r4, #3488]	; 0xda0
90001ed6:	b192      	cbz	r2, 90001efe <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90001ed8:	7a23      	ldrb	r3, [r4, #8]
90001eda:	2b00      	cmp	r3, #0
90001edc:	d132      	bne.n	90001f44 <DMA2D_XferCpltCallback+0x84>
            if (!queue.isEmpty() && isAllowed)
90001ede:	6860      	ldr	r0, [r4, #4]
90001ee0:	6803      	ldr	r3, [r0, #0]
90001ee2:	681b      	ldr	r3, [r3, #0]
90001ee4:	4798      	blx	r3
90001ee6:	4603      	mov	r3, r0
90001ee8:	b998      	cbnz	r0, 90001f12 <DMA2D_XferCpltCallback+0x52>
90001eea:	7a62      	ldrb	r2, [r4, #9]
90001eec:	b18a      	cbz	r2, 90001f12 <DMA2D_XferCpltCallback+0x52>
                execute();
90001eee:	6822      	ldr	r2, [r4, #0]
90001ef0:	4620      	mov	r0, r4
                started_by_external_job = false;
90001ef2:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
                execute();
90001ef6:	6a53      	ldr	r3, [r2, #36]	; 0x24
    }
90001ef8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001efc:	4718      	bx	r3
            executeCompleted();
90001efe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90001f00:	4620      	mov	r0, r4
90001f02:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning && !isReserved)
90001f04:	4916      	ldr	r1, [pc, #88]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
90001f06:	4a17      	ldr	r2, [pc, #92]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f08:	680b      	ldr	r3, [r1, #0]
90001f0a:	011b      	lsls	r3, r3, #4
90001f0c:	5cd3      	ldrb	r3, [r2, r3]
90001f0e:	2b01      	cmp	r3, #1
90001f10:	d004      	beq.n	90001f1c <DMA2D_XferCpltCallback+0x5c>
90001f12:	bd10      	pop	{r4, pc}
90001f14:	4620      	mov	r0, r4
90001f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f1a:	4710      	bx	r2
90001f1c:	4812      	ldr	r0, [pc, #72]	; (90001f68 <DMA2D_XferCpltCallback+0xa8>)
90001f1e:	6800      	ldr	r0, [r0, #0]
90001f20:	2800      	cmp	r0, #0
90001f22:	d1f6      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f24:	7a20      	ldrb	r0, [r4, #8]
90001f26:	2800      	cmp	r0, #0
90001f28:	d1f3      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
90001f2a:	7aa0      	ldrb	r0, [r4, #10]
90001f2c:	2800      	cmp	r0, #0
90001f2e:	d1f0      	bne.n	90001f12 <DMA2D_XferCpltCallback+0x52>
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f30:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90001f32:	f884 3da0 	strb.w	r3, [r4, #3488]	; 0xda0
        isRunning = true;
90001f36:	7223      	strb	r3, [r4, #8]
        DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f38:	eb02 1000 	add.w	r0, r2, r0, lsl #4
90001f3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90001f40:	f7ff bcc0 	b.w	900018c4 <DMA2D_CopyBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f44:	4906      	ldr	r1, [pc, #24]	; (90001f60 <DMA2D_XferCpltCallback+0xa0>)
            isRunning = false;
90001f46:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f48:	4b06      	ldr	r3, [pc, #24]	; (90001f64 <DMA2D_XferCpltCallback+0xa4>)
90001f4a:	6808      	ldr	r0, [r1, #0]
            isRunning = false;
90001f4c:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90001f4e:	eb03 1000 	add.w	r0, r3, r0, lsl #4
90001f52:	f7ff fcfd 	bl	90001950 <DMA2D_ExternalJobCompleted>
90001f56:	e7c2      	b.n	90001ede <DMA2D_XferCpltCallback+0x1e>
90001f58:	2402357c 	.word	0x2402357c
90001f5c:	90001b99 	.word	0x90001b99
90001f60:	24000188 	.word	0x24000188
90001f64:	24000008 	.word	0x24000008
90001f68:	24000184 	.word	0x24000184

90001f6c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90001f6c:	b570      	push	{r4, r5, r6, lr}
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f6e:	4b10      	ldr	r3, [pc, #64]	; (90001fb0 <_ZN8STM32DMAC1Ev+0x44>)
STM32DMA::STM32DMA()
90001f70:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f72:	4604      	mov	r4, r0
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90001f74:	2500      	movs	r5, #0
90001f76:	300c      	adds	r0, #12
90001f78:	2260      	movs	r2, #96	; 0x60
90001f7a:	7235      	strb	r5, [r6, #8]
90001f7c:	7275      	strb	r5, [r6, #9]
90001f7e:	6070      	str	r0, [r6, #4]
90001f80:	f844 3b20 	str.w	r3, [r4], #32
90001f84:	4621      	mov	r1, r4
90001f86:	f00f f8c3 	bl	90011110 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
90001f8a:	4621      	mov	r1, r4
90001f8c:	f506 635a 	add.w	r3, r6, #3488	; 0xda0
        : color(0)
90001f90:	60cd      	str	r5, [r1, #12]
90001f92:	3124      	adds	r1, #36	; 0x24
90001f94:	428b      	cmp	r3, r1
90001f96:	d1fb      	bne.n	90001f90 <_ZN8STM32DMAC1Ev+0x24>
90001f98:	f886 5da0 	strb.w	r5, [r6, #3488]	; 0xda0
    mutexIsRunning = MUTEX_CREATE();
90001f9c:	2000      	movs	r0, #0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false), mutexIsRunning(0)
90001f9e:	f8c6 5da4 	str.w	r5, [r6, #3492]	; 0xda4
    mutexIsRunning = MUTEX_CREATE();
90001fa2:	f00a ff71 	bl	9000ce88 <osMutexNew>
90001fa6:	4603      	mov	r3, r0
}
90001fa8:	4630      	mov	r0, r6
    mutexIsRunning = MUTEX_CREATE();
90001faa:	f8c6 3da4 	str.w	r3, [r6, #3492]	; 0xda4
}
90001fae:	bd70      	pop	{r4, r5, r6, pc}
90001fb0:	90027b50 	.word	0x90027b50

90001fb4 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fb4:	4a03      	ldr	r2, [pc, #12]	; (90001fc4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
90001fb6:	6813      	ldr	r3, [r2, #0]
90001fb8:	07db      	lsls	r3, r3, #31
90001fba:	d4fc      	bmi.n	90001fb6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fbc:	2323      	movs	r3, #35	; 0x23
90001fbe:	6093      	str	r3, [r2, #8]
}
90001fc0:	4770      	bx	lr
90001fc2:	bf00      	nop
90001fc4:	52001000 	.word	0x52001000

90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
90001fc8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90001fca:	4c11      	ldr	r4, [pc, #68]	; (90002010 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
90001fcc:	6825      	ldr	r5, [r4, #0]
90001fce:	07ed      	lsls	r5, r5, #31
90001fd0:	d4fc      	bmi.n	90001fcc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fd4:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
90001fd6:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90001fd8:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fda:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90001fde:	f04f 0502 	mov.w	r5, #2
90001fe2:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90001fe4:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90001fe6:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
90001fe8:	d00b      	beq.n	90002002 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fea:	490a      	ldr	r1, [pc, #40]	; (90002014 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90001fec:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001fee:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ff2:	4909      	ldr	r1, [pc, #36]	; (90002018 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
90001ff4:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
90001ff6:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
90001ff8:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
90001ffa:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
90001ffc:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
90001ffe:	bc30      	pop	{r4, r5}
90002000:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
90002002:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
90002004:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
90002006:	4b05      	ldr	r3, [pc, #20]	; (9000201c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
90002008:	63a2      	str	r2, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
9000200a:	6023      	str	r3, [r4, #0]
}
9000200c:	bc30      	pop	{r4, r5}
9000200e:	4770      	bx	lr
90002010:	52001000 	.word	0x52001000
90002014:	00010009 	.word	0x00010009
90002018:	00020001 	.word	0x00020001
9000201c:	00030001 	.word	0x00030001

90002020 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002020:	2001      	movs	r0, #1
90002022:	4770      	bx	lr

90002024 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002024:	2040      	movs	r0, #64	; 0x40
90002026:	4770      	bx	lr

90002028 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002028:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
9000202c:	3008      	adds	r0, #8
9000202e:	4770      	bx	lr

90002030 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002030:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
90002034:	3008      	adds	r0, #8
90002036:	4770      	bx	lr

90002038 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002038:	2001      	movs	r0, #1
9000203a:	4770      	bx	lr

9000203c <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
9000203c:	f242 4098 	movw	r0, #9368	; 0x2498
90002040:	4770      	bx	lr
90002042:	bf00      	nop

90002044 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002044:	f242 4398 	movw	r3, #9368	; 0x2498
90002048:	fb03 0001 	mla	r0, r3, r1, r0
    }
9000204c:	3008      	adds	r0, #8
9000204e:	4770      	bx	lr

90002050 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002050:	f242 4398 	movw	r3, #9368	; 0x2498
90002054:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002058:	3008      	adds	r0, #8
9000205a:	4770      	bx	lr

9000205c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
9000205c:	2001      	movs	r0, #1
9000205e:	4770      	bx	lr

90002060 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002060:	201c      	movs	r0, #28
90002062:	4770      	bx	lr

90002064 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002064:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002068:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
9000206c:	3008      	adds	r0, #8
9000206e:	4770      	bx	lr

90002070 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002070:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
90002074:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002078:	3008      	adds	r0, #8
9000207a:	4770      	bx	lr

9000207c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoscreen_game_selectScreenNoTransition();
9000207c:	4608      	mov	r0, r1
9000207e:	f002 b93b 	b.w	900042f8 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
90002082:	bf00      	nop

90002084 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002084:	4b03      	ldr	r3, [pc, #12]	; (90002094 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
90002086:	b510      	push	{r4, lr}
90002088:	4604      	mov	r4, r0
9000208a:	6003      	str	r3, [r0, #0]
9000208c:	f00d fe8d 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002090:	4620      	mov	r0, r4
90002092:	bd10      	pop	{r4, pc}
90002094:	90027c08 	.word	0x90027c08

90002098 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
90002098:	4b05      	ldr	r3, [pc, #20]	; (900020b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev+0x18>)
9000209a:	b510      	push	{r4, lr}
9000209c:	4604      	mov	r4, r0
9000209e:	6003      	str	r3, [r0, #0]
900020a0:	f00d fe83 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900020a4:	2148      	movs	r1, #72	; 0x48
900020a6:	4620      	mov	r0, r4
900020a8:	f024 f883 	bl	900261b2 <_ZdlPvj>
900020ac:	4620      	mov	r0, r4
900020ae:	bd10      	pop	{r4, pc}
900020b0:	90027c08 	.word	0x90027c08

900020b4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020b4:	4b03      	ldr	r3, [pc, #12]	; (900020c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020b6:	b510      	push	{r4, lr}
900020b8:	4604      	mov	r4, r0
900020ba:	6003      	str	r3, [r0, #0]
900020bc:	f00d fe75 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900020c0:	4620      	mov	r0, r4
900020c2:	bd10      	pop	{r4, pc}
900020c4:	90027bd4 	.word	0x90027bd4

900020c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020c8:	4b06      	ldr	r3, [pc, #24]	; (900020e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20screen_asteroidsViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
900020ca:	b510      	push	{r4, lr}
900020cc:	4604      	mov	r4, r0
900020ce:	6003      	str	r3, [r0, #0]
900020d0:	f00d fe6b 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900020d4:	f242 41a0 	movw	r1, #9376	; 0x24a0
900020d8:	4620      	mov	r0, r4
900020da:	f024 f86a 	bl	900261b2 <_ZdlPvj>
900020de:	4620      	mov	r0, r4
900020e0:	bd10      	pop	{r4, pc}
900020e2:	bf00      	nop
900020e4:	90027bd4 	.word	0x90027bd4

900020e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
900020e8:	4b03      	ldr	r3, [pc, #12]	; (900020f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
900020ea:	b510      	push	{r4, lr}
900020ec:	4604      	mov	r4, r0
900020ee:	6003      	str	r3, [r0, #0]
900020f0:	f00d fe5b 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900020f4:	4620      	mov	r0, r4
900020f6:	bd10      	pop	{r4, pc}
900020f8:	90027ba0 	.word	0x90027ba0

900020fc <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
900020fc:	4b05      	ldr	r3, [pc, #20]	; (90002114 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25screen_asteroidsPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
900020fe:	b510      	push	{r4, lr}
90002100:	4604      	mov	r4, r0
90002102:	6003      	str	r3, [r0, #0]
90002104:	f00d fe51 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002108:	2124      	movs	r1, #36	; 0x24
9000210a:	4620      	mov	r0, r4
9000210c:	f024 f851 	bl	900261b2 <_ZdlPvj>
90002110:	4620      	mov	r0, r4
90002112:	bd10      	pop	{r4, pc}
90002114:	90027ba0 	.word	0x90027ba0

90002118 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002118:	b510      	push	{r4, lr}
9000211a:	4604      	mov	r4, r0
9000211c:	490c      	ldr	r1, [pc, #48]	; (90002150 <_ZN12FrontendHeapD1Ev+0x38>)
9000211e:	4a0d      	ldr	r2, [pc, #52]	; (90002154 <_ZN12FrontendHeapD1Ev+0x3c>)
90002120:	f242 40d8 	movw	r0, #9432	; 0x24d8
90002124:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90002128:	6021      	str	r1, [r4, #0]
9000212a:	4420      	add	r0, r4
9000212c:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002130:	f00d fe3b 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002134:	4620      	mov	r0, r4
90002136:	4b08      	ldr	r3, [pc, #32]	; (90002158 <_ZN12FrontendHeapD1Ev+0x40>)
90002138:	f840 3f38 	str.w	r3, [r0, #56]!
9000213c:	f00d fe35 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002140:	4620      	mov	r0, r4
90002142:	4b06      	ldr	r3, [pc, #24]	; (9000215c <_ZN12FrontendHeapD1Ev+0x44>)
90002144:	f840 3f14 	str.w	r3, [r0, #20]!
90002148:	f00d fe2f 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
9000214c:	4620      	mov	r0, r4
9000214e:	bd10      	pop	{r4, pc}
90002150:	90027c3c 	.word	0x90027c3c
90002154:	90027c08 	.word	0x90027c08
90002158:	90027bd4 	.word	0x90027bd4
9000215c:	90027ba0 	.word	0x90027ba0

90002160 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002160:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002162:	4c0c      	ldr	r4, [pc, #48]	; (90002194 <__tcf_0+0x34>)
90002164:	4a0c      	ldr	r2, [pc, #48]	; (90002198 <__tcf_0+0x38>)
90002166:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
9000216a:	490c      	ldr	r1, [pc, #48]	; (9000219c <__tcf_0+0x3c>)
9000216c:	480c      	ldr	r0, [pc, #48]	; (900021a0 <__tcf_0+0x40>)
9000216e:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002172:	6021      	str	r1, [r4, #0]
90002174:	f00d fe19 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002178:	4620      	mov	r0, r4
9000217a:	4b0a      	ldr	r3, [pc, #40]	; (900021a4 <__tcf_0+0x44>)
9000217c:	f840 3f38 	str.w	r3, [r0, #56]!
90002180:	f00d fe13 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002184:	4620      	mov	r0, r4
90002186:	4b08      	ldr	r3, [pc, #32]	; (900021a8 <__tcf_0+0x48>)
        static FrontendHeap instance;
90002188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9000218c:	f840 3f14 	str.w	r3, [r0, #20]!
90002190:	f00d be0b 	b.w	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
90002194:	24005bdc 	.word	0x24005bdc
90002198:	90027c08 	.word	0x90027c08
9000219c:	90027c3c 	.word	0x90027c3c
900021a0:	240080b4 	.word	0x240080b4
900021a4:	90027bd4 	.word	0x90027bd4
900021a8:	90027ba0 	.word	0x90027ba0

900021ac <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
900021ac:	b510      	push	{r4, lr}
900021ae:	4604      	mov	r4, r0
900021b0:	4a0f      	ldr	r2, [pc, #60]	; (900021f0 <_ZN12FrontendHeapD0Ev+0x44>)
900021b2:	4910      	ldr	r1, [pc, #64]	; (900021f4 <_ZN12FrontendHeapD0Ev+0x48>)
900021b4:	f242 40d8 	movw	r0, #9432	; 0x24d8
900021b8:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
900021bc:	6021      	str	r1, [r4, #0]
900021be:	4420      	add	r0, r4
900021c0:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
900021c4:	f00d fdf1 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900021c8:	4620      	mov	r0, r4
900021ca:	4b0b      	ldr	r3, [pc, #44]	; (900021f8 <_ZN12FrontendHeapD0Ev+0x4c>)
900021cc:	f840 3f38 	str.w	r3, [r0, #56]!
900021d0:	f00d fdeb 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900021d4:	4b09      	ldr	r3, [pc, #36]	; (900021fc <_ZN12FrontendHeapD0Ev+0x50>)
900021d6:	4620      	mov	r0, r4
900021d8:	f840 3f14 	str.w	r3, [r0, #20]!
900021dc:	f00d fde5 	bl	9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>
900021e0:	4620      	mov	r0, r4
900021e2:	f44f 511a 	mov.w	r1, #9856	; 0x2680
900021e6:	f023 ffe4 	bl	900261b2 <_ZdlPvj>
900021ea:	4620      	mov	r0, r4
900021ec:	bd10      	pop	{r4, pc}
900021ee:	bf00      	nop
900021f0:	90027c08 	.word	0x90027c08
900021f4:	90027c3c 	.word	0x90027c3c
900021f8:	90027bd4 	.word	0x90027bd4
900021fc:	90027ba0 	.word	0x90027ba0

90002200 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002204:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002206:	2400      	movs	r4, #0
90002208:	f001 fb06 	bl	90003818 <_ZN14BitmapDatabase11getInstanceEv>
9000220c:	4605      	mov	r5, r0
9000220e:	f001 fb07 	bl	90003820 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002212:	4623      	mov	r3, r4
90002214:	4601      	mov	r1, r0
90002216:	4622      	mov	r2, r4
90002218:	4628      	mov	r0, r5
9000221a:	9400      	str	r4, [sp, #0]
9000221c:	f015 ffa8 	bl	90018170 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002220:	4b29      	ldr	r3, [pc, #164]	; (900022c8 <touchgfx_init+0xc8>)
90002222:	4a2a      	ldr	r2, [pc, #168]	; (900022cc <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002224:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002226:	4c2a      	ldr	r4, [pc, #168]	; (900022d0 <touchgfx_init+0xd0>)
90002228:	601a      	str	r2, [r3, #0]
9000222a:	f002 fa35 	bl	90004698 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
9000222e:	4829      	ldr	r0, [pc, #164]	; (900022d4 <touchgfx_init+0xd4>)
90002230:	f015 ff06 	bl	90018040 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002234:	6823      	ldr	r3, [r4, #0]
90002236:	f3bf 8f5b 	dmb	ish
9000223a:	07db      	lsls	r3, r3, #31
9000223c:	d505      	bpl.n	9000224a <touchgfx_init+0x4a>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
9000223e:	4826      	ldr	r0, [pc, #152]	; (900022d8 <touchgfx_init+0xd8>)
}
90002240:	b002      	add	sp, #8
90002242:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002246:	f7fe bb43 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
9000224a:	4620      	mov	r0, r4
9000224c:	f023 ffb3 	bl	900261b6 <__cxa_guard_acquire>
90002250:	2800      	cmp	r0, #0
90002252:	d0f4      	beq.n	9000223e <touchgfx_init+0x3e>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002254:	4d21      	ldr	r5, [pc, #132]	; (900022dc <touchgfx_init+0xdc>)
          screenStorage(scr),
          transitionStorage(tra),
90002256:	4f22      	ldr	r7, [pc, #136]	; (900022e0 <touchgfx_init+0xe0>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002258:	4b22      	ldr	r3, [pc, #136]	; (900022e4 <touchgfx_init+0xe4>)
        : presenterStorage(pres),
9000225a:	f105 0014 	add.w	r0, r5, #20
          frontendApplication(app)
9000225e:	f107 064c 	add.w	r6, r7, #76	; 0x4c
          screenStorage(scr),
90002262:	f105 0838 	add.w	r8, r5, #56	; 0x38
90002266:	602b      	str	r3, [r5, #0]
          transitionStorage(tra),
90002268:	60ef      	str	r7, [r5, #12]
        : presenterStorage(pres),
9000226a:	6068      	str	r0, [r5, #4]
          frontendApplication(app)
9000226c:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
9000226e:	f8c5 8008 	str.w	r8, [r5, #8]
90002272:	f00d fd9b 	bl	9000fdac <_ZN8touchgfx17AbstractPartitionC1Ev>
90002276:	4b1c      	ldr	r3, [pc, #112]	; (900022e8 <touchgfx_init+0xe8>)
90002278:	4640      	mov	r0, r8
9000227a:	616b      	str	r3, [r5, #20]
9000227c:	f00d fd96 	bl	9000fdac <_ZN8touchgfx17AbstractPartitionC1Ev>
90002280:	4b1a      	ldr	r3, [pc, #104]	; (900022ec <touchgfx_init+0xec>)
90002282:	4638      	mov	r0, r7
90002284:	63ab      	str	r3, [r5, #56]	; 0x38
90002286:	f00d fd91 	bl	9000fdac <_ZN8touchgfx17AbstractPartitionC1Ev>
9000228a:	f505 5300 	add.w	r3, r5, #8192	; 0x2000
9000228e:	4a18      	ldr	r2, [pc, #96]	; (900022f0 <touchgfx_init+0xf0>)
90002290:	f503 60a4 	add.w	r0, r3, #1312	; 0x520
90002294:	f8c3 24d8 	str.w	r2, [r3, #1240]	; 0x4d8
90002298:	f003 fb02 	bl	900058a0 <_ZN5ModelC1Ev>
9000229c:	462a      	mov	r2, r5
9000229e:	f107 0148 	add.w	r1, r7, #72	; 0x48
900022a2:	4630      	mov	r0, r6
900022a4:	f003 fae2 	bl	9000586c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
900022a8:	4630      	mov	r0, r6
900022aa:	f002 f825 	bl	900042f8 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>
        static FrontendHeap instance;
900022ae:	4811      	ldr	r0, [pc, #68]	; (900022f4 <touchgfx_init+0xf4>)
900022b0:	f023 ffcc 	bl	9002624c <atexit>
900022b4:	4620      	mov	r0, r4
900022b6:	f023 ff8a 	bl	900261ce <__cxa_guard_release>
900022ba:	4807      	ldr	r0, [pc, #28]	; (900022d8 <touchgfx_init+0xd8>)
}
900022bc:	b002      	add	sp, #8
900022be:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
900022c2:	f7fe bb05 	b.w	900008d0 <_ZN11TouchGFXHAL10initializeEv>
900022c6:	bf00      	nop
900022c8:	240235e0 	.word	0x240235e0
900022cc:	24009090 	.word	0x24009090
900022d0:	24005bd8 	.word	0x24005bd8
900022d4:	2400002c 	.word	0x2400002c
900022d8:	24009008 	.word	0x24009008
900022dc:	24005bdc 	.word	0x24005bdc
900022e0:	240080b4 	.word	0x240080b4
900022e4:	90027c3c 	.word	0x90027c3c
900022e8:	90027ba0 	.word	0x90027ba0
900022ec:	90027bd4 	.word	0x90027bd4
900022f0:	90027c08 	.word	0x90027c08
900022f4:	90002161 	.word	0x90002161

900022f8 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
900022f8:	4770      	bx	lr
900022fa:	bf00      	nop

900022fc <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
900022fc:	4801      	ldr	r0, [pc, #4]	; (90002304 <touchgfx_taskEntry+0x8>)
900022fe:	f7fe baad 	b.w	9000085c <_ZN11TouchGFXHAL9taskEntryEv>
90002302:	bf00      	nop
90002304:	24009008 	.word	0x24009008

90002308 <_GLOBAL__sub_I_touchgfx_init>:
}
90002308:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
9000230a:	4b25      	ldr	r3, [pc, #148]	; (900023a0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
9000230c:	4c25      	ldr	r4, [pc, #148]	; (900023a4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static STM32DMA dma;
9000230e:	4e26      	ldr	r6, [pc, #152]	; (900023a8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
static LCD16bpp display;
90002310:	4d26      	ldr	r5, [pc, #152]	; (900023ac <_GLOBAL__sub_I_touchgfx_init+0xa4>)
90002312:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002314:	4630      	mov	r0, r6
90002316:	f7ff fe29 	bl	90001f6c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
9000231a:	4628      	mov	r0, r5
9000231c:	f01a fa00 	bl	9001c720 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
90002320:	4b23      	ldr	r3, [pc, #140]	; (900023b0 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
          mcuInstrumentation(0),
90002322:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002324:	f44f 70f0 	mov.w	r0, #480	; 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002328:	f44f 7188 	mov.w	r1, #272	; 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
9000232c:	62da      	str	r2, [r3, #44]	; 0x2c
9000232e:	861a      	strh	r2, [r3, #48]	; 0x30
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
90002330:	655a      	str	r2, [r3, #84]	; 0x54
          useAuxiliaryLCD(false),
90002332:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
          lastY(0),
90002336:	665a      	str	r2, [r3, #100]	; 0x64
          vSyncCompensationEnabled(false),
90002338:	66da      	str	r2, [r3, #108]	; 0x6c
          updateMCULoad(0),
9000233a:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
          mcuInstrumentation(0),
9000233e:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002342:	4c1c      	ldr	r4, [pc, #112]	; (900023b4 <_GLOBAL__sub_I_touchgfx_init+0xac>)
90002344:	669c      	str	r4, [r3, #104]	; 0x68
        instance = this;
90002346:	4c1c      	ldr	r4, [pc, #112]	; (900023b8 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002348:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
9000234a:	4c1c      	ldr	r4, [pc, #112]	; (900023bc <_GLOBAL__sub_I_touchgfx_init+0xb4>)
9000234c:	8020      	strh	r0, [r4, #0]
9000234e:	4c1c      	ldr	r4, [pc, #112]	; (900023c0 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002350:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002352:	4c1c      	ldr	r4, [pc, #112]	; (900023c4 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002354:	481c      	ldr	r0, [pc, #112]	; (900023c8 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
90002356:	8021      	strh	r1, [r4, #0]
90002358:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
9000235a:	4c1c      	ldr	r4, [pc, #112]	; (900023cc <_GLOBAL__sub_I_touchgfx_init+0xc4>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
9000235c:	491c      	ldr	r1, [pc, #112]	; (900023d0 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000235e:	481d      	ldr	r0, [pc, #116]	; (900023d4 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
          lcdRef(display),
90002360:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002364:	f44f 7580 	mov.w	r5, #256	; 0x100
          frameBufferAllocator(0),
90002368:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
9000236c:	649d      	str	r5, [r3, #72]	; 0x48
            : startX(0),
9000236e:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002372:	e9c3 2209 	strd	r2, r2, [r3, #36]	; 0x24
          frameBuffer0(0),
90002376:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
9000237a:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
9000237e:	e9c3 2213 	strd	r2, r2, [r3, #76]	; 0x4c
          lastX(0),
90002382:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
        DISPLAY_ROTATION = rotate0;
90002386:	7022      	strb	r2, [r4, #0]
90002388:	6019      	str	r1, [r3, #0]
9000238a:	4913      	ldr	r1, [pc, #76]	; (900023d8 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
        : cc_consumed(0),
9000238c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002390:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          cc_in(0)
90002394:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
90002398:	67d9      	str	r1, [r3, #124]	; 0x7c
          requestedOrientation(ORIENTATION_LANDSCAPE),
9000239a:	e9c3 201d 	strd	r2, r0, [r3, #116]	; 0x74
}
9000239e:	bd70      	pop	{r4, r5, r6, pc}
900023a0:	900273a4 	.word	0x900273a4
900023a4:	2400825c 	.word	0x2400825c
900023a8:	24008260 	.word	0x24008260
900023ac:	24009094 	.word	0x24009094
900023b0:	24009008 	.word	0x24009008
900023b4:	01000001 	.word	0x01000001
900023b8:	2402357c 	.word	0x2402357c
900023bc:	24023570 	.word	0x24023570
900023c0:	24023576 	.word	0x24023576
900023c4:	24023572 	.word	0x24023572
900023c8:	24023578 	.word	0x24023578
900023cc:	24023574 	.word	0x24023574
900023d0:	90027534 	.word	0x90027534
900023d4:	01010000 	.word	0x01010000
900023d8:	9002737c 	.word	0x9002737c

900023dc <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
900023dc:	4801      	ldr	r0, [pc, #4]	; (900023e4 <_GLOBAL__sub_D_touchgfx_init+0x8>)
900023de:	f7ff bb47 	b.w	90001a70 <_ZN8STM32DMAD1Ev>
900023e2:	bf00      	nop
900023e4:	24008260 	.word	0x24008260

900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
900023e8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900023ec:	b112      	cbz	r2, 900023f4 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
900023ee:	6803      	ldr	r3, [r0, #0]
900023f0:	695b      	ldr	r3, [r3, #20]
900023f2:	4718      	bx	r3
        }
    }
900023f4:	4770      	bx	lr
900023f6:	bf00      	nop

900023f8 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
900023f8:	2000      	movs	r0, #0
900023fa:	4770      	bx	lr

900023fc <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
900023fc:	8081      	strh	r1, [r0, #4]
    }
900023fe:	4770      	bx	lr

90002400 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002400:	80c1      	strh	r1, [r0, #6]
    }
90002402:	4770      	bx	lr

90002404 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002404:	8101      	strh	r1, [r0, #8]
    }
90002406:	4770      	bx	lr

90002408 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002408:	8141      	strh	r1, [r0, #10]
    }
9000240a:	4770      	bx	lr

9000240c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
9000240c:	4770      	bx	lr
9000240e:	bf00      	nop

90002410 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002410:	4770      	bx	lr
90002412:	bf00      	nop

90002414 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002414:	4770      	bx	lr
90002416:	bf00      	nop

90002418 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002418:	4770      	bx	lr
9000241a:	bf00      	nop

9000241c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
9000241c:	4770      	bx	lr
9000241e:	bf00      	nop

90002420 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002420:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002424:	6803      	ldr	r3, [r0, #0]
90002426:	eba2 020c 	sub.w	r2, r2, ip
9000242a:	f8b0 c004 	ldrh.w	ip, [r0, #4]
9000242e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90002430:	eba1 010c 	sub.w	r1, r1, ip
90002434:	b212      	sxth	r2, r2
90002436:	b209      	sxth	r1, r1
90002438:	4718      	bx	r3
9000243a:	bf00      	nop

9000243c <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
9000243c:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
9000243e:	f64f 7cff 	movw	ip, #65535	; 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002442:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002446:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
9000244a:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
9000244e:	6010      	str	r0, [r2, #0]
    }
90002450:	4770      	bx	lr
90002452:	bf00      	nop

90002454 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002454:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
90002458:	b11a      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
9000245a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
9000245e:	b102      	cbz	r2, 90002462 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002460:	6018      	str	r0, [r3, #0]
        }
    }
90002462:	4770      	bx	lr

90002464 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002464:	2000      	movs	r0, #0
90002466:	4770      	bx	lr

90002468 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002468:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
9000246a:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
9000246c:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
9000246e:	809a      	strh	r2, [r3, #4]
    }
90002470:	4770      	bx	lr
90002472:	bf00      	nop

90002474 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002474:	4770      	bx	lr
90002476:	bf00      	nop

90002478 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002478:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
9000247c:	4770      	bx	lr
9000247e:	bf00      	nop

90002480 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002480:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
90002484:	4770      	bx	lr
90002486:	bf00      	nop

90002488 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002488:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
9000248c:	688a      	ldr	r2, [r1, #8]
9000248e:	f8c0 c000 	str.w	ip, [r0]
90002492:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002498:	2200      	movs	r2, #0
9000249a:	6002      	str	r2, [r0, #0]
9000249c:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000249e:	4770      	bx	lr

900024a0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
900024a0:	2000      	movs	r0, #0
900024a2:	4770      	bx	lr

900024a4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
900024a4:	4b03      	ldr	r3, [pc, #12]	; (900024b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
900024a6:	2290      	movs	r2, #144	; 0x90
900024a8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
900024ac:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
900024b0:	4770      	bx	lr
900024b2:	bf00      	nop
900024b4:	e000e100 	.word	0xe000e100

900024b8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024b8:	4a09      	ldr	r2, [pc, #36]	; (900024e0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
900024ba:	490a      	ldr	r1, [pc, #40]	; (900024e4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
900024bc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024be:	480a      	ldr	r0, [pc, #40]	; (900024e8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
900024c0:	f3c3 030a 	ubfx	r3, r3, #0, #11
900024c4:	3b01      	subs	r3, #1
900024c6:	b29b      	uxth	r3, r3
900024c8:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
900024ca:	6911      	ldr	r1, [r2, #16]
900024cc:	f3c1 010a 	ubfx	r1, r1, #0, #11
900024d0:	3901      	subs	r1, #1
900024d2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
900024d4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
900024d6:	6b53      	ldr	r3, [r2, #52]	; 0x34
900024d8:	f043 0301 	orr.w	r3, r3, #1
900024dc:	6353      	str	r3, [r2, #52]	; 0x34
}
900024de:	4770      	bx	lr
900024e0:	50001000 	.word	0x50001000
900024e4:	24009166 	.word	0x24009166
900024e8:	24009164 	.word	0x24009164

900024ec <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    dma.start();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
900024ec:	4b01      	ldr	r3, [pc, #4]	; (900024f4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
900024ee:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
900024f2:	4770      	bx	lr
900024f4:	50001000 	.word	0x50001000

900024f8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024f8:	4b02      	ldr	r3, [pc, #8]	; (90002504 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
900024fa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
900024fc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002500:	625a      	str	r2, [r3, #36]	; 0x24
}
90002502:	4770      	bx	lr
90002504:	50001000 	.word	0x50001000

90002508 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setRGBBufferEPhj>:

    virtual void setRGBBuffer(uint8_t* buffer, size_t sizeOfBuffer)
    {
        // Running in UI thread / main

        bufferRGB = buffer;
90002508:	e9c0 120c 	strd	r1, r2, [r0, #48]	; 0x30
        topBufferRGB = bufferRGB;
9000250c:	6381      	str	r1, [r0, #56]	; 0x38
        sizeBufferRGB = sizeOfBuffer;
    }
9000250e:	4770      	bx	lr

90002510 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
class DedicatedBufferController : public touchgfx::VideoController
90002510:	4770      	bx	lr
90002512:	bf00      	nop

90002514 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
        mjpegDecoders[handle]->setVideoData(reader);
90002514:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002518:	4611      	mov	r1, r2
9000251a:	6840      	ldr	r0, [r0, #4]
9000251c:	6803      	ldr	r3, [r0, #0]
9000251e:	68db      	ldr	r3, [r3, #12]
90002520:	4718      	bx	r3
90002522:	bf00      	nop

90002524 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(bool allow)
    {
        allowSkipFrames = allow;
90002524:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
    }
90002528:	4770      	bx	lr
9000252a:	bf00      	nop

9000252c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DedicatedBufferController : public touchgfx::VideoController
9000252c:	b510      	push	{r4, lr}
9000252e:	4604      	mov	r4, r0
90002530:	2148      	movs	r1, #72	; 0x48
90002532:	f023 fe3e 	bl	900261b2 <_ZdlPvj>
90002536:	4620      	mov	r0, r4
90002538:	bd10      	pop	{r4, pc}
9000253a:	bf00      	nop

9000253c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
9000253c:	b911      	cbnz	r1, 90002544 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
9000253e:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
90002542:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
90002544:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002546:	4a03      	ldr	r2, [pc, #12]	; (90002554 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90002548:	f44f 71b8 	mov.w	r1, #368	; 0x170
9000254c:	4b02      	ldr	r3, [pc, #8]	; (90002558 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
9000254e:	4803      	ldr	r0, [pc, #12]	; (9000255c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90002550:	f023 fe5e 	bl	90026210 <__assert_func>
90002554:	90027c5c 	.word	0x90027c5c
90002558:	90027c48 	.word	0x90027c48
9000255c:	90027de8 	.word	0x90027de8

90002560 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90002560:	b921      	cbnz	r1, 9000256c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
90002562:	6840      	ldr	r0, [r0, #4]
90002564:	4611      	mov	r1, r2
90002566:	6803      	ldr	r3, [r0, #0]
90002568:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000256a:	4718      	bx	r3
        assert(handle < no_streams);
9000256c:	4b03      	ldr	r3, [pc, #12]	; (9000257c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
9000256e:	f44f 71b5 	mov.w	r1, #362	; 0x16a
90002572:	4a03      	ldr	r2, [pc, #12]	; (90002580 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
90002574:	4803      	ldr	r0, [pc, #12]	; (90002584 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
90002576:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002578:	f023 fe4a 	bl	90026210 <__assert_func>
9000257c:	90027c48 	.word	0x90027c48
90002580:	90027e2c 	.word	0x90027e2c
90002584:	90027de8 	.word	0x90027de8

90002588 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90002588:	b909      	cbnz	r1, 9000258e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
9000258a:	68c0      	ldr	r0, [r0, #12]
9000258c:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
9000258e:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90002590:	4a02      	ldr	r2, [pc, #8]	; (9000259c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x14>)
90002592:	2179      	movs	r1, #121	; 0x79
90002594:	4b02      	ldr	r3, [pc, #8]	; (900025a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
90002596:	4803      	ldr	r0, [pc, #12]	; (900025a4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90002598:	f023 fe3a 	bl	90026210 <__assert_func>
9000259c:	90027fdc 	.word	0x90027fdc
900025a0:	90027c48 	.word	0x90027c48
900025a4:	90027de8 	.word	0x90027de8

900025a8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
900025a8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900025aa:	460c      	mov	r4, r1
900025ac:	b949      	cbnz	r1, 900025c2 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x1a>
900025ae:	4611      	mov	r1, r2
900025b0:	461a      	mov	r2, r3
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b2:	6843      	ldr	r3, [r0, #4]
        stream.frameNumber = 0;
900025b4:	60c4      	str	r4, [r0, #12]
        mjpegDecoders[handle]->setVideoData(movie, length);
900025b6:	681c      	ldr	r4, [r3, #0]
900025b8:	4618      	mov	r0, r3
900025ba:	68a3      	ldr	r3, [r4, #8]
    }
900025bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        mjpegDecoders[handle]->setVideoData(movie, length);
900025c0:	4718      	bx	r3
        assert(handle < no_streams);
900025c2:	4b03      	ldr	r3, [pc, #12]	; (900025d0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x28>)
900025c4:	2190      	movs	r1, #144	; 0x90
900025c6:	4a03      	ldr	r2, [pc, #12]	; (900025d4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x2c>)
900025c8:	4803      	ldr	r0, [pc, #12]	; (900025d8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x30>)
900025ca:	f023 fe21 	bl	90026210 <__assert_func>
900025ce:	bf00      	nop
900025d0:	90027c48 	.word	0x90027c48
900025d4:	90028190 	.word	0x90028190
900025d8:	90027de8 	.word	0x90027de8

900025dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
900025dc:	b921      	cbnz	r1, 900025e8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.tickCount = 0;
900025de:	e9c0 1104 	strd	r1, r1, [r0, #16]
        stream.frame_rate_video = video_frames;
900025e2:	e9c0 3206 	strd	r3, r2, [r0, #24]
900025e6:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
900025e8:	b508      	push	{r3, lr}
        assert(handle < no_streams);
900025ea:	4a03      	ldr	r2, [pc, #12]	; (900025f8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
900025ec:	2182      	movs	r1, #130	; 0x82
900025ee:	4b03      	ldr	r3, [pc, #12]	; (900025fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
900025f0:	4803      	ldr	r0, [pc, #12]	; (90002600 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
900025f2:	f023 fe0d 	bl	90026210 <__assert_func>
900025f6:	bf00      	nop
900025f8:	9002836c 	.word	0x9002836c
900025fc:	90027c48 	.word	0x90027c48
90002600:	90027de8 	.word	0x90027de8

90002604 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
90002604:	f00d beb4 	b.w	90010370 <_ZN8touchgfx3HAL10beginFrameEv>

90002608 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
        if (firstDrawThisFrame)
90002608:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000260c:	b903      	cbnz	r3, 90002610 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x8>
9000260e:	4770      	bx	lr
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
90002610:	b510      	push	{r4, lr}
            MUTEX_LOCK(mutexBuffers);
90002612:	f04f 31ff 	mov.w	r1, #4294967295
90002616:	4604      	mov	r4, r0
90002618:	6c40      	ldr	r0, [r0, #68]	; 0x44
9000261a:	f00a fc75 	bl	9000cf08 <osMutexAcquire>
            firstDrawThisFrame = false;
9000261e:	f44f 7380 	mov.w	r3, #256	; 0x100
90002622:	f8a4 303d 	strh.w	r3, [r4, #61]	; 0x3d
    }
90002626:	bd10      	pop	{r4, pc}

90002628 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
    virtual void unregisterVideoWidget(const Handle handle)
90002628:	b538      	push	{r3, r4, r5, lr}
9000262a:	460c      	mov	r4, r1
9000262c:	4605      	mov	r5, r0
        MUTEX_LOCK(mutexBuffers);
9000262e:	f04f 31ff 	mov.w	r1, #4294967295
90002632:	6c40      	ldr	r0, [r0, #68]	; 0x44
        streams[handle].isActive = false;
90002634:	eb04 04c4 	add.w	r4, r4, r4, lsl #3
        MUTEX_LOCK(mutexBuffers);
90002638:	f00a fc66 	bl	9000cf08 <osMutexAcquire>
        MUTEX_UNLOCK(mutexBuffers);
9000263c:	6c68      	ldr	r0, [r5, #68]	; 0x44
9000263e:	f00a fc87 	bl	9000cf50 <osMutexRelease>
        streams[handle].isActive = false;
90002642:	2300      	movs	r3, #0
90002644:	eb05 0484 	add.w	r4, r5, r4, lsl #2
90002648:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        if (oneIsActive == false)
9000264c:	f895 3028 	ldrb.w	r3, [r5, #40]	; 0x28
90002650:	b90b      	cbnz	r3, 90002656 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm+0x2e>
            topBufferRGB = bufferRGB;
90002652:	6b2b      	ldr	r3, [r5, #48]	; 0x30
90002654:	63ab      	str	r3, [r5, #56]	; 0x38
    }
90002656:	bd38      	pop	{r3, r4, r5, pc}

90002658 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
{
90002658:	b570      	push	{r4, r5, r6, lr}
            if (stream.isPlaying || stream.isShowingOneFrame)
9000265a:	4c1c      	ldr	r4, [pc, #112]	; (900026cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x74>)
9000265c:	4605      	mov	r5, r0
    HAL::endFrame();
9000265e:	f00d fe93 	bl	90010388 <_ZN8touchgfx3HAL8endFrameEv>
90002662:	f894 3029 	ldrb.w	r3, [r4, #41]	; 0x29
90002666:	b98b      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
90002668:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
9000266c:	b973      	cbnz	r3, 9000268c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x34>
        firstDrawThisFrame = true;
9000266e:	2301      	movs	r3, #1
        SEM_POST(semDecode);
90002670:	6c20      	ldr	r0, [r4, #64]	; 0x40
        firstDrawThisFrame = true;
90002672:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        SEM_POST(semDecode);
90002676:	f00a fd11 	bl	9000d09c <osSemaphoreRelease>
        if (uiHasMutex)
9000267a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
9000267e:	b9f3      	cbnz	r3, 900026be <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x66>
    dma.start();
90002680:	6868      	ldr	r0, [r5, #4]
90002682:	6803      	ldr	r3, [r0, #0]
}
90002684:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    dma.start();
90002688:	691b      	ldr	r3, [r3, #16]
9000268a:	4718      	bx	r3
    bool decodeForNextTick(Stream& stream)
    {
        // Running in UI thread

        // Compare tickCount/frameCount to frame_rate_ticks/frame_rate_video
        if ((stream.tickCount * stream.frame_rate_video) >= (stream.frame_rate_ticks * stream.frameCount))
9000268c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
90002690:	69e1      	ldr	r1, [r4, #28]
90002692:	6922      	ldr	r2, [r4, #16]
90002694:	fb00 f303 	mul.w	r3, r0, r3
90002698:	fb01 f202 	mul.w	r2, r1, r2
9000269c:	4293      	cmp	r3, r2
9000269e:	d3e6      	bcc.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
        {
            if (allowSkipFrames)
900026a0:	f894 003c 	ldrb.w	r0, [r4, #60]	; 0x3c
900026a4:	b138      	cbz	r0, 900026b6 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x5e>
            {
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
900026a6:	1a9b      	subs	r3, r3, r2
900026a8:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
900026ac:	4299      	cmp	r1, r3
                {
                    stream.skip_frames--;
900026ae:	bf98      	it	ls
900026b0:	f102 32ff 	addls.w	r2, r2, #4294967295
900026b4:	6262      	str	r2, [r4, #36]	; 0x24
                    stream.doDecode = true;
900026b6:	2301      	movs	r3, #1
900026b8:	f884 302e 	strb.w	r3, [r4, #46]	; 0x2e
        for (uint32_t i = 0; i < no_streams; i++)
900026bc:	e7d7      	b.n	9000266e <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x16>
            MUTEX_UNLOCK(mutexBuffers);
900026be:	6c60      	ldr	r0, [r4, #68]	; 0x44
900026c0:	f00a fc46 	bl	9000cf50 <osMutexRelease>
            uiHasMutex = false;
900026c4:	2300      	movs	r3, #0
900026c6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
900026ca:	e7d9      	b.n	90002680 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x28>
900026cc:	2400911c 	.word	0x2400911c

900026d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900026d0:	f00d be18 	b.w	90010304 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900026d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900026d4:	f00d bf79 	b.w	900105ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900026d8 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
{
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable "CPU Cache" in the
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900026d8:	4814      	ldr	r0, [pc, #80]	; (9000272c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900026da:	6943      	ldr	r3, [r0, #20]
900026dc:	03d9      	lsls	r1, r3, #15
900026de:	d523      	bpl.n	90002728 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900026e0:	2300      	movs	r3, #0
{
900026e2:	b510      	push	{r4, lr}
900026e4:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900026e8:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900026ec:	f8d0 3080 	ldr.w	r3, [r0, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900026f0:	f643 74e0 	movw	r4, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
900026f4:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
900026f8:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
900026fc:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002700:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002704:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90002706:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000270a:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000270c:	f8c0 2274 	str.w	r2, [r0, #628]	; 0x274
      } while (ways-- != 0U);
90002710:	1c5a      	adds	r2, r3, #1
90002712:	d1f8      	bne.n	90002706 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90002714:	f1ac 0c20 	sub.w	ip, ip, #32
90002718:	f11c 0f20 	cmn.w	ip, #32
9000271c:	d1f0      	bne.n	90002700 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000271e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002722:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90002726:	bd10      	pop	{r4, pc}
90002728:	4770      	bx	lr
9000272a:	bf00      	nop
9000272c:	e000ed00 	.word	0xe000ed00

90002730 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90002730:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90002732:	2900      	cmp	r1, #0
90002734:	d133      	bne.n	9000279e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x6e>
90002736:	4604      	mov	r4, r0
        switch (cmd)
90002738:	2a05      	cmp	r2, #5
9000273a:	d809      	bhi.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
9000273c:	e8df f002 	tbb	[pc, r2]
90002740:	27221e0f 	.word	0x27221e0f
90002744:	0903      	.short	0x0903
            stream.isPlaying = false;
90002746:	2200      	movs	r2, #0
            stream.seek_to_frame = 1;
90002748:	2301      	movs	r3, #1
            stream.isPlaying = false;
9000274a:	f880 2029 	strb.w	r2, [r0, #41]	; 0x29
            stream.seek_to_frame = 1;
9000274e:	6203      	str	r3, [r0, #32]
    }
90002750:	bd10      	pop	{r4, pc}
            stream.repeat = (param > 0);
90002752:	3b00      	subs	r3, #0
90002754:	bf18      	it	ne
90002756:	2301      	movne	r3, #1
90002758:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
    }
9000275c:	bd10      	pop	{r4, pc}
            if (mjpegDecoders[handle]->hasVideo())
9000275e:	6840      	ldr	r0, [r0, #4]
90002760:	6803      	ldr	r3, [r0, #0]
90002762:	691b      	ldr	r3, [r3, #16]
90002764:	4798      	blx	r3
90002766:	2800      	cmp	r0, #0
90002768:	d0f2      	beq.n	90002750 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x20>
                stream.isPlaying = true;
9000276a:	2201      	movs	r2, #1
                stream.frameCount = 0;
9000276c:	2300      	movs	r3, #0
                stream.isPlaying = true;
9000276e:	f884 2029 	strb.w	r2, [r4, #41]	; 0x29
                stream.hasMoreFrames = true; // Assume more frames, lowered on end
90002772:	f884 202c 	strb.w	r2, [r4, #44]	; 0x2c
                stream.tickCount = 0;
90002776:	e9c4 3304 	strd	r3, r3, [r4, #16]
    }
9000277a:	bd10      	pop	{r4, pc}
            stream.isPlaying = false;
9000277c:	2300      	movs	r3, #0
9000277e:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
    }
90002782:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
90002784:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
90002786:	6203      	str	r3, [r0, #32]
            stream.tickCount = 0;
90002788:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000278c:	bd10      	pop	{r4, pc}
            stream.frameCount = 0;
9000278e:	2200      	movs	r2, #0
            stream.isShowingOneFrame = true;
90002790:	2101      	movs	r1, #1
            stream.seek_to_frame = param;
90002792:	6203      	str	r3, [r0, #32]
            stream.isShowingOneFrame = true;
90002794:	f880 102a 	strb.w	r1, [r0, #42]	; 0x2a
            stream.tickCount = 0;
90002798:	e9c0 2204 	strd	r2, r2, [r0, #16]
    }
9000279c:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000279e:	4b03      	ldr	r3, [pc, #12]	; (900027ac <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x7c>)
900027a0:	21a2      	movs	r1, #162	; 0xa2
900027a2:	4a03      	ldr	r2, [pc, #12]	; (900027b0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x80>)
900027a4:	4803      	ldr	r0, [pc, #12]	; (900027b4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x84>)
900027a6:	f023 fd33 	bl	90026210 <__assert_func>
900027aa:	bf00      	nop
900027ac:	90027c48 	.word	0x90027c48
900027b0:	90028528 	.word	0x90028528
900027b4:	90027de8 	.word	0x90027de8

900027b8 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900027b8:	b510      	push	{r4, lr}
        assert(handle < no_streams);
900027ba:	bb39      	cbnz	r1, 9000280c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x54>
        if (stream.isPlaying)
900027bc:	f890 3029 	ldrb.w	r3, [r0, #41]	; 0x29
900027c0:	4604      	mov	r4, r0
900027c2:	b923      	cbnz	r3, 900027ce <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x16>
        if (stream.doInvalidateOnNextTick)
900027c4:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027c8:	b963      	cbnz	r3, 900027e4 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x2c>
        return true;
900027ca:	2001      	movs	r0, #1
    }
900027cc:	bd10      	pop	{r4, pc}
        return vSyncForFrame;
900027ce:	4912      	ldr	r1, [pc, #72]	; (90002818 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x60>)
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
900027d0:	6943      	ldr	r3, [r0, #20]
900027d2:	6809      	ldr	r1, [r1, #0]
900027d4:	f891 106b 	ldrb.w	r1, [r1, #107]	; 0x6b
900027d8:	440b      	add	r3, r1
900027da:	6143      	str	r3, [r0, #20]
        if (stream.doInvalidateOnNextTick)
900027dc:	f894 302b 	ldrb.w	r3, [r4, #43]	; 0x2b
900027e0:	2b00      	cmp	r3, #0
900027e2:	d0f2      	beq.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
     *
     * @param [in] videoBuffer Video buffer.
     */
    void setVideoBuffer(uint8_t* const videoBuffer)
    {
        buffer = videoBuffer;
900027e4:	68a1      	ldr	r1, [r4, #8]
            widget.invalidate();
900027e6:	4610      	mov	r0, r2
900027e8:	6813      	ldr	r3, [r2, #0]
900027ea:	695b      	ldr	r3, [r3, #20]
900027ec:	6311      	str	r1, [r2, #48]	; 0x30
900027ee:	4798      	blx	r3
            stream.doInvalidateOnNextTick = false;
900027f0:	2300      	movs	r3, #0
            if (!stream.hasMoreFrames && !stream.repeat)
900027f2:	f894 002c 	ldrb.w	r0, [r4, #44]	; 0x2c
            stream.doInvalidateOnNextTick = false;
900027f6:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
            if (!stream.hasMoreFrames && !stream.repeat)
900027fa:	2800      	cmp	r0, #0
900027fc:	d1e5      	bne.n	900027ca <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12>
900027fe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
90002802:	2b00      	cmp	r3, #0
90002804:	d1e2      	bne.n	900027cc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14>
                stream.isPlaying = false;
90002806:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
    }
9000280a:	bd10      	pop	{r4, pc}
        assert(handle < no_streams);
9000280c:	4b03      	ldr	r3, [pc, #12]	; (9000281c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x64>)
9000280e:	21d0      	movs	r1, #208	; 0xd0
90002810:	4a03      	ldr	r2, [pc, #12]	; (90002820 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x68>)
90002812:	4804      	ldr	r0, [pc, #16]	; (90002824 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x6c>)
90002814:	f023 fcfc 	bl	90026210 <__assert_func>
90002818:	2402357c 	.word	0x2402357c
9000281c:	90027c48 	.word	0x90027c48
90002820:	900286fc 	.word	0x900286fc
90002824:	90027de8 	.word	0x90027de8

90002828 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    {
        // Running in UI thread

        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
90002828:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000282c:	b570      	push	{r4, r5, r6, lr}
            if (streams[i].isActive == false)
9000282e:	b9fb      	cbnz	r3, 90002870 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x48>
            {
                // Reset stream parameters
                streams[i] = Stream();
90002830:	2201      	movs	r2, #1
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002832:	6b85      	ldr	r5, [r0, #56]	; 0x38
                streams[i] = Stream();
90002834:	60c3      	str	r3, [r0, #12]
90002836:	f8a0 202d 	strh.w	r2, [r0, #45]	; 0x2d
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
9000283a:	f505 2487 	add.w	r4, r5, #276480	; 0x43800
        streams[handle].isActive = true;
9000283e:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
                streams[i] = Stream();
90002842:	6103      	str	r3, [r0, #16]
90002844:	6143      	str	r3, [r0, #20]
90002846:	6183      	str	r3, [r0, #24]
90002848:	61c3      	str	r3, [r0, #28]
9000284a:	6203      	str	r3, [r0, #32]
9000284c:	6243      	str	r3, [r0, #36]	; 0x24
9000284e:	f8c0 3029 	str.w	r3, [r0, #41]	; 0x29
        if (topBufferRGB + sizeOfOneDecodeBuffer > (bufferRGB + sizeBufferRGB))
90002852:	e9d0 260c 	ldrd	r2, r6, [r0, #48]	; 0x30
90002856:	4432      	add	r2, r6
90002858:	4294      	cmp	r4, r2
9000285a:	d810      	bhi.n	9000287e <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x56>
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
        bufferWidth = width;
9000285c:	4a0b      	ldr	r2, [pc, #44]	; (9000288c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x64>)
        decodeBuffers[handle] = (uint32_t*)topBufferRGB;
9000285e:	6085      	str	r5, [r0, #8]
        topBufferRGB += sizeOfOneDecodeBuffer;
90002860:	6384      	str	r4, [r0, #56]	; 0x38
    }
90002862:	4618      	mov	r0, r3
        format = bufferFormat;
90002864:	f881 3034 	strb.w	r3, [r1, #52]	; 0x34
        bufferWidth = width;
90002868:	f8c1 2036 	str.w	r2, [r1, #54]	; 0x36
        buffer = videoBuffer;
9000286c:	630b      	str	r3, [r1, #48]	; 0x30
9000286e:	bd70      	pop	{r4, r5, r6, pc}

                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
90002870:	4b07      	ldr	r3, [pc, #28]	; (90002890 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x68>)
90002872:	f240 11c5 	movw	r1, #453	; 0x1c5
90002876:	4a07      	ldr	r2, [pc, #28]	; (90002894 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x6c>)
90002878:	4807      	ldr	r0, [pc, #28]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
9000287a:	f023 fcc9 	bl	90026210 <__assert_func>
            assert(0 && "registerVideoWidget: Unable to allocate RGB buffer!");
9000287e:	4b07      	ldr	r3, [pc, #28]	; (9000289c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x74>)
90002880:	2152      	movs	r1, #82	; 0x52
90002882:	4a07      	ldr	r2, [pc, #28]	; (900028a0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x78>)
90002884:	4804      	ldr	r0, [pc, #16]	; (90002898 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x70>)
90002886:	f023 fcc3 	bl	90026210 <__assert_func>
9000288a:	bf00      	nop
9000288c:	012001e0 	.word	0x012001e0
90002890:	9002889c 	.word	0x9002889c
90002894:	900288cc 	.word	0x900288cc
90002898:	90027de8 	.word	0x90027de8
9000289c:	90028a54 	.word	0x90028a54
900028a0:	90028a90 	.word	0x90028a90

900028a4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028a4:	4b08      	ldr	r3, [pc, #32]	; (900028c8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900028a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028aa:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028ae:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028b2:	f3bf 8f6f 	isb	sy
900028b6:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028ba:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900028be:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900028c2:	f3bf 8f6f 	isb	sy
}
900028c6:	4770      	bx	lr
900028c8:	e000e100 	.word	0xe000e100

900028cc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900028cc:	4b03      	ldr	r3, [pc, #12]	; (900028dc <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900028ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
900028d2:	609a      	str	r2, [r3, #8]
900028d4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
900028d8:	609a      	str	r2, [r3, #8]
}
900028da:	4770      	bx	lr
900028dc:	e000e100 	.word	0xe000e100

900028e0 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900028e0:	b538      	push	{r3, r4, r5, lr}
900028e2:	4604      	mov	r4, r0
    HAL::initialize();
900028e4:	f00d fd5d 	bl	900103a2 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900028e8:	6823      	ldr	r3, [r4, #0]
900028ea:	6e5d      	ldr	r5, [r3, #100]	; 0x64
900028ec:	f012 fb14 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
900028f0:	4601      	mov	r1, r0
900028f2:	4620      	mov	r0, r4
900028f4:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900028f6:	6823      	ldr	r3, [r4, #0]
900028f8:	4a16      	ldr	r2, [pc, #88]	; (90002954 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
900028fa:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
900028fe:	4295      	cmp	r5, r2
90002900:	d11c      	bne.n	9000293c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002902:	4a15      	ldr	r2, [pc, #84]	; (90002958 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002904:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
90002906:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
9000290a:	f502 317f 	add.w	r1, r2, #261120	; 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000290e:	4813      	ldr	r0, [pc, #76]	; (9000295c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90002910:	e9c4 210f 	strd	r2, r1, [r4, #60]	; 0x3c
        setAnimationStorage(animationStorage);
90002914:	4a12      	ldr	r2, [pc, #72]	; (90002960 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90002916:	7005      	strb	r5, [r0, #0]
90002918:	4293      	cmp	r3, r2
9000291a:	d116      	bne.n	9000294a <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6a>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
9000291c:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000291e:	4a11      	ldr	r2, [pc, #68]	; (90002964 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90002920:	6463      	str	r3, [r4, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90002922:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
90002924:	6864      	ldr	r4, [r4, #4]
        sizeBufferRGB = sizeOfBuffer;
90002926:	f44f 2087 	mov.w	r0, #276480	; 0x43800
        mjpegDecoders[index] = &decoder;
9000292a:	4b0f      	ldr	r3, [pc, #60]	; (90002968 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x88>)
9000292c:	490f      	ldr	r1, [pc, #60]	; (9000296c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x8c>)
        bufferRGB = buffer;
9000292e:	4a10      	ldr	r2, [pc, #64]	; (90002970 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x90>)
90002930:	644c      	str	r4, [r1, #68]	; 0x44
        mjpegDecoders[index] = &decoder;
90002932:	6059      	str	r1, [r3, #4]
        bufferRGB = buffer;
90002934:	631a      	str	r2, [r3, #48]	; 0x30
        sizeBufferRGB = sizeOfBuffer;
90002936:	e9c3 020d 	strd	r0, r2, [r3, #52]	; 0x34
}
9000293a:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
9000293c:	4a0d      	ldr	r2, [pc, #52]	; (90002974 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x94>)
9000293e:	2300      	movs	r3, #0
90002940:	4620      	mov	r0, r4
90002942:	f5a2 317f 	sub.w	r1, r2, #261120	; 0x3fc00
90002946:	47a8      	blx	r5
90002948:	e7ec      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
9000294a:	2100      	movs	r1, #0
9000294c:	4620      	mov	r0, r4
9000294e:	4798      	blx	r3
90002950:	e7e8      	b.n	90002924 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
90002952:	bf00      	nop
90002954:	90000805 	.word	0x90000805
90002958:	d003fc00 	.word	0xd003fc00
9000295c:	2402357a 	.word	0x2402357a
90002960:	90000675 	.word	0x90000675
90002964:	2402357b 	.word	0x2402357b
90002968:	2400911c 	.word	0x2400911c
9000296c:	24009168 	.word	0x24009168
90002970:	d00bf400 	.word	0xd00bf400
90002974:	d007f800 	.word	0xd007f800

90002978 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
90002978:	b510      	push	{r4, lr}
        return instance;
9000297a:	4c14      	ldr	r4, [pc, #80]	; (900029cc <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
9000297c:	6823      	ldr	r3, [r4, #0]
9000297e:	b323      	cbz	r3, 900029ca <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
90002980:	4b13      	ldr	r3, [pc, #76]	; (900029d0 <HAL_LTDC_LineEventCallback+0x58>)
90002982:	4a14      	ldr	r2, [pc, #80]	; (900029d4 <HAL_LTDC_LineEventCallback+0x5c>)
90002984:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90002986:	8811      	ldrh	r1, [r2, #0]
90002988:	428b      	cmp	r3, r1
9000298a:	d00a      	beq.n	900029a2 <HAL_LTDC_LineEventCallback+0x2a>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
9000298c:	f007 ff88 	bl	9000a8a0 <HAL_LTDC_ProgramLineEvent>
90002990:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
90002992:	6803      	ldr	r3, [r0, #0]
90002994:	6a1b      	ldr	r3, [r3, #32]
90002996:	4798      	blx	r3

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
90002998:	2000      	movs	r0, #0
        }
    }
9000299a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
9000299e:	f7fd be0d 	b.w	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900029a2:	4b0d      	ldr	r3, [pc, #52]	; (900029d8 <HAL_LTDC_LineEventCallback+0x60>)
900029a4:	8819      	ldrh	r1, [r3, #0]
900029a6:	f007 ff7b 	bl	9000a8a0 <HAL_LTDC_ProgramLineEvent>
        return instance;
900029aa:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
900029ac:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
900029b0:	3301      	adds	r3, #1
900029b2:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            OSWrappers::signalVSync();
900029b6:	f7ff f835 	bl	90001a24 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
900029ba:	6820      	ldr	r0, [r4, #0]
900029bc:	f00e fa4a 	bl	90010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
900029c0:	2000      	movs	r0, #0
    }
900029c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
900029c6:	f7fd bdc5 	b.w	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
900029ca:	bd10      	pop	{r4, pc}
900029cc:	2402357c 	.word	0x2402357c
900029d0:	50001000 	.word	0x50001000
900029d4:	24009166 	.word	0x24009166
900029d8:	24009164 	.word	0x24009164

900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>:
    void decoderTaskEntry()
900029dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900029e0:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 90002a9c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xc0>
900029e4:	b083      	sub	sp, #12
                    stream.doInvalidateOnNextTick = true;
900029e6:	2601      	movs	r6, #1
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029e8:	f44f 7770 	mov.w	r7, #960	; 0x3c0
    void decoderTaskEntry()
900029ec:	4604      	mov	r4, r0
900029ee:	e024      	b.n	90002a3a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x5e>
                        decoder->gotoFrame(stream.seek_to_frame);
900029f0:	682b      	ldr	r3, [r5, #0]
900029f2:	4628      	mov	r0, r5
900029f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900029f6:	4798      	blx	r3
                        stream.seek_to_frame = 0;
900029f8:	2300      	movs	r3, #0
900029fa:	6223      	str	r3, [r4, #32]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
900029fc:	6829      	ldr	r1, [r5, #0]
900029fe:	f44f 7390 	mov.w	r3, #288	; 0x120
90002a02:	9700      	str	r7, [sp, #0]
90002a04:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90002a08:	f8d1 9014 	ldr.w	r9, [r1, #20]
90002a0c:	4628      	mov	r0, r5
90002a0e:	68a1      	ldr	r1, [r4, #8]
90002a10:	47c8      	blx	r9
                    stream.frameCount++;
90002a12:	6923      	ldr	r3, [r4, #16]
                    stream.hasMoreFrames = decoder->decodeNextFrame((uint8_t*)decodeBuffers[i], width, height, stride);
90002a14:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c
                    stream.frameCount++;
90002a18:	3301      	adds	r3, #1
90002a1a:	6123      	str	r3, [r4, #16]
                    if (stream.hasMoreFrames)
90002a1c:	2800      	cmp	r0, #0
90002a1e:	d033      	beq.n	90002a88 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xac>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a20:	682b      	ldr	r3, [r5, #0]
90002a22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90002a24:	4543      	cmp	r3, r8
90002a26:	d131      	bne.n	90002a8c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb0>
        return frameNumber;
90002a28:	6968      	ldr	r0, [r5, #20]
90002a2a:	3801      	subs	r0, #1
                    stream.doDecode = false;
90002a2c:	2200      	movs	r2, #0
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a2e:	60e0      	str	r0, [r4, #12]
                    stream.doDecode = false;
90002a30:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
            MUTEX_UNLOCK(mutexBuffers);
90002a34:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a36:	f00a fa8b 	bl	9000cf50 <osMutexRelease>
            SEM_WAIT(semDecode);
90002a3a:	f04f 31ff 	mov.w	r1, #4294967295
90002a3e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90002a40:	f00a faf8 	bl	9000d034 <osSemaphoreAcquire>
            MUTEX_LOCK(mutexBuffers);
90002a44:	f04f 31ff 	mov.w	r1, #4294967295
90002a48:	6c60      	ldr	r0, [r4, #68]	; 0x44
90002a4a:	f00a fa5d 	bl	9000cf08 <osMutexAcquire>
                if (stream.doDecode)
90002a4e:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
90002a52:	2b00      	cmp	r3, #0
90002a54:	d0ee      	beq.n	90002a34 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x58>
                    if (stream.seek_to_frame > 0)
90002a56:	6a21      	ldr	r1, [r4, #32]
                    MJPEGDecoder* const decoder = mjpegDecoders[i];
90002a58:	6865      	ldr	r5, [r4, #4]
                    stream.doInvalidateOnNextTick = true;
90002a5a:	f884 602b 	strb.w	r6, [r4, #43]	; 0x2b
                    if (stream.seek_to_frame > 0)
90002a5e:	2900      	cmp	r1, #0
90002a60:	d1c6      	bne.n	900029f0 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x14>
                        if (stream.skip_frames > 0)
90002a62:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a64:	2b00      	cmp	r3, #0
90002a66:	d0c9      	beq.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a68:	682a      	ldr	r2, [r5, #0]
90002a6a:	e9d2 9109 	ldrd	r9, r1, [r2, #36]	; 0x24
90002a6e:	4541      	cmp	r1, r8
90002a70:	d10f      	bne.n	90002a92 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0xb6>
90002a72:	6968      	ldr	r0, [r5, #20]
90002a74:	18c1      	adds	r1, r0, r3
90002a76:	4628      	mov	r0, r5
90002a78:	47c8      	blx	r9
                            stream.frameCount += stream.skip_frames;
90002a7a:	6923      	ldr	r3, [r4, #16]
90002a7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
                            stream.skip_frames = 0;
90002a7e:	2200      	movs	r2, #0
                            stream.frameCount += stream.skip_frames;
90002a80:	440b      	add	r3, r1
                            stream.skip_frames = 0;
90002a82:	6262      	str	r2, [r4, #36]	; 0x24
                            stream.frameCount += stream.skip_frames;
90002a84:	6123      	str	r3, [r4, #16]
90002a86:	e7b9      	b.n	900029fc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x20>
90002a88:	2001      	movs	r0, #1
90002a8a:	e7cf      	b.n	90002a2c <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x50>
                        stream.frameNumber = decoder->getCurrentFrameNumber() - 1; // Points to frame after this
90002a8c:	4628      	mov	r0, r5
90002a8e:	4798      	blx	r3
90002a90:	e7cb      	b.n	90002a2a <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x4e>
                            decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90002a92:	4628      	mov	r0, r5
90002a94:	4788      	blx	r1
90002a96:	6a63      	ldr	r3, [r4, #36]	; 0x24
90002a98:	e7ec      	b.n	90002a74 <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv+0x98>
90002a9a:	bf00      	nop
90002a9c:	9000097d 	.word	0x9000097d

90002aa0 <videoTaskFunc>:
    videoController.decoderTaskEntry();
90002aa0:	4801      	ldr	r0, [pc, #4]	; (90002aa8 <videoTaskFunc+0x8>)
{
90002aa2:	b508      	push	{r3, lr}
    videoController.decoderTaskEntry();
90002aa4:	f7ff ff9a 	bl	900029dc <_ZN25DedicatedBufferControllerILm1ELm480ELm288ELm960ELN8touchgfx6Bitmap12BitmapFormatE0EE16decoderTaskEntryEv>
90002aa8:	2400911c 	.word	0x2400911c

90002aac <_GLOBAL__sub_I_mjpegdecoder1>:
}
90002aac:	b538      	push	{r3, r4, r5, lr}
HardwareMJPEGDecoder mjpegdecoder1;
90002aae:	4815      	ldr	r0, [pc, #84]	; (90002b04 <_GLOBAL__sub_I_mjpegdecoder1+0x58>)
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ab0:	2500      	movs	r5, #0
90002ab2:	f7fe fb57 	bl	90001164 <_ZN20HardwareMJPEGDecoderC1Ev>
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ab6:	4c14      	ldr	r4, [pc, #80]	; (90002b08 <_GLOBAL__sub_I_mjpegdecoder1+0x5c>)
90002ab8:	4914      	ldr	r1, [pc, #80]	; (90002b0c <_GLOBAL__sub_I_mjpegdecoder1+0x60>)
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002aba:	f44f 7380 	mov.w	r3, #256	; 0x100
        semDecode = SEM_CREATE(); // Binary semaphore
90002abe:	462a      	mov	r2, r5
90002ac0:	2001      	movs	r0, #1
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac2:	6021      	str	r1, [r4, #0]
        semDecode = SEM_CREATE(); // Binary semaphore
90002ac4:	4629      	mov	r1, r5
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ac6:	85a3      	strh	r3, [r4, #44]	; 0x2c
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ac8:	87a3      	strh	r3, [r4, #60]	; 0x3c
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002aca:	60e5      	str	r5, [r4, #12]
            isActive(false), isPlaying(false), isShowingOneFrame(false),
90002acc:	62a5      	str	r5, [r4, #40]	; 0x28
            doInvalidateOnNextTick(false), hasMoreFrames(false), repeat(true), doDecode(false) {}
90002ace:	f884 502e 	strb.w	r5, [r4, #46]	; 0x2e
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ad2:	63a5      	str	r5, [r4, #56]	; 0x38
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ad4:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
        Stream() : frameNumber(0), frameCount(0), tickCount(0), frame_rate_video(0), frame_rate_ticks(0),
90002ad8:	e9c4 5504 	strd	r5, r5, [r4, #16]
90002adc:	e9c4 5506 	strd	r5, r5, [r4, #24]
            seek_to_frame(0), skip_frames(0),
90002ae0:	e9c4 5508 	strd	r5, r5, [r4, #32]
        : VideoController(), bufferRGB(0), sizeBufferRGB(0), topBufferRGB(0),
90002ae4:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
          allowSkipFrames(false), firstDrawThisFrame(true), uiHasMutex(false), semDecode(0), mutexBuffers(0)
90002ae8:	e9c4 5510 	strd	r5, r5, [r4, #64]	; 0x40
90002aec:	e9c4 5501 	strd	r5, r5, [r4, #4]
        semDecode = SEM_CREATE(); // Binary semaphore
90002af0:	f00a fa50 	bl	9000cf94 <osSemaphoreNew>
90002af4:	4603      	mov	r3, r0
        mutexBuffers = MUTEX_CREATE();
90002af6:	4628      	mov	r0, r5
        semDecode = SEM_CREATE(); // Binary semaphore
90002af8:	6423      	str	r3, [r4, #64]	; 0x40
        mutexBuffers = MUTEX_CREATE();
90002afa:	f00a f9c5 	bl	9000ce88 <osMutexNew>
90002afe:	6460      	str	r0, [r4, #68]	; 0x44
}
90002b00:	bd38      	pop	{r3, r4, r5, pc}
90002b02:	bf00      	nop
90002b04:	24009168 	.word	0x24009168
90002b08:	2400911c 	.word	0x2400911c
90002b0c:	90028c5c 	.word	0x90028c5c

90002b10 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90002b10:	4901      	ldr	r1, [pc, #4]	; (90002b18 <vApplicationIdleHook+0x8>)
90002b12:	2000      	movs	r0, #0
90002b14:	f00c bc8c 	b.w	9000f430 <vTaskSetApplicationTaskTag>
90002b18:	90000959 	.word	0x90000959

90002b1c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90002b1c:	b508      	push	{r3, lr}
  for(;;)
  {
	  check_suspend_asteroids_task();
	  check_resume_asteroids_task();

	  osDelay(100);
90002b1e:	2064      	movs	r0, #100	; 0x64
90002b20:	f00a f9a4 	bl	9000ce6c <osDelay>
  for(;;)
90002b24:	e7fb      	b.n	90002b1e <StartDefaultTask+0x2>
90002b26:	bf00      	nop

90002b28 <bullet_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_bullet_timer_task_function */
void bullet_timer_task_function(void *argument)
{
90002b28:	4d09      	ldr	r5, [pc, #36]	; (90002b50 <bullet_timer_task_function+0x28>)
90002b2a:	4e0a      	ldr	r6, [pc, #40]	; (90002b54 <bullet_timer_task_function+0x2c>)
90002b2c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN bullet_timer_task_function */
  /* Infinite loop */

  for(;;)
  {
	  if( osSemaphoreGetCount(bullet_timer_started_semaphoreHandle) == 0 ) {
90002b2e:	6828      	ldr	r0, [r5, #0]
90002b30:	f00a fae0 	bl	9000d0f4 <osSemaphoreGetCount>
90002b34:	4604      	mov	r4, r0
90002b36:	2800      	cmp	r0, #0
90002b38:	d1f9      	bne.n	90002b2e <bullet_timer_task_function+0x6>
		  osDelay(100);
90002b3a:	2064      	movs	r0, #100	; 0x64
90002b3c:	f00a f996 	bl	9000ce6c <osDelay>
		  osSemaphoreRelease(bullet_timer_started_semaphoreHandle);
90002b40:	6828      	ldr	r0, [r5, #0]
90002b42:	f00a faab 	bl	9000d09c <osSemaphoreRelease>
		  osSemaphoreAcquire(bullet_timer_ended_semaphoreHandle, 0U);
90002b46:	4621      	mov	r1, r4
90002b48:	6830      	ldr	r0, [r6, #0]
90002b4a:	f00a fa73 	bl	9000d034 <osSemaphoreAcquire>
90002b4e:	e7ee      	b.n	90002b2e <bullet_timer_task_function+0x6>
90002b50:	240091b8 	.word	0x240091b8
90002b54:	240091b4 	.word	0x240091b4

90002b58 <invincibility_timer_task_function>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_invincibility_timer_task_function */
void invincibility_timer_task_function(void *argument)
{
90002b58:	4d0a      	ldr	r5, [pc, #40]	; (90002b84 <invincibility_timer_task_function+0x2c>)
90002b5a:	4e0b      	ldr	r6, [pc, #44]	; (90002b88 <invincibility_timer_task_function+0x30>)
90002b5c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN invincibility_timer_task_function */
  /* Infinite loop */
  for(;;)
  {
	  if( osSemaphoreGetCount(invincibility_timer_started_semaphoreHandle) == 0 ) {
90002b5e:	6828      	ldr	r0, [r5, #0]
90002b60:	f00a fac8 	bl	9000d0f4 <osSemaphoreGetCount>
90002b64:	4604      	mov	r4, r0
90002b66:	2800      	cmp	r0, #0
90002b68:	d1f9      	bne.n	90002b5e <invincibility_timer_task_function+0x6>
		  osDelay(1000);
90002b6a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
90002b6e:	f00a f97d 	bl	9000ce6c <osDelay>
		  osSemaphoreRelease(invincibility_timer_started_semaphoreHandle);
90002b72:	6828      	ldr	r0, [r5, #0]
90002b74:	f00a fa92 	bl	9000d09c <osSemaphoreRelease>
		  osSemaphoreAcquire(invincibility_timer_ended_semaphoreHandle, 0U);
90002b78:	4621      	mov	r1, r4
90002b7a:	6830      	ldr	r0, [r6, #0]
90002b7c:	f00a fa5a 	bl	9000d034 <osSemaphoreAcquire>
90002b80:	e7ed      	b.n	90002b5e <invincibility_timer_task_function+0x6>
90002b82:	bf00      	nop
90002b84:	24009464 	.word	0x24009464
90002b88:	24009460 	.word	0x24009460

90002b8c <SystemClock_Config>:
{
90002b8c:	b570      	push	{r4, r5, r6, lr}
90002b8e:	b09e      	sub	sp, #120	; 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
90002b90:	224c      	movs	r2, #76	; 0x4c
90002b92:	2100      	movs	r1, #0
90002b94:	a80a      	add	r0, sp, #40	; 0x28
90002b96:	f023 fe13 	bl	900267c0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
90002b9a:	2220      	movs	r2, #32
90002b9c:	2100      	movs	r1, #0
90002b9e:	a802      	add	r0, sp, #8
90002ba0:	f023 fe0e 	bl	900267c0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
90002ba4:	2002      	movs	r0, #2
90002ba6:	f008 f8b9 	bl	9000ad1c <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
90002baa:	4b22      	ldr	r3, [pc, #136]	; (90002c34 <SystemClock_Config+0xa8>)
90002bac:	2100      	movs	r1, #0
90002bae:	4a22      	ldr	r2, [pc, #136]	; (90002c38 <SystemClock_Config+0xac>)
90002bb0:	9101      	str	r1, [sp, #4]
90002bb2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
90002bb4:	f021 0101 	bic.w	r1, r1, #1
90002bb8:	62d9      	str	r1, [r3, #44]	; 0x2c
90002bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90002bbc:	f003 0301 	and.w	r3, r3, #1
90002bc0:	9301      	str	r3, [sp, #4]
90002bc2:	6993      	ldr	r3, [r2, #24]
90002bc4:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
90002bc8:	6193      	str	r3, [r2, #24]
90002bca:	6993      	ldr	r3, [r2, #24]
90002bcc:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
90002bd0:	9301      	str	r3, [sp, #4]
90002bd2:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
90002bd4:	6993      	ldr	r3, [r2, #24]
90002bd6:	0499      	lsls	r1, r3, #18
90002bd8:	d5fc      	bpl.n	90002bd4 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002bda:	2201      	movs	r2, #1
90002bdc:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
90002be0:	2402      	movs	r4, #2
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002be2:	2608      	movs	r6, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
90002be4:	2500      	movs	r5, #0
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002be6:	a80a      	add	r0, sp, #40	; 0x28
  RCC_OscInitStruct.PLL.PLLP = 2;
90002be8:	9417      	str	r4, [sp, #92]	; 0x5c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
90002bea:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLN = 160;
90002bee:	2205      	movs	r2, #5
90002bf0:	23a0      	movs	r3, #160	; 0xa0
90002bf2:	e9cd 2315 	strd	r2, r3, [sp, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bf6:	2304      	movs	r3, #4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90002bf8:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90002bfc:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
90002bfe:	e9cd 4619 	strd	r4, r6, [sp, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
90002c02:	e9cd 551b 	strd	r5, r5, [sp, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90002c06:	f008 f931 	bl	9000ae6c <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c0a:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c0c:	223f      	movs	r2, #63	; 0x3f
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c0e:	4621      	mov	r1, r4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
90002c10:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c12:	eb0d 0006 	add.w	r0, sp, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90002c16:	9202      	str	r2, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c18:	2203      	movs	r2, #3
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
90002c1a:	9309      	str	r3, [sp, #36]	; 0x24
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
90002c1c:	9504      	str	r5, [sp, #16]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90002c1e:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
90002c20:	e9cd 6305 	strd	r6, r3, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90002c24:	f44f 6380 	mov.w	r3, #1024	; 0x400
90002c28:	9308      	str	r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
90002c2a:	f008 fcb3 	bl	9000b594 <HAL_RCC_ClockConfig>
}
90002c2e:	b01e      	add	sp, #120	; 0x78
90002c30:	bd70      	pop	{r4, r5, r6, pc}
90002c32:	bf00      	nop
90002c34:	58000400 	.word	0x58000400
90002c38:	58024800 	.word	0x58024800

90002c3c <main>:
{
90002c3c:	b580      	push	{r7, lr}

/* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c3e:	2400      	movs	r4, #0
{
90002c40:	b098      	sub	sp, #96	; 0x60
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c42:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c44:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c46:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90002c48:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002c4c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_MPU_Disable();
90002c50:	f005 f84c 	bl	90007cec <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c54:	f04f 5310 	mov.w	r3, #603979776	; 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c58:	49d4      	ldr	r1, [pc, #848]	; (90002fac <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c5a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.BaseAddress = 0x24000000;
90002c5c:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c5e:	4bd4      	ldr	r3, [pc, #848]	; (90002fb0 <main+0x374>)
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90002c60:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90002c64:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c68:	f005 f85e 	bl	90007d28 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c6c:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c70:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002c72:	f88d 4037 	strb.w	r4, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0x90000000;
90002c76:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002c78:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90002c7c:	f88d 502d 	strb.w	r5, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002c80:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c84:	f005 f850 	bl	90007d28 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c88:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002c8a:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002c8c:	f8ad 6037 	strh.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90002c90:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
90002c94:	231a      	movs	r3, #26
90002c96:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002c9a:	f240 1301 	movw	r3, #257	; 0x101
90002c9e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002ca2:	f005 f841 	bl	90007d28 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002ca6:	f44f 7380 	mov.w	r3, #256	; 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002caa:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90002cac:	f8ad 403a 	strh.w	r4, [sp, #58]	; 0x3a

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002cb0:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
90002cb2:	f8ad 3037 	strh.w	r3, [sp, #55]	; 0x37
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002cb6:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90002cba:	f88d 7034 	strb.w	r7, [sp, #52]	; 0x34
  MPU_InitStruct.BaseAddress = 0xD0000000;
90002cbe:	930c      	str	r3, [sp, #48]	; 0x30
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
90002cc0:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cc4:	f005 f830 	bl	90007d28 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cc8:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cca:	a80b      	add	r0, sp, #44	; 0x2c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90002ccc:	f88d 6037 	strb.w	r6, [sp, #55]	; 0x37
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
90002cd0:	f88d 3034 	strb.w	r3, [sp, #52]	; 0x34
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
90002cd4:	f88d 402d 	strb.w	r4, [sp, #45]	; 0x2d
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
90002cd8:	f88d 503a 	strb.w	r5, [sp, #58]	; 0x3a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90002cdc:	f005 f824 	bl	90007d28 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
90002ce0:	4620      	mov	r0, r4
90002ce2:	f005 f811 	bl	90007d08 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
90002ce6:	4ab3      	ldr	r2, [pc, #716]	; (90002fb4 <main+0x378>)
90002ce8:	6953      	ldr	r3, [r2, #20]
90002cea:	f413 3300 	ands.w	r3, r3, #131072	; 0x20000
90002cee:	d111      	bne.n	90002d14 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
90002cf0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002cf4:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90002cf8:	f8c2 3250 	str.w	r3, [r2, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90002cfc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d00:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90002d04:	6953      	ldr	r3, [r2, #20]
90002d06:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
90002d0a:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90002d0c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d10:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90002d14:	48a7      	ldr	r0, [pc, #668]	; (90002fb4 <main+0x378>)
90002d16:	6943      	ldr	r3, [r0, #20]
90002d18:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
90002d1c:	d124      	bne.n	90002d68 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90002d1e:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
90002d22:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90002d26:	f8d0 5080 	ldr.w	r5, [r0, #128]	; 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d2a:	f643 76e0 	movw	r6, #16352	; 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90002d2e:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d32:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90002d36:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d38:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90002d3c:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d3e:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90002d42:	3b01      	subs	r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90002d44:	f8c0 2260 	str.w	r2, [r0, #608]	; 0x260
      } while (ways-- != 0U);
90002d48:	1c5a      	adds	r2, r3, #1
90002d4a:	d1f8      	bne.n	90002d3e <main+0x102>
    } while(sets-- != 0U);
90002d4c:	3c20      	subs	r4, #32
90002d4e:	f114 0f20 	cmn.w	r4, #32
90002d52:	d1f1      	bne.n	90002d38 <main+0xfc>
90002d54:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90002d58:	6943      	ldr	r3, [r0, #20]
90002d5a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
90002d5e:	6143      	str	r3, [r0, #20]
90002d60:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002d64:	f3bf 8f6f 	isb	sy
  HAL_Init();
90002d68:	f004 ff08 	bl	90007b7c <HAL_Init>
  SystemClock_Config();
90002d6c:	f7ff ff0e 	bl	90002b8c <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
90002d70:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d72:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d74:	4d90      	ldr	r5, [pc, #576]	; (90002fb8 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d76:	21c0      	movs	r1, #192	; 0xc0
90002d78:	4890      	ldr	r0, [pc, #576]	; (90002fbc <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d7a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002d7c:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002d7e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002d80:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002d84:	2708      	movs	r7, #8
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
90002d86:	f04f 0804 	mov.w	r8, #4
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90002d8a:	f04f 0a05 	mov.w	sl, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90002d8e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90002d92:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  __HAL_RCC_GPIOK_CLK_ENABLE();
90002d96:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002d9a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
90002d9e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002da2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002da6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
90002daa:	9301      	str	r3, [sp, #4]
90002dac:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90002dae:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002db2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90002db6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dba:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dbe:	f003 0340 	and.w	r3, r3, #64	; 0x40
90002dc2:	9302      	str	r3, [sp, #8]
90002dc4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOI_CLK_ENABLE();
90002dc6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
90002dce:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dd2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dd6:	f403 7380 	and.w	r3, r3, #256	; 0x100
90002dda:	9303      	str	r3, [sp, #12]
90002ddc:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90002dde:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002de2:	f043 0310 	orr.w	r3, r3, #16
90002de6:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002dea:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dee:	f003 0310 	and.w	r3, r3, #16
90002df2:	9304      	str	r3, [sp, #16]
90002df4:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90002df6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002dfa:	f043 0302 	orr.w	r3, r3, #2
90002dfe:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e02:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e06:	f003 0302 	and.w	r3, r3, #2
90002e0a:	9305      	str	r3, [sp, #20]
90002e0c:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90002e0e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e12:	f443 7300 	orr.w	r3, r3, #512	; 0x200
90002e16:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e1a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e1e:	f403 7300 	and.w	r3, r3, #512	; 0x200
90002e22:	9306      	str	r3, [sp, #24]
90002e24:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90002e26:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e2a:	f043 0308 	orr.w	r3, r3, #8
90002e2e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e32:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e36:	f003 0308 	and.w	r3, r3, #8
90002e3a:	9307      	str	r3, [sp, #28]
90002e3c:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90002e3e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e42:	f043 0320 	orr.w	r3, r3, #32
90002e46:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e4a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e4e:	f003 0320 	and.w	r3, r3, #32
90002e52:	9308      	str	r3, [sp, #32]
90002e54:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90002e56:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e5a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90002e5e:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e62:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e66:	f003 0380 	and.w	r3, r3, #128	; 0x80
90002e6a:	9309      	str	r3, [sp, #36]	; 0x24
90002e6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  __HAL_RCC_GPIOA_CLK_ENABLE();
90002e6e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e72:	f043 0301 	orr.w	r3, r3, #1
90002e76:	f8c5 30e0 	str.w	r3, [r5, #224]	; 0xe0
90002e7a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	; 0xe0
90002e7e:	f003 0301 	and.w	r3, r3, #1
90002e82:	930a      	str	r3, [sp, #40]	; 0x28
90002e84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90002e86:	f005 fb3f 	bl	90008508 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90002e8a:	4622      	mov	r2, r4
90002e8c:	2180      	movs	r1, #128	; 0x80
90002e8e:	484c      	ldr	r0, [pc, #304]	; (90002fc0 <main+0x384>)
90002e90:	f005 fb3a 	bl	90008508 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LED_RED_GPIO_Port, LED_RED_Pin, GPIO_PIN_SET);
90002e94:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90002e98:	484a      	ldr	r0, [pc, #296]	; (90002fc4 <main+0x388>)
90002e9a:	2201      	movs	r2, #1
90002e9c:	f005 fb34 	bl	90008508 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90002ea0:	4622      	mov	r2, r4
90002ea2:	2108      	movs	r1, #8
90002ea4:	4848      	ldr	r0, [pc, #288]	; (90002fc8 <main+0x38c>)
90002ea6:	f005 fb2f 	bl	90008508 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90002eaa:	2201      	movs	r2, #1
90002eac:	4847      	ldr	r0, [pc, #284]	; (90002fcc <main+0x390>)
90002eae:	4611      	mov	r1, r2
90002eb0:	f005 fb2a 	bl	90008508 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, LCD_RESET_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90002eb4:	4622      	mov	r2, r4
90002eb6:	2144      	movs	r1, #68	; 0x44
90002eb8:	4845      	ldr	r0, [pc, #276]	; (90002fd0 <main+0x394>)
90002eba:	f005 fb25 	bl	90008508 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90002ebe:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ec0:	a90b      	add	r1, sp, #44	; 0x2c
90002ec2:	483e      	ldr	r0, [pc, #248]	; (90002fbc <main+0x380>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002ec4:	e9cd 360b 	strd	r3, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002ec8:	e9cd 490d 	strd	r4, r9, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90002ecc:	f005 f91c 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ed0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002ed2:	a90b      	add	r1, sp, #44	; 0x2c
90002ed4:	483a      	ldr	r0, [pc, #232]	; (90002fc0 <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90002ed6:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002ed8:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002eda:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90002ede:	f005 f913 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002ee2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002ee6:	a90b      	add	r1, sp, #44	; 0x2c
90002ee8:	4836      	ldr	r0, [pc, #216]	; (90002fc4 <main+0x388>)
  GPIO_InitStruct.Pin = LED_RED_Pin;
90002eea:	930b      	str	r3, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002eec:	940e      	str	r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002eee:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(LED_RED_GPIO_Port, &GPIO_InitStruct);
90002ef2:	f005 f909 	bl	90008108 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002ef6:	a90b      	add	r1, sp, #44	; 0x2c
90002ef8:	4833      	ldr	r0, [pc, #204]	; (90002fc8 <main+0x38c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002efa:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90002efe:	970b      	str	r7, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f00:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90002f04:	f005 f900 	bl	90008108 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f08:	a90b      	add	r1, sp, #44	; 0x2c
90002f0a:	4830      	ldr	r0, [pc, #192]	; (90002fcc <main+0x390>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f0c:	e9cd 660b 	strd	r6, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f10:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90002f14:	f005 f8f8 	bl	90008108 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f18:	a90b      	add	r1, sp, #44	; 0x2c
90002f1a:	482d      	ldr	r0, [pc, #180]	; (90002fd0 <main+0x394>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90002f1c:	e9cd 860b 	strd	r8, r6, [sp, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90002f20:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
90002f24:	f005 f8f0 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90002f28:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f2c:	f04f 0940 	mov.w	r9, #64	; 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f30:	a90b      	add	r1, sp, #44	; 0x2c
90002f32:	4827      	ldr	r0, [pc, #156]	; (90002fd0 <main+0x394>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90002f34:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90002f38:	e9cd 640c 	strd	r6, r4, [sp, #48]	; 0x30
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90002f3c:	f005 f8e4 	bl	90008108 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f40:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f44:	4622      	mov	r2, r4
90002f46:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f48:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f4a:	207a      	movs	r0, #122	; 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f4c:	f8c5 30d4 	str.w	r3, [r5, #212]	; 0xd4
90002f50:	f8d5 30d4 	ldr.w	r3, [r5, #212]	; 0xd4
  hltdc.Instance = LTDC;
90002f54:	4d1f      	ldr	r5, [pc, #124]	; (90002fd4 <main+0x398>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90002f56:	4033      	ands	r3, r6
90002f58:	9300      	str	r3, [sp, #0]
90002f5a:	9b00      	ldr	r3, [sp, #0]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90002f5c:	f004 fe68 	bl	90007c30 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90002f60:	207a      	movs	r0, #122	; 0x7a
90002f62:	f004 fea3 	bl	90007cac <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90002f66:	2234      	movs	r2, #52	; 0x34
90002f68:	4621      	mov	r1, r4
90002f6a:	a80b      	add	r0, sp, #44	; 0x2c
90002f6c:	f023 fc28 	bl	900267c0 <memset>
  hltdc.Instance = LTDC;
90002f70:	4b19      	ldr	r3, [pc, #100]	; (90002fd8 <main+0x39c>)
  hltdc.Init.AccumulatedVBP = 11;
90002f72:	202a      	movs	r0, #42	; 0x2a
  hltdc.Init.VerticalSync = 8;
90002f74:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90002f76:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90002f78:	2327      	movs	r3, #39	; 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90002f7a:	f240 270a 	movw	r7, #522	; 0x20a
  hltdc.Init.TotalHeigh = 285;
90002f7e:	f44f 7c04 	mov.w	ip, #528	; 0x210
  hltdc.Init.HorizontalSync = 39;
90002f82:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90002f84:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90002f86:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.Backcolor.Red = 0;
90002f88:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.AccumulatedVBP = 11;
90002f8c:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90002f90:	f240 131b 	movw	r3, #283	; 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002f94:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90002f96:	e9c5 7309 	strd	r7, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 285;
90002f9a:	f240 131d 	movw	r3, #285	; 0x11d
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90002f9e:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90002fa0:	e9c5 c30b 	strd	ip, r3, [r5, #44]	; 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90002fa4:	e9c5 4401 	strd	r4, r4, [r5, #4]
90002fa8:	e018      	b.n	90002fdc <main+0x3a0>
90002faa:	bf00      	nop
90002fac:	03000012 	.word	0x03000012
90002fb0:	01010001 	.word	0x01010001
90002fb4:	e000ed00 	.word	0xe000ed00
90002fb8:	58024400 	.word	0x58024400
90002fbc:	58020400 	.word	0x58020400
90002fc0:	58020c00 	.word	0x58020c00
90002fc4:	58022000 	.word	0x58022000
90002fc8:	58021800 	.word	0x58021800
90002fcc:	58022800 	.word	0x58022800
90002fd0:	58020000 	.word	0x58020000
90002fd4:	240092a8 	.word	0x240092a8
90002fd8:	50001000 	.word	0x50001000
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90002fdc:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90002fe0:	f007 fab8 	bl	9000a554 <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90002fe4:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fe8:	4622      	mov	r2, r4
90002fea:	a90b      	add	r1, sp, #44	; 0x2c
  pLayerCfg.WindowX1 = 480;
90002fec:	930c      	str	r3, [sp, #48]	; 0x30
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90002fee:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90002ff0:	9315      	str	r3, [sp, #84]	; 0x54
  pLayerCfg.WindowY1 = 272;
90002ff2:	f44f 7388 	mov.w	r3, #272	; 0x110
  hdma2d.Instance = DMA2D;
90002ff6:	4d55      	ldr	r5, [pc, #340]	; (9000314c <main+0x510>)
  pLayerCfg.WindowY1 = 272;
90002ff8:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageHeight = 272;
90002ffa:	9316      	str	r3, [sp, #88]	; 0x58
  pLayerCfg.Alpha = 255;
90002ffc:	23ff      	movs	r3, #255	; 0xff
  pLayerCfg.WindowX0 = 0;
90002ffe:	940b      	str	r4, [sp, #44]	; 0x2c
  pLayerCfg.Alpha = 255;
90003000:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003002:	f44f 6380 	mov.w	r3, #1024	; 0x400
  pLayerCfg.WindowY0 = 0;
90003006:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
90003008:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.Alpha0 = 0;
9000300a:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.FBStartAdress = 0;
9000300c:	9414      	str	r4, [sp, #80]	; 0x50
  pLayerCfg.Backcolor.Blue = 0;
9000300e:	f8ad 405c 	strh.w	r4, [sp, #92]	; 0x5c
  pLayerCfg.Backcolor.Red = 0;
90003012:	f88d 405e 	strb.w	r4, [sp, #94]	; 0x5e
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
90003016:	970f      	str	r7, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003018:	f8cd a04c 	str.w	sl, [sp, #76]	; 0x4c
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
9000301c:	f007 fb6e 	bl	9000a6fc <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003020:	4b4b      	ldr	r3, [pc, #300]	; (90003150 <main+0x514>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003022:	4628      	mov	r0, r5
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003024:	65ec      	str	r4, [r5, #92]	; 0x5c
  hdma2d.Instance = DMA2D;
90003026:	602b      	str	r3, [r5, #0]
  hdma2d.Init.OutputOffset = 0;
90003028:	60ec      	str	r4, [r5, #12]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
9000302a:	e9c5 4711 	strd	r4, r7, [r5, #68]	; 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
9000302e:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003032:	e9c5 4415 	strd	r4, r4, [r5, #84]	; 0x54
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003036:	e9c5 4701 	strd	r4, r7, [r5, #4]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
9000303a:	f004 ff1d 	bl	90007e78 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
9000303e:	4631      	mov	r1, r6
90003040:	4628      	mov	r0, r5
90003042:	f004 fff1 	bl	90008028 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003046:	4843      	ldr	r0, [pc, #268]	; (90003154 <main+0x518>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003048:	f44f 73c0 	mov.w	r3, #384	; 0x180
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
9000304c:	a90b      	add	r1, sp, #44	; 0x2c
  SdramTiming.WriteRecoveryTime = 5;
9000304e:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  SdramTiming.LoadToActiveDelay = 2;
90003052:	970b      	str	r7, [sp, #44]	; 0x2c
  SdramTiming.SelfRefreshTime = 4;
90003054:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003058:	f8c0 800c 	str.w	r8, [r0, #12]
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000305c:	f8c0 9014 	str.w	r9, [r0, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003060:	6284      	str	r4, [r0, #40]	; 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003062:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
90003066:	f44f 6300 	mov.w	r3, #2048	; 0x800
9000306a:	6203      	str	r3, [r0, #32]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
9000306c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
90003070:	6243      	str	r3, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
90003072:	2307      	movs	r3, #7
90003074:	930c      	str	r3, [sp, #48]	; 0x30
  SdramTiming.RowCycleDelay = 7;
90003076:	930e      	str	r3, [sp, #56]	; 0x38
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003078:	4b37      	ldr	r3, [pc, #220]	; (90003158 <main+0x51c>)
9000307a:	6003      	str	r3, [r0, #0]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
9000307c:	2310      	movs	r3, #16
  SdramTiming.RCDDelay = 2;
9000307e:	e9cd 7710 	strd	r7, r7, [sp, #64]	; 0x40
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003082:	6103      	str	r3, [r0, #16]
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003084:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003088:	f009 fb5c 	bl	9000c744 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit(0);
9000308c:	4620      	mov	r0, r4
9000308e:	f004 fb07 	bl	900076a0 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003092:	4620      	mov	r0, r4
90003094:	f004 fb4e 	bl	90007734 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003098:	f7fd f99c 	bl	900003d4 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
9000309c:	4b2f      	ldr	r3, [pc, #188]	; (9000315c <main+0x520>)
9000309e:	4830      	ldr	r0, [pc, #192]	; (90003160 <main+0x524>)
900030a0:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
900030a2:	f006 fa2b 	bl	900094fc <HAL_JPEG_Init>
  hcrc.Instance = CRC;
900030a6:	482f      	ldr	r0, [pc, #188]	; (90003164 <main+0x528>)
900030a8:	4b2f      	ldr	r3, [pc, #188]	; (90003168 <main+0x52c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
900030aa:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
900030ac:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
900030ae:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
900030b0:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
900030b4:	f004 fe6a 	bl	90007d8c <HAL_CRC_Init>
  MX_TouchGFX_Init();
900030b8:	f7fd f990 	bl	900003dc <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
900030bc:	f7fd f98c 	bl	900003d8 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
900030c0:	f009 fe5e 	bl	9000cd80 <osKernelInitialize>
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900030c4:	4a29      	ldr	r2, [pc, #164]	; (9000316c <main+0x530>)
900030c6:	4621      	mov	r1, r4
900030c8:	4630      	mov	r0, r6
900030ca:	f009 ff63 	bl	9000cf94 <osSemaphoreNew>
900030ce:	4b28      	ldr	r3, [pc, #160]	; (90003170 <main+0x534>)
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030d0:	4a28      	ldr	r2, [pc, #160]	; (90003174 <main+0x538>)
900030d2:	4621      	mov	r1, r4
  bullet_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_started_semaphore_attributes);
900030d4:	6018      	str	r0, [r3, #0]
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030d6:	4630      	mov	r0, r6
900030d8:	f009 ff5c 	bl	9000cf94 <osSemaphoreNew>
900030dc:	4b26      	ldr	r3, [pc, #152]	; (90003178 <main+0x53c>)
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030de:	4a27      	ldr	r2, [pc, #156]	; (9000317c <main+0x540>)
900030e0:	4621      	mov	r1, r4
  bullet_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &bullet_timer_ended_semaphore_attributes);
900030e2:	6018      	str	r0, [r3, #0]
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030e4:	4630      	mov	r0, r6
900030e6:	f009 ff55 	bl	9000cf94 <osSemaphoreNew>
900030ea:	4b25      	ldr	r3, [pc, #148]	; (90003180 <main+0x544>)
900030ec:	4601      	mov	r1, r0
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
900030ee:	4a25      	ldr	r2, [pc, #148]	; (90003184 <main+0x548>)
900030f0:	4630      	mov	r0, r6
  invincibility_timer_started_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_started_semaphore_attributes);
900030f2:	6019      	str	r1, [r3, #0]
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
900030f4:	4621      	mov	r1, r4
900030f6:	f009 ff4d 	bl	9000cf94 <osSemaphoreNew>
900030fa:	4b23      	ldr	r3, [pc, #140]	; (90003188 <main+0x54c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
900030fc:	4a23      	ldr	r2, [pc, #140]	; (9000318c <main+0x550>)
900030fe:	4621      	mov	r1, r4
  invincibility_timer_ended_semaphoreHandle = osSemaphoreNew(1, 0, &invincibility_timer_ended_semaphore_attributes);
90003100:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003102:	4823      	ldr	r0, [pc, #140]	; (90003190 <main+0x554>)
90003104:	f009 fe68 	bl	9000cdd8 <osThreadNew>
90003108:	4b22      	ldr	r3, [pc, #136]	; (90003194 <main+0x558>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000310a:	4a23      	ldr	r2, [pc, #140]	; (90003198 <main+0x55c>)
9000310c:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
9000310e:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003110:	4822      	ldr	r0, [pc, #136]	; (9000319c <main+0x560>)
90003112:	f009 fe61 	bl	9000cdd8 <osThreadNew>
90003116:	4b22      	ldr	r3, [pc, #136]	; (900031a0 <main+0x564>)
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
90003118:	4a22      	ldr	r2, [pc, #136]	; (900031a4 <main+0x568>)
9000311a:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
9000311c:	6018      	str	r0, [r3, #0]
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
9000311e:	4822      	ldr	r0, [pc, #136]	; (900031a8 <main+0x56c>)
90003120:	f009 fe5a 	bl	9000cdd8 <osThreadNew>
90003124:	4b21      	ldr	r3, [pc, #132]	; (900031ac <main+0x570>)
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
90003126:	4a22      	ldr	r2, [pc, #136]	; (900031b0 <main+0x574>)
90003128:	4621      	mov	r1, r4
  videoTaskHandle = osThreadNew(videoTaskFunc, NULL, &videoTask_attributes);
9000312a:	6018      	str	r0, [r3, #0]
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
9000312c:	4821      	ldr	r0, [pc, #132]	; (900031b4 <main+0x578>)
9000312e:	f009 fe53 	bl	9000cdd8 <osThreadNew>
90003132:	4b21      	ldr	r3, [pc, #132]	; (900031b8 <main+0x57c>)
90003134:	4605      	mov	r5, r0
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
90003136:	4a21      	ldr	r2, [pc, #132]	; (900031bc <main+0x580>)
90003138:	4621      	mov	r1, r4
9000313a:	4821      	ldr	r0, [pc, #132]	; (900031c0 <main+0x584>)
  bullet_timer_taHandle = osThreadNew(bullet_timer_task_function, NULL, &bullet_timer_ta_attributes);
9000313c:	601d      	str	r5, [r3, #0]
  invincibility_tHandle = osThreadNew(invincibility_timer_task_function, NULL, &invincibility_t_attributes);
9000313e:	f009 fe4b 	bl	9000cdd8 <osThreadNew>
90003142:	4b20      	ldr	r3, [pc, #128]	; (900031c4 <main+0x588>)
90003144:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003146:	f009 fe2d 	bl	9000cda4 <osKernelStart>
  while (1)
9000314a:	e7fe      	b.n	9000314a <main+0x50e>
9000314c:	240091e8 	.word	0x240091e8
90003150:	52001000 	.word	0x52001000
90003154:	24009428 	.word	0x24009428
90003158:	52004140 	.word	0x52004140
9000315c:	52003000 	.word	0x52003000
90003160:	24009250 	.word	0x24009250
90003164:	240091c4 	.word	0x240091c4
90003168:	58024c00 	.word	0x58024c00
9000316c:	90028d98 	.word	0x90028d98
90003170:	240091b8 	.word	0x240091b8
90003174:	90028d88 	.word	0x90028d88
90003178:	240091b4 	.word	0x240091b4
9000317c:	90028e24 	.word	0x90028e24
90003180:	24009464 	.word	0x24009464
90003184:	90028e14 	.word	0x90028e14
90003188:	24009460 	.word	0x24009460
9000318c:	90028dcc 	.word	0x90028dcc
90003190:	90002b1d 	.word	0x90002b1d
90003194:	240091c0 	.word	0x240091c0
90003198:	90028d64 	.word	0x90028d64
9000319c:	900003ed 	.word	0x900003ed
900031a0:	240091b0 	.word	0x240091b0
900031a4:	90028e34 	.word	0x90028e34
900031a8:	90002aa1 	.word	0x90002aa1
900031ac:	24009468 	.word	0x24009468
900031b0:	90028da8 	.word	0x90028da8
900031b4:	90002b29 	.word	0x90002b29
900031b8:	240091bc 	.word	0x240091bc
900031bc:	90028df0 	.word	0x90028df0
900031c0:	90002b59 	.word	0x90002b59
900031c4:	2400945c 	.word	0x2400945c

900031c8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
900031c8:	4b03      	ldr	r3, [pc, #12]	; (900031d8 <HAL_TIM_PeriodElapsedCallback+0x10>)
900031ca:	6802      	ldr	r2, [r0, #0]
900031cc:	429a      	cmp	r2, r3
900031ce:	d000      	beq.n	900031d2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
900031d0:	4770      	bx	lr
    HAL_IncTick();
900031d2:	f004 bd03 	b.w	90007bdc <HAL_IncTick>
900031d6:	bf00      	nop
900031d8:	40001000 	.word	0x40001000

900031dc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
900031dc:	4770      	bx	lr
900031de:	bf00      	nop

900031e0 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031e0:	4b0b      	ldr	r3, [pc, #44]	; (90003210 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
900031e2:	2200      	movs	r2, #0
900031e4:	210f      	movs	r1, #15
900031e6:	f06f 0001 	mvn.w	r0, #1
{
900031ea:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031ec:	f8d3 40f4 	ldr.w	r4, [r3, #244]	; 0xf4
{
900031f0:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
900031f2:	f044 0402 	orr.w	r4, r4, #2
900031f6:	f8c3 40f4 	str.w	r4, [r3, #244]	; 0xf4
900031fa:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
900031fe:	f003 0302 	and.w	r3, r3, #2
90003202:	9301      	str	r3, [sp, #4]
90003204:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003206:	b003      	add	sp, #12
90003208:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
9000320c:	f004 bd10 	b.w	90007c30 <HAL_NVIC_SetPriority>
90003210:	58024400 	.word	0x58024400

90003214 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003214:	4b0a      	ldr	r3, [pc, #40]	; (90003240 <HAL_CRC_MspInit+0x2c>)
90003216:	6802      	ldr	r2, [r0, #0]
90003218:	429a      	cmp	r2, r3
9000321a:	d000      	beq.n	9000321e <HAL_CRC_MspInit+0xa>
9000321c:	4770      	bx	lr
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
9000321e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
{
90003222:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003224:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003228:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
9000322c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003230:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
90003234:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
90003238:	9301      	str	r3, [sp, #4]
9000323a:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
9000323c:	b002      	add	sp, #8
9000323e:	4770      	bx	lr
90003240:	58024c00 	.word	0x58024c00

90003244 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003244:	4b0f      	ldr	r3, [pc, #60]	; (90003284 <HAL_DMA2D_MspInit+0x40>)
90003246:	6802      	ldr	r2, [r0, #0]
90003248:	429a      	cmp	r2, r3
9000324a:	d000      	beq.n	9000324e <HAL_DMA2D_MspInit+0xa>
9000324c:	4770      	bx	lr
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000324e:	4b0e      	ldr	r3, [pc, #56]	; (90003288 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003250:	205a      	movs	r0, #90	; 0x5a
90003252:	2200      	movs	r2, #0
90003254:	2105      	movs	r1, #5
{
90003256:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003258:	f8d3 40d4 	ldr.w	r4, [r3, #212]	; 0xd4
{
9000325c:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000325e:	f044 0410 	orr.w	r4, r4, #16
90003262:	f8c3 40d4 	str.w	r4, [r3, #212]	; 0xd4
90003266:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
9000326a:	f003 0310 	and.w	r3, r3, #16
9000326e:	9301      	str	r3, [sp, #4]
90003270:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003272:	f004 fcdd 	bl	90007c30 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003276:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
90003278:	b002      	add	sp, #8
9000327a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
9000327e:	f004 bd15 	b.w	90007cac <HAL_NVIC_EnableIRQ>
90003282:	bf00      	nop
90003284:	52001000 	.word	0x52001000
90003288:	58024400 	.word	0x58024400

9000328c <HAL_JPEG_MspInit>:
* @param hjpeg: JPEG handle pointer
* @retval None
*/
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
9000328c:	4b3f      	ldr	r3, [pc, #252]	; (9000338c <HAL_JPEG_MspInit+0x100>)
9000328e:	6802      	ldr	r2, [r0, #0]
90003290:	429a      	cmp	r2, r3
90003292:	d000      	beq.n	90003296 <HAL_JPEG_MspInit+0xa>
90003294:	4770      	bx	lr
{
90003296:	b570      	push	{r4, r5, r6, lr}
  /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
  /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003298:	4b3d      	ldr	r3, [pc, #244]	; (90003390 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
9000329a:	2211      	movs	r2, #17
9000329c:	4e3d      	ldr	r6, [pc, #244]	; (90003394 <HAL_JPEG_MspInit+0x108>)
{
9000329e:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900032a0:	4d3d      	ldr	r5, [pc, #244]	; (90003398 <HAL_JPEG_MspInit+0x10c>)
900032a2:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
900032a4:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900032a6:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
900032a8:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900032ac:	493b      	ldr	r1, [pc, #236]	; (9000339c <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
900032ae:	f042 0220 	orr.w	r2, r2, #32
900032b2:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900032b6:	2280      	movs	r2, #128	; 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
900032b8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
900032bc:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032be:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
900032c2:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
900032c4:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
900032c6:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
900032c8:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
900032ca:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
900032cc:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
900032d0:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
900032d4:	6272      	str	r2, [r6, #36]	; 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032d6:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
900032d8:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
900032dc:	e9c6 330d 	strd	r3, r3, [r6, #52]	; 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
900032e0:	62b2      	str	r2, [r6, #40]	; 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
900032e2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
900032e6:	f44f 42a0 	mov.w	r2, #20480	; 0x5000
900032ea:	e9c6 230b 	strd	r2, r3, [r6, #44]	; 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
900032ee:	2313      	movs	r3, #19
900032f0:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
900032f2:	2302      	movs	r3, #2
900032f4:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
900032f6:	f007 faf5 	bl	9000a8e4 <HAL_MDMA_Init>
900032fa:	2800      	cmp	r0, #0
900032fc:	d13a      	bne.n	90003374 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
900032fe:	2200      	movs	r2, #0
90003300:	4824      	ldr	r0, [pc, #144]	; (90003394 <HAL_JPEG_MspInit+0x108>)
90003302:	4611      	mov	r1, r2
90003304:	f007 fb8c 	bl	9000aa20 <HAL_MDMA_ConfigPostRequestMask>
90003308:	2800      	cmp	r0, #0
9000330a:	d13c      	bne.n	90003386 <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000330c:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000330e:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003310:	6326      	str	r6, [r4, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003312:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003314:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003316:	62aa      	str	r2, [r5, #40]	; 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003318:	f44f 3220 	mov.w	r2, #163840	; 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
9000331c:	4920      	ldr	r1, [pc, #128]	; (900033a0 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
9000331e:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003320:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
90003322:	63ab      	str	r3, [r5, #56]	; 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003324:	6434      	str	r4, [r6, #64]	; 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003326:	e9c5 230c 	strd	r2, r3, [r5, #48]	; 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
9000332a:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
9000332e:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003330:	22c0      	movs	r2, #192	; 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003332:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003336:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003338:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000333c:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003340:	4815      	ldr	r0, [pc, #84]	; (90003398 <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003342:	62e9      	str	r1, [r5, #44]	; 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003344:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003346:	626b      	str	r3, [r5, #36]	; 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003348:	f007 facc 	bl	9000a8e4 <HAL_MDMA_Init>
9000334c:	b9c0      	cbnz	r0, 90003380 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
9000334e:	2200      	movs	r2, #0
90003350:	4811      	ldr	r0, [pc, #68]	; (90003398 <HAL_JPEG_MspInit+0x10c>)
90003352:	4611      	mov	r1, r2
90003354:	f007 fb64 	bl	9000aa20 <HAL_MDMA_ConfigPostRequestMask>
90003358:	b978      	cbnz	r0, 9000337a <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
9000335a:	6365      	str	r5, [r4, #52]	; 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
9000335c:	2079      	movs	r0, #121	; 0x79
9000335e:	2200      	movs	r2, #0
90003360:	2105      	movs	r1, #5
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003362:	642c      	str	r4, [r5, #64]	; 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003364:	f004 fc64 	bl	90007c30 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003368:	2079      	movs	r0, #121	; 0x79
  /* USER CODE BEGIN JPEG_MspInit 1 */

  /* USER CODE END JPEG_MspInit 1 */
  }

}
9000336a:	b002      	add	sp, #8
9000336c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003370:	f004 bc9c 	b.w	90007cac <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003374:	f7ff ff32 	bl	900031dc <Error_Handler>
90003378:	e7c1      	b.n	900032fe <HAL_JPEG_MspInit+0x72>
      Error_Handler();
9000337a:	f7ff ff2f 	bl	900031dc <Error_Handler>
9000337e:	e7ec      	b.n	9000335a <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003380:	f7ff ff2c 	bl	900031dc <Error_Handler>
90003384:	e7e3      	b.n	9000334e <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003386:	f7ff ff29 	bl	900031dc <Error_Handler>
9000338a:	e7bf      	b.n	9000330c <HAL_JPEG_MspInit+0x80>
9000338c:	52003000 	.word	0x52003000
90003390:	58024400 	.word	0x58024400
90003394:	24009350 	.word	0x24009350
90003398:	240093bc 	.word	0x240093bc
9000339c:	52000200 	.word	0x52000200
900033a0:	520001c0 	.word	0x520001c0

900033a4 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
900033a4:	b570      	push	{r4, r5, r6, lr}
900033a6:	b0ba      	sub	sp, #232	; 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900033a8:	2100      	movs	r1, #0
{
900033aa:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900033ac:	22c0      	movs	r2, #192	; 0xc0
900033ae:	a80a      	add	r0, sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
900033b0:	9109      	str	r1, [sp, #36]	; 0x24
900033b2:	e9cd 1105 	strd	r1, r1, [sp, #20]
900033b6:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900033ba:	f023 fa01 	bl	900267c0 <memset>
  if(hltdc->Instance==LTDC)
900033be:	4b4a      	ldr	r3, [pc, #296]	; (900034e8 <HAL_LTDC_MspInit+0x144>)
900033c0:	6822      	ldr	r2, [r4, #0]
900033c2:	429a      	cmp	r2, r3
900033c4:	d001      	beq.n	900033ca <HAL_LTDC_MspInit+0x26>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
900033c6:	b03a      	add	sp, #232	; 0xe8
900033c8:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033ca:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033cc:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033ce:	f04f 5400 	mov.w	r4, #536870912	; 0x20000000
900033d2:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033d4:	21a0      	movs	r1, #160	; 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
900033d6:	9316      	str	r3, [sp, #88]	; 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
900033d8:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033da:	2253      	movs	r2, #83	; 0x53
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
900033dc:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033de:	f44f 6300 	mov.w	r3, #2048	; 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033e2:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
900033e4:	9115      	str	r1, [sp, #84]	; 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
900033e6:	e9cd 450a 	strd	r4, r5, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 83;
900033ea:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
900033ee:	f008 fba9 	bl	9000bb44 <HAL_RCCEx_PeriphCLKConfig>
900033f2:	2800      	cmp	r0, #0
900033f4:	d174      	bne.n	900034e0 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
900033f6:	4b3d      	ldr	r3, [pc, #244]	; (900034ec <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
900033f8:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900033fa:	2500      	movs	r5, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900033fc:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
900033fe:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003402:	a905      	add	r1, sp, #20
90003404:	483a      	ldr	r0, [pc, #232]	; (900034f0 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
90003406:	f042 0208 	orr.w	r2, r2, #8
9000340a:	f8c3 20e4 	str.w	r2, [r3, #228]	; 0xe4
9000340e:	f8d3 20e4 	ldr.w	r2, [r3, #228]	; 0xe4
90003412:	f002 0208 	and.w	r2, r2, #8
90003416:	9200      	str	r2, [sp, #0]
90003418:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000341a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000341e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
90003422:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003426:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000342a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
9000342e:	9201      	str	r2, [sp, #4]
90003430:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90003432:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003436:	f442 7280 	orr.w	r2, r2, #256	; 0x100
9000343a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000343e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003442:	f402 7280 	and.w	r2, r2, #256	; 0x100
90003446:	9202      	str	r2, [sp, #8]
90003448:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000344a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000344e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
90003452:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90003456:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000345a:	f402 7200 	and.w	r2, r2, #512	; 0x200
9000345e:	9203      	str	r2, [sp, #12]
90003460:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003462:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90003466:	f042 0280 	orr.w	r2, r2, #128	; 0x80
9000346a:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
9000346e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
90003472:	9408      	str	r4, [sp, #32]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90003474:	f003 0380 	and.w	r3, r3, #128	; 0x80
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003478:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000347a:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000347c:	23fc      	movs	r3, #252	; 0xfc
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000347e:	9a04      	ldr	r2, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90003480:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003482:	e9cd 4506 	strd	r4, r5, [sp, #24]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90003486:	f004 fe3f 	bl	90008108 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
9000348a:	f24d 2303 	movw	r3, #53763	; 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000348e:	a905      	add	r1, sp, #20
90003490:	4818      	ldr	r0, [pc, #96]	; (900034f4 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
90003492:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90003494:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90003498:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
9000349c:	f004 fe34 	bl	90008108 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900034a0:	f64f 73fb 	movw	r3, #65531	; 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900034a4:	a905      	add	r1, sp, #20
900034a6:	4814      	ldr	r0, [pc, #80]	; (900034f8 <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900034a8:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900034aa:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900034ae:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900034b2:	f004 fe29 	bl	90008108 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900034b6:	f44f 7300 	mov.w	r3, #512	; 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034ba:	a905      	add	r1, sp, #20
900034bc:	480f      	ldr	r0, [pc, #60]	; (900034fc <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900034be:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900034c0:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900034c4:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900034c8:	f004 fe1e 	bl	90008108 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900034cc:	462a      	mov	r2, r5
900034ce:	2105      	movs	r1, #5
900034d0:	2058      	movs	r0, #88	; 0x58
900034d2:	f004 fbad 	bl	90007c30 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
900034d6:	2058      	movs	r0, #88	; 0x58
900034d8:	f004 fbe8 	bl	90007cac <HAL_NVIC_EnableIRQ>
}
900034dc:	b03a      	add	sp, #232	; 0xe8
900034de:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
900034e0:	f7ff fe7c 	bl	900031dc <Error_Handler>
900034e4:	e787      	b.n	900033f6 <HAL_LTDC_MspInit+0x52>
900034e6:	bf00      	nop
900034e8:	50001000 	.word	0x50001000
900034ec:	58024400 	.word	0x58024400
900034f0:	58022800 	.word	0x58022800
900034f4:	58022000 	.word	0x58022000
900034f8:	58022400 	.word	0x58022400
900034fc:	58021c00 	.word	0x58021c00

90003500 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
90003500:	4836      	ldr	r0, [pc, #216]	; (900035dc <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
90003502:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003504:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
90003506:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
90003508:	b0b8      	sub	sp, #224	; 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
9000350a:	e9cd 3302 	strd	r3, r3, [sp, #8]
9000350e:	e9cd 3304 	strd	r3, r3, [sp, #16]
90003512:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
90003514:	b109      	cbz	r1, 9000351a <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
90003516:	b038      	add	sp, #224	; 0xe0
90003518:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
9000351a:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000351c:	22b8      	movs	r2, #184	; 0xb8
  FMC_Initialized = 1;
9000351e:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003520:	a80a      	add	r0, sp, #40	; 0x28
90003522:	f023 f94d 	bl	900267c0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90003526:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
9000352a:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
9000352c:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
9000352e:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90003532:	f008 fb07 	bl	9000bb44 <HAL_RCCEx_PeriphCLKConfig>
90003536:	2800      	cmp	r0, #0
90003538:	d14c      	bne.n	900035d4 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000353a:	4b29      	ldr	r3, [pc, #164]	; (900035e0 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000353c:	f64f 7083 	movw	r0, #65411	; 0xff83
90003540:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003542:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90003544:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003548:	2600      	movs	r6, #0
9000354a:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
9000354c:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
90003550:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90003554:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003558:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000355a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000355e:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90003562:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90003564:	a902      	add	r1, sp, #8
90003566:	481f      	ldr	r0, [pc, #124]	; (900035e4 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
90003568:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000356a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
9000356e:	f004 fdcb 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90003572:	f248 1233 	movw	r2, #33075	; 0x8133
90003576:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003578:	a902      	add	r1, sp, #8
9000357a:	481b      	ldr	r0, [pc, #108]	; (900035e8 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000357c:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000357e:	e9cd 2302 	strd	r2, r3, [sp, #8]
90003582:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
90003586:	f004 fdbf 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000358a:	f24c 7203 	movw	r2, #50947	; 0xc703
9000358e:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90003590:	a902      	add	r1, sp, #8
90003592:	4816      	ldr	r0, [pc, #88]	; (900035ec <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90003594:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003596:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000359a:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
9000359e:	f004 fdb3 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900035a2:	f64f 023f 	movw	r2, #63551	; 0xf83f
900035a6:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900035a8:	a902      	add	r1, sp, #8
900035aa:	4811      	ldr	r0, [pc, #68]	; (900035f0 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900035ac:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
900035ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
900035b2:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
900035b6:	f004 fda7 	bl	90008108 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035ba:	22e0      	movs	r2, #224	; 0xe0
900035bc:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035be:	a902      	add	r1, sp, #8
900035c0:	480c      	ldr	r0, [pc, #48]	; (900035f4 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
900035c2:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
900035c4:	e9cd 6704 	strd	r6, r7, [sp, #16]
900035c8:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900035cc:	f004 fd9c 	bl	90008108 <HAL_GPIO_Init>
}
900035d0:	b038      	add	sp, #224	; 0xe0
900035d2:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900035d4:	f7ff fe02 	bl	900031dc <Error_Handler>
900035d8:	e7af      	b.n	9000353a <HAL_SDRAM_MspInit+0x3a>
900035da:	bf00      	nop
900035dc:	24009470 	.word	0x24009470
900035e0:	58024400 	.word	0x58024400
900035e4:	58021000 	.word	0x58021000
900035e8:	58021800 	.word	0x58021800
900035ec:	58020c00 	.word	0x58020c00
900035f0:	58021400 	.word	0x58021400
900035f4:	58021c00 	.word	0x58021c00

900035f8 <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900035f8:	4b13      	ldr	r3, [pc, #76]	; (90003648 <HAL_SDRAM_MspDeInit+0x50>)
900035fa:	681a      	ldr	r2, [r3, #0]
900035fc:	b102      	cbz	r2, 90003600 <HAL_SDRAM_MspDeInit+0x8>
900035fe:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
90003600:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
90003602:	4a12      	ldr	r2, [pc, #72]	; (9000364c <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
90003604:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90003606:	f64f 7183 	movw	r1, #65411	; 0xff83
9000360a:	4811      	ldr	r0, [pc, #68]	; (90003650 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
9000360c:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
9000360e:	f8d2 30d4 	ldr.w	r3, [r2, #212]	; 0xd4
90003612:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90003616:	f8c2 30d4 	str.w	r3, [r2, #212]	; 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000361a:	f004 fea7 	bl	9000836c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
9000361e:	f248 1133 	movw	r1, #33075	; 0x8133
90003622:	480c      	ldr	r0, [pc, #48]	; (90003654 <HAL_SDRAM_MspDeInit+0x5c>)
90003624:	f004 fea2 	bl	9000836c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
90003628:	f24c 7103 	movw	r1, #50947	; 0xc703
9000362c:	480a      	ldr	r0, [pc, #40]	; (90003658 <HAL_SDRAM_MspDeInit+0x60>)
9000362e:	f004 fe9d 	bl	9000836c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90003632:	f64f 013f 	movw	r1, #63551	; 0xf83f
90003636:	4809      	ldr	r0, [pc, #36]	; (9000365c <HAL_SDRAM_MspDeInit+0x64>)
90003638:	f004 fe98 	bl	9000836c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
9000363c:	21e0      	movs	r1, #224	; 0xe0
9000363e:	4808      	ldr	r0, [pc, #32]	; (90003660 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90003640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90003644:	f004 be92 	b.w	9000836c <HAL_GPIO_DeInit>
90003648:	2400946c 	.word	0x2400946c
9000364c:	58024400 	.word	0x58024400
90003650:	58021000 	.word	0x58021000
90003654:	58021800 	.word	0x58021800
90003658:	58020c00 	.word	0x58020c00
9000365c:	58021400 	.word	0x58021400
90003660:	58021c00 	.word	0x58021c00

90003664 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90003664:	280f      	cmp	r0, #15
90003666:	d901      	bls.n	9000366c <HAL_InitTick+0x8>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
90003668:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000366a:	4770      	bx	lr
{
9000366c:	b530      	push	{r4, r5, lr}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
9000366e:	4601      	mov	r1, r0
{
90003670:	b08b      	sub	sp, #44	; 0x2c
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
90003672:	2200      	movs	r2, #0
90003674:	4604      	mov	r4, r0
90003676:	2036      	movs	r0, #54	; 0x36
90003678:	f004 fada 	bl	90007c30 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
9000367c:	2036      	movs	r0, #54	; 0x36
9000367e:	f004 fb15 	bl	90007cac <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90003682:	4b1a      	ldr	r3, [pc, #104]	; (900036ec <HAL_InitTick+0x88>)
    uwTickPrio = TickPriority;
90003684:	4a1a      	ldr	r2, [pc, #104]	; (900036f0 <HAL_InitTick+0x8c>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90003686:	4669      	mov	r1, sp
90003688:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
9000368a:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
9000368c:	f8d3 20e8 	ldr.w	r2, [r3, #232]	; 0xe8
90003690:	f042 0210 	orr.w	r2, r2, #16
90003694:	f8c3 20e8 	str.w	r2, [r3, #232]	; 0xe8
90003698:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
9000369c:	f003 0310 	and.w	r3, r3, #16
900036a0:	9301      	str	r3, [sp, #4]
900036a2:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
900036a4:	f008 f92e 	bl	9000b904 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
900036a8:	9b07      	ldr	r3, [sp, #28]
900036aa:	b9bb      	cbnz	r3, 900036dc <HAL_InitTick+0x78>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
900036ac:	f008 f89a 	bl	9000b7e4 <HAL_RCC_GetPCLK1Freq>
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036b0:	4b10      	ldr	r3, [pc, #64]	; (900036f4 <HAL_InitTick+0x90>)
  htim6.Init.ClockDivision = 0;
900036b2:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
900036b4:	4c10      	ldr	r4, [pc, #64]	; (900036f8 <HAL_InitTick+0x94>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036b6:	fba3 1300 	umull	r1, r3, r3, r0
  htim6.Instance = TIM6;
900036ba:	4d10      	ldr	r5, [pc, #64]	; (900036fc <HAL_InitTick+0x98>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036bc:	f240 31e7 	movw	r1, #999	; 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036c0:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036c2:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
900036c4:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
900036c6:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
900036c8:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900036ca:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900036ce:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900036d0:	f009 f8aa 	bl	9000c828 <HAL_TIM_Base_Init>
900036d4:	b130      	cbz	r0, 900036e4 <HAL_InitTick+0x80>
    return HAL_ERROR;
900036d6:	2001      	movs	r0, #1
}
900036d8:	b00b      	add	sp, #44	; 0x2c
900036da:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900036dc:	f008 f882 	bl	9000b7e4 <HAL_RCC_GetPCLK1Freq>
900036e0:	0040      	lsls	r0, r0, #1
900036e2:	e7e5      	b.n	900036b0 <HAL_InitTick+0x4c>
    return HAL_TIM_Base_Start_IT(&htim6);
900036e4:	4620      	mov	r0, r4
900036e6:	f009 f955 	bl	9000c994 <HAL_TIM_Base_Start_IT>
900036ea:	e7f5      	b.n	900036d8 <HAL_InitTick+0x74>
900036ec:	58024400 	.word	0x58024400
900036f0:	2400006c 	.word	0x2400006c
900036f4:	431bde83 	.word	0x431bde83
900036f8:	24009474 	.word	0x24009474
900036fc:	40001000 	.word	0x40001000

90003700 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
90003700:	4770      	bx	lr
90003702:	bf00      	nop

90003704 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
90003704:	e7fe      	b.n	90003704 <HardFault_Handler>
90003706:	bf00      	nop

90003708 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
90003708:	e7fe      	b.n	90003708 <MemManage_Handler>
9000370a:	bf00      	nop

9000370c <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
9000370c:	e7fe      	b.n	9000370c <BusFault_Handler>
9000370e:	bf00      	nop

90003710 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
90003710:	e7fe      	b.n	90003710 <UsageFault_Handler>
90003712:	bf00      	nop

90003714 <DebugMon_Handler>:
90003714:	4770      	bx	lr
90003716:	bf00      	nop

90003718 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
90003718:	4801      	ldr	r0, [pc, #4]	; (90003720 <TIM6_DAC_IRQHandler+0x8>)
9000371a:	f009 b99f 	b.w	9000ca5c <HAL_TIM_IRQHandler>
9000371e:	bf00      	nop
90003720:	24009474 	.word	0x24009474

90003724 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
90003724:	4801      	ldr	r0, [pc, #4]	; (9000372c <LTDC_IRQHandler+0x8>)
90003726:	f006 bf87 	b.w	9000a638 <HAL_LTDC_IRQHandler>
9000372a:	bf00      	nop
9000372c:	240092a8 	.word	0x240092a8

90003730 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90003730:	4801      	ldr	r0, [pc, #4]	; (90003738 <DMA2D_IRQHandler+0x8>)
90003732:	f004 bbe5 	b.w	90007f00 <HAL_DMA2D_IRQHandler>
90003736:	bf00      	nop
90003738:	240091e8 	.word	0x240091e8

9000373c <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
9000373c:	4801      	ldr	r0, [pc, #4]	; (90003744 <JPEG_IRQHandler+0x8>)
9000373e:	f006 be67 	b.w	9000a410 <HAL_JPEG_IRQHandler>
90003742:	bf00      	nop
90003744:	24009250 	.word	0x24009250

90003748 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90003748:	4804      	ldr	r0, [pc, #16]	; (9000375c <MDMA_IRQHandler+0x14>)
{
9000374a:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
9000374c:	f007 fa28 	bl	9000aba0 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90003750:	4803      	ldr	r0, [pc, #12]	; (90003760 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
90003752:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90003756:	f007 ba23 	b.w	9000aba0 <HAL_MDMA_IRQHandler>
9000375a:	bf00      	nop
9000375c:	240093bc 	.word	0x240093bc
90003760:	24009350 	.word	0x24009350

90003764 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
90003764:	2001      	movs	r0, #1
90003766:	4770      	bx	lr

90003768 <_kill>:

int _kill(int pid, int sig)
{
90003768:	b508      	push	{r3, lr}
	errno = EINVAL;
9000376a:	f023 f8dd 	bl	90026928 <__errno>
9000376e:	2216      	movs	r2, #22
90003770:	4603      	mov	r3, r0
	return -1;
}
90003772:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
90003776:	601a      	str	r2, [r3, #0]
}
90003778:	bd08      	pop	{r3, pc}
9000377a:	bf00      	nop

9000377c <_exit>:

void _exit (int status)
{
9000377c:	b508      	push	{r3, lr}
	errno = EINVAL;
9000377e:	f023 f8d3 	bl	90026928 <__errno>
90003782:	2316      	movs	r3, #22
90003784:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
90003786:	e7fe      	b.n	90003786 <_exit+0xa>

90003788 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90003788:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000378a:	1e16      	subs	r6, r2, #0
9000378c:	dd07      	ble.n	9000379e <_read+0x16>
9000378e:	460c      	mov	r4, r1
90003790:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
90003792:	f3af 8000 	nop.w
90003796:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000379a:	42a5      	cmp	r5, r4
9000379c:	d1f9      	bne.n	90003792 <_read+0xa>
	}

return len;
}
9000379e:	4630      	mov	r0, r6
900037a0:	bd70      	pop	{r4, r5, r6, pc}
900037a2:	bf00      	nop

900037a4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
900037a4:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
900037a6:	1e16      	subs	r6, r2, #0
900037a8:	dd07      	ble.n	900037ba <_write+0x16>
900037aa:	460c      	mov	r4, r1
900037ac:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
900037ae:	f814 0b01 	ldrb.w	r0, [r4], #1
900037b2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
900037b6:	42ac      	cmp	r4, r5
900037b8:	d1f9      	bne.n	900037ae <_write+0xa>
	}
	return len;
}
900037ba:	4630      	mov	r0, r6
900037bc:	bd70      	pop	{r4, r5, r6, pc}
900037be:	bf00      	nop

900037c0 <_close>:

int _close(int file)
{
	return -1;
}
900037c0:	f04f 30ff 	mov.w	r0, #4294967295
900037c4:	4770      	bx	lr
900037c6:	bf00      	nop

900037c8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900037c8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
900037cc:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900037ce:	604b      	str	r3, [r1, #4]
}
900037d0:	4770      	bx	lr
900037d2:	bf00      	nop

900037d4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
900037d4:	2001      	movs	r0, #1
900037d6:	4770      	bx	lr

900037d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900037d8:	2000      	movs	r0, #0
900037da:	4770      	bx	lr

900037dc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900037dc:	4770      	bx	lr
900037de:	bf00      	nop

900037e0 <_ZN23ApplicationFontProviderD0Ev>:
900037e0:	b510      	push	{r4, lr}
900037e2:	4604      	mov	r4, r0
900037e4:	2104      	movs	r1, #4
900037e6:	f022 fce4 	bl	900261b2 <_ZdlPvj>
900037ea:	4620      	mov	r0, r4
900037ec:	bd10      	pop	{r4, pc}
900037ee:	bf00      	nop

900037f0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
900037f0:	2901      	cmp	r1, #1
{
900037f2:	b508      	push	{r3, lr}
    switch (typography)
900037f4:	d004      	beq.n	90003800 <_ZN23ApplicationFontProvider7getFontEt+0x10>
900037f6:	2902      	cmp	r1, #2
900037f8:	d00a      	beq.n	90003810 <_ZN23ApplicationFontProvider7getFontEt+0x20>
900037fa:	b129      	cbz	r1, 90003808 <_ZN23ApplicationFontProvider7getFontEt+0x18>
900037fc:	2000      	movs	r0, #0
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
900037fe:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90003800:	f000 ff98 	bl	90004734 <_ZN17TypedTextDatabase8getFontsEv>
90003804:	6840      	ldr	r0, [r0, #4]
}
90003806:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
90003808:	f000 ff94 	bl	90004734 <_ZN17TypedTextDatabase8getFontsEv>
9000380c:	6800      	ldr	r0, [r0, #0]
}
9000380e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90003810:	f000 ff90 	bl	90004734 <_ZN17TypedTextDatabase8getFontsEv>
90003814:	6880      	ldr	r0, [r0, #8]
}
90003816:	bd08      	pop	{r3, pc}

90003818 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90003818:	4800      	ldr	r0, [pc, #0]	; (9000381c <_ZN14BitmapDatabase11getInstanceEv+0x4>)
9000381a:	4770      	bx	lr
9000381c:	90028e6c 	.word	0x90028e6c

90003820 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90003820:	200c      	movs	r0, #12
90003822:	4770      	bx	lr

90003824 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
90003824:	b169      	cbz	r1, 90003842 <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90003826:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90003828:	b530      	push	{r4, r5, lr}
9000382a:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
9000382c:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000382e:	6895      	ldr	r5, [r2, #8]
90003830:	f10d 0303 	add.w	r3, sp, #3
90003834:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
90003836:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90003838:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000383c:	47a8      	blx	r5
        return glyph;
    }
9000383e:	b003      	add	sp, #12
90003840:	bd30      	pop	{r4, r5, pc}
            return 0;
90003842:	4608      	mov	r0, r1
    }
90003844:	4770      	bx	lr
90003846:	bf00      	nop

90003848 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90003848:	89c0      	ldrh	r0, [r0, #14]
9000384a:	4770      	bx	lr

9000384c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
9000384c:	8a00      	ldrh	r0, [r0, #16]
9000384e:	4770      	bx	lr

90003850 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90003850:	88c0      	ldrh	r0, [r0, #6]
90003852:	4770      	bx	lr

90003854 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
90003854:	8880      	ldrh	r0, [r0, #4]
90003856:	4770      	bx	lr

90003858 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90003858:	7a80      	ldrb	r0, [r0, #10]
    }
9000385a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
9000385e:	4770      	bx	lr

90003860 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90003860:	7a80      	ldrb	r0, [r0, #10]
    }
90003862:	09c0      	lsrs	r0, r0, #7
90003864:	4770      	bx	lr
90003866:	bf00      	nop

90003868 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90003868:	2000      	movs	r0, #0
9000386a:	4770      	bx	lr

9000386c <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
9000386c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 90003874 <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90003870:	4770      	bx	lr
90003872:	bf00      	nop
90003874:	00000000 	.word	0x00000000

90003878 <_ZN8touchgfx9TypedTextD1Ev>:
    }
90003878:	4770      	bx	lr
9000387a:	bf00      	nop

9000387c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
9000387c:	b510      	push	{r4, lr}
9000387e:	4604      	mov	r4, r0
    }
90003880:	2108      	movs	r1, #8
90003882:	f022 fc96 	bl	900261b2 <_ZdlPvj>
90003886:	4620      	mov	r0, r4
90003888:	bd10      	pop	{r4, pc}
9000388a:	bf00      	nop

9000388c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
9000388c:	4770      	bx	lr
9000388e:	bf00      	nop

90003890 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90003890:	f500 7398 	add.w	r3, r0, #304	; 0x130
90003894:	6808      	ldr	r0, [r1, #0]
90003896:	6849      	ldr	r1, [r1, #4]
90003898:	c303      	stmia	r3!, {r0, r1}
    }
9000389a:	4770      	bx	lr

9000389c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
9000389c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9000389e:	4770      	bx	lr

900038a0 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
900038a0:	4770      	bx	lr
900038a2:	bf00      	nop

900038a4 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
900038a4:	4770      	bx	lr
900038a6:	bf00      	nop

900038a8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
900038a8:	6041      	str	r1, [r0, #4]
    }
900038aa:	4770      	bx	lr

900038ac <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
900038ac:	4770      	bx	lr
900038ae:	bf00      	nop

900038b0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900038b0:	4905      	ldr	r1, [pc, #20]	; (900038c8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
900038b2:	2200      	movs	r2, #0
// screen_game_select

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
900038b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900038b8:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900038bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900038c0:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148

    virtual void changeToStartScreen()
    {
        gotoscreen_game_selectScreenNoTransition();
    }
900038c4:	4770      	bx	lr
900038c6:	bf00      	nop
900038c8:	90003c25 	.word	0x90003c25

900038cc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
900038cc:	2301      	movs	r3, #1
900038ce:	7203      	strb	r3, [r0, #8]
    }
900038d0:	4770      	bx	lr
900038d2:	bf00      	nop

900038d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
900038d4:	4770      	bx	lr
900038d6:	bf00      	nop

900038d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
900038d8:	4770      	bx	lr
900038da:	bf00      	nop

900038dc <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
900038dc:	4770      	bx	lr
900038de:	bf00      	nop

900038e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
900038e0:	4770      	bx	lr
900038e2:	bf00      	nop

900038e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
900038e4:	68c2      	ldr	r2, [r0, #12]
    virtual void execute()
900038e6:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
900038e8:	6841      	ldr	r1, [r0, #4]
900038ea:	ea4f 0c62 	mov.w	ip, r2, asr #1
900038ee:	eb01 0062 	add.w	r0, r1, r2, asr #1
900038f2:	07d2      	lsls	r2, r2, #31
900038f4:	d401      	bmi.n	900038fa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
900038f6:	689b      	ldr	r3, [r3, #8]
900038f8:	4718      	bx	r3
900038fa:	f851 200c 	ldr.w	r2, [r1, ip]
900038fe:	689b      	ldr	r3, [r3, #8]
90003900:	58d3      	ldr	r3, [r2, r3]
90003902:	4718      	bx	r3

90003904 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90003904:	6843      	ldr	r3, [r0, #4]
90003906:	b13b      	cbz	r3, 90003918 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90003908:	6883      	ldr	r3, [r0, #8]
9000390a:	b10b      	cbz	r3, 90003910 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
9000390c:	2001      	movs	r0, #1
    }
9000390e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90003910:	68c0      	ldr	r0, [r0, #12]
90003912:	f000 0001 	and.w	r0, r0, #1
90003916:	4770      	bx	lr
90003918:	4618      	mov	r0, r3
9000391a:	4770      	bx	lr

9000391c <_ZN8touchgfx12NoTransitionD0Ev>:
9000391c:	b510      	push	{r4, lr}
9000391e:	4604      	mov	r4, r0
90003920:	210c      	movs	r1, #12
90003922:	f022 fc46 	bl	900261b2 <_ZdlPvj>
90003926:	4620      	mov	r0, r4
90003928:	bd10      	pop	{r4, pc}
9000392a:	bf00      	nop

9000392c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
9000392c:	b510      	push	{r4, lr}
9000392e:	4604      	mov	r4, r0
90003930:	2110      	movs	r1, #16
90003932:	f022 fc3e 	bl	900261b2 <_ZdlPvj>
90003936:	4620      	mov	r0, r4
90003938:	bd10      	pop	{r4, pc}
9000393a:	bf00      	nop

9000393c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
9000393c:	b510      	push	{r4, lr}
9000393e:	4604      	mov	r4, r0
90003940:	f44f 71ae 	mov.w	r1, #348	; 0x15c
90003944:	f022 fc35 	bl	900261b2 <_ZdlPvj>
90003948:	4620      	mov	r0, r4
9000394a:	bd10      	pop	{r4, pc}

9000394c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
9000394c:	b510      	push	{r4, lr}
9000394e:	4604      	mov	r4, r0
90003950:	2140      	movs	r1, #64	; 0x40
90003952:	f022 fc2e 	bl	900261b2 <_ZdlPvj>
90003956:	4620      	mov	r0, r4
90003958:	bd10      	pop	{r4, pc}
9000395a:	bf00      	nop

9000395c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
9000395c:	b510      	push	{r4, lr}
9000395e:	4604      	mov	r4, r0
90003960:	2140      	movs	r1, #64	; 0x40
90003962:	f022 fc26 	bl	900261b2 <_ZdlPvj>
90003966:	4620      	mov	r0, r4
90003968:	bd10      	pop	{r4, pc}
9000396a:	bf00      	nop

9000396c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
9000396c:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
9000396e:	f011 fad3 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90003972:	6803      	ldr	r3, [r0, #0]
    }
90003974:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90003978:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000397a:	4718      	bx	r3

9000397c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
9000397c:	4b05      	ldr	r3, [pc, #20]	; (90003994 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
9000397e:	781b      	ldrb	r3, [r3, #0]
90003980:	b13b      	cbz	r3, 90003992 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
90003982:	6843      	ldr	r3, [r0, #4]
90003984:	b12b      	cbz	r3, 90003992 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x16>
        {
            screenContainer->remove(snapshot);
90003986:	681a      	ldr	r2, [r3, #0]
90003988:	f100 010c 	add.w	r1, r0, #12
9000398c:	4618      	mov	r0, r3
9000398e:	6e53      	ldr	r3, [r2, #100]	; 0x64
90003990:	4718      	bx	r3
        }
    }
90003992:	4770      	bx	lr
90003994:	2402357b 	.word	0x2402357b

90003998 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
90003998:	4b05      	ldr	r3, [pc, #20]	; (900039b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
9000399a:	781b      	ldrb	r3, [r3, #0]
9000399c:	b13b      	cbz	r3, 900039ae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
9000399e:	6843      	ldr	r3, [r0, #4]
900039a0:	b12b      	cbz	r3, 900039ae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x16>
            screenContainer->remove(snapshot);
900039a2:	681a      	ldr	r2, [r3, #0]
900039a4:	f100 010c 	add.w	r1, r0, #12
900039a8:	4618      	mov	r0, r3
900039aa:	6e53      	ldr	r3, [r2, #100]	; 0x64
900039ac:	4718      	bx	r3
    }
900039ae:	4770      	bx	lr
900039b0:	2402357b 	.word	0x2402357b

900039b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
900039b4:	b570      	push	{r4, r5, r6, lr}
900039b6:	4605      	mov	r5, r0
        animationCounter++;
900039b8:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
900039bc:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
900039be:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
900039c2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
900039c4:	4298      	cmp	r0, r3
        animationCounter++;
900039c6:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
900039ca:	d905      	bls.n	900039d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
900039cc:	2201      	movs	r2, #1
            animationCounter = 0;
900039ce:	2300      	movs	r3, #0
            done = true;
900039d0:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
900039d2:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
900039d6:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
900039d8:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
900039dc:	2100      	movs	r1, #0
900039de:	f013 f81b 	bl	90016a18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
900039e2:	f010 0201 	ands.w	r2, r0, #1
900039e6:	b283      	uxth	r3, r0
900039e8:	d006      	beq.n	900039f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
900039ea:	f64f 71ff 	movw	r1, #65535	; 0xffff
900039ee:	2800      	cmp	r0, #0
900039f0:	bfd8      	it	le
900039f2:	460a      	movle	r2, r1
900039f4:	4413      	add	r3, r2
900039f6:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
900039f8:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
900039fa:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
900039fc:	6802      	ldr	r2, [r0, #0]
900039fe:	4912      	ldr	r1, [pc, #72]	; (90003a48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003a00:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90003a02:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003a04:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003a06:	428a      	cmp	r2, r1
90003a08:	d11b      	bne.n	90003a42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x8e>
        return firstChild;
90003a0a:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003a0c:	b164      	cbz	r4, 90003a28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003a0e:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a10:	4e0e      	ldr	r6, [pc, #56]	; (90003a4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003a12:	6823      	ldr	r3, [r4, #0]
90003a14:	88a1      	ldrh	r1, [r4, #4]
90003a16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003a18:	4411      	add	r1, r2
90003a1a:	42b3      	cmp	r3, r6
90003a1c:	b209      	sxth	r1, r1
        rect.x = x;
90003a1e:	d109      	bne.n	90003a34 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x80>
90003a20:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003a22:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a24:	2c00      	cmp	r4, #0
90003a26:	d1f4      	bne.n	90003a12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003a28:	6868      	ldr	r0, [r5, #4]
90003a2a:	6803      	ldr	r3, [r0, #0]
    }
90003a2c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003a30:	695b      	ldr	r3, [r3, #20]
90003a32:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003a34:	4620      	mov	r0, r4
90003a36:	4798      	blx	r3
90003a38:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003a3a:	2c00      	cmp	r4, #0
90003a3c:	d0f4      	beq.n	90003a28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x74>
90003a3e:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003a40:	e7e7      	b.n	90003a12 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003a42:	4790      	blx	r2
90003a44:	4604      	mov	r4, r0
90003a46:	e7e1      	b.n	90003a0c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x58>
90003a48:	9000389d 	.word	0x9000389d
90003a4c:	900023fd 	.word	0x900023fd

90003a50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
90003a50:	b570      	push	{r4, r5, r6, lr}
90003a52:	4605      	mov	r5, r0
        animationCounter++;
90003a54:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
90003a58:	3001      	adds	r0, #1
        if (animationCounter > animationSteps)
90003a5a:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
        animationCounter++;
90003a5e:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
90003a60:	4298      	cmp	r0, r3
        animationCounter++;
90003a62:	f885 0039 	strb.w	r0, [r5, #57]	; 0x39
        if (animationCounter > animationSteps)
90003a66:	d905      	bls.n	90003a74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
90003a68:	2201      	movs	r2, #1
            animationCounter = 0;
90003a6a:	2300      	movs	r3, #0
            done = true;
90003a6c:	722a      	strb	r2, [r5, #8]
            animationCounter = 0;
90003a6e:	f885 3039 	strb.w	r3, [r5, #57]	; 0x39
    }
90003a72:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
90003a74:	f9b5 203a 	ldrsh.w	r2, [r5, #58]	; 0x3a
90003a78:	2100      	movs	r1, #0
90003a7a:	f012 ffcd 	bl	90016a18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
90003a7e:	f010 0201 	ands.w	r2, r0, #1
90003a82:	b283      	uxth	r3, r0
90003a84:	d006      	beq.n	90003a94 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
90003a86:	f64f 71ff 	movw	r1, #65535	; 0xffff
90003a8a:	2800      	cmp	r0, #0
90003a8c:	bfd8      	it	le
90003a8e:	460a      	movle	r2, r1
90003a90:	4413      	add	r3, r2
90003a92:	b29b      	uxth	r3, r3
        Drawable* d = screenContainer->getFirstChild();
90003a94:	6868      	ldr	r0, [r5, #4]
            relativeValue = calculatedValue - snapshot.getX();
90003a96:	8a2c      	ldrh	r4, [r5, #16]
        Drawable* d = screenContainer->getFirstChild();
90003a98:	6802      	ldr	r2, [r0, #0]
90003a9a:	4912      	ldr	r1, [pc, #72]	; (90003ae4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x94>)
            relativeValue = calculatedValue - snapshot.getX();
90003a9c:	1b1b      	subs	r3, r3, r4
        Drawable* d = screenContainer->getFirstChild();
90003a9e:	69d2      	ldr	r2, [r2, #28]
            relativeValue = calculatedValue - snapshot.getX();
90003aa0:	87ab      	strh	r3, [r5, #60]	; 0x3c
90003aa2:	428a      	cmp	r2, r1
90003aa4:	d11b      	bne.n	90003ade <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x8e>
90003aa6:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003aa8:	b164      	cbz	r4, 90003ac4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003aaa:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003aac:	4e0e      	ldr	r6, [pc, #56]	; (90003ae8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
                d->setX(d->getX() + relativeValue);
90003aae:	6823      	ldr	r3, [r4, #0]
90003ab0:	88a1      	ldrh	r1, [r4, #4]
90003ab2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003ab4:	4411      	add	r1, r2
90003ab6:	42b3      	cmp	r3, r6
90003ab8:	b209      	sxth	r1, r1
        rect.x = x;
90003aba:	d109      	bne.n	90003ad0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x80>
90003abc:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003abe:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ac0:	2c00      	cmp	r4, #0
90003ac2:	d1f4      	bne.n	90003aae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        screenContainer->invalidate();
90003ac4:	6868      	ldr	r0, [r5, #4]
90003ac6:	6803      	ldr	r3, [r0, #0]
    }
90003ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
90003acc:	695b      	ldr	r3, [r3, #20]
90003ace:	4718      	bx	r3
                d->setX(d->getX() + relativeValue);
90003ad0:	4620      	mov	r0, r4
90003ad2:	4798      	blx	r3
90003ad4:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003ad6:	2c00      	cmp	r4, #0
90003ad8:	d0f4      	beq.n	90003ac4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x74>
90003ada:	8faa      	ldrh	r2, [r5, #60]	; 0x3c
90003adc:	e7e7      	b.n	90003aae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x5e>
        Drawable* d = screenContainer->getFirstChild();
90003ade:	4790      	blx	r2
90003ae0:	4604      	mov	r4, r0
90003ae2:	e7e1      	b.n	90003aa8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x58>
90003ae4:	9000389d 	.word	0x9000389d
90003ae8:	900023fd 	.word	0x900023fd

90003aec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
90003aec:	7a03      	ldrb	r3, [r0, #8]
90003aee:	bb2b      	cbnz	r3, 90003b3c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x50>
90003af0:	4a14      	ldr	r2, [pc, #80]	; (90003b44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x58>)
    virtual void init()
90003af2:	b570      	push	{r4, r5, r6, lr}
90003af4:	4605      	mov	r5, r0
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
90003af6:	6840      	ldr	r0, [r0, #4]
90003af8:	6803      	ldr	r3, [r0, #0]
90003afa:	69db      	ldr	r3, [r3, #28]
90003afc:	4293      	cmp	r3, r2
90003afe:	d11e      	bne.n	90003b3e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x52>
90003b00:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003b02:	b164      	cbz	r4, 90003b1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003b04:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b06:	4e10      	ldr	r6, [pc, #64]	; (90003b48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x5c>)
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
90003b08:	6823      	ldr	r3, [r4, #0]
90003b0a:	88a1      	ldrh	r1, [r4, #4]
90003b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003b0e:	1a89      	subs	r1, r1, r2
90003b10:	42b3      	cmp	r3, r6
90003b12:	b209      	sxth	r1, r1
        rect.x = x;
90003b14:	d10b      	bne.n	90003b2e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x42>
90003b16:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b18:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b1a:	2c00      	cmp	r4, #0
90003b1c:	d1f4      	bne.n	90003b08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
90003b1e:	6868      	ldr	r0, [r5, #4]
90003b20:	f105 010c 	add.w	r1, r5, #12
90003b24:	6803      	ldr	r3, [r0, #0]
    }
90003b26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b2a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b2c:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b2e:	4620      	mov	r0, r4
90003b30:	4798      	blx	r3
90003b32:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b34:	2c00      	cmp	r4, #0
90003b36:	d0f2      	beq.n	90003b1e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x32>
90003b38:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b3a:	e7e5      	b.n	90003b08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x1c>
90003b3c:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b3e:	4798      	blx	r3
90003b40:	4604      	mov	r4, r0
90003b42:	e7de      	b.n	90003b02 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x16>
90003b44:	9000389d 	.word	0x9000389d
90003b48:	900023fd 	.word	0x900023fd

90003b4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:
        if (done)
90003b4c:	7a03      	ldrb	r3, [r0, #8]
90003b4e:	bb2b      	cbnz	r3, 90003b9c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x50>
90003b50:	4a14      	ldr	r2, [pc, #80]	; (90003ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x58>)
    virtual void init()
90003b52:	b570      	push	{r4, r5, r6, lr}
90003b54:	4605      	mov	r5, r0
        Drawable* d = screenContainer->getFirstChild();
90003b56:	6840      	ldr	r0, [r0, #4]
90003b58:	6803      	ldr	r3, [r0, #0]
90003b5a:	69db      	ldr	r3, [r3, #28]
90003b5c:	4293      	cmp	r3, r2
90003b5e:	d11e      	bne.n	90003b9e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x52>
90003b60:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003b62:	b164      	cbz	r4, 90003b7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b64:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b66:	4e10      	ldr	r6, [pc, #64]	; (90003ba8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x5c>)
                d->setX(d->getX() - targetValue);
90003b68:	6823      	ldr	r3, [r4, #0]
90003b6a:	88a1      	ldrh	r1, [r4, #4]
90003b6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003b6e:	1a89      	subs	r1, r1, r2
90003b70:	42b3      	cmp	r3, r6
90003b72:	b209      	sxth	r1, r1
        rect.x = x;
90003b74:	d10b      	bne.n	90003b8e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x42>
90003b76:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003b78:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b7a:	2c00      	cmp	r4, #0
90003b7c:	d1f4      	bne.n	90003b68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
        screenContainer->add(snapshot);
90003b7e:	6868      	ldr	r0, [r5, #4]
90003b80:	f105 010c 	add.w	r1, r5, #12
90003b84:	6803      	ldr	r3, [r0, #0]
    }
90003b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
90003b8a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003b8c:	4718      	bx	r3
                d->setX(d->getX() - targetValue);
90003b8e:	4620      	mov	r0, r4
90003b90:	4798      	blx	r3
90003b92:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003b94:	2c00      	cmp	r4, #0
90003b96:	d0f2      	beq.n	90003b7e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x32>
90003b98:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003b9a:	e7e5      	b.n	90003b68 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x1c>
90003b9c:	4770      	bx	lr
        Drawable* d = screenContainer->getFirstChild();
90003b9e:	4798      	blx	r3
90003ba0:	4604      	mov	r4, r0
90003ba2:	e7de      	b.n	90003b62 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x16>
90003ba4:	9000389d 	.word	0x9000389d
90003ba8:	900023fd 	.word	0x900023fd

90003bac <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bac:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
90003bb0:	b1d3      	cbz	r3, 90003be8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
90003bb2:	681a      	ldr	r2, [r3, #0]
    virtual void handlePendingScreenTransition()
90003bb4:	b570      	push	{r4, r5, r6, lr}
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bb6:	68d1      	ldr	r1, [r2, #12]
90003bb8:	4604      	mov	r4, r0
90003bba:	4818      	ldr	r0, [pc, #96]	; (90003c1c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x70>)
90003bbc:	4281      	cmp	r1, r0
90003bbe:	d118      	bne.n	90003bf2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x46>
        return (pobject != 0) && (pmemfun != 0);
90003bc0:	6858      	ldr	r0, [r3, #4]
90003bc2:	b180      	cbz	r0, 90003be6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003bc4:	6899      	ldr	r1, [r3, #8]
90003bc6:	b1e1      	cbz	r1, 90003c02 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
90003bc8:	6892      	ldr	r2, [r2, #8]
90003bca:	4915      	ldr	r1, [pc, #84]	; (90003c20 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003bcc:	428a      	cmp	r2, r1
90003bce:	d122      	bne.n	90003c16 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003bd0:	68da      	ldr	r2, [r3, #12]
90003bd2:	6858      	ldr	r0, [r3, #4]
90003bd4:	eb00 0062 	add.w	r0, r0, r2, asr #1
90003bd8:	07d2      	lsls	r2, r2, #31
90003bda:	d406      	bmi.n	90003bea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3e>
90003bdc:	689b      	ldr	r3, [r3, #8]
90003bde:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
90003be0:	2300      	movs	r3, #0
90003be2:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
90003be6:	bd70      	pop	{r4, r5, r6, pc}
90003be8:	4770      	bx	lr
90003bea:	6899      	ldr	r1, [r3, #8]
90003bec:	6803      	ldr	r3, [r0, #0]
90003bee:	585b      	ldr	r3, [r3, r1]
90003bf0:	e7f5      	b.n	90003bde <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
90003bf2:	4618      	mov	r0, r3
90003bf4:	4788      	blx	r1
90003bf6:	2800      	cmp	r0, #0
90003bf8:	d0f5      	beq.n	90003be6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90003bfa:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
90003bfe:	681a      	ldr	r2, [r3, #0]
90003c00:	e7e2      	b.n	90003bc8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
        return (pobject != 0) && (pmemfun != 0);
90003c02:	68dd      	ldr	r5, [r3, #12]
90003c04:	07ee      	lsls	r6, r5, #31
90003c06:	d5ee      	bpl.n	90003be6 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
90003c08:	6892      	ldr	r2, [r2, #8]
90003c0a:	4e05      	ldr	r6, [pc, #20]	; (90003c20 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x74>)
90003c0c:	42b2      	cmp	r2, r6
90003c0e:	d102      	bne.n	90003c16 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6a>
        (pobject->*pmemfun)();
90003c10:	eb00 0065 	add.w	r0, r0, r5, asr #1
90003c14:	e7ea      	b.n	90003bec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x40>
90003c16:	4618      	mov	r0, r3
90003c18:	4790      	blx	r2
90003c1a:	e7e1      	b.n	90003be0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
90003c1c:	90003905 	.word	0x90003905
90003c20:	900038e5 	.word	0x900038e5

90003c24 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoscreen_game_selectScreenNoTransitionImpl()
{
90003c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003c28:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
90003c2c:	4607      	mov	r7, r0
90003c2e:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003c30:	68a0      	ldr	r0, [r4, #8]
90003c32:	6803      	ldr	r3, [r0, #0]
90003c34:	6a1b      	ldr	r3, [r3, #32]
90003c36:	4798      	blx	r3
90003c38:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003c3c:	f0c0 809e 	bcc.w	90003d7c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x158>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003c40:	6860      	ldr	r0, [r4, #4]
90003c42:	6803      	ldr	r3, [r0, #0]
90003c44:	6a1b      	ldr	r3, [r3, #32]
90003c46:	4798      	blx	r3
90003c48:	280f      	cmp	r0, #15
90003c4a:	f240 80a3 	bls.w	90003d94 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x170>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003c4e:	68e0      	ldr	r0, [r4, #12]
90003c50:	6803      	ldr	r3, [r0, #0]
90003c52:	6a1b      	ldr	r3, [r3, #32]
90003c54:	4798      	blx	r3
90003c56:	280b      	cmp	r0, #11
90003c58:	f240 8096 	bls.w	90003d88 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x164>
    if (*currentTrans)
90003c5c:	f8df 9160 	ldr.w	r9, [pc, #352]	; 90003dc0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
90003c60:	f011 f95a 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90003c64:	3004      	adds	r0, #4
90003c66:	f011 f97c 	bl	90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003c6a:	f8d9 0000 	ldr.w	r0, [r9]
90003c6e:	b140      	cbz	r0, 90003c82 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->tearDown();
90003c70:	6803      	ldr	r3, [r0, #0]
90003c72:	68db      	ldr	r3, [r3, #12]
90003c74:	4798      	blx	r3
    if (*currentTrans)
90003c76:	f8d9 0000 	ldr.w	r0, [r9]
90003c7a:	b110      	cbz	r0, 90003c82 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x5e>
        (*currentTrans)->~Transition();
90003c7c:	6803      	ldr	r3, [r0, #0]
90003c7e:	681b      	ldr	r3, [r3, #0]
90003c80:	4798      	blx	r3
    if (*currentScreen)
90003c82:	f8df 8140 	ldr.w	r8, [pc, #320]	; 90003dc4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x1a0>
90003c86:	f8d8 0000 	ldr.w	r0, [r8]
90003c8a:	2800      	cmp	r0, #0
90003c8c:	d063      	beq.n	90003d56 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x132>
        (*currentScreen)->tearDownScreen();
90003c8e:	6803      	ldr	r3, [r0, #0]
90003c90:	695b      	ldr	r3, [r3, #20]
90003c92:	4798      	blx	r3
    if (*currentPresenter)
90003c94:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003c98:	2800      	cmp	r0, #0
90003c9a:	d057      	beq.n	90003d4c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x128>
        (*currentPresenter)->deactivate();
90003c9c:	6803      	ldr	r3, [r0, #0]
90003c9e:	685b      	ldr	r3, [r3, #4]
90003ca0:	4798      	blx	r3
    if (*currentScreen)
90003ca2:	f8d8 0000 	ldr.w	r0, [r8]
90003ca6:	b110      	cbz	r0, 90003cae <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x8a>
        (*currentScreen)->~Screen();
90003ca8:	6803      	ldr	r3, [r0, #0]
90003caa:	681b      	ldr	r3, [r3, #0]
90003cac:	4798      	blx	r3
    if (*currentPresenter)
90003cae:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003cb2:	b110      	cbz	r0, 90003cba <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
        (*currentPresenter)->~Presenter();
90003cb4:	6803      	ldr	r3, [r0, #0]
90003cb6:	689b      	ldr	r3, [r3, #8]
90003cb8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003cba:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90003cbc:	2100      	movs	r1, #0
90003cbe:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003cc0:	468b      	mov	fp, r1
90003cc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cc4:	4798      	blx	r3
90003cc6:	4b36      	ldr	r3, [pc, #216]	; (90003da0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x17c>)
90003cc8:	4605      	mov	r5, r0
90003cca:	f8c0 b004 	str.w	fp, [r0, #4]
90003cce:	f880 b008 	strb.w	fp, [r0, #8]
90003cd2:	4659      	mov	r1, fp
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003cd4:	68a0      	ldr	r0, [r4, #8]
90003cd6:	602b      	str	r3, [r5, #0]
90003cd8:	6803      	ldr	r3, [r0, #0]
90003cda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cdc:	4798      	blx	r3
90003cde:	4606      	mov	r6, r0
90003ce0:	f002 fe18 	bl	90006914 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ce4:	6860      	ldr	r0, [r4, #4]
90003ce6:	4659      	mov	r1, fp
90003ce8:	6803      	ldr	r3, [r0, #0]
90003cea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003cec:	4798      	blx	r3
90003cee:	4604      	mov	r4, r0
90003cf0:	4631      	mov	r1, r6
90003cf2:	f002 fde3 	bl	900068bc <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003cf6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
90003cfa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
90003cfe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
90003d02:	2c00      	cmp	r4, #0
90003d04:	d02c      	beq.n	90003d60 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x13c>
90003d06:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90003d08:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90003d0c:	4630      	mov	r0, r6
90003d0e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90003d10:	f8c4 a008 	str.w	sl, [r4, #8]
90003d14:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90003d16:	63f4      	str	r4, [r6, #60]	; 0x3c
90003d18:	4798      	blx	r3
    newPresenter->activate();
90003d1a:	6823      	ldr	r3, [r4, #0]
90003d1c:	4620      	mov	r0, r4
90003d1e:	681b      	ldr	r3, [r3, #0]
90003d20:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003d22:	4629      	mov	r1, r5
90003d24:	4630      	mov	r0, r6
90003d26:	f012 fe71 	bl	90016a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003d2a:	682b      	ldr	r3, [r5, #0]
90003d2c:	491d      	ldr	r1, [pc, #116]	; (90003da4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x180>)
90003d2e:	691a      	ldr	r2, [r3, #16]
90003d30:	428a      	cmp	r2, r1
90003d32:	d117      	bne.n	90003d64 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90003d34:	695b      	ldr	r3, [r3, #20]
90003d36:	4a1c      	ldr	r2, [pc, #112]	; (90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d38:	4293      	cmp	r3, r2
90003d3a:	d11a      	bne.n	90003d72 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x14e>
        Application::getInstance()->invalidate();
90003d3c:	f011 f8ec 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90003d40:	6803      	ldr	r3, [r0, #0]
90003d42:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003d44:	b001      	add	sp, #4
90003d46:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d4a:	4718      	bx	r3
    if (*currentScreen)
90003d4c:	f8d8 0000 	ldr.w	r0, [r8]
90003d50:	2800      	cmp	r0, #0
90003d52:	d1a9      	bne.n	90003ca8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x84>
90003d54:	e7b1      	b.n	90003cba <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    if (*currentPresenter)
90003d56:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
90003d5a:	2800      	cmp	r0, #0
90003d5c:	d19e      	bne.n	90003c9c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x78>
90003d5e:	e7ac      	b.n	90003cba <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x96>
    model->bind(newPresenter);
90003d60:	4623      	mov	r3, r4
90003d62:	e7d1      	b.n	90003d08 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0xe4>
    newTransition->init();
90003d64:	4628      	mov	r0, r5
90003d66:	4790      	blx	r2
    newTransition->invalidate();
90003d68:	682b      	ldr	r3, [r5, #0]
90003d6a:	4a0f      	ldr	r2, [pc, #60]	; (90003da8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x184>)
90003d6c:	695b      	ldr	r3, [r3, #20]
90003d6e:	4293      	cmp	r3, r2
90003d70:	d0e4      	beq.n	90003d3c <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x118>
90003d72:	4628      	mov	r0, r5
90003d74:	b001      	add	sp, #4
90003d76:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003d7a:	4718      	bx	r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003d7c:	4b0b      	ldr	r3, [pc, #44]	; (90003dac <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x188>)
90003d7e:	21a3      	movs	r1, #163	; 0xa3
90003d80:	4a0b      	ldr	r2, [pc, #44]	; (90003db0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d82:	480c      	ldr	r0, [pc, #48]	; (90003db4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d84:	f022 fa44 	bl	90026210 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003d88:	4b0b      	ldr	r3, [pc, #44]	; (90003db8 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x194>)
90003d8a:	21a5      	movs	r1, #165	; 0xa5
90003d8c:	4a08      	ldr	r2, [pc, #32]	; (90003db0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d8e:	4809      	ldr	r0, [pc, #36]	; (90003db4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d90:	f022 fa3e 	bl	90026210 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003d94:	4b09      	ldr	r3, [pc, #36]	; (90003dbc <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x198>)
90003d96:	21a4      	movs	r1, #164	; 0xa4
90003d98:	4a05      	ldr	r2, [pc, #20]	; (90003db0 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x18c>)
90003d9a:	4806      	ldr	r0, [pc, #24]	; (90003db4 <_ZN23FrontendApplicationBase44gotoscreen_game_selectScreenNoTransitionImplEv+0x190>)
90003d9c:	f022 fa38 	bl	90026210 <__assert_func>
90003da0:	90029578 	.word	0x90029578
90003da4:	900038a5 	.word	0x900038a5
90003da8:	9000396d 	.word	0x9000396d
90003dac:	90028f6c 	.word	0x90028f6c
90003db0:	90028ffc 	.word	0x90028ffc
90003db4:	90029118 	.word	0x90029118
90003db8:	90029204 	.word	0x90029204
90003dbc:	90029160 	.word	0x90029160
90003dc0:	240235c4 	.word	0x240235c4
90003dc4:	240235c0 	.word	0x240235c0

90003dc8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoscreen_game_selectScreenSlideTransitionWestImpl()
{
90003dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_game_selectView, screen_game_selectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90003dcc:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
90003dd0:	4680      	mov	r8, r0
90003dd2:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003dd4:	68a0      	ldr	r0, [r4, #8]
90003dd6:	6803      	ldr	r3, [r0, #0]
90003dd8:	6a1b      	ldr	r3, [r3, #32]
90003dda:	4798      	blx	r3
90003ddc:	f5b0 7fca 	cmp.w	r0, #404	; 0x194
90003de0:	f0c0 80e0 	bcc.w	90003fa4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1dc>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003de4:	6860      	ldr	r0, [r4, #4]
90003de6:	6803      	ldr	r3, [r0, #0]
90003de8:	6a1b      	ldr	r3, [r3, #32]
90003dea:	4798      	blx	r3
90003dec:	280f      	cmp	r0, #15
90003dee:	f240 80e5 	bls.w	90003fbc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1f4>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003df2:	68e0      	ldr	r0, [r4, #12]
90003df4:	6803      	ldr	r3, [r0, #0]
90003df6:	6a1b      	ldr	r3, [r3, #32]
90003df8:	4798      	blx	r3
90003dfa:	283f      	cmp	r0, #63	; 0x3f
90003dfc:	f240 80d8 	bls.w	90003fb0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1e8>
    if (*currentTrans)
90003e00:	f8df a1f8 	ldr.w	sl, [pc, #504]	; 90003ffc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x234>
    Application::getInstance()->clearAllTimerWidgets();
90003e04:	f011 f888 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90003e08:	3004      	adds	r0, #4
90003e0a:	f011 f8aa 	bl	90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90003e0e:	f8da 0000 	ldr.w	r0, [sl]
90003e12:	b140      	cbz	r0, 90003e26 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->tearDown();
90003e14:	6803      	ldr	r3, [r0, #0]
90003e16:	68db      	ldr	r3, [r3, #12]
90003e18:	4798      	blx	r3
    if (*currentTrans)
90003e1a:	f8da 0000 	ldr.w	r0, [sl]
90003e1e:	b110      	cbz	r0, 90003e26 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x5e>
        (*currentTrans)->~Transition();
90003e20:	6803      	ldr	r3, [r0, #0]
90003e22:	681b      	ldr	r3, [r3, #0]
90003e24:	4798      	blx	r3
    if (*currentScreen)
90003e26:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90004000 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x238>
90003e2a:	f8d9 0000 	ldr.w	r0, [r9]
90003e2e:	2800      	cmp	r0, #0
90003e30:	f000 80a4 	beq.w	90003f7c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1b4>
        (*currentScreen)->tearDownScreen();
90003e34:	6803      	ldr	r3, [r0, #0]
90003e36:	695b      	ldr	r3, [r3, #20]
90003e38:	4798      	blx	r3
    if (*currentPresenter)
90003e3a:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e3e:	2800      	cmp	r0, #0
90003e40:	f000 8081 	beq.w	90003f46 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x17e>
        (*currentPresenter)->deactivate();
90003e44:	6803      	ldr	r3, [r0, #0]
90003e46:	685b      	ldr	r3, [r3, #4]
90003e48:	4798      	blx	r3
    if (*currentScreen)
90003e4a:	f8d9 0000 	ldr.w	r0, [r9]
90003e4e:	b110      	cbz	r0, 90003e56 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x8e>
        (*currentScreen)->~Screen();
90003e50:	6803      	ldr	r3, [r0, #0]
90003e52:	681b      	ldr	r3, [r3, #0]
90003e54:	4798      	blx	r3
    if (*currentPresenter)
90003e56:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003e5a:	b110      	cbz	r0, 90003e62 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
        (*currentPresenter)->~Presenter();
90003e5c:	6803      	ldr	r3, [r0, #0]
90003e5e:	689b      	ldr	r3, [r3, #8]
90003e60:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90003e62:	68e0      	ldr	r0, [r4, #12]
90003e64:	2100      	movs	r1, #0
90003e66:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
90003e68:	460f      	mov	r7, r1
90003e6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e6c:	4798      	blx	r3
          relativeValue(0)
90003e6e:	4b56      	ldr	r3, [pc, #344]	; (90003fc8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x200>)
90003e70:	4606      	mov	r6, r0
90003e72:	4605      	mov	r5, r0
90003e74:	6047      	str	r7, [r0, #4]
90003e76:	7207      	strb	r7, [r0, #8]
90003e78:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
90003e7c:	4630      	mov	r0, r6
90003e7e:	f00d fc43 	bl	90011708 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
90003e82:	4b52      	ldr	r3, [pc, #328]	; (90003fcc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x204>)
          animationSteps(transitionSteps),
90003e84:	2214      	movs	r2, #20
          relativeValue(0)
90003e86:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
90003e88:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
90003e8a:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
90003e8c:	2b00      	cmp	r3, #0
90003e8e:	d166      	bne.n	90003f5e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x196>
            done = true;
90003e90:	2301      	movs	r3, #1
90003e92:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90003e94:	68a0      	ldr	r0, [r4, #8]
90003e96:	2100      	movs	r1, #0
90003e98:	6803      	ldr	r3, [r0, #0]
90003e9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003e9c:	4798      	blx	r3
90003e9e:	4607      	mov	r7, r0
90003ea0:	f002 fd38 	bl	90006914 <_ZN22screen_game_selectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90003ea4:	6860      	ldr	r0, [r4, #4]
90003ea6:	2100      	movs	r1, #0
90003ea8:	6803      	ldr	r3, [r0, #0]
90003eaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90003eac:	4798      	blx	r3
90003eae:	4604      	mov	r4, r0
90003eb0:	4639      	mov	r1, r7
90003eb2:	f002 fd03 	bl	900068bc <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>
    *currentTrans = newTransition;
90003eb6:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
90003eba:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
90003ebe:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90003ec2:	2c00      	cmp	r4, #0
90003ec4:	d060      	beq.n	90003f88 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c0>
90003ec6:	1d23      	adds	r3, r4, #4
90003ec8:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
90003ecc:	4638      	mov	r0, r7
90003ece:	683b      	ldr	r3, [r7, #0]
90003ed0:	f8c4 b008 	str.w	fp, [r4, #8]
90003ed4:	68db      	ldr	r3, [r3, #12]
90003ed6:	63fc      	str	r4, [r7, #60]	; 0x3c
90003ed8:	4798      	blx	r3
    newPresenter->activate();
90003eda:	6823      	ldr	r3, [r4, #0]
90003edc:	4620      	mov	r0, r4
90003ede:	681b      	ldr	r3, [r3, #0]
90003ee0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90003ee2:	4629      	mov	r1, r5
90003ee4:	4638      	mov	r0, r7
90003ee6:	f012 fd91 	bl	90016a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90003eea:	682b      	ldr	r3, [r5, #0]
90003eec:	4938      	ldr	r1, [pc, #224]	; (90003fd0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x208>)
90003eee:	691a      	ldr	r2, [r3, #16]
90003ef0:	428a      	cmp	r2, r1
90003ef2:	d153      	bne.n	90003f9c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1d4>
        if (done)
90003ef4:	7a2a      	ldrb	r2, [r5, #8]
90003ef6:	b9d2      	cbnz	r2, 90003f2e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
        Drawable* d = screenContainer->getFirstChild();
90003ef8:	6868      	ldr	r0, [r5, #4]
90003efa:	4a36      	ldr	r2, [pc, #216]	; (90003fd4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x20c>)
90003efc:	6803      	ldr	r3, [r0, #0]
90003efe:	69db      	ldr	r3, [r3, #28]
90003f00:	4293      	cmp	r3, r2
90003f02:	d143      	bne.n	90003f8c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1c4>
90003f04:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90003f06:	b164      	cbz	r4, 90003f22 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003f08:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003f0a:	4f33      	ldr	r7, [pc, #204]	; (90003fd8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x210>)
                d->setX(d->getX() - targetValue);
90003f0c:	6823      	ldr	r3, [r4, #0]
90003f0e:	88a1      	ldrh	r1, [r4, #4]
90003f10:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90003f12:	1a89      	subs	r1, r1, r2
90003f14:	42bb      	cmp	r3, r7
90003f16:	b209      	sxth	r1, r1
90003f18:	d11a      	bne.n	90003f50 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x188>
        rect.x = x;
90003f1a:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
90003f1c:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f1e:	2c00      	cmp	r4, #0
90003f20:	d1f4      	bne.n	90003f0c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        screenContainer->add(snapshot);
90003f22:	6868      	ldr	r0, [r5, #4]
90003f24:	4631      	mov	r1, r6
90003f26:	6803      	ldr	r3, [r0, #0]
90003f28:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90003f2a:	4798      	blx	r3
    newTransition->invalidate();
90003f2c:	682b      	ldr	r3, [r5, #0]
90003f2e:	695b      	ldr	r3, [r3, #20]
90003f30:	4a2a      	ldr	r2, [pc, #168]	; (90003fdc <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x214>)
90003f32:	4293      	cmp	r3, r2
90003f34:	d12d      	bne.n	90003f92 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x1ca>
        Application::getInstance()->invalidate();
90003f36:	f010 ffef 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90003f3a:	6803      	ldr	r3, [r0, #0]
90003f3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
90003f3e:	b001      	add	sp, #4
90003f40:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f44:	4718      	bx	r3
    if (*currentScreen)
90003f46:	f8d9 0000 	ldr.w	r0, [r9]
90003f4a:	2800      	cmp	r0, #0
90003f4c:	d180      	bne.n	90003e50 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x88>
90003f4e:	e788      	b.n	90003e62 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
                d->setX(d->getX() - targetValue);
90003f50:	4620      	mov	r0, r4
90003f52:	4798      	blx	r3
90003f54:	69a4      	ldr	r4, [r4, #24]
        while (d)
90003f56:	2c00      	cmp	r4, #0
90003f58:	d0e3      	beq.n	90003f22 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x15a>
90003f5a:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90003f5c:	e7d6      	b.n	90003f0c <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x144>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f5e:	4b20      	ldr	r3, [pc, #128]	; (90003fe0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x218>)
        snapshot.makeSnapshot();
90003f60:	4630      	mov	r0, r6
        rect.x = x;
90003f62:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
90003f64:	f9b3 3000 	ldrsh.w	r3, [r3]
90003f68:	4f1e      	ldr	r7, [pc, #120]	; (90003fe4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x21c>)
        rect.height = height;
90003f6a:	82eb      	strh	r3, [r5, #22]
90003f6c:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
90003f70:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
90003f72:	f00d fb44 	bl	900115fe <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
90003f76:	883b      	ldrh	r3, [r7, #0]
90003f78:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
90003f7a:	e78b      	b.n	90003e94 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0xcc>
    if (*currentPresenter)
90003f7c:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90003f80:	2800      	cmp	r0, #0
90003f82:	f47f af5f 	bne.w	90003e44 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x7c>
90003f86:	e76c      	b.n	90003e62 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x9a>
    model->bind(newPresenter);
90003f88:	4623      	mov	r3, r4
90003f8a:	e79d      	b.n	90003ec8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x100>
        Drawable* d = screenContainer->getFirstChild();
90003f8c:	4798      	blx	r3
90003f8e:	4604      	mov	r4, r0
90003f90:	e7b9      	b.n	90003f06 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x13e>
    newTransition->invalidate();
90003f92:	4628      	mov	r0, r5
90003f94:	b001      	add	sp, #4
90003f96:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90003f9a:	4718      	bx	r3
    newTransition->init();
90003f9c:	4628      	mov	r0, r5
90003f9e:	4790      	blx	r2
    newTransition->invalidate();
90003fa0:	682b      	ldr	r3, [r5, #0]
90003fa2:	e7c4      	b.n	90003f2e <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x166>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90003fa4:	4b10      	ldr	r3, [pc, #64]	; (90003fe8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x220>)
90003fa6:	21a3      	movs	r1, #163	; 0xa3
90003fa8:	4a10      	ldr	r2, [pc, #64]	; (90003fec <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003faa:	4811      	ldr	r0, [pc, #68]	; (90003ff0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fac:	f022 f930 	bl	90026210 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90003fb0:	4b10      	ldr	r3, [pc, #64]	; (90003ff4 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x22c>)
90003fb2:	21a5      	movs	r1, #165	; 0xa5
90003fb4:	4a0d      	ldr	r2, [pc, #52]	; (90003fec <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003fb6:	480e      	ldr	r0, [pc, #56]	; (90003ff0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fb8:	f022 f92a 	bl	90026210 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90003fbc:	4b0e      	ldr	r3, [pc, #56]	; (90003ff8 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x230>)
90003fbe:	21a4      	movs	r1, #164	; 0xa4
90003fc0:	4a0a      	ldr	r2, [pc, #40]	; (90003fec <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x224>)
90003fc2:	480b      	ldr	r0, [pc, #44]	; (90003ff0 <_ZN23FrontendApplicationBase51gotoscreen_game_selectScreenSlideTransitionWestImplEv+0x228>)
90003fc4:	f022 f924 	bl	90026210 <__assert_func>
90003fc8:	9002959c 	.word	0x9002959c
90003fcc:	2402357b 	.word	0x2402357b
90003fd0:	90003b4d 	.word	0x90003b4d
90003fd4:	9000389d 	.word	0x9000389d
90003fd8:	900023fd 	.word	0x900023fd
90003fdc:	9000396d 	.word	0x9000396d
90003fe0:	24023572 	.word	0x24023572
90003fe4:	24023570 	.word	0x24023570
90003fe8:	90028f6c 	.word	0x90028f6c
90003fec:	900292a8 	.word	0x900292a8
90003ff0:	90029118 	.word	0x90029118
90003ff4:	90029204 	.word	0x90029204
90003ff8:	90029160 	.word	0x90029160
90003ffc:	240235c4 	.word	0x240235c4
90004000:	240235c0 	.word	0x240235c0

90004004 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv>:
{
90004004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<screen_asteroidsView, screen_asteroidsPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004008:	e9d0 4b55 	ldrd	r4, fp, [r0, #340]	; 0x154
{
9000400c:	4680      	mov	r8, r0
9000400e:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004010:	68a0      	ldr	r0, [r4, #8]
90004012:	6803      	ldr	r3, [r0, #0]
90004014:	6a1b      	ldr	r3, [r3, #32]
90004016:	4798      	blx	r3
90004018:	f242 4397 	movw	r3, #9367	; 0x2497
9000401c:	4298      	cmp	r0, r3
9000401e:	f240 80e1 	bls.w	900041e4 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1e0>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004022:	6860      	ldr	r0, [r4, #4]
90004024:	6803      	ldr	r3, [r0, #0]
90004026:	6a1b      	ldr	r3, [r3, #32]
90004028:	4798      	blx	r3
9000402a:	281b      	cmp	r0, #27
9000402c:	f240 80e6 	bls.w	900041fc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1f8>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004030:	68e0      	ldr	r0, [r4, #12]
90004032:	6803      	ldr	r3, [r0, #0]
90004034:	6a1b      	ldr	r3, [r3, #32]
90004036:	4798      	blx	r3
90004038:	283f      	cmp	r0, #63	; 0x3f
9000403a:	f240 80d9 	bls.w	900041f0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ec>
    if (*currentTrans)
9000403e:	f8df a1fc 	ldr.w	sl, [pc, #508]	; 9000423c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x238>
    Application::getInstance()->clearAllTimerWidgets();
90004042:	f010 ff69 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90004046:	3004      	adds	r0, #4
90004048:	f010 ff8b 	bl	90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
9000404c:	f8da 0000 	ldr.w	r0, [sl]
90004050:	b140      	cbz	r0, 90004064 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->tearDown();
90004052:	6803      	ldr	r3, [r0, #0]
90004054:	68db      	ldr	r3, [r3, #12]
90004056:	4798      	blx	r3
    if (*currentTrans)
90004058:	f8da 0000 	ldr.w	r0, [sl]
9000405c:	b110      	cbz	r0, 90004064 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x60>
        (*currentTrans)->~Transition();
9000405e:	6803      	ldr	r3, [r0, #0]
90004060:	681b      	ldr	r3, [r3, #0]
90004062:	4798      	blx	r3
    if (*currentScreen)
90004064:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 90004240 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x23c>
90004068:	f8d9 0000 	ldr.w	r0, [r9]
9000406c:	2800      	cmp	r0, #0
9000406e:	f000 80a5 	beq.w	900041bc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1b8>
        (*currentScreen)->tearDownScreen();
90004072:	6803      	ldr	r3, [r0, #0]
90004074:	695b      	ldr	r3, [r3, #20]
90004076:	4798      	blx	r3
    if (*currentPresenter)
90004078:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
9000407c:	2800      	cmp	r0, #0
9000407e:	f000 8081 	beq.w	90004184 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x180>
        (*currentPresenter)->deactivate();
90004082:	6803      	ldr	r3, [r0, #0]
90004084:	685b      	ldr	r3, [r3, #4]
90004086:	4798      	blx	r3
    if (*currentScreen)
90004088:	f8d9 0000 	ldr.w	r0, [r9]
9000408c:	b110      	cbz	r0, 90004094 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x90>
        (*currentScreen)->~Screen();
9000408e:	6803      	ldr	r3, [r0, #0]
90004090:	681b      	ldr	r3, [r3, #0]
90004092:	4798      	blx	r3
    if (*currentPresenter)
90004094:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
90004098:	b110      	cbz	r0, 900040a0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
        (*currentPresenter)->~Presenter();
9000409a:	6803      	ldr	r3, [r0, #0]
9000409c:	689b      	ldr	r3, [r3, #8]
9000409e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
900040a0:	68e0      	ldr	r0, [r4, #12]
900040a2:	2100      	movs	r1, #0
900040a4:	6803      	ldr	r3, [r0, #0]
        : screenContainer(0), done(false)
900040a6:	460f      	mov	r7, r1
900040a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040aa:	4798      	blx	r3
          relativeValue(0)
900040ac:	4b56      	ldr	r3, [pc, #344]	; (90004208 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x204>)
900040ae:	4606      	mov	r6, r0
900040b0:	4605      	mov	r5, r0
900040b2:	6047      	str	r7, [r0, #4]
900040b4:	7207      	strb	r7, [r0, #8]
900040b6:	f846 3b0c 	str.w	r3, [r6], #12
          snapshot(),
900040ba:	4630      	mov	r0, r6
900040bc:	f00d fb24 	bl	90011708 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
900040c0:	4b52      	ldr	r3, [pc, #328]	; (9000420c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x208>)
          animationSteps(transitionSteps),
900040c2:	2214      	movs	r2, #20
          relativeValue(0)
900040c4:	87af      	strh	r7, [r5, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
900040c6:	781b      	ldrb	r3, [r3, #0]
          animationSteps(transitionSteps),
900040c8:	872a      	strh	r2, [r5, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
900040ca:	2b00      	cmp	r3, #0
900040cc:	d166      	bne.n	9000419c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x198>
            done = true;
900040ce:	2301      	movs	r3, #1
900040d0:	722b      	strb	r3, [r5, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
900040d2:	68a0      	ldr	r0, [r4, #8]
900040d4:	2100      	movs	r1, #0
900040d6:	6803      	ldr	r3, [r0, #0]
900040d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040da:	4798      	blx	r3
900040dc:	4607      	mov	r7, r0
900040de:	f002 fa59 	bl	90006594 <_ZN20screen_asteroidsViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
900040e2:	6860      	ldr	r0, [r4, #4]
900040e4:	2100      	movs	r1, #0
900040e6:	6803      	ldr	r3, [r0, #0]
900040e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
900040ea:	4798      	blx	r3
900040ec:	4604      	mov	r4, r0
900040ee:	4639      	mov	r1, r7
900040f0:	f002 f802 	bl	900060f8 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>
    *currentTrans = newTransition;
900040f4:	f8ca 5000 	str.w	r5, [sl]
    *currentPresenter = newPresenter;
900040f8:	f8c8 413c 	str.w	r4, [r8, #316]	; 0x13c
    *currentScreen = newScreen;
900040fc:	f8c9 7000 	str.w	r7, [r9]
    model->bind(newPresenter);
90004100:	2c00      	cmp	r4, #0
90004102:	d061      	beq.n	900041c8 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c4>
90004104:	1d23      	adds	r3, r4, #4
90004106:	f8cb 3000 	str.w	r3, [fp]
    newScreen->setupScreen();
9000410a:	4638      	mov	r0, r7
9000410c:	683b      	ldr	r3, [r7, #0]
9000410e:	f8c4 b008 	str.w	fp, [r4, #8]
90004112:	68db      	ldr	r3, [r3, #12]
90004114:	63fc      	str	r4, [r7, #60]	; 0x3c
90004116:	4798      	blx	r3
    newPresenter->activate();
90004118:	6823      	ldr	r3, [r4, #0]
9000411a:	4620      	mov	r0, r4
9000411c:	681b      	ldr	r3, [r3, #0]
9000411e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004120:	4629      	mov	r1, r5
90004122:	4638      	mov	r0, r7
90004124:	f012 fc72 	bl	90016a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004128:	682b      	ldr	r3, [r5, #0]
9000412a:	4939      	ldr	r1, [pc, #228]	; (90004210 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x20c>)
9000412c:	691a      	ldr	r2, [r3, #16]
9000412e:	428a      	cmp	r2, r1
90004130:	d154      	bne.n	900041dc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1d8>
        if (done)
90004132:	7a2a      	ldrb	r2, [r5, #8]
90004134:	b9d2      	cbnz	r2, 9000416c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
        Drawable* d = screenContainer->getFirstChild();
90004136:	6868      	ldr	r0, [r5, #4]
90004138:	4a36      	ldr	r2, [pc, #216]	; (90004214 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x210>)
9000413a:	6803      	ldr	r3, [r0, #0]
9000413c:	69db      	ldr	r3, [r3, #28]
9000413e:	4293      	cmp	r3, r2
90004140:	d144      	bne.n	900041cc <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1c8>
90004142:	6a84      	ldr	r4, [r0, #40]	; 0x28
        while (d)
90004144:	b164      	cbz	r4, 90004160 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
90004146:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
90004148:	4f33      	ldr	r7, [pc, #204]	; (90004218 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x214>)
                d->setX(d->getX() - targetValue);
9000414a:	6823      	ldr	r3, [r4, #0]
9000414c:	88a1      	ldrh	r1, [r4, #4]
9000414e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004150:	1a89      	subs	r1, r1, r2
90004152:	42bb      	cmp	r3, r7
90004154:	b209      	sxth	r1, r1
90004156:	d11a      	bne.n	9000418e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x18a>
        rect.x = x;
90004158:	80a1      	strh	r1, [r4, #4]
        return nextSibling;
9000415a:	69a4      	ldr	r4, [r4, #24]
        while (d)
9000415c:	2c00      	cmp	r4, #0
9000415e:	d1f4      	bne.n	9000414a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        screenContainer->add(snapshot);
90004160:	6868      	ldr	r0, [r5, #4]
90004162:	4631      	mov	r1, r6
90004164:	6803      	ldr	r3, [r0, #0]
90004166:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90004168:	4798      	blx	r3
    newTransition->invalidate();
9000416a:	682b      	ldr	r3, [r5, #0]
9000416c:	695b      	ldr	r3, [r3, #20]
9000416e:	4a2b      	ldr	r2, [pc, #172]	; (9000421c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x218>)
90004170:	4293      	cmp	r3, r2
90004172:	d12e      	bne.n	900041d2 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x1ce>
        Application::getInstance()->invalidate();
90004174:	f010 fed0 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90004178:	6803      	ldr	r3, [r0, #0]
9000417a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
}
9000417c:	b001      	add	sp, #4
9000417e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004182:	4718      	bx	r3
    if (*currentScreen)
90004184:	f8d9 0000 	ldr.w	r0, [r9]
90004188:	2800      	cmp	r0, #0
9000418a:	d180      	bne.n	9000408e <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x8a>
9000418c:	e788      	b.n	900040a0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
                d->setX(d->getX() - targetValue);
9000418e:	4620      	mov	r0, r4
90004190:	4798      	blx	r3
90004192:	69a4      	ldr	r4, [r4, #24]
        while (d)
90004194:	2c00      	cmp	r4, #0
90004196:	d0e3      	beq.n	90004160 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x15c>
90004198:	8f6a      	ldrh	r2, [r5, #58]	; 0x3a
9000419a:	e7d6      	b.n	9000414a <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x146>
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
9000419c:	4b20      	ldr	r3, [pc, #128]	; (90004220 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x21c>)
        snapshot.makeSnapshot();
9000419e:	4630      	mov	r0, r6
        rect.x = x;
900041a0:	612f      	str	r7, [r5, #16]
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
900041a2:	f9b3 3000 	ldrsh.w	r3, [r3]
900041a6:	4f1f      	ldr	r7, [pc, #124]	; (90004224 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x220>)
        rect.height = height;
900041a8:	82eb      	strh	r3, [r5, #22]
900041aa:	f9b7 3000 	ldrsh.w	r3, [r7]
        rect.width = width;
900041ae:	82ab      	strh	r3, [r5, #20]
        snapshot.makeSnapshot();
900041b0:	f00d fa25 	bl	900115fe <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
900041b4:	883b      	ldrh	r3, [r7, #0]
900041b6:	425b      	negs	r3, r3
900041b8:	876b      	strh	r3, [r5, #58]	; 0x3a
            break;
900041ba:	e78a      	b.n	900040d2 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0xce>
    if (*currentPresenter)
900041bc:	f8d8 013c 	ldr.w	r0, [r8, #316]	; 0x13c
900041c0:	2800      	cmp	r0, #0
900041c2:	f47f af5e 	bne.w	90004082 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x7e>
900041c6:	e76b      	b.n	900040a0 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x9c>
    model->bind(newPresenter);
900041c8:	4623      	mov	r3, r4
900041ca:	e79c      	b.n	90004106 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x102>
        Drawable* d = screenContainer->getFirstChild();
900041cc:	4798      	blx	r3
900041ce:	4604      	mov	r4, r0
900041d0:	e7b8      	b.n	90004144 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x140>
    newTransition->invalidate();
900041d2:	4628      	mov	r0, r5
900041d4:	b001      	add	sp, #4
900041d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900041da:	4718      	bx	r3
    newTransition->init();
900041dc:	4628      	mov	r0, r5
900041de:	4790      	blx	r2
    newTransition->invalidate();
900041e0:	682b      	ldr	r3, [r5, #0]
900041e2:	e7c3      	b.n	9000416c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x168>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
900041e4:	4b10      	ldr	r3, [pc, #64]	; (90004228 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x224>)
900041e6:	21a3      	movs	r1, #163	; 0xa3
900041e8:	4a10      	ldr	r2, [pc, #64]	; (9000422c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041ea:	4811      	ldr	r0, [pc, #68]	; (90004230 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041ec:	f022 f810 	bl	90026210 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
900041f0:	4b10      	ldr	r3, [pc, #64]	; (90004234 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x230>)
900041f2:	21a5      	movs	r1, #165	; 0xa5
900041f4:	4a0d      	ldr	r2, [pc, #52]	; (9000422c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
900041f6:	480e      	ldr	r0, [pc, #56]	; (90004230 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
900041f8:	f022 f80a 	bl	90026210 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
900041fc:	4b0e      	ldr	r3, [pc, #56]	; (90004238 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x234>)
900041fe:	21a4      	movs	r1, #164	; 0xa4
90004200:	4a0a      	ldr	r2, [pc, #40]	; (9000422c <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x228>)
90004202:	480b      	ldr	r0, [pc, #44]	; (90004230 <_ZN23FrontendApplicationBase49gotoscreen_asteroidsScreenSlideTransitionEastImplEv+0x22c>)
90004204:	f022 f804 	bl	90026210 <__assert_func>
90004208:	900295c0 	.word	0x900295c0
9000420c:	2402357b 	.word	0x2402357b
90004210:	90003aed 	.word	0x90003aed
90004214:	9000389d 	.word	0x9000389d
90004218:	900023fd 	.word	0x900023fd
9000421c:	9000396d 	.word	0x9000396d
90004220:	24023572 	.word	0x24023572
90004224:	24023570 	.word	0x24023570
90004228:	90028f6c 	.word	0x90028f6c
9000422c:	900293d8 	.word	0x900293d8
90004230:	90029118 	.word	0x90029118
90004234:	90029204 	.word	0x90029204
90004238:	90029160 	.word	0x90029160
9000423c:	240235c4 	.word	0x240235c4
90004240:	240235c0 	.word	0x240235c0

90004244 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90004244:	b570      	push	{r4, r5, r6, lr}
90004246:	4604      	mov	r4, r0
90004248:	4615      	mov	r5, r2
9000424a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
9000424c:	f010 ff2a 	bl	900150a4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90004250:	4a1d      	ldr	r2, [pc, #116]	; (900042c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x84>)
        : currentPresenter(0),
90004252:	2300      	movs	r3, #0
      frontendHeap(heap),
90004254:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
        instance = this;
90004258:	6014      	str	r4, [r2, #0]
        return instance;
9000425a:	4d1c      	ldr	r5, [pc, #112]	; (900042cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x88>)
      model(m)
9000425c:	4a1c      	ldr	r2, [pc, #112]	; (900042d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8c>)
9000425e:	6828      	ldr	r0, [r5, #0]
90004260:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90004262:	4a1c      	ldr	r2, [pc, #112]	; (900042d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x90>)
90004264:	491c      	ldr	r1, [pc, #112]	; (900042d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x94>)
90004266:	f8c4 2144 	str.w	r2, [r4, #324]	; 0x144
9000426a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
9000426e:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
90004272:	e9c4 3353 	strd	r3, r3, [r4, #332]	; 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
90004276:	6802      	ldr	r2, [r0, #0]
90004278:	6892      	ldr	r2, [r2, #8]
9000427a:	428a      	cmp	r2, r1
          pendingScreenTransitionCallback(0)
9000427c:	e9c4 334f 	strd	r3, r3, [r4, #316]	; 0x13c
90004280:	d11f      	bne.n	900042c2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7e>
        requestedOrientation = orientation;
90004282:	f44f 7380 	mov.w	r3, #256	; 0x100
90004286:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
    touchgfx::Texts::setLanguage(GB);
9000428a:	2000      	movs	r0, #0
9000428c:	f000 fa04 	bl	90004698 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004290:	682b      	ldr	r3, [r5, #0]
90004292:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004296:	b192      	cbz	r2, 900042be <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
90004298:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
9000429a:	b180      	cbz	r0, 900042be <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
9000429c:	f01a f871 	bl	9001e382 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
900042a0:	682b      	ldr	r3, [r5, #0]
900042a2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900042a6:	b12a      	cbz	r2, 900042b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
900042a8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900042aa:	b118      	cbz	r0, 900042b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x70>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900042ac:	f01a f8e4 	bl	9001e478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900042b0:	4620      	mov	r0, r4
900042b2:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900042b4:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
900042b6:	f01a f8df 	bl	9001e478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
900042ba:	4620      	mov	r0, r4
900042bc:	bd70      	pop	{r4, r5, r6, pc}
900042be:	6898      	ldr	r0, [r3, #8]
900042c0:	e7ec      	b.n	9000429c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900042c2:	4619      	mov	r1, r3
900042c4:	4790      	blx	r2
900042c6:	e7e0      	b.n	9000428a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900042c8:	240235d0 	.word	0x240235d0
900042cc:	2402357c 	.word	0x2402357c
900042d0:	90029524 	.word	0x90029524
900042d4:	9002950c 	.word	0x9002950c
900042d8:	90000665 	.word	0x90000665

900042dc <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900042dc:	4905      	ldr	r1, [pc, #20]	; (900042f4 <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv+0x18>)
900042de:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
900042e4:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
900042e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
900042ec:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
900042f0:	4770      	bx	lr
900042f2:	bf00      	nop
900042f4:	90004005 	.word	0x90004005

900042f8 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv>:
900042f8:	4905      	ldr	r1, [pc, #20]	; (90004310 <_ZN23FrontendApplicationBase40gotoscreen_game_selectScreenNoTransitionEv+0x18>)
900042fa:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900042fc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
90004300:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004304:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004308:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
9000430c:	4770      	bx	lr
9000430e:	bf00      	nop
90004310:	90003c25 	.word	0x90003c25

90004314 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>:
90004314:	4905      	ldr	r1, [pc, #20]	; (9000432c <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv+0x18>)
90004316:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
90004318:	f500 73a2 	add.w	r3, r0, #324	; 0x144
9000431c:	f8c0 2150 	str.w	r2, [r0, #336]	; 0x150
90004320:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
90004324:	e9c0 0152 	strd	r0, r1, [r0, #328]	; 0x148
}
90004328:	4770      	bx	lr
9000432a:	bf00      	nop
9000432c:	90003dc9 	.word	0x90003dc9

90004330 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
90004330:	6a40      	ldr	r0, [r0, #36]	; 0x24
90004332:	4770      	bx	lr

90004334 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90004334:	6a80      	ldr	r0, [r0, #40]	; 0x28
90004336:	4770      	bx	lr

90004338 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90004338:	4770      	bx	lr
9000433a:	bf00      	nop

9000433c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
9000433c:	888b      	ldrh	r3, [r1, #4]
9000433e:	69c0      	ldr	r0, [r0, #28]
90004340:	0adb      	lsrs	r3, r3, #11
90004342:	680a      	ldr	r2, [r1, #0]
90004344:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
90004348:	4410      	add	r0, r2
9000434a:	4770      	bx	lr

9000434c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
9000434c:	b1da      	cbz	r2, 90004386 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3a>
{
9000434e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90004350:	7b14      	ldrb	r4, [r2, #12]
90004352:	b1b4      	cbz	r4, 90004382 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90004354:	f892 c00d 	ldrb.w	ip, [r2, #13]
90004358:	f892 e00b 	ldrb.w	lr, [r2, #11]
9000435c:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90004360:	6a03      	ldr	r3, [r0, #32]
90004362:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
90004366:	ea4e 0202 	orr.w	r2, lr, r2
9000436a:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000436e:	eb03 0084 	add.w	r0, r3, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
90004372:	881a      	ldrh	r2, [r3, #0]
90004374:	428a      	cmp	r2, r1
90004376:	d008      	beq.n	9000438a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90004378:	f103 0304 	add.w	r3, r3, #4
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
9000437c:	d801      	bhi.n	90004382 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000437e:	4283      	cmp	r3, r0
90004380:	d1f7      	bne.n	90004372 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
90004382:	2000      	movs	r0, #0
        {
            break;
        }
    }
    return 0;
}
90004384:	bd10      	pop	{r4, pc}
        return 0;
90004386:	4610      	mov	r0, r2
}
90004388:	4770      	bx	lr
            return kerndata->distance;
9000438a:	f993 0002 	ldrsb.w	r0, [r3, #2]
}
9000438e:	bd10      	pop	{r4, pc}

90004390 <_ZN8touchgfx13GeneratedFontD0Ev>:
90004390:	b510      	push	{r4, lr}
90004392:	4604      	mov	r4, r0
90004394:	212c      	movs	r1, #44	; 0x2c
90004396:	f021 ff0c 	bl	900261b2 <_ZdlPvj>
9000439a:	4620      	mov	r0, r4
9000439c:	bd10      	pop	{r4, pc}
9000439e:	bf00      	nop

900043a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043a0:	b530      	push	{r4, r5, lr}
900043a2:	b08b      	sub	sp, #44	; 0x2c
900043a4:	4604      	mov	r4, r0
900043a6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
      arabicTable(formsTable)
900043aa:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043ac:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
      arabicTable(formsTable)
900043b0:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b2:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
      arabicTable(formsTable)
900043b6:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043b8:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
      arabicTable(formsTable)
900043bc:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043be:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
      arabicTable(formsTable)
900043c2:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043c4:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
      arabicTable(formsTable)
900043c8:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043ca:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
      arabicTable(formsTable)
900043ce:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043d0:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
      arabicTable(formsTable)
900043d4:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900043d6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
      arabicTable(formsTable)
900043da:	9508      	str	r5, [sp, #32]
900043dc:	f011 fec2 	bl	90016164 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900043e0:	9b15      	ldr	r3, [sp, #84]	; 0x54
}
900043e2:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900043e4:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900043e6:	9b16      	ldr	r3, [sp, #88]	; 0x58
900043e8:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900043ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
900043ec:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
900043ee:	9b1a      	ldr	r3, [sp, #104]	; 0x68
900043f0:	62a3      	str	r3, [r4, #40]	; 0x28
900043f2:	4b02      	ldr	r3, [pc, #8]	; (900043fc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900043f4:	6023      	str	r3, [r4, #0]
}
900043f6:	b00b      	add	sp, #44	; 0x2c
900043f8:	bd30      	pop	{r4, r5, pc}
900043fa:	bf00      	nop
900043fc:	900295e4 	.word	0x900295e4

90004400 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004400:	4770      	bx	lr
90004402:	bf00      	nop

90004404 <_Z23getFont_verdana_10_4bppv>:
{
90004404:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90004406:	4d19      	ldr	r5, [pc, #100]	; (9000446c <_Z23getFont_verdana_10_4bppv+0x68>)
{
90004408:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000440a:	682c      	ldr	r4, [r5, #0]
9000440c:	f3bf 8f5b 	dmb	ish
90004410:	f014 0401 	ands.w	r4, r4, #1
90004414:	d002      	beq.n	9000441c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90004416:	4816      	ldr	r0, [pc, #88]	; (90004470 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004418:	b00f      	add	sp, #60	; 0x3c
9000441a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 190, 12, 10, 1, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000441c:	4628      	mov	r0, r5
9000441e:	f021 feca 	bl	900261b6 <__cxa_guard_acquire>
90004422:	2800      	cmp	r0, #0
90004424:	d0f7      	beq.n	90004416 <_Z23getFont_verdana_10_4bppv+0x12>
90004426:	213f      	movs	r1, #63	; 0x3f
90004428:	4b12      	ldr	r3, [pc, #72]	; (90004474 <_Z23getFont_verdana_10_4bppv+0x70>)
9000442a:	2201      	movs	r2, #1
9000442c:	200a      	movs	r0, #10
9000442e:	9308      	str	r3, [sp, #32]
90004430:	2304      	movs	r3, #4
90004432:	9000      	str	r0, [sp, #0]
90004434:	480e      	ldr	r0, [pc, #56]	; (90004470 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004436:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
9000443a:	490f      	ldr	r1, [pc, #60]	; (90004478 <_Z23getFont_verdana_10_4bppv+0x74>)
9000443c:	e9cd 3203 	strd	r3, r2, [sp, #12]
90004440:	e9cd 2205 	strd	r2, r2, [sp, #20]
90004444:	230c      	movs	r3, #12
90004446:	9107      	str	r1, [sp, #28]
90004448:	490c      	ldr	r1, [pc, #48]	; (9000447c <_Z23getFont_verdana_10_4bppv+0x78>)
9000444a:	e9cd 2401 	strd	r2, r4, [sp, #4]
9000444e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
90004452:	22be      	movs	r2, #190	; 0xbe
90004454:	f7ff ffa4 	bl	900043a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004458:	4809      	ldr	r0, [pc, #36]	; (90004480 <_Z23getFont_verdana_10_4bppv+0x7c>)
9000445a:	f021 fef7 	bl	9002624c <atexit>
9000445e:	4628      	mov	r0, r5
90004460:	f021 feb5 	bl	900261ce <__cxa_guard_release>
}
90004464:	4802      	ldr	r0, [pc, #8]	; (90004470 <_Z23getFont_verdana_10_4bppv+0x6c>)
90004466:	b00f      	add	sp, #60	; 0x3c
90004468:	bd30      	pop	{r4, r5, pc}
9000446a:	bf00      	nop
9000446c:	240094c0 	.word	0x240094c0
90004470:	240094c4 	.word	0x240094c4
90004474:	9002ac88 	.word	0x9002ac88
90004478:	9002b2d4 	.word	0x9002b2d4
9000447c:	902138ec 	.word	0x902138ec
90004480:	90004401 	.word	0x90004401

90004484 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
90004484:	4770      	bx	lr
90004486:	bf00      	nop

90004488 <_Z23getFont_verdana_20_4bppv>:
{
90004488:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000448a:	4d19      	ldr	r5, [pc, #100]	; (900044f0 <_Z23getFont_verdana_20_4bppv+0x68>)
{
9000448c:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
9000448e:	682c      	ldr	r4, [r5, #0]
90004490:	f3bf 8f5b 	dmb	ish
90004494:	f014 0401 	ands.w	r4, r4, #1
90004498:	d002      	beq.n	900044a0 <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
9000449a:	4816      	ldr	r0, [pc, #88]	; (900044f4 <_Z23getFont_verdana_20_4bppv+0x6c>)
9000449c:	b00f      	add	sp, #60	; 0x3c
9000449e:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 190, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900044a0:	4628      	mov	r0, r5
900044a2:	f021 fe88 	bl	900261b6 <__cxa_guard_acquire>
900044a6:	2800      	cmp	r0, #0
900044a8:	d0f7      	beq.n	9000449a <_Z23getFont_verdana_20_4bppv+0x12>
900044aa:	213f      	movs	r1, #63	; 0x3f
900044ac:	4a12      	ldr	r2, [pc, #72]	; (900044f8 <_Z23getFont_verdana_20_4bppv+0x70>)
900044ae:	2301      	movs	r3, #1
900044b0:	2014      	movs	r0, #20
900044b2:	9208      	str	r2, [sp, #32]
900044b4:	2204      	movs	r2, #4
900044b6:	9304      	str	r3, [sp, #16]
900044b8:	9000      	str	r0, [sp, #0]
900044ba:	9401      	str	r4, [sp, #4]
900044bc:	480d      	ldr	r0, [pc, #52]	; (900044f4 <_Z23getFont_verdana_20_4bppv+0x6c>)
900044be:	e9cd 1409 	strd	r1, r4, [sp, #36]	; 0x24
900044c2:	490e      	ldr	r1, [pc, #56]	; (900044fc <_Z23getFont_verdana_20_4bppv+0x74>)
900044c4:	e9cd 3305 	strd	r3, r3, [sp, #20]
900044c8:	9107      	str	r1, [sp, #28]
900044ca:	2319      	movs	r3, #25
900044cc:	490c      	ldr	r1, [pc, #48]	; (90004500 <_Z23getFont_verdana_20_4bppv+0x78>)
900044ce:	e9cd 4202 	strd	r4, r2, [sp, #8]
900044d2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
900044d6:	22be      	movs	r2, #190	; 0xbe
900044d8:	f7ff ff62 	bl	900043a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900044dc:	4809      	ldr	r0, [pc, #36]	; (90004504 <_Z23getFont_verdana_20_4bppv+0x7c>)
900044de:	f021 feb5 	bl	9002624c <atexit>
900044e2:	4628      	mov	r0, r5
900044e4:	f021 fe73 	bl	900261ce <__cxa_guard_release>
}
900044e8:	4802      	ldr	r0, [pc, #8]	; (900044f4 <_Z23getFont_verdana_20_4bppv+0x6c>)
900044ea:	b00f      	add	sp, #60	; 0x3c
900044ec:	bd30      	pop	{r4, r5, pc}
900044ee:	bf00      	nop
900044f0:	240094f0 	.word	0x240094f0
900044f4:	240094f4 	.word	0x240094f4
900044f8:	9002acbc 	.word	0x9002acbc
900044fc:	9002b2d8 	.word	0x9002b2d8
90004500:	90214350 	.word	0x90214350
90004504:	90004485 	.word	0x90004485

90004508 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004508:	4770      	bx	lr
9000450a:	bf00      	nop

9000450c <_Z23getFont_verdana_40_4bppv>:
{
9000450c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
9000450e:	4d19      	ldr	r5, [pc, #100]	; (90004574 <_Z23getFont_verdana_40_4bppv+0x68>)
{
90004510:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004512:	682c      	ldr	r4, [r5, #0]
90004514:	f3bf 8f5b 	dmb	ish
90004518:	f014 0401 	ands.w	r4, r4, #1
9000451c:	d002      	beq.n	90004524 <_Z23getFont_verdana_40_4bppv+0x18>
    return verdana_40_4bpp;
}
9000451e:	4816      	ldr	r0, [pc, #88]	; (90004578 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004520:	b00f      	add	sp, #60	; 0x3c
90004522:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 190, 48, 40, 1, 0, 4, 1, 2, 2, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
90004524:	4628      	mov	r0, r5
90004526:	f021 fe46 	bl	900261b6 <__cxa_guard_acquire>
9000452a:	2800      	cmp	r0, #0
9000452c:	d0f7      	beq.n	9000451e <_Z23getFont_verdana_40_4bppv+0x12>
9000452e:	2302      	movs	r3, #2
90004530:	223f      	movs	r2, #63	; 0x3f
90004532:	4812      	ldr	r0, [pc, #72]	; (9000457c <_Z23getFont_verdana_40_4bppv+0x70>)
90004534:	2101      	movs	r1, #1
90004536:	9402      	str	r4, [sp, #8]
90004538:	9008      	str	r0, [sp, #32]
9000453a:	2028      	movs	r0, #40	; 0x28
9000453c:	e9cd 2409 	strd	r2, r4, [sp, #36]	; 0x24
90004540:	e9cd 3305 	strd	r3, r3, [sp, #20]
90004544:	2204      	movs	r2, #4
90004546:	4b0e      	ldr	r3, [pc, #56]	; (90004580 <_Z23getFont_verdana_40_4bppv+0x74>)
90004548:	e9cd 2103 	strd	r2, r1, [sp, #12]
9000454c:	e9cd 0100 	strd	r0, r1, [sp]
90004550:	22be      	movs	r2, #190	; 0xbe
90004552:	490c      	ldr	r1, [pc, #48]	; (90004584 <_Z23getFont_verdana_40_4bppv+0x78>)
90004554:	9307      	str	r3, [sp, #28]
90004556:	2330      	movs	r3, #48	; 0x30
90004558:	4807      	ldr	r0, [pc, #28]	; (90004578 <_Z23getFont_verdana_40_4bppv+0x6c>)
9000455a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
9000455e:	f7ff ff1f 	bl	900043a0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90004562:	4809      	ldr	r0, [pc, #36]	; (90004588 <_Z23getFont_verdana_40_4bppv+0x7c>)
90004564:	f021 fe72 	bl	9002624c <atexit>
90004568:	4628      	mov	r0, r5
9000456a:	f021 fe30 	bl	900261ce <__cxa_guard_release>
}
9000456e:	4802      	ldr	r0, [pc, #8]	; (90004578 <_Z23getFont_verdana_40_4bppv+0x6c>)
90004570:	b00f      	add	sp, #60	; 0x3c
90004572:	bd30      	pop	{r4, r5, pc}
90004574:	24009520 	.word	0x24009520
90004578:	24009524 	.word	0x24009524
9000457c:	9002aed0 	.word	0x9002aed0
90004580:	9002b2dc 	.word	0x9002b2dc
90004584:	90214db4 	.word	0x90214db4
90004588:	90004509 	.word	0x90004509

9000458c <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
9000458c:	2000      	movs	r0, #0
9000458e:	4770      	bx	lr

90004590 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90004590:	2000      	movs	r0, #0
90004592:	4770      	bx	lr

90004594 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90004594:	b40e      	push	{r1, r2, r3}
90004596:	b500      	push	{lr}
90004598:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000459a:	2100      	movs	r1, #0
{
9000459c:	ab03      	add	r3, sp, #12
9000459e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
900045a2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
900045a4:	f011 fc06 	bl	90015db4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900045a8:	b002      	add	sp, #8
900045aa:	f85d eb04 	ldr.w	lr, [sp], #4
900045ae:	b003      	add	sp, #12
900045b0:	4770      	bx	lr
900045b2:	bf00      	nop

900045b4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
900045b4:	b40c      	push	{r2, r3}
900045b6:	b500      	push	{lr}
900045b8:	b083      	sub	sp, #12
900045ba:	ab04      	add	r3, sp, #16
900045bc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
900045c0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
900045c2:	f011 fbf7 	bl	90015db4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
900045c6:	b003      	add	sp, #12
900045c8:	f85d eb04 	ldr.w	lr, [sp], #4
900045cc:	b002      	add	sp, #8
900045ce:	4770      	bx	lr

900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
900045d0:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
900045d2:	b510      	push	{r4, lr}
900045d4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
900045d6:	b133      	cbz	r3, 900045e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
900045d8:	8f03      	ldrh	r3, [r0, #56]	; 0x38
900045da:	b39b      	cbz	r3, 90004644 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
900045dc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900045de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900045e2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
900045e4:	b923      	cbnz	r3, 900045f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
900045e6:	4620      	mov	r0, r4
}
900045e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
900045ec:	f012 be74 	b.w	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
900045f0:	f012 ff70 	bl	900174d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
900045f4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900045f6:	2b01      	cmp	r3, #1
900045f8:	d92a      	bls.n	90004650 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
900045fa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900045fc:	1c53      	adds	r3, r2, #1
900045fe:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90004600:	2b09      	cmp	r3, #9
90004602:	d812      	bhi.n	9000462a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90004604:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
90004608:	f640 103f 	movw	r0, #2367	; 0x93f
9000460c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
9000460e:	4281      	cmp	r1, r0
90004610:	d1e9      	bne.n	900045e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004612:	eb04 0142 	add.w	r1, r4, r2, lsl #1
90004616:	0052      	lsls	r2, r2, #1
90004618:	8c49      	ldrh	r1, [r1, #34]	; 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
9000461a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
9000461e:	4422      	add	r2, r4
90004620:	f640 103f 	movw	r0, #2367	; 0x93f
            buffer[index < size ? index : 0] = newChar;
90004624:	8459      	strh	r1, [r3, #34]	; 0x22
            buffer[pos] = newChar;
90004626:	8450      	strh	r0, [r2, #34]	; 0x22
        }
90004628:	e7dd      	b.n	900045e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
9000462a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9000462e:	f640 113f 	movw	r1, #2367	; 0x93f
90004632:	89db      	ldrh	r3, [r3, #14]
90004634:	428b      	cmp	r3, r1
90004636:	d1d6      	bne.n	900045e6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
90004638:	eb04 0142 	add.w	r1, r4, r2, lsl #1
9000463c:	2300      	movs	r3, #0
9000463e:	0052      	lsls	r2, r2, #1
90004640:	8c49      	ldrh	r1, [r1, #34]	; 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
90004642:	e7ea      	b.n	9000461a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
90004644:	4b05      	ldr	r3, [pc, #20]	; (9000465c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
90004646:	21c5      	movs	r1, #197	; 0xc5
90004648:	4a05      	ldr	r2, [pc, #20]	; (90004660 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
9000464a:	4806      	ldr	r0, [pc, #24]	; (90004664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
9000464c:	f021 fde0 	bl	90026210 <__assert_func>
            assert(offset < used);
90004650:	4b05      	ldr	r3, [pc, #20]	; (90004668 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
90004652:	21cb      	movs	r1, #203	; 0xcb
90004654:	4a05      	ldr	r2, [pc, #20]	; (9000466c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
90004656:	4803      	ldr	r0, [pc, #12]	; (90004664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
90004658:	f021 fdda 	bl	90026210 <__assert_func>
9000465c:	90029644 	.word	0x90029644
90004660:	90029650 	.word	0x90029650
90004664:	900296fc 	.word	0x900296fc
90004668:	90029748 	.word	0x90029748
9000466c:	90029758 	.word	0x90029758

90004670 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90004670:	f012 bdfb 	b.w	9001726a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90004674 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90004674:	b510      	push	{r4, lr}
90004676:	b086      	sub	sp, #24
90004678:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
9000467c:	ac0a      	add	r4, sp, #40	; 0x28
{
9000467e:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004682:	461a      	mov	r2, r3
90004684:	9b09      	ldr	r3, [sp, #36]	; 0x24
90004686:	4661      	mov	r1, ip
90004688:	9401      	str	r4, [sp, #4]
9000468a:	9300      	str	r3, [sp, #0]
9000468c:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
9000468e:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90004690:	f00f ffc2 	bl	90014618 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90004694:	b006      	add	sp, #24
90004696:	bd10      	pop	{r4, pc}

90004698 <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
90004698:	b9e0      	cbnz	r0, 900046d4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000469a:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
9000469c:	4b13      	ldr	r3, [pc, #76]	; (900046ec <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
9000469e:	681b      	ldr	r3, [r3, #0]
900046a0:	b1cb      	cbz	r3, 900046d6 <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900046a2:	4c13      	ldr	r4, [pc, #76]	; (900046f0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900046a4:	4813      	ldr	r0, [pc, #76]	; (900046f4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900046a6:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900046aa:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900046ac:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
900046ae:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900046b0:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
900046b2:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
900046b4:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
900046b6:	4b10      	ldr	r3, [pc, #64]	; (900046f8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
900046b8:	2200      	movs	r2, #0
900046ba:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
900046bc:	f000 f83a 	bl	90004734 <_ZN17TypedTextDatabase8getFontsEv>
900046c0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
900046c2:	f000 f835 	bl	90004730 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
900046c6:	4b0d      	ldr	r3, [pc, #52]	; (900046fc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
900046c8:	4a0d      	ldr	r2, [pc, #52]	; (90004700 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
900046ca:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
900046cc:	4b0d      	ldr	r3, [pc, #52]	; (90004704 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
900046ce:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
900046d0:	8018      	strh	r0, [r3, #0]
    }
}
900046d2:	bd38      	pop	{r3, r4, r5, pc}
900046d4:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046d6:	4c0c      	ldr	r4, [pc, #48]	; (90004708 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
900046d8:	4905      	ldr	r1, [pc, #20]	; (900046f0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
900046da:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
900046dc:	480b      	ldr	r0, [pc, #44]	; (9000470c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
900046de:	4b05      	ldr	r3, [pc, #20]	; (900046f4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
900046e0:	4a0b      	ldr	r2, [pc, #44]	; (90004710 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
900046e2:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
900046e4:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
900046e6:	2c00      	cmp	r4, #0
900046e8:	d1e5      	bne.n	900046b6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
900046ea:	bd38      	pop	{r3, r4, r5, pc}
900046ec:	24009550 	.word	0x24009550
900046f0:	24009554 	.word	0x24009554
900046f4:	24009558 	.word	0x24009558
900046f8:	2400955c 	.word	0x2400955c
900046fc:	240235d4 	.word	0x240235d4
90004700:	240235dc 	.word	0x240235dc
90004704:	240235d8 	.word	0x240235d8
90004708:	90215878 	.word	0x90215878
9000470c:	90215828 	.word	0x90215828
90004710:	90215818 	.word	0x90215818

90004714 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
90004714:	4a04      	ldr	r2, [pc, #16]	; (90004728 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
90004716:	4b05      	ldr	r3, [pc, #20]	; (9000472c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
90004718:	6812      	ldr	r2, [r2, #0]
9000471a:	681b      	ldr	r3, [r3, #0]
9000471c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
90004720:	eb03 0040 	add.w	r0, r3, r0, lsl #1
90004724:	4770      	bx	lr
90004726:	bf00      	nop
90004728:	24009558 	.word	0x24009558
9000472c:	24009554 	.word	0x24009554

90004730 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
90004730:	2004      	movs	r0, #4
90004732:	4770      	bx	lr

90004734 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
90004734:	4800      	ldr	r0, [pc, #0]	; (90004738 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
90004736:	4770      	bx	lr
90004738:	24009560 	.word	0x24009560

9000473c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
9000473c:	b510      	push	{r4, lr}
};
9000473e:	4c05      	ldr	r4, [pc, #20]	; (90004754 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_20_4bpp()),
90004740:	f7ff fea2 	bl	90004488 <_Z23getFont_verdana_20_4bppv>
};
90004744:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
90004746:	f7ff fee1 	bl	9000450c <_Z23getFont_verdana_40_4bppv>
};
9000474a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
9000474c:	f7ff fe5a 	bl	90004404 <_Z23getFont_verdana_10_4bppv>
};
90004750:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
90004752:	bd10      	pop	{r4, pc}
90004754:	24009560 	.word	0x24009560

90004758 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
90004758:	4770      	bx	lr
9000475a:	bf00      	nop

9000475c <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
9000475c:	4770      	bx	lr
9000475e:	bf00      	nop

90004760 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
90004760:	4770      	bx	lr
90004762:	bf00      	nop

90004764 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
90004764:	b530      	push	{r4, r5, lr}
90004766:	b085      	sub	sp, #20
90004768:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
9000476a:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
9000476c:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
9000476e:	466d      	mov	r5, sp
90004770:	4601      	mov	r1, r0
90004772:	8102      	strh	r2, [r0, #8]
90004774:	343c      	adds	r4, #60	; 0x3c
90004776:	4628      	mov	r0, r5
90004778:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9000477c:	4798      	blx	r3
9000477e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90004782:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
90004786:	b005      	add	sp, #20
90004788:	bd30      	pop	{r4, r5, pc}
9000478a:	bf00      	nop

9000478c <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
9000478c:	b530      	push	{r4, r5, lr}
9000478e:	b085      	sub	sp, #20
90004790:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
90004792:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
90004794:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
90004796:	466d      	mov	r5, sp
90004798:	4601      	mov	r1, r0
        rect.height = height;
9000479a:	8142      	strh	r2, [r0, #10]
9000479c:	343c      	adds	r4, #60	; 0x3c
9000479e:	4628      	mov	r0, r5
900047a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900047a4:	4798      	blx	r3
900047a6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900047aa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900047ae:	b005      	add	sp, #20
900047b0:	bd30      	pop	{r4, r5, pc}
900047b2:	bf00      	nop

900047b4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
900047b4:	2200      	movs	r2, #0
900047b6:	6002      	str	r2, [r0, #0]
900047b8:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
900047ba:	4770      	bx	lr

900047bc <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
900047bc:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
900047c0:	4770      	bx	lr
900047c2:	bf00      	nop

900047c4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
900047c4:	2000      	movs	r0, #0
900047c6:	4770      	bx	lr

900047c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
900047c8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
900047cc:	b112      	cbz	r2, 900047d4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
900047ce:	6803      	ldr	r3, [r0, #0]
900047d0:	695b      	ldr	r3, [r3, #20]
900047d2:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
900047d4:	4770      	bx	lr
900047d6:	bf00      	nop

900047d8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900047d8:	2200      	movs	r2, #0
900047da:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
900047de:	6082      	str	r2, [r0, #8]
900047e0:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
900047e4:	4770      	bx	lr
900047e6:	bf00      	nop

900047e8 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
900047e8:	6c80      	ldr	r0, [r0, #72]	; 0x48
900047ea:	4770      	bx	lr

900047ec <_ZN24screen_asteroidsViewBase21resume_asteroids_taskEv>:
     * Virtual Action Handlers
     */
    virtual void resume_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047ec:	4770      	bx	lr
900047ee:	bf00      	nop

900047f0 <_ZN24screen_asteroidsViewBase22suspend_asteroids_taskEv>:
    virtual void suspend_asteroids_task()
    {
        // Override and implement this function in screen_asteroids
    }
900047f0:	4770      	bx	lr
900047f2:	bf00      	nop

900047f4 <_ZN24screen_asteroidsViewBase20start_asteroids_gameEv>:
    virtual void start_asteroids_game()
    {
        // Override and implement this function in screen_asteroids
    }
900047f4:	4770      	bx	lr
900047f6:	bf00      	nop

900047f8 <_ZN24screen_asteroidsViewBase11setupScreenEv>:
}

void screen_asteroidsViewBase::setupScreen()
{

}
900047f8:	4770      	bx	lr
900047fa:	bf00      	nop

900047fc <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900047fc:	4770      	bx	lr
900047fe:	bf00      	nop

90004800 <_ZN8touchgfx5ShapeILt3EED1Ev>:
 * scaled, rotated and moved freely. Example uses could be the hands of a clock.
 *
 * @see AbstractShape
 */
template <uint16_t POINTS>
class Shape : public AbstractShape
90004800:	4770      	bx	lr
90004802:	bf00      	nop

90004804 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004804:	4770      	bx	lr
90004806:	bf00      	nop

90004808 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
90004808:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
9000480a:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
9000480c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
9000480e:	6844      	ldr	r4, [r0, #4]
90004810:	f012 0f01 	tst.w	r2, #1
90004814:	eb04 0062 	add.w	r0, r4, r2, asr #1
90004818:	d103      	bne.n	90004822 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1a>
9000481a:	689b      	ldr	r3, [r3, #8]
    }
9000481c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004820:	4718      	bx	r3
90004822:	ea4f 0c62 	mov.w	ip, r2, asr #1
90004826:	689b      	ldr	r3, [r3, #8]
90004828:	f854 200c 	ldr.w	r2, [r4, ip]
    }
9000482c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90004830:	58d3      	ldr	r3, [r2, r3]
90004832:	4718      	bx	r3

90004834 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90004834:	6843      	ldr	r3, [r0, #4]
90004836:	b13b      	cbz	r3, 90004848 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
90004838:	6883      	ldr	r3, [r0, #8]
9000483a:	b10b      	cbz	r3, 90004840 <_ZNK8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
9000483c:	2001      	movs	r0, #1
    }
9000483e:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004840:	68c0      	ldr	r0, [r0, #12]
90004842:	f000 0001 	and.w	r0, r0, #1
90004846:	4770      	bx	lr
90004848:	4618      	mov	r0, r3
9000484a:	4770      	bx	lr

9000484c <_ZNK8touchgfx5ShapeILt3EE12getNumPointsEv>:
{
public:
    virtual int getNumPoints() const
    {
        return POINTS;
    }
9000484c:	2003      	movs	r0, #3
9000484e:	4770      	bx	lr

90004850 <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_>:

    virtual void setCorner(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90004850:	2902      	cmp	r1, #2
90004852:	d803      	bhi.n	9000485c <_ZN8touchgfx5ShapeILt3EE9setCornerEiNS_7CWRUtil2Q5ES3_+0xc>
90004854:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCorner[i] = x, yCorner[i] = y;
90004858:	64ca      	str	r2, [r1, #76]	; 0x4c
9000485a:	658b      	str	r3, [r1, #88]	; 0x58
        }
    }
9000485c:	4770      	bx	lr
9000485e:	bf00      	nop

90004860 <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi>:

    virtual CWRUtil::Q5 getCornerX(int i) const
    {
        if (i >= 0 && i < POINTS)
90004860:	2902      	cmp	r1, #2
90004862:	d803      	bhi.n	9000486c <_ZNK8touchgfx5ShapeILt3EE10getCornerXEi+0xc>
        {
            return xCorner[i];
90004864:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004868:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
9000486a:	4770      	bx	lr
         * Constructor from integer. No conversion is done - the integer is assumed to already
         * be in Q5 format.
         *
         * @param  i Integer pre-formattet in Q5 format.
         */
        explicit Q5(int i)
9000486c:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000486e:	4770      	bx	lr

90004870 <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi>:

    virtual CWRUtil::Q5 getCornerY(int i) const
    {
        if (i >= 0 && i < POINTS)
90004870:	2902      	cmp	r1, #2
90004872:	d803      	bhi.n	9000487c <_ZNK8touchgfx5ShapeILt3EE10getCornerYEi+0xc>
        {
            return yCorner[i];
90004874:	3116      	adds	r1, #22
90004876:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
9000487a:	4770      	bx	lr
9000487c:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000487e:	4770      	bx	lr

90004880 <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_>:

protected:
    virtual void setCache(int i, CWRUtil::Q5 x, CWRUtil::Q5 y)
    {
        if (i >= 0 && i < POINTS)
90004880:	2902      	cmp	r1, #2
90004882:	d803      	bhi.n	9000488c <_ZN8touchgfx5ShapeILt3EE8setCacheEiNS_7CWRUtil2Q5ES3_+0xc>
90004884:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        {
            xCache[i] = x, yCache[i] = y;
90004888:	664a      	str	r2, [r1, #100]	; 0x64
9000488a:	670b      	str	r3, [r1, #112]	; 0x70
        }
    }
9000488c:	4770      	bx	lr
9000488e:	bf00      	nop

90004890 <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi>:

    virtual CWRUtil::Q5 getCacheX(int i) const
    {
        if (i >= 0 && i < POINTS)
90004890:	2902      	cmp	r1, #2
90004892:	d803      	bhi.n	9000489c <_ZNK8touchgfx5ShapeILt3EE9getCacheXEi+0xc>
        {
            return xCache[i];
90004894:	eb00 0181 	add.w	r1, r0, r1, lsl #2
90004898:	6e48      	ldr	r0, [r1, #100]	; 0x64
9000489a:	4770      	bx	lr
9000489c:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
9000489e:	4770      	bx	lr

900048a0 <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi>:

    virtual CWRUtil::Q5 getCacheY(int i) const
    {
        if (i >= 0 && i < POINTS)
900048a0:	2902      	cmp	r1, #2
900048a2:	d803      	bhi.n	900048ac <_ZNK8touchgfx5ShapeILt3EE9getCacheYEi+0xc>
        {
            return yCache[i];
900048a4:	311c      	adds	r1, #28
900048a6:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
900048aa:	4770      	bx	lr
900048ac:	2000      	movs	r0, #0
        }
        return CWRUtil::toQ5<int>(0);
    }
900048ae:	4770      	bx	lr

900048b0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
900048b0:	b510      	push	{r4, lr}
900048b2:	4604      	mov	r4, r0
900048b4:	214c      	movs	r1, #76	; 0x4c
900048b6:	f021 fc7c 	bl	900261b2 <_ZdlPvj>
900048ba:	4620      	mov	r0, r4
900048bc:	bd10      	pop	{r4, pc}
900048be:	bf00      	nop

900048c0 <_ZN8touchgfx5ShapeILt3EED0Ev>:
class Shape : public AbstractShape
900048c0:	b510      	push	{r4, lr}
900048c2:	4604      	mov	r4, r0
900048c4:	217c      	movs	r1, #124	; 0x7c
900048c6:	f021 fc74 	bl	900261b2 <_ZdlPvj>
900048ca:	4620      	mov	r0, r4
900048cc:	bd10      	pop	{r4, pc}
900048ce:	bf00      	nop

900048d0 <_ZN8touchgfx8CallbackI24screen_asteroidsViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900048d0:	b510      	push	{r4, lr}
900048d2:	4604      	mov	r4, r0
900048d4:	2110      	movs	r1, #16
900048d6:	f021 fc6c 	bl	900261b2 <_ZdlPvj>
900048da:	4620      	mov	r0, r4
900048dc:	bd10      	pop	{r4, pc}
900048de:	bf00      	nop

900048e0 <_ZN24screen_asteroidsViewBaseD1Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
900048e0:	4b03      	ldr	r3, [pc, #12]	; (900048f0 <_ZN24screen_asteroidsViewBaseD1Ev+0x10>)
900048e2:	b510      	push	{r4, lr}
900048e4:	4604      	mov	r4, r0
900048e6:	6003      	str	r3, [r0, #0]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900048e8:	f00e fe00 	bl	900134ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
900048ec:	4620      	mov	r0, r4
900048ee:	bd10      	pop	{r4, pc}
900048f0:	90029bb4 	.word	0x90029bb4

900048f4 <_ZN24screen_asteroidsViewBaseD0Ev>:
screen_asteroidsViewBase::~screen_asteroidsViewBase()
900048f4:	4b07      	ldr	r3, [pc, #28]	; (90004914 <_ZN24screen_asteroidsViewBaseD0Ev+0x20>)
900048f6:	b500      	push	{lr}
900048f8:	b083      	sub	sp, #12
900048fa:	6003      	str	r3, [r0, #0]
900048fc:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
900048fe:	f00e fdf5 	bl	900134ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
90004902:	9801      	ldr	r0, [sp, #4]
90004904:	f242 1128 	movw	r1, #8488	; 0x2128
90004908:	f021 fc53 	bl	900261b2 <_ZdlPvj>
9000490c:	9801      	ldr	r0, [sp, #4]
9000490e:	b003      	add	sp, #12
90004910:	f85d fb04 	ldr.w	pc, [sp], #4
90004914:	90029bb4 	.word	0x90029bb4

90004918 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004918:	4b1b      	ldr	r3, [pc, #108]	; (90004988 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000491a:	6802      	ldr	r2, [r0, #0]
9000491c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
9000491e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004920:	6b55      	ldr	r5, [r2, #52]	; 0x34
90004922:	b323      	cbz	r3, 9000496e <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
90004924:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
90004926:	4919      	ldr	r1, [pc, #100]	; (9000498c <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004928:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9000492a:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000492c:	8809      	ldrh	r1, [r1, #0]
9000492e:	4291      	cmp	r1, r2
90004930:	d923      	bls.n	9000497a <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
90004932:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004936:	4b16      	ldr	r3, [pc, #88]	; (90004990 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
90004938:	681b      	ldr	r3, [r3, #0]
9000493a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
9000493e:	4a15      	ldr	r2, [pc, #84]	; (90004994 <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
90004940:	6803      	ldr	r3, [r0, #0]
90004942:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004944:	4293      	cmp	r3, r2
90004946:	d107      	bne.n	90004958 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
90004948:	88c0      	ldrh	r0, [r0, #6]
9000494a:	4b13      	ldr	r3, [pc, #76]	; (90004998 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000494c:	1a31      	subs	r1, r6, r0
9000494e:	429d      	cmp	r5, r3
90004950:	b209      	sxth	r1, r1
90004952:	d107      	bne.n	90004964 <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
90004954:	80e1      	strh	r1, [r4, #6]
    }
90004956:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004958:	4798      	blx	r3
9000495a:	4b0f      	ldr	r3, [pc, #60]	; (90004998 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
9000495c:	1a31      	subs	r1, r6, r0
9000495e:	429d      	cmp	r5, r3
90004960:	b209      	sxth	r1, r1
90004962:	d0f7      	beq.n	90004954 <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
90004964:	4620      	mov	r0, r4
90004966:	462b      	mov	r3, r5
    }
90004968:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
9000496c:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000496e:	4b0b      	ldr	r3, [pc, #44]	; (9000499c <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
90004970:	216c      	movs	r1, #108	; 0x6c
90004972:	4a0b      	ldr	r2, [pc, #44]	; (900049a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004974:	480b      	ldr	r0, [pc, #44]	; (900049a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004976:	f021 fc4b 	bl	90026210 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000497a:	4b0b      	ldr	r3, [pc, #44]	; (900049a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
9000497c:	216d      	movs	r1, #109	; 0x6d
9000497e:	4a08      	ldr	r2, [pc, #32]	; (900049a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
90004980:	4808      	ldr	r0, [pc, #32]	; (900049a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
90004982:	f021 fc45 	bl	90026210 <__assert_func>
90004986:	bf00      	nop
90004988:	240235d4 	.word	0x240235d4
9000498c:	240235d8 	.word	0x240235d8
90004990:	240235dc 	.word	0x240235dc
90004994:	90003851 	.word	0x90003851
90004998:	90002401 	.word	0x90002401
9000499c:	9002982c 	.word	0x9002982c
900049a0:	90029870 	.word	0x90029870
900049a4:	900298ac 	.word	0x900298ac
900049a8:	900298f4 	.word	0x900298f4

900049ac <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screen_asteroidsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_back)
900049ac:	f500 638d 	add.w	r3, r0, #1128	; 0x468
900049b0:	4299      	cmp	r1, r3
{
900049b2:	b570      	push	{r4, r5, r6, lr}
900049b4:	4604      	mov	r4, r0
900049b6:	460d      	mov	r5, r1
    if (&src == &btn_back)
900049b8:	d00d      	beq.n	900049d6 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
        //interaction_transition_to_home
        //When suspend_asteroid_task completed change screen to screen_game_select
        //Go to screen_game_select with screen transition towards West
        application().gotoscreen_game_selectScreenSlideTransitionWest();
    }
    if (&src == &btn_retry)
900049ba:	f204 432c 	addw	r3, r4, #1068	; 0x42c
900049be:	429d      	cmp	r5, r3
900049c0:	d000      	beq.n	900049c4 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
        //interaction_restart
        //When btn_retry clicked call virtual function
        //Call start_asteroids_game
        start_asteroids_game();
    }
}
900049c2:	bd70      	pop	{r4, r5, r6, pc}
        start_asteroids_game();
900049c4:	6823      	ldr	r3, [r4, #0]
900049c6:	4a0a      	ldr	r2, [pc, #40]	; (900049f0 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x44>)
900049c8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900049ca:	4293      	cmp	r3, r2
900049cc:	d0f9      	beq.n	900049c2 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
900049ce:	4620      	mov	r0, r4
}
900049d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        start_asteroids_game();
900049d4:	4718      	bx	r3
        suspend_asteroids_task();
900049d6:	6803      	ldr	r3, [r0, #0]
900049d8:	4a06      	ldr	r2, [pc, #24]	; (900049f4 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x48>)
900049da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
900049dc:	4293      	cmp	r3, r2
900049de:	d104      	bne.n	900049ea <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3e>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
900049e0:	f010 fa9a 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoscreen_game_selectScreenSlideTransitionWest();
900049e4:	f7ff fc96 	bl	90004314 <_ZN23FrontendApplicationBase47gotoscreen_game_selectScreenSlideTransitionWestEv>
900049e8:	e7e7      	b.n	900049ba <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xe>
        suspend_asteroids_task();
900049ea:	4798      	blx	r3
900049ec:	e7f8      	b.n	900049e0 <_ZN24screen_asteroidsViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x34>
900049ee:	bf00      	nop
900049f0:	900047f5 	.word	0x900047f5
900049f4:	900047f1 	.word	0x900047f1

900049f8 <_ZN24screen_asteroidsViewBase15afterTransitionEv>:
void screen_asteroidsViewBase::afterTransition()
{
    //interaction_resume_asteroids_task
    //When screen transition ends call virtual function
    //Call resume_asteroids_task
    resume_asteroids_task();
900049f8:	6803      	ldr	r3, [r0, #0]
900049fa:	490a      	ldr	r1, [pc, #40]	; (90004a24 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x2c>)
900049fc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
900049fe:	428a      	cmp	r2, r1
{
90004a00:	b510      	push	{r4, lr}
90004a02:	4604      	mov	r4, r0
90004a04:	d104      	bne.n	90004a10 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x18>

    //interaction_start_asteroids_game
    //When screen transition ends call virtual function
    //Call start_asteroids_game
    start_asteroids_game();
90004a06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a08:	4a07      	ldr	r2, [pc, #28]	; (90004a28 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a0a:	4293      	cmp	r3, r2
90004a0c:	d106      	bne.n	90004a1c <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x24>
}
90004a0e:	bd10      	pop	{r4, pc}
    resume_asteroids_task();
90004a10:	4790      	blx	r2
    start_asteroids_game();
90004a12:	6823      	ldr	r3, [r4, #0]
90004a14:	4a04      	ldr	r2, [pc, #16]	; (90004a28 <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x30>)
90004a16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90004a18:	4293      	cmp	r3, r2
90004a1a:	d0f8      	beq.n	90004a0e <_ZN24screen_asteroidsViewBase15afterTransitionEv+0x16>
90004a1c:	4620      	mov	r0, r4
}
90004a1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    start_asteroids_game();
90004a22:	4718      	bx	r3
90004a24:	900047ed 	.word	0x900047ed
90004a28:	900047f5 	.word	0x900047f5

90004a2c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004a2c:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004a2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90004a32:	4f25      	ldr	r7, [pc, #148]	; (90004ac8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
90004a34:	4605      	mov	r5, r0
        setX(x);
90004a36:	6b1e      	ldr	r6, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004a38:	4690      	mov	r8, r2
90004a3a:	42be      	cmp	r6, r7
90004a3c:	d125      	bne.n	90004a8a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x5e>
        setBaselineY(baselineY);
90004a3e:	6e5c      	ldr	r4, [r3, #100]	; 0x64
        rect.x = x;
90004a40:	80a9      	strh	r1, [r5, #4]
90004a42:	4922      	ldr	r1, [pc, #136]	; (90004acc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004a44:	428c      	cmp	r4, r1
90004a46:	d126      	bne.n	90004a96 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004a48:	4921      	ldr	r1, [pc, #132]	; (90004ad0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004a4a:	fa1f f888 	uxth.w	r8, r8
90004a4e:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90004a50:	680b      	ldr	r3, [r1, #0]
90004a52:	2b00      	cmp	r3, #0
90004a54:	d032      	beq.n	90004abc <_ZN8touchgfx8TextArea13setXBaselineYEss+0x90>
        return typedTextId < numberOfTypedTexts;
90004a56:	491f      	ldr	r1, [pc, #124]	; (90004ad4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004a58:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004a5a:	8809      	ldrh	r1, [r1, #0]
90004a5c:	4291      	cmp	r1, r2
90004a5e:	d927      	bls.n	90004ab0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x84>
        return fonts[typedTexts[typedTextId].fontIdx];
90004a60:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004a64:	4b1c      	ldr	r3, [pc, #112]	; (90004ad8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
90004a66:	681b      	ldr	r3, [r3, #0]
90004a68:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004a6c:	4a1b      	ldr	r2, [pc, #108]	; (90004adc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004a6e:	6803      	ldr	r3, [r0, #0]
90004a70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90004a72:	4293      	cmp	r3, r2
90004a74:	d11a      	bne.n	90004aac <_ZN8touchgfx8TextArea13setXBaselineYEss+0x80>
90004a76:	88c0      	ldrh	r0, [r0, #6]
90004a78:	4b19      	ldr	r3, [pc, #100]	; (90004ae0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004a7a:	eba8 0200 	sub.w	r2, r8, r0
90004a7e:	429e      	cmp	r6, r3
90004a80:	b211      	sxth	r1, r2
90004a82:	d10e      	bne.n	90004aa2 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
        rect.y = y;
90004a84:	80e9      	strh	r1, [r5, #6]
    }
90004a86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        setX(x);
90004a8a:	47b0      	blx	r6
        setBaselineY(baselineY);
90004a8c:	682b      	ldr	r3, [r5, #0]
90004a8e:	490f      	ldr	r1, [pc, #60]	; (90004acc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
90004a90:	6e5c      	ldr	r4, [r3, #100]	; 0x64
90004a92:	428c      	cmp	r4, r1
90004a94:	d0d8      	beq.n	90004a48 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1c>
90004a96:	4641      	mov	r1, r8
90004a98:	4628      	mov	r0, r5
90004a9a:	4623      	mov	r3, r4
    }
90004a9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setBaselineY(baselineY);
90004aa0:	4718      	bx	r3
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004aa2:	4628      	mov	r0, r5
90004aa4:	4633      	mov	r3, r6
    }
90004aa6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004aaa:	4718      	bx	r3
90004aac:	4798      	blx	r3
90004aae:	e7e3      	b.n	90004a78 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x4c>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004ab0:	4b0c      	ldr	r3, [pc, #48]	; (90004ae4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004ab2:	216d      	movs	r1, #109	; 0x6d
90004ab4:	4a0c      	ldr	r2, [pc, #48]	; (90004ae8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004ab6:	480d      	ldr	r0, [pc, #52]	; (90004aec <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004ab8:	f021 fbaa 	bl	90026210 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004abc:	4b0c      	ldr	r3, [pc, #48]	; (90004af0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc4>)
90004abe:	216c      	movs	r1, #108	; 0x6c
90004ac0:	4a09      	ldr	r2, [pc, #36]	; (90004ae8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
90004ac2:	480a      	ldr	r0, [pc, #40]	; (90004aec <_ZN8touchgfx8TextArea13setXBaselineYEss+0xc0>)
90004ac4:	f021 fba4 	bl	90026210 <__assert_func>
90004ac8:	900023fd 	.word	0x900023fd
90004acc:	90004919 	.word	0x90004919
90004ad0:	240235d4 	.word	0x240235d4
90004ad4:	240235d8 	.word	0x240235d8
90004ad8:	240235dc 	.word	0x240235dc
90004adc:	90003851 	.word	0x90003851
90004ae0:	90002401 	.word	0x90002401
90004ae4:	900298f4 	.word	0x900298f4
90004ae8:	90029870 	.word	0x90029870
90004aec:	900298ac 	.word	0x900298ac
90004af0:	9002982c 	.word	0x9002982c

90004af4 <_ZN24screen_asteroidsViewBaseC1Ev>:
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004af8:	4604      	mov	r4, r0
        : presenter(0)
90004afa:	2500      	movs	r5, #0
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
90004afc:	4f3d      	ldr	r7, [pc, #244]	; (90004bf4 <_ZN24screen_asteroidsViewBaseC1Ev+0x100>)
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004afe:	f104 0b98 	add.w	fp, r4, #152	; 0x98
90004b02:	f104 09c4 	add.w	r9, r4, #196	; 0xc4
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90004b06:	f8df 810c 	ldr.w	r8, [pc, #268]	; 90004c14 <_ZN24screen_asteroidsViewBaseC1Ev+0x120>
screen_asteroidsViewBase::screen_asteroidsViewBase() :
90004b0a:	ed2d 8b02 	vpush	{d8}
90004b0e:	b097      	sub	sp, #92	; 0x5c
90004b10:	f011 fdd0 	bl	900166b4 <_ZN8touchgfx6ScreenC1Ev>
90004b14:	23ff      	movs	r3, #255	; 0xff
          touchable(false),
90004b16:	f44f 7280 	mov.w	r2, #256	; 0x100
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004b1a:	4937      	ldr	r1, [pc, #220]	; (90004bf8 <_ZN24screen_asteroidsViewBaseC1Ev+0x104>)
90004b1c:	ae14      	add	r6, sp, #80	; 0x50
90004b1e:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
90004b22:	f884 3092 	strb.w	r3, [r4, #146]	; 0x92
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
90004b26:	f64f 73ff 	movw	r3, #65535	; 0xffff
90004b2a:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
90004b2e:	4658      	mov	r0, fp
90004b30:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
90004b34:	6021      	str	r1, [r4, #0]
90004b36:	4631      	mov	r1, r6
90004b38:	63e5      	str	r5, [r4, #60]	; 0x3c
90004b3a:	6427      	str	r7, [r4, #64]	; 0x40
        : color(col)
90004b3c:	66a5      	str	r5, [r4, #104]	; 0x68
90004b3e:	66e7      	str	r7, [r4, #108]	; 0x6c
90004b40:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
90004b44:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
        : x(0), y(0), width(0), height(0)
90004b48:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
90004b4c:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90004b50:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90004b54:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
90004b58:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
90004b5c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90004b60:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90004b64:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
90004b68:	f00c fe38 	bl	900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004b6c:	4648      	mov	r0, r9
90004b6e:	f00c fb7f 	bl	90011270 <_ZN8touchgfx13AbstractShapeC1Ev>
90004b72:	4a22      	ldr	r2, [pc, #136]	; (90004bfc <_ZN24screen_asteroidsViewBaseC1Ev+0x108>)
90004b74:	f8d8 3000 	ldr.w	r3, [r8]
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
90004b78:	f504 71a0 	add.w	r1, r4, #320	; 0x140
90004b7c:	f8c4 20c4 	str.w	r2, [r4, #196]	; 0xc4
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
90004b80:	4a1f      	ldr	r2, [pc, #124]	; (90004c00 <_ZN24screen_asteroidsViewBaseC1Ev+0x10c>)
        : widgetWidth(0)
90004b82:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
90004b86:	f8c4 2140 	str.w	r2, [r4, #320]	; 0x140
90004b8a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90004b8e:	910b      	str	r1, [sp, #44]	; 0x2c
            : v(0)
90004b90:	e9c4 5544 	strd	r5, r5, [r4, #272]	; 0x110
90004b94:	e9c4 5546 	strd	r5, r5, [r4, #280]	; 0x118
90004b98:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
90004b9c:	e9c4 554a 	strd	r5, r5, [r4, #296]	; 0x128
90004ba0:	e9c4 554c 	strd	r5, r5, [r4, #304]	; 0x130
90004ba4:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
90004ba8:	2a00      	cmp	r2, #0
90004baa:	d035      	beq.n	90004c18 <_ZN24screen_asteroidsViewBaseC1Ev+0x124>
90004bac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004bae:	2800      	cmp	r0, #0
90004bb0:	f000 83ad 	beq.w	9000530e <_ZN24screen_asteroidsViewBaseC1Ev+0x81a>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
90004bb4:	6803      	ldr	r3, [r0, #0]
90004bb6:	4d13      	ldr	r5, [pc, #76]	; (90004c04 <_ZN24screen_asteroidsViewBaseC1Ev+0x110>)
90004bb8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90004bba:	42aa      	cmp	r2, r5
90004bbc:	d03a      	beq.n	90004c34 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004bbe:	4790      	blx	r2
        return auxiliaryLCD;
90004bc0:	f8d8 3000 	ldr.w	r3, [r8]
90004bc4:	fab0 f880 	clz	r8, r0
90004bc8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90004bca:	ea4f 1858 	mov.w	r8, r8, lsr #5
        if (HAL::getInstance()->getAuxiliaryLCD())
90004bce:	b140      	cbz	r0, 90004be2 <_ZN24screen_asteroidsViewBaseC1Ev+0xee>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90004bd0:	6803      	ldr	r3, [r0, #0]
90004bd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004bd4:	42ab      	cmp	r3, r5
90004bd6:	d02d      	beq.n	90004c34 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004bd8:	4798      	blx	r3
90004bda:	2800      	cmp	r0, #0
90004bdc:	bf08      	it	eq
90004bde:	f048 0801 	orreq.w	r8, r8, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
90004be2:	f1b8 0f00 	cmp.w	r8, #0
90004be6:	d125      	bne.n	90004c34 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
90004be8:	4b07      	ldr	r3, [pc, #28]	; (90004c08 <_ZN24screen_asteroidsViewBaseC1Ev+0x114>)
90004bea:	212c      	movs	r1, #44	; 0x2c
90004bec:	4a07      	ldr	r2, [pc, #28]	; (90004c0c <_ZN24screen_asteroidsViewBaseC1Ev+0x118>)
90004bee:	4808      	ldr	r0, [pc, #32]	; (90004c10 <_ZN24screen_asteroidsViewBaseC1Ev+0x11c>)
90004bf0:	f021 fb0e 	bl	90026210 <__assert_func>
90004bf4:	9002a5cc 	.word	0x9002a5cc
90004bf8:	90029bb4 	.word	0x90029bb4
90004bfc:	90029b08 	.word	0x90029b08
90004c00:	90028c3c 	.word	0x90028c3c
90004c04:	900024a1 	.word	0x900024a1
90004c08:	90029934 	.word	0x90029934
90004c0c:	90029994 	.word	0x90029994
90004c10:	900299d0 	.word	0x900299d0
90004c14:	2402357c 	.word	0x2402357c
        return instance->lcdRef;
90004c18:	6898      	ldr	r0, [r3, #8]
90004c1a:	4ddd      	ldr	r5, [pc, #884]	; (90004f90 <_ZN24screen_asteroidsViewBaseC1Ev+0x49c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
90004c1c:	6802      	ldr	r2, [r0, #0]
90004c1e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
90004c20:	42aa      	cmp	r2, r5
90004c22:	d1cc      	bne.n	90004bbe <_ZN24screen_asteroidsViewBaseC1Ev+0xca>
        return auxiliaryLCD;
90004c24:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90004c26:	b128      	cbz	r0, 90004c34 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
        bool compat = HAL::lcd().framebufferFormat() == format;
90004c28:	6803      	ldr	r3, [r0, #0]
90004c2a:	f04f 0801 	mov.w	r8, #1
90004c2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90004c30:	42ab      	cmp	r3, r5
90004c32:	d1d1      	bne.n	90004bd8 <_ZN24screen_asteroidsViewBaseC1Ev+0xe4>
90004c34:	4bd7      	ldr	r3, [pc, #860]	; (90004f94 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a0>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90004c36:	2500      	movs	r5, #0
        : typedTextId(id)
90004c38:	49d7      	ldr	r1, [pc, #860]	; (90004f98 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
          touchable(false),
90004c3a:	f44f 7880 	mov.w	r8, #256	; 0x100
90004c3e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
90004c42:	3324      	adds	r3, #36	; 0x24
90004c44:	f64f 7aff 	movw	sl, #65535	; 0xffff
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004c48:	f04f 32ff 	mov.w	r2, #4294967295
90004c4c:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
90004c50:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
          firstChild(0)
90004c54:	4bd1      	ldr	r3, [pc, #836]	; (90004f9c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004c56:	f8c4 117c 	str.w	r1, [r4, #380]	; 0x17c
90004c5a:	ee08 0a10 	vmov	s16, r0
        : TextAreaWithWildcardBase(), wc1(0)
90004c5e:	49d0      	ldr	r1, [pc, #832]	; (90004fa0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4ac>)
90004c60:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004c64:	23ff      	movs	r3, #255	; 0xff
90004c66:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
90004c6a:	f8c4 318a 	str.w	r3, [r4, #394]	; 0x18a
        : color(col)
90004c6e:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
90004c72:	f8a4 5188 	strh.w	r5, [r4, #392]	; 0x188
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004c76:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
90004c7a:	f8a4 8178 	strh.w	r8, [r4, #376]	; 0x178
90004c7e:	f8a4 81c4 	strh.w	r8, [r4, #452]	; 0x1c4
90004c82:	f8c4 2194 	str.w	r2, [r4, #404]	; 0x194
90004c86:	f8c4 1154 	str.w	r1, [r4, #340]	; 0x154
90004c8a:	4631      	mov	r1, r6
90004c8c:	f8a4 a180 	strh.w	sl, [r4, #384]	; 0x180
        : x(0), y(0), width(0), height(0)
90004c90:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
90004c94:	e9c4 5558 	strd	r5, r5, [r4, #352]	; 0x160
          nextSibling(0),
90004c98:	e9c4 555a 	strd	r5, r5, [r4, #360]	; 0x168
          cachedAbsX(0),
90004c9c:	e9c4 555c 	strd	r5, r5, [r4, #368]	; 0x170
90004ca0:	e9c4 5566 	strd	r5, r5, [r4, #408]	; 0x198
90004ca4:	e9c4 5569 	strd	r5, r5, [r4, #420]	; 0x1a4
90004ca8:	e9c4 556b 	strd	r5, r5, [r4, #428]	; 0x1ac
          nextSibling(0),
90004cac:	e9c4 556d 	strd	r5, r5, [r4, #436]	; 0x1b4
          cachedAbsX(0),
90004cb0:	e9c4 556f 	strd	r5, r5, [r4, #444]	; 0x1bc
90004cb4:	f8c4 51c8 	str.w	r5, [r4, #456]	; 0x1c8
90004cb8:	f8ad 2050 	strh.w	r2, [sp, #80]	; 0x50
90004cbc:	f504 72fc 	add.w	r2, r4, #504	; 0x1f8
90004cc0:	9202      	str	r2, [sp, #8]
90004cc2:	f00c fd8b 	bl	900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cc6:	f504 7209 	add.w	r2, r4, #548	; 0x224
90004cca:	4631      	mov	r1, r6
90004ccc:	9802      	ldr	r0, [sp, #8]
90004cce:	9203      	str	r2, [sp, #12]
90004cd0:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
90004cd4:	f00c fd82 	bl	900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cd8:	f504 721f 	add.w	r2, r4, #636	; 0x27c
90004cdc:	4631      	mov	r1, r6
90004cde:	9803      	ldr	r0, [sp, #12]
90004ce0:	9204      	str	r2, [sp, #16]
90004ce2:	f8ad a050 	strh.w	sl, [sp, #80]	; 0x50
90004ce6:	f00c fd79 	bl	900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
90004cea:	4bac      	ldr	r3, [pc, #688]	; (90004f9c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004cec:	f504 722e 	add.w	r2, r4, #696	; 0x2b8
          touchable(false),
90004cf0:	f8a4 8274 	strh.w	r8, [r4, #628]	; 0x274
90004cf4:	f8c4 3250 	str.w	r3, [r4, #592]	; 0x250
90004cf8:	f8c4 5278 	str.w	r5, [r4, #632]	; 0x278
90004cfc:	9804      	ldr	r0, [sp, #16]
90004cfe:	9205      	str	r2, [sp, #20]
90004d00:	e9c4 5595 	strd	r5, r5, [r4, #596]	; 0x254
90004d04:	e9c4 5597 	strd	r5, r5, [r4, #604]	; 0x25c
          nextSibling(0),
90004d08:	e9c4 5599 	strd	r5, r5, [r4, #612]	; 0x264
          cachedAbsX(0),
90004d0c:	e9c4 559b 	strd	r5, r5, [r4, #620]	; 0x26c
90004d10:	f00d fcca 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d14:	f504 723d 	add.w	r2, r4, #756	; 0x2f4
90004d18:	9805      	ldr	r0, [sp, #20]
90004d1a:	9206      	str	r2, [sp, #24]
90004d1c:	f00d fcc4 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d20:	f504 724c 	add.w	r2, r4, #816	; 0x330
90004d24:	9806      	ldr	r0, [sp, #24]
90004d26:	9207      	str	r2, [sp, #28]
90004d28:	f00d fcbe 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d2c:	f504 725b 	add.w	r2, r4, #876	; 0x36c
90004d30:	9807      	ldr	r0, [sp, #28]
90004d32:	9208      	str	r2, [sp, #32]
90004d34:	f00d fcb8 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d38:	f204 422c 	addw	r2, r4, #1068	; 0x42c
90004d3c:	9808      	ldr	r0, [sp, #32]
90004d3e:	9209      	str	r2, [sp, #36]	; 0x24
90004d40:	f00d fcb2 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004d44:	4b95      	ldr	r3, [pc, #596]	; (90004f9c <_ZN24screen_asteroidsViewBaseC1Ev+0x4a8>)
90004d46:	f04f 32ff 	mov.w	r2, #4294967295
          touchable(false),
90004d4a:	f8a4 83cc 	strh.w	r8, [r4, #972]	; 0x3cc
90004d4e:	f8c4 33d4 	str.w	r3, [r4, #980]	; 0x3d4
90004d52:	f504 638d 	add.w	r3, r4, #1128	; 0x468
90004d56:	f8c4 73a8 	str.w	r7, [r4, #936]	; 0x3a8
        : color(col)
90004d5a:	f8c4 53d0 	str.w	r5, [r4, #976]	; 0x3d0
90004d5e:	f8a4 83f8 	strh.w	r8, [r4, #1016]	; 0x3f8
90004d62:	f8c4 53fc 	str.w	r5, [r4, #1020]	; 0x3fc
        : x(0), y(0), width(0), height(0)
90004d66:	f8c4 5404 	str.w	r5, [r4, #1028]	; 0x404
90004d6a:	f8c4 5408 	str.w	r5, [r4, #1032]	; 0x408
90004d6e:	f8c4 540c 	str.w	r5, [r4, #1036]	; 0x40c
90004d72:	f8c4 5410 	str.w	r5, [r4, #1040]	; 0x410
          parent(0),
90004d76:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
          nextSibling(0),
90004d7a:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
          nextDrawChainElement(0),
90004d7e:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
          cachedAbsX(0),
90004d82:	f8c4 5420 	str.w	r5, [r4, #1056]	; 0x420
          touchable(false),
90004d86:	f8a4 8424 	strh.w	r8, [r4, #1060]	; 0x424
90004d8a:	f884 a3ce 	strb.w	sl, [r4, #974]	; 0x3ce
90004d8e:	e9c4 55eb 	strd	r5, r5, [r4, #940]	; 0x3ac
90004d92:	e9c4 55ed 	strd	r5, r5, [r4, #948]	; 0x3b4
          nextSibling(0),
90004d96:	e9c4 55ef 	strd	r5, r5, [r4, #956]	; 0x3bc
          cachedAbsX(0),
90004d9a:	e9c4 55f1 	strd	r5, r5, [r4, #964]	; 0x3c4
90004d9e:	e9c4 55f6 	strd	r5, r5, [r4, #984]	; 0x3d8
90004da2:	e9c4 55f8 	strd	r5, r5, [r4, #992]	; 0x3e0
          nextSibling(0),
90004da6:	e9c4 55fa 	strd	r5, r5, [r4, #1000]	; 0x3e8
          cachedAbsX(0),
90004daa:	e9c4 55fc 	strd	r5, r5, [r4, #1008]	; 0x3f0
90004dae:	f8c4 7400 	str.w	r7, [r4, #1024]	; 0x400
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
90004db2:	1d27      	adds	r7, r4, #4
90004db4:	f884 2426 	strb.w	r2, [r4, #1062]	; 0x426
        : color(col)
90004db8:	f8c4 5428 	str.w	r5, [r4, #1064]	; 0x428
90004dbc:	9809      	ldr	r0, [sp, #36]	; 0x24
90004dbe:	930a      	str	r3, [sp, #40]	; 0x28
90004dc0:	f00d fc72 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
90004dc4:	980a      	ldr	r0, [sp, #40]	; 0x28
90004dc6:	f00d fc6f 	bl	900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004dca:	f04f 32ff 	mov.w	r2, #4294967295
90004dce:	23ff      	movs	r3, #255	; 0xff
90004dd0:	4971      	ldr	r1, [pc, #452]	; (90004f98 <_ZN24screen_asteroidsViewBaseC1Ev+0x4a4>)
90004dd2:	f8c4 24e4 	str.w	r2, [r4, #1252]	; 0x4e4
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
90004dd6:	f504 609f 	add.w	r0, r4, #1272	; 0x4f8
90004dda:	4a72      	ldr	r2, [pc, #456]	; (90004fa4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b0>)
90004ddc:	f8c4 34da 	str.w	r3, [r4, #1242]	; 0x4da
        : pobject(pObject), pmemfun(pmemfun_1)
90004de0:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
90004de4:	f8c4 24a4 	str.w	r2, [r4, #1188]	; 0x4a4
90004de8:	4a6f      	ldr	r2, [pc, #444]	; (90004fa8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4b4>)
          touchable(false),
90004dea:	f8a4 84c8 	strh.w	r8, [r4, #1224]	; 0x4c8
        : x(0), y(0), width(0), height(0)
90004dee:	f8c4 54a8 	str.w	r5, [r4, #1192]	; 0x4a8
90004df2:	f8c4 54ac 	str.w	r5, [r4, #1196]	; 0x4ac
90004df6:	f8c4 54b0 	str.w	r5, [r4, #1200]	; 0x4b0
90004dfa:	f8c4 54b4 	str.w	r5, [r4, #1204]	; 0x4b4
          parent(0),
90004dfe:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
          nextSibling(0),
90004e02:	f8c4 54bc 	str.w	r5, [r4, #1212]	; 0x4bc
          nextDrawChainElement(0),
90004e06:	f8c4 54c0 	str.w	r5, [r4, #1216]	; 0x4c0
          cachedAbsX(0),
90004e0a:	f8c4 54c4 	str.w	r5, [r4, #1220]	; 0x4c4
90004e0e:	f8c4 14cc 	str.w	r1, [r4, #1228]	; 0x4cc
90004e12:	f44f 51e1 	mov.w	r1, #7200	; 0x1c20
        : color(col)
90004e16:	f8c4 54d4 	str.w	r5, [r4, #1236]	; 0x4d4
90004e1a:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004e1e:	f8c4 54e0 	str.w	r5, [r4, #1248]	; 0x4e0
              text(0)
90004e22:	f8c4 54e8 	str.w	r5, [r4, #1256]	; 0x4e8
90004e26:	f8a4 a4d0 	strh.w	sl, [r4, #1232]	; 0x4d0
90004e2a:	f8c3 2118 	str.w	r2, [r3, #280]	; 0x118
90004e2e:	4a5f      	ldr	r2, [pc, #380]	; (90004fac <_ZN24screen_asteroidsViewBaseC1Ev+0x4b8>)
90004e30:	f8c3 5124 	str.w	r5, [r3, #292]	; 0x124
90004e34:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
90004e38:	f8c3 411c 	str.w	r4, [r3, #284]	; 0x11c
90004e3c:	f00e fb4c 	bl	900134d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
        rect.x = x;
90004e40:	f8df 818c 	ldr.w	r8, [pc, #396]	; 90004fd0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4dc>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
90004e44:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
90004e48:	f104 0140 	add.w	r1, r4, #64	; 0x40
90004e4c:	4638      	mov	r0, r7
90004e4e:	6465      	str	r5, [r4, #68]	; 0x44
90004e50:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
90004e54:	66a3      	str	r3, [r4, #104]	; 0x68
90004e56:	f00a ffbb 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e5a:	4b55      	ldr	r3, [pc, #340]	; (90004fb0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4bc>)
90004e5c:	f104 016c 	add.w	r1, r4, #108	; 0x6c
90004e60:	4638      	mov	r0, r7
90004e62:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
90004e66:	e9c4 581c 	strd	r5, r8, [r4, #112]	; 0x70
90004e6a:	f00a ffb1 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004e6e:	2303      	movs	r3, #3
    icon_rock.setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
90004e70:	4658      	mov	r0, fp
90004e72:	4631      	mov	r1, r6
90004e74:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90004e78:	f00d fc3d 	bl	900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004e7c:	4b4d      	ldr	r3, [pc, #308]	; (90004fb4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c0>)
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e7e:	4629      	mov	r1, r5
90004e80:	f8df c150 	ldr.w	ip, [pc, #336]	; 90004fd4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4e0>
90004e84:	4658      	mov	r0, fp
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004e86:	f504 7875 	add.w	r8, r4, #980	; 0x3d4
90004e8a:	e9c4 c327 	strd	ip, r3, [r4, #156]	; 0x9c
    icon_rock.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90004e8e:	f00c fc60 	bl	90011752 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
90004e92:	4659      	mov	r1, fp
        visible = vis;
90004e94:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
90004e98:	4638      	mov	r0, r7
90004e9a:	f00a ff99 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
90004e9e:	f04f 131e 	mov.w	r3, #1966110	; 0x1e001e
90004ea2:	f8df e134 	ldr.w	lr, [pc, #308]	; 90004fd8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4e4>
    buttonCallback(this, &screen_asteroidsViewBase::buttonCallbackHandler)
90004ea6:	f204 42a4 	addw	r2, r4, #1188	; 0x4a4
90004eaa:	f504 7bd0 	add.w	fp, r4, #416	; 0x1a0
90004eae:	f504 7514 	add.w	r5, r4, #592	; 0x250
90004eb2:	ee08 2a90 	vmov	s17, r2
90004eb6:	e9c4 e332 	strd	lr, r3, [r4, #200]	; 0xc8
    void setOrigin(T x, T y)
    {
        CWRUtil::Q5 dxNew = CWRUtil::toQ5<T>(x);
        CWRUtil::Q5 dyNew = CWRUtil::toQ5<T>(y);

        if (dx == dxNew && dy == dyNew)
90004eba:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90004ebe:	b913      	cbnz	r3, 90004ec6 <_ZN24screen_asteroidsViewBaseC1Ev+0x3d2>
90004ec0:	f8d4 30f8 	ldr.w	r3, [r4, #248]	; 0xf8
90004ec4:	b12b      	cbz	r3, 90004ed2 <_ZN24screen_asteroidsViewBaseC1Ev+0x3de>
        {
            return;
        }

        dx = dxNew;
90004ec6:	2300      	movs	r3, #0
        dy = dyNew;

        updateAbstractShapeCache();
90004ec8:	4648      	mov	r0, r9
        dy = dyNew;
90004eca:	e9c4 333d 	strd	r3, r3, [r4, #244]	; 0xf4
        updateAbstractShapeCache();
90004ece:	f00c f9e7 	bl	900112a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
     * @note The area containing the AbstractShape is not invalidated.
     */
    template <typename T>
    void setScale(T newXScale, T newYScale)
    {
        xScale = CWRUtil::toQ10<T>(newXScale);
90004ed2:	f44f 6380 	mov.w	r3, #1024	; 0x400
        yScale = CWRUtil::toQ10<T>(newYScale);
        updateAbstractShapeCache();
90004ed6:	4648      	mov	r0, r9
        yScale = CWRUtil::toQ10<T>(newYScale);
90004ed8:	e9c4 3340 	strd	r3, r3, [r4, #256]	; 0x100
        updateAbstractShapeCache();
90004edc:	f00c f9e0 	bl	900112a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        if (shapeAngle != angleQ5)
90004ee0:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
90004ee4:	b12b      	cbz	r3, 90004ef2 <_ZN24screen_asteroidsViewBaseC1Ev+0x3fe>
            shapeAngle = angleQ5;
90004ee6:	2300      	movs	r3, #0
            updateAbstractShapeCache();
90004ee8:	4648      	mov	r0, r9
            shapeAngle = angleQ5;
90004eea:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
            updateAbstractShapeCache();
90004eee:	f00c f9d7 	bl	900112a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
        canvasPainter = &painter;
90004ef2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
            xCorner[i] = x, yCorner[i] = y;
90004ef4:	f44f 7270 	mov.w	r2, #960	; 0x3c0
90004ef8:	f04f 0a00 	mov.w	sl, #0
        updateAbstractShapeCache();
90004efc:	4648      	mov	r0, r9
90004efe:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
90004f02:	f04f 33ff 	mov.w	r3, #4294967295
90004f06:	f8c4 2114 	str.w	r2, [r4, #276]	; 0x114
90004f0a:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
90004f0e:	f8a4 3150 	strh.w	r3, [r4, #336]	; 0x150
90004f12:	e9c4 2248 	strd	r2, r2, [r4, #288]	; 0x120
90004f16:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
90004f1a:	e9c4 aa46 	strd	sl, sl, [r4, #280]	; 0x118
90004f1e:	f8c4 2110 	str.w	r2, [r4, #272]	; 0x110
90004f22:	f00c f9bd 	bl	900112a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>
90004f26:	4649      	mov	r1, r9
90004f28:	4638      	mov	r0, r7
    lbl_score.setXY(338, 3);
90004f2a:	f504 79aa 	add.w	r9, r4, #340	; 0x154
90004f2e:	f00a ff4f 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004f32:	4921      	ldr	r1, [pc, #132]	; (90004fb8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4c4>)
        setX(x);
90004f34:	f8d4 2154 	ldr.w	r2, [r4, #340]	; 0x154
        color = newColor;
90004f38:	f04f 33ff 	mov.w	r3, #4294967295
        linespace = space;
90004f3c:	f8a4 a188 	strh.w	sl, [r4, #392]	; 0x188
        boundingArea = calculateBoundingArea();
90004f40:	f8d2 2084 	ldr.w	r2, [r2, #132]	; 0x84
        rect.x = x;
90004f44:	f8c4 1158 	str.w	r1, [r4, #344]	; 0x158
90004f48:	491c      	ldr	r1, [pc, #112]	; (90004fbc <_ZN24screen_asteroidsViewBaseC1Ev+0x4c8>)
        color = newColor;
90004f4a:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
90004f4e:	428a      	cmp	r2, r1
90004f50:	f040 81e5 	bne.w	9000531e <_ZN24screen_asteroidsViewBaseC1Ev+0x82a>
        boundingArea = calculateBoundingArea();
90004f54:	f8c4 a198 	str.w	sl, [r4, #408]	; 0x198
90004f58:	e9c4 a364 	strd	sl, r3, [r4, #400]	; 0x190
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004f5c:	4b18      	ldr	r3, [pc, #96]	; (90004fc0 <_ZN24screen_asteroidsViewBaseC1Ev+0x4cc>)
    Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%s", touchgfx::TypedText(T_SCORE_VALUE).getText());
90004f5e:	f204 4aec 	addw	sl, r4, #1260	; 0x4ec
90004f62:	681b      	ldr	r3, [r3, #0]
90004f64:	2b00      	cmp	r3, #0
90004f66:	f000 81ec 	beq.w	90005342 <_ZN24screen_asteroidsViewBaseC1Ev+0x84e>
        return typedTextId < numberOfTypedTexts;
90004f6a:	4b16      	ldr	r3, [pc, #88]	; (90004fc4 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004f6c:	881b      	ldrh	r3, [r3, #0]
90004f6e:	2b01      	cmp	r3, #1
90004f70:	f240 81e1 	bls.w	90005336 <_ZN24screen_asteroidsViewBaseC1Ev+0x842>
        return texts->getText(typedTextId);
90004f74:	4b14      	ldr	r3, [pc, #80]	; (90004fc8 <_ZN24screen_asteroidsViewBaseC1Ev+0x4d4>)
90004f76:	2101      	movs	r1, #1
90004f78:	6818      	ldr	r0, [r3, #0]
90004f7a:	f7ff fbcb 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
90004f7e:	4a13      	ldr	r2, [pc, #76]	; (90004fcc <_ZN24screen_asteroidsViewBaseC1Ev+0x4d8>)
90004f80:	4603      	mov	r3, r0
90004f82:	2106      	movs	r1, #6
90004f84:	4650      	mov	r0, sl
90004f86:	f013 f84d 	bl	90018024 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    lbl_score.resizeToCurrentText();
90004f8a:	4648      	mov	r0, r9
90004f8c:	e026      	b.n	90004fdc <_ZN24screen_asteroidsViewBaseC1Ev+0x4e8>
90004f8e:	bf00      	nop
90004f90:	900024a1 	.word	0x900024a1
90004f94:	9002a25c 	.word	0x9002a25c
90004f98:	90028f64 	.word	0x90028f64
90004f9c:	9002a19c 	.word	0x9002a19c
90004fa0:	90029a78 	.word	0x90029a78
90004fa4:	9002a53c 	.word	0x9002a53c
90004fa8:	90029b9c 	.word	0x90029b9c
90004fac:	900049ad 	.word	0x900049ad
90004fb0:	ff333333 	.word	0xff333333
90004fb4:	001d0022 	.word	0x001d0022
90004fb8:	00030152 	.word	0x00030152
90004fbc:	900047d9 	.word	0x900047d9
90004fc0:	240235d4 	.word	0x240235d4
90004fc4:	240235d8 	.word	0x240235d8
90004fc8:	240235e0 	.word	0x240235e0
90004fcc:	90029a6c 	.word	0x90029a6c
90004fd0:	011001e0 	.word	0x011001e0
90004fd4:	004f011d 	.word	0x004f011d
90004fd8:	00e300e1 	.word	0x00e300e1
        wc1 = value;
90004fdc:	f8c4 a19c 	str.w	sl, [r4, #412]	; 0x19c
        : typedTextId(id)
90004fe0:	f04f 0a02 	mov.w	sl, #2
90004fe4:	f00d f92c 	bl	90012240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
90004fe8:	4bd9      	ldr	r3, [pc, #868]	; (90005350 <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
    lbl_score.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W1MR));
90004fea:	4631      	mov	r1, r6
90004fec:	4648      	mov	r0, r9
90004fee:	9314      	str	r3, [sp, #80]	; 0x50
90004ff0:	f8ad a054 	strh.w	sl, [sp, #84]	; 0x54
90004ff4:	f00d f944 	bl	90012280 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004ff8:	4649      	mov	r1, r9
90004ffa:	4638      	mov	r0, r7
90004ffc:	f00a fee8 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005000:	4ad4      	ldr	r2, [pc, #848]	; (90005354 <_ZN24screen_asteroidsViewBaseC1Ev+0x860>)
90005002:	4bd5      	ldr	r3, [pc, #852]	; (90005358 <_ZN24screen_asteroidsViewBaseC1Ev+0x864>)
90005004:	f04f 0904 	mov.w	r9, #4
    icon_heart1.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90005008:	4631      	mov	r1, r6
9000500a:	ee18 0a10 	vmov	r0, s16
9000500e:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90005012:	e9c4 2369 	strd	r2, r3, [r4, #420]	; 0x1a4
90005016:	f00d fb6e 	bl	900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000501a:	4bd0      	ldr	r3, [pc, #832]	; (9000535c <_ZN24screen_asteroidsViewBaseC1Ev+0x868>)
9000501c:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005020:	ee18 0a10 	vmov	r0, s16
90005024:	2100      	movs	r1, #0
90005026:	e9c4 3274 	strd	r3, r2, [r4, #464]	; 0x1d0
9000502a:	f00c fb92 	bl	90011752 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart1);
9000502e:	ee18 1a10 	vmov	r1, s16
90005032:	4658      	mov	r0, fp
90005034:	f00a fecc 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    icon_heart2.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
90005038:	ed9d 8a02 	vldr	s16, [sp, #8]
9000503c:	4631      	mov	r1, r6
9000503e:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
90005042:	ee18 0a10 	vmov	r0, s16
90005046:	f00d fb56 	bl	900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
9000504a:	4bc5      	ldr	r3, [pc, #788]	; (90005360 <_ZN24screen_asteroidsViewBaseC1Ev+0x86c>)
9000504c:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90005050:	ee18 0a10 	vmov	r0, s16
90005054:	2100      	movs	r1, #0
90005056:	e9c4 327f 	strd	r3, r2, [r4, #508]	; 0x1fc
9000505a:	f00c fb7a 	bl	90011752 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart2);
9000505e:	ee18 1a10 	vmov	r1, s16
90005062:	4658      	mov	r0, fp
90005064:	f00a feb4 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005068:	f8ad 9050 	strh.w	r9, [sp, #80]	; 0x50
    icon_heart3.setBitmap(touchgfx::Bitmap(BITMAP_HEART_ICON_ID));
9000506c:	f8dd 900c 	ldr.w	r9, [sp, #12]
90005070:	4631      	mov	r1, r6
90005072:	4648      	mov	r0, r9
90005074:	f00d fb3f 	bl	900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90005078:	4bba      	ldr	r3, [pc, #744]	; (90005364 <_ZN24screen_asteroidsViewBaseC1Ev+0x870>)
9000507a:	f04f 1214 	mov.w	r2, #1310740	; 0x140014
    icon_heart3.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
9000507e:	4648      	mov	r0, r9
90005080:	2100      	movs	r1, #0
90005082:	e9c4 328a 	strd	r3, r2, [r4, #552]	; 0x228
90005086:	f00c fb64 	bl	90011752 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
    container_health.add(icon_heart3);
9000508a:	4649      	mov	r1, r9
9000508c:	4658      	mov	r0, fp
9000508e:	f04f 0901 	mov.w	r9, #1
90005092:	f00a fe9d 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005096:	4659      	mov	r1, fp
90005098:	4638      	mov	r0, r7
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
9000509a:	f06f 1b06 	mvn.w	fp, #393222	; 0x60006
9000509e:	f00a fe97 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050a2:	49b1      	ldr	r1, [pc, #708]	; (90005368 <_ZN24screen_asteroidsViewBaseC1Ev+0x874>)
900050a4:	4bb1      	ldr	r3, [pc, #708]	; (9000536c <_ZN24screen_asteroidsViewBaseC1Ev+0x878>)
    btn_right.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
900050a6:	aa13      	add	r2, sp, #76	; 0x4c
900050a8:	9600      	str	r6, [sp, #0]
900050aa:	ed9d 8a04 	vldr	s16, [sp, #16]
900050ae:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900050b2:	ee18 0a10 	vmov	r0, s16
900050b6:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900050ba:	e9c4 1395 	strd	r1, r3, [r4, #596]	; 0x254
900050be:	4bac      	ldr	r3, [pc, #688]	; (90005370 <_ZN24screen_asteroidsViewBaseC1Ev+0x87c>)
900050c0:	a911      	add	r1, sp, #68	; 0x44
900050c2:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
900050c6:	2308      	movs	r3, #8
900050c8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900050cc:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900050d0:	4613      	mov	r3, r2
900050d2:	aa12      	add	r2, sp, #72	; 0x48
900050d4:	f00d fa42 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_right);
900050d8:	ee18 1a10 	vmov	r1, s16
900050dc:	4628      	mov	r0, r5
900050de:	f8c4 b2b4 	str.w	fp, [r4, #692]	; 0x2b4
900050e2:	f00a fe75 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900050e6:	4ba3      	ldr	r3, [pc, #652]	; (90005374 <_ZN24screen_asteroidsViewBaseC1Ev+0x880>)
    btn_down.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_DOWN_50_50_E8F6FB_SVG_ID));
900050e8:	ed9d 8a05 	vldr	s16, [sp, #20]
900050ec:	aa13      	add	r2, sp, #76	; 0x4c
900050ee:	9600      	str	r6, [sp, #0]
900050f0:	a911      	add	r1, sp, #68	; 0x44
900050f2:	f8c4 32bc 	str.w	r3, [r4, #700]	; 0x2bc
900050f6:	2306      	movs	r3, #6
900050f8:	ee18 0a10 	vmov	r0, s16
900050fc:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90005100:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005104:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005108:	4613      	mov	r3, r2
9000510a:	aa12      	add	r2, sp, #72	; 0x48
9000510c:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
90005110:	f00d fa24 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005114:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_down);
90005118:	ee18 1a10 	vmov	r1, s16
9000511c:	4628      	mov	r0, r5
9000511e:	f8c4 22f0 	str.w	r2, [r4, #752]	; 0x2f0
90005122:	f00a fe55 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005126:	4b94      	ldr	r3, [pc, #592]	; (90005378 <_ZN24screen_asteroidsViewBaseC1Ev+0x884>)
    btn_left.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
90005128:	ed9d 8a06 	vldr	s16, [sp, #24]
9000512c:	aa13      	add	r2, sp, #76	; 0x4c
9000512e:	9600      	str	r6, [sp, #0]
90005130:	a911      	add	r1, sp, #68	; 0x44
90005132:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
90005136:	2307      	movs	r3, #7
90005138:	ee18 0a10 	vmov	r0, s16
9000513c:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
90005140:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005144:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005148:	4613      	mov	r3, r2
9000514a:	aa12      	add	r2, sp, #72	; 0x48
9000514c:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
90005150:	f00d fa04 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_controls.add(btn_left);
90005154:	ee18 1a10 	vmov	r1, s16
90005158:	4628      	mov	r0, r5
9000515a:	f8c4 b32c 	str.w	fp, [r4, #812]	; 0x32c
9000515e:	f00a fe37 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005162:	f240 137b 	movw	r3, #379	; 0x17b
    btn_up.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_UP_50_50_E8F6FB_SVG_ID));
90005166:	f8dd b01c 	ldr.w	fp, [sp, #28]
9000516a:	aa13      	add	r2, sp, #76	; 0x4c
9000516c:	9600      	str	r6, [sp, #0]
9000516e:	a911      	add	r1, sp, #68	; 0x44
90005170:	f8c4 3334 	str.w	r3, [r4, #820]	; 0x334
90005174:	2309      	movs	r3, #9
90005176:	4658      	mov	r0, fp
90005178:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
9000517c:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005180:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005184:	4613      	mov	r3, r2
90005186:	aa12      	add	r2, sp, #72	; 0x48
90005188:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
9000518c:	f00d f9e6 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
90005190:	f06f 1205 	mvn.w	r2, #327685	; 0x50005
    container_controls.add(btn_up);
90005194:	4659      	mov	r1, fp
90005196:	4628      	mov	r0, r5
90005198:	f8c4 2368 	str.w	r2, [r4, #872]	; 0x368
9000519c:	f00a fe18 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051a0:	f44f 1310 	mov.w	r3, #2359296	; 0x240000
    btn_shoot.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_MAPS_LOCAL_FIRE_DEPARTMENT_30_30_E8F6FB_SVG_ID));
900051a4:	aa13      	add	r2, sp, #76	; 0x4c
900051a6:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
900051aa:	9600      	str	r6, [sp, #0]
900051ac:	a911      	add	r1, sp, #68	; 0x44
900051ae:	f8dd 9020 	ldr.w	r9, [sp, #32]
900051b2:	f8c4 3370 	str.w	r3, [r4, #880]	; 0x370
900051b6:	230a      	movs	r3, #10
900051b8:	4648      	mov	r0, r9
900051ba:	f8ad a048 	strh.w	sl, [sp, #72]	; 0x48
900051be:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
900051c2:	f04f 3aff 	mov.w	sl, #4294967295
900051c6:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
900051ca:	4613      	mov	r3, r2
900051cc:	aa12      	add	r2, sp, #72	; 0x48
900051ce:	f00d f9c5 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
900051d2:	f04f 1302 	mov.w	r3, #131074	; 0x20002
    container_controls.add(btn_shoot);
900051d6:	4649      	mov	r1, r9
900051d8:	4628      	mov	r0, r5
900051da:	f8c4 33a4 	str.w	r3, [r4, #932]	; 0x3a4
    btn_retry.setAction(buttonCallback);
900051de:	f242 1918 	movw	r9, #8472	; 0x2118
    container_controls.add(btn_shoot);
900051e2:	f00a fdf5 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900051e6:	4629      	mov	r1, r5
900051e8:	4638      	mov	r0, r7
        visible = vis;
900051ea:	2500      	movs	r5, #0
900051ec:	f00a fdf0 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        rect.x = x;
900051f0:	f04f 1304 	mov.w	r3, #262148	; 0x40004
900051f4:	4861      	ldr	r0, [pc, #388]	; (9000537c <_ZN24screen_asteroidsViewBaseC1Ev+0x888>)
900051f6:	f504 716a 	add.w	r1, r4, #936	; 0x3a8
900051fa:	f8c4 a3d0 	str.w	sl, [r4, #976]	; 0x3d0
    btn_retry.setAction(buttonCallback);
900051fe:	44a1      	add	r9, r4
        visible = vis;
90005200:	f884 53cd 	strb.w	r5, [r4, #973]	; 0x3cd
        rect.x = x;
90005204:	e9c4 03eb 	strd	r0, r3, [r4, #940]	; 0x3ac
90005208:	4638      	mov	r0, r7
9000520a:	f00a fde1 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000520e:	4b5c      	ldr	r3, [pc, #368]	; (90005380 <_ZN24screen_asteroidsViewBaseC1Ev+0x88c>)
    container_game_over.add(bg_light_grey);
90005210:	f504 6180 	add.w	r1, r4, #1024	; 0x400
90005214:	4640      	mov	r0, r8
90005216:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
9000521a:	4b5a      	ldr	r3, [pc, #360]	; (90005384 <_ZN24screen_asteroidsViewBaseC1Ev+0x890>)
9000521c:	f8c4 53d8 	str.w	r5, [r4, #984]	; 0x3d8
90005220:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
90005224:	4b58      	ldr	r3, [pc, #352]	; (90005388 <_ZN24screen_asteroidsViewBaseC1Ev+0x894>)
        visible = vis;
90005226:	f884 53f9 	strb.w	r5, [r4, #1017]	; 0x3f9
        rect.x = x;
9000522a:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
9000522e:	4b57      	ldr	r3, [pc, #348]	; (9000538c <_ZN24screen_asteroidsViewBaseC1Ev+0x898>)
90005230:	f8c4 3428 	str.w	r3, [r4, #1064]	; 0x428
90005234:	f00a fdcc 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005238:	4b55      	ldr	r3, [pc, #340]	; (90005390 <_ZN24screen_asteroidsViewBaseC1Ev+0x89c>)
    btn_retry.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_CACHED_40_40_E8F6FB_SVG_ID));
9000523a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9000523e:	aa13      	add	r2, sp, #76	; 0x4c
90005240:	9600      	str	r6, [sp, #0]
90005242:	a911      	add	r1, sp, #68	; 0x44
90005244:	f8c4 3430 	str.w	r3, [r4, #1072]	; 0x430
90005248:	2305      	movs	r3, #5
9000524a:	4658      	mov	r0, fp
9000524c:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
90005250:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
90005254:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
90005258:	4613      	mov	r3, r2
9000525a:	aa12      	add	r2, sp, #72	; 0x48
9000525c:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
90005260:	f00d f97c 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_retry);
90005264:	4659      	mov	r1, fp
90005266:	4640      	mov	r0, r8
90005268:	f8c4 a464 	str.w	sl, [r4, #1124]	; 0x464
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
9000526c:	f8c4 9454 	str.w	r9, [r4, #1108]	; 0x454
90005270:	f00a fdae 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005274:	4847      	ldr	r0, [pc, #284]	; (90005394 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a0>)
    btn_back.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_40_40_E8F6FB_SVG_ID));
90005276:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
9000527a:	aa13      	add	r2, sp, #76	; 0x4c
9000527c:	9600      	str	r6, [sp, #0]
9000527e:	a911      	add	r1, sp, #68	; 0x44
90005280:	f8c4 046c 	str.w	r0, [r4, #1132]	; 0x46c
90005284:	200b      	movs	r0, #11
90005286:	4613      	mov	r3, r2
90005288:	aa12      	add	r2, sp, #72	; 0x48
9000528a:	f8ad 004c 	strh.w	r0, [sp, #76]	; 0x4c
9000528e:	f8ad 0050 	strh.w	r0, [sp, #80]	; 0x50
90005292:	4658      	mov	r0, fp
90005294:	f8ad 5044 	strh.w	r5, [sp, #68]	; 0x44
90005298:	f8ad 5048 	strh.w	r5, [sp, #72]	; 0x48
9000529c:	f00d f95e 	bl	9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    container_game_over.add(btn_back);
900052a0:	4659      	mov	r1, fp
900052a2:	4640      	mov	r0, r8
900052a4:	f8c4 a4a0 	str.w	sl, [r4, #1184]	; 0x4a0
900052a8:	ee18 aa90 	vmov	sl, s17
900052ac:	f8c4 9490 	str.w	r9, [r4, #1168]	; 0x490
900052b0:	f10d 0930 	add.w	r9, sp, #48	; 0x30
900052b4:	f00a fd8c 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052b8:	4b37      	ldr	r3, [pc, #220]	; (90005398 <_ZN24screen_asteroidsViewBaseC1Ev+0x8a4>)
900052ba:	ee18 1a90 	vmov	r1, s17
900052be:	4648      	mov	r0, r9
900052c0:	f8c4 34a8 	str.w	r3, [r4, #1192]	; 0x4a8
        color = newColor;
900052c4:	4b35      	ldr	r3, [pc, #212]	; (9000539c <_ZN24screen_asteroidsViewBaseC1Ev+0x8a8>)
        linespace = space;
900052c6:	f8a4 54d8 	strh.w	r5, [r4, #1240]	; 0x4d8
        color = newColor;
900052ca:	f8c4 34d4 	str.w	r3, [r4, #1236]	; 0x4d4
        boundingArea = calculateBoundingArea();
900052ce:	f00c fd2f 	bl	90011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900052d2:	4b1f      	ldr	r3, [pc, #124]	; (90005350 <_ZN24screen_asteroidsViewBaseC1Ev+0x85c>)
900052d4:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
900052d8:	9314      	str	r3, [sp, #80]	; 0x50
900052da:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
900052de:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
900052e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_over.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DW7K));
900052e6:	4631      	mov	r1, r6
900052e8:	ee18 0a90 	vmov	r0, s17
900052ec:	f00c ffc8 	bl	90012280 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    container_game_over.add(lbl_over);
900052f0:	ee18 1a90 	vmov	r1, s17
900052f4:	4640      	mov	r0, r8
900052f6:	f00a fd6b 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900052fa:	4638      	mov	r0, r7
900052fc:	4641      	mov	r1, r8
900052fe:	f00a fd67 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005302:	4620      	mov	r0, r4
90005304:	b017      	add	sp, #92	; 0x5c
90005306:	ecbd 8b02 	vpop	{d8}
9000530a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        return instance->lcdRef;
9000530e:	6898      	ldr	r0, [r3, #8]
90005310:	4d23      	ldr	r5, [pc, #140]	; (900053a0 <_ZN24screen_asteroidsViewBaseC1Ev+0x8ac>)
90005312:	6803      	ldr	r3, [r0, #0]
90005314:	6ada      	ldr	r2, [r3, #44]	; 0x2c
90005316:	42aa      	cmp	r2, r5
90005318:	f43f ac8c 	beq.w	90004c34 <_ZN24screen_asteroidsViewBaseC1Ev+0x140>
9000531c:	e44f      	b.n	90004bbe <_ZN24screen_asteroidsViewBaseC1Ev+0xca>
9000531e:	f10d 0a30 	add.w	sl, sp, #48	; 0x30
90005322:	4649      	mov	r1, r9
90005324:	4650      	mov	r0, sl
90005326:	4790      	blx	r2
90005328:	f504 73c8 	add.w	r3, r4, #400	; 0x190
9000532c:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
90005330:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90005334:	e612      	b.n	90004f5c <_ZN24screen_asteroidsViewBaseC1Ev+0x468>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90005336:	4b1b      	ldr	r3, [pc, #108]	; (900053a4 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b0>)
90005338:	2161      	movs	r1, #97	; 0x61
9000533a:	4a1b      	ldr	r2, [pc, #108]	; (900053a8 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
9000533c:	481b      	ldr	r0, [pc, #108]	; (900053ac <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>)
9000533e:	f020 ff67 	bl	90026210 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005342:	4b1b      	ldr	r3, [pc, #108]	; (900053b0 <_ZN24screen_asteroidsViewBaseC1Ev+0x8bc>)
90005344:	2160      	movs	r1, #96	; 0x60
90005346:	4a18      	ldr	r2, [pc, #96]	; (900053a8 <_ZN24screen_asteroidsViewBaseC1Ev+0x8b4>)
90005348:	4818      	ldr	r0, [pc, #96]	; (900053ac <_ZN24screen_asteroidsViewBaseC1Ev+0x8b8>)
9000534a:	f020 ff61 	bl	90026210 <__assert_func>
9000534e:	bf00      	nop
90005350:	90028f64 	.word	0x90028f64
90005354:	000400e9 	.word	0x000400e9
90005358:	0014005c 	.word	0x0014005c
9000535c:	00010048 	.word	0x00010048
90005360:	00010031 	.word	0x00010031
90005364:	0001001a 	.word	0x0001001a
90005368:	009e000f 	.word	0x009e000f
9000536c:	006c01c3 	.word	0x006c01c3
90005370:	0024019f 	.word	0x0024019f
90005374:	0048017b 	.word	0x0048017b
90005378:	00240157 	.word	0x00240157
9000537c:	00db00ee 	.word	0x00db00ee
90005380:	011001e0 	.word	0x011001e0
90005384:	0049005d 	.word	0x0049005d
90005388:	007e0127 	.word	0x007e0127
9000538c:	ff828282 	.word	0xff828282
90005390:	00890112 	.word	0x00890112
90005394:	008900ab 	.word	0x008900ab
90005398:	00500082 	.word	0x00500082
9000539c:	ff851717 	.word	0xff851717
900053a0:	900024a1 	.word	0x900024a1
900053a4:	900298f4 	.word	0x900298f4
900053a8:	90029a34 	.word	0x90029a34
900053ac:	900298ac 	.word	0x900298ac
900053b0:	9002982c 	.word	0x9002982c

900053b4 <_ZN8touchgfx6Screen15afterTransitionEv>:
    }
900053b4:	4770      	bx	lr
900053b6:	bf00      	nop

900053b8 <_ZN26screen_game_selectViewBaseD1Ev>:
}

screen_game_selectViewBase::~screen_game_selectViewBase()
{

}
900053b8:	4770      	bx	lr
900053ba:	bf00      	nop

900053bc <_ZN26screen_game_selectViewBase11setupScreenEv>:

void screen_game_selectViewBase::setupScreen()
{

}
900053bc:	4770      	bx	lr
900053be:	bf00      	nop

900053c0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
900053c0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900053c4:	b133      	cbz	r3, 900053d4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>
900053c6:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900053c8:	f100 0374 	add.w	r3, r0, #116	; 0x74
900053cc:	65c2      	str	r2, [r0, #92]	; 0x5c
900053ce:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
900053d0:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
900053d2:	4770      	bx	lr
900053d4:	6e82      	ldr	r2, [r0, #104]	; 0x68
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
900053d6:	f100 0370 	add.w	r3, r0, #112	; 0x70
900053da:	65c2      	str	r2, [r0, #92]	; 0x5c
900053dc:	681b      	ldr	r3, [r3, #0]
900053de:	6603      	str	r3, [r0, #96]	; 0x60
    }
900053e0:	4770      	bx	lr
900053e2:	bf00      	nop

900053e4 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900053e4:	4770      	bx	lr
900053e6:	bf00      	nop

900053e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
900053e8:	4770      	bx	lr
900053ea:	bf00      	nop

900053ec <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
900053ec:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900053ee:	68c2      	ldr	r2, [r0, #12]
    virtual void execute(T1 t1)
900053f0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
900053f2:	6844      	ldr	r4, [r0, #4]
900053f4:	f012 0f01 	tst.w	r2, #1
900053f8:	eb04 0062 	add.w	r0, r4, r2, asr #1
900053fc:	d103      	bne.n	90005406 <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x1a>
900053fe:	689b      	ldr	r3, [r3, #8]
    }
90005400:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005404:	4718      	bx	r3
90005406:	ea4f 0c62 	mov.w	ip, r2, asr #1
9000540a:	689b      	ldr	r3, [r3, #8]
9000540c:	f854 200c 	ldr.w	r2, [r4, ip]
    }
90005410:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005414:	58d3      	ldr	r3, [r2, r3]
90005416:	4718      	bx	r3

90005418 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005418:	6843      	ldr	r3, [r0, #4]
9000541a:	b13b      	cbz	r3, 9000542c <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
9000541c:	6883      	ldr	r3, [r0, #8]
9000541e:	b10b      	cbz	r3, 90005424 <_ZNK8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0xc>
90005420:	2001      	movs	r0, #1
    }
90005422:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90005424:	68c0      	ldr	r0, [r0, #12]
90005426:	f000 0001 	and.w	r0, r0, #1
9000542a:	4770      	bx	lr
9000542c:	4618      	mov	r0, r3
9000542e:	4770      	bx	lr

90005430 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90005430:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
90005434:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
90005438:	4770      	bx	lr
9000543a:	bf00      	nop

9000543c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
9000543c:	b510      	push	{r4, lr}
9000543e:	4604      	mov	r4, r0
90005440:	2178      	movs	r1, #120	; 0x78
90005442:	f020 feb6 	bl	900261b2 <_ZdlPvj>
90005446:	4620      	mov	r0, r4
90005448:	bd10      	pop	{r4, pc}
9000544a:	bf00      	nop

9000544c <_ZN8touchgfx8CallbackI26screen_game_selectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
9000544c:	b510      	push	{r4, lr}
9000544e:	4604      	mov	r4, r0
90005450:	2110      	movs	r1, #16
90005452:	f020 feae 	bl	900261b2 <_ZdlPvj>
90005456:	4620      	mov	r0, r4
90005458:	bd10      	pop	{r4, pc}
9000545a:	bf00      	nop

9000545c <_ZN26screen_game_selectViewBaseD0Ev>:
screen_game_selectViewBase::~screen_game_selectViewBase()
9000545c:	b510      	push	{r4, lr}
9000545e:	4604      	mov	r4, r0
}
90005460:	f44f 71ca 	mov.w	r1, #404	; 0x194
90005464:	f020 fea5 	bl	900261b2 <_ZdlPvj>
90005468:	4620      	mov	r0, r4
9000546a:	bd10      	pop	{r4, pc}

9000546c <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void screen_game_selectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &_btn_asteroids)
9000546c:	30c4      	adds	r0, #196	; 0xc4
9000546e:	4288      	cmp	r0, r1
90005470:	d000      	beq.n	90005474 <_ZN26screen_game_selectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x8>
90005472:	4770      	bx	lr
{
90005474:	b508      	push	{r3, lr}
    virtual ~screen_game_selectViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
90005476:	f00f fd4f 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
        //game_asteroids
        //When _btn_asteroids clicked change screen to screen_asteroids
        //Go to screen_asteroids with screen transition towards East
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
    }
}
9000547a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoscreen_asteroidsScreenSlideTransitionEast();
9000547e:	f7fe bf2d 	b.w	900042dc <_ZN23FrontendApplicationBase45gotoscreen_asteroidsScreenSlideTransitionEastEv>
90005482:	bf00      	nop

90005484 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
     *
     * @see setAction
     */
    virtual void executeAction()
    {
        if (action && action->isValid())
90005484:	6b03      	ldr	r3, [r0, #48]	; 0x30
90005486:	b30b      	cbz	r3, 900054cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x48>
90005488:	681a      	ldr	r2, [r3, #0]
    virtual void executeAction()
9000548a:	b570      	push	{r4, r5, r6, lr}
        if (action && action->isValid())
9000548c:	68d1      	ldr	r1, [r2, #12]
9000548e:	4604      	mov	r4, r0
90005490:	481a      	ldr	r0, [pc, #104]	; (900054fc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x78>)
90005492:	4281      	cmp	r1, r0
90005494:	d11b      	bne.n	900054ce <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x4a>
        return (pobject != 0) && (pmemfun != 0);
90005496:	6858      	ldr	r0, [r3, #4]
90005498:	b180      	cbz	r0, 900054bc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
9000549a:	6899      	ldr	r1, [r3, #8]
9000549c:	b1f1      	cbz	r1, 900054dc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x58>
        {
            action->execute(*this);
9000549e:	6892      	ldr	r2, [r2, #8]
900054a0:	4917      	ldr	r1, [pc, #92]	; (90005500 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900054a2:	428a      	cmp	r2, r1
900054a4:	d124      	bne.n	900054f0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900054a6:	68da      	ldr	r2, [r3, #12]
900054a8:	6858      	ldr	r0, [r3, #4]
900054aa:	eb00 0062 	add.w	r0, r0, r2, asr #1
900054ae:	07d2      	lsls	r2, r2, #31
900054b0:	d405      	bmi.n	900054be <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3a>
900054b2:	4621      	mov	r1, r4
900054b4:	689b      	ldr	r3, [r3, #8]
        }
    }
900054b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900054ba:	4718      	bx	r3
900054bc:	bd70      	pop	{r4, r5, r6, pc}
900054be:	6899      	ldr	r1, [r3, #8]
900054c0:	6803      	ldr	r3, [r0, #0]
900054c2:	585b      	ldr	r3, [r3, r1]
900054c4:	4621      	mov	r1, r4
900054c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900054ca:	4718      	bx	r3
900054cc:	4770      	bx	lr
        if (action && action->isValid())
900054ce:	4618      	mov	r0, r3
900054d0:	4788      	blx	r1
900054d2:	2800      	cmp	r0, #0
900054d4:	d0f2      	beq.n	900054bc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
            action->execute(*this);
900054d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
900054d8:	681a      	ldr	r2, [r3, #0]
900054da:	e7e0      	b.n	9000549e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1a>
        return (pobject != 0) && (pmemfun != 0);
900054dc:	68dd      	ldr	r5, [r3, #12]
900054de:	07ee      	lsls	r6, r5, #31
900054e0:	d5ec      	bpl.n	900054bc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x38>
900054e2:	6892      	ldr	r2, [r2, #8]
900054e4:	4e06      	ldr	r6, [pc, #24]	; (90005500 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x7c>)
900054e6:	42b2      	cmp	r2, r6
900054e8:	d102      	bne.n	900054f0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x6c>
        (pobject->*pmemfun)(t1);
900054ea:	eb00 0065 	add.w	r0, r0, r5, asr #1
900054ee:	e7e7      	b.n	900054c0 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x3c>
900054f0:	4621      	mov	r1, r4
900054f2:	4618      	mov	r0, r3
    }
900054f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            action->execute(*this);
900054f8:	4710      	bx	r2
900054fa:	bf00      	nop
900054fc:	90005419 	.word	0x90005419
90005500:	900053ed 	.word	0x900053ed

90005504 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
90005504:	790b      	ldrb	r3, [r1, #4]
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005506:	1e1a      	subs	r2, r3, #0
    virtual void handleClickEvent(const ClickEvent& event)
90005508:	b570      	push	{r4, r5, r6, lr}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
9000550a:	bf18      	it	ne
9000550c:	2201      	movne	r2, #1
        return pressed;
9000550e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    virtual void handleClickEvent(const ClickEvent& event)
90005512:	460d      	mov	r5, r1
90005514:	4604      	mov	r4, r0
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
90005516:	42b2      	cmp	r2, r6
90005518:	d004      	beq.n	90005524 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x20>
        {
            setPressed(newPressedValue);
            invalidate();
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
9000551a:	b116      	cbz	r6, 90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000551c:	792b      	ldrb	r3, [r5, #4]
9000551e:	2b01      	cmp	r3, #1
90005520:	d00e      	beq.n	90005540 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
90005522:	bd70      	pop	{r4, r5, r6, pc}
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
90005524:	fab3 f383 	clz	r3, r3
90005528:	095b      	lsrs	r3, r3, #5
9000552a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
        handlePressedUpdated();
9000552e:	6803      	ldr	r3, [r0, #0]
90005530:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
90005534:	4798      	blx	r3
            invalidate();
90005536:	6823      	ldr	r3, [r4, #0]
90005538:	4620      	mov	r0, r4
9000553a:	695b      	ldr	r3, [r3, #20]
9000553c:	4798      	blx	r3
9000553e:	e7ec      	b.n	9000551a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x16>
            executeAction();
90005540:	6823      	ldr	r3, [r4, #0]
90005542:	4a20      	ldr	r2, [pc, #128]	; (900055c4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc0>)
90005544:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90005548:	4293      	cmp	r3, r2
9000554a:	d127      	bne.n	9000559c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x98>
        if (action && action->isValid())
9000554c:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000554e:	2b00      	cmp	r3, #0
90005550:	d0e7      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005552:	6819      	ldr	r1, [r3, #0]
90005554:	481c      	ldr	r0, [pc, #112]	; (900055c8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc4>)
90005556:	68ca      	ldr	r2, [r1, #12]
90005558:	4282      	cmp	r2, r0
9000555a:	d123      	bne.n	900055a4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xa0>
        return (pobject != 0) && (pmemfun != 0);
9000555c:	685a      	ldr	r2, [r3, #4]
9000555e:	2a00      	cmp	r2, #0
90005560:	d0df      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
90005562:	689d      	ldr	r5, [r3, #8]
90005564:	b175      	cbz	r5, 90005584 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x80>
            action->execute(*this);
90005566:	688e      	ldr	r6, [r1, #8]
90005568:	4a18      	ldr	r2, [pc, #96]	; (900055cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000556a:	4296      	cmp	r6, r2
9000556c:	d123      	bne.n	900055b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
9000556e:	68d9      	ldr	r1, [r3, #12]
90005570:	685a      	ldr	r2, [r3, #4]
90005572:	eb02 0061 	add.w	r0, r2, r1, asr #1
90005576:	07ca      	lsls	r2, r1, #31
90005578:	d41b      	bmi.n	900055b2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xae>
9000557a:	689b      	ldr	r3, [r3, #8]
9000557c:	4621      	mov	r1, r4
    }
9000557e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90005582:	4718      	bx	r3
        return (pobject != 0) && (pmemfun != 0);
90005584:	68d8      	ldr	r0, [r3, #12]
90005586:	07c6      	lsls	r6, r0, #31
90005588:	d5cb      	bpl.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
9000558a:	688e      	ldr	r6, [r1, #8]
9000558c:	490f      	ldr	r1, [pc, #60]	; (900055cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xc8>)
9000558e:	428e      	cmp	r6, r1
90005590:	d111      	bne.n	900055b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0xb2>
        (pobject->*pmemfun)(t1);
90005592:	eb02 0060 	add.w	r0, r2, r0, asr #1
90005596:	6803      	ldr	r3, [r0, #0]
90005598:	595b      	ldr	r3, [r3, r5]
9000559a:	e7ef      	b.n	9000557c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x78>
            executeAction();
9000559c:	4620      	mov	r0, r4
    }
9000559e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
900055a2:	4718      	bx	r3
        if (action && action->isValid())
900055a4:	4618      	mov	r0, r3
900055a6:	4790      	blx	r2
900055a8:	2800      	cmp	r0, #0
900055aa:	d0ba      	beq.n	90005522 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x1e>
            action->execute(*this);
900055ac:	6b23      	ldr	r3, [r4, #48]	; 0x30
900055ae:	6819      	ldr	r1, [r3, #0]
900055b0:	e7d9      	b.n	90005566 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x62>
900055b2:	689d      	ldr	r5, [r3, #8]
900055b4:	e7ef      	b.n	90005596 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x92>
900055b6:	4621      	mov	r1, r4
900055b8:	4618      	mov	r0, r3
900055ba:	4633      	mov	r3, r6
    }
900055bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900055c0:	4718      	bx	r3
900055c2:	bf00      	nop
900055c4:	90005485 	.word	0x90005485
900055c8:	90005419 	.word	0x90005419
900055cc:	900053ed 	.word	0x900053ed

900055d0 <_ZN26screen_game_selectViewBaseC1Ev>:
screen_game_selectViewBase::screen_game_selectViewBase() :
900055d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900055d4:	b086      	sub	sp, #24
900055d6:	4604      	mov	r4, r0
900055d8:	f011 f86c 	bl	900166b4 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
900055dc:	4b87      	ldr	r3, [pc, #540]	; (900057fc <_ZN26screen_game_selectViewBaseC1Ev+0x22c>)
900055de:	2500      	movs	r5, #0
          touchable(false),
900055e0:	f44f 7680 	mov.w	r6, #256	; 0x100
900055e4:	27ff      	movs	r7, #255	; 0xff
    flexButtonCallback(this, &screen_game_selectViewBase::flexButtonCallbackHandler)
900055e6:	4a86      	ldr	r2, [pc, #536]	; (90005800 <_ZN26screen_game_selectViewBaseC1Ev+0x230>)
900055e8:	6423      	str	r3, [r4, #64]	; 0x40
900055ea:	f104 0ac4 	add.w	sl, r4, #196	; 0xc4
900055ee:	66e3      	str	r3, [r4, #108]	; 0x6c
        T::add(borderBox);
900055f0:	f104 01f8 	add.w	r1, r4, #248	; 0xf8
900055f4:	4b83      	ldr	r3, [pc, #524]	; (90005804 <_ZN26screen_game_selectViewBaseC1Ev+0x234>)
900055f6:	4650      	mov	r0, sl
900055f8:	6022      	str	r2, [r4, #0]
900055fa:	f104 0898 	add.w	r8, r4, #152	; 0x98
900055fe:	63e5      	str	r5, [r4, #60]	; 0x3c
90005600:	f8a4 6064 	strh.w	r6, [r4, #100]	; 0x64
90005604:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
90005608:	66a5      	str	r5, [r4, #104]	; 0x68
9000560a:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
9000560e:	f884 7092 	strb.w	r7, [r4, #146]	; 0x92
90005612:	f8c4 5094 	str.w	r5, [r4, #148]	; 0x94
        : typedTextId(id)
90005616:	f8df 9224 	ldr.w	r9, [pc, #548]	; 9000583c <_ZN26screen_game_selectViewBaseC1Ev+0x26c>
        : x(0), y(0), width(0), height(0)
9000561a:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
9000561e:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
          nextSibling(0),
90005622:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
          cachedAbsX(0),
90005626:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
9000562a:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
9000562e:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
90005632:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
90005636:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
9000563a:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
9000563e:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
          nextSibling(0),
90005642:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
          cachedAbsX(0),
90005646:	e9c4 552d 	strd	r5, r5, [r4, #180]	; 0xb4
9000564a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : pressed(false), alpha(255), action(0)
9000564e:	f44f 437f 	mov.w	r3, #65280	; 0xff00
          touchable(false),
90005652:	f8a4 60bc 	strh.w	r6, [r4, #188]	; 0xbc
90005656:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
        touchable = touch;
9000565a:	f240 1301 	movw	r3, #257	; 0x101
9000565e:	f8c4 50c0 	str.w	r5, [r4, #192]	; 0xc0
90005662:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
        : T(), up(), down()
90005666:	4b68      	ldr	r3, [pc, #416]	; (90005808 <_ZN26screen_game_selectViewBaseC1Ev+0x238>)
90005668:	f8c4 50ec 	str.w	r5, [r4, #236]	; 0xec
9000566c:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
        : Box(), borderColor(0), borderSize(0)
90005670:	4b66      	ldr	r3, [pc, #408]	; (9000580c <_ZN26screen_game_selectViewBaseC1Ev+0x23c>)
90005672:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
90005676:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
          touchable(false),
9000567a:	f8a4 611c 	strh.w	r6, [r4, #284]	; 0x11c
9000567e:	f884 711e 	strb.w	r7, [r4, #286]	; 0x11e
90005682:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
        rect.x = x;
90005686:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
9000568a:	e9c4 5532 	strd	r5, r5, [r4, #200]	; 0xc8
9000568e:	e9c4 5534 	strd	r5, r5, [r4, #208]	; 0xd0
          nextSibling(0),
90005692:	e9c4 5536 	strd	r5, r5, [r4, #216]	; 0xd8
          cachedAbsX(0),
90005696:	e9c4 5538 	strd	r5, r5, [r4, #224]	; 0xe0
          nextSibling(0),
9000569a:	e9c4 5543 	strd	r5, r5, [r4, #268]	; 0x10c
          cachedAbsX(0),
9000569e:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
        : color(col)
900056a2:	e9c4 5548 	strd	r5, r5, [r4, #288]	; 0x120
        : color(0)
900056a6:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
900056aa:	e9c4 554d 	strd	r5, r5, [r4, #308]	; 0x134
        rect.x = x;
900056ae:	e9c4 5540 	strd	r5, r5, [r4, #256]	; 0x100
900056b2:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
        T::add(borderBox);
900056b6:	f00a fb8b 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900056ba:	f04f 33ff 	mov.w	r3, #4294967295
          touchable(false),
900056be:	f8a4 6160 	strh.w	r6, [r4, #352]	; 0x160
        container.add(d);
900056c2:	f104 0140 	add.w	r1, r4, #64	; 0x40
        rect.x = x;
900056c6:	4e52      	ldr	r6, [pc, #328]	; (90005810 <_ZN26screen_game_selectViewBaseC1Ev+0x240>)
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900056c8:	f8c4 7172 	str.w	r7, [r4, #370]	; 0x172
900056cc:	1d27      	adds	r7, r4, #4
        : color(col)
900056ce:	f8c4 516c 	str.w	r5, [r4, #364]	; 0x16c
900056d2:	4638      	mov	r0, r7
900056d4:	f8a4 5170 	strh.w	r5, [r4, #368]	; 0x170
              text(0)
900056d8:	f8c4 5180 	str.w	r5, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
900056dc:	f8c4 5190 	str.w	r5, [r4, #400]	; 0x190
900056e0:	6465      	str	r5, [r4, #68]	; 0x44
900056e2:	f8c4 4188 	str.w	r4, [r4, #392]	; 0x188
900056e6:	64a6      	str	r6, [r4, #72]	; 0x48
900056e8:	f8c4 9164 	str.w	r9, [r4, #356]	; 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900056ec:	e9c4 535e 	strd	r5, r3, [r4, #376]	; 0x178
900056f0:	4b48      	ldr	r3, [pc, #288]	; (90005814 <_ZN26screen_game_selectViewBaseC1Ev+0x244>)
900056f2:	f8c4 3184 	str.w	r3, [r4, #388]	; 0x184
900056f6:	4b48      	ldr	r3, [pc, #288]	; (90005818 <_ZN26screen_game_selectViewBaseC1Ev+0x248>)
900056f8:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900056fc:	4b47      	ldr	r3, [pc, #284]	; (9000581c <_ZN26screen_game_selectViewBaseC1Ev+0x24c>)
900056fe:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
90005702:	f64f 73ff 	movw	r3, #65535	; 0xffff
90005706:	f8a4 3168 	strh.w	r3, [r4, #360]	; 0x168
        color = newColor;
9000570a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        : x(0), y(0), width(0), height(0)
9000570e:	e9c4 5550 	strd	r5, r5, [r4, #320]	; 0x140
90005712:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
          nextSibling(0),
90005716:	e9c4 5554 	strd	r5, r5, [r4, #336]	; 0x150
          cachedAbsX(0),
9000571a:	e9c4 5556 	strd	r5, r5, [r4, #344]	; 0x158
9000571e:	66a3      	str	r3, [r4, #104]	; 0x68
90005720:	f00a fb56 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005724:	4b3e      	ldr	r3, [pc, #248]	; (90005820 <_ZN26screen_game_selectViewBaseC1Ev+0x250>)
90005726:	f104 016c 	add.w	r1, r4, #108	; 0x6c
9000572a:	4638      	mov	r0, r7
9000572c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
        rect.x = x;
90005730:	e9c4 561c 	strd	r5, r6, [r4, #112]	; 0x70
90005734:	f00a fb4c 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderUp = borderColorReleased;
90005738:	493a      	ldr	r1, [pc, #232]	; (90005824 <_ZN26screen_game_selectViewBaseC1Ev+0x254>)
9000573a:	4b3b      	ldr	r3, [pc, #236]	; (90005828 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
9000573c:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
        borderDown = borderColorPressed;
90005740:	f101 1133 	add.w	r1, r1, #3342387	; 0x330033
90005744:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
90005748:	f501 514c 	add.w	r1, r1, #13056	; 0x3300
9000574c:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
90005750:	4b36      	ldr	r3, [pc, #216]	; (9000582c <_ZN26screen_game_selectViewBaseC1Ev+0x25c>)
        down = colorPressed;
90005752:	4a37      	ldr	r2, [pc, #220]	; (90005830 <_ZN26screen_game_selectViewBaseC1Ev+0x260>)
90005754:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        borderDown = borderColorPressed;
90005758:	f8c4 1138 	str.w	r1, [r4, #312]	; 0x138
        down = colorPressed;
9000575c:	4b35      	ldr	r3, [pc, #212]	; (90005834 <_ZN26screen_game_selectViewBaseC1Ev+0x264>)
        borderBox.setColor(T::getPressed() ? down : up);
9000575e:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
90005762:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
90005766:	f8a4 5128 	strh.w	r5, [r4, #296]	; 0x128
9000576a:	f504 759e 	add.w	r5, r4, #316	; 0x13c
        down = colorPressed;
9000576e:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        borderBox.setColor(T::getPressed() ? down : up);
90005772:	2900      	cmp	r1, #0
90005774:	d03e      	beq.n	900057f4 <_ZN26screen_game_selectViewBaseC1Ev+0x224>
90005776:	4613      	mov	r3, r2
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
90005778:	f504 729c 	add.w	r2, r4, #312	; 0x138
9000577c:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
90005780:	2600      	movs	r6, #0
90005782:	6813      	ldr	r3, [r2, #0]
    btn_asteroids.add(_btn_asteroids);
90005784:	4651      	mov	r1, sl
90005786:	4640      	mov	r0, r8
90005788:	f8c4 60c8 	str.w	r6, [r4, #200]	; 0xc8
        borderColor = colorBorder;
9000578c:	f8c4 3124 	str.w	r3, [r4, #292]	; 0x124
    _btn_asteroids.setAction(flexButtonCallback);
90005790:	f504 73c2 	add.w	r3, r4, #388	; 0x184
        action = &callback;
90005794:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90005798:	4b23      	ldr	r3, [pc, #140]	; (90005828 <_ZN26screen_game_selectViewBaseC1Ev+0x258>)
9000579a:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    btn_asteroids.add(_btn_asteroids);
9000579e:	f00a fb17 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057a2:	4b25      	ldr	r3, [pc, #148]	; (90005838 <_ZN26screen_game_selectViewBaseC1Ev+0x268>)
        linespace = space;
900057a4:	f8a4 6170 	strh.w	r6, [r4, #368]	; 0x170
        boundingArea = calculateBoundingArea();
900057a8:	466e      	mov	r6, sp
900057aa:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        color = newColor;
900057ae:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
900057b2:	4629      	mov	r1, r5
900057b4:	4630      	mov	r0, r6
        color = newColor;
900057b6:	f8c4 316c 	str.w	r3, [r4, #364]	; 0x16c
        boundingArea = calculateBoundingArea();
900057ba:	f00c fab9 	bl	90011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
900057be:	2203      	movs	r2, #3
900057c0:	f105 033c 	add.w	r3, r5, #60	; 0x3c
900057c4:	f8cd 9010 	str.w	r9, [sp, #16]
900057c8:	f8ad 2014 	strh.w	r2, [sp, #20]
900057cc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
900057d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    lbl_asteroids.setTypedText(touchgfx::TypedText(T___SINGLEUSE_19SB));
900057d4:	a904      	add	r1, sp, #16
900057d6:	4628      	mov	r0, r5
900057d8:	f00c fd52 	bl	90012280 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    btn_asteroids.add(lbl_asteroids);
900057dc:	4629      	mov	r1, r5
900057de:	4640      	mov	r0, r8
900057e0:	f00a faf6 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900057e4:	4638      	mov	r0, r7
900057e6:	4641      	mov	r1, r8
900057e8:	f00a faf2 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
900057ec:	4620      	mov	r0, r4
900057ee:	b006      	add	sp, #24
900057f0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900057f4:	f504 729a 	add.w	r2, r4, #308	; 0x134
900057f8:	e7c0      	b.n	9000577c <_ZN26screen_game_selectViewBaseC1Ev+0x1ac>
900057fa:	bf00      	nop
900057fc:	9002a5cc 	.word	0x9002a5cc
90005800:	90029ca8 	.word	0x90029ca8
90005804:	9002a19c 	.word	0x9002a19c
90005808:	90029bf4 	.word	0x90029bf4
9000580c:	9002a634 	.word	0x9002a634
90005810:	011001e0 	.word	0x011001e0
90005814:	90029c90 	.word	0x90029c90
90005818:	9000546d 	.word	0x9000546d
9000581c:	9002a53c 	.word	0x9002a53c
90005820:	ff3d3d3d 	.word	0xff3d3d3d
90005824:	ff003366 	.word	0xff003366
90005828:	003800f0 	.word	0x003800f0
9000582c:	0014000f 	.word	0x0014000f
90005830:	ff7a7a05 	.word	0xff7a7a05
90005834:	ffc7c73c 	.word	0xffc7c73c
90005838:	0008001b 	.word	0x0008001b
9000583c:	90028f64 	.word	0x90028f64

90005840 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005840:	4770      	bx	lr
90005842:	bf00      	nop

90005844 <_ZN19FrontendApplicationD0Ev>:
90005844:	b510      	push	{r4, lr}
90005846:	4604      	mov	r4, r0
90005848:	f44f 71ae 	mov.w	r1, #348	; 0x15c
9000584c:	f020 fcb1 	bl	900261b2 <_ZdlPvj>
90005850:	4620      	mov	r0, r4
90005852:	bd10      	pop	{r4, pc}

90005854 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005854:	b510      	push	{r4, lr}
90005856:	4604      	mov	r4, r0
    {
        model.tick();
90005858:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
9000585c:	f000 f892 	bl	90005984 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005860:	4620      	mov	r0, r4
    }
90005862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005866:	f00f bbd9 	b.w	9001501c <_ZN8touchgfx11Application15handleTickEventEv>
9000586a:	bf00      	nop

9000586c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
9000586c:	b510      	push	{r4, lr}
9000586e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005870:	f7fe fce8 	bl	90004244 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005874:	4b01      	ldr	r3, [pc, #4]	; (9000587c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005876:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005878:	6023      	str	r3, [r4, #0]
}
9000587a:	bd10      	pop	{r4, pc}
9000587c:	90029cdc 	.word	0x90029cdc

90005880 <_ZN13ModelListener9move_shipEv>:
    }

    virtual void move_ship(){}
90005880:	4770      	bx	lr
90005882:	bf00      	nop

90005884 <_ZN13ModelListener12move_bulletsEv>:
    virtual void move_bullets(){}
90005884:	4770      	bx	lr
90005886:	bf00      	nop

90005888 <_ZN13ModelListener10move_rocksEv>:
    virtual void move_rocks(){}
90005888:	4770      	bx	lr
9000588a:	bf00      	nop

9000588c <_ZN13ModelListener25is_asteroids_game_startedEv>:

    virtual bool is_asteroids_game_started() {return false;}
9000588c:	2000      	movs	r0, #0
9000588e:	4770      	bx	lr

90005890 <_ZN13ModelListener21check_ship_collisionsEv>:

    virtual void check_ship_collisions(){}
90005890:	4770      	bx	lr
90005892:	bf00      	nop

90005894 <_ZN13ModelListener23check_bullet_collisionsEv>:
    virtual void check_bullet_collisions(){}
90005894:	4770      	bx	lr
90005896:	bf00      	nop

90005898 <_ZN13ModelListener20set_allowed_to_shootEb>:

    virtual void set_allowed_to_shoot(bool value){}
90005898:	4770      	bx	lr
9000589a:	bf00      	nop

9000589c <_ZN13ModelListener14set_invincibleEb>:

    virtual void set_invincible(bool value){}
9000589c:	4770      	bx	lr
9000589e:	bf00      	nop

900058a0 <_ZN5ModelC1Ev>:

	extern osSemaphoreId_t invincibility_timer_started_semaphoreHandle;
	extern osSemaphoreId_t invincibility_timer_ended_semaphoreHandle;
}

Model::Model() : modelListener(0)
900058a0:	2200      	movs	r2, #0
900058a2:	6002      	str	r2, [r0, #0]
{

}
900058a4:	4770      	bx	lr
900058a6:	bf00      	nop

900058a8 <_ZN5Model14asteroids_tickEv>:
	if( modelListener->is_asteroids_game_started() ) {
		asteroids_tick();
	}
}

void Model::asteroids_tick() {
900058a8:	b570      	push	{r4, r5, r6, lr}
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
}

void Model::bullet_timer_ended()
{
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
900058aa:	4d2d      	ldr	r5, [pc, #180]	; (90005960 <_ZN5Model14asteroids_tickEv+0xb8>)
void Model::asteroids_tick() {
900058ac:	4604      	mov	r4, r0
	if( osSemaphoreGetCount(bullet_timer_ended_semaphoreHandle) == 0 ) {
900058ae:	6828      	ldr	r0, [r5, #0]
900058b0:	f007 fc20 	bl	9000d0f4 <osSemaphoreGetCount>
900058b4:	b1e0      	cbz	r0, 900058f0 <_ZN5Model14asteroids_tickEv+0x48>
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
}

void Model::invincibility_timer_ended()
{
	if( osSemaphoreGetCount(invincibility_timer_ended_semaphoreHandle) == 0 ) {
900058b6:	4e2b      	ldr	r6, [pc, #172]	; (90005964 <_ZN5Model14asteroids_tickEv+0xbc>)
900058b8:	6830      	ldr	r0, [r6, #0]
900058ba:	f007 fc1b 	bl	9000d0f4 <osSemaphoreGetCount>
900058be:	4605      	mov	r5, r0
900058c0:	b310      	cbz	r0, 90005908 <_ZN5Model14asteroids_tickEv+0x60>
	modelListener->move_ship();
900058c2:	6820      	ldr	r0, [r4, #0]
900058c4:	6803      	ldr	r3, [r0, #0]
900058c6:	689a      	ldr	r2, [r3, #8]
900058c8:	4927      	ldr	r1, [pc, #156]	; (90005968 <_ZN5Model14asteroids_tickEv+0xc0>)
900058ca:	428a      	cmp	r2, r1
900058cc:	d128      	bne.n	90005920 <_ZN5Model14asteroids_tickEv+0x78>
	modelListener->move_bullets();
900058ce:	68da      	ldr	r2, [r3, #12]
900058d0:	4926      	ldr	r1, [pc, #152]	; (9000596c <_ZN5Model14asteroids_tickEv+0xc4>)
900058d2:	428a      	cmp	r2, r1
900058d4:	d12b      	bne.n	9000592e <_ZN5Model14asteroids_tickEv+0x86>
	modelListener->move_rocks();
900058d6:	691a      	ldr	r2, [r3, #16]
900058d8:	4925      	ldr	r1, [pc, #148]	; (90005970 <_ZN5Model14asteroids_tickEv+0xc8>)
900058da:	428a      	cmp	r2, r1
900058dc:	d12e      	bne.n	9000593c <_ZN5Model14asteroids_tickEv+0x94>
	modelListener->check_bullet_collisions();
900058de:	69da      	ldr	r2, [r3, #28]
900058e0:	4924      	ldr	r1, [pc, #144]	; (90005974 <_ZN5Model14asteroids_tickEv+0xcc>)
900058e2:	428a      	cmp	r2, r1
900058e4:	d131      	bne.n	9000594a <_ZN5Model14asteroids_tickEv+0xa2>
	modelListener->check_ship_collisions();
900058e6:	699b      	ldr	r3, [r3, #24]
900058e8:	4a23      	ldr	r2, [pc, #140]	; (90005978 <_ZN5Model14asteroids_tickEv+0xd0>)
900058ea:	4293      	cmp	r3, r2
900058ec:	d134      	bne.n	90005958 <_ZN5Model14asteroids_tickEv+0xb0>
}
900058ee:	bd70      	pop	{r4, r5, r6, pc}
		osSemaphoreRelease(bullet_timer_ended_semaphoreHandle);
900058f0:	6828      	ldr	r0, [r5, #0]
900058f2:	f007 fbd3 	bl	9000d09c <osSemaphoreRelease>
		modelListener->set_allowed_to_shoot(true);
900058f6:	6820      	ldr	r0, [r4, #0]
900058f8:	4a20      	ldr	r2, [pc, #128]	; (9000597c <_ZN5Model14asteroids_tickEv+0xd4>)
900058fa:	6803      	ldr	r3, [r0, #0]
900058fc:	6a1b      	ldr	r3, [r3, #32]
900058fe:	4293      	cmp	r3, r2
90005900:	d0d9      	beq.n	900058b6 <_ZN5Model14asteroids_tickEv+0xe>
90005902:	2101      	movs	r1, #1
90005904:	4798      	blx	r3
90005906:	e7d6      	b.n	900058b6 <_ZN5Model14asteroids_tickEv+0xe>
		osSemaphoreRelease(invincibility_timer_ended_semaphoreHandle);
90005908:	6830      	ldr	r0, [r6, #0]
9000590a:	f007 fbc7 	bl	9000d09c <osSemaphoreRelease>
		modelListener->set_invincible(false);
9000590e:	6820      	ldr	r0, [r4, #0]
90005910:	491b      	ldr	r1, [pc, #108]	; (90005980 <_ZN5Model14asteroids_tickEv+0xd8>)
90005912:	6803      	ldr	r3, [r0, #0]
90005914:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90005916:	428a      	cmp	r2, r1
90005918:	d0d5      	beq.n	900058c6 <_ZN5Model14asteroids_tickEv+0x1e>
9000591a:	4629      	mov	r1, r5
9000591c:	4790      	blx	r2
9000591e:	e7d0      	b.n	900058c2 <_ZN5Model14asteroids_tickEv+0x1a>
	modelListener->move_ship();
90005920:	4790      	blx	r2
	modelListener->move_bullets();
90005922:	6820      	ldr	r0, [r4, #0]
90005924:	4911      	ldr	r1, [pc, #68]	; (9000596c <_ZN5Model14asteroids_tickEv+0xc4>)
90005926:	6803      	ldr	r3, [r0, #0]
90005928:	68da      	ldr	r2, [r3, #12]
9000592a:	428a      	cmp	r2, r1
9000592c:	d0d3      	beq.n	900058d6 <_ZN5Model14asteroids_tickEv+0x2e>
9000592e:	4790      	blx	r2
	modelListener->move_rocks();
90005930:	6820      	ldr	r0, [r4, #0]
90005932:	490f      	ldr	r1, [pc, #60]	; (90005970 <_ZN5Model14asteroids_tickEv+0xc8>)
90005934:	6803      	ldr	r3, [r0, #0]
90005936:	691a      	ldr	r2, [r3, #16]
90005938:	428a      	cmp	r2, r1
9000593a:	d0d0      	beq.n	900058de <_ZN5Model14asteroids_tickEv+0x36>
9000593c:	4790      	blx	r2
	modelListener->check_bullet_collisions();
9000593e:	6820      	ldr	r0, [r4, #0]
90005940:	490c      	ldr	r1, [pc, #48]	; (90005974 <_ZN5Model14asteroids_tickEv+0xcc>)
90005942:	6803      	ldr	r3, [r0, #0]
90005944:	69da      	ldr	r2, [r3, #28]
90005946:	428a      	cmp	r2, r1
90005948:	d0cd      	beq.n	900058e6 <_ZN5Model14asteroids_tickEv+0x3e>
9000594a:	4790      	blx	r2
	modelListener->check_ship_collisions();
9000594c:	6820      	ldr	r0, [r4, #0]
9000594e:	4a0a      	ldr	r2, [pc, #40]	; (90005978 <_ZN5Model14asteroids_tickEv+0xd0>)
90005950:	6803      	ldr	r3, [r0, #0]
90005952:	699b      	ldr	r3, [r3, #24]
90005954:	4293      	cmp	r3, r2
90005956:	d0ca      	beq.n	900058ee <_ZN5Model14asteroids_tickEv+0x46>
}
90005958:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	modelListener->check_ship_collisions();
9000595c:	4718      	bx	r3
9000595e:	bf00      	nop
90005960:	240091b4 	.word	0x240091b4
90005964:	24009460 	.word	0x24009460
90005968:	90005881 	.word	0x90005881
9000596c:	90005885 	.word	0x90005885
90005970:	90005889 	.word	0x90005889
90005974:	90005895 	.word	0x90005895
90005978:	90005891 	.word	0x90005891
9000597c:	90005899 	.word	0x90005899
90005980:	9000589d 	.word	0x9000589d

90005984 <_ZN5Model4tickEv>:
{
90005984:	b510      	push	{r4, lr}
90005986:	4604      	mov	r4, r0
	if( modelListener->is_asteroids_game_started() ) {
90005988:	6800      	ldr	r0, [r0, #0]
9000598a:	4a07      	ldr	r2, [pc, #28]	; (900059a8 <_ZN5Model4tickEv+0x24>)
9000598c:	6803      	ldr	r3, [r0, #0]
9000598e:	695b      	ldr	r3, [r3, #20]
90005990:	4293      	cmp	r3, r2
90005992:	d100      	bne.n	90005996 <_ZN5Model4tickEv+0x12>
}
90005994:	bd10      	pop	{r4, pc}
	if( modelListener->is_asteroids_game_started() ) {
90005996:	4798      	blx	r3
90005998:	2800      	cmp	r0, #0
9000599a:	d0fb      	beq.n	90005994 <_ZN5Model4tickEv+0x10>
		asteroids_tick();
9000599c:	4620      	mov	r0, r4
}
9000599e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		asteroids_tick();
900059a2:	f7ff bf81 	b.w	900058a8 <_ZN5Model14asteroids_tickEv>
900059a6:	bf00      	nop
900059a8:	9000588d 	.word	0x9000588d

900059ac <_ZN5Model18start_bullet_timerEv>:
	osSemaphoreAcquire(bullet_timer_started_semaphoreHandle, 0U);
900059ac:	4b02      	ldr	r3, [pc, #8]	; (900059b8 <_ZN5Model18start_bullet_timerEv+0xc>)
900059ae:	2100      	movs	r1, #0
900059b0:	6818      	ldr	r0, [r3, #0]
900059b2:	f007 bb3f 	b.w	9000d034 <osSemaphoreAcquire>
900059b6:	bf00      	nop
900059b8:	240091b8 	.word	0x240091b8

900059bc <_ZN5Model25start_invincibility_timerEv>:
	osSemaphoreAcquire(invincibility_timer_started_semaphoreHandle, 0U);
900059bc:	4b02      	ldr	r3, [pc, #8]	; (900059c8 <_ZN5Model25start_invincibility_timerEv+0xc>)
900059be:	2100      	movs	r1, #0
900059c0:	6818      	ldr	r0, [r3, #0]
900059c2:	f007 bb37 	b.w	9000d034 <osSemaphoreAcquire>
900059c6:	bf00      	nop
900059c8:	24009464 	.word	0x24009464

900059cc <_ZN5Model21resume_asteroids_taskEv>:
	}
}

void Model::resume_asteroids_task()
{
}
900059cc:	4770      	bx	lr
900059ce:	bf00      	nop

900059d0 <_ZN5Model22suspend_asteroids_taskEv>:
900059d0:	4770      	bx	lr
900059d2:	bf00      	nop

900059d4 <_ZN25screen_asteroidsPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_asteroidsPresenter() {}
900059d4:	4770      	bx	lr
900059d6:	bf00      	nop

900059d8 <_ZThn4_N25screen_asteroidsPresenterD1Ev>:
900059d8:	3804      	subs	r0, #4
900059da:	4770      	bx	lr

900059dc <_ZN25screen_asteroidsPresenter10deactivateEv>:
}

void screen_asteroidsPresenter::activate()
{

}
900059dc:	4770      	bx	lr
900059de:	bf00      	nop

900059e0 <_ZN25screen_asteroidsPresenter25is_asteroids_game_startedEv>:


bool screen_asteroidsPresenter::is_asteroids_game_started()
{
	return game_started;
}
900059e0:	7d40      	ldrb	r0, [r0, #21]
900059e2:	4770      	bx	lr

900059e4 <_ZN25screen_asteroidsPresenter20start_asteroids_gameEv>:

void screen_asteroidsPresenter::start_asteroids_game()
{
	init_game();
900059e4:	6803      	ldr	r3, [r0, #0]
900059e6:	6a1b      	ldr	r3, [r3, #32]
900059e8:	4718      	bx	r3
900059ea:	bf00      	nop

900059ec <_ZN25screen_asteroidsPresenter9game_overEv>:

void screen_asteroidsPresenter::game_over()
{
	game_started = false;

	view.show_endgame_screen();
900059ec:	6983      	ldr	r3, [r0, #24]
	game_started = false;
900059ee:	2200      	movs	r2, #0
900059f0:	7542      	strb	r2, [r0, #21]
	view.show_endgame_screen();
900059f2:	4618      	mov	r0, r3
900059f4:	681a      	ldr	r2, [r3, #0]
900059f6:	6c13      	ldr	r3, [r2, #64]	; 0x40
900059f8:	4718      	bx	r3
900059fa:	bf00      	nop

900059fc <_ZN25screen_asteroidsPresenter9init_gameEv>:
}

void screen_asteroidsPresenter::init_game()
{
900059fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005a00:	4604      	mov	r4, r0
	view.hide_endgame_screen();
90005a02:	6980      	ldr	r0, [r0, #24]
	view.move_ship(225, 227);

	// move all the bullets off screen (bullets are on the right of the screen)
	// hide all the bullets

	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a04:	2500      	movs	r5, #0
	view.move_ship(225, 227);
90005a06:	f242 26e0 	movw	r6, #8928	; 0x22e0
	view.hide_endgame_screen();
90005a0a:	6803      	ldr	r3, [r0, #0]
        visible = vis;
90005a0c:	f04f 082c 	mov.w	r8, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a10:	462f      	mov	r7, r5
	view.hide_endgame_screen();
90005a12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90005a14:	4798      	blx	r3
	view.move_ship(225, 227);
90005a16:	69a0      	ldr	r0, [r4, #24]
90005a18:	22e3      	movs	r2, #227	; 0xe3
90005a1a:	21e1      	movs	r1, #225	; 0xe1
90005a1c:	6803      	ldr	r3, [r0, #0]
90005a1e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90005a20:	4798      	blx	r3
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a22:	69a0      	ldr	r0, [r4, #24]
90005a24:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90005a28:	2200      	movs	r2, #0
90005a2a:	f8d0 c000 	ldr.w	ip, [r0]
90005a2e:	1981      	adds	r1, r0, r6
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a30:	362c      	adds	r6, #44	; 0x2c
		view.move_bullet(&view.bullets[i], BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90005a32:	f8dc 9074 	ldr.w	r9, [ip, #116]	; 0x74
90005a36:	47c8      	blx	r9
		view.bullets[i].setVisible(false);
90005a38:	69a3      	ldr	r3, [r4, #24]
        return parent;
90005a3a:	f242 21f4 	movw	r1, #8948	; 0x22f4
        visible = vis;
90005a3e:	f242 3205 	movw	r2, #8965	; 0x2305
90005a42:	fb08 3305 	mla	r3, r8, r5, r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a46:	3501      	adds	r5, #1
        return parent;
90005a48:	5858      	ldr	r0, [r3, r1]
        visible = vis;
90005a4a:	549f      	strb	r7, [r3, r2]
		view.bullets[i].getParent()->invalidateContent();
90005a4c:	6803      	ldr	r3, [r0, #0]
90005a4e:	699b      	ldr	r3, [r3, #24]
90005a50:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++ ) {
90005a52:	2d0a      	cmp	r5, #10
90005a54:	d1e5      	bne.n	90005a22 <_ZN25screen_asteroidsPresenter9init_gameEv+0x26>


	/* ROCK STUFF */
	// move all the rocks off screen (rock are to the left of the screen)
	// hide all the rocks
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005a56:	2500      	movs	r5, #0
90005a58:	f242 1628 	movw	r6, #8488	; 0x2128
90005a5c:	f04f 092c 	mov.w	r9, #44	; 0x2c
90005a60:	f242 184d 	movw	r8, #8525	; 0x214d
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005a64:	462f      	mov	r7, r5
90005a66:	69a0      	ldr	r0, [r4, #24]
90005a68:	2300      	movs	r3, #0
90005a6a:	f8d0 c000 	ldr.w	ip, [r0]
90005a6e:	1981      	adds	r1, r0, r6
90005a70:	461a      	mov	r2, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005a72:	362c      	adds	r6, #44	; 0x2c
		view.move_rock(&view.rocks[i], ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90005a74:	f8dc a064 	ldr.w	sl, [ip, #100]	; 0x64
90005a78:	47d0      	blx	sl
		view.rocks[i].setVisible(false);
90005a7a:	69a3      	ldr	r3, [r4, #24]
        return parent;
90005a7c:	f242 123c 	movw	r2, #8508	; 0x213c
        visible = vis;
90005a80:	fb09 3305 	mla	r3, r9, r5, r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005a84:	3501      	adds	r5, #1
        return parent;
90005a86:	5898      	ldr	r0, [r3, r2]
        visible = vis;
90005a88:	f803 7008 	strb.w	r7, [r3, r8]
		view.rocks[i].getParent()->invalidateContent();
90005a8c:	6803      	ldr	r3, [r0, #0]
90005a8e:	699b      	ldr	r3, [r3, #24]
90005a90:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++ ) {
90005a92:	2d0a      	cmp	r5, #10
90005a94:	d1e7      	bne.n	90005a66 <_ZN25screen_asteroidsPresenter9init_gameEv+0x6a>
90005a96:	f242 1528 	movw	r5, #8488	; 0x2128
	}

	// generate random rock positions

	for(int i = 0; i < ROCK_COUNT; i++) {
90005a9a:	f242 26e0 	movw	r6, #8928	; 0x22e0
		view.new_rock_position(&view.rocks[i]);
90005a9e:	69a0      	ldr	r0, [r4, #24]
90005aa0:	6803      	ldr	r3, [r0, #0]
90005aa2:	1941      	adds	r1, r0, r5
	for(int i = 0; i < ROCK_COUNT; i++) {
90005aa4:	352c      	adds	r5, #44	; 0x2c
		view.new_rock_position(&view.rocks[i]);
90005aa6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005aa8:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005aaa:	42b5      	cmp	r5, r6
90005aac:	d1f7      	bne.n	90005a9e <_ZN25screen_asteroidsPresenter9init_gameEv+0xa2>


	/* GENERAL GAME STUFF */
	// reset the score to 0
	score = 0;
	view.update_score(score);
90005aae:	69a0      	ldr	r0, [r4, #24]
	score = 0;
90005ab0:	2100      	movs	r1, #0
	view.update_score(score);
90005ab2:	6803      	ldr	r3, [r0, #0]
	score = 0;
90005ab4:	6121      	str	r1, [r4, #16]
	view.update_score(score);
90005ab6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005ab8:	4798      	blx	r3

	// reset health to full
	lives = 3;
	view.update_hearts(lives);
90005aba:	69a0      	ldr	r0, [r4, #24]
	lives = 3;
90005abc:	2103      	movs	r1, #3
90005abe:	7321      	strb	r1, [r4, #12]
	view.update_hearts(lives);
90005ac0:	6803      	ldr	r3, [r0, #0]
90005ac2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90005ac4:	4798      	blx	r3

	// start the game
	game_started = true;
90005ac6:	2301      	movs	r3, #1
90005ac8:	7563      	strb	r3, [r4, #21]
}
90005aca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90005ace:	bf00      	nop

90005ad0 <_ZN25screen_asteroidsPresenter9move_shipEv>:

void screen_asteroidsPresenter::move_ship()
{
90005ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
90005ad2:	4604      	mov	r4, r0
	int old_x, old_y;

	view.getShipPosition(&old_x, &old_y);
90005ad4:	6980      	ldr	r0, [r0, #24]
{
90005ad6:	b083      	sub	sp, #12
	view.getShipPosition(&old_x, &old_y);
90005ad8:	6803      	ldr	r3, [r0, #0]
90005ada:	aa01      	add	r2, sp, #4
90005adc:	4669      	mov	r1, sp
90005ade:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90005ae0:	4798      	blx	r3

	int new_x = old_x;
	int new_y = old_y;

	ShipDirection ship_direction = view.get_ship_direction();
90005ae2:	69a0      	ldr	r0, [r4, #24]
90005ae4:	6803      	ldr	r3, [r0, #0]
90005ae6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
	int new_y = old_y;
90005ae8:	e9dd 5600 	ldrd	r5, r6, [sp]
	ShipDirection ship_direction = view.get_ship_direction();
90005aec:	4798      	blx	r3

	switch(ship_direction) {
90005aee:	2803      	cmp	r0, #3
90005af0:	d805      	bhi.n	90005afe <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005af2:	e8df f000 	tbb	[pc, r0]
90005af6:	2629      	.short	0x2629
90005af8:	2302      	.short	0x2302
		case ShipDirection::LEFT: {
			new_x = old_x - SHIP_MOVES_PER_TICK;
90005afa:	9d00      	ldr	r5, [sp, #0]
90005afc:	3d05      	subs	r5, #5
		default: {
			break;
		}
	}

	Drawable *ship = view.get_ship_pointer();
90005afe:	69a0      	ldr	r0, [r4, #24]
90005b00:	6803      	ldr	r3, [r0, #0]
90005b02:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005b04:	4798      	blx	r3

	view.move_ship((new_x > (SCREEN_WIDTH - ship->getWidth()) || new_x < 0) ? old_x : new_x, (new_y > (SCREEN_HEIGHT - ship->getHeight()) || new_y < 0) ? old_y : new_y);
90005b06:	69a4      	ldr	r4, [r4, #24]
90005b08:	6823      	ldr	r3, [r4, #0]
90005b0a:	6d1f      	ldr	r7, [r3, #80]	; 0x50
90005b0c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90005b10:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90005b14:	42ab      	cmp	r3, r5
90005b16:	db01      	blt.n	90005b1c <_ZN25screen_asteroidsPresenter9move_shipEv+0x4c>
90005b18:	2d00      	cmp	r5, #0
90005b1a:	da00      	bge.n	90005b1e <_ZN25screen_asteroidsPresenter9move_shipEv+0x4e>
90005b1c:	9d00      	ldr	r5, [sp, #0]
90005b1e:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90005b22:	f5c3 7388 	rsb	r3, r3, #272	; 0x110
90005b26:	42b3      	cmp	r3, r6
90005b28:	db01      	blt.n	90005b2e <_ZN25screen_asteroidsPresenter9move_shipEv+0x5e>
90005b2a:	2e00      	cmp	r6, #0
90005b2c:	da00      	bge.n	90005b30 <_ZN25screen_asteroidsPresenter9move_shipEv+0x60>
90005b2e:	9e01      	ldr	r6, [sp, #4]
90005b30:	4632      	mov	r2, r6
90005b32:	4629      	mov	r1, r5
90005b34:	4620      	mov	r0, r4
90005b36:	47b8      	blx	r7
}
90005b38:	b003      	add	sp, #12
90005b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			new_x = old_x + SHIP_MOVES_PER_TICK;
90005b3c:	9d00      	ldr	r5, [sp, #0]
90005b3e:	3505      	adds	r5, #5
			break;
90005b40:	e7dd      	b.n	90005afe <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y + SHIP_MOVES_PER_TICK;
90005b42:	9e01      	ldr	r6, [sp, #4]
90005b44:	3605      	adds	r6, #5
			break;
90005b46:	e7da      	b.n	90005afe <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
			new_y = old_y - SHIP_MOVES_PER_TICK;
90005b48:	9e01      	ldr	r6, [sp, #4]
90005b4a:	3e05      	subs	r6, #5
			break;
90005b4c:	e7d7      	b.n	90005afe <_ZN25screen_asteroidsPresenter9move_shipEv+0x2e>
90005b4e:	bf00      	nop

90005b50 <_ZThn4_N25screen_asteroidsPresenter9move_shipEv>:
    virtual bool is_invincible();

    /*
     * SHIP STUFF
     */
    virtual void move_ship();
90005b50:	f1a0 0004 	sub.w	r0, r0, #4
90005b54:	f7ff bfbc 	b.w	90005ad0 <_ZN25screen_asteroidsPresenter9move_shipEv>

90005b58 <_ZN25screen_asteroidsPresenter10move_rocksEv>:


void screen_asteroidsPresenter::move_rocks()
{
90005b58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005b5c:	f242 1728 	movw	r7, #8488	; 0x2128
90005b60:	b083      	sub	sp, #12
	for(int i = 0; i < ROCK_COUNT; i++) {
90005b62:	2500      	movs	r5, #0
        return visible;
90005b64:	f04f 092c 	mov.w	r9, #44	; 0x2c
{
90005b68:	4682      	mov	sl, r0
        return rect.y;
90005b6a:	f242 1b2e 	movw	fp, #8494	; 0x212e
90005b6e:	9701      	str	r7, [sp, #4]
90005b70:	e01f      	b.n	90005bb2 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x5a>

			continue;
		}

		// move the rock
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005b72:	f936 300b 	ldrsh.w	r3, [r6, fp]
90005b76:	6827      	ldr	r7, [r4, #0]
90005b78:	3301      	adds	r3, #1
90005b7a:	5eb2      	ldrsh	r2, [r6, r2]
90005b7c:	6e7f      	ldr	r7, [r7, #100]	; 0x64
90005b7e:	47b8      	blx	r7

		// check if rock is offscreen
		if( rock->getY() > SCREEN_HEIGHT ) {
90005b80:	f936 300b 	ldrsh.w	r3, [r6, fp]
			// remove the rock
			view.move_rock_offscreen(rock);
90005b84:	4641      	mov	r1, r8
		if( rock->getY() > SCREEN_HEIGHT ) {
90005b86:	f5b3 7f88 	cmp.w	r3, #272	; 0x110
90005b8a:	dd04      	ble.n	90005b96 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x3e>
			view.move_rock_offscreen(rock);
90005b8c:	f8da 0018 	ldr.w	r0, [sl, #24]
90005b90:	6803      	ldr	r3, [r0, #0]
90005b92:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005b94:	4798      	blx	r3
        return parent;
90005b96:	f242 133c 	movw	r3, #8508	; 0x213c
90005b9a:	fb09 4405 	mla	r4, r9, r5, r4
90005b9e:	58e0      	ldr	r0, [r4, r3]
		}
		rock->getParent()->invalidateContent();
90005ba0:	6803      	ldr	r3, [r0, #0]
90005ba2:	699b      	ldr	r3, [r3, #24]
90005ba4:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005ba6:	9b01      	ldr	r3, [sp, #4]
90005ba8:	3501      	adds	r5, #1
90005baa:	332c      	adds	r3, #44	; 0x2c
90005bac:	2d0a      	cmp	r5, #10
90005bae:	9301      	str	r3, [sp, #4]
90005bb0:	d013      	beq.n	90005bda <_ZN25screen_asteroidsPresenter10move_rocksEv+0x82>
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005bb2:	f8da 4018 	ldr.w	r4, [sl, #24]
        return rect.x;
90005bb6:	f242 122c 	movw	r2, #8492	; 0x212c
90005bba:	9b01      	ldr	r3, [sp, #4]
        return visible;
90005bbc:	fb09 4605 	mla	r6, r9, r5, r4
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005bc0:	4620      	mov	r0, r4
		touchgfx::ScalableImage *rock = &view.rocks[i];
90005bc2:	eb04 0803 	add.w	r8, r4, r3
		if( !rock->isVisible() ) {
90005bc6:	f242 134d 	movw	r3, #8525	; 0x214d
90005bca:	5cf3      	ldrb	r3, [r6, r3]
		view.move_rock(rock, rock->getX(), rock->getY() + ROCK_MOVES_PER_TICK);
90005bcc:	4641      	mov	r1, r8
		if( !rock->isVisible() ) {
90005bce:	2b00      	cmp	r3, #0
90005bd0:	d1cf      	bne.n	90005b72 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x1a>
			view.new_rock_position(rock);
90005bd2:	6823      	ldr	r3, [r4, #0]
90005bd4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
90005bd6:	4798      	blx	r3
			continue;
90005bd8:	e7e5      	b.n	90005ba6 <_ZN25screen_asteroidsPresenter10move_rocksEv+0x4e>
	}
}
90005bda:	b003      	add	sp, #12
90005bdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90005be0 <_ZThn4_N25screen_asteroidsPresenter10move_rocksEv>:


    /*
     * ROCK STUFF
     */
    virtual void move_rocks();
90005be0:	f1a0 0004 	sub.w	r0, r0, #4
90005be4:	f7ff bfb8 	b.w	90005b58 <_ZN25screen_asteroidsPresenter10move_rocksEv>

90005be8 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv>:
}

Drawable* screen_asteroidsPresenter::get_next_invisible_bullet()
{
	for(int i = 0; i < BULLET_COUNT; i++) {
		if( !view.bullets[i].isVisible() )
90005be8:	6982      	ldr	r2, [r0, #24]
90005bea:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90005bee:	f893 1305 	ldrb.w	r1, [r3, #773]	; 0x305
90005bf2:	b1e9      	cbz	r1, 90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005bf4:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
90005bf8:	b1c9      	cbz	r1, 90005c2e <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x46>
90005bfa:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90005bfe:	b1f1      	cbz	r1, 90005c3e <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x56>
90005c00:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
90005c04:	b1e9      	cbz	r1, 90005c42 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5a>
90005c06:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90005c0a:	b1e1      	cbz	r1, 90005c46 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x5e>
90005c0c:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
90005c10:	b1d9      	cbz	r1, 90005c4a <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x62>
90005c12:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90005c16:	b1d1      	cbz	r1, 90005c4e <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x66>
90005c18:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
90005c1c:	b1c9      	cbz	r1, 90005c52 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6a>
90005c1e:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90005c22:	b1c1      	cbz	r1, 90005c56 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x6e>
90005c24:	f893 3491 	ldrb.w	r3, [r3, #1169]	; 0x491
90005c28:	b1bb      	cbz	r3, 90005c5a <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x72>
			return &view.bullets[i];
	}

	return NULL;
90005c2a:	2000      	movs	r0, #0
}
90005c2c:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c2e:	2101      	movs	r1, #1
			return &view.bullets[i];
90005c30:	232c      	movs	r3, #44	; 0x2c
90005c32:	f242 20e0 	movw	r0, #8928	; 0x22e0
90005c36:	fb03 2201 	mla	r2, r3, r1, r2
90005c3a:	4410      	add	r0, r2
90005c3c:	4770      	bx	lr
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c3e:	2102      	movs	r1, #2
90005c40:	e7f6      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c42:	2103      	movs	r1, #3
90005c44:	e7f4      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c46:	2104      	movs	r1, #4
90005c48:	e7f2      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c4a:	2105      	movs	r1, #5
90005c4c:	e7f0      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c4e:	2106      	movs	r1, #6
90005c50:	e7ee      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c52:	2107      	movs	r1, #7
90005c54:	e7ec      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c56:	2108      	movs	r1, #8
90005c58:	e7ea      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c5a:	2109      	movs	r1, #9
90005c5c:	e7e8      	b.n	90005c30 <_ZN25screen_asteroidsPresenter25get_next_invisible_bulletEv+0x48>
90005c5e:	bf00      	nop

90005c60 <_ZN25screen_asteroidsPresenter12move_bulletsEv>:

void screen_asteroidsPresenter::move_bullets()
{
90005c60:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	shoot_bullet();
90005c64:	6803      	ldr	r3, [r0, #0]
90005c66:	f242 26e0 	movw	r6, #8928	; 0x22e0

	for(int i = 0; i < BULLET_COUNT; i++) {
90005c6a:	2400      	movs	r4, #0
90005c6c:	f04f 0a2c 	mov.w	sl, #44	; 0x2c
90005c70:	f242 3905 	movw	r9, #8965	; 0x2305
        return rect.y;
90005c74:	f242 28e6 	movw	r8, #8934	; 0x22e6
	shoot_bullet();
90005c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
{
90005c7a:	4607      	mov	r7, r0
	shoot_bullet();
90005c7c:	4798      	blx	r3
		if( !view.bullets[i].isVisible() )
90005c7e:	69ba      	ldr	r2, [r7, #24]
        return visible;
90005c80:	fb0a f504 	mul.w	r5, sl, r4
        return rect.x;
90005c84:	f242 2be4 	movw	fp, #8932	; 0x22e4
	for(int i = 0; i < BULLET_COUNT; i++) {
90005c88:	3401      	adds	r4, #1
        return visible;
90005c8a:	eb02 0c05 	add.w	ip, r2, r5
			continue;

		// move the bullet
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005c8e:	1991      	adds	r1, r2, r6
90005c90:	4610      	mov	r0, r2
		if( !view.bullets[i].isVisible() )
90005c92:	f81c 3009 	ldrb.w	r3, [ip, r9]
90005c96:	b1a3      	cbz	r3, 90005cc2 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
		view.move_bullet(&view.bullets[i], view.bullets[i].getX(), view.bullets[i].getY() - BULLET_MOVES_PER_TICK);
90005c98:	f8d2 e000 	ldr.w	lr, [r2]
90005c9c:	f93c 3008 	ldrsh.w	r3, [ip, r8]
90005ca0:	f93c 200b 	ldrsh.w	r2, [ip, fp]
90005ca4:	3b0a      	subs	r3, #10
90005ca6:	f8de b074 	ldr.w	fp, [lr, #116]	; 0x74
90005caa:	47d8      	blx	fp

		// check if bullet is offscreen
		if( view.bullets[i].getY() < 0 ) {
90005cac:	69bb      	ldr	r3, [r7, #24]
        return rect.y;
90005cae:	441d      	add	r5, r3
			// remove the offscreen bullet
			view.move_bullet_offscreen(&view.bullets[i]);
90005cb0:	1999      	adds	r1, r3, r6
90005cb2:	4618      	mov	r0, r3
		if( view.bullets[i].getY() < 0 ) {
90005cb4:	f935 2008 	ldrsh.w	r2, [r5, r8]
90005cb8:	2a00      	cmp	r2, #0
90005cba:	da02      	bge.n	90005cc2 <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x62>
			view.move_bullet_offscreen(&view.bullets[i]);
90005cbc:	681b      	ldr	r3, [r3, #0]
90005cbe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90005cc0:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005cc2:	2c0a      	cmp	r4, #10
90005cc4:	f106 062c 	add.w	r6, r6, #44	; 0x2c
90005cc8:	d1d9      	bne.n	90005c7e <_ZN25screen_asteroidsPresenter12move_bulletsEv+0x1e>
		}
	}
}
90005cca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005cce:	bf00      	nop

90005cd0 <_ZThn4_N25screen_asteroidsPresenter12move_bulletsEv>:


    /*
     * BULLET STUFF
     */
    virtual void move_bullets();
90005cd0:	f1a0 0004 	sub.w	r0, r0, #4
90005cd4:	f7ff bfc4 	b.w	90005c60 <_ZN25screen_asteroidsPresenter12move_bulletsEv>

90005cd8 <_ZN25screen_asteroidsPresenter19is_allowed_to_shootEv>:

bool screen_asteroidsPresenter::is_allowed_to_shoot()
{
	return allowed_to_shoot;
}
90005cd8:	7d80      	ldrb	r0, [r0, #22]
90005cda:	4770      	bx	lr

90005cdc <_ZN25screen_asteroidsPresenter20set_allowed_to_shootEb>:

void screen_asteroidsPresenter::set_allowed_to_shoot(bool value)
{
	allowed_to_shoot = value;
90005cdc:	7581      	strb	r1, [r0, #22]
}
90005cde:	4770      	bx	lr

90005ce0 <_ZN25screen_asteroidsPresenter10hide_rocksEv>:
		}
	}
}

void screen_asteroidsPresenter::hide_rocks()
{
90005ce0:	b570      	push	{r4, r5, r6, lr}
90005ce2:	f242 1428 	movw	r4, #8488	; 0x2128
	for(int i = 0; i < ROCK_COUNT; i++) {
90005ce6:	f242 26e0 	movw	r6, #8928	; 0x22e0
{
90005cea:	4605      	mov	r5, r0
		view.hide_element(&view.rocks[i]);
90005cec:	69a8      	ldr	r0, [r5, #24]
90005cee:	6803      	ldr	r3, [r0, #0]
90005cf0:	1901      	adds	r1, r0, r4
	for(int i = 0; i < ROCK_COUNT; i++) {
90005cf2:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.rocks[i]);
90005cf4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005cf6:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005cf8:	42b4      	cmp	r4, r6
90005cfa:	d1f7      	bne.n	90005cec <_ZN25screen_asteroidsPresenter10hide_rocksEv+0xc>
	}
}
90005cfc:	bd70      	pop	{r4, r5, r6, pc}
90005cfe:	bf00      	nop

90005d00 <_ZN25screen_asteroidsPresenter12hide_bulletsEv>:


void screen_asteroidsPresenter::hide_bullets()
{
90005d00:	b570      	push	{r4, r5, r6, lr}
90005d02:	f242 24e0 	movw	r4, #8928	; 0x22e0
	for(int i = 0; i < BULLET_COUNT; i++) {
90005d06:	f242 4698 	movw	r6, #9368	; 0x2498
{
90005d0a:	4605      	mov	r5, r0
		view.hide_element(&view.bullets[i]);
90005d0c:	69a8      	ldr	r0, [r5, #24]
90005d0e:	6803      	ldr	r3, [r0, #0]
90005d10:	1901      	adds	r1, r0, r4
	for(int i = 0; i < BULLET_COUNT; i++) {
90005d12:	342c      	adds	r4, #44	; 0x2c
		view.hide_element(&view.bullets[i]);
90005d14:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90005d16:	4798      	blx	r3
	for(int i = 0; i < BULLET_COUNT; i++) {
90005d18:	42b4      	cmp	r4, r6
90005d1a:	d1f7      	bne.n	90005d0c <_ZN25screen_asteroidsPresenter12hide_bulletsEv+0xc>
	}
}
90005d1c:	bd70      	pop	{r4, r5, r6, pc}
90005d1e:	bf00      	nop

90005d20 <_ZN25screen_asteroidsPresenter14set_invincibleEb>:

void screen_asteroidsPresenter::set_invincible(bool value)
{
	invincible = value;

	view.set_ship_invincible(invincible);
90005d20:	6983      	ldr	r3, [r0, #24]
	invincible = value;
90005d22:	75c1      	strb	r1, [r0, #23]
	view.set_ship_invincible(invincible);
90005d24:	681a      	ldr	r2, [r3, #0]
90005d26:	4618      	mov	r0, r3
90005d28:	6e13      	ldr	r3, [r2, #96]	; 0x60
90005d2a:	4718      	bx	r3

90005d2c <_ZN25screen_asteroidsPresenter13is_invincibleEv>:
}

bool screen_asteroidsPresenter::is_invincible()
{
	return invincible;
}
90005d2c:	7dc0      	ldrb	r0, [r0, #23]
90005d2e:	4770      	bx	lr

90005d30 <_ZN25screen_asteroidsPresenterD0Ev>:
    virtual ~screen_asteroidsPresenter() {}
90005d30:	b510      	push	{r4, lr}
90005d32:	4604      	mov	r4, r0
90005d34:	211c      	movs	r1, #28
90005d36:	f020 fa3c 	bl	900261b2 <_ZdlPvj>
90005d3a:	4620      	mov	r0, r4
90005d3c:	bd10      	pop	{r4, pc}
90005d3e:	bf00      	nop

90005d40 <_ZThn4_N25screen_asteroidsPresenterD0Ev>:
90005d40:	b500      	push	{lr}
90005d42:	3804      	subs	r0, #4
90005d44:	b083      	sub	sp, #12
90005d46:	211c      	movs	r1, #28
90005d48:	9001      	str	r0, [sp, #4]
90005d4a:	f020 fa32 	bl	900261b2 <_ZdlPvj>
90005d4e:	9801      	ldr	r0, [sp, #4]
90005d50:	b003      	add	sp, #12
90005d52:	f85d fb04 	ldr.w	pc, [sp], #4
90005d56:	bf00      	nop

90005d58 <_ZN25screen_asteroidsPresenter21resume_asteroids_taskEv>:
	model->resume_asteroids_task();
90005d58:	6880      	ldr	r0, [r0, #8]
90005d5a:	f7ff be37 	b.w	900059cc <_ZN5Model21resume_asteroids_taskEv>
90005d5e:	bf00      	nop

90005d60 <_ZN25screen_asteroidsPresenter22suspend_asteroids_taskEv>:
	model->suspend_asteroids_task();
90005d60:	6880      	ldr	r0, [r0, #8]
90005d62:	f7ff be35 	b.w	900059d0 <_ZN5Model22suspend_asteroids_taskEv>
90005d66:	bf00      	nop

90005d68 <_ZThn4_N25screen_asteroidsPresenter25is_asteroids_game_startedEv>:
90005d68:	7c40      	ldrb	r0, [r0, #17]
90005d6a:	4770      	bx	lr

90005d6c <_ZThn4_N25screen_asteroidsPresenter20set_allowed_to_shootEb>:
90005d6c:	7481      	strb	r1, [r0, #18]
90005d6e:	4770      	bx	lr

90005d70 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>:
		}
	}
}

void screen_asteroidsPresenter::check_bullet_collisions()
{
90005d70:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005d74:	f242 27e0 	movw	r7, #8928	; 0x22e0
	for(int i = 0; i < BULLET_COUNT; i++) {
90005d78:	f04f 0b00 	mov.w	fp, #0
        return visible;
90005d7c:	f04f 082c 	mov.w	r8, #44	; 0x2c
{
90005d80:	4605      	mov	r5, r0
90005d82:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 90005e40 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xd0>
90005d86:	e005      	b.n	90005d94 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x24>
	for(int i = 0; i < BULLET_COUNT; i++) {
90005d88:	f10b 0b01 	add.w	fp, fp, #1
90005d8c:	372c      	adds	r7, #44	; 0x2c
90005d8e:	f1bb 0f0a 	cmp.w	fp, #10
90005d92:	d053      	beq.n	90005e3c <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xcc>
		if( !view.bullets[i].isVisible() )
90005d94:	69a8      	ldr	r0, [r5, #24]
90005d96:	f242 3305 	movw	r3, #8965	; 0x2305
90005d9a:	fb08 020b 	mla	r2, r8, fp, r0
90005d9e:	5cd3      	ldrb	r3, [r2, r3]
90005da0:	2b00      	cmp	r3, #0
90005da2:	d0f1      	beq.n	90005d88 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
90005da4:	f242 1628 	movw	r6, #8488	; 0x2128
			continue;

		for(int j = 0; j < ROCK_COUNT; j++) {
90005da8:	2400      	movs	r4, #0
90005daa:	f242 194d 	movw	r9, #8525	; 0x214d
90005dae:	e02f      	b.n	90005e10 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0xa0>
	}
}

bool screen_asteroidsPresenter::elements_collide(Drawable *element1, Drawable *element2)
{
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005db0:	f9b1 2004 	ldrsh.w	r2, [r1, #4]
90005db4:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005db8:	f9bc e004 	ldrsh.w	lr, [ip, #4]
90005dbc:	4413      	add	r3, r2
90005dbe:	459e      	cmp	lr, r3
90005dc0:	dc21      	bgt.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005dc2:	f9bc 3008 	ldrsh.w	r3, [ip, #8]
90005dc6:	4473      	add	r3, lr
90005dc8:	429a      	cmp	r2, r3
90005dca:	dc1c      	bgt.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
		return false;
	}

	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005dcc:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005dd0:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005dd4:	f9bc e006 	ldrsh.w	lr, [ip, #6]
90005dd8:	4413      	add	r3, r2
90005dda:	459e      	cmp	lr, r3
90005ddc:	dc13      	bgt.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
90005dde:	f9bc 300a 	ldrsh.w	r3, [ip, #10]
90005de2:	4473      	add	r3, lr
90005de4:	429a      	cmp	r2, r3
90005de6:	dc0e      	bgt.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005de8:	6803      	ldr	r3, [r0, #0]
90005dea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005dec:	4798      	blx	r3
				view.move_bullet_offscreen(&view.bullets[i]);
90005dee:	69a8      	ldr	r0, [r5, #24]
90005df0:	6803      	ldr	r3, [r0, #0]
90005df2:	19c1      	adds	r1, r0, r7
90005df4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
90005df6:	4798      	blx	r3
				score++;
90005df8:	6929      	ldr	r1, [r5, #16]
				view.update_score(score);
90005dfa:	69a8      	ldr	r0, [r5, #24]
				score++;
90005dfc:	3101      	adds	r1, #1
				view.update_score(score);
90005dfe:	6803      	ldr	r3, [r0, #0]
				score++;
90005e00:	6129      	str	r1, [r5, #16]
				view.update_score(score);
90005e02:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005e04:	4798      	blx	r3
		for(int j = 0; j < ROCK_COUNT; j++) {
90005e06:	3401      	adds	r4, #1
90005e08:	362c      	adds	r6, #44	; 0x2c
90005e0a:	2c0a      	cmp	r4, #10
90005e0c:	d0bc      	beq.n	90005d88 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x18>
			if( !view.rocks[j].isVisible() )
90005e0e:	69a8      	ldr	r0, [r5, #24]
90005e10:	fb08 0304 	mla	r3, r8, r4, r0
90005e14:	f813 3009 	ldrb.w	r3, [r3, r9]
90005e18:	2b00      	cmp	r3, #0
90005e1a:	d0f4      	beq.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
			if(elements_collide(&view.bullets[i], &view.rocks[j])) {
90005e1c:	682b      	ldr	r3, [r5, #0]
90005e1e:	eb00 0c07 	add.w	ip, r0, r7
90005e22:	1981      	adds	r1, r0, r6
90005e24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005e26:	4553      	cmp	r3, sl
90005e28:	d0c2      	beq.n	90005db0 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x40>
90005e2a:	460a      	mov	r2, r1
90005e2c:	4628      	mov	r0, r5
90005e2e:	4661      	mov	r1, ip
90005e30:	4798      	blx	r3
90005e32:	2800      	cmp	r0, #0
90005e34:	d0e7      	beq.n	90005e06 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x96>
				view.move_rock_offscreen(&view.rocks[j]);
90005e36:	69a8      	ldr	r0, [r5, #24]
90005e38:	1981      	adds	r1, r0, r6
90005e3a:	e7d5      	b.n	90005de8 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv+0x78>
}
90005e3c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
90005e40:	90005e4d 	.word	0x90005e4d

90005e44 <_ZThn4_N25screen_asteroidsPresenter23check_bullet_collisionsEv>:
    virtual void hide_bullets();

    virtual Drawable* get_next_invisible_bullet();

    virtual void check_bullet_collisions();
90005e44:	f1a0 0004 	sub.w	r0, r0, #4
90005e48:	f7ff bf92 	b.w	90005d70 <_ZN25screen_asteroidsPresenter23check_bullet_collisionsEv>

90005e4c <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_>:
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005e4c:	f9b2 0004 	ldrsh.w	r0, [r2, #4]
90005e50:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005e54:	f9b1 c004 	ldrsh.w	ip, [r1, #4]
90005e58:	4403      	add	r3, r0
90005e5a:	459c      	cmp	ip, r3
90005e5c:	dc15      	bgt.n	90005e8a <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005e5e:	f9b1 3008 	ldrsh.w	r3, [r1, #8]
90005e62:	4463      	add	r3, ip
90005e64:	4298      	cmp	r0, r3
90005e66:	dc10      	bgt.n	90005e8a <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005e68:	f9b2 0006 	ldrsh.w	r0, [r2, #6]
90005e6c:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005e70:	f9b1 2006 	ldrsh.w	r2, [r1, #6]
90005e74:	4403      	add	r3, r0
90005e76:	429a      	cmp	r2, r3
90005e78:	dc07      	bgt.n	90005e8a <_ZN25screen_asteroidsPresenter16elements_collideEPN8touchgfx8DrawableES2_+0x3e>
90005e7a:	f9b1 300a 	ldrsh.w	r3, [r1, #10]
90005e7e:	4413      	add	r3, r2
90005e80:	4298      	cmp	r0, r3
90005e82:	bfcc      	ite	gt
90005e84:	2000      	movgt	r0, #0
90005e86:	2001      	movle	r0, #1
90005e88:	4770      	bx	lr
		return false;
90005e8a:	2000      	movs	r0, #0
	}

	return true;
}
90005e8c:	4770      	bx	lr
90005e8e:	bf00      	nop

90005e90 <_ZThn4_N25screen_asteroidsPresenter14set_invincibleEb>:
90005e90:	6943      	ldr	r3, [r0, #20]
90005e92:	74c1      	strb	r1, [r0, #19]
90005e94:	681a      	ldr	r2, [r3, #0]
90005e96:	4618      	mov	r0, r3
90005e98:	6e13      	ldr	r3, [r2, #96]	; 0x60
90005e9a:	4718      	bx	r3

90005e9c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>:
{
90005e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90005ea0:	4604      	mov	r4, r0
	Drawable *ship = view.get_ship_pointer();
90005ea2:	6980      	ldr	r0, [r0, #24]
90005ea4:	f242 1a28 	movw	sl, #8488	; 0x2128
	for(int i = 0; i < ROCK_COUNT; i++) {
90005ea8:	2500      	movs	r5, #0
	Drawable *ship = view.get_ship_pointer();
90005eaa:	6803      	ldr	r3, [r0, #0]
90005eac:	4f3c      	ldr	r7, [pc, #240]	; (90005fa0 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x104>)
90005eae:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005eb0:	4798      	blx	r3
90005eb2:	f8df 80f4 	ldr.w	r8, [pc, #244]	; 90005fa8 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x10c>
90005eb6:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 90005fac <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x110>
90005eba:	4606      	mov	r6, r0
90005ebc:	69a3      	ldr	r3, [r4, #24]
90005ebe:	212c      	movs	r1, #44	; 0x2c
90005ec0:	f242 124d 	movw	r2, #8525	; 0x214d
90005ec4:	fb01 3305 	mla	r3, r1, r5, r3
		if( !view.rocks[i].isVisible() )
90005ec8:	5c9b      	ldrb	r3, [r3, r2]
90005eca:	2b00      	cmp	r3, #0
90005ecc:	d04f      	beq.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
		if( is_invincible() )
90005ece:	6823      	ldr	r3, [r4, #0]
90005ed0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90005ed2:	42bb      	cmp	r3, r7
90005ed4:	d152      	bne.n	90005f7c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe0>
	return invincible;
90005ed6:	7de0      	ldrb	r0, [r4, #23]
		if( is_invincible() )
90005ed8:	2800      	cmp	r0, #0
90005eda:	d148      	bne.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
		if( elements_collide(ship, &view.rocks[i]) ) {
90005edc:	6823      	ldr	r3, [r4, #0]
90005ede:	69a0      	ldr	r0, [r4, #24]
90005ee0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90005ee2:	eb00 020a 	add.w	r2, r0, sl
90005ee6:	4543      	cmp	r3, r8
90005ee8:	d14b      	bne.n	90005f82 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xe6>
	if( element1->getX() > (element2->getX() + element2->getWidth()) || (element1->getX() + element1->getWidth()) < element2->getX()) {
90005eea:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90005eee:	f9b2 3008 	ldrsh.w	r3, [r2, #8]
90005ef2:	f9b6 c004 	ldrsh.w	ip, [r6, #4]
90005ef6:	440b      	add	r3, r1
90005ef8:	459c      	cmp	ip, r3
90005efa:	dc38      	bgt.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
90005efc:	f9b6 3008 	ldrsh.w	r3, [r6, #8]
90005f00:	4463      	add	r3, ip
90005f02:	4299      	cmp	r1, r3
90005f04:	dc33      	bgt.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
	if( element1->getY() > (element2->getY() + element2->getHeight()) || (element1->getY() + element1->getHeight()) < element2->getY()) {
90005f06:	f9b2 1006 	ldrsh.w	r1, [r2, #6]
90005f0a:	f9b2 300a 	ldrsh.w	r3, [r2, #10]
90005f0e:	f9b6 2006 	ldrsh.w	r2, [r6, #6]
90005f12:	440b      	add	r3, r1
90005f14:	429a      	cmp	r2, r3
90005f16:	dc2a      	bgt.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
90005f18:	f9b6 300a 	ldrsh.w	r3, [r6, #10]
90005f1c:	4413      	add	r3, r2
90005f1e:	4299      	cmp	r1, r3
90005f20:	dc25      	bgt.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
			lives--;
90005f22:	7b21      	ldrb	r1, [r4, #12]
90005f24:	3901      	subs	r1, #1
90005f26:	b2c9      	uxtb	r1, r1
90005f28:	7321      	strb	r1, [r4, #12]
			view.update_hearts(lives);
90005f2a:	6803      	ldr	r3, [r0, #0]
90005f2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90005f2e:	4798      	blx	r3
			view.move_rock_offscreen(&view.rocks[i]);
90005f30:	69a0      	ldr	r0, [r4, #24]
90005f32:	6803      	ldr	r3, [r0, #0]
90005f34:	eb00 010a 	add.w	r1, r0, sl
90005f38:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90005f3a:	4798      	blx	r3
			if( lives == 0 ) {
90005f3c:	7b23      	ldrb	r3, [r4, #12]
90005f3e:	b94b      	cbnz	r3, 90005f54 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xb8>
				game_over();
90005f40:	6822      	ldr	r2, [r4, #0]
90005f42:	4918      	ldr	r1, [pc, #96]	; (90005fa4 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x108>)
90005f44:	6a52      	ldr	r2, [r2, #36]	; 0x24
90005f46:	428a      	cmp	r2, r1
90005f48:	d126      	bne.n	90005f98 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xfc>
	view.show_endgame_screen();
90005f4a:	69a0      	ldr	r0, [r4, #24]
	game_started = false;
90005f4c:	7563      	strb	r3, [r4, #21]
	view.show_endgame_screen();
90005f4e:	6803      	ldr	r3, [r0, #0]
90005f50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90005f52:	4798      	blx	r3
			model->start_invincibility_timer();
90005f54:	68a0      	ldr	r0, [r4, #8]
90005f56:	f7ff fd31 	bl	900059bc <_ZN5Model25start_invincibility_timerEv>
			set_invincible(true);
90005f5a:	6823      	ldr	r3, [r4, #0]
90005f5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90005f5e:	454b      	cmp	r3, r9
90005f60:	d116      	bne.n	90005f90 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xf4>
	view.set_ship_invincible(invincible);
90005f62:	69a0      	ldr	r0, [r4, #24]
	invincible = value;
90005f64:	2101      	movs	r1, #1
	view.set_ship_invincible(invincible);
90005f66:	6803      	ldr	r3, [r0, #0]
	invincible = value;
90005f68:	75e1      	strb	r1, [r4, #23]
	view.set_ship_invincible(invincible);
90005f6a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
90005f6c:	4798      	blx	r3
	for(int i = 0; i < ROCK_COUNT; i++) {
90005f6e:	3501      	adds	r5, #1
90005f70:	f10a 0a2c 	add.w	sl, sl, #44	; 0x2c
90005f74:	2d0a      	cmp	r5, #10
90005f76:	d1a1      	bne.n	90005ebc <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x20>
}
90005f78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		if( is_invincible() )
90005f7c:	4620      	mov	r0, r4
90005f7e:	4798      	blx	r3
90005f80:	e7aa      	b.n	90005ed8 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x3c>
		if( elements_collide(ship, &view.rocks[i]) ) {
90005f82:	4631      	mov	r1, r6
90005f84:	4620      	mov	r0, r4
90005f86:	4798      	blx	r3
90005f88:	2800      	cmp	r0, #0
90005f8a:	d0f0      	beq.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
			view.update_hearts(lives);
90005f8c:	69a0      	ldr	r0, [r4, #24]
90005f8e:	e7c8      	b.n	90005f22 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0x86>
			set_invincible(true);
90005f90:	2101      	movs	r1, #1
90005f92:	4620      	mov	r0, r4
90005f94:	4798      	blx	r3
90005f96:	e7ea      	b.n	90005f6e <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xd2>
				game_over();
90005f98:	4620      	mov	r0, r4
90005f9a:	4790      	blx	r2
90005f9c:	e7da      	b.n	90005f54 <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv+0xb8>
90005f9e:	bf00      	nop
90005fa0:	90005d2d 	.word	0x90005d2d
90005fa4:	900059ed 	.word	0x900059ed
90005fa8:	90005e4d 	.word	0x90005e4d
90005fac:	90005d21 	.word	0x90005d21

90005fb0 <_ZThn4_N25screen_asteroidsPresenter21check_ship_collisionsEv>:
    virtual void check_ship_collisions();
90005fb0:	f1a0 0004 	sub.w	r0, r0, #4
90005fb4:	f7ff bf72 	b.w	90005e9c <_ZN25screen_asteroidsPresenter21check_ship_collisionsEv>

90005fb8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv>:
	if( !is_allowed_to_shoot() )
90005fb8:	6803      	ldr	r3, [r0, #0]
90005fba:	4a4a      	ldr	r2, [pc, #296]	; (900060e4 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x12c>)
90005fbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90005fbe:	4293      	cmp	r3, r2
{
90005fc0:	b570      	push	{r4, r5, r6, lr}
90005fc2:	4604      	mov	r4, r0
90005fc4:	d14d      	bne.n	90006062 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xaa>
	return allowed_to_shoot;
90005fc6:	7d80      	ldrb	r0, [r0, #22]
	if( !is_allowed_to_shoot() )
90005fc8:	b150      	cbz	r0, 90005fe0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	Drawable *ship = view.get_ship_pointer();
90005fca:	69a0      	ldr	r0, [r4, #24]
90005fcc:	6803      	ldr	r3, [r0, #0]
90005fce:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005fd0:	4798      	blx	r3
	if( view.bullet_button_pressed() )
90005fd2:	69a3      	ldr	r3, [r4, #24]
	Drawable *ship = view.get_ship_pointer();
90005fd4:	4605      	mov	r5, r0
	if( view.bullet_button_pressed() )
90005fd6:	681a      	ldr	r2, [r3, #0]
90005fd8:	4618      	mov	r0, r3
90005fda:	6ed3      	ldr	r3, [r2, #108]	; 0x6c
90005fdc:	4798      	blx	r3
90005fde:	b900      	cbnz	r0, 90005fe2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x2a>
}
90005fe0:	bd70      	pop	{r4, r5, r6, pc}
		model->start_bullet_timer();
90005fe2:	68a0      	ldr	r0, [r4, #8]
90005fe4:	f7ff fce2 	bl	900059ac <_ZN5Model18start_bullet_timerEv>
		set_allowed_to_shoot(false);
90005fe8:	6823      	ldr	r3, [r4, #0]
90005fea:	493f      	ldr	r1, [pc, #252]	; (900060e8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x130>)
90005fec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90005fee:	428a      	cmp	r2, r1
90005ff0:	d15a      	bne.n	900060a8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xf0>
	allowed_to_shoot = value;
90005ff2:	2200      	movs	r2, #0
90005ff4:	75a2      	strb	r2, [r4, #22]
		Drawable *new_bullet = get_next_invisible_bullet();
90005ff6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
90005ff8:	4a3c      	ldr	r2, [pc, #240]	; (900060ec <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x134>)
90005ffa:	4293      	cmp	r3, r2
90005ffc:	d133      	bne.n	90006066 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xae>
		if( !view.bullets[i].isVisible() )
90005ffe:	69a2      	ldr	r2, [r4, #24]
90006000:	f502 5300 	add.w	r3, r2, #8192	; 0x2000
90006004:	f893 1305 	ldrb.w	r1, [r3, #773]	; 0x305
90006008:	b321      	cbz	r1, 90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
9000600a:	f893 1331 	ldrb.w	r1, [r3, #817]	; 0x331
9000600e:	2900      	cmp	r1, #0
90006010:	d057      	beq.n	900060c2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10a>
90006012:	f893 135d 	ldrb.w	r1, [r3, #861]	; 0x35d
90006016:	2900      	cmp	r1, #0
90006018:	d055      	beq.n	900060c6 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10e>
9000601a:	f893 1389 	ldrb.w	r1, [r3, #905]	; 0x389
9000601e:	2900      	cmp	r1, #0
90006020:	d053      	beq.n	900060ca <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x112>
90006022:	f893 13b5 	ldrb.w	r1, [r3, #949]	; 0x3b5
90006026:	2900      	cmp	r1, #0
90006028:	d051      	beq.n	900060ce <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x116>
9000602a:	f893 13e1 	ldrb.w	r1, [r3, #993]	; 0x3e1
9000602e:	2900      	cmp	r1, #0
90006030:	d04f      	beq.n	900060d2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11a>
90006032:	f893 140d 	ldrb.w	r1, [r3, #1037]	; 0x40d
90006036:	2900      	cmp	r1, #0
90006038:	d04d      	beq.n	900060d6 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x11e>
9000603a:	f893 1439 	ldrb.w	r1, [r3, #1081]	; 0x439
9000603e:	2900      	cmp	r1, #0
90006040:	d04b      	beq.n	900060da <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x122>
90006042:	f893 1465 	ldrb.w	r1, [r3, #1125]	; 0x465
90006046:	2900      	cmp	r1, #0
90006048:	d049      	beq.n	900060de <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x126>
9000604a:	f893 3491 	ldrb.w	r3, [r3, #1169]	; 0x491
9000604e:	2b00      	cmp	r3, #0
90006050:	d1c6      	bne.n	90005fe0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
	for(int i = 0; i < BULLET_COUNT; i++) {
90006052:	2109      	movs	r1, #9
			return &view.bullets[i];
90006054:	232c      	movs	r3, #44	; 0x2c
90006056:	f242 24e0 	movw	r4, #8928	; 0x22e0
9000605a:	fb03 2201 	mla	r2, r3, r1, r2
9000605e:	4414      	add	r4, r2
		if( new_bullet != NULL )
90006060:	e006      	b.n	90006070 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xb8>
	if( !is_allowed_to_shoot() )
90006062:	4798      	blx	r3
90006064:	e7b0      	b.n	90005fc8 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x10>
		Drawable *new_bullet = get_next_invisible_bullet();
90006066:	4620      	mov	r0, r4
90006068:	4798      	blx	r3
		if( new_bullet != NULL )
9000606a:	4604      	mov	r4, r0
9000606c:	2800      	cmp	r0, #0
9000606e:	d0b7      	beq.n	90005fe0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x28>
        visible = vis;
90006070:	2301      	movs	r3, #1
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
90006072:	88a9      	ldrh	r1, [r5, #4]
90006074:	6822      	ldr	r2, [r4, #0]
90006076:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
9000607a:	3901      	subs	r1, #1
9000607c:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90006080:	6b16      	ldr	r6, [r2, #48]	; 0x30
90006082:	2b00      	cmp	r3, #0
90006084:	bfb8      	it	lt
90006086:	3301      	addlt	r3, #1
90006088:	eb01 0163 	add.w	r1, r1, r3, asr #1
9000608c:	4b18      	ldr	r3, [pc, #96]	; (900060f0 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x138>)
9000608e:	429e      	cmp	r6, r3
90006090:	b209      	sxth	r1, r1
90006092:	d112      	bne.n	900060ba <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x102>
        rect.x = x;
90006094:	80a1      	strh	r1, [r4, #4]
			new_bullet->setY(ship->getY() + 1);
90006096:	6b53      	ldr	r3, [r2, #52]	; 0x34
90006098:	88e9      	ldrh	r1, [r5, #6]
9000609a:	4a16      	ldr	r2, [pc, #88]	; (900060f4 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x13c>)
9000609c:	3101      	adds	r1, #1
9000609e:	4293      	cmp	r3, r2
900060a0:	b209      	sxth	r1, r1
900060a2:	d106      	bne.n	900060b2 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xfa>
        rect.y = y;
900060a4:	80e1      	strh	r1, [r4, #6]
}
900060a6:	bd70      	pop	{r4, r5, r6, pc}
		set_allowed_to_shoot(false);
900060a8:	2100      	movs	r1, #0
900060aa:	4620      	mov	r0, r4
900060ac:	4790      	blx	r2
		Drawable *new_bullet = get_next_invisible_bullet();
900060ae:	6823      	ldr	r3, [r4, #0]
900060b0:	e7a1      	b.n	90005ff6 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x3e>
			new_bullet->setY(ship->getY() + 1);
900060b2:	4620      	mov	r0, r4
}
900060b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			new_bullet->setY(ship->getY() + 1);
900060b8:	4718      	bx	r3
			new_bullet->setX(ship->getX() + (ship->getWidth()/2) - 1);
900060ba:	4620      	mov	r0, r4
900060bc:	47b0      	blx	r6
			new_bullet->setY(ship->getY() + 1);
900060be:	6822      	ldr	r2, [r4, #0]
900060c0:	e7e9      	b.n	90006096 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0xde>
	for(int i = 0; i < BULLET_COUNT; i++) {
900060c2:	2101      	movs	r1, #1
900060c4:	e7c6      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060c6:	2102      	movs	r1, #2
900060c8:	e7c4      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060ca:	2103      	movs	r1, #3
900060cc:	e7c2      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060ce:	2104      	movs	r1, #4
900060d0:	e7c0      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060d2:	2105      	movs	r1, #5
900060d4:	e7be      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060d6:	2106      	movs	r1, #6
900060d8:	e7bc      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060da:	2107      	movs	r1, #7
900060dc:	e7ba      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060de:	2108      	movs	r1, #8
900060e0:	e7b8      	b.n	90006054 <_ZN25screen_asteroidsPresenter12shoot_bulletEv+0x9c>
900060e2:	bf00      	nop
900060e4:	90005cd9 	.word	0x90005cd9
900060e8:	90005cdd 	.word	0x90005cdd
900060ec:	90005be9 	.word	0x90005be9
900060f0:	900023fd 	.word	0x900023fd
900060f4:	90002401 	.word	0x90002401

900060f8 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView>:
    : view(v)
900060f8:	4a08      	ldr	r2, [pc, #32]	; (9000611c <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x24>)
900060fa:	6181      	str	r1, [r0, #24]
900060fc:	4908      	ldr	r1, [pc, #32]	; (90006120 <_ZN25screen_asteroidsPresenterC1ER20screen_asteroidsView+0x28>)
screen_asteroidsPresenter::screen_asteroidsPresenter(screen_asteroidsView& v)
900060fe:	b410      	push	{r4}
    ModelListener() : model(0) {}
90006100:	2400      	movs	r4, #0
    : view(v)
90006102:	6141      	str	r1, [r0, #20]
90006104:	2103      	movs	r1, #3
90006106:	6084      	str	r4, [r0, #8]
90006108:	6104      	str	r4, [r0, #16]
9000610a:	f102 0408 	add.w	r4, r2, #8
9000610e:	3270      	adds	r2, #112	; 0x70
90006110:	7301      	strb	r1, [r0, #12]
90006112:	e9c0 4200 	strd	r4, r2, [r0]
}
90006116:	f85d 4b04 	ldr.w	r4, [sp], #4
9000611a:	4770      	bx	lr
9000611c:	90029d28 	.word	0x90029d28
90006120:	00010004 	.word	0x00010004

90006124 <_ZN20screen_asteroidsView14tearDownScreenEv>:
}

void screen_asteroidsView::tearDownScreen()
{
    screen_asteroidsViewBase::tearDownScreen();
}
90006124:	4770      	bx	lr
90006126:	bf00      	nop

90006128 <_ZN20screen_asteroidsView21resume_asteroids_taskEv>:

void screen_asteroidsView::resume_asteroids_task()
{
	presenter->resume_asteroids_task();
90006128:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9000612a:	6803      	ldr	r3, [r0, #0]
9000612c:	691b      	ldr	r3, [r3, #16]
9000612e:	4718      	bx	r3

90006130 <_ZN20screen_asteroidsView22suspend_asteroids_taskEv>:
}

void screen_asteroidsView::suspend_asteroids_task()
{
	presenter->suspend_asteroids_task();
90006130:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90006132:	6803      	ldr	r3, [r0, #0]
90006134:	695b      	ldr	r3, [r3, #20]
90006136:	4718      	bx	r3

90006138 <_ZN20screen_asteroidsView20start_asteroids_gameEv>:
}

void screen_asteroidsView::start_asteroids_game()
{
	presenter->start_asteroids_game();
90006138:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
9000613a:	6803      	ldr	r3, [r0, #0]
9000613c:	69db      	ldr	r3, [r3, #28]
9000613e:	4718      	bx	r3

90006140 <_ZN20screen_asteroidsView19show_endgame_screenEv>:
}

void screen_asteroidsView::show_endgame_screen()
{
90006140:	b510      	push	{r4, lr}
90006142:	4604      	mov	r4, r0
	presenter->hide_rocks();
90006144:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90006146:	6803      	ldr	r3, [r0, #0]
90006148:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9000614a:	4798      	blx	r3
	presenter->hide_bullets();
9000614c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
9000614e:	6803      	ldr	r3, [r0, #0]
90006150:	6d5b      	ldr	r3, [r3, #84]	; 0x54
90006152:	4798      	blx	r3
        return parent;
90006154:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
        visible = vis;
90006158:	2101      	movs	r1, #1
9000615a:	2200      	movs	r2, #0
	container_game_over.setVisible(true);
	container_controls.setVisible(false);
	container_controls.getParent()->invalidateContent();
9000615c:	6803      	ldr	r3, [r0, #0]
9000615e:	f884 13f9 	strb.w	r1, [r4, #1017]	; 0x3f9
90006162:	699b      	ldr	r3, [r3, #24]
90006164:	f884 2275 	strb.w	r2, [r4, #629]	; 0x275
90006168:	4798      	blx	r3
        return parent;
9000616a:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
9000616e:	6803      	ldr	r3, [r0, #0]
}
90006170:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
90006174:	699b      	ldr	r3, [r3, #24]
90006176:	4718      	bx	r3

90006178 <_ZN20screen_asteroidsView19hide_endgame_screenEv>:

void screen_asteroidsView::hide_endgame_screen()
{
90006178:	b510      	push	{r4, lr}
        visible = vis;
9000617a:	2301      	movs	r3, #1
9000617c:	4604      	mov	r4, r0
        return parent;
9000617e:	f8d0 0264 	ldr.w	r0, [r0, #612]	; 0x264
        visible = vis;
90006182:	2200      	movs	r2, #0
90006184:	f884 3275 	strb.w	r3, [r4, #629]	; 0x275
	container_game_over.setVisible(false);
	container_controls.setVisible(true);
	container_controls.getParent()->invalidateContent();
90006188:	6803      	ldr	r3, [r0, #0]
9000618a:	f884 23f9 	strb.w	r2, [r4, #1017]	; 0x3f9
9000618e:	699b      	ldr	r3, [r3, #24]
90006190:	4798      	blx	r3
        return parent;
90006192:	f8d4 03e8 	ldr.w	r0, [r4, #1000]	; 0x3e8
	container_game_over.getParent()->invalidateContent();
90006196:	6803      	ldr	r3, [r0, #0]
}
90006198:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	container_game_over.getParent()->invalidateContent();
9000619c:	699b      	ldr	r3, [r3, #24]
9000619e:	4718      	bx	r3

900061a0 <_ZN20screen_asteroidsView15getShipPositionEPiS0_>:
}

void screen_asteroidsView::getShipPosition(int *x, int *y)
{
	*x = icon_ship.getX();
	*y = icon_ship.getY();
900061a0:	f9b0 30ca 	ldrsh.w	r3, [r0, #202]	; 0xca
{
900061a4:	b410      	push	{r4}
	*x = icon_ship.getX();
900061a6:	f9b0 40c8 	ldrsh.w	r4, [r0, #200]	; 0xc8
900061aa:	600c      	str	r4, [r1, #0]
}
900061ac:	f85d 4b04 	ldr.w	r4, [sp], #4
	*y = icon_ship.getY();
900061b0:	6013      	str	r3, [r2, #0]
}
900061b2:	4770      	bx	lr

900061b4 <_ZN20screen_asteroidsView16get_ship_pointerEv>:

Drawable* screen_asteroidsView::get_ship_pointer()
{
	return &icon_ship;
}
900061b4:	30c4      	adds	r0, #196	; 0xc4
900061b6:	4770      	bx	lr

900061b8 <_ZN20screen_asteroidsView19set_ship_invincibleEb>:
900061b8:	2900      	cmp	r1, #0
900061ba:	f64f 73ff 	movw	r3, #65535	; 0xffff
900061be:	bf1a      	itte	ne
900061c0:	f04f 22ff 	movne.w	r2, #4278255360	; 0xff00ff00
900061c4:	f44f 63fc 	movne.w	r3, #2016	; 0x7e0
900061c8:	f04f 32ff 	moveq.w	r2, #4294967295
900061cc:	f8a0 3150 	strh.w	r3, [r0, #336]	; 0x150
900061d0:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
		icon_shipPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
	}
	else {
		icon_shipPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}
}
900061d4:	4770      	bx	lr
900061d6:	bf00      	nop

900061d8 <_ZN20screen_asteroidsView9move_shipEii>:
900061d8:	f8d0 30d8 	ldr.w	r3, [r0, #216]	; 0xd8

void screen_asteroidsView::move_ship(int x, int y)
{
	icon_ship.setX(x);
	icon_ship.setY(y);
900061dc:	f8a0 20ca 	strh.w	r2, [r0, #202]	; 0xca
	icon_ship.getParent()->invalidateContent();
900061e0:	681a      	ldr	r2, [r3, #0]
	icon_ship.setX(x);
900061e2:	f8a0 10c8 	strh.w	r1, [r0, #200]	; 0xc8
	icon_ship.getParent()->invalidateContent();
900061e6:	4618      	mov	r0, r3
900061e8:	6993      	ldr	r3, [r2, #24]
900061ea:	4718      	bx	r3

900061ec <_ZN20screen_asteroidsView21bullet_button_pressedEv>:
}

bool screen_asteroidsView::bullet_button_pressed()
{
	return btn_shoot.getPressedState();
}
900061ec:	f890 0398 	ldrb.w	r0, [r0, #920]	; 0x398
900061f0:	4770      	bx	lr
900061f2:	bf00      	nop

900061f4 <_ZN20screen_asteroidsView12hide_elementEPN8touchgfx8DrawableE>:
        visible = vis;
900061f4:	2300      	movs	r3, #0
        return parent;
900061f6:	6948      	ldr	r0, [r1, #20]
        visible = vis;
900061f8:	f881 3025 	strb.w	r3, [r1, #37]	; 0x25

void screen_asteroidsView::hide_element(Drawable *element)
{
	element->setVisible(false);
	element->getParent()->invalidateContent();
900061fc:	6803      	ldr	r3, [r0, #0]
900061fe:	699b      	ldr	r3, [r3, #24]
90006200:	4718      	bx	r3
90006202:	bf00      	nop

90006204 <_ZN20screen_asteroidsView12update_scoreEj>:
{
90006204:	b510      	push	{r4, lr}
90006206:	4604      	mov	r4, r0
90006208:	460b      	mov	r3, r1
	Unicode::snprintf(lbl_scoreBuffer, LBL_SCORE_SIZE, "%05u", score);
9000620a:	4a08      	ldr	r2, [pc, #32]	; (9000622c <_ZN20screen_asteroidsView12update_scoreEj+0x28>)
9000620c:	2106      	movs	r1, #6
9000620e:	f200 40ec 	addw	r0, r0, #1260	; 0x4ec
90006212:	f011 ff07 	bl	90018024 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        if (visible)
90006216:	f894 3179 	ldrb.w	r3, [r4, #377]	; 0x179
9000621a:	b12b      	cbz	r3, 90006228 <_ZN20screen_asteroidsView12update_scoreEj+0x24>
            invalidate();
9000621c:	f504 70aa 	add.w	r0, r4, #340	; 0x154
}
90006220:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006224:	f00f bef1 	b.w	9001600a <_ZNK8touchgfx8Drawable10invalidateEv>
90006228:	bd10      	pop	{r4, pc}
9000622a:	bf00      	nop
9000622c:	90029dc0 	.word	0x90029dc0

90006230 <_ZN20screen_asteroidsViewD1Ev>:
public:
    touchgfx::ScalableImage rocks[ROCK_COUNT];
    touchgfx::Box bullets[BULLET_COUNT];

    screen_asteroidsView();
    virtual ~screen_asteroidsView() {}
90006230:	b570      	push	{r4, r5, r6, lr}
90006232:	f242 24e0 	movw	r4, #8928	; 0x22e0
90006236:	f242 4598 	movw	r5, #9368	; 0x2498
9000623a:	4b0d      	ldr	r3, [pc, #52]	; (90006270 <_ZN20screen_asteroidsViewD1Ev+0x40>)
9000623c:	4606      	mov	r6, r0
9000623e:	4404      	add	r4, r0
90006240:	4405      	add	r5, r0
90006242:	6003      	str	r3, [r0, #0]
90006244:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
90006248:	681b      	ldr	r3, [r3, #0]
9000624a:	4628      	mov	r0, r5
9000624c:	4798      	blx	r3
9000624e:	42ac      	cmp	r4, r5
90006250:	d1f8      	bne.n	90006244 <_ZN20screen_asteroidsViewD1Ev+0x14>
90006252:	f242 1528 	movw	r5, #8488	; 0x2128
90006256:	4435      	add	r5, r6
90006258:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
9000625c:	681b      	ldr	r3, [r3, #0]
9000625e:	4620      	mov	r0, r4
90006260:	4798      	blx	r3
90006262:	42a5      	cmp	r5, r4
90006264:	d1f8      	bne.n	90006258 <_ZN20screen_asteroidsViewD1Ev+0x28>
90006266:	4630      	mov	r0, r6
90006268:	f7fe fb3a 	bl	900048e0 <_ZN24screen_asteroidsViewBaseD1Ev>
9000626c:	4630      	mov	r0, r6
9000626e:	bd70      	pop	{r4, r5, r6, pc}
90006270:	90029dd0 	.word	0x90029dd0

90006274 <_ZN20screen_asteroidsView18get_ship_directionEv>:
	if( btn_up.getPressedState() ) {
90006274:	f890 335c 	ldrb.w	r3, [r0, #860]	; 0x35c
90006278:	b96b      	cbnz	r3, 90006296 <_ZN20screen_asteroidsView18get_ship_directionEv+0x22>
	else if( btn_down.getPressedState() ) {
9000627a:	f890 32e4 	ldrb.w	r3, [r0, #740]	; 0x2e4
9000627e:	b943      	cbnz	r3, 90006292 <_ZN20screen_asteroidsView18get_ship_directionEv+0x1e>
	else if( btn_left.getPressedState() ) {
90006280:	f890 3320 	ldrb.w	r3, [r0, #800]	; 0x320
90006284:	b94b      	cbnz	r3, 9000629a <_ZN20screen_asteroidsView18get_ship_directionEv+0x26>
	else if( btn_right.getPressedState() ) {
90006286:	f890 02a8 	ldrb.w	r0, [r0, #680]	; 0x2a8
9000628a:	f1c0 0004 	rsb	r0, r0, #4
9000628e:	b2c0      	uxtb	r0, r0
90006290:	4770      	bx	lr
		return ShipDirection::DOWN;
90006292:	2001      	movs	r0, #1
90006294:	4770      	bx	lr
		return ShipDirection::UP;
90006296:	2000      	movs	r0, #0
90006298:	4770      	bx	lr
		return ShipDirection::LEFT;
9000629a:	2002      	movs	r0, #2
}
9000629c:	4770      	bx	lr
9000629e:	bf00      	nop

900062a0 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii>:
{
900062a0:	b570      	push	{r4, r5, r6, lr}
900062a2:	460c      	mov	r4, r1
	rock->setX(x);
900062a4:	b211      	sxth	r1, r2
900062a6:	480f      	ldr	r0, [pc, #60]	; (900062e4 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x44>)
{
900062a8:	461e      	mov	r6, r3
	rock->setX(x);
900062aa:	6822      	ldr	r2, [r4, #0]
900062ac:	6b15      	ldr	r5, [r2, #48]	; 0x30
900062ae:	4285      	cmp	r5, r0
900062b0:	d10c      	bne.n	900062cc <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x2c>
	rock->setY(y);
900062b2:	6b52      	ldr	r2, [r2, #52]	; 0x34
900062b4:	480c      	ldr	r0, [pc, #48]	; (900062e8 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
        rect.x = x;
900062b6:	80a1      	strh	r1, [r4, #4]
900062b8:	b231      	sxth	r1, r6
900062ba:	4282      	cmp	r2, r0
900062bc:	d10e      	bne.n	900062dc <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x3c>
        rect.y = y;
900062be:	80e1      	strh	r1, [r4, #6]
        return parent;
900062c0:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
900062c2:	6803      	ldr	r3, [r0, #0]
}
900062c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
900062c8:	699b      	ldr	r3, [r3, #24]
900062ca:	4718      	bx	r3
	rock->setX(x);
900062cc:	4620      	mov	r0, r4
900062ce:	47a8      	blx	r5
	rock->setY(y);
900062d0:	6822      	ldr	r2, [r4, #0]
900062d2:	4805      	ldr	r0, [pc, #20]	; (900062e8 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x48>)
900062d4:	b231      	sxth	r1, r6
900062d6:	6b52      	ldr	r2, [r2, #52]	; 0x34
900062d8:	4282      	cmp	r2, r0
900062da:	d0f0      	beq.n	900062be <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x1e>
900062dc:	4620      	mov	r0, r4
900062de:	4790      	blx	r2
900062e0:	e7ee      	b.n	900062c0 <_ZN20screen_asteroidsView9move_rockEPN8touchgfx13ScalableImageEii+0x20>
900062e2:	bf00      	nop
900062e4:	900023fd 	.word	0x900023fd
900062e8:	90002401 	.word	0x90002401

900062ec <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii>:
{
900062ec:	b570      	push	{r4, r5, r6, lr}
900062ee:	460c      	mov	r4, r1
	bullet->setX(x);
900062f0:	b211      	sxth	r1, r2
900062f2:	480f      	ldr	r0, [pc, #60]	; (90006330 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x44>)
{
900062f4:	461e      	mov	r6, r3
	bullet->setX(x);
900062f6:	6822      	ldr	r2, [r4, #0]
900062f8:	6b15      	ldr	r5, [r2, #48]	; 0x30
900062fa:	4285      	cmp	r5, r0
900062fc:	d10c      	bne.n	90006318 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x2c>
	bullet->setY(y);
900062fe:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006300:	480c      	ldr	r0, [pc, #48]	; (90006334 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
        rect.x = x;
90006302:	80a1      	strh	r1, [r4, #4]
90006304:	b231      	sxth	r1, r6
90006306:	4282      	cmp	r2, r0
90006308:	d10e      	bne.n	90006328 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x3c>
        rect.y = y;
9000630a:	80e1      	strh	r1, [r4, #6]
        return parent;
9000630c:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
9000630e:	6803      	ldr	r3, [r0, #0]
}
90006310:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
90006314:	699b      	ldr	r3, [r3, #24]
90006316:	4718      	bx	r3
	bullet->setX(x);
90006318:	4620      	mov	r0, r4
9000631a:	47a8      	blx	r5
	bullet->setY(y);
9000631c:	6822      	ldr	r2, [r4, #0]
9000631e:	4805      	ldr	r0, [pc, #20]	; (90006334 <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x48>)
90006320:	b231      	sxth	r1, r6
90006322:	6b52      	ldr	r2, [r2, #52]	; 0x34
90006324:	4282      	cmp	r2, r0
90006326:	d0f0      	beq.n	9000630a <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x1e>
90006328:	4620      	mov	r0, r4
9000632a:	4790      	blx	r2
9000632c:	e7ee      	b.n	9000630c <_ZN20screen_asteroidsView11move_bulletEPN8touchgfx3BoxEii+0x20>
9000632e:	bf00      	nop
90006330:	900023fd 	.word	0x900023fd
90006334:	90002401 	.word	0x90002401

90006338 <_ZN20screen_asteroidsView13update_heartsEc>:
{
90006338:	b510      	push	{r4, lr}
9000633a:	4604      	mov	r4, r0
9000633c:	2903      	cmp	r1, #3
9000633e:	d839      	bhi.n	900063b4 <_ZN20screen_asteroidsView13update_heartsEc+0x7c>
90006340:	e8df f001 	tbb	[pc, r1]
90006344:	24340221 	.word	0x24340221
    }
90006348:	2300      	movs	r3, #0
9000634a:	2201      	movs	r2, #1
        visible = vis;
9000634c:	2100      	movs	r1, #0
9000634e:	f884 321d 	strb.w	r3, [r4, #541]	; 0x21d
90006352:	f884 21f1 	strb.w	r2, [r4, #497]	; 0x1f1
90006356:	f884 1249 	strb.w	r1, [r4, #585]	; 0x249

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
    {
        if (alpha > 0)
9000635a:	f894 3220 	ldrb.w	r3, [r4, #544]	; 0x220
9000635e:	b133      	cbz	r3, 9000636e <_ZN20screen_asteroidsView13update_heartsEc+0x36>
        if (visible)
90006360:	f894 321d 	ldrb.w	r3, [r4, #541]	; 0x21d
90006364:	b11b      	cbz	r3, 9000636e <_ZN20screen_asteroidsView13update_heartsEc+0x36>
            invalidate();
90006366:	f504 70fc 	add.w	r0, r4, #504	; 0x1f8
9000636a:	f00f fe4e 	bl	9001600a <_ZNK8touchgfx8Drawable10invalidateEv>
9000636e:	f894 31f4 	ldrb.w	r3, [r4, #500]	; 0x1f4
90006372:	b1f3      	cbz	r3, 900063b2 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
        if (visible)
90006374:	f894 31f1 	ldrb.w	r3, [r4, #497]	; 0x1f1
90006378:	b1db      	cbz	r3, 900063b2 <_ZN20screen_asteroidsView13update_heartsEc+0x7a>
            invalidate();
9000637a:	f504 70e6 	add.w	r0, r4, #460	; 0x1cc
}
9000637e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90006382:	f00f be42 	b.w	9001600a <_ZNK8touchgfx8Drawable10invalidateEv>
    }
90006386:	2300      	movs	r3, #0
90006388:	461a      	mov	r2, r3
9000638a:	e7df      	b.n	9000634c <_ZN20screen_asteroidsView13update_heartsEc+0x14>
        visible = vis;
9000638c:	2301      	movs	r3, #1
9000638e:	f890 224c 	ldrb.w	r2, [r0, #588]	; 0x24c
90006392:	f880 3249 	strb.w	r3, [r0, #585]	; 0x249
90006396:	f880 321d 	strb.w	r3, [r0, #541]	; 0x21d
9000639a:	f880 31f1 	strb.w	r3, [r0, #497]	; 0x1f1
9000639e:	2a00      	cmp	r2, #0
900063a0:	d0db      	beq.n	9000635a <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        {
            Widget::invalidateContent();
900063a2:	f500 7009 	add.w	r0, r0, #548	; 0x224
            invalidate();
900063a6:	f00f fe30 	bl	9001600a <_ZNK8touchgfx8Drawable10invalidateEv>
900063aa:	e7d6      	b.n	9000635a <_ZN20screen_asteroidsView13update_heartsEc+0x22>
    }
900063ac:	2301      	movs	r3, #1
900063ae:	461a      	mov	r2, r3
900063b0:	e7cc      	b.n	9000634c <_ZN20screen_asteroidsView13update_heartsEc+0x14>
900063b2:	bd10      	pop	{r4, pc}
        if (alpha > 0)
900063b4:	f890 324c 	ldrb.w	r3, [r0, #588]	; 0x24c
900063b8:	2b00      	cmp	r3, #0
900063ba:	d0ce      	beq.n	9000635a <_ZN20screen_asteroidsView13update_heartsEc+0x22>
        if (visible)
900063bc:	f890 3249 	ldrb.w	r3, [r0, #585]	; 0x249
            Widget::invalidateContent();
900063c0:	f500 7009 	add.w	r0, r0, #548	; 0x224
900063c4:	2b00      	cmp	r3, #0
900063c6:	d1ee      	bne.n	900063a6 <_ZN20screen_asteroidsView13update_heartsEc+0x6e>
900063c8:	e7c7      	b.n	9000635a <_ZN20screen_asteroidsView13update_heartsEc+0x22>
900063ca:	bf00      	nop

900063cc <_ZN20screen_asteroidsViewD0Ev>:
900063cc:	b570      	push	{r4, r5, r6, lr}
900063ce:	f242 24e0 	movw	r4, #8928	; 0x22e0
900063d2:	f242 4598 	movw	r5, #9368	; 0x2498
900063d6:	4b10      	ldr	r3, [pc, #64]	; (90006418 <_ZN20screen_asteroidsViewD0Ev+0x4c>)
900063d8:	4606      	mov	r6, r0
900063da:	4404      	add	r4, r0
900063dc:	4405      	add	r5, r0
900063de:	6003      	str	r3, [r0, #0]
900063e0:	f855 3d2c 	ldr.w	r3, [r5, #-44]!
900063e4:	681b      	ldr	r3, [r3, #0]
900063e6:	4628      	mov	r0, r5
900063e8:	4798      	blx	r3
900063ea:	42a5      	cmp	r5, r4
900063ec:	d1f8      	bne.n	900063e0 <_ZN20screen_asteroidsViewD0Ev+0x14>
900063ee:	f242 1528 	movw	r5, #8488	; 0x2128
900063f2:	4435      	add	r5, r6
900063f4:	f854 3d2c 	ldr.w	r3, [r4, #-44]!
900063f8:	681b      	ldr	r3, [r3, #0]
900063fa:	4620      	mov	r0, r4
900063fc:	4798      	blx	r3
900063fe:	42a5      	cmp	r5, r4
90006400:	d1f8      	bne.n	900063f4 <_ZN20screen_asteroidsViewD0Ev+0x28>
90006402:	4630      	mov	r0, r6
90006404:	f7fe fa6c 	bl	900048e0 <_ZN24screen_asteroidsViewBaseD1Ev>
90006408:	4630      	mov	r0, r6
9000640a:	f242 4198 	movw	r1, #9368	; 0x2498
9000640e:	f01f fed0 	bl	900261b2 <_ZdlPvj>
90006412:	4630      	mov	r0, r6
90006414:	bd70      	pop	{r4, r5, r6, pc}
90006416:	bf00      	nop
90006418:	90029dd0 	.word	0x90029dd0

9000641c <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE>:
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
9000641c:	6802      	ldr	r2, [r0, #0]
9000641e:	4b18      	ldr	r3, [pc, #96]	; (90006480 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x64>)
{
90006420:	b570      	push	{r4, r5, r6, lr}
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90006422:	6f55      	ldr	r5, [r2, #116]	; 0x74
{
90006424:	460c      	mov	r4, r1
90006426:	429d      	cmp	r5, r3
90006428:	d11a      	bne.n	90006460 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x44>
	bullet->setX(x);
9000642a:	680b      	ldr	r3, [r1, #0]
9000642c:	4915      	ldr	r1, [pc, #84]	; (90006484 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x68>)
9000642e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90006430:	428a      	cmp	r2, r1
90006432:	d11f      	bne.n	90006474 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x58>
        rect.x = x;
90006434:	2200      	movs	r2, #0
90006436:	80a2      	strh	r2, [r4, #4]
	bullet->setY(y);
90006438:	6b5b      	ldr	r3, [r3, #52]	; 0x34
9000643a:	4a13      	ldr	r2, [pc, #76]	; (90006488 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x6c>)
9000643c:	4293      	cmp	r3, r2
9000643e:	d114      	bne.n	9000646a <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x4e>
        rect.y = y;
90006440:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90006444:	80e3      	strh	r3, [r4, #6]
        return parent;
90006446:	6960      	ldr	r0, [r4, #20]
	bullet->getParent()->invalidateContent();
90006448:	6803      	ldr	r3, [r0, #0]
9000644a:	699b      	ldr	r3, [r3, #24]
9000644c:	4798      	blx	r3
9000644e:	6960      	ldr	r0, [r4, #20]
        visible = vis;
90006450:	2200      	movs	r2, #0
	bullet->getParent()->invalidateContent();
90006452:	6803      	ldr	r3, [r0, #0]
90006454:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
90006458:	699b      	ldr	r3, [r3, #24]
}
9000645a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	bullet->getParent()->invalidateContent();
9000645e:	4718      	bx	r3
	move_bullet(bullet, BULLET_OFFSCREEN_X, BULLET_OFFSCREEN_Y);
90006460:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
90006464:	2200      	movs	r2, #0
90006466:	47a8      	blx	r5
90006468:	e7f1      	b.n	9000644e <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x32>
	bullet->setY(y);
9000646a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
9000646e:	4620      	mov	r0, r4
90006470:	4798      	blx	r3
90006472:	e7e8      	b.n	90006446 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x2a>
	bullet->setX(x);
90006474:	2100      	movs	r1, #0
90006476:	4620      	mov	r0, r4
90006478:	4790      	blx	r2
	bullet->setY(y);
9000647a:	6823      	ldr	r3, [r4, #0]
9000647c:	e7dc      	b.n	90006438 <_ZN20screen_asteroidsView21move_bullet_offscreenEPN8touchgfx3BoxE+0x1c>
9000647e:	bf00      	nop
90006480:	900062ed 	.word	0x900062ed
90006484:	900023fd 	.word	0x900023fd
90006488:	90002401 	.word	0x90002401

9000648c <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE>:
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
9000648c:	6802      	ldr	r2, [r0, #0]
9000648e:	4b16      	ldr	r3, [pc, #88]	; (900064e8 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x5c>)
{
90006490:	b570      	push	{r4, r5, r6, lr}
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
90006492:	6e55      	ldr	r5, [r2, #100]	; 0x64
{
90006494:	460c      	mov	r4, r1
90006496:	429d      	cmp	r5, r3
90006498:	d119      	bne.n	900064ce <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x42>
	rock->setX(x);
9000649a:	680b      	ldr	r3, [r1, #0]
9000649c:	4913      	ldr	r1, [pc, #76]	; (900064ec <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x60>)
9000649e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900064a0:	428a      	cmp	r2, r1
900064a2:	d11c      	bne.n	900064de <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x52>
        rect.x = x;
900064a4:	2200      	movs	r2, #0
900064a6:	80a2      	strh	r2, [r4, #4]
	rock->setY(y);
900064a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900064aa:	4a11      	ldr	r2, [pc, #68]	; (900064f0 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x64>)
900064ac:	4293      	cmp	r3, r2
900064ae:	d112      	bne.n	900064d6 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x4a>
        rect.y = y;
900064b0:	2300      	movs	r3, #0
900064b2:	80e3      	strh	r3, [r4, #6]
        return parent;
900064b4:	6960      	ldr	r0, [r4, #20]
	rock->getParent()->invalidateContent();
900064b6:	6803      	ldr	r3, [r0, #0]
900064b8:	699b      	ldr	r3, [r3, #24]
900064ba:	4798      	blx	r3
900064bc:	6960      	ldr	r0, [r4, #20]
        visible = vis;
900064be:	2200      	movs	r2, #0
	rock->getParent()->invalidateContent();
900064c0:	6803      	ldr	r3, [r0, #0]
900064c2:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
900064c6:	699b      	ldr	r3, [r3, #24]
}
900064c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	rock->getParent()->invalidateContent();
900064cc:	4718      	bx	r3
	move_rock(rock, ROCK_OFFSCREEN_X, ROCK_OFFSCREEN_Y);
900064ce:	2300      	movs	r3, #0
900064d0:	461a      	mov	r2, r3
900064d2:	47a8      	blx	r5
900064d4:	e7f2      	b.n	900064bc <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x30>
	rock->setY(y);
900064d6:	2100      	movs	r1, #0
900064d8:	4620      	mov	r0, r4
900064da:	4798      	blx	r3
900064dc:	e7ea      	b.n	900064b4 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x28>
	rock->setX(x);
900064de:	2100      	movs	r1, #0
900064e0:	4620      	mov	r0, r4
900064e2:	4790      	blx	r2
	rock->setY(y);
900064e4:	6823      	ldr	r3, [r4, #0]
900064e6:	e7df      	b.n	900064a8 <_ZN20screen_asteroidsView19move_rock_offscreenEPN8touchgfx13ScalableImageE+0x1c>
900064e8:	900062a1 	.word	0x900062a1
900064ec:	900023fd 	.word	0x900023fd
900064f0:	90002401 	.word	0x90002401

900064f4 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE>:
{
900064f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900064f8:	460d      	mov	r5, r1
900064fa:	4607      	mov	r7, r0
	int random_x = rand() % (480 - rock->getWidth());
900064fc:	f01f ff68 	bl	900263d0 <rand>
90006500:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
90006504:	f5c3 73f0 	rsb	r3, r3, #480	; 0x1e0
90006508:	fb90 f2f3 	sdiv	r2, r0, r3
9000650c:	fb02 0613 	mls	r6, r2, r3, r0
	int random_y = 0 - (rand() % 272);
90006510:	f01f ff5e 	bl	900263d0 <rand>
90006514:	4b1b      	ldr	r3, [pc, #108]	; (90006584 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x90>)
90006516:	ea4f 7ce0 	mov.w	ip, r0, asr #31
9000651a:	fb83 2300 	smull	r2, r3, r3, r0
9000651e:	ebcc 1ce3 	rsb	ip, ip, r3, asr #7
	move_rock(rock, random_x, random_y);
90006522:	683b      	ldr	r3, [r7, #0]
90006524:	f8d3 8064 	ldr.w	r8, [r3, #100]	; 0x64
	int random_y = 0 - (rand() % 272);
90006528:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9000652c:	4b16      	ldr	r3, [pc, #88]	; (90006588 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x94>)
9000652e:	ebc0 140c 	rsb	r4, r0, ip, lsl #4
	move_rock(rock, random_x, random_y);
90006532:	4598      	cmp	r8, r3
90006534:	d119      	bne.n	9000656a <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x76>
	rock->setX(x);
90006536:	682b      	ldr	r3, [r5, #0]
90006538:	b231      	sxth	r1, r6
9000653a:	4814      	ldr	r0, [pc, #80]	; (9000658c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x98>)
9000653c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000653e:	4282      	cmp	r2, r0
90006540:	d11c      	bne.n	9000657c <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x88>
        rect.x = x;
90006542:	80a9      	strh	r1, [r5, #4]
	rock->setY(y);
90006544:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90006546:	b221      	sxth	r1, r4
90006548:	4a11      	ldr	r2, [pc, #68]	; (90006590 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x9c>)
9000654a:	4293      	cmp	r3, r2
9000654c:	d113      	bne.n	90006576 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x82>
        rect.y = y;
9000654e:	80e9      	strh	r1, [r5, #6]
        return parent;
90006550:	6968      	ldr	r0, [r5, #20]
	rock->getParent()->invalidateContent();
90006552:	6803      	ldr	r3, [r0, #0]
90006554:	699b      	ldr	r3, [r3, #24]
90006556:	4798      	blx	r3
90006558:	6968      	ldr	r0, [r5, #20]
        visible = vis;
9000655a:	2201      	movs	r2, #1
	rock->getParent()->invalidateContent();
9000655c:	6803      	ldr	r3, [r0, #0]
9000655e:	f885 2025 	strb.w	r2, [r5, #37]	; 0x25
90006562:	699b      	ldr	r3, [r3, #24]
}
90006564:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
	rock->getParent()->invalidateContent();
90006568:	4718      	bx	r3
	move_rock(rock, random_x, random_y);
9000656a:	4623      	mov	r3, r4
9000656c:	4632      	mov	r2, r6
9000656e:	4638      	mov	r0, r7
90006570:	4629      	mov	r1, r5
90006572:	47c0      	blx	r8
90006574:	e7f0      	b.n	90006558 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x64>
	rock->setY(y);
90006576:	4628      	mov	r0, r5
90006578:	4798      	blx	r3
9000657a:	e7e9      	b.n	90006550 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x5c>
	rock->setX(x);
9000657c:	4628      	mov	r0, r5
9000657e:	4790      	blx	r2
	rock->setY(y);
90006580:	682b      	ldr	r3, [r5, #0]
90006582:	e7df      	b.n	90006544 <_ZN20screen_asteroidsView17new_rock_positionEPN8touchgfx13ScalableImageE+0x50>
90006584:	78787879 	.word	0x78787879
90006588:	900062a1 	.word	0x900062a1
9000658c:	900023fd 	.word	0x900023fd
90006590:	90002401 	.word	0x90002401

90006594 <_ZN20screen_asteroidsViewC1Ev>:
screen_asteroidsView::screen_asteroidsView()
90006594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006598:	4607      	mov	r7, r0
9000659a:	f242 1428 	movw	r4, #8488	; 0x2128
9000659e:	f242 25e0 	movw	r5, #8928	; 0x22e0
900065a2:	b082      	sub	sp, #8
900065a4:	f7fe faa6 	bl	90004af4 <_ZN24screen_asteroidsViewBaseC1Ev>
900065a8:	443c      	add	r4, r7
900065aa:	4b6b      	ldr	r3, [pc, #428]	; (90006758 <_ZN20screen_asteroidsViewC1Ev+0x1c4>)
900065ac:	443d      	add	r5, r7
900065ae:	f64f 76ff 	movw	r6, #65535	; 0xffff
900065b2:	f04f 38ff 	mov.w	r8, #4294967295
900065b6:	603b      	str	r3, [r7, #0]
900065b8:	4620      	mov	r0, r4
900065ba:	342c      	adds	r4, #44	; 0x2c
900065bc:	a901      	add	r1, sp, #4
900065be:	f8ad 6004 	strh.w	r6, [sp, #4]
900065c2:	f00b f90b 	bl	900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
900065c6:	42a5      	cmp	r5, r4
900065c8:	d1f6      	bne.n	900065b8 <_ZN20screen_asteroidsViewC1Ev+0x24>
900065ca:	f507 5300 	add.w	r3, r7, #8192	; 0x2000
900065ce:	2200      	movs	r2, #0
          touchable(false),
900065d0:	f44f 7480 	mov.w	r4, #256	; 0x100
        : Widget(), alpha(255), color(0)
900065d4:	4961      	ldr	r1, [pc, #388]	; (9000675c <_ZN20screen_asteroidsViewC1Ev+0x1c8>)
900065d6:	25ff      	movs	r5, #255	; 0xff
}
900065d8:	4638      	mov	r0, r7
900065da:	f883 8306 	strb.w	r8, [r3, #774]	; 0x306
900065de:	f8a3 4304 	strh.w	r4, [r3, #772]	; 0x304
900065e2:	f8c3 12e0 	str.w	r1, [r3, #736]	; 0x2e0
        : color(col)
900065e6:	f8c3 2308 	str.w	r2, [r3, #776]	; 0x308
900065ea:	f8a3 4330 	strh.w	r4, [r3, #816]	; 0x330
900065ee:	f8c3 130c 	str.w	r1, [r3, #780]	; 0x30c
900065f2:	f8c3 2334 	str.w	r2, [r3, #820]	; 0x334
900065f6:	f883 5332 	strb.w	r5, [r3, #818]	; 0x332
        : x(0), y(0), width(0), height(0)
900065fa:	e9c3 22b9 	strd	r2, r2, [r3, #740]	; 0x2e4
900065fe:	e9c3 22bb 	strd	r2, r2, [r3, #748]	; 0x2ec
          nextSibling(0),
90006602:	e9c3 22bd 	strd	r2, r2, [r3, #756]	; 0x2f4
          cachedAbsX(0),
90006606:	e9c3 22bf 	strd	r2, r2, [r3, #764]	; 0x2fc
9000660a:	e9c3 22c4 	strd	r2, r2, [r3, #784]	; 0x310
9000660e:	e9c3 22c6 	strd	r2, r2, [r3, #792]	; 0x318
          nextSibling(0),
90006612:	e9c3 22c8 	strd	r2, r2, [r3, #800]	; 0x320
          cachedAbsX(0),
90006616:	e9c3 22ca 	strd	r2, r2, [r3, #808]	; 0x328
9000661a:	e9c3 22cf 	strd	r2, r2, [r3, #828]	; 0x33c
9000661e:	e9c3 22d1 	strd	r2, r2, [r3, #836]	; 0x344
          nextSibling(0),
90006622:	e9c3 22d3 	strd	r2, r2, [r3, #844]	; 0x34c
          cachedAbsX(0),
90006626:	e9c3 22d5 	strd	r2, r2, [r3, #852]	; 0x354
          touchable(false),
9000662a:	f8a3 435c 	strh.w	r4, [r3, #860]	; 0x35c
9000662e:	f8c3 1338 	str.w	r1, [r3, #824]	; 0x338
90006632:	f883 535e 	strb.w	r5, [r3, #862]	; 0x35e
        : color(col)
90006636:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
9000663a:	f8a3 4388 	strh.w	r4, [r3, #904]	; 0x388
9000663e:	f8c3 1364 	str.w	r1, [r3, #868]	; 0x364
90006642:	f883 538a 	strb.w	r5, [r3, #906]	; 0x38a
90006646:	f8c3 238c 	str.w	r2, [r3, #908]	; 0x38c
9000664a:	f8a3 43b4 	strh.w	r4, [r3, #948]	; 0x3b4
9000664e:	f8c3 1390 	str.w	r1, [r3, #912]	; 0x390
90006652:	f883 53b6 	strb.w	r5, [r3, #950]	; 0x3b6
90006656:	f8c3 23b8 	str.w	r2, [r3, #952]	; 0x3b8
        : x(0), y(0), width(0), height(0)
9000665a:	e9c3 22da 	strd	r2, r2, [r3, #872]	; 0x368
9000665e:	e9c3 22dc 	strd	r2, r2, [r3, #880]	; 0x370
          nextSibling(0),
90006662:	e9c3 22de 	strd	r2, r2, [r3, #888]	; 0x378
          cachedAbsX(0),
90006666:	e9c3 22e0 	strd	r2, r2, [r3, #896]	; 0x380
9000666a:	e9c3 22e5 	strd	r2, r2, [r3, #916]	; 0x394
9000666e:	e9c3 22e7 	strd	r2, r2, [r3, #924]	; 0x39c
          nextSibling(0),
90006672:	e9c3 22e9 	strd	r2, r2, [r3, #932]	; 0x3a4
          cachedAbsX(0),
90006676:	e9c3 22eb 	strd	r2, r2, [r3, #940]	; 0x3ac
9000667a:	e9c3 22f0 	strd	r2, r2, [r3, #960]	; 0x3c0
9000667e:	e9c3 22f2 	strd	r2, r2, [r3, #968]	; 0x3c8
          nextSibling(0),
90006682:	e9c3 22f4 	strd	r2, r2, [r3, #976]	; 0x3d0
          cachedAbsX(0),
90006686:	e9c3 22f6 	strd	r2, r2, [r3, #984]	; 0x3d8
          touchable(false),
9000668a:	f8a3 43e0 	strh.w	r4, [r3, #992]	; 0x3e0
9000668e:	f8c3 13bc 	str.w	r1, [r3, #956]	; 0x3bc
90006692:	f883 53e2 	strb.w	r5, [r3, #994]	; 0x3e2
        : color(col)
90006696:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
          parent(0),
9000669a:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
          nextSibling(0),
9000669e:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
          nextDrawChainElement(0),
900066a2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
          cachedAbsX(0),
900066a6:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
          touchable(false),
900066aa:	f8a3 440c 	strh.w	r4, [r3, #1036]	; 0x40c
900066ae:	f8c3 13e8 	str.w	r1, [r3, #1000]	; 0x3e8
900066b2:	f883 540e 	strb.w	r5, [r3, #1038]	; 0x40e
900066b6:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
        : x(0), y(0), width(0), height(0)
900066ba:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
900066be:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
900066c2:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
900066c6:	f8c3 2424 	str.w	r2, [r3, #1060]	; 0x424
          parent(0),
900066ca:	f8c3 2428 	str.w	r2, [r3, #1064]	; 0x428
          nextSibling(0),
900066ce:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
          nextDrawChainElement(0),
900066d2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
          cachedAbsX(0),
900066d6:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
          touchable(false),
900066da:	f8a3 4438 	strh.w	r4, [r3, #1080]	; 0x438
900066de:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
900066e2:	f883 543a 	strb.w	r5, [r3, #1082]	; 0x43a
        : color(col)
900066e6:	f8c3 243c 	str.w	r2, [r3, #1084]	; 0x43c
        : x(0), y(0), width(0), height(0)
900066ea:	f8c3 2444 	str.w	r2, [r3, #1092]	; 0x444
900066ee:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
900066f2:	e9c3 22fb 	strd	r2, r2, [r3, #1004]	; 0x3ec
900066f6:	e9c3 22fd 	strd	r2, r2, [r3, #1012]	; 0x3f4
900066fa:	f8c3 244c 	str.w	r2, [r3, #1100]	; 0x44c
900066fe:	f8c3 2450 	str.w	r2, [r3, #1104]	; 0x450
          parent(0),
90006702:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
          nextSibling(0),
90006706:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
          nextDrawChainElement(0),
9000670a:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
          cachedAbsX(0),
9000670e:	f8c3 2460 	str.w	r2, [r3, #1120]	; 0x460
          touchable(false),
90006712:	f8a3 4464 	strh.w	r4, [r3, #1124]	; 0x464
90006716:	f8a3 4490 	strh.w	r4, [r3, #1168]	; 0x490
9000671a:	f8c3 1440 	str.w	r1, [r3, #1088]	; 0x440
9000671e:	f883 5466 	strb.w	r5, [r3, #1126]	; 0x466
        : color(col)
90006722:	f8c3 2468 	str.w	r2, [r3, #1128]	; 0x468
        : x(0), y(0), width(0), height(0)
90006726:	f8c3 2470 	str.w	r2, [r3, #1136]	; 0x470
9000672a:	f8c3 2474 	str.w	r2, [r3, #1140]	; 0x474
9000672e:	f8c3 2478 	str.w	r2, [r3, #1144]	; 0x478
90006732:	f8c3 247c 	str.w	r2, [r3, #1148]	; 0x47c
          parent(0),
90006736:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
          nextSibling(0),
9000673a:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
          nextDrawChainElement(0),
9000673e:	f8c3 2488 	str.w	r2, [r3, #1160]	; 0x488
          cachedAbsX(0),
90006742:	f8c3 248c 	str.w	r2, [r3, #1164]	; 0x48c
90006746:	f8c3 146c 	str.w	r1, [r3, #1132]	; 0x46c
9000674a:	f883 5492 	strb.w	r5, [r3, #1170]	; 0x492
        : color(col)
9000674e:	f8c3 2494 	str.w	r2, [r3, #1172]	; 0x494
90006752:	b002      	add	sp, #8
90006754:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90006758:	90029dd0 	.word	0x90029dd0
9000675c:	9002a5cc 	.word	0x9002a5cc

90006760 <_ZN20screen_asteroidsView11setupScreenEv>:
{
90006760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006764:	4605      	mov	r5, r0
90006766:	b085      	sub	sp, #20
90006768:	f242 1b28 	movw	fp, #8488	; 0x2128
9000676c:	2400      	movs	r4, #0
9000676e:	9001      	str	r0, [sp, #4]
    screen_asteroidsViewBase::setupScreen();
90006770:	f7fe f842 	bl	900047f8 <_ZN24screen_asteroidsViewBase11setupScreenEv>
90006774:	462b      	mov	r3, r5
90006776:	4e42      	ldr	r6, [pc, #264]	; (90006880 <_ZN20screen_asteroidsView11setupScreenEv+0x120>)
90006778:	3504      	adds	r5, #4
9000677a:	4f42      	ldr	r7, [pc, #264]	; (90006884 <_ZN20screen_asteroidsView11setupScreenEv+0x124>)
9000677c:	449b      	add	fp, r3
9000677e:	f04f 0903 	mov.w	r9, #3
        setY(y);
90006782:	f04f 0a4f 	mov.w	sl, #79	; 0x4f
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
90006786:	46a0      	mov	r8, r4
90006788:	e023      	b.n	900067d2 <_ZN20screen_asteroidsView11setupScreenEv+0x72>
9000678a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
9000678c:	f8ab 1004 	strh.w	r1, [fp, #4]
        rect.y = y;
90006790:	42ba      	cmp	r2, r7
90006792:	d133      	bne.n	900067fc <_ZN20screen_asteroidsView11setupScreenEv+0x9c>
90006794:	f8ab a006 	strh.w	sl, [fp, #6]
        setWidth(width);
90006798:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000679a:	4658      	mov	r0, fp
9000679c:	2122      	movs	r1, #34	; 0x22
    for(int i = 0; i < ROCK_COUNT; i++) {
9000679e:	3422      	adds	r4, #34	; 0x22
900067a0:	4790      	blx	r2
        setHeight(height);
900067a2:	f8db 2000 	ldr.w	r2, [fp]
900067a6:	4658      	mov	r0, fp
900067a8:	211d      	movs	r1, #29
900067aa:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
900067ac:	b2a4      	uxth	r4, r4
900067ae:	4790      	blx	r2
		rocks[i].setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
900067b0:	f8db 2000 	ldr.w	r2, [fp]
900067b4:	4658      	mov	r0, fp
900067b6:	2100      	movs	r1, #0
900067b8:	6e52      	ldr	r2, [r2, #100]	; 0x64
900067ba:	4790      	blx	r2
900067bc:	4659      	mov	r1, fp
        visible = vis;
900067be:	f88b 8025 	strb.w	r8, [fp, #37]	; 0x25
900067c2:	4628      	mov	r0, r5
900067c4:	f009 fb04 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    for(int i = 0; i < ROCK_COUNT; i++) {
900067c8:	f5b4 7faa 	cmp.w	r4, #340	; 0x154
900067cc:	f10b 0b2c 	add.w	fp, fp, #44	; 0x2c
900067d0:	d01a      	beq.n	90006808 <_ZN20screen_asteroidsView11setupScreenEv+0xa8>
    	rocks[i].setBitmap(touchgfx::Bitmap(BITMAP_ASTEROIDS_ROCK_ID));
900067d2:	f8db 2000 	ldr.w	r2, [fp]
900067d6:	a903      	add	r1, sp, #12
900067d8:	4658      	mov	r0, fp
900067da:	f8ad 900c 	strh.w	r9, [sp, #12]
900067de:	6e12      	ldr	r2, [r2, #96]	; 0x60
900067e0:	4790      	blx	r2
        setX(x);
900067e2:	f8db 3000 	ldr.w	r3, [fp]
    	rocks[i].setPosition(i*34, 79, 34, 29);
900067e6:	b221      	sxth	r1, r4
900067e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900067ea:	42b2      	cmp	r2, r6
900067ec:	d0cd      	beq.n	9000678a <_ZN20screen_asteroidsView11setupScreenEv+0x2a>
900067ee:	4658      	mov	r0, fp
900067f0:	4790      	blx	r2
900067f2:	f8db 3000 	ldr.w	r3, [fp]
        setY(y);
900067f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
900067f8:	42ba      	cmp	r2, r7
900067fa:	d0cb      	beq.n	90006794 <_ZN20screen_asteroidsView11setupScreenEv+0x34>
900067fc:	4658      	mov	r0, fp
900067fe:	214f      	movs	r1, #79	; 0x4f
90006800:	4790      	blx	r2
90006802:	f8db 3000 	ldr.w	r3, [fp]
90006806:	e7c7      	b.n	90006798 <_ZN20screen_asteroidsView11setupScreenEv+0x38>
90006808:	9b01      	ldr	r3, [sp, #4]
9000680a:	f242 24e0 	movw	r4, #8928	; 0x22e0
9000680e:	f242 4898 	movw	r8, #9368	; 0x2498
        setX(x);
90006812:	f04f 0aee 	mov.w	sl, #238	; 0xee
90006816:	441c      	add	r4, r3
        setY(y);
90006818:	f04f 09db 	mov.w	r9, #219	; 0xdb
9000681c:	4498      	add	r8, r3
9000681e:	e01c      	b.n	9000685a <_ZN20screen_asteroidsView11setupScreenEv+0xfa>
90006820:	6b5a      	ldr	r2, [r3, #52]	; 0x34
        rect.x = x;
90006822:	f8a4 a004 	strh.w	sl, [r4, #4]
        rect.y = y;
90006826:	42ba      	cmp	r2, r7
90006828:	d122      	bne.n	90006870 <_ZN20screen_asteroidsView11setupScreenEv+0x110>
9000682a:	f8a4 9006 	strh.w	r9, [r4, #6]
        setWidth(width);
9000682e:	4620      	mov	r0, r4
90006830:	2104      	movs	r1, #4
90006832:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90006834:	4798      	blx	r3
        setHeight(height);
90006836:	6823      	ldr	r3, [r4, #0]
90006838:	4620      	mov	r0, r4
9000683a:	2104      	movs	r1, #4
9000683c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9000683e:	4798      	blx	r3
        color = newColor;
90006840:	f04f 32ff 	mov.w	r2, #4294967295
90006844:	4621      	mov	r1, r4
        visible = vis;
90006846:	2300      	movs	r3, #0
90006848:	62a2      	str	r2, [r4, #40]	; 0x28
    for(int i = 0; i < BULLET_COUNT; i++) {
9000684a:	342c      	adds	r4, #44	; 0x2c
9000684c:	4628      	mov	r0, r5
9000684e:	f804 3c07 	strb.w	r3, [r4, #-7]
90006852:	f009 fabd 	bl	9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90006856:	45a0      	cmp	r8, r4
90006858:	d00f      	beq.n	9000687a <_ZN20screen_asteroidsView11setupScreenEv+0x11a>
        setX(x);
9000685a:	6823      	ldr	r3, [r4, #0]
9000685c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000685e:	42b2      	cmp	r2, r6
90006860:	d0de      	beq.n	90006820 <_ZN20screen_asteroidsView11setupScreenEv+0xc0>
90006862:	4620      	mov	r0, r4
90006864:	21ee      	movs	r1, #238	; 0xee
90006866:	4790      	blx	r2
90006868:	6823      	ldr	r3, [r4, #0]
        setY(y);
9000686a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000686c:	42ba      	cmp	r2, r7
9000686e:	d0dc      	beq.n	9000682a <_ZN20screen_asteroidsView11setupScreenEv+0xca>
90006870:	4620      	mov	r0, r4
90006872:	21db      	movs	r1, #219	; 0xdb
90006874:	4790      	blx	r2
90006876:	6823      	ldr	r3, [r4, #0]
90006878:	e7d9      	b.n	9000682e <_ZN20screen_asteroidsView11setupScreenEv+0xce>
}
9000687a:	b005      	add	sp, #20
9000687c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90006880:	900023fd 	.word	0x900023fd
90006884:	90002401 	.word	0x90002401

90006888 <_ZN27screen_game_selectPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screen_game_selectPresenter() {}
90006888:	4770      	bx	lr
9000688a:	bf00      	nop

9000688c <_ZThn4_N27screen_game_selectPresenterD1Ev>:
9000688c:	3804      	subs	r0, #4
9000688e:	4770      	bx	lr

90006890 <_ZN27screen_game_selectPresenter10deactivateEv>:
}

void screen_game_selectPresenter::activate()
{

}
90006890:	4770      	bx	lr
90006892:	bf00      	nop

90006894 <_ZN27screen_game_selectPresenterD0Ev>:
90006894:	b510      	push	{r4, lr}
90006896:	4604      	mov	r4, r0
90006898:	2110      	movs	r1, #16
9000689a:	f01f fc8a 	bl	900261b2 <_ZdlPvj>
9000689e:	4620      	mov	r0, r4
900068a0:	bd10      	pop	{r4, pc}
900068a2:	bf00      	nop

900068a4 <_ZThn4_N27screen_game_selectPresenterD0Ev>:
900068a4:	b500      	push	{lr}
900068a6:	3804      	subs	r0, #4
900068a8:	b083      	sub	sp, #12
900068aa:	2110      	movs	r1, #16
900068ac:	9001      	str	r0, [sp, #4]
900068ae:	f01f fc80 	bl	900261b2 <_ZdlPvj>
900068b2:	9801      	ldr	r0, [sp, #4]
900068b4:	b003      	add	sp, #12
900068b6:	f85d fb04 	ldr.w	pc, [sp], #4
900068ba:	bf00      	nop

900068bc <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView>:
    : view(v)
900068bc:	4a06      	ldr	r2, [pc, #24]	; (900068d8 <_ZN27screen_game_selectPresenterC1ER22screen_game_selectView+0x1c>)
900068be:	60c1      	str	r1, [r0, #12]
screen_game_selectPresenter::screen_game_selectPresenter(screen_game_selectView& v)
900068c0:	b410      	push	{r4}
900068c2:	2400      	movs	r4, #0
900068c4:	6084      	str	r4, [r0, #8]
    : view(v)
900068c6:	f102 0408 	add.w	r4, r2, #8
900068ca:	3220      	adds	r2, #32
900068cc:	e9c0 4200 	strd	r4, r2, [r0]
}
900068d0:	f85d 4b04 	ldr.w	r4, [sp], #4
900068d4:	4770      	bx	lr
900068d6:	bf00      	nop
900068d8:	90029e48 	.word	0x90029e48

900068dc <_ZN22screen_game_selectView14tearDownScreenEv>:
}

void screen_game_selectView::tearDownScreen()
{
    screen_game_selectViewBase::tearDownScreen();
}
900068dc:	4770      	bx	lr
900068de:	bf00      	nop

900068e0 <_ZN22screen_game_selectViewD1Ev>:

class screen_game_selectView : public screen_game_selectViewBase
{
public:
    screen_game_selectView();
    virtual ~screen_game_selectView() {}
900068e0:	4b03      	ldr	r3, [pc, #12]	; (900068f0 <_ZN22screen_game_selectViewD1Ev+0x10>)
900068e2:	b510      	push	{r4, lr}
900068e4:	4604      	mov	r4, r0
900068e6:	6003      	str	r3, [r0, #0]
900068e8:	f7fe fd66 	bl	900053b8 <_ZN26screen_game_selectViewBaseD1Ev>
900068ec:	4620      	mov	r0, r4
900068ee:	bd10      	pop	{r4, pc}
900068f0:	90029e98 	.word	0x90029e98

900068f4 <_ZN22screen_game_selectViewD0Ev>:
900068f4:	4b06      	ldr	r3, [pc, #24]	; (90006910 <_ZN22screen_game_selectViewD0Ev+0x1c>)
900068f6:	b510      	push	{r4, lr}
900068f8:	4604      	mov	r4, r0
900068fa:	6003      	str	r3, [r0, #0]
900068fc:	f7fe fd5c 	bl	900053b8 <_ZN26screen_game_selectViewBaseD1Ev>
90006900:	f44f 71ca 	mov.w	r1, #404	; 0x194
90006904:	4620      	mov	r0, r4
90006906:	f01f fc54 	bl	900261b2 <_ZdlPvj>
9000690a:	4620      	mov	r0, r4
9000690c:	bd10      	pop	{r4, pc}
9000690e:	bf00      	nop
90006910:	90029e98 	.word	0x90029e98

90006914 <_ZN22screen_game_selectViewC1Ev>:
screen_game_selectView::screen_game_selectView()
90006914:	b510      	push	{r4, lr}
90006916:	4604      	mov	r4, r0
90006918:	f7fe fe5a 	bl	900055d0 <_ZN26screen_game_selectViewBaseC1Ev>
9000691c:	4b01      	ldr	r3, [pc, #4]	; (90006924 <_ZN22screen_game_selectViewC1Ev+0x10>)
}
9000691e:	4620      	mov	r0, r4
screen_game_selectView::screen_game_selectView()
90006920:	6023      	str	r3, [r4, #0]
}
90006922:	bd10      	pop	{r4, pc}
90006924:	90029e98 	.word	0x90029e98

90006928 <_ZN22screen_game_selectView11setupScreenEv>:
    screen_game_selectViewBase::setupScreen();
90006928:	f7fe bd48 	b.w	900053bc <_ZN26screen_game_selectViewBase11setupScreenEv>

9000692c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
9000692c:	f240 1c01 	movw	ip, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90006930:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90006932:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006936:	f44f 7388 	mov.w	r3, #272	; 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
9000693a:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
9000693c:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
9000693e:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90006942:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90006946:	4770      	bx	lr

90006948 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90006948:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000694c:	2b01      	cmp	r3, #1
9000694e:	d102      	bne.n	90006956 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90006950:	2300      	movs	r3, #0
90006952:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
90006956:	2000      	movs	r0, #0
90006958:	4770      	bx	lr
9000695a:	bf00      	nop

9000695c <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
9000695c:	2000      	movs	r0, #0
9000695e:	4770      	bx	lr

90006960 <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006960:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90006962:	6904      	ldr	r4, [r0, #16]
90006964:	8900      	ldrh	r0, [r0, #8]
90006966:	46a4      	mov	ip, r4
}
90006968:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
9000696c:	4760      	bx	ip
9000696e:	bf00      	nop

90006970 <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90006970:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90006972:	68c4      	ldr	r4, [r0, #12]
90006974:	8900      	ldrh	r0, [r0, #8]
90006976:	46a4      	mov	ip, r4
}
90006978:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
9000697c:	4760      	bx	ip
9000697e:	bf00      	nop

90006980 <FT5336_GestureConfig>:
{
90006980:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006982:	f100 0518 	add.w	r5, r0, #24
{
90006986:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90006988:	7809      	ldrb	r1, [r1, #0]
9000698a:	4628      	mov	r0, r5
9000698c:	f000 f96c 	bl	90006c68 <ft5336_radian_value>
90006990:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90006992:	7931      	ldrb	r1, [r6, #4]
90006994:	4628      	mov	r0, r5
90006996:	f000 f975 	bl	90006c84 <ft5336_offset_left_right>
9000699a:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
9000699c:	7a31      	ldrb	r1, [r6, #8]
9000699e:	4628      	mov	r0, r5
900069a0:	f000 f97e 	bl	90006ca0 <ft5336_offset_up_down>
900069a4:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900069a6:	7b31      	ldrb	r1, [r6, #12]
900069a8:	4628      	mov	r0, r5
900069aa:	f000 f987 	bl	90006cbc <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900069ae:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
900069b0:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900069b2:	4628      	mov	r0, r5
900069b4:	f000 f990 	bl	90006cd8 <ft5336_distance_up_down>
900069b8:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900069ba:	7d31      	ldrb	r1, [r6, #20]
900069bc:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
900069be:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
900069c0:	f000 f998 	bl	90006cf4 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
900069c4:	42c4      	cmn	r4, r0
}
900069c6:	bf14      	ite	ne
900069c8:	f04f 30ff 	movne.w	r0, #4294967295
900069cc:	2000      	moveq	r0, #0
900069ce:	bd70      	pop	{r4, r5, r6, pc}

900069d0 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
900069d0:	3018      	adds	r0, #24
900069d2:	f000 b9ab 	b.w	90006d2c <ft5336_chip_id>
900069d6:	bf00      	nop

900069d8 <FT5336_GetState>:
{
900069d8:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900069da:	f100 0518 	add.w	r5, r0, #24
{
900069de:	b083      	sub	sp, #12
900069e0:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
900069e2:	4628      	mov	r0, r5
900069e4:	a901      	add	r1, sp, #4
900069e6:	f000 f931 	bl	90006c4c <ft5336_td_status>
900069ea:	bb10      	cbnz	r0, 90006a32 <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
900069ec:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900069f0:	2b05      	cmp	r3, #5
900069f2:	bf94      	ite	ls
900069f4:	4619      	movls	r1, r3
900069f6:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900069f8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
900069fa:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
900069fc:	4628      	mov	r0, r5
900069fe:	2103      	movs	r1, #3
90006a00:	eb0d 0203 	add.w	r2, sp, r3
90006a04:	f000 f910 	bl	90006c28 <ft5336_read_reg>
90006a08:	b9b0      	cbnz	r0, 90006a38 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006a0a:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006a0e:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006a12:	0212      	lsls	r2, r2, #8
90006a14:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006a18:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006a1a:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006a1e:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90006a22:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90006a24:	f89d 1007 	ldrb.w	r1, [sp, #7]
90006a28:	430b      	orrs	r3, r1
90006a2a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90006a2e:	b003      	add	sp, #12
90006a30:	bd30      	pop	{r4, r5, pc}
90006a32:	f04f 31ff 	mov.w	r1, #4294967295
90006a36:	e7df      	b.n	900069f8 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90006a38:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006a3c:	e7f7      	b.n	90006a2e <FT5336_GetState+0x56>
90006a3e:	bf00      	nop

90006a40 <FT5336_GetMultiTouchState>:
{
90006a40:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006a42:	f100 0518 	add.w	r5, r0, #24
{
90006a46:	b088      	sub	sp, #32
90006a48:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90006a4a:	4628      	mov	r0, r5
90006a4c:	4669      	mov	r1, sp
90006a4e:	f000 f8fd 	bl	90006c4c <ft5336_td_status>
90006a52:	2800      	cmp	r0, #0
90006a54:	f040 809a 	bne.w	90006b8c <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90006a58:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90006a5c:	2b05      	cmp	r3, #5
90006a5e:	bf94      	ite	ls
90006a60:	4619      	movls	r1, r3
90006a62:	2100      	movhi	r1, #0
90006a64:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90006a66:	231e      	movs	r3, #30
90006a68:	466a      	mov	r2, sp
90006a6a:	4628      	mov	r0, r5
90006a6c:	2103      	movs	r1, #3
90006a6e:	f000 f8db 	bl	90006c28 <ft5336_read_reg>
90006a72:	2800      	cmp	r0, #0
90006a74:	f040 808d 	bne.w	90006b92 <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a78:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a7c:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a80:	020a      	lsls	r2, r1, #8
90006a82:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a86:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a88:	f89d c007 	ldrb.w	ip, [sp, #7]
90006a8c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006a90:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a92:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006a96:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006a9a:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006a9c:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006aa0:	6421      	str	r1, [r4, #64]	; 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006aa2:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006aa4:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006aa6:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006aa8:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006aac:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006aae:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ab2:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ab6:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ab8:	62e2      	str	r2, [r4, #44]	; 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006aba:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006abe:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ac0:	6563      	str	r3, [r4, #84]	; 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006ac2:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ac4:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ac8:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006aca:	6461      	str	r1, [r4, #68]	; 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006acc:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ad0:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006ad4:	65a2      	str	r2, [r4, #88]	; 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ad6:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006ad8:	6321      	str	r1, [r4, #48]	; 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ada:	ea45 050c 	orr.w	r5, r5, ip
90006ade:	f402 6170 	and.w	r1, r2, #3840	; 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006ae2:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006ae6:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006ae8:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006aea:	0212      	lsls	r2, r2, #8
90006aec:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006af0:	64a3      	str	r3, [r4, #72]	; 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006af2:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006af6:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006afa:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006afc:	6363      	str	r3, [r4, #52]	; 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006afe:	f89d 300e 	ldrb.w	r3, [sp, #14]
90006b02:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b04:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b08:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b0a:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b0c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b10:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b12:	f89d 200f 	ldrb.w	r2, [sp, #15]
90006b16:	4313      	orrs	r3, r2
90006b18:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b1a:	65e6      	str	r6, [r4, #92]	; 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b1c:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b20:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b24:	020a      	lsls	r2, r1, #8
90006b26:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b2a:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b2c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b30:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b32:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b36:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b38:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b3c:	64e1      	str	r1, [r4, #76]	; 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b3e:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b40:	f89d 1018 	ldrb.w	r1, [sp, #24]
90006b44:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b46:	6263      	str	r3, [r4, #36]	; 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b48:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b4a:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b4e:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b50:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b54:	63a2      	str	r2, [r4, #56]	; 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b56:	f403 6270 	and.w	r2, r3, #3840	; 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b5a:	f89d 301d 	ldrb.w	r3, [sp, #29]
90006b5e:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90006b60:	6521      	str	r1, [r4, #80]	; 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b62:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b64:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90006b68:	6625      	str	r5, [r4, #96]	; 0x60
90006b6a:	6663      	str	r3, [r4, #100]	; 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b6c:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90006b70:	63e1      	str	r1, [r4, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90006b72:	021b      	lsls	r3, r3, #8
90006b74:	f89d 101b 	ldrb.w	r1, [sp, #27]
90006b78:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
90006b7c:	430b      	orrs	r3, r1
90006b7e:	62a3      	str	r3, [r4, #40]	; 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90006b80:	f89d 3019 	ldrb.w	r3, [sp, #25]
90006b84:	4313      	orrs	r3, r2
90006b86:	6163      	str	r3, [r4, #20]
}
90006b88:	b008      	add	sp, #32
90006b8a:	bd70      	pop	{r4, r5, r6, pc}
90006b8c:	f04f 31ff 	mov.w	r1, #4294967295
90006b90:	e768      	b.n	90006a64 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90006b92:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90006b96:	e7f7      	b.n	90006b88 <FT5336_GetMultiTouchState+0x148>

90006b98 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90006b98:	3018      	adds	r0, #24
90006b9a:	f000 b84d 	b.w	90006c38 <ft5336_gest_id>
90006b9e:	bf00      	nop

90006ba0 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90006ba0:	2101      	movs	r1, #1
90006ba2:	3018      	adds	r0, #24
90006ba4:	f000 b8b4 	b.w	90006d10 <ft5336_g_mode>

90006ba8 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006ba8:	2100      	movs	r1, #0
90006baa:	3018      	adds	r0, #24
90006bac:	f000 b8b0 	b.w	90006d10 <ft5336_g_mode>

90006bb0 <FT5336_Init>:
{
90006bb0:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90006bb2:	f890 5024 	ldrb.w	r5, [r0, #36]	; 0x24
90006bb6:	b98d      	cbnz	r5, 90006bdc <FT5336_Init+0x2c>
    pObj->IO.Init();
90006bb8:	4606      	mov	r6, r0
90006bba:	4604      	mov	r4, r0
90006bbc:	f856 3b18 	ldr.w	r3, [r6], #24
90006bc0:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90006bc2:	4629      	mov	r1, r5
90006bc4:	4630      	mov	r0, r6
90006bc6:	f000 f8a3 	bl	90006d10 <ft5336_g_mode>
  if(ret != FT5336_OK)
90006bca:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90006bcc:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90006bd0:	bf18      	it	ne
90006bd2:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90006bd4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
90006bd8:	4240      	negs	r0, r0
}
90006bda:	bd70      	pop	{r4, r5, r6, pc}
  int32_t ret = FT5336_OK;
90006bdc:	2000      	movs	r0, #0
}
90006bde:	bd70      	pop	{r4, r5, r6, pc}

90006be0 <FT5336_ClearIT>:
90006be0:	2000      	movs	r0, #0
90006be2:	4770      	bx	lr

90006be4 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90006be4:	b1c0      	cbz	r0, 90006c18 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90006be6:	890a      	ldrh	r2, [r1, #8]
{
90006be8:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90006bea:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90006bee:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90006bf0:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90006bf4:	694a      	ldr	r2, [r1, #20]
90006bf6:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90006bfa:	4909      	ldr	r1, [pc, #36]	; (90006c20 <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90006bfc:	60c5      	str	r5, [r0, #12]
90006bfe:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006c02:	4a08      	ldr	r2, [pc, #32]	; (90006c24 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90006c04:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90006c08:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90006c0a:	b10b      	cbz	r3, 90006c10 <FT5336_RegisterBusIO+0x2c>
}
90006c0c:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90006c0e:	4718      	bx	r3
}
90006c10:	f04f 30ff 	mov.w	r0, #4294967295
90006c14:	bc30      	pop	{r4, r5}
90006c16:	4770      	bx	lr
90006c18:	f04f 30ff 	mov.w	r0, #4294967295
90006c1c:	4770      	bx	lr
90006c1e:	bf00      	nop
90006c20:	90006961 	.word	0x90006961
90006c24:	90006971 	.word	0x90006971

90006c28 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90006c28:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c2a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006c2e:	46a4      	mov	ip, r4
}
90006c30:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c34:	4760      	bx	ip
90006c36:	bf00      	nop

90006c38 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006c38:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c3a:	2301      	movs	r3, #1
{
90006c3c:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c3e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90006c42:	4619      	mov	r1, r3
90006c44:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90006c46:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c4a:	4760      	bx	ip

90006c4c <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90006c4c:	b538      	push	{r3, r4, r5, lr}
90006c4e:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006c50:	2301      	movs	r3, #1
90006c52:	2102      	movs	r1, #2
90006c54:	4622      	mov	r2, r4
90006c56:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90006c5a:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90006c5c:	b918      	cbnz	r0, 90006c66 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90006c5e:	7823      	ldrb	r3, [r4, #0]
90006c60:	f003 030f 	and.w	r3, r3, #15
90006c64:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90006c66:	bd38      	pop	{r3, r4, r5, pc}

90006c68 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90006c68:	b510      	push	{r4, lr}
90006c6a:	460c      	mov	r4, r1
90006c6c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006c6e:	2301      	movs	r3, #1
90006c70:	2191      	movs	r1, #145	; 0x91
{
90006c72:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006c76:	f10d 0207 	add.w	r2, sp, #7
90006c7a:	6804      	ldr	r4, [r0, #0]
90006c7c:	6880      	ldr	r0, [r0, #8]
90006c7e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90006c80:	b002      	add	sp, #8
90006c82:	bd10      	pop	{r4, pc}

90006c84 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006c84:	b510      	push	{r4, lr}
90006c86:	460c      	mov	r4, r1
90006c88:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006c8a:	2301      	movs	r3, #1
90006c8c:	2192      	movs	r1, #146	; 0x92
{
90006c8e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006c92:	f10d 0207 	add.w	r2, sp, #7
90006c96:	6804      	ldr	r4, [r0, #0]
90006c98:	6880      	ldr	r0, [r0, #8]
90006c9a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90006c9c:	b002      	add	sp, #8
90006c9e:	bd10      	pop	{r4, pc}

90006ca0 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006ca0:	b510      	push	{r4, lr}
90006ca2:	460c      	mov	r4, r1
90006ca4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ca6:	2301      	movs	r3, #1
90006ca8:	2193      	movs	r1, #147	; 0x93
{
90006caa:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006cae:	f10d 0207 	add.w	r2, sp, #7
90006cb2:	6804      	ldr	r4, [r0, #0]
90006cb4:	6880      	ldr	r0, [r0, #8]
90006cb6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90006cb8:	b002      	add	sp, #8
90006cba:	bd10      	pop	{r4, pc}

90006cbc <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90006cbc:	b510      	push	{r4, lr}
90006cbe:	460c      	mov	r4, r1
90006cc0:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006cc2:	2301      	movs	r3, #1
90006cc4:	2194      	movs	r1, #148	; 0x94
{
90006cc6:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006cca:	f10d 0207 	add.w	r2, sp, #7
90006cce:	6804      	ldr	r4, [r0, #0]
90006cd0:	6880      	ldr	r0, [r0, #8]
90006cd2:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90006cd4:	b002      	add	sp, #8
90006cd6:	bd10      	pop	{r4, pc}

90006cd8 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90006cd8:	b510      	push	{r4, lr}
90006cda:	460c      	mov	r4, r1
90006cdc:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006cde:	2301      	movs	r3, #1
90006ce0:	2195      	movs	r1, #149	; 0x95
{
90006ce2:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006ce6:	f10d 0207 	add.w	r2, sp, #7
90006cea:	6804      	ldr	r4, [r0, #0]
90006cec:	6880      	ldr	r0, [r0, #8]
90006cee:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90006cf0:	b002      	add	sp, #8
90006cf2:	bd10      	pop	{r4, pc}

90006cf4 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90006cf4:	b510      	push	{r4, lr}
90006cf6:	460c      	mov	r4, r1
90006cf8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006cfa:	2301      	movs	r3, #1
90006cfc:	2196      	movs	r1, #150	; 0x96
{
90006cfe:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d02:	f10d 0207 	add.w	r2, sp, #7
90006d06:	6804      	ldr	r4, [r0, #0]
90006d08:	6880      	ldr	r0, [r0, #8]
90006d0a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90006d0c:	b002      	add	sp, #8
90006d0e:	bd10      	pop	{r4, pc}

90006d10 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90006d10:	b510      	push	{r4, lr}
90006d12:	460c      	mov	r4, r1
90006d14:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d16:	2301      	movs	r3, #1
90006d18:	21a4      	movs	r1, #164	; 0xa4
{
90006d1a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90006d1e:	f10d 0207 	add.w	r2, sp, #7
90006d22:	6804      	ldr	r4, [r0, #0]
90006d24:	6880      	ldr	r0, [r0, #8]
90006d26:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90006d28:	b002      	add	sp, #8
90006d2a:	bd10      	pop	{r4, pc}

90006d2c <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90006d2c:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d2e:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90006d32:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d34:	2301      	movs	r3, #1
90006d36:	46a4      	mov	ip, r4
90006d38:	21a8      	movs	r1, #168	; 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90006d3a:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90006d3e:	4760      	bx	ip

90006d40 <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90006d40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  int32_t ret = MT48LC4M32B2_ERROR;
  
  /* Step 1: Configure a clock configuration enable command */
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006d42:	680b      	ldr	r3, [r1, #0]
{
90006d44:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006d46:	4c2a      	ldr	r4, [pc, #168]	; (90006df0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d48:	f64f 72ff 	movw	r2, #65535	; 0xffff
{
90006d4c:	4607      	mov	r7, r0
  Command.CommandTarget          = Interface;
90006d4e:	6063      	str	r3, [r4, #4]
  Command.ModeRegisterDefinition = 0;
90006d50:	2300      	movs	r3, #0
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d52:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = 0;
90006d54:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90006d56:	2301      	movs	r3, #1
90006d58:	6023      	str	r3, [r4, #0]
  Command.AutoRefreshNumber      = 1;
90006d5a:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d5c:	f005 fd2a 	bl	9000c7b4 <HAL_SDRAM_SendCommand>
90006d60:	2800      	cmp	r0, #0
90006d62:	d142      	bne.n	90006dea <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90006d64:	f000 ff46 	bl	90007bf4 <HAL_GetTick>
90006d68:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90006d6a:	f000 ff43 	bl	90007bf4 <HAL_GetTick>
90006d6e:	4286      	cmp	r6, r0
90006d70:	d0fb      	beq.n	90006d6a <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006d72:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90006d74:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90006d76:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d78:	491d      	ldr	r1, [pc, #116]	; (90006df0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90006d7a:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90006d7c:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90006d7e:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d80:	4638      	mov	r0, r7
90006d82:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 1;
90006d86:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90006d88:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d8a:	f005 fd13 	bl	9000c7b4 <HAL_SDRAM_SendCommand>
90006d8e:	bb60      	cbnz	r0, 90006dea <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d90:	4917      	ldr	r1, [pc, #92]	; (90006df0 <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90006d92:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90006d96:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006d98:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90006d9a:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90006d9e:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006da0:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.AutoRefreshNumber      = 8;
90006da4:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006da6:	f005 fd05 	bl	9000c7b4 <HAL_SDRAM_SendCommand>
90006daa:	b9f0      	cbnz	r0, 90006dea <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006dac:	4910      	ldr	r1, [pc, #64]	; (90006df0 <MT48LC4M32B2_Init+0xb0>)
90006dae:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006db0:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006db4:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006db6:	696a      	ldr	r2, [r5, #20]
90006db8:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006dba:	69aa      	ldr	r2, [r5, #24]
90006dbc:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
90006dbe:	69ea      	ldr	r2, [r5, #28]
90006dc0:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
90006dc2:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006dc4:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006dc6:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006dc8:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006dcc:	f64f 72ff 	movw	r2, #65535	; 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006dd0:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006dd2:	f005 fcef 	bl	9000c7b4 <HAL_SDRAM_SendCommand>
90006dd6:	b940      	cbnz	r0, 90006dea <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006dd8:	68a9      	ldr	r1, [r5, #8]
90006dda:	4638      	mov	r0, r7
90006ddc:	f005 fd0a 	bl	9000c7f4 <HAL_SDRAM_ProgramRefreshRate>
90006de0:	3800      	subs	r0, #0
90006de2:	bf18      	it	ne
90006de4:	2001      	movne	r0, #1
90006de6:	4240      	negs	r0, r0
}
90006de8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006dea:	f04f 30ff 	mov.w	r0, #4294967295
}
90006dee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90006df0:	2400956c 	.word	0x2400956c

90006df4 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006df4:	4a10      	ldr	r2, [pc, #64]	; (90006e38 <BSP_I2C4_DeInit+0x44>)
{
90006df6:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006df8:	6813      	ldr	r3, [r2, #0]
90006dfa:	3b01      	subs	r3, #1
90006dfc:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
90006dfe:	b10b      	cbz	r3, 90006e04 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
90006e00:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
90006e02:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006e04:	f44f 5180 	mov.w	r1, #4096	; 0x1000
90006e08:	480c      	ldr	r0, [pc, #48]	; (90006e3c <BSP_I2C4_DeInit+0x48>)
90006e0a:	f001 faaf 	bl	9000836c <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
90006e0e:	480b      	ldr	r0, [pc, #44]	; (90006e3c <BSP_I2C4_DeInit+0x48>)
90006e10:	f44f 5100 	mov.w	r1, #8192	; 0x2000
90006e14:	f001 faaa 	bl	9000836c <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006e18:	4a09      	ldr	r2, [pc, #36]	; (90006e40 <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006e1a:	480a      	ldr	r0, [pc, #40]	; (90006e44 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006e1c:	f8d2 30f4 	ldr.w	r3, [r2, #244]	; 0xf4
90006e20:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006e24:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006e28:	f001 fd48 	bl	900088bc <HAL_I2C_DeInit>
90006e2c:	2800      	cmp	r0, #0
90006e2e:	d0e7      	beq.n	90006e00 <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
90006e30:	f06f 0007 	mvn.w	r0, #7
}
90006e34:	bd08      	pop	{r3, pc}
90006e36:	bf00      	nop
90006e38:	2400957c 	.word	0x2400957c
90006e3c:	58020c00 	.word	0x58020c00
90006e40:	58024400 	.word	0x58024400
90006e44:	24009f84 	.word	0x24009f84

90006e48 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
90006e48:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
90006e4a:	2201      	movs	r2, #1
{
90006e4c:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
90006e4e:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
90006e52:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
90006e56:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
90006e5a:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
90006e5e:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
90006e60:	f001 fcd4 	bl	9000880c <HAL_I2C_Init>
90006e64:	b108      	cbz	r0, 90006e6a <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
90006e66:	2001      	movs	r0, #1
}
90006e68:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
90006e6a:	4601      	mov	r1, r0
90006e6c:	4620      	mov	r0, r4
90006e6e:	f001 ffe3 	bl	90008e38 <HAL_I2CEx_ConfigAnalogFilter>
90006e72:	2800      	cmp	r0, #0
90006e74:	d1f7      	bne.n	90006e66 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
90006e76:	4601      	mov	r1, r0
90006e78:	4620      	mov	r0, r4
90006e7a:	f002 f807 	bl	90008e8c <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
90006e7e:	3800      	subs	r0, #0
90006e80:	bf18      	it	ne
90006e82:	2001      	movne	r0, #1
}
90006e84:	bd10      	pop	{r4, pc}
90006e86:	bf00      	nop

90006e88 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
90006e88:	4b99      	ldr	r3, [pc, #612]	; (900070f0 <BSP_I2C4_Init+0x268>)
  hbus_i2c4.Instance = BUS_I2C4;
90006e8a:	489a      	ldr	r0, [pc, #616]	; (900070f4 <BSP_I2C4_Init+0x26c>)
90006e8c:	4a9a      	ldr	r2, [pc, #616]	; (900070f8 <BSP_I2C4_Init+0x270>)
  if (I2c4InitCounter == 0U)
90006e8e:	6819      	ldr	r1, [r3, #0]
{
90006e90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90006e94:	b09f      	sub	sp, #124	; 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
90006e96:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
90006e98:	9103      	str	r1, [sp, #12]
90006e9a:	b119      	cbz	r1, 90006ea4 <BSP_I2C4_Init+0x1c>
  int32_t ret = BSP_ERROR_NONE;
90006e9c:	2000      	movs	r0, #0
}
90006e9e:	b01f      	add	sp, #124	; 0x7c
90006ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
90006ea4:	2201      	movs	r2, #1
90006ea6:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006ea8:	f001 ffc0 	bl	90008e2c <HAL_I2C_GetState>
90006eac:	2800      	cmp	r0, #0
90006eae:	d1f5      	bne.n	90006e9c <BSP_I2C4_Init+0x14>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006eb0:	4c92      	ldr	r4, [pc, #584]	; (900070fc <BSP_I2C4_Init+0x274>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006eb2:	f44f 5080 	mov.w	r0, #4096	; 0x1000
90006eb6:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006eb8:	2504      	movs	r5, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006eba:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006ebe:	2600      	movs	r6, #0
90006ec0:	2702      	movs	r7, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006ec2:	f043 0308 	orr.w	r3, r3, #8
90006ec6:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006eca:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006ece:	f003 0308 	and.w	r3, r3, #8
90006ed2:	9315      	str	r3, [sp, #84]	; 0x54
90006ed4:	9b15      	ldr	r3, [sp, #84]	; 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006ed6:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
90006eda:	f043 0308 	orr.w	r3, r3, #8
90006ede:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
90006ee2:	f8d4 30e0 	ldr.w	r3, [r4, #224]	; 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006ee6:	951c      	str	r5, [sp, #112]	; 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006ee8:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006eec:	e9cd 0118 	strd	r0, r1, [sp, #96]	; 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006ef0:	9316      	str	r3, [sp, #88]	; 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006ef2:	a918      	add	r1, sp, #96	; 0x60
90006ef4:	4882      	ldr	r0, [pc, #520]	; (90007100 <BSP_I2C4_Init+0x278>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006ef6:	9b16      	ldr	r3, [sp, #88]	; 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006ef8:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006efc:	f001 f904 	bl	90008108 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006f00:	2312      	movs	r3, #18
90006f02:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006f06:	a918      	add	r1, sp, #96	; 0x60
90006f08:	487d      	ldr	r0, [pc, #500]	; (90007100 <BSP_I2C4_Init+0x278>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006f0a:	951c      	str	r5, [sp, #112]	; 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
90006f0c:	e9cd 2318 	strd	r2, r3, [sp, #96]	; 0x60
90006f10:	e9cd 671a 	strd	r6, r7, [sp, #104]	; 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006f14:	f001 f8f8 	bl	90008108 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006f18:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006f1c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006f20:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
90006f24:	f8d4 30f4 	ldr.w	r3, [r4, #244]	; 0xf4
90006f28:	f003 0380 	and.w	r3, r3, #128	; 0x80
90006f2c:	9317      	str	r3, [sp, #92]	; 0x5c
90006f2e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  BUS_I2C4_FORCE_RESET();
90006f30:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006f34:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90006f38:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
  BUS_I2C4_RELEASE_RESET();
90006f3c:	f8d4 309c 	ldr.w	r3, [r4, #156]	; 0x9c
90006f40:	f023 0380 	bic.w	r3, r3, #128	; 0x80
90006f44:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
90006f48:	f004 fc94 	bl	9000b874 <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
90006f4c:	2800      	cmp	r0, #0
90006f4e:	f000 81f6 	beq.w	9000733e <BSP_I2C4_Init+0x4b6>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006f52:	4b6c      	ldr	r3, [pc, #432]	; (90007104 <BSP_I2C4_Init+0x27c>)
  uint32_t prev_presc = I2C_PRESC_MAX;
90006f54:	f04f 0b10 	mov.w	fp, #16
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006f58:	9e03      	ldr	r6, [sp, #12]
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006f5a:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006f5e:	f8df a1ac 	ldr.w	sl, [pc, #428]	; 9000710c <BSP_I2C4_Init+0x284>
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006f62:	4635      	mov	r5, r6
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006f64:	fbb3 f7f0 	udiv	r7, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
90006f68:	00bb      	lsls	r3, r7, #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
90006f6a:	9702      	str	r7, [sp, #8]
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006f6c:	eb07 0247 	add.w	r2, r7, r7, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006f70:	f5c3 7cc3 	rsb	ip, r3, #390	; 0x186
90006f74:	4b64      	ldr	r3, [pc, #400]	; (90007108 <BSP_I2C4_Init+0x280>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
90006f76:	f1c2 0432 	rsb	r4, r2, #50	; 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
90006f7a:	0079      	lsls	r1, r7, #1
90006f7c:	681b      	ldr	r3, [r3, #0]
90006f7e:	ea2c 7cec 	bic.w	ip, ip, ip, asr #31
90006f82:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
90006f86:	9113      	str	r1, [sp, #76]	; 0x4c
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
90006f88:	4699      	mov	r9, r3
90006f8a:	930a      	str	r3, [sp, #40]	; 0x28
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006f8c:	ebb4 0f47 	cmp.w	r4, r7, lsl #1
90006f90:	46b8      	mov	r8, r7
90006f92:	eb07 0347 	add.w	r3, r7, r7, lsl #1
90006f96:	bf94      	ite	ls
90006f98:	2101      	movls	r1, #1
90006f9a:	2100      	movhi	r1, #0
90006f9c:	ebbc 0f47 	cmp.w	ip, r7, lsl #1
90006fa0:	f001 0101 	and.w	r1, r1, #1
90006fa4:	eb07 0287 	add.w	r2, r7, r7, lsl #2
90006fa8:	bf38      	it	cc
90006faa:	2100      	movcc	r1, #0
90006fac:	429c      	cmp	r4, r3
90006fae:	ebc7 00c7 	rsb	r0, r7, r7, lsl #3
90006fb2:	9105      	str	r1, [sp, #20]
90006fb4:	bf8c      	ite	hi
90006fb6:	2100      	movhi	r1, #0
90006fb8:	2101      	movls	r1, #1
90006fba:	459c      	cmp	ip, r3
90006fbc:	bf38      	it	cc
90006fbe:	2100      	movcc	r1, #0
90006fc0:	ebb4 0f87 	cmp.w	r4, r7, lsl #2
90006fc4:	9106      	str	r1, [sp, #24]
90006fc6:	eb07 0142 	add.w	r1, r7, r2, lsl #1
90006fca:	9104      	str	r1, [sp, #16]
90006fcc:	eb07 0183 	add.w	r1, r7, r3, lsl #2
90006fd0:	9111      	str	r1, [sp, #68]	; 0x44
90006fd2:	bf94      	ite	ls
90006fd4:	2101      	movls	r1, #1
90006fd6:	2100      	movhi	r1, #0
90006fd8:	ebbc 0f87 	cmp.w	ip, r7, lsl #2
90006fdc:	f001 0e01 	and.w	lr, r1, #1
90006fe0:	bf38      	it	cc
90006fe2:	f04f 0e00 	movcc.w	lr, #0
90006fe6:	4294      	cmp	r4, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006fe8:	f04f 0100 	mov.w	r1, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006fec:	f8cd e01c 	str.w	lr, [sp, #28]
90006ff0:	bf8c      	ite	hi
90006ff2:	f04f 0e00 	movhi.w	lr, #0
90006ff6:	f04f 0e01 	movls.w	lr, #1
90006ffa:	4594      	cmp	ip, r2
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006ffc:	9101      	str	r1, [sp, #4]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006ffe:	bf38      	it	cc
90007000:	f04f 0e00 	movcc.w	lr, #0
90007004:	ebb4 0f43 	cmp.w	r4, r3, lsl #1
90007008:	bf98      	it	ls
9000700a:	2101      	movls	r1, #1
9000700c:	ebbc 0f43 	cmp.w	ip, r3, lsl #1
90007010:	f8cd e020 	str.w	lr, [sp, #32]
90007014:	f001 0101 	and.w	r1, r1, #1
90007018:	bf38      	it	cc
9000701a:	2100      	movcc	r1, #0
9000701c:	4284      	cmp	r4, r0
9000701e:	9109      	str	r1, [sp, #36]	; 0x24
90007020:	4601      	mov	r1, r0
90007022:	bf8c      	ite	hi
90007024:	2000      	movhi	r0, #0
90007026:	2001      	movls	r0, #1
90007028:	458c      	cmp	ip, r1
9000702a:	bf38      	it	cc
9000702c:	2000      	movcc	r0, #0
9000702e:	ebb4 0fc7 	cmp.w	r4, r7, lsl #3
90007032:	900b      	str	r0, [sp, #44]	; 0x2c
90007034:	bf94      	ite	ls
90007036:	2001      	movls	r0, #1
90007038:	2000      	movhi	r0, #0
9000703a:	ebbc 0fc7 	cmp.w	ip, r7, lsl #3
9000703e:	f000 0001 	and.w	r0, r0, #1
90007042:	bf38      	it	cc
90007044:	2000      	movcc	r0, #0
90007046:	900c      	str	r0, [sp, #48]	; 0x30
90007048:	eb07 00c7 	add.w	r0, r7, r7, lsl #3
9000704c:	4284      	cmp	r4, r0
9000704e:	bf8c      	ite	hi
90007050:	f04f 0e00 	movhi.w	lr, #0
90007054:	f04f 0e01 	movls.w	lr, #1
90007058:	4584      	cmp	ip, r0
9000705a:	bf38      	it	cc
9000705c:	f04f 0e00 	movcc.w	lr, #0
90007060:	ebb4 0f42 	cmp.w	r4, r2, lsl #1
90007064:	4670      	mov	r0, lr
90007066:	bf94      	ite	ls
90007068:	2001      	movls	r0, #1
9000706a:	2000      	movhi	r0, #0
9000706c:	ebbc 0f42 	cmp.w	ip, r2, lsl #1
90007070:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90007074:	f04f 0e00 	mov.w	lr, #0
90007078:	f000 0001 	and.w	r0, r0, #1
9000707c:	bf38      	it	cc
9000707e:	2000      	movcc	r0, #0
90007080:	900e      	str	r0, [sp, #56]	; 0x38
90007082:	9804      	ldr	r0, [sp, #16]
90007084:	4284      	cmp	r4, r0
90007086:	4602      	mov	r2, r0
90007088:	bf8c      	ite	hi
9000708a:	2200      	movhi	r2, #0
9000708c:	2201      	movls	r2, #1
9000708e:	4584      	cmp	ip, r0
90007090:	bf38      	it	cc
90007092:	2200      	movcc	r2, #0
90007094:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
90007098:	920f      	str	r2, [sp, #60]	; 0x3c
9000709a:	bf94      	ite	ls
9000709c:	2201      	movls	r2, #1
9000709e:	2200      	movhi	r2, #0
900070a0:	ebbc 0f83 	cmp.w	ip, r3, lsl #2
900070a4:	f002 0201 	and.w	r2, r2, #1
900070a8:	bf38      	it	cc
900070aa:	2200      	movcc	r2, #0
900070ac:	9210      	str	r2, [sp, #64]	; 0x40
900070ae:	9a11      	ldr	r2, [sp, #68]	; 0x44
900070b0:	4294      	cmp	r4, r2
900070b2:	4613      	mov	r3, r2
900070b4:	bf8c      	ite	hi
900070b6:	2300      	movhi	r3, #0
900070b8:	2301      	movls	r3, #1
900070ba:	4594      	cmp	ip, r2
900070bc:	bf38      	it	cc
900070be:	2300      	movcc	r3, #0
900070c0:	ebb4 0f41 	cmp.w	r4, r1, lsl #1
900070c4:	9311      	str	r3, [sp, #68]	; 0x44
900070c6:	bf94      	ite	ls
900070c8:	2301      	movls	r3, #1
900070ca:	2300      	movhi	r3, #0
900070cc:	ebbc 0f41 	cmp.w	ip, r1, lsl #1
900070d0:	f003 0301 	and.w	r3, r3, #1
900070d4:	bf38      	it	cc
900070d6:	2300      	movcc	r3, #0
900070d8:	9312      	str	r3, [sp, #72]	; 0x48
900070da:	ebc7 1307 	rsb	r3, r7, r7, lsl #4
900070de:	429c      	cmp	r4, r3
900070e0:	bf8c      	ite	hi
900070e2:	2200      	movhi	r2, #0
900070e4:	2201      	movls	r2, #1
900070e6:	459c      	cmp	ip, r3
900070e8:	bf38      	it	cc
900070ea:	2200      	movcc	r2, #0
900070ec:	9204      	str	r2, [sp, #16]
900070ee:	e014      	b.n	9000711a <BSP_I2C4_Init+0x292>
900070f0:	2400957c 	.word	0x2400957c
900070f4:	24009f84 	.word	0x24009f84
900070f8:	58001c00 	.word	0x58001c00
900070fc:	58024400 	.word	0x58024400
90007100:	58020c00 	.word	0x58020c00
90007104:	3b9aca00 	.word	0x3b9aca00
90007108:	24009f80 	.word	0x24009f80
9000710c:	24009580 	.word	0x24009580
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90007110:	f1be 0f10 	cmp.w	lr, #16
90007114:	44b8      	add	r8, r7
90007116:	f000 826c 	beq.w	900075f2 <BSP_I2C4_Init+0x76a>
      if (tscldel >= (uint32_t)tscldel_min)
9000711a:	f5b8 7faf 	cmp.w	r8, #350	; 0x15e
9000711e:	4673      	mov	r3, lr
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90007120:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
90007124:	d3f4      	bcc.n	90007110 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
90007126:	ebbb 0205 	subs.w	r2, fp, r5
9000712a:	bf18      	it	ne
9000712c:	2201      	movne	r2, #1
9000712e:	2c00      	cmp	r4, #0
90007130:	bf18      	it	ne
90007132:	2200      	movne	r2, #0
90007134:	2a00      	cmp	r2, #0
90007136:	f040 824a 	bne.w	900075ce <BSP_I2C4_Init+0x746>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000713a:	45bc      	cmp	ip, r7
9000713c:	bf34      	ite	cc
9000713e:	2200      	movcc	r2, #0
90007140:	2201      	movcs	r2, #1
90007142:	42bc      	cmp	r4, r7
90007144:	bf88      	it	hi
90007146:	2200      	movhi	r2, #0
            if(presc != prev_presc)
90007148:	45ab      	cmp	fp, r5
9000714a:	bf0c      	ite	eq
9000714c:	2200      	moveq	r2, #0
9000714e:	f002 0201 	andne.w	r2, r2, #1
90007152:	2a00      	cmp	r2, #0
90007154:	f000 80fd 	beq.w	90007352 <BSP_I2C4_Init+0x4ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007158:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000715c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007160:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007162:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007166:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000716a:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000716e:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007170:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007172:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007174:	f200 81a5 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
90007178:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000717a:	9906      	ldr	r1, [sp, #24]
9000717c:	45ab      	cmp	fp, r5
9000717e:	bf0c      	ite	eq
90007180:	2100      	moveq	r1, #0
90007182:	f001 0101 	andne.w	r1, r1, #1
90007186:	2900      	cmp	r1, #0
90007188:	f000 80ff 	beq.w	9000738a <BSP_I2C4_Init+0x502>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000718c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007190:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007194:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007196:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000719a:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000719e:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900071a2:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071a4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900071a6:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900071a8:	f200 818b 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900071ac:	460a      	mov	r2, r1
900071ae:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900071b0:	9908      	ldr	r1, [sp, #32]
900071b2:	45ab      	cmp	fp, r5
900071b4:	bf0c      	ite	eq
900071b6:	2100      	moveq	r1, #0
900071b8:	f001 0101 	andne.w	r1, r1, #1
900071bc:	2900      	cmp	r1, #0
900071be:	f000 80ff 	beq.w	900073c0 <BSP_I2C4_Init+0x538>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071c2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900071c6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900071ca:	2005      	movs	r0, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071cc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900071d0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071d4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900071d8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071da:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900071dc:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900071de:	f200 8170 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900071e2:	460a      	mov	r2, r1
900071e4:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900071e6:	990b      	ldr	r1, [sp, #44]	; 0x2c
900071e8:	45ab      	cmp	fp, r5
900071ea:	bf0c      	ite	eq
900071ec:	2100      	moveq	r1, #0
900071ee:	f001 0101 	andne.w	r1, r1, #1
900071f2:	2900      	cmp	r1, #0
900071f4:	f000 80fe 	beq.w	900073f4 <BSP_I2C4_Init+0x56c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900071f8:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900071fc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007200:	2007      	movs	r0, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007202:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007206:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000720a:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000720e:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007210:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007212:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007214:	f200 8155 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
90007218:	460a      	mov	r2, r1
9000721a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000721c:	990d      	ldr	r1, [sp, #52]	; 0x34
9000721e:	45ab      	cmp	fp, r5
90007220:	bf0c      	ite	eq
90007222:	2100      	moveq	r1, #0
90007224:	f001 0101 	andne.w	r1, r1, #1
90007228:	2900      	cmp	r1, #0
9000722a:	f000 80fd 	beq.w	90007428 <BSP_I2C4_Init+0x5a0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000722e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007232:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007236:	2009      	movs	r0, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007238:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000723c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007240:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007244:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007246:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007248:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000724a:	f200 813a 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
9000724e:	460a      	mov	r2, r1
90007250:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007252:	990f      	ldr	r1, [sp, #60]	; 0x3c
90007254:	45ab      	cmp	fp, r5
90007256:	bf0c      	ite	eq
90007258:	2100      	moveq	r1, #0
9000725a:	f001 0101 	andne.w	r1, r1, #1
9000725e:	2900      	cmp	r1, #0
90007260:	f000 80fc 	beq.w	9000745c <BSP_I2C4_Init+0x5d4>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007264:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007268:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000726c:	200b      	movs	r0, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000726e:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007272:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007276:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000727a:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000727c:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000727e:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007280:	f200 811f 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
90007284:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007286:	9e11      	ldr	r6, [sp, #68]	; 0x44
90007288:	455d      	cmp	r5, fp
9000728a:	bf0c      	ite	eq
9000728c:	2600      	moveq	r6, #0
9000728e:	f006 0601 	andne.w	r6, r6, #1
90007292:	2e00      	cmp	r6, #0
90007294:	f000 80fb 	beq.w	9000748e <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007298:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000729c:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072a0:	210d      	movs	r1, #13
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072a2:	4650      	mov	r0, sl
900072a4:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072a8:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072ac:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072b0:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072b2:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072b4:	f200 8105 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900072b8:	4631      	mov	r1, r6
900072ba:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900072bc:	9e04      	ldr	r6, [sp, #16]
900072be:	455d      	cmp	r5, fp
900072c0:	bf0c      	ite	eq
900072c2:	2600      	moveq	r6, #0
900072c4:	f006 0601 	andne.w	r6, r6, #1
900072c8:	2e00      	cmp	r6, #0
900072ca:	f000 817c 	beq.w	900075c6 <BSP_I2C4_Init+0x73e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072ce:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900072d2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900072d6:	4650      	mov	r0, sl
900072d8:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
900072dc:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072e0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900072e4:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900072e6:	f04f 030f 	mov.w	r3, #15
900072ea:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900072ec:	f200 80e9 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900072f0:	46ab      	mov	fp, r5
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
900072f2:	e70d      	b.n	90007110 <BSP_I2C4_Init+0x288>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900072f4:	9a07      	ldr	r2, [sp, #28]
900072f6:	9b08      	ldr	r3, [sp, #32]
900072f8:	3214      	adds	r2, #20
900072fa:	3301      	adds	r3, #1
900072fc:	9207      	str	r2, [sp, #28]
900072fe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90007300:	9308      	str	r3, [sp, #32]
90007302:	4293      	cmp	r3, r2
90007304:	f040 80ff 	bne.w	90007506 <BSP_I2C4_Init+0x67e>
        if (idx < I2C_VALID_TIMING_NBR)
90007308:	297f      	cmp	r1, #127	; 0x7f
9000730a:	d818      	bhi.n	9000733e <BSP_I2C4_Init+0x4b6>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000730c:	eb01 0381 	add.w	r3, r1, r1, lsl #2
90007310:	990b      	ldr	r1, [sp, #44]	; 0x2c
90007312:	eb01 0283 	add.w	r2, r1, r3, lsl #2
90007316:	f851 4023 	ldr.w	r4, [r1, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000731a:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
9000731c:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
9000731e:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007320:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
90007324:	f400 0070 	and.w	r0, r0, #15728640	; 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007328:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
9000732c:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
9000732e:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007330:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
90007332:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
90007336:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
90007338:	430b      	orrs	r3, r1
9000733a:	4313      	orrs	r3, r2
9000733c:	9303      	str	r3, [sp, #12]
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
9000733e:	9903      	ldr	r1, [sp, #12]
90007340:	48b5      	ldr	r0, [pc, #724]	; (90007618 <BSP_I2C4_Init+0x790>)
90007342:	f7ff fd81 	bl	90006e48 <MX_I2C4_Init>
90007346:	2800      	cmp	r0, #0
90007348:	f43f ada8 	beq.w	90006e9c <BSP_I2C4_Init+0x14>
          ret = BSP_ERROR_BUS_FAILURE;
9000734c:	f06f 0007 	mvn.w	r0, #7
  return ret;
90007350:	e5a5      	b.n	90006e9e <BSP_I2C4_Init+0x16>
            if(presc != prev_presc)
90007352:	4632      	mov	r2, r6
90007354:	9905      	ldr	r1, [sp, #20]
90007356:	45ab      	cmp	fp, r5
90007358:	bf0c      	ite	eq
9000735a:	2100      	moveq	r1, #0
9000735c:	f001 0101 	andne.w	r1, r1, #1
90007360:	2900      	cmp	r1, #0
90007362:	f43f af0a 	beq.w	9000717a <BSP_I2C4_Init+0x2f2>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007366:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000736a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000736e:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007370:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007374:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007378:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000737c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000737e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007380:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007382:	f200 809e 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
90007386:	460a      	mov	r2, r1
90007388:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000738a:	9907      	ldr	r1, [sp, #28]
9000738c:	45ab      	cmp	fp, r5
9000738e:	bf0c      	ite	eq
90007390:	2100      	moveq	r1, #0
90007392:	f001 0101 	andne.w	r1, r1, #1
90007396:	2900      	cmp	r1, #0
90007398:	f43f af0a 	beq.w	900071b0 <BSP_I2C4_Init+0x328>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000739c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900073a0:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073a4:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073a6:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073aa:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073ae:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073b2:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073b4:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073b6:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073b8:	f200 8083 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900073bc:	460a      	mov	r2, r1
900073be:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900073c0:	9909      	ldr	r1, [sp, #36]	; 0x24
900073c2:	45ab      	cmp	fp, r5
900073c4:	bf0c      	ite	eq
900073c6:	2100      	moveq	r1, #0
900073c8:	f001 0101 	andne.w	r1, r1, #1
900073cc:	2900      	cmp	r1, #0
900073ce:	f43f af0a 	beq.w	900071e6 <BSP_I2C4_Init+0x35e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073d2:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900073d6:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073da:	2006      	movs	r0, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073dc:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073e0:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073e4:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900073e8:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900073ea:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900073ec:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900073ee:	d868      	bhi.n	900074c2 <BSP_I2C4_Init+0x63a>
900073f0:	460a      	mov	r2, r1
900073f2:	46ab      	mov	fp, r5
            if(presc != prev_presc)
900073f4:	990c      	ldr	r1, [sp, #48]	; 0x30
900073f6:	45ab      	cmp	fp, r5
900073f8:	bf0c      	ite	eq
900073fa:	2100      	moveq	r1, #0
900073fc:	f001 0101 	andne.w	r1, r1, #1
90007400:	2900      	cmp	r1, #0
90007402:	f43f af0b 	beq.w	9000721c <BSP_I2C4_Init+0x394>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007406:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000740a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000740e:	2008      	movs	r0, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007410:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007414:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007418:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000741c:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000741e:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007420:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007422:	d84e      	bhi.n	900074c2 <BSP_I2C4_Init+0x63a>
90007424:	460a      	mov	r2, r1
90007426:	46ab      	mov	fp, r5
            if(presc != prev_presc)
90007428:	990e      	ldr	r1, [sp, #56]	; 0x38
9000742a:	45ab      	cmp	fp, r5
9000742c:	bf0c      	ite	eq
9000742e:	2100      	moveq	r1, #0
90007430:	f001 0101 	andne.w	r1, r1, #1
90007434:	2900      	cmp	r1, #0
90007436:	f43f af0c 	beq.w	90007252 <BSP_I2C4_Init+0x3ca>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000743a:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000743e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007442:	200a      	movs	r0, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007444:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007448:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000744c:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007450:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007452:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007454:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90007456:	d834      	bhi.n	900074c2 <BSP_I2C4_Init+0x63a>
90007458:	460a      	mov	r2, r1
9000745a:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000745c:	9910      	ldr	r1, [sp, #64]	; 0x40
9000745e:	45ab      	cmp	fp, r5
90007460:	bf0c      	ite	eq
90007462:	2100      	moveq	r1, #0
90007464:	f001 0101 	andne.w	r1, r1, #1
90007468:	2900      	cmp	r1, #0
9000746a:	f000 80ae 	beq.w	900075ca <BSP_I2C4_Init+0x742>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000746e:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90007472:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007476:	200c      	movs	r0, #12
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007478:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000747c:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007480:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90007484:	6090      	str	r0, [r2, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90007486:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90007488:	6053      	str	r3, [r2, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000748a:	d81a      	bhi.n	900074c2 <BSP_I2C4_Init+0x63a>
9000748c:	46ab      	mov	fp, r5
            if(presc != prev_presc)
9000748e:	9e12      	ldr	r6, [sp, #72]	; 0x48
90007490:	455d      	cmp	r5, fp
90007492:	bf0c      	ite	eq
90007494:	2600      	moveq	r6, #0
90007496:	f006 0601 	andne.w	r6, r6, #1
9000749a:	2e00      	cmp	r6, #0
9000749c:	f43f af0e 	beq.w	900072bc <BSP_I2C4_Init+0x434>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900074a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900074a8:	4650      	mov	r0, sl
900074aa:	f84a 5022 	str.w	r5, [sl, r2, lsl #2]
900074ae:	eb0a 0282 	add.w	r2, sl, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074b2:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900074b6:	6053      	str	r3, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900074b8:	f04f 030e 	mov.w	r3, #14
900074bc:	6093      	str	r3, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900074be:	f67f af17 	bls.w	900072f0 <BSP_I2C4_Init+0x468>
900074c2:	4b56      	ldr	r3, [pc, #344]	; (9000761c <BSP_I2C4_Init+0x794>)
900074c4:	900b      	str	r0, [sp, #44]	; 0x2c
900074c6:	f8c3 9000 	str.w	r9, [r3]
              I2c_valid_timing_nbr ++;
900074ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
900074ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900074d0:	f240 4201 	movw	r2, #1025	; 0x401
900074d4:	f240 2657 	movw	r6, #599	; 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900074d8:	f640 1ac4 	movw	sl, #2500	; 0x9c4
900074dc:	1ad2      	subs	r2, r2, r3
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900074de:	f240 4b12 	movw	fp, #1042	; 0x412
900074e2:	920d      	str	r2, [sp, #52]	; 0x34
900074e4:	9a02      	ldr	r2, [sp, #8]
900074e6:	4296      	cmp	r6, r2
900074e8:	bf38      	it	cc
900074ea:	4616      	movcc	r6, r2
900074ec:	4a4c      	ldr	r2, [pc, #304]	; (90007620 <BSP_I2C4_Init+0x798>)
900074ee:	9207      	str	r2, [sp, #28]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900074f0:	2200      	movs	r2, #0
900074f2:	9208      	str	r2, [sp, #32]
900074f4:	f04f 32ff 	mov.w	r2, #4294967295
900074f8:	4611      	mov	r1, r2
900074fa:	f103 0232 	add.w	r2, r3, #50	; 0x32
900074fe:	f6a3 0334 	subw	r3, r3, #2100	; 0x834
90007502:	920c      	str	r2, [sp, #48]	; 0x30
90007504:	930e      	str	r3, [sp, #56]	; 0x38
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90007506:	9b07      	ldr	r3, [sp, #28]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007508:	f04f 0800 	mov.w	r8, #0
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000750c:	6818      	ldr	r0, [r3, #0]
9000750e:	9b02      	ldr	r3, [sp, #8]
90007510:	fb00 3003 	mla	r0, r0, r3, r3
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90007514:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90007516:	1a1b      	subs	r3, r3, r0
90007518:	ea4f 0943 	mov.w	r9, r3, lsl #1
9000751c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9000751e:	eb03 0e00 	add.w	lr, r3, r0
90007522:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90007524:	4403      	add	r3, r0
90007526:	9309      	str	r3, [sp, #36]	; 0x24
90007528:	e006      	b.n	90007538 <BSP_I2C4_Init+0x6b0>
9000752a:	f5b8 7f80 	cmp.w	r8, #256	; 0x100
9000752e:	4486      	add	lr, r0
90007530:	eba9 0900 	sub.w	r9, r9, r0
90007534:	f43f aede 	beq.w	900072f4 <BSP_I2C4_Init+0x46c>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007538:	f240 5214 	movw	r2, #1300	; 0x514
9000753c:	f8cd 8004 	str.w	r8, [sp, #4]
90007540:	f1ae 0332 	sub.w	r3, lr, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90007544:	f108 0801 	add.w	r8, r8, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90007548:	4596      	cmp	lr, r2
9000754a:	d9ee      	bls.n	9000752a <BSP_I2C4_Init+0x6a2>
9000754c:	9a02      	ldr	r2, [sp, #8]
9000754e:	ebb2 0f93 	cmp.w	r2, r3, lsr #2
90007552:	d2ea      	bcs.n	9000752a <BSP_I2C4_Init+0x6a2>
90007554:	f640 0c34 	movw	ip, #2100	; 0x834
90007558:	464c      	mov	r4, r9
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000755a:	f8cd 9018 	str.w	r9, [sp, #24]
9000755e:	2200      	movs	r2, #0
90007560:	ebac 0c03 	sub.w	ip, ip, r3
90007564:	9b09      	ldr	r3, [sp, #36]	; 0x24
90007566:	4689      	mov	r9, r1
90007568:	4473      	add	r3, lr
9000756a:	e9cd e804 	strd	lr, r8, [sp, #16]
9000756e:	f8dd 8020 	ldr.w	r8, [sp, #32]
90007572:	f8dd e01c 	ldr.w	lr, [sp, #28]
90007576:	e005      	b.n	90007584 <BSP_I2C4_Init+0x6fc>
90007578:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
9000757c:	4403      	add	r3, r0
9000757e:	eba4 0400 	sub.w	r4, r4, r0
90007582:	d01a      	beq.n	900075ba <BSP_I2C4_Init+0x732>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007584:	eb0c 0103 	add.w	r1, ip, r3
90007588:	4617      	mov	r7, r2
9000758a:	f203 15a1 	addw	r5, r3, #417	; 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000758e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90007590:	42b1      	cmp	r1, r6
90007592:	d9f1      	bls.n	90007578 <BSP_I2C4_Init+0x6f0>
90007594:	455d      	cmp	r5, fp
90007596:	d8ef      	bhi.n	90007578 <BSP_I2C4_Init+0x6f0>
            if (error < 0)
90007598:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000759c:	bf28      	it	cs
9000759e:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900075a0:	458a      	cmp	sl, r1
900075a2:	d9e9      	bls.n	90007578 <BSP_I2C4_Init+0x6f0>
              I2c_valid_timing[count].sclh = sclh;
900075a4:	468a      	mov	sl, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900075a6:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
              I2c_valid_timing[count].scll = scll;
900075aa:	9901      	ldr	r1, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
900075ac:	46c1      	mov	r9, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900075ae:	4403      	add	r3, r0
900075b0:	eba4 0400 	sub.w	r4, r4, r0
              I2c_valid_timing[count].sclh = sclh;
900075b4:	e9ce 7103 	strd	r7, r1, [lr, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900075b8:	d1e4      	bne.n	90007584 <BSP_I2C4_Init+0x6fc>
900075ba:	4649      	mov	r1, r9
900075bc:	f8dd 9018 	ldr.w	r9, [sp, #24]
900075c0:	e9dd e804 	ldrd	lr, r8, [sp, #16]
900075c4:	e7b1      	b.n	9000752a <BSP_I2C4_Init+0x6a2>
900075c6:	460e      	mov	r6, r1
900075c8:	e5a2      	b.n	90007110 <BSP_I2C4_Init+0x288>
            if(presc != prev_presc)
900075ca:	4611      	mov	r1, r2
900075cc:	e65b      	b.n	90007286 <BSP_I2C4_Init+0x3fe>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075ce:	eb09 0189 	add.w	r1, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900075d2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075d6:	2000      	movs	r0, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075d8:	f84a 5021 	str.w	r5, [sl, r1, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075dc:	f1b9 0f7f 	cmp.w	r9, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075e0:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900075e4:	6088      	str	r0, [r1, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900075e6:	4650      	mov	r0, sl
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900075e8:	604b      	str	r3, [r1, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900075ea:	f63f af6a 	bhi.w	900074c2 <BSP_I2C4_Init+0x63a>
900075ee:	46ab      	mov	fp, r5
900075f0:	e6b0      	b.n	90007354 <BSP_I2C4_Init+0x4cc>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900075f2:	3501      	adds	r5, #1
900075f4:	9b02      	ldr	r3, [sp, #8]
900075f6:	2d10      	cmp	r5, #16
900075f8:	441f      	add	r7, r3
900075fa:	f47f acc7 	bne.w	90006f8c <BSP_I2C4_Init+0x104>
900075fe:	b126      	cbz	r6, 9000760a <BSP_I2C4_Init+0x782>
90007600:	4b06      	ldr	r3, [pc, #24]	; (9000761c <BSP_I2C4_Init+0x794>)
90007602:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
90007606:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
9000760a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9000760c:	2b00      	cmp	r3, #0
9000760e:	f43f ae96 	beq.w	9000733e <BSP_I2C4_Init+0x4b6>
90007612:	4b03      	ldr	r3, [pc, #12]	; (90007620 <BSP_I2C4_Init+0x798>)
90007614:	930b      	str	r3, [sp, #44]	; 0x2c
90007616:	e75a      	b.n	900074ce <BSP_I2C4_Init+0x646>
90007618:	24009f84 	.word	0x24009f84
9000761c:	24009f80 	.word	0x24009f80
90007620:	24009580 	.word	0x24009580

90007624 <BSP_I2C4_WriteReg>:
{
90007624:	b530      	push	{r4, r5, lr}
90007626:	4614      	mov	r4, r2
90007628:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
9000762a:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000762e:	460a      	mov	r2, r1
90007630:	9301      	str	r3, [sp, #4]
90007632:	4601      	mov	r1, r0
90007634:	2301      	movs	r3, #1
90007636:	4809      	ldr	r0, [pc, #36]	; (9000765c <BSP_I2C4_WriteReg+0x38>)
90007638:	9502      	str	r5, [sp, #8]
9000763a:	9400      	str	r4, [sp, #0]
9000763c:	f001 f958 	bl	900088f0 <HAL_I2C_Mem_Write>
90007640:	b908      	cbnz	r0, 90007646 <BSP_I2C4_WriteReg+0x22>
}
90007642:	b005      	add	sp, #20
90007644:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007646:	4805      	ldr	r0, [pc, #20]	; (9000765c <BSP_I2C4_WriteReg+0x38>)
90007648:	f001 fbf4 	bl	90008e34 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
9000764c:	2804      	cmp	r0, #4
9000764e:	bf0c      	ite	eq
90007650:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90007654:	f06f 0003 	mvnne.w	r0, #3
90007658:	e7f3      	b.n	90007642 <BSP_I2C4_WriteReg+0x1e>
9000765a:	bf00      	nop
9000765c:	24009f84 	.word	0x24009f84

90007660 <BSP_I2C4_ReadReg>:
{
90007660:	b530      	push	{r4, r5, lr}
90007662:	4614      	mov	r4, r2
90007664:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
90007666:	f44f 757a 	mov.w	r5, #1000	; 0x3e8
9000766a:	460a      	mov	r2, r1
9000766c:	9301      	str	r3, [sp, #4]
9000766e:	4601      	mov	r1, r0
90007670:	2301      	movs	r3, #1
90007672:	4809      	ldr	r0, [pc, #36]	; (90007698 <BSP_I2C4_ReadReg+0x38>)
90007674:	9502      	str	r5, [sp, #8]
90007676:	9400      	str	r4, [sp, #0]
90007678:	f001 fa6e 	bl	90008b58 <HAL_I2C_Mem_Read>
9000767c:	b908      	cbnz	r0, 90007682 <BSP_I2C4_ReadReg+0x22>
}
9000767e:	b005      	add	sp, #20
90007680:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
90007682:	4805      	ldr	r0, [pc, #20]	; (90007698 <BSP_I2C4_ReadReg+0x38>)
90007684:	f001 fbd6 	bl	90008e34 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
90007688:	2804      	cmp	r0, #4
9000768a:	bf0c      	ite	eq
9000768c:	f06f 0065 	mvneq.w	r0, #101	; 0x65
90007690:	f06f 0003 	mvnne.w	r0, #3
90007694:	e7f3      	b.n	9000767e <BSP_I2C4_ReadReg+0x1e>
90007696:	bf00      	nop
90007698:	24009f84 	.word	0x24009f84

9000769c <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
9000769c:	f000 baaa 	b.w	90007bf4 <HAL_GetTick>

900076a0 <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
900076a0:	b970      	cbnz	r0, 900076c0 <BSP_SDRAM_DeInit+0x20>
{
900076a2:	b510      	push	{r4, lr}
900076a4:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
900076a6:	4808      	ldr	r0, [pc, #32]	; (900076c8 <BSP_SDRAM_DeInit+0x28>)
900076a8:	f005 f876 	bl	9000c798 <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
900076ac:	207a      	movs	r0, #122	; 0x7a
900076ae:	f000 fb0b 	bl	90007cc8 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
900076b2:	4b06      	ldr	r3, [pc, #24]	; (900076cc <BSP_SDRAM_DeInit+0x2c>)
900076b4:	4806      	ldr	r0, [pc, #24]	; (900076d0 <BSP_SDRAM_DeInit+0x30>)
900076b6:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
900076b8:	f003 f98e 	bl	9000a9d8 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
900076bc:	4620      	mov	r0, r4
}
900076be:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900076c0:	f06f 0001 	mvn.w	r0, #1
}
900076c4:	4770      	bx	lr
900076c6:	bf00      	nop
900076c8:	24009fd8 	.word	0x24009fd8
900076cc:	52000040 	.word	0x52000040
900076d0:	2400a00c 	.word	0x2400a00c

900076d4 <MX_SDRAM_BANK2_Init>:
{
900076d4:	b530      	push	{r4, r5, lr}
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
900076d6:	6102      	str	r2, [r0, #16]
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
900076d8:	2200      	movs	r2, #0
{
900076da:	b089      	sub	sp, #36	; 0x24
  hsdram->Instance = FMC_SDRAM_DEVICE;
900076dc:	4c13      	ldr	r4, [pc, #76]	; (9000772c <MX_SDRAM_BANK2_Init+0x58>)
  hSdram->Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
900076de:	6082      	str	r2, [r0, #8]
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900076e0:	2540      	movs	r5, #64	; 0x40
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
900076e2:	61c2      	str	r2, [r0, #28]
  sdram_timing.ExitSelfRefreshDelay = 7;
900076e4:	2307      	movs	r3, #7
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
900076e6:	6282      	str	r2, [r0, #40]	; 0x28
  sdram_timing.LoadToActiveDelay    = 2;
900076e8:	2202      	movs	r2, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
900076ea:	60c1      	str	r1, [r0, #12]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
900076ec:	f44f 71c0 	mov.w	r1, #384	; 0x180
  sdram_timing.LoadToActiveDelay    = 2;
900076f0:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
900076f2:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900076f4:	2201      	movs	r2, #1
  sdram_timing.ExitSelfRefreshDelay = 7;
900076f6:	9301      	str	r3, [sp, #4]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
900076f8:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
900076fa:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
900076fe:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007700:	f44f 6500 	mov.w	r5, #2048	; 0x800
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90007704:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90007706:	4669      	mov	r1, sp
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90007708:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
9000770c:	2204      	movs	r2, #4
9000770e:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
90007712:	2202      	movs	r2, #2
90007714:	2302      	movs	r3, #2
90007716:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
9000771a:	4b05      	ldr	r3, [pc, #20]	; (90007730 <MX_SDRAM_BANK2_Init+0x5c>)
9000771c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
9000771e:	f005 f811 	bl	9000c744 <HAL_SDRAM_Init>
}
90007722:	3800      	subs	r0, #0
90007724:	bf18      	it	ne
90007726:	2001      	movne	r0, #1
90007728:	b009      	add	sp, #36	; 0x24
9000772a:	bd30      	pop	{r4, r5, pc}
9000772c:	24009fd8 	.word	0x24009fd8
90007730:	52004140 	.word	0x52004140

90007734 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
90007734:	2800      	cmp	r0, #0
90007736:	f040 80d2 	bne.w	900078de <BSP_SDRAM_Init+0x1aa>
  __HAL_RCC_FMC_CLK_ENABLE();
9000773a:	4b6c      	ldr	r3, [pc, #432]	; (900078ec <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
9000773c:	210c      	movs	r1, #12
  __HAL_RCC_FMC_CLK_ENABLE();
9000773e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007742:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
{
90007746:	b570      	push	{r4, r5, r6, lr}
  __HAL_RCC_FMC_CLK_ENABLE();
90007748:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
{
9000774c:	b08e      	sub	sp, #56	; 0x38
  __HAL_RCC_FMC_CLK_ENABLE();
9000774e:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007752:	4605      	mov	r5, r0
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007754:	f24c 7003 	movw	r0, #50947	; 0xc703
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007758:	4c65      	ldr	r4, [pc, #404]	; (900078f0 <BSP_SDRAM_Init+0x1bc>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000775a:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000775e:	4e65      	ldr	r6, [pc, #404]	; (900078f4 <BSP_SDRAM_Init+0x1c0>)
  __HAL_RCC_FMC_CLK_ENABLE();
90007760:	9201      	str	r2, [sp, #4]
90007762:	9a01      	ldr	r2, [sp, #4]
  SDRAM_MDMAx_CLK_ENABLE();
90007764:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007768:	f042 0201 	orr.w	r2, r2, #1
9000776c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
90007770:	f8d3 20d4 	ldr.w	r2, [r3, #212]	; 0xd4
90007774:	f002 0201 	and.w	r2, r2, #1
90007778:	9202      	str	r2, [sp, #8]
9000777a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
9000777c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007780:	f042 0208 	orr.w	r2, r2, #8
90007784:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
90007788:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
9000778c:	f002 0208 	and.w	r2, r2, #8
90007790:	9203      	str	r2, [sp, #12]
90007792:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90007794:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
90007798:	f042 0210 	orr.w	r2, r2, #16
9000779c:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900077a0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077a4:	f002 0210 	and.w	r2, r2, #16
900077a8:	9204      	str	r2, [sp, #16]
900077aa:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
900077ac:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077b0:	f042 0220 	orr.w	r2, r2, #32
900077b4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900077b8:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077bc:	f002 0220 	and.w	r2, r2, #32
900077c0:	9205      	str	r2, [sp, #20]
900077c2:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900077c4:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077c8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
900077cc:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900077d0:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077d4:	f002 0240 	and.w	r2, r2, #64	; 0x40
900077d8:	9206      	str	r2, [sp, #24]
900077da:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
900077dc:	f8d3 20e0 	ldr.w	r2, [r3, #224]	; 0xe0
900077e0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
900077e4:	f8c3 20e0 	str.w	r2, [r3, #224]	; 0xe0
900077e8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
900077ec:	910c      	str	r1, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900077ee:	2102      	movs	r1, #2
  __HAL_RCC_GPIOH_CLK_ENABLE();
900077f0:	f003 0380 	and.w	r3, r3, #128	; 0x80
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
900077f4:	e9cd 0108 	strd	r0, r1, [sp, #32]
900077f8:	2001      	movs	r0, #1
900077fa:	2103      	movs	r1, #3
  __HAL_RCC_GPIOH_CLK_ENABLE();
900077fc:	9307      	str	r3, [sp, #28]
900077fe:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90007800:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90007804:	a908      	add	r1, sp, #32
90007806:	483c      	ldr	r0, [pc, #240]	; (900078f8 <BSP_SDRAM_Init+0x1c4>)
90007808:	f000 fc7e 	bl	90008108 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
9000780c:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007810:	a908      	add	r1, sp, #32
90007812:	483a      	ldr	r0, [pc, #232]	; (900078fc <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90007814:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90007816:	f000 fc77 	bl	90008108 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
9000781a:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
9000781e:	a908      	add	r1, sp, #32
90007820:	4837      	ldr	r0, [pc, #220]	; (90007900 <BSP_SDRAM_Init+0x1cc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90007822:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90007824:	f000 fc70 	bl	90008108 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007828:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
9000782c:	a908      	add	r1, sp, #32
9000782e:	4835      	ldr	r0, [pc, #212]	; (90007904 <BSP_SDRAM_Init+0x1d0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90007830:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90007832:	f000 fc69 	bl	90008108 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90007836:	23e0      	movs	r3, #224	; 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90007838:	a908      	add	r1, sp, #32
9000783a:	4833      	ldr	r0, [pc, #204]	; (90007908 <BSP_SDRAM_Init+0x1d4>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
9000783c:	9308      	str	r3, [sp, #32]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
9000783e:	f000 fc63 	bl	90008108 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007842:	2380      	movs	r3, #128	; 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007844:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007848:	f240 2102 	movw	r1, #514	; 0x202
  HAL_MDMA_DeInit(&mdma_handle);
9000784c:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
9000784e:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90007850:	62a3      	str	r3, [r4, #40]	; 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90007852:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90007854:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90007858:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
9000785a:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000785c:	4a2b      	ldr	r2, [pc, #172]	; (9000790c <BSP_SDRAM_Init+0x1d8>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
9000785e:	6334      	str	r4, [r6, #48]	; 0x30
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90007860:	6022      	str	r2, [r4, #0]
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90007862:	6426      	str	r6, [r4, #64]	; 0x40
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90007864:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90007868:	f640 0308 	movw	r3, #2056	; 0x808
9000786c:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
9000786e:	2320      	movs	r3, #32
90007870:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90007872:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90007876:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
9000787a:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.DestBlockAddressOffset = 0;
9000787c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  HAL_MDMA_DeInit(&mdma_handle);
90007880:	f003 f8aa 	bl	9000a9d8 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90007884:	4620      	mov	r0, r4
90007886:	f003 f82d 	bl	9000a8e4 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
9000788a:	462a      	mov	r2, r5
9000788c:	210f      	movs	r1, #15
9000788e:	207a      	movs	r0, #122	; 0x7a
90007890:	f000 f9ce 	bl	90007c30 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90007894:	207a      	movs	r0, #122	; 0x7a
90007896:	f000 fa09 	bl	90007cac <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
9000789a:	2210      	movs	r2, #16
9000789c:	2104      	movs	r1, #4
9000789e:	4630      	mov	r0, r6
900078a0:	f7ff ff18 	bl	900076d4 <MX_SDRAM_BANK2_Init>
900078a4:	b9f0      	cbnz	r0, 900078e4 <BSP_SDRAM_Init+0x1b0>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900078a6:	491a      	ldr	r1, [pc, #104]	; (90007910 <BSP_SDRAM_Init+0x1dc>)
900078a8:	2208      	movs	r2, #8
900078aa:	2303      	movs	r3, #3
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900078ac:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
900078ae:	e9c1 2300 	strd	r2, r3, [r1]
900078b2:	f240 6203 	movw	r2, #1539	; 0x603
900078b6:	2300      	movs	r3, #0
900078b8:	e9c1 2302 	strd	r2, r3, [r1, #8]
900078bc:	2200      	movs	r2, #0
900078be:	2330      	movs	r3, #48	; 0x30
900078c0:	e9c1 2304 	strd	r2, r3, [r1, #16]
900078c4:	2200      	movs	r2, #0
900078c6:	f44f 7300 	mov.w	r3, #512	; 0x200
900078ca:	e9c1 2306 	strd	r2, r3, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
900078ce:	f7ff fa37 	bl	90006d40 <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
900078d2:	2800      	cmp	r0, #0
900078d4:	bf18      	it	ne
900078d6:	f06f 0004 	mvnne.w	r0, #4
}
900078da:	b00e      	add	sp, #56	; 0x38
900078dc:	bd70      	pop	{r4, r5, r6, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
900078de:	f06f 0001 	mvn.w	r0, #1
}
900078e2:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
900078e4:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
900078e8:	e7f7      	b.n	900078da <BSP_SDRAM_Init+0x1a6>
900078ea:	bf00      	nop
900078ec:	58024400 	.word	0x58024400
900078f0:	2400a078 	.word	0x2400a078
900078f4:	24009fd8 	.word	0x24009fd8
900078f8:	58020c00 	.word	0x58020c00
900078fc:	58021000 	.word	0x58021000
90007900:	58021400 	.word	0x58021400
90007904:	58021800 	.word	0x58021800
90007908:	58021c00 	.word	0x58021c00
9000790c:	52000040 	.word	0x52000040
90007910:	2400a0e8 	.word	0x2400a0e8

90007914 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90007914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007918:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
9000791a:	2800      	cmp	r0, #0
9000791c:	d16b      	bne.n	900079f6 <BSP_TS_Init+0xe2>
9000791e:	680b      	ldr	r3, [r1, #0]
90007920:	460c      	mov	r4, r1
90007922:	1e5a      	subs	r2, r3, #1
90007924:	f5b2 7ff0 	cmp.w	r2, #480	; 0x1e0
90007928:	d265      	bcs.n	900079f6 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000792a:	684a      	ldr	r2, [r1, #4]
9000792c:	1e51      	subs	r1, r2, #1
9000792e:	f5b1 7f88 	cmp.w	r1, #272	; 0x110
90007932:	d260      	bcs.n	900079f6 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90007934:	4293      	cmp	r3, r2
90007936:	bf28      	it	cs
90007938:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
9000793a:	68e2      	ldr	r2, [r4, #12]
9000793c:	429a      	cmp	r2, r3
9000793e:	d85a      	bhi.n	900079f6 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90007940:	2270      	movs	r2, #112	; 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90007942:	4b31      	ldr	r3, [pc, #196]	; (90007a08 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007944:	4d31      	ldr	r5, [pc, #196]	; (90007a0c <BSP_TS_Init+0xf8>)
90007946:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90007948:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
9000794c:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
9000794e:	4a30      	ldr	r2, [pc, #192]	; (90007a10 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007950:	4b30      	ldr	r3, [pc, #192]	; (90007a14 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90007952:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90007954:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90007956:	4a30      	ldr	r2, [pc, #192]	; (90007a18 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90007958:	4b30      	ldr	r3, [pc, #192]	; (90007a1c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
9000795a:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
9000795c:	4628      	mov	r0, r5
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
9000795e:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90007960:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90007962:	f7ff f93f 	bl	90006be4 <FT5336_RegisterBusIO>
90007966:	2800      	cmp	r0, #0
90007968:	d14b      	bne.n	90007a02 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
9000796a:	a901      	add	r1, sp, #4
9000796c:	4628      	mov	r0, r5
9000796e:	f7ff f82f 	bl	900069d0 <FT5336_ReadID>
90007972:	2800      	cmp	r0, #0
90007974:	d145      	bne.n	90007a02 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90007976:	9b01      	ldr	r3, [sp, #4]
90007978:	2b51      	cmp	r3, #81	; 0x51
9000797a:	d142      	bne.n	90007a02 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
9000797c:	4b28      	ldr	r3, [pc, #160]	; (90007a20 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000797e:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
90007980:	4f28      	ldr	r7, [pc, #160]	; (90007a24 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007982:	f8df 80a8 	ldr.w	r8, [pc, #168]	; 90007a2c <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90007986:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90007988:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
9000798c:	681b      	ldr	r3, [r3, #0]
9000798e:	4798      	blx	r3
90007990:	4606      	mov	r6, r0
90007992:	2800      	cmp	r0, #0
90007994:	d135      	bne.n	90007a02 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90007996:	4d24      	ldr	r5, [pc, #144]	; (90007a28 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90007998:	a902      	add	r1, sp, #8
9000799a:	6838      	ldr	r0, [r7, #0]
9000799c:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900079a0:	e9d4 7200 	ldrd	r7, r2, [r4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900079a4:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
900079a6:	e9c5 7200 	strd	r7, r2, [r5]
900079aa:	68a2      	ldr	r2, [r4, #8]
900079ac:	60aa      	str	r2, [r5, #8]
900079ae:	68e2      	ldr	r2, [r4, #12]
900079b0:	60ea      	str	r2, [r5, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
900079b2:	4798      	blx	r3
900079b4:	2800      	cmp	r0, #0
900079b6:	db18      	blt.n	900079ea <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
900079b8:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
900079bc:	e9c5 3204 	strd	r3, r2, [r5, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079c0:	68e3      	ldr	r3, [r4, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079c2:	e9d4 2100 	ldrd	r2, r1, [r4]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079c6:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079c8:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079ca:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079cc:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079ce:	e9c5 2206 	strd	r2, r2, [r5, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079d2:	e9c5 330b 	strd	r3, r3, [r5, #44]	; 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079d6:	622a      	str	r2, [r5, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079d8:	636b      	str	r3, [r5, #52]	; 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079da:	626a      	str	r2, [r5, #36]	; 0x24
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079dc:	63ab      	str	r3, [r5, #56]	; 0x38
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
900079de:	62aa      	str	r2, [r5, #40]	; 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
900079e0:	63eb      	str	r3, [r5, #60]	; 0x3c
}
900079e2:	4630      	mov	r0, r6
900079e4:	b008      	add	sp, #32
900079e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
900079ea:	f06f 0604 	mvn.w	r6, #4
}
900079ee:	4630      	mov	r0, r6
900079f0:	b008      	add	sp, #32
900079f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
900079f6:	f06f 0601 	mvn.w	r6, #1
}
900079fa:	4630      	mov	r0, r6
900079fc:	b008      	add	sp, #32
900079fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90007a02:	f04f 36ff 	mov.w	r6, #4294967295
90007a06:	e7ec      	b.n	900079e2 <BSP_TS_Init+0xce>
90007a08:	90006e89 	.word	0x90006e89
90007a0c:	2400a108 	.word	0x2400a108
90007a10:	90006df5 	.word	0x90006df5
90007a14:	90007661 	.word	0x90007661
90007a18:	90007625 	.word	0x90007625
90007a1c:	9000769d 	.word	0x9000769d
90007a20:	24000030 	.word	0x24000030
90007a24:	2400a130 	.word	0x2400a130
90007a28:	2400a134 	.word	0x2400a134
90007a2c:	2400a174 	.word	0x2400a174

90007a30 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90007a30:	2800      	cmp	r0, #0
90007a32:	d157      	bne.n	90007ae4 <BSP_TS_GetState+0xb4>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007a34:	4b2d      	ldr	r3, [pc, #180]	; (90007aec <BSP_TS_GetState+0xbc>)
90007a36:	4a2e      	ldr	r2, [pc, #184]	; (90007af0 <BSP_TS_GetState+0xc0>)
90007a38:	681b      	ldr	r3, [r3, #0]
90007a3a:	6810      	ldr	r0, [r2, #0]
90007a3c:	691b      	ldr	r3, [r3, #16]
{
90007a3e:	b5f0      	push	{r4, r5, r6, r7, lr}
90007a40:	b085      	sub	sp, #20
90007a42:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90007a44:	a901      	add	r1, sp, #4
90007a46:	4798      	blx	r3
90007a48:	2800      	cmp	r0, #0
90007a4a:	db41      	blt.n	90007ad0 <BSP_TS_GetState+0xa0>
    else if(state.TouchDetected != 0U)
90007a4c:	9d01      	ldr	r5, [sp, #4]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007a4e:	4b29      	ldr	r3, [pc, #164]	; (90007af4 <BSP_TS_GetState+0xc4>)
    else if(state.TouchDetected != 0U)
90007a50:	b93d      	cbnz	r5, 90007a62 <BSP_TS_GetState+0x32>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
90007a52:	699a      	ldr	r2, [r3, #24]
  int32_t ret = BSP_ERROR_NONE;
90007a54:	4628      	mov	r0, r5
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007a56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
      TS_State->TouchDetected = 0U;
90007a58:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007a5a:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90007a5e:	b005      	add	sp, #20
90007a60:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007a62:	6898      	ldr	r0, [r3, #8]
90007a64:	0702      	lsls	r2, r0, #28
      y_oriented = state.TouchY;
90007a66:	e9dd c702 	ldrd	ip, r7, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90007a6a:	d435      	bmi.n	90007ad8 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90007a6c:	4639      	mov	r1, r7
      x_oriented = state.TouchX;
90007a6e:	4662      	mov	r2, ip
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007a70:	691e      	ldr	r6, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90007a72:	f010 0f02 	tst.w	r0, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90007a76:	bf1c      	itt	ne
90007a78:	f106 32ff 	addne.w	r2, r6, #4294967295
90007a7c:	eba2 020c 	subne.w	r2, r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90007a80:	f010 0f04 	tst.w	r0, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90007a84:	6958      	ldr	r0, [r3, #20]
90007a86:	bf18      	it	ne
90007a88:	1bc1      	subne	r1, r0, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007a8a:	681f      	ldr	r7, [r3, #0]
90007a8c:	fb07 f202 	mul.w	r2, r7, r2
90007a90:	fbb2 f2f6 	udiv	r2, r2, r6
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007a94:	685e      	ldr	r6, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90007a96:	6025      	str	r5, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007a98:	fb06 f101 	mul.w	r1, r6, r1
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90007a9c:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90007a9e:	6add      	ldr	r5, [r3, #44]	; 0x2c
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007aa0:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90007aa2:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007aa4:	fbb1 f1f0 	udiv	r1, r1, r0
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90007aa8:	bf8c      	ite	hi
90007aaa:	1b90      	subhi	r0, r2, r6
90007aac:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007aae:	42a9      	cmp	r1, r5
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90007ab0:	60a1      	str	r1, [r4, #8]
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90007ab2:	bf8c      	ite	hi
90007ab4:	1b4f      	subhi	r7, r1, r5
90007ab6:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007ab8:	42b8      	cmp	r0, r7
90007aba:	bf38      	it	cc
90007abc:	4638      	movcc	r0, r7
90007abe:	68df      	ldr	r7, [r3, #12]
90007ac0:	4287      	cmp	r7, r0
  int32_t ret = BSP_ERROR_NONE;
90007ac2:	f04f 0000 	mov.w	r0, #0
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90007ac6:	d20a      	bcs.n	90007ade <BSP_TS_GetState+0xae>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90007ac8:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90007aca:	62d9      	str	r1, [r3, #44]	; 0x2c
}
90007acc:	b005      	add	sp, #20
90007ace:	bdf0      	pop	{r4, r5, r6, r7, pc}
      ret = BSP_ERROR_COMPONENT_FAILURE;
90007ad0:	f06f 0004 	mvn.w	r0, #4
}
90007ad4:	b005      	add	sp, #20
90007ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        y_oriented = state.TouchX;
90007ad8:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90007ada:	463a      	mov	r2, r7
90007adc:	e7c8      	b.n	90007a70 <BSP_TS_GetState+0x40>
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90007ade:	e9c4 6501 	strd	r6, r5, [r4, #4]
90007ae2:	e7bc      	b.n	90007a5e <BSP_TS_GetState+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
90007ae4:	f06f 0001 	mvn.w	r0, #1
}
90007ae8:	4770      	bx	lr
90007aea:	bf00      	nop
90007aec:	2400a174 	.word	0x2400a174
90007af0:	2400a130 	.word	0x2400a130
90007af4:	2400a134 	.word	0x2400a134

90007af8 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90007af8:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007afa:	4c19      	ldr	r4, [pc, #100]	; (90007b60 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90007afc:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90007afe:	4b19      	ldr	r3, [pc, #100]	; (90007b64 <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007b00:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90007b04:	4818      	ldr	r0, [pc, #96]	; (90007b68 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90007b06:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
90007b0a:	f8c4 1088 	str.w	r1, [r4, #136]	; 0x88
  RCC->CR |= RCC_CR_HSION;
90007b0e:	6819      	ldr	r1, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007b10:	4c16      	ldr	r4, [pc, #88]	; (90007b6c <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90007b12:	f041 0101 	orr.w	r1, r1, #1
90007b16:	6019      	str	r1, [r3, #0]
  RCC->CFGR = 0x00000000;
90007b18:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90007b1a:	6819      	ldr	r1, [r3, #0]
90007b1c:	4008      	ands	r0, r1
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007b1e:	4914      	ldr	r1, [pc, #80]	; (90007b70 <SystemInit+0x78>)
  RCC->CR &= 0xEAF6ED7FU;
90007b20:	6018      	str	r0, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90007b22:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90007b24:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90007b26:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90007b28:	629a      	str	r2, [r3, #40]	; 0x28
  RCC->PLLCFGR = 0x00000000;
90007b2a:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC->PLL1DIVR = 0x00000000;
90007b2c:	631a      	str	r2, [r3, #48]	; 0x30
  RCC->PLL1FRACR = 0x00000000;
90007b2e:	635a      	str	r2, [r3, #52]	; 0x34
  RCC->PLL2DIVR = 0x00000000;
90007b30:	639a      	str	r2, [r3, #56]	; 0x38
  RCC->PLL2FRACR = 0x00000000;
90007b32:	63da      	str	r2, [r3, #60]	; 0x3c
  RCC->PLL3DIVR = 0x00000000;
90007b34:	641a      	str	r2, [r3, #64]	; 0x40
  RCC->PLL3FRACR = 0x00000000;
90007b36:	645a      	str	r2, [r3, #68]	; 0x44
  RCC->CR &= 0xFFFBFFFFU;
90007b38:	6818      	ldr	r0, [r3, #0]
90007b3a:	f420 2080 	bic.w	r0, r0, #262144	; 0x40000
90007b3e:	6018      	str	r0, [r3, #0]
  RCC->CIER = 0x00000000;
90007b40:	661a      	str	r2, [r3, #96]	; 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90007b42:	6823      	ldr	r3, [r4, #0]
90007b44:	4019      	ands	r1, r3
90007b46:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
90007b4a:	d203      	bcs.n	90007b54 <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90007b4c:	4b09      	ldr	r3, [pc, #36]	; (90007b74 <SystemInit+0x7c>)
90007b4e:	2201      	movs	r2, #1
90007b50:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007b54:	4a08      	ldr	r2, [pc, #32]	; (90007b78 <SystemInit+0x80>)
90007b56:	4b02      	ldr	r3, [pc, #8]	; (90007b60 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90007b58:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90007b5c:	609a      	str	r2, [r3, #8]
}
90007b5e:	4770      	bx	lr
90007b60:	e000ed00 	.word	0xe000ed00
90007b64:	58024400 	.word	0x58024400
90007b68:	eaf6ed7f 	.word	0xeaf6ed7f
90007b6c:	5c001000 	.word	0x5c001000
90007b70:	ffff0000 	.word	0xffff0000
90007b74:	51008000 	.word	0x51008000
90007b78:	90000000 	.word	0x90000000

90007b7c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90007b7c:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007b7e:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007b80:	4c12      	ldr	r4, [pc, #72]	; (90007bcc <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90007b82:	f000 f843 	bl	90007c0c <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007b86:	f003 fc65 	bl	9000b454 <HAL_RCC_GetSysClockFreq>
90007b8a:	4b11      	ldr	r3, [pc, #68]	; (90007bd0 <HAL_Init+0x54>)
90007b8c:	4911      	ldr	r1, [pc, #68]	; (90007bd4 <HAL_Init+0x58>)
90007b8e:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007b90:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007b92:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007b96:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007b9a:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007b9c:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007b9e:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90007ba2:	490d      	ldr	r1, [pc, #52]	; (90007bd8 <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007ba4:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90007ba8:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007baa:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90007bae:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007bb0:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90007bb2:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90007bb4:	f7fb fd56 	bl	90003664 <HAL_InitTick>
90007bb8:	b110      	cbz	r0, 90007bc0 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90007bba:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90007bbc:	4620      	mov	r0, r4
90007bbe:	bd10      	pop	{r4, pc}
90007bc0:	4604      	mov	r4, r0
  HAL_MspInit();
90007bc2:	f7fb fb0d 	bl	900031e0 <HAL_MspInit>
}
90007bc6:	4620      	mov	r0, r4
90007bc8:	bd10      	pop	{r4, pc}
90007bca:	bf00      	nop
90007bcc:	24000064 	.word	0x24000064
90007bd0:	58024400 	.word	0x58024400
90007bd4:	90029ec4 	.word	0x90029ec4
90007bd8:	24000060 	.word	0x24000060

90007bdc <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90007bdc:	4a03      	ldr	r2, [pc, #12]	; (90007bec <HAL_IncTick+0x10>)
90007bde:	4b04      	ldr	r3, [pc, #16]	; (90007bf0 <HAL_IncTick+0x14>)
90007be0:	6811      	ldr	r1, [r2, #0]
90007be2:	781b      	ldrb	r3, [r3, #0]
90007be4:	440b      	add	r3, r1
90007be6:	6013      	str	r3, [r2, #0]
}
90007be8:	4770      	bx	lr
90007bea:	bf00      	nop
90007bec:	2400a178 	.word	0x2400a178
90007bf0:	24000068 	.word	0x24000068

90007bf4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90007bf4:	4b01      	ldr	r3, [pc, #4]	; (90007bfc <HAL_GetTick+0x8>)
90007bf6:	6818      	ldr	r0, [r3, #0]
}
90007bf8:	4770      	bx	lr
90007bfa:	bf00      	nop
90007bfc:	2400a178 	.word	0x2400a178

90007c00 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90007c00:	4b01      	ldr	r3, [pc, #4]	; (90007c08 <HAL_GetREVID+0x8>)
90007c02:	6818      	ldr	r0, [r3, #0]
}
90007c04:	0c00      	lsrs	r0, r0, #16
90007c06:	4770      	bx	lr
90007c08:	5c001000 	.word	0x5c001000

90007c0c <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007c0c:	4906      	ldr	r1, [pc, #24]	; (90007c28 <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007c0e:	f64f 0cff 	movw	ip, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007c12:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90007c14:	4b05      	ldr	r3, [pc, #20]	; (90007c2c <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90007c16:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90007c18:	f400 60e0 	and.w	r0, r0, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90007c1c:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90007c20:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90007c22:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90007c24:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90007c26:	4770      	bx	lr
90007c28:	e000ed00 	.word	0xe000ed00
90007c2c:	05fa0000 	.word	0x05fa0000

90007c30 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90007c30:	4b1b      	ldr	r3, [pc, #108]	; (90007ca0 <HAL_NVIC_SetPriority+0x70>)
90007c32:	68db      	ldr	r3, [r3, #12]
90007c34:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90007c38:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007c3a:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007c3e:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90007c42:	f1be 0f04 	cmp.w	lr, #4
90007c46:	bf28      	it	cs
90007c48:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007c4c:	f1bc 0f06 	cmp.w	ip, #6
90007c50:	d91a      	bls.n	90007c88 <HAL_NVIC_SetPriority+0x58>
90007c52:	3b03      	subs	r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90007c54:	f04f 3cff 	mov.w	ip, #4294967295
90007c58:	fa0c fc03 	lsl.w	ip, ip, r3
90007c5c:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007c60:	f04f 3cff 	mov.w	ip, #4294967295
  if ((int32_t)(IRQn) >= 0)
90007c64:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90007c66:	fa0c fc0e 	lsl.w	ip, ip, lr
90007c6a:	ea21 010c 	bic.w	r1, r1, ip
90007c6e:	fa01 f103 	lsl.w	r1, r1, r3
90007c72:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
90007c76:	db0a      	blt.n	90007c8e <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007c78:	0109      	lsls	r1, r1, #4
90007c7a:	4b0a      	ldr	r3, [pc, #40]	; (90007ca4 <HAL_NVIC_SetPriority+0x74>)
90007c7c:	b2c9      	uxtb	r1, r1
90007c7e:	4403      	add	r3, r0
90007c80:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90007c84:	f85d fb04 	ldr.w	pc, [sp], #4
90007c88:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90007c8a:	4613      	mov	r3, r2
90007c8c:	e7e8      	b.n	90007c60 <HAL_NVIC_SetPriority+0x30>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90007c8e:	f000 000f 	and.w	r0, r0, #15
90007c92:	0109      	lsls	r1, r1, #4
90007c94:	4b04      	ldr	r3, [pc, #16]	; (90007ca8 <HAL_NVIC_SetPriority+0x78>)
90007c96:	b2c9      	uxtb	r1, r1
90007c98:	4403      	add	r3, r0
90007c9a:	7619      	strb	r1, [r3, #24]
90007c9c:	f85d fb04 	ldr.w	pc, [sp], #4
90007ca0:	e000ed00 	.word	0xe000ed00
90007ca4:	e000e100 	.word	0xe000e100
90007ca8:	e000ecfc 	.word	0xe000ecfc

90007cac <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007cac:	2800      	cmp	r0, #0
90007cae:	db07      	blt.n	90007cc0 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007cb0:	2301      	movs	r3, #1
90007cb2:	f000 011f 	and.w	r1, r0, #31
90007cb6:	4a03      	ldr	r2, [pc, #12]	; (90007cc4 <HAL_NVIC_EnableIRQ+0x18>)
90007cb8:	0940      	lsrs	r0, r0, #5
90007cba:	408b      	lsls	r3, r1
90007cbc:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90007cc0:	4770      	bx	lr
90007cc2:	bf00      	nop
90007cc4:	e000e100 	.word	0xe000e100

90007cc8 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90007cc8:	2800      	cmp	r0, #0
90007cca:	db0c      	blt.n	90007ce6 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90007ccc:	0943      	lsrs	r3, r0, #5
90007cce:	2201      	movs	r2, #1
90007cd0:	f000 001f 	and.w	r0, r0, #31
90007cd4:	4904      	ldr	r1, [pc, #16]	; (90007ce8 <HAL_NVIC_DisableIRQ+0x20>)
90007cd6:	3320      	adds	r3, #32
90007cd8:	4082      	lsls	r2, r0
90007cda:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90007cde:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007ce2:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90007ce6:	4770      	bx	lr
90007ce8:	e000e100 	.word	0xe000e100

90007cec <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90007cec:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007cf0:	4b04      	ldr	r3, [pc, #16]	; (90007d04 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90007cf2:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90007cf4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007cf6:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
90007cfa:	625a      	str	r2, [r3, #36]	; 0x24
  MPU->CTRL = 0;
90007cfc:	f8c3 1094 	str.w	r1, [r3, #148]	; 0x94
}
90007d00:	4770      	bx	lr
90007d02:	bf00      	nop
90007d04:	e000ed00 	.word	0xe000ed00

90007d08 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90007d08:	4b06      	ldr	r3, [pc, #24]	; (90007d24 <HAL_MPU_Enable+0x1c>)
90007d0a:	f040 0001 	orr.w	r0, r0, #1
90007d0e:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90007d12:	6a5a      	ldr	r2, [r3, #36]	; 0x24
90007d14:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
90007d18:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90007d1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90007d1e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90007d22:	4770      	bx	lr
90007d24:	e000ed00 	.word	0xe000ed00

90007d28 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90007d28:	4a17      	ldr	r2, [pc, #92]	; (90007d88 <HAL_MPU_ConfigRegion+0x60>)
90007d2a:	7843      	ldrb	r3, [r0, #1]
90007d2c:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
90007d30:	7801      	ldrb	r1, [r0, #0]
90007d32:	b321      	cbz	r1, 90007d7e <HAL_MPU_ConfigRegion+0x56>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
90007d34:	6843      	ldr	r3, [r0, #4]
{
90007d36:	b500      	push	{lr}
    MPU->RBAR = MPU_Init->BaseAddress;
90007d38:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007d3c:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007d3e:	f890 c00c 	ldrb.w	ip, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90007d42:	061b      	lsls	r3, r3, #24
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90007d44:	f890 e00f 	ldrb.w	lr, [r0, #15]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007d48:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90007d4c:	f890 c00a 	ldrb.w	ip, [r0, #10]
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007d50:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90007d52:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007d54:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90007d58:	f890 c00d 	ldrb.w	ip, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007d5c:	ea43 438c 	orr.w	r3, r3, ip, lsl #18
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90007d60:	f890 c009 	ldrb.w	ip, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90007d64:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
90007d68:	7a01      	ldrb	r1, [r0, #8]
90007d6a:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
90007d6e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90007d72:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90007d76:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
90007d7a:	f85d fb04 	ldr.w	pc, [sp], #4
    MPU->RBAR = 0x00;
90007d7e:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
90007d82:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
90007d86:	4770      	bx	lr
90007d88:	e000ed00 	.word	0xe000ed00

90007d8c <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90007d8c:	2800      	cmp	r0, #0
90007d8e:	d036      	beq.n	90007dfe <HAL_CRC_Init+0x72>
{
90007d90:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90007d92:	7f43      	ldrb	r3, [r0, #29]
90007d94:	4604      	mov	r4, r0
90007d96:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007d9a:	b363      	cbz	r3, 90007df6 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007d9c:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007d9e:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
90007da0:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
90007da2:	b9f3      	cbnz	r3, 90007de2 <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007da4:	6823      	ldr	r3, [r4, #0]
90007da6:	4a17      	ldr	r2, [pc, #92]	; (90007e04 <HAL_CRC_Init+0x78>)
90007da8:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007daa:	689a      	ldr	r2, [r3, #8]
90007dac:	f022 0218 	bic.w	r2, r2, #24
90007db0:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
90007db2:	7962      	ldrb	r2, [r4, #5]
90007db4:	b18a      	cbz	r2, 90007dda <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007db6:	6922      	ldr	r2, [r4, #16]
90007db8:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007dba:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007dbc:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007dc0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90007dc4:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007dc6:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007dc8:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007dca:	689a      	ldr	r2, [r3, #8]
90007dcc:	f022 0280 	bic.w	r2, r2, #128	; 0x80
90007dd0:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
90007dd2:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007dd4:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007dd6:	7761      	strb	r1, [r4, #29]
}
90007dd8:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007dda:	f04f 32ff 	mov.w	r2, #4294967295
90007dde:	611a      	str	r2, [r3, #16]
90007de0:	e7eb      	b.n	90007dba <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
90007de2:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007de6:	4620      	mov	r0, r4
90007de8:	f000 f80e 	bl	90007e08 <HAL_CRCEx_Polynomial_Set>
90007dec:	b908      	cbnz	r0, 90007df2 <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007dee:	6823      	ldr	r3, [r4, #0]
90007df0:	e7df      	b.n	90007db2 <HAL_CRC_Init+0x26>
    return HAL_ERROR;
90007df2:	2001      	movs	r0, #1
}
90007df4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007df6:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007df8:	f7fb fa0c 	bl	90003214 <HAL_CRC_MspInit>
90007dfc:	e7ce      	b.n	90007d9c <HAL_CRC_Init+0x10>
    return HAL_ERROR;
90007dfe:	2001      	movs	r0, #1
}
90007e00:	4770      	bx	lr
90007e02:	bf00      	nop
90007e04:	04c11db7 	.word	0x04c11db7

90007e08 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */ 
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007e08:	07cb      	lsls	r3, r1, #31
90007e0a:	d51a      	bpl.n	90007e42 <HAL_CRCEx_Polynomial_Set+0x3a>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007e0c:	231e      	movs	r3, #30
{
90007e0e:	b410      	push	{r4}
90007e10:	e001      	b.n	90007e16 <HAL_CRCEx_Polynomial_Set+0xe>
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
90007e12:	3b01      	subs	r3, #1
90007e14:	d317      	bcc.n	90007e46 <HAL_CRCEx_Polynomial_Set+0x3e>
90007e16:	fa21 fc03 	lsr.w	ip, r1, r3
90007e1a:	f01c 0f01 	tst.w	ip, #1
90007e1e:	d0f8      	beq.n	90007e12 <HAL_CRCEx_Polynomial_Set+0xa>
    {
    }

    switch (PolyLength)
90007e20:	2a18      	cmp	r2, #24
90007e22:	d811      	bhi.n	90007e48 <HAL_CRCEx_Polynomial_Set+0x40>
90007e24:	e8df f002 	tbb	[pc, r2]
90007e28:	10101016 	.word	0x10101016
90007e2c:	10101010 	.word	0x10101010
90007e30:	10101024 	.word	0x10101024
90007e34:	10101010 	.word	0x10101010
90007e38:	10101021 	.word	0x10101021
90007e3c:	10101010 	.word	0x10101010
90007e40:	14          	.byte	0x14
90007e41:	00          	.byte	0x00
    status =  HAL_ERROR;
90007e42:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
90007e44:	4770      	bx	lr
    switch (PolyLength)
90007e46:	b12a      	cbz	r2, 90007e54 <HAL_CRCEx_Polynomial_Set+0x4c>
        status =  HAL_ERROR;
90007e48:	2001      	movs	r0, #1
}
90007e4a:	f85d 4b04 	ldr.w	r4, [sp], #4
90007e4e:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
90007e50:	2b06      	cmp	r3, #6
90007e52:	d8f9      	bhi.n	90007e48 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
90007e54:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007e56:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
90007e58:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
90007e5a:	68a3      	ldr	r3, [r4, #8]
90007e5c:	f023 0318 	bic.w	r3, r3, #24
90007e60:	4313      	orrs	r3, r2
90007e62:	60a3      	str	r3, [r4, #8]
}
90007e64:	f85d 4b04 	ldr.w	r4, [sp], #4
90007e68:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
90007e6a:	2b07      	cmp	r3, #7
90007e6c:	d9f2      	bls.n	90007e54 <HAL_CRCEx_Polynomial_Set+0x4c>
90007e6e:	e7eb      	b.n	90007e48 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
90007e70:	2b0f      	cmp	r3, #15
90007e72:	d9ef      	bls.n	90007e54 <HAL_CRCEx_Polynomial_Set+0x4c>
90007e74:	e7e8      	b.n	90007e48 <HAL_CRCEx_Polynomial_Set+0x40>
90007e76:	bf00      	nop

90007e78 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
90007e78:	2800      	cmp	r0, #0
90007e7a:	d035      	beq.n	90007ee8 <HAL_DMA2D_Init+0x70>
{
90007e7c:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
90007e7e:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
90007e82:	4604      	mov	r4, r0
90007e84:	f003 02ff 	and.w	r2, r3, #255	; 0xff
90007e88:	b34b      	cbz	r3, 90007ede <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007e8a:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007e8c:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007e8e:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90007e90:	f884 0061 	strb.w	r0, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007e94:	69e1      	ldr	r1, [r4, #28]
90007e96:	681d      	ldr	r5, [r3, #0]
90007e98:	4814      	ldr	r0, [pc, #80]	; (90007eec <HAL_DMA2D_Init+0x74>)
90007e9a:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007e9c:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007e9e:	4028      	ands	r0, r5
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007ea0:	68e5      	ldr	r5, [r4, #12]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007ea2:	4301      	orrs	r1, r0
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007ea4:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007ea6:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007ea8:	4302      	orrs	r2, r0
90007eaa:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007eac:	4810      	ldr	r0, [pc, #64]	; (90007ef0 <HAL_DMA2D_Init+0x78>)
90007eae:	4008      	ands	r0, r1
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007eb0:	4910      	ldr	r1, [pc, #64]	; (90007ef4 <HAL_DMA2D_Init+0x7c>)
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007eb2:	4302      	orrs	r2, r0
90007eb4:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007eb6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
90007eb8:	4011      	ands	r1, r2
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007eba:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007ebe:	4329      	orrs	r1, r5
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007ec0:	0552      	lsls	r2, r2, #21
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007ec2:	6419      	str	r1, [r3, #64]	; 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007ec4:	6b59      	ldr	r1, [r3, #52]	; 0x34
90007ec6:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007eca:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007ecc:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
90007ed0:	430a      	orrs	r2, r1
90007ed2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007ed4:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007ed6:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007ed8:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
90007edc:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
90007ede:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    HAL_DMA2D_MspInit(hdma2d);
90007ee2:	f7fb f9af 	bl	90003244 <HAL_DMA2D_MspInit>
90007ee6:	e7d0      	b.n	90007e8a <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007ee8:	2001      	movs	r0, #1
}
90007eea:	4770      	bx	lr
90007eec:	fff8ffbf 	.word	0xfff8ffbf
90007ef0:	fffffef8 	.word	0xfffffef8
90007ef4:	ffff0000 	.word	0xffff0000

90007ef8 <HAL_DMA2D_LineEventCallback>:
90007ef8:	4770      	bx	lr
90007efa:	bf00      	nop

90007efc <HAL_DMA2D_CLUTLoadingCpltCallback>:
90007efc:	4770      	bx	lr
90007efe:	bf00      	nop

90007f00 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007f00:	6803      	ldr	r3, [r0, #0]
{
90007f02:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007f04:	685d      	ldr	r5, [r3, #4]
{
90007f06:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007f08:	681e      	ldr	r6, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007f0a:	07ea      	lsls	r2, r5, #31
90007f0c:	d501      	bpl.n	90007f12 <HAL_DMA2D_IRQHandler+0x12>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
90007f0e:	05f1      	lsls	r1, r6, #23
90007f10:	d456      	bmi.n	90007fc0 <HAL_DMA2D_IRQHandler+0xc0>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
90007f12:	06aa      	lsls	r2, r5, #26
90007f14:	d501      	bpl.n	90007f1a <HAL_DMA2D_IRQHandler+0x1a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
90007f16:	04b3      	lsls	r3, r6, #18
90007f18:	d43b      	bmi.n	90007f92 <HAL_DMA2D_IRQHandler+0x92>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007f1a:	0728      	lsls	r0, r5, #28
90007f1c:	d501      	bpl.n	90007f22 <HAL_DMA2D_IRQHandler+0x22>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007f1e:	0531      	lsls	r1, r6, #20
90007f20:	d421      	bmi.n	90007f66 <HAL_DMA2D_IRQHandler+0x66>
        hdma2d->XferErrorCallback(hdma2d);
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
90007f22:	076a      	lsls	r2, r5, #29
90007f24:	d501      	bpl.n	90007f2a <HAL_DMA2D_IRQHandler+0x2a>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
90007f26:	0573      	lsls	r3, r6, #21
90007f28:	d472      	bmi.n	90008010 <HAL_DMA2D_IRQHandler+0x110>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007f2a:	07a8      	lsls	r0, r5, #30
90007f2c:	d501      	bpl.n	90007f32 <HAL_DMA2D_IRQHandler+0x32>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
90007f2e:	05b1      	lsls	r1, r6, #22
90007f30:	d404      	bmi.n	90007f3c <HAL_DMA2D_IRQHandler+0x3c>
        hdma2d->XferCpltCallback(hdma2d);
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
90007f32:	06ea      	lsls	r2, r5, #27
90007f34:	d501      	bpl.n	90007f3a <HAL_DMA2D_IRQHandler+0x3a>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
90007f36:	04f3      	lsls	r3, r6, #19
90007f38:	d457      	bmi.n	90007fea <HAL_DMA2D_IRQHandler+0xea>
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
90007f3a:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
90007f3c:	6823      	ldr	r3, [r4, #0]
90007f3e:	681a      	ldr	r2, [r3, #0]
90007f40:	f422 7200 	bic.w	r2, r2, #512	; 0x200
90007f44:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
90007f46:	2202      	movs	r2, #2
90007f48:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007f4a:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007f4c:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007f4e:	6663      	str	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90007f50:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007f52:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007f56:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      if (hdma2d->XferCpltCallback != NULL)
90007f5a:	6a23      	ldr	r3, [r4, #32]
90007f5c:	2b00      	cmp	r3, #0
90007f5e:	d0e8      	beq.n	90007f32 <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
90007f60:	4620      	mov	r0, r4
90007f62:	4798      	blx	r3
90007f64:	e7e5      	b.n	90007f32 <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
90007f66:	6823      	ldr	r3, [r4, #0]
90007f68:	681a      	ldr	r2, [r3, #0]
90007f6a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
90007f6e:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
90007f70:	2208      	movs	r2, #8
90007f72:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007f74:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
90007f76:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007f78:	4313      	orrs	r3, r2
90007f7a:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007f7c:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007f80:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007f82:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007f84:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007f88:	2b00      	cmp	r3, #0
90007f8a:	d0ca      	beq.n	90007f22 <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
90007f8c:	4620      	mov	r0, r4
90007f8e:	4798      	blx	r3
90007f90:	e7c7      	b.n	90007f22 <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
90007f92:	6823      	ldr	r3, [r4, #0]
90007f94:	681a      	ldr	r2, [r3, #0]
90007f96:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
90007f9a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007f9c:	2220      	movs	r2, #32
90007f9e:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007fa0:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
90007fa2:	6e63      	ldr	r3, [r4, #100]	; 0x64
90007fa4:	f043 0302 	orr.w	r3, r3, #2
90007fa8:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007faa:	f884 2061 	strb.w	r2, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007fae:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007fb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
      __HAL_UNLOCK(hdma2d);
90007fb2:	f884 2060 	strb.w	r2, [r4, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007fb6:	2b00      	cmp	r3, #0
90007fb8:	d0af      	beq.n	90007f1a <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007fba:	4620      	mov	r0, r4
90007fbc:	4798      	blx	r3
90007fbe:	e7ac      	b.n	90007f1a <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007fc0:	681a      	ldr	r2, [r3, #0]
90007fc2:	f422 7280 	bic.w	r2, r2, #256	; 0x100
90007fc6:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007fc8:	6e42      	ldr	r2, [r0, #100]	; 0x64
90007fca:	f042 0201 	orr.w	r2, r2, #1
90007fce:	6642      	str	r2, [r0, #100]	; 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007fd0:	2201      	movs	r2, #1
90007fd2:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007fd4:	2304      	movs	r3, #4
90007fd6:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
90007fda:	2300      	movs	r3, #0
90007fdc:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007fe0:	6a43      	ldr	r3, [r0, #36]	; 0x24
90007fe2:	2b00      	cmp	r3, #0
90007fe4:	d095      	beq.n	90007f12 <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
90007fe6:	4798      	blx	r3
90007fe8:	e793      	b.n	90007f12 <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007fea:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007fec:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007fee:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007ff0:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007ff2:	681a      	ldr	r2, [r3, #0]
90007ff4:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
90007ff8:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007ffa:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007ffc:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007ffe:	6e63      	ldr	r3, [r4, #100]	; 0x64
      __HAL_UNLOCK(hdma2d);
90008000:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90008004:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
90008006:	f884 1061 	strb.w	r1, [r4, #97]	; 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
9000800a:	f7ff ff77 	bl	90007efc <HAL_DMA2D_CLUTLoadingCpltCallback>
}
9000800e:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008010:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008012:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90008014:	681a      	ldr	r2, [r3, #0]
90008016:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
9000801a:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
9000801c:	2204      	movs	r2, #4
9000801e:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90008020:	f7ff ff6a 	bl	90007ef8 <HAL_DMA2D_LineEventCallback>
90008024:	e781      	b.n	90007f2a <HAL_DMA2D_IRQHandler+0x2a>
90008026:	bf00      	nop

90008028 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90008028:	f890 2060 	ldrb.w	r2, [r0, #96]	; 0x60
9000802c:	2a01      	cmp	r2, #1
9000802e:	d065      	beq.n	900080fc <HAL_DMA2D_ConfigLayer+0xd4>
90008030:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008032:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008036:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008038:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
9000803c:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hdma2d);
9000803e:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
90008040:	f883 2061 	strb.w	r2, [r3, #97]	; 0x61
  __HAL_LOCK(hdma2d);
90008044:	f883 4060 	strb.w	r4, [r3, #96]	; 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
90008048:	6b82      	ldr	r2, [r0, #56]	; 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000804a:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
9000804c:	6b05      	ldr	r5, [r0, #48]	; 0x30
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
9000804e:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008050:	f1a4 0c09 	sub.w	ip, r4, #9
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
90008054:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
90008058:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000805a:	f1bc 0f01 	cmp.w	ip, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000805e:	ea42 0204 	orr.w	r2, r2, r4
90008062:	ea42 5245 	orr.w	r2, r2, r5, lsl #21
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
90008066:	d922      	bls.n	900080ae <HAL_DMA2D_ConfigLayer+0x86>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
90008068:	6b45      	ldr	r5, [r0, #52]	; 0x34
9000806a:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
9000806e:	b981      	cbnz	r1, 90008092 <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008070:	6818      	ldr	r0, [r3, #0]
90008072:	4923      	ldr	r1, [pc, #140]	; (90008100 <HAL_DMA2D_ConfigLayer+0xd8>)
90008074:	6a45      	ldr	r5, [r0, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90008076:	6a9c      	ldr	r4, [r3, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90008078:	4029      	ands	r1, r5
9000807a:	4311      	orrs	r1, r2
9000807c:	6241      	str	r1, [r0, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000807e:	6184      	str	r4, [r0, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
90008080:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008082:	2101      	movs	r1, #1

  return HAL_OK;
90008084:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
90008086:	f883 1061 	strb.w	r1, [r3, #97]	; 0x61
  __HAL_UNLOCK(hdma2d);
9000808a:	f883 2060 	strb.w	r2, [r3, #96]	; 0x60
}
9000808e:	bc70      	pop	{r4, r5, r6}
90008090:	4770      	bx	lr
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008092:	2c0b      	cmp	r4, #11
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008094:	681c      	ldr	r4, [r3, #0]
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
90008096:	d129      	bne.n	900080ec <HAL_DMA2D_ConfigLayer+0xc4>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90008098:	69e5      	ldr	r5, [r4, #28]
9000809a:	491a      	ldr	r1, [pc, #104]	; (90008104 <HAL_DMA2D_ConfigLayer+0xdc>)
9000809c:	4029      	ands	r1, r5
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
9000809e:	6c05      	ldr	r5, [r0, #64]	; 0x40
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080a0:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080a2:	ea41 4185 	orr.w	r1, r1, r5, lsl #18
900080a6:	4311      	orrs	r1, r2
900080a8:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080aa:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900080ac:	e7e8      	b.n	90008080 <HAL_DMA2D_ConfigLayer+0x58>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900080ae:	6b44      	ldr	r4, [r0, #52]	; 0x34
900080b0:	f004 447f 	and.w	r4, r4, #4278190080	; 0xff000000
900080b4:	4314      	orrs	r4, r2
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900080b6:	b961      	cbnz	r1, 900080d2 <HAL_DMA2D_ConfigLayer+0xaa>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900080b8:	6819      	ldr	r1, [r3, #0]
900080ba:	4a11      	ldr	r2, [pc, #68]	; (90008100 <HAL_DMA2D_ConfigLayer+0xd8>)
900080bc:	6a4e      	ldr	r6, [r1, #36]	; 0x24
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900080be:	6b58      	ldr	r0, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900080c0:	4032      	ands	r2, r6
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900080c2:	6a9d      	ldr	r5, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900080c4:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900080c8:	4322      	orrs	r2, r4
900080ca:	624a      	str	r2, [r1, #36]	; 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900080cc:	618d      	str	r5, [r1, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
900080ce:	6288      	str	r0, [r1, #40]	; 0x28
900080d0:	e7d6      	b.n	90008080 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080d2:	6819      	ldr	r1, [r3, #0]
900080d4:	4a0a      	ldr	r2, [pc, #40]	; (90008100 <HAL_DMA2D_ConfigLayer+0xd8>)
900080d6:	69cd      	ldr	r5, [r1, #28]
900080d8:	402a      	ands	r2, r5
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080da:	6a85      	ldr	r5, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080dc:	4322      	orrs	r2, r4
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900080de:	6b44      	ldr	r4, [r0, #52]	; 0x34
900080e0:	f024 447f 	bic.w	r4, r4, #4278190080	; 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080e4:	61ca      	str	r2, [r1, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080e6:	610d      	str	r5, [r1, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
900080e8:	620c      	str	r4, [r1, #32]
900080ea:	e7c9      	b.n	90008080 <HAL_DMA2D_ConfigLayer+0x58>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080ec:	69e5      	ldr	r5, [r4, #28]
900080ee:	4904      	ldr	r1, [pc, #16]	; (90008100 <HAL_DMA2D_ConfigLayer+0xd8>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080f0:	6a80      	ldr	r0, [r0, #40]	; 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
900080f2:	4029      	ands	r1, r5
900080f4:	4311      	orrs	r1, r2
900080f6:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
900080f8:	6120      	str	r0, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900080fa:	e7c1      	b.n	90008080 <HAL_DMA2D_ConfigLayer+0x58>
  __HAL_LOCK(hdma2d);
900080fc:	2002      	movs	r0, #2
}
900080fe:	4770      	bx	lr
90008100:	00ccfff0 	.word	0x00ccfff0
90008104:	00c0fff0 	.word	0x00c0fff0

90008108 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
90008108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000810c:	680c      	ldr	r4, [r1, #0]
{
9000810e:	b083      	sub	sp, #12
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008110:	2c00      	cmp	r4, #0
90008112:	f000 80a7 	beq.w	90008264 <HAL_GPIO_Init+0x15c>
90008116:	f04f 0c00 	mov.w	ip, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000811a:	4f8a      	ldr	r7, [pc, #552]	; (90008344 <HAL_GPIO_Init+0x23c>)
  uint32_t position = 0x00U;
9000811c:	4663      	mov	r3, ip
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000811e:	2201      	movs	r2, #1
90008120:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90008122:	ea12 0e04 	ands.w	lr, r2, r4
90008126:	f000 8096 	beq.w	90008256 <HAL_GPIO_Init+0x14e>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000812a:	684d      	ldr	r5, [r1, #4]
9000812c:	f005 0903 	and.w	r9, r5, #3
90008130:	f109 36ff 	add.w	r6, r9, #4294967295
90008134:	2e01      	cmp	r6, #1
90008136:	f240 8098 	bls.w	9000826a <HAL_GPIO_Init+0x162>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
9000813a:	f1b9 0f03 	cmp.w	r9, #3
9000813e:	f040 80d2 	bne.w	900082e6 <HAL_GPIO_Init+0x1de>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008142:	fa09 f20c 	lsl.w	r2, r9, ip
90008146:	ea6f 0802 	mvn.w	r8, r2
      temp = GPIOx->MODER;
9000814a:	6806      	ldr	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000814c:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
90008150:	ea06 0608 	and.w	r6, r6, r8
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
90008154:	ea42 0206 	orr.w	r2, r2, r6
      GPIOx->MODER = temp;
90008158:	6002      	str	r2, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
9000815a:	d07c      	beq.n	90008256 <HAL_GPIO_Init+0x14e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000815c:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
90008160:	f023 0803 	bic.w	r8, r3, #3

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008164:	f003 0903 	and.w	r9, r3, #3
90008168:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
9000816a:	f042 0202 	orr.w	r2, r2, #2
9000816e:	f108 48b0 	add.w	r8, r8, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008172:	ea4f 0989 	mov.w	r9, r9, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008176:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
9000817a:	f508 6880 	add.w	r8, r8, #1024	; 0x400
9000817e:	f8d7 20f4 	ldr.w	r2, [r7, #244]	; 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008182:	fa06 f609 	lsl.w	r6, r6, r9
        __HAL_RCC_SYSCFG_CLK_ENABLE();
90008186:	f002 0202 	and.w	r2, r2, #2
9000818a:	9201      	str	r2, [sp, #4]
9000818c:	9a01      	ldr	r2, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
9000818e:	f8d8 2008 	ldr.w	r2, [r8, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90008192:	ea22 0206 	bic.w	r2, r2, r6
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90008196:	4e6c      	ldr	r6, [pc, #432]	; (90008348 <HAL_GPIO_Init+0x240>)
90008198:	42b0      	cmp	r0, r6
9000819a:	d028      	beq.n	900081ee <HAL_GPIO_Init+0xe6>
9000819c:	f506 6680 	add.w	r6, r6, #1024	; 0x400
900081a0:	42b0      	cmp	r0, r6
900081a2:	f000 80ac 	beq.w	900082fe <HAL_GPIO_Init+0x1f6>
900081a6:	4e69      	ldr	r6, [pc, #420]	; (9000834c <HAL_GPIO_Init+0x244>)
900081a8:	42b0      	cmp	r0, r6
900081aa:	f000 80ad 	beq.w	90008308 <HAL_GPIO_Init+0x200>
900081ae:	4e68      	ldr	r6, [pc, #416]	; (90008350 <HAL_GPIO_Init+0x248>)
900081b0:	42b0      	cmp	r0, r6
900081b2:	f000 809f 	beq.w	900082f4 <HAL_GPIO_Init+0x1ec>
900081b6:	4e67      	ldr	r6, [pc, #412]	; (90008354 <HAL_GPIO_Init+0x24c>)
900081b8:	42b0      	cmp	r0, r6
900081ba:	f000 80af 	beq.w	9000831c <HAL_GPIO_Init+0x214>
900081be:	4e66      	ldr	r6, [pc, #408]	; (90008358 <HAL_GPIO_Init+0x250>)
900081c0:	42b0      	cmp	r0, r6
900081c2:	f000 80b0 	beq.w	90008326 <HAL_GPIO_Init+0x21e>
900081c6:	4e65      	ldr	r6, [pc, #404]	; (9000835c <HAL_GPIO_Init+0x254>)
900081c8:	42b0      	cmp	r0, r6
900081ca:	f000 80a2 	beq.w	90008312 <HAL_GPIO_Init+0x20a>
900081ce:	4e64      	ldr	r6, [pc, #400]	; (90008360 <HAL_GPIO_Init+0x258>)
900081d0:	42b0      	cmp	r0, r6
900081d2:	f000 80ad 	beq.w	90008330 <HAL_GPIO_Init+0x228>
900081d6:	4e63      	ldr	r6, [pc, #396]	; (90008364 <HAL_GPIO_Init+0x25c>)
900081d8:	42b0      	cmp	r0, r6
900081da:	f000 80ae 	beq.w	9000833a <HAL_GPIO_Init+0x232>
900081de:	4e62      	ldr	r6, [pc, #392]	; (90008368 <HAL_GPIO_Init+0x260>)
900081e0:	42b0      	cmp	r0, r6
900081e2:	bf0c      	ite	eq
900081e4:	2609      	moveq	r6, #9
900081e6:	260a      	movne	r6, #10
900081e8:	fa06 f609 	lsl.w	r6, r6, r9
900081ec:	4332      	orrs	r2, r6
        SYSCFG->EXTICR[position >> 2U] = temp;
900081ee:	f8c8 2008 	str.w	r2, [r8, #8]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
900081f2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900081f6:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
900081fa:	ea6f 060e 	mvn.w	r6, lr
        temp = EXTI->RTSR1;
900081fe:	6812      	ldr	r2, [r2, #0]
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90008200:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90008204:	bf0c      	ite	eq
90008206:	4032      	andeq	r2, r6
          temp |= iocurrent;
90008208:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI->FTSR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000820c:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
90008210:	f8c8 2000 	str.w	r2, [r8]
        temp = EXTI->FTSR1;
90008214:	f8d8 2004 	ldr.w	r2, [r8, #4]
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90008218:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
9000821c:	bf0c      	ite	eq
9000821e:	4032      	andeq	r2, r6
          temp |= iocurrent;
90008220:	ea4e 0202 	orrne.w	r2, lr, r2

        temp = EXTI_CurrentCPU->EMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90008224:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        EXTI->FTSR1 = temp;
90008228:	f8c8 2004 	str.w	r2, [r8, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000822c:	f8d8 2084 	ldr.w	r2, [r8, #132]	; 0x84
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90008230:	f04f 48b0 	mov.w	r8, #1476395008	; 0x58000000
        temp &= ~(iocurrent);
90008234:	bf0c      	ite	eq
90008236:	4032      	andeq	r2, r6
          temp |= iocurrent;
90008238:	ea4e 0202 	orrne.w	r2, lr, r2

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000823c:	03ed      	lsls	r5, r5, #15
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000823e:	f04f 45b0 	mov.w	r5, #1476395008	; 0x58000000
        EXTI_CurrentCPU->EMR1 = temp;
90008242:	f8c8 2084 	str.w	r2, [r8, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
90008246:	f8d8 2080 	ldr.w	r2, [r8, #128]	; 0x80
        temp &= ~(iocurrent);
9000824a:	bf54      	ite	pl
9000824c:	4032      	andpl	r2, r6
          temp |= iocurrent;
9000824e:	ea4e 0202 	orrmi.w	r2, lr, r2
        EXTI_CurrentCPU->IMR1 = temp;
90008252:	f8c5 2080 	str.w	r2, [r5, #128]	; 0x80
      }
    }

    position++;
90008256:	3301      	adds	r3, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90008258:	f10c 0c02 	add.w	ip, ip, #2
9000825c:	fa34 f203 	lsrs.w	r2, r4, r3
90008260:	f47f af5d 	bne.w	9000811e <HAL_GPIO_Init+0x16>
  }
}
90008264:	b003      	add	sp, #12
90008266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000826a:	f04f 0803 	mov.w	r8, #3
        temp = GPIOx->OSPEEDR;
9000826e:	6886      	ldr	r6, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008270:	fa08 f80c 	lsl.w	r8, r8, ip
90008274:	ea26 0a08 	bic.w	sl, r6, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
90008278:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000827a:	ea6f 0808 	mvn.w	r8, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
9000827e:	fa06 f60c 	lsl.w	r6, r6, ip
90008282:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->OSPEEDR = temp;
90008286:	6086      	str	r6, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008288:	f3c5 1600 	ubfx	r6, r5, #4, #1
        temp = GPIOx->OTYPER;
9000828c:	f8d0 a004 	ldr.w	sl, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008290:	409e      	lsls	r6, r3
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90008292:	ea2a 0202 	bic.w	r2, sl, r2
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90008296:	4332      	orrs	r2, r6
        GPIOx->OTYPER = temp;
90008298:	6042      	str	r2, [r0, #4]
      temp = GPIOx->PUPDR;
9000829a:	68c2      	ldr	r2, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000829c:	f1b9 0f02 	cmp.w	r9, #2
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900082a0:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900082a2:	ea02 0208 	and.w	r2, r2, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900082a6:	fa06 f60c 	lsl.w	r6, r6, ip
900082aa:	ea46 0602 	orr.w	r6, r6, r2
      GPIOx->PUPDR = temp;
900082ae:	fa09 f20c 	lsl.w	r2, r9, ip
900082b2:	60c6      	str	r6, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900082b4:	f47f af49 	bne.w	9000814a <HAL_GPIO_Init+0x42>
        temp = GPIOx->AFR[position >> 3U];
900082b8:	ea4f 09d3 	mov.w	r9, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900082bc:	f003 0b07 	and.w	fp, r3, #7
900082c0:	260f      	movs	r6, #15
900082c2:	eb00 0989 	add.w	r9, r0, r9, lsl #2
900082c6:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
900082ca:	f8d9 a020 	ldr.w	sl, [r9, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900082ce:	fa06 f60b 	lsl.w	r6, r6, fp
900082d2:	ea2a 0a06 	bic.w	sl, sl, r6
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900082d6:	690e      	ldr	r6, [r1, #16]
900082d8:	fa06 f60b 	lsl.w	r6, r6, fp
900082dc:	ea46 060a 	orr.w	r6, r6, sl
        GPIOx->AFR[position >> 3U] = temp;
900082e0:	f8c9 6020 	str.w	r6, [r9, #32]
900082e4:	e731      	b.n	9000814a <HAL_GPIO_Init+0x42>
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900082e6:	f04f 0803 	mov.w	r8, #3
900082ea:	fa08 f80c 	lsl.w	r8, r8, ip
900082ee:	ea6f 0808 	mvn.w	r8, r8
900082f2:	e7d2      	b.n	9000829a <HAL_GPIO_Init+0x192>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900082f4:	2603      	movs	r6, #3
900082f6:	fa06 f609 	lsl.w	r6, r6, r9
900082fa:	4332      	orrs	r2, r6
900082fc:	e777      	b.n	900081ee <HAL_GPIO_Init+0xe6>
900082fe:	2601      	movs	r6, #1
90008300:	fa06 f609 	lsl.w	r6, r6, r9
90008304:	4332      	orrs	r2, r6
90008306:	e772      	b.n	900081ee <HAL_GPIO_Init+0xe6>
90008308:	2602      	movs	r6, #2
9000830a:	fa06 f609 	lsl.w	r6, r6, r9
9000830e:	4332      	orrs	r2, r6
90008310:	e76d      	b.n	900081ee <HAL_GPIO_Init+0xe6>
90008312:	2606      	movs	r6, #6
90008314:	fa06 f609 	lsl.w	r6, r6, r9
90008318:	4332      	orrs	r2, r6
9000831a:	e768      	b.n	900081ee <HAL_GPIO_Init+0xe6>
9000831c:	2604      	movs	r6, #4
9000831e:	fa06 f609 	lsl.w	r6, r6, r9
90008322:	4332      	orrs	r2, r6
90008324:	e763      	b.n	900081ee <HAL_GPIO_Init+0xe6>
90008326:	2605      	movs	r6, #5
90008328:	fa06 f609 	lsl.w	r6, r6, r9
9000832c:	4332      	orrs	r2, r6
9000832e:	e75e      	b.n	900081ee <HAL_GPIO_Init+0xe6>
90008330:	2607      	movs	r6, #7
90008332:	fa06 f609 	lsl.w	r6, r6, r9
90008336:	4332      	orrs	r2, r6
90008338:	e759      	b.n	900081ee <HAL_GPIO_Init+0xe6>
9000833a:	2608      	movs	r6, #8
9000833c:	fa06 f609 	lsl.w	r6, r6, r9
90008340:	4332      	orrs	r2, r6
90008342:	e754      	b.n	900081ee <HAL_GPIO_Init+0xe6>
90008344:	58024400 	.word	0x58024400
90008348:	58020000 	.word	0x58020000
9000834c:	58020800 	.word	0x58020800
90008350:	58020c00 	.word	0x58020c00
90008354:	58021000 	.word	0x58021000
90008358:	58021400 	.word	0x58021400
9000835c:	58021800 	.word	0x58021800
90008360:	58021c00 	.word	0x58021c00
90008364:	58022000 	.word	0x58022000
90008368:	58022400 	.word	0x58022400

9000836c <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
9000836c:	2900      	cmp	r1, #0
9000836e:	f000 80a4 	beq.w	900084ba <HAL_GPIO_DeInit+0x14e>
  uint32_t position = 0x00U;
90008372:	2300      	movs	r3, #0
{
90008374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008378:	f8df 9168 	ldr.w	r9, [pc, #360]	; 900084e4 <HAL_GPIO_DeInit+0x178>
9000837c:	b083      	sub	sp, #12
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000837e:	f8df 8168 	ldr.w	r8, [pc, #360]	; 900084e8 <HAL_GPIO_DeInit+0x17c>
90008382:	f8df a168 	ldr.w	sl, [pc, #360]	; 900084ec <HAL_GPIO_DeInit+0x180>
90008386:	f8df b168 	ldr.w	fp, [pc, #360]	; 900084f0 <HAL_GPIO_DeInit+0x184>
    iocurrent = GPIO_Pin & (1UL << position) ;
9000838a:	f04f 0e01 	mov.w	lr, #1
9000838e:	fa0e f203 	lsl.w	r2, lr, r3
    if (iocurrent != 0x00U)
90008392:	ea12 0c01 	ands.w	ip, r2, r1
90008396:	d06b      	beq.n	90008470 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
90008398:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000839c:	f003 0403 	and.w	r4, r3, #3
900083a0:	260f      	movs	r6, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900083a2:	4540      	cmp	r0, r8
900083a4:	444d      	add	r5, r9
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083a6:	ea4f 0484 	mov.w	r4, r4, lsl #2
      tmp = SYSCFG->EXTICR[position >> 2U];
900083aa:	68af      	ldr	r7, [r5, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900083ac:	fa06 f604 	lsl.w	r6, r6, r4
900083b0:	ea07 0706 	and.w	r7, r7, r6
900083b4:	9701      	str	r7, [sp, #4]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900083b6:	d01f      	beq.n	900083f8 <HAL_GPIO_DeInit+0x8c>
900083b8:	4550      	cmp	r0, sl
900083ba:	d01a      	beq.n	900083f2 <HAL_GPIO_DeInit+0x86>
900083bc:	4558      	cmp	r0, fp
900083be:	d05e      	beq.n	9000847e <HAL_GPIO_DeInit+0x112>
900083c0:	4f43      	ldr	r7, [pc, #268]	; (900084d0 <HAL_GPIO_DeInit+0x164>)
900083c2:	42b8      	cmp	r0, r7
900083c4:	d065      	beq.n	90008492 <HAL_GPIO_DeInit+0x126>
900083c6:	4f43      	ldr	r7, [pc, #268]	; (900084d4 <HAL_GPIO_DeInit+0x168>)
900083c8:	42b8      	cmp	r0, r7
900083ca:	d067      	beq.n	9000849c <HAL_GPIO_DeInit+0x130>
900083cc:	4f42      	ldr	r7, [pc, #264]	; (900084d8 <HAL_GPIO_DeInit+0x16c>)
900083ce:	42b8      	cmp	r0, r7
900083d0:	d05a      	beq.n	90008488 <HAL_GPIO_DeInit+0x11c>
900083d2:	4f42      	ldr	r7, [pc, #264]	; (900084dc <HAL_GPIO_DeInit+0x170>)
900083d4:	42b8      	cmp	r0, r7
900083d6:	d06b      	beq.n	900084b0 <HAL_GPIO_DeInit+0x144>
900083d8:	4f41      	ldr	r7, [pc, #260]	; (900084e0 <HAL_GPIO_DeInit+0x174>)
900083da:	42b8      	cmp	r0, r7
900083dc:	d06e      	beq.n	900084bc <HAL_GPIO_DeInit+0x150>
900083de:	f8df e114 	ldr.w	lr, [pc, #276]	; 900084f4 <HAL_GPIO_DeInit+0x188>
900083e2:	4570      	cmp	r0, lr
900083e4:	d05f      	beq.n	900084a6 <HAL_GPIO_DeInit+0x13a>
900083e6:	f8df e110 	ldr.w	lr, [pc, #272]	; 900084f8 <HAL_GPIO_DeInit+0x18c>
900083ea:	4570      	cmp	r0, lr
900083ec:	d06b      	beq.n	900084c6 <HAL_GPIO_DeInit+0x15a>
900083ee:	f04f 0e0a 	mov.w	lr, #10
900083f2:	fa0e f404 	lsl.w	r4, lr, r4
900083f6:	e000      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900083f8:	2400      	movs	r4, #0
900083fa:	9f01      	ldr	r7, [sp, #4]
900083fc:	42a7      	cmp	r7, r4
900083fe:	d119      	bne.n	90008434 <HAL_GPIO_DeInit+0xc8>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90008400:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
90008404:	f8d4 7080 	ldr.w	r7, [r4, #128]	; 0x80
90008408:	ea27 070c 	bic.w	r7, r7, ip
9000840c:	f8c4 7080 	str.w	r7, [r4, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90008410:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
90008414:	ea27 070c 	bic.w	r7, r7, ip
90008418:	f8c4 7084 	str.w	r7, [r4, #132]	; 0x84

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
9000841c:	6867      	ldr	r7, [r4, #4]
9000841e:	ea27 070c 	bic.w	r7, r7, ip
90008422:	6067      	str	r7, [r4, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90008424:	6827      	ldr	r7, [r4, #0]
90008426:	ea27 070c 	bic.w	r7, r7, ip
9000842a:	6027      	str	r7, [r4, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000842c:	68ac      	ldr	r4, [r5, #8]
9000842e:	ea24 0406 	bic.w	r4, r4, r6
90008432:	60ac      	str	r4, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008434:	005d      	lsls	r5, r3, #1
90008436:	2403      	movs	r4, #3

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008438:	f003 0607 	and.w	r6, r3, #7
9000843c:	270f      	movs	r7, #15
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
9000843e:	40ac      	lsls	r4, r5
90008440:	6805      	ldr	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008442:	00b6      	lsls	r6, r6, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008444:	4325      	orrs	r5, r4
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90008446:	40b7      	lsls	r7, r6
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90008448:	6005      	str	r5, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000844a:	08dd      	lsrs	r5, r3, #3
9000844c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
90008450:	6a2e      	ldr	r6, [r5, #32]
90008452:	ea26 0607 	bic.w	r6, r6, r7
90008456:	622e      	str	r6, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90008458:	68c5      	ldr	r5, [r0, #12]
9000845a:	ea25 0504 	bic.w	r5, r5, r4
9000845e:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
90008460:	6845      	ldr	r5, [r0, #4]
90008462:	ea25 0202 	bic.w	r2, r5, r2
90008466:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90008468:	6882      	ldr	r2, [r0, #8]
9000846a:	ea22 0204 	bic.w	r2, r2, r4
9000846e:	6082      	str	r2, [r0, #8]
    }

    position++;
90008470:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
90008472:	fa31 f203 	lsrs.w	r2, r1, r3
90008476:	d188      	bne.n	9000838a <HAL_GPIO_DeInit+0x1e>
  }
}
90008478:	b003      	add	sp, #12
9000847a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000847e:	f04f 0e02 	mov.w	lr, #2
90008482:	fa0e f404 	lsl.w	r4, lr, r4
90008486:	e7b8      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
90008488:	f04f 0e05 	mov.w	lr, #5
9000848c:	fa0e f404 	lsl.w	r4, lr, r4
90008490:	e7b3      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
90008492:	f04f 0e03 	mov.w	lr, #3
90008496:	fa0e f404 	lsl.w	r4, lr, r4
9000849a:	e7ae      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
9000849c:	f04f 0e04 	mov.w	lr, #4
900084a0:	fa0e f404 	lsl.w	r4, lr, r4
900084a4:	e7a9      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900084a6:	f04f 0e08 	mov.w	lr, #8
900084aa:	fa0e f404 	lsl.w	r4, lr, r4
900084ae:	e7a4      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900084b0:	f04f 0e06 	mov.w	lr, #6
900084b4:	fa0e f404 	lsl.w	r4, lr, r4
900084b8:	e79f      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900084ba:	4770      	bx	lr
900084bc:	f04f 0e07 	mov.w	lr, #7
900084c0:	fa0e f404 	lsl.w	r4, lr, r4
900084c4:	e799      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900084c6:	f04f 0e09 	mov.w	lr, #9
900084ca:	fa0e f404 	lsl.w	r4, lr, r4
900084ce:	e794      	b.n	900083fa <HAL_GPIO_DeInit+0x8e>
900084d0:	58020c00 	.word	0x58020c00
900084d4:	58021000 	.word	0x58021000
900084d8:	58021400 	.word	0x58021400
900084dc:	58021800 	.word	0x58021800
900084e0:	58021c00 	.word	0x58021c00
900084e4:	58000400 	.word	0x58000400
900084e8:	58020000 	.word	0x58020000
900084ec:	58020400 	.word	0x58020400
900084f0:	58020800 	.word	0x58020800
900084f4:	58022000 	.word	0x58022000
900084f8:	58022400 	.word	0x58022400

900084fc <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900084fc:	6903      	ldr	r3, [r0, #16]
900084fe:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
90008500:	bf14      	ite	ne
90008502:	2001      	movne	r0, #1
90008504:	2000      	moveq	r0, #0
90008506:	4770      	bx	lr

90008508 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
90008508:	b902      	cbnz	r2, 9000850c <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
9000850a:	0409      	lsls	r1, r1, #16
9000850c:	6181      	str	r1, [r0, #24]
  }
}
9000850e:	4770      	bx	lr

90008510 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
90008510:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
90008512:	ea01 0203 	and.w	r2, r1, r3
90008516:	ea21 0103 	bic.w	r1, r1, r3
9000851a:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
9000851e:	6181      	str	r1, [r0, #24]
}
90008520:	4770      	bx	lr
90008522:	bf00      	nop

90008524 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
90008524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008528:	6803      	ldr	r3, [r0, #0]
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
9000852a:	f04f 0820 	mov.w	r8, #32
{
9000852e:	4605      	mov	r5, r0
90008530:	460e      	mov	r6, r1
90008532:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90008534:	6998      	ldr	r0, [r3, #24]
90008536:	f010 0902 	ands.w	r9, r0, #2
9000853a:	f040 809e 	bne.w	9000867a <I2C_WaitOnTXISFlagUntilTimeout+0x156>
  uint32_t itflag   = hi2c->Instance->ISR;
9000853e:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90008540:	f014 0410 	ands.w	r4, r4, #16
90008544:	d068      	beq.n	90008618 <I2C_WaitOnTXISFlagUntilTimeout+0xf4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90008546:	2210      	movs	r2, #16
  uint32_t tickstart = Tickstart;
90008548:	463c      	mov	r4, r7
  HAL_StatusTypeDef status = HAL_OK;
9000854a:	46ca      	mov	sl, r9
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
9000854c:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000854e:	1c71      	adds	r1, r6, #1
90008550:	699a      	ldr	r2, [r3, #24]
90008552:	d163      	bne.n	9000861c <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90008554:	0690      	lsls	r0, r2, #26
90008556:	f100 8093 	bmi.w	90008680 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
9000855a:	f1ba 0f00 	cmp.w	sl, #0
9000855e:	d104      	bne.n	9000856a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
90008560:	699c      	ldr	r4, [r3, #24]
90008562:	06a1      	lsls	r1, r4, #26
90008564:	d5fc      	bpl.n	90008560 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008566:	f8c3 801c 	str.w	r8, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
9000856a:	f049 0404 	orr.w	r4, r9, #4

    status = HAL_ERROR;
9000856e:	2101      	movs	r1, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90008570:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90008572:	05d0      	lsls	r0, r2, #23
90008574:	d530      	bpl.n	900085d8 <I2C_WaitOnTXISFlagUntilTimeout+0xb4>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008576:	f44f 7180 	mov.w	r1, #256	; 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
9000857a:	0556      	lsls	r6, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
9000857c:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90008580:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008582:	d504      	bpl.n	9000858e <I2C_WaitOnTXISFlagUntilTimeout+0x6a>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90008584:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90008588:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
9000858c:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000858e:	0591      	lsls	r1, r2, #22
90008590:	d504      	bpl.n	9000859c <I2C_WaitOnTXISFlagUntilTimeout+0x78>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008592:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008596:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
9000859a:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000859c:	699a      	ldr	r2, [r3, #24]
9000859e:	0790      	lsls	r0, r2, #30
900085a0:	d501      	bpl.n	900085a6 <I2C_WaitOnTXISFlagUntilTimeout+0x82>
    hi2c->Instance->TXDR = 0x00U;
900085a2:	2200      	movs	r2, #0
900085a4:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
900085a6:	699a      	ldr	r2, [r3, #24]
900085a8:	07d1      	lsls	r1, r2, #31
900085aa:	d403      	bmi.n	900085b4 <I2C_WaitOnTXISFlagUntilTimeout+0x90>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
900085ac:	699a      	ldr	r2, [r3, #24]
900085ae:	f042 0201 	orr.w	r2, r2, #1
900085b2:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
900085b4:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
    hi2c->Mode = HAL_I2C_MODE_NONE;
900085b6:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
900085b8:	4834      	ldr	r0, [pc, #208]	; (9000868c <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->State = HAL_I2C_STATE_READY;
900085ba:	2620      	movs	r6, #32
    I2C_RESET_CR2(hi2c);
900085bc:	4002      	ands	r2, r0
      return HAL_ERROR;
900085be:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
900085c0:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
900085c2:	6c6b      	ldr	r3, [r5, #68]	; 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900085c4:	f885 1040 	strb.w	r1, [r5, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
900085c8:	4323      	orrs	r3, r4
900085ca:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
900085cc:	f885 6041 	strb.w	r6, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
900085d0:	f885 1042 	strb.w	r1, [r5, #66]	; 0x42
}
900085d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900085d8:	0550      	lsls	r0, r2, #21
900085da:	d4d3      	bmi.n	90008584 <I2C_WaitOnTXISFlagUntilTimeout+0x60>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900085dc:	0592      	lsls	r2, r2, #22
900085de:	d4d8      	bmi.n	90008592 <I2C_WaitOnTXISFlagUntilTimeout+0x6e>
  if (status != HAL_OK)
900085e0:	2900      	cmp	r1, #0
900085e2:	d1db      	bne.n	9000859c <I2C_WaitOnTXISFlagUntilTimeout+0x78>
    if (Timeout != HAL_MAX_DELAY)
900085e4:	1c72      	adds	r2, r6, #1
900085e6:	d0a5      	beq.n	90008534 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900085e8:	f7ff fb04 	bl	90007bf4 <HAL_GetTick>
900085ec:	1bc0      	subs	r0, r0, r7
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900085ee:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
900085f0:	42b0      	cmp	r0, r6
900085f2:	d801      	bhi.n	900085f8 <I2C_WaitOnTXISFlagUntilTimeout+0xd4>
900085f4:	2e00      	cmp	r6, #0
900085f6:	d19d      	bne.n	90008534 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
900085f8:	699a      	ldr	r2, [r3, #24]
900085fa:	f012 0202 	ands.w	r2, r2, #2
900085fe:	d199      	bne.n	90008534 <I2C_WaitOnTXISFlagUntilTimeout+0x10>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008600:	6c6b      	ldr	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008602:	2120      	movs	r1, #32
          __HAL_UNLOCK(hi2c);
90008604:	2001      	movs	r0, #1
90008606:	f885 2040 	strb.w	r2, [r5, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000860a:	430b      	orrs	r3, r1
9000860c:	646b      	str	r3, [r5, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
9000860e:	f885 1041 	strb.w	r1, [r5, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008612:	f885 2042 	strb.w	r2, [r5, #66]	; 0x42
          return HAL_ERROR;
90008616:	e7dd      	b.n	900085d4 <I2C_WaitOnTXISFlagUntilTimeout+0xb0>
  HAL_StatusTypeDef status = HAL_OK;
90008618:	4621      	mov	r1, r4
9000861a:	e7a9      	b.n	90008570 <I2C_WaitOnTXISFlagUntilTimeout+0x4c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000861c:	0692      	lsls	r2, r2, #26
9000861e:	d42f      	bmi.n	90008680 <I2C_WaitOnTXISFlagUntilTimeout+0x15c>
90008620:	f1ba 0f00 	cmp.w	sl, #0
90008624:	d1a1      	bne.n	9000856a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008626:	f7ff fae5 	bl	90007bf4 <HAL_GetTick>
9000862a:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000862c:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
9000862e:	4286      	cmp	r6, r0
90008630:	d301      	bcc.n	90008636 <I2C_WaitOnTXISFlagUntilTimeout+0x112>
90008632:	2e00      	cmp	r6, #0
90008634:	d18b      	bne.n	9000854e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008636:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90008638:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000863c:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
9000863e:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90008640:	0409      	lsls	r1, r1, #16
90008642:	d50b      	bpl.n	9000865c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              (tmp1 != I2C_CR2_STOP) && \
90008644:	0441      	lsls	r1, r0, #17
90008646:	d409      	bmi.n	9000865c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
90008648:	2a20      	cmp	r2, #32
9000864a:	d007      	beq.n	9000865c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
9000864c:	685a      	ldr	r2, [r3, #4]
9000864e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
90008652:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90008654:	f7ff face 	bl	90007bf4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008658:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
9000865a:	4604      	mov	r4, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000865c:	699a      	ldr	r2, [r3, #24]
9000865e:	0690      	lsls	r0, r2, #26
90008660:	f53f af75 	bmi.w	9000854e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90008664:	f7ff fac6 	bl	90007bf4 <HAL_GetTick>
90008668:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000866a:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
9000866c:	2819      	cmp	r0, #25
9000866e:	d9f5      	bls.n	9000865c <I2C_WaitOnTXISFlagUntilTimeout+0x138>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90008670:	f04f 0920 	mov.w	r9, #32
              status = HAL_ERROR;
90008674:	f04f 0a01 	mov.w	sl, #1
90008678:	e769      	b.n	9000854e <I2C_WaitOnTXISFlagUntilTimeout+0x2a>
  return HAL_OK;
9000867a:	2000      	movs	r0, #0
}
9000867c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (status == HAL_OK)
90008680:	f1ba 0f00 	cmp.w	sl, #0
90008684:	f43f af6f 	beq.w	90008566 <I2C_WaitOnTXISFlagUntilTimeout+0x42>
90008688:	e76f      	b.n	9000856a <I2C_WaitOnTXISFlagUntilTimeout+0x46>
9000868a:	bf00      	nop
9000868c:	fe00e800 	.word	0xfe00e800

90008690 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
90008690:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008694:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90008696:	6802      	ldr	r2, [r0, #0]
{
90008698:	460f      	mov	r7, r1
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000869a:	6991      	ldr	r1, [r2, #24]
9000869c:	068c      	lsls	r4, r1, #26
9000869e:	d469      	bmi.n	90008774 <I2C_WaitOnSTOPFlagUntilTimeout+0xe4>
900086a0:	4606      	mov	r6, r0
900086a2:	4613      	mov	r3, r2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900086a4:	f04f 0910 	mov.w	r9, #16
  uint32_t itflag   = hi2c->Instance->ISR;
900086a8:	6994      	ldr	r4, [r2, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
900086aa:	f014 0410 	ands.w	r4, r4, #16
900086ae:	d064      	beq.n	9000877a <I2C_WaitOnSTOPFlagUntilTimeout+0xea>
  uint32_t error_code = 0;
900086b0:	2500      	movs	r5, #0
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900086b2:	4613      	mov	r3, r2
  uint32_t tickstart = Tickstart;
900086b4:	4644      	mov	r4, r8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
900086b6:	f8c2 901c 	str.w	r9, [r2, #28]
  HAL_StatusTypeDef status = HAL_OK;
900086ba:	46aa      	mov	sl, r5
900086bc:	1c79      	adds	r1, r7, #1
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900086be:	699a      	ldr	r2, [r3, #24]
900086c0:	d15d      	bne.n	9000877e <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
900086c2:	0690      	lsls	r0, r2, #26
900086c4:	f100 8083 	bmi.w	900087ce <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
900086c8:	f1ba 0f00 	cmp.w	sl, #0
900086cc:	d104      	bne.n	900086d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
900086ce:	699c      	ldr	r4, [r3, #24]
900086d0:	06a1      	lsls	r1, r4, #26
900086d2:	d5fc      	bpl.n	900086ce <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
900086d4:	2220      	movs	r2, #32
900086d6:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
900086d8:	f045 0404 	orr.w	r4, r5, #4
    status = HAL_ERROR;
900086dc:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
900086de:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
900086e0:	05d0      	lsls	r0, r2, #23
900086e2:	d530      	bpl.n	90008746 <I2C_WaitOnSTOPFlagUntilTimeout+0xb6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900086e4:	f44f 7180 	mov.w	r1, #256	; 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900086e8:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
900086ea:	f044 0401 	orr.w	r4, r4, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
900086ee:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
900086f0:	d504      	bpl.n	900086fc <I2C_WaitOnSTOPFlagUntilTimeout+0x6c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900086f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
900086f6:	f044 0408 	orr.w	r4, r4, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
900086fa:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
900086fc:	0591      	lsls	r1, r2, #22
900086fe:	d504      	bpl.n	9000870a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008700:	f44f 7200 	mov.w	r2, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90008704:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90008708:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
9000870a:	699a      	ldr	r2, [r3, #24]
9000870c:	0795      	lsls	r5, r2, #30
9000870e:	d501      	bpl.n	90008714 <I2C_WaitOnSTOPFlagUntilTimeout+0x84>
    hi2c->Instance->TXDR = 0x00U;
90008710:	2200      	movs	r2, #0
90008712:	629a      	str	r2, [r3, #40]	; 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90008714:	699a      	ldr	r2, [r3, #24]
90008716:	07d0      	lsls	r0, r2, #31
90008718:	d403      	bmi.n	90008722 <I2C_WaitOnSTOPFlagUntilTimeout+0x92>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
9000871a:	699a      	ldr	r2, [r3, #24]
9000871c:	f042 0201 	orr.w	r2, r2, #1
90008720:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90008722:	685a      	ldr	r2, [r3, #4]
    hi2c->Mode = HAL_I2C_MODE_NONE;
90008724:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90008726:	4837      	ldr	r0, [pc, #220]	; (90008804 <I2C_WaitOnSTOPFlagUntilTimeout+0x174>)
    hi2c->State = HAL_I2C_STATE_READY;
90008728:	2520      	movs	r5, #32
    I2C_RESET_CR2(hi2c);
9000872a:	4002      	ands	r2, r0
      return HAL_ERROR;
9000872c:	2001      	movs	r0, #1
    I2C_RESET_CR2(hi2c);
9000872e:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90008730:	6c73      	ldr	r3, [r6, #68]	; 0x44
    __HAL_UNLOCK(hi2c);
90008732:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
    hi2c->ErrorCode |= error_code;
90008736:	4323      	orrs	r3, r4
90008738:	6473      	str	r3, [r6, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
9000873a:	f886 5041 	strb.w	r5, [r6, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
9000873e:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
90008742:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90008746:	0550      	lsls	r0, r2, #21
90008748:	d4d3      	bmi.n	900086f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x62>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
9000874a:	0592      	lsls	r2, r2, #22
9000874c:	d4d8      	bmi.n	90008700 <I2C_WaitOnSTOPFlagUntilTimeout+0x70>
  if (status != HAL_OK)
9000874e:	2900      	cmp	r1, #0
90008750:	d1db      	bne.n	9000870a <I2C_WaitOnSTOPFlagUntilTimeout+0x7a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008752:	f7ff fa4f 	bl	90007bf4 <HAL_GetTick>
90008756:	eba0 0008 	sub.w	r0, r0, r8
9000875a:	42b8      	cmp	r0, r7
9000875c:	d801      	bhi.n	90008762 <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
9000875e:	2f00      	cmp	r7, #0
90008760:	d132      	bne.n	900087c8 <I2C_WaitOnSTOPFlagUntilTimeout+0x138>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90008762:	6832      	ldr	r2, [r6, #0]
90008764:	6991      	ldr	r1, [r2, #24]
90008766:	4613      	mov	r3, r2
90008768:	f011 0120 	ands.w	r1, r1, #32
9000876c:	d034      	beq.n	900087d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x148>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
9000876e:	6991      	ldr	r1, [r2, #24]
90008770:	0689      	lsls	r1, r1, #26
90008772:	d599      	bpl.n	900086a8 <I2C_WaitOnSTOPFlagUntilTimeout+0x18>
  return HAL_OK;
90008774:	2000      	movs	r0, #0
}
90008776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
9000877a:	4621      	mov	r1, r4
9000877c:	e7af      	b.n	900086de <I2C_WaitOnSTOPFlagUntilTimeout+0x4e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
9000877e:	0692      	lsls	r2, r2, #26
90008780:	d425      	bmi.n	900087ce <I2C_WaitOnSTOPFlagUntilTimeout+0x13e>
90008782:	f1ba 0f00 	cmp.w	sl, #0
90008786:	d1a7      	bne.n	900086d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008788:	f7ff fa34 	bl	90007bf4 <HAL_GetTick>
9000878c:	1b00      	subs	r0, r0, r4
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
9000878e:	6833      	ldr	r3, [r6, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90008790:	4287      	cmp	r7, r0
90008792:	d301      	bcc.n	90008798 <I2C_WaitOnSTOPFlagUntilTimeout+0x108>
90008794:	2f00      	cmp	r7, #0
90008796:	d191      	bne.n	900086bc <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90008798:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
9000879a:	f896 2042 	ldrb.w	r2, [r6, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
9000879e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
900087a0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
900087a2:	0409      	lsls	r1, r1, #16
900087a4:	d503      	bpl.n	900087ae <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              (tmp1 != I2C_CR2_STOP) && \
900087a6:	0441      	lsls	r1, r0, #17
900087a8:	d401      	bmi.n	900087ae <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
900087aa:	2a20      	cmp	r2, #32
900087ac:	d121      	bne.n	900087f2 <I2C_WaitOnSTOPFlagUntilTimeout+0x162>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900087ae:	699a      	ldr	r2, [r3, #24]
900087b0:	0690      	lsls	r0, r2, #26
900087b2:	d483      	bmi.n	900086bc <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900087b4:	f7ff fa1e 	bl	90007bf4 <HAL_GetTick>
900087b8:	1b00      	subs	r0, r0, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
900087ba:	6833      	ldr	r3, [r6, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
900087bc:	2819      	cmp	r0, #25
900087be:	d9f6      	bls.n	900087ae <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
900087c0:	2520      	movs	r5, #32
              status = HAL_ERROR;
900087c2:	f04f 0a01 	mov.w	sl, #1
900087c6:	e779      	b.n	900086bc <I2C_WaitOnSTOPFlagUntilTimeout+0x2c>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
900087c8:	6833      	ldr	r3, [r6, #0]
900087ca:	461a      	mov	r2, r3
900087cc:	e7cf      	b.n	9000876e <I2C_WaitOnSTOPFlagUntilTimeout+0xde>
    if (status == HAL_OK)
900087ce:	f1ba 0f00 	cmp.w	sl, #0
900087d2:	f43f af7f 	beq.w	900086d4 <I2C_WaitOnSTOPFlagUntilTimeout+0x44>
900087d6:	e77f      	b.n	900086d8 <I2C_WaitOnSTOPFlagUntilTimeout+0x48>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087d8:	6c73      	ldr	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900087da:	2220      	movs	r2, #32
          __HAL_UNLOCK(hi2c);
900087dc:	2001      	movs	r0, #1
900087de:	f886 1040 	strb.w	r1, [r6, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
900087e2:	4313      	orrs	r3, r2
900087e4:	6473      	str	r3, [r6, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
900087e6:	f886 2041 	strb.w	r2, [r6, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
900087ea:	f886 1042 	strb.w	r1, [r6, #66]	; 0x42
}
900087ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
900087f2:	685a      	ldr	r2, [r3, #4]
900087f4:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
900087f8:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
900087fa:	f7ff f9fb 	bl	90007bf4 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
900087fe:	6833      	ldr	r3, [r6, #0]
            tickstart = HAL_GetTick();
90008800:	4604      	mov	r4, r0
90008802:	e7d4      	b.n	900087ae <I2C_WaitOnSTOPFlagUntilTimeout+0x11e>
90008804:	fe00e800 	.word	0xfe00e800

90008808 <HAL_I2C_MspInit>:
}
90008808:	4770      	bx	lr
9000880a:	bf00      	nop

9000880c <HAL_I2C_Init>:
  if (hi2c == NULL)
9000880c:	2800      	cmp	r0, #0
9000880e:	d04e      	beq.n	900088ae <HAL_I2C_Init+0xa2>
{
90008810:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90008812:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
90008816:	4604      	mov	r4, r0
90008818:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000881c:	2b00      	cmp	r3, #0
9000881e:	d041      	beq.n	900088a4 <HAL_I2C_Init+0x98>
  __HAL_I2C_DISABLE(hi2c);
90008820:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008822:	2124      	movs	r1, #36	; 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90008824:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008826:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
9000882a:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000882c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008830:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90008832:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008836:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90008838:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
9000883a:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
9000883c:	689a      	ldr	r2, [r3, #8]
9000883e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
90008842:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90008844:	68a2      	ldr	r2, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90008846:	d029      	beq.n	9000889c <HAL_I2C_Init+0x90>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90008848:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
9000884c:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
9000884e:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90008850:	d102      	bne.n	90008858 <HAL_I2C_Init+0x4c>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
90008852:	f44f 6200 	mov.w	r2, #2048	; 0x800
90008856:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008858:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000885a:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000885e:	4915      	ldr	r1, [pc, #84]	; (900088b4 <HAL_I2C_Init+0xa8>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008860:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008862:	4301      	orrs	r1, r0
90008864:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008866:	68d9      	ldr	r1, [r3, #12]
90008868:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
9000886c:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
9000886e:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008872:	4302      	orrs	r2, r0
90008874:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008878:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000887c:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000887e:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008880:	4301      	orrs	r1, r0
  return HAL_OK;
90008882:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008884:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008886:	6819      	ldr	r1, [r3, #0]
90008888:	f041 0101 	orr.w	r1, r1, #1
9000888c:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000888e:	6462      	str	r2, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008890:	f884 c041 	strb.w	ip, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008894:	6322      	str	r2, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008896:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000889a:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
9000889c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
900088a0:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
900088a2:	e7d9      	b.n	90008858 <HAL_I2C_Init+0x4c>
    hi2c->Lock = HAL_UNLOCKED;
900088a4:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
900088a8:	f7ff ffae 	bl	90008808 <HAL_I2C_MspInit>
900088ac:	e7b8      	b.n	90008820 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
900088ae:	2001      	movs	r0, #1
}
900088b0:	4770      	bx	lr
900088b2:	bf00      	nop
900088b4:	02008000 	.word	0x02008000

900088b8 <HAL_I2C_MspDeInit>:
900088b8:	4770      	bx	lr
900088ba:	bf00      	nop

900088bc <HAL_I2C_DeInit>:
  if (hi2c == NULL)
900088bc:	b1b0      	cbz	r0, 900088ec <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
900088be:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
900088c0:	2324      	movs	r3, #36	; 0x24
{
900088c2:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
900088c4:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
900088c8:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
900088ca:	6813      	ldr	r3, [r2, #0]
900088cc:	f023 0301 	bic.w	r3, r3, #1
900088d0:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
900088d2:	f7ff fff1 	bl	900088b8 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
900088d6:	2300      	movs	r3, #0
900088d8:	6463      	str	r3, [r4, #68]	; 0x44
  return HAL_OK;
900088da:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
900088dc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hi2c);
900088e0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
900088e4:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
900088e6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
}
900088ea:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
900088ec:	2001      	movs	r0, #1
}
900088ee:	4770      	bx	lr

900088f0 <HAL_I2C_Mem_Write>:
{
900088f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900088f4:	4698      	mov	r8, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
900088f6:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
900088fa:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
  if (hi2c->State == HAL_I2C_STATE_READY)
900088fe:	2b20      	cmp	r3, #32
{
90008900:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  if (hi2c->State == HAL_I2C_STATE_READY)
90008902:	d132      	bne.n	9000896a <HAL_I2C_Mem_Write+0x7a>
    if ((pData == NULL) || (Size == 0U))
90008904:	9b08      	ldr	r3, [sp, #32]
90008906:	4604      	mov	r4, r0
90008908:	b34b      	cbz	r3, 9000895e <HAL_I2C_Mem_Write+0x6e>
9000890a:	f1ba 0f00 	cmp.w	sl, #0
9000890e:	d026      	beq.n	9000895e <HAL_I2C_Mem_Write+0x6e>
    __HAL_LOCK(hi2c);
90008910:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90008914:	2b01      	cmp	r3, #1
90008916:	d028      	beq.n	9000896a <HAL_I2C_Mem_Write+0x7a>
90008918:	2301      	movs	r3, #1
9000891a:	460e      	mov	r6, r1
9000891c:	4691      	mov	r9, r2
9000891e:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90008922:	f7ff f967 	bl	90007bf4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008926:	6823      	ldr	r3, [r4, #0]
    tickstart = HAL_GetTick();
90008928:	4605      	mov	r5, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
9000892a:	699a      	ldr	r2, [r3, #24]
9000892c:	0411      	lsls	r1, r2, #16
9000892e:	d51f      	bpl.n	90008970 <HAL_I2C_Mem_Write+0x80>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008930:	f7ff f960 	bl	90007bf4 <HAL_GetTick>
90008934:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008936:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008938:	2819      	cmp	r0, #25
9000893a:	d9f6      	bls.n	9000892a <HAL_I2C_Mem_Write+0x3a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
9000893c:	699a      	ldr	r2, [r3, #24]
9000893e:	0412      	lsls	r2, r2, #16
90008940:	d5f3      	bpl.n	9000892a <HAL_I2C_Mem_Write+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008942:	6c63      	ldr	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008944:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008946:	2200      	movs	r2, #0
      return HAL_ERROR;
90008948:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
9000894a:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
9000894c:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008950:	6463      	str	r3, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008952:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008956:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
}
9000895a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
9000895e:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90008962:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008964:	6463      	str	r3, [r4, #68]	; 0x44
}
90008966:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    return HAL_BUSY;
9000896a:	2002      	movs	r0, #2
}
9000896c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
90008970:	9a08      	ldr	r2, [sp, #32]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008972:	2121      	movs	r1, #33	; 0x21
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008974:	f3c6 0609 	ubfx	r6, r6, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008978:	4620      	mov	r0, r4
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
9000897a:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000897e:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008980:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008982:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008984:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008988:	6362      	str	r2, [r4, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000898a:	6462      	str	r2, [r4, #68]	; 0x44
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
9000898c:	496d      	ldr	r1, [pc, #436]	; (90008b44 <HAL_I2C_Mem_Write+0x254>)
    hi2c->XferCount = Size;
9000898e:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008992:	685a      	ldr	r2, [r3, #4]
90008994:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008996:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000899a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000899e:	496a      	ldr	r1, [pc, #424]	; (90008b48 <HAL_I2C_Mem_Write+0x258>)
900089a0:	4332      	orrs	r2, r6
900089a2:	4311      	orrs	r1, r2
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089a4:	462a      	mov	r2, r5
  MODIFY_REG(hi2c->Instance->CR2, \
900089a6:	6059      	str	r1, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089a8:	4639      	mov	r1, r7
900089aa:	f7ff fdbb 	bl	90008524 <I2C_WaitOnTXISFlagUntilTimeout>
900089ae:	2800      	cmp	r0, #0
900089b0:	d175      	bne.n	90008a9e <HAL_I2C_Mem_Write+0x1ae>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
900089b2:	f1b8 0f01 	cmp.w	r8, #1
900089b6:	d00a      	beq.n	900089ce <HAL_I2C_Mem_Write+0xde>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900089b8:	ea4f 2219 	mov.w	r2, r9, lsr #8
900089bc:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089be:	4639      	mov	r1, r7
900089c0:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
900089c2:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
900089c4:	462a      	mov	r2, r5
900089c6:	f7ff fdad 	bl	90008524 <I2C_WaitOnTXISFlagUntilTimeout>
900089ca:	2800      	cmp	r0, #0
900089cc:	d167      	bne.n	90008a9e <HAL_I2C_Mem_Write+0x1ae>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
900089ce:	fa5f f389 	uxtb.w	r3, r9
900089d2:	6822      	ldr	r2, [r4, #0]
900089d4:	6293      	str	r3, [r2, #40]	; 0x28
900089d6:	1c78      	adds	r0, r7, #1
900089d8:	d14a      	bne.n	90008a70 <HAL_I2C_Mem_Write+0x180>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900089da:	6993      	ldr	r3, [r2, #24]
900089dc:	0619      	lsls	r1, r3, #24
900089de:	d5fc      	bpl.n	900089da <HAL_I2C_Mem_Write+0xea>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
900089e0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
900089e2:	b29b      	uxth	r3, r3
900089e4:	2bff      	cmp	r3, #255	; 0xff
900089e6:	f240 808a 	bls.w	90008afe <HAL_I2C_Mem_Write+0x20e>
  MODIFY_REG(hi2c->Instance->CR2, \
900089ea:	6853      	ldr	r3, [r2, #4]
900089ec:	4957      	ldr	r1, [pc, #348]	; (90008b4c <HAL_I2C_Mem_Write+0x25c>)
900089ee:	400b      	ands	r3, r1
900089f0:	4957      	ldr	r1, [pc, #348]	; (90008b50 <HAL_I2C_Mem_Write+0x260>)
900089f2:	4333      	orrs	r3, r6
900089f4:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
900089f6:	23ff      	movs	r3, #255	; 0xff
900089f8:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900089fa:	6051      	str	r1, [r2, #4]
900089fc:	f8df 814c 	ldr.w	r8, [pc, #332]	; 90008b4c <HAL_I2C_Mem_Write+0x25c>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008a00:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008a04:	f8df 9148 	ldr.w	r9, [pc, #328]	; 90008b50 <HAL_I2C_Mem_Write+0x260>
90008a08:	e004      	b.n	90008a14 <HAL_I2C_Mem_Write+0x124>
    } while (hi2c->XferCount > 0U);
90008a0a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008a0c:	b29b      	uxth	r3, r3
90008a0e:	2b00      	cmp	r3, #0
90008a10:	f000 8083 	beq.w	90008b1a <HAL_I2C_Mem_Write+0x22a>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008a14:	462a      	mov	r2, r5
90008a16:	4639      	mov	r1, r7
90008a18:	4620      	mov	r0, r4
90008a1a:	f7ff fd83 	bl	90008524 <I2C_WaitOnTXISFlagUntilTimeout>
90008a1e:	2800      	cmp	r0, #0
90008a20:	d16b      	bne.n	90008afa <HAL_I2C_Mem_Write+0x20a>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008a22:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008a24:	6821      	ldr	r1, [r4, #0]
90008a26:	f812 0b01 	ldrb.w	r0, [r2], #1
      hi2c->XferSize--;
90008a2a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008a2c:	6288      	str	r0, [r1, #40]	; 0x28
      hi2c->pBuffPtr++;
90008a2e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferSize--;
90008a30:	3b01      	subs	r3, #1
      hi2c->XferCount--;
90008a32:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
90008a34:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
90008a36:	3a01      	subs	r2, #1
      hi2c->XferSize--;
90008a38:	8523      	strh	r3, [r4, #40]	; 0x28
      hi2c->XferCount--;
90008a3a:	b292      	uxth	r2, r2
90008a3c:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008a3e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
90008a40:	b292      	uxth	r2, r2
90008a42:	2a00      	cmp	r2, #0
90008a44:	d0e1      	beq.n	90008a0a <HAL_I2C_Mem_Write+0x11a>
90008a46:	2b00      	cmp	r3, #0
90008a48:	d1df      	bne.n	90008a0a <HAL_I2C_Mem_Write+0x11a>
90008a4a:	1c78      	adds	r0, r7, #1
90008a4c:	d12c      	bne.n	90008aa8 <HAL_I2C_Mem_Write+0x1b8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a4e:	698b      	ldr	r3, [r1, #24]
90008a50:	061a      	lsls	r2, r3, #24
90008a52:	d5fc      	bpl.n	90008a4e <HAL_I2C_Mem_Write+0x15e>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008a54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008a56:	b29b      	uxth	r3, r3
90008a58:	2bff      	cmp	r3, #255	; 0xff
90008a5a:	d940      	bls.n	90008ade <HAL_I2C_Mem_Write+0x1ee>
  MODIFY_REG(hi2c->Instance->CR2, \
90008a5c:	684b      	ldr	r3, [r1, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008a5e:	f8a4 a028 	strh.w	sl, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008a62:	ea03 0308 	and.w	r3, r3, r8
90008a66:	4333      	orrs	r3, r6
90008a68:	ea43 0309 	orr.w	r3, r3, r9
90008a6c:	604b      	str	r3, [r1, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008a6e:	e7cc      	b.n	90008a0a <HAL_I2C_Mem_Write+0x11a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008a70:	6993      	ldr	r3, [r2, #24]
90008a72:	061b      	lsls	r3, r3, #24
90008a74:	d4b4      	bmi.n	900089e0 <HAL_I2C_Mem_Write+0xf0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a76:	f7ff f8bd 	bl	90007bf4 <HAL_GetTick>
90008a7a:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a7c:	6822      	ldr	r2, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008a7e:	4287      	cmp	r7, r0
90008a80:	d301      	bcc.n	90008a86 <HAL_I2C_Mem_Write+0x196>
90008a82:	2f00      	cmp	r7, #0
90008a84:	d1a7      	bne.n	900089d6 <HAL_I2C_Mem_Write+0xe6>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008a86:	6993      	ldr	r3, [r2, #24]
90008a88:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008a8c:	d1a3      	bne.n	900089d6 <HAL_I2C_Mem_Write+0xe6>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a8e:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a90:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008a92:	430a      	orrs	r2, r1
90008a94:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008a96:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008a9a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008a9e:	2300      	movs	r3, #0
      return HAL_ERROR;
90008aa0:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90008aa2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
90008aa6:	e75e      	b.n	90008966 <HAL_I2C_Mem_Write+0x76>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008aa8:	698b      	ldr	r3, [r1, #24]
90008aaa:	061b      	lsls	r3, r3, #24
90008aac:	d4d2      	bmi.n	90008a54 <HAL_I2C_Mem_Write+0x164>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008aae:	f7ff f8a1 	bl	90007bf4 <HAL_GetTick>
90008ab2:	1b40      	subs	r0, r0, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ab4:	6821      	ldr	r1, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ab6:	4287      	cmp	r7, r0
90008ab8:	d301      	bcc.n	90008abe <HAL_I2C_Mem_Write+0x1ce>
90008aba:	2f00      	cmp	r7, #0
90008abc:	d1c5      	bne.n	90008a4a <HAL_I2C_Mem_Write+0x15a>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008abe:	698b      	ldr	r3, [r1, #24]
90008ac0:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008ac4:	d1c1      	bne.n	90008a4a <HAL_I2C_Mem_Write+0x15a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008ac6:	6c62      	ldr	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008ac8:	2120      	movs	r1, #32
          return HAL_ERROR;
90008aca:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008acc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008ad0:	430a      	orrs	r2, r1
90008ad2:	6462      	str	r2, [r4, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008ad4:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008ad8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          return HAL_ERROR;
90008adc:	e743      	b.n	90008966 <HAL_I2C_Mem_Write+0x76>
          hi2c->XferSize = hi2c->XferCount;
90008ade:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
90008ae0:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008ae2:	b2da      	uxtb	r2, r3
          hi2c->XferSize = hi2c->XferCount;
90008ae4:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008ae6:	684b      	ldr	r3, [r1, #4]
90008ae8:	ea03 0308 	and.w	r3, r3, r8
90008aec:	4333      	orrs	r3, r6
90008aee:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008af2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008af6:	604b      	str	r3, [r1, #4]
}
90008af8:	e787      	b.n	90008a0a <HAL_I2C_Mem_Write+0x11a>
        return HAL_ERROR;
90008afa:	2001      	movs	r0, #1
90008afc:	e733      	b.n	90008966 <HAL_I2C_Mem_Write+0x76>
      hi2c->XferSize = hi2c->XferCount;
90008afe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008b00:	4812      	ldr	r0, [pc, #72]	; (90008b4c <HAL_I2C_Mem_Write+0x25c>)
      hi2c->XferSize = hi2c->XferCount;
90008b02:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008b04:	b2d9      	uxtb	r1, r3
      hi2c->XferSize = hi2c->XferCount;
90008b06:	8523      	strh	r3, [r4, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008b08:	6853      	ldr	r3, [r2, #4]
90008b0a:	4003      	ands	r3, r0
90008b0c:	4333      	orrs	r3, r6
90008b0e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008b12:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008b16:	6053      	str	r3, [r2, #4]
}
90008b18:	e770      	b.n	900089fc <HAL_I2C_Mem_Write+0x10c>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008b1a:	462a      	mov	r2, r5
90008b1c:	4639      	mov	r1, r7
90008b1e:	4620      	mov	r0, r4
90008b20:	f7ff fdb6 	bl	90008690 <I2C_WaitOnSTOPFlagUntilTimeout>
90008b24:	2800      	cmp	r0, #0
90008b26:	d1e8      	bne.n	90008afa <HAL_I2C_Mem_Write+0x20a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b28:	6823      	ldr	r3, [r4, #0]
90008b2a:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008b2c:	4d09      	ldr	r5, [pc, #36]	; (90008b54 <HAL_I2C_Mem_Write+0x264>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008b2e:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008b30:	685a      	ldr	r2, [r3, #4]
90008b32:	402a      	ands	r2, r5
90008b34:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008b36:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008b3a:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008b3e:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
90008b42:	e710      	b.n	90008966 <HAL_I2C_Mem_Write+0x76>
90008b44:	fc009800 	.word	0xfc009800
90008b48:	01002000 	.word	0x01002000
90008b4c:	fc009c00 	.word	0xfc009c00
90008b50:	01ff0000 	.word	0x01ff0000
90008b54:	fe00e800 	.word	0xfe00e800

90008b58 <HAL_I2C_Mem_Read>:
{
90008b58:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90008b5c:	461c      	mov	r4, r3
  if (hi2c->State == HAL_I2C_STATE_READY)
90008b5e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
{
90008b62:	f8bd 902c 	ldrh.w	r9, [sp, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_READY)
90008b66:	2b20      	cmp	r3, #32
{
90008b68:	9d0c      	ldr	r5, [sp, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
90008b6a:	d137      	bne.n	90008bdc <HAL_I2C_Mem_Read+0x84>
    if ((pData == NULL) || (Size == 0U))
90008b6c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90008b6e:	4683      	mov	fp, r0
90008b70:	b36b      	cbz	r3, 90008bce <HAL_I2C_Mem_Read+0x76>
90008b72:	f1b9 0f00 	cmp.w	r9, #0
90008b76:	d02a      	beq.n	90008bce <HAL_I2C_Mem_Read+0x76>
    __HAL_LOCK(hi2c);
90008b78:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
90008b7c:	2b01      	cmp	r3, #1
90008b7e:	d02d      	beq.n	90008bdc <HAL_I2C_Mem_Read+0x84>
90008b80:	2301      	movs	r3, #1
90008b82:	460f      	mov	r7, r1
90008b84:	4690      	mov	r8, r2
90008b86:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
90008b8a:	f7ff f833 	bl	90007bf4 <HAL_GetTick>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b8e:	f8db 3000 	ldr.w	r3, [fp]
    tickstart = HAL_GetTick();
90008b92:	4606      	mov	r6, r0
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008b94:	699a      	ldr	r2, [r3, #24]
90008b96:	0410      	lsls	r0, r2, #16
90008b98:	d523      	bpl.n	90008be2 <HAL_I2C_Mem_Read+0x8a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008b9a:	f7ff f82b 	bl	90007bf4 <HAL_GetTick>
90008b9e:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ba0:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ba4:	2819      	cmp	r0, #25
90008ba6:	d9f5      	bls.n	90008b94 <HAL_I2C_Mem_Read+0x3c>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ba8:	699a      	ldr	r2, [r3, #24]
90008baa:	0411      	lsls	r1, r2, #16
90008bac:	d5f2      	bpl.n	90008b94 <HAL_I2C_Mem_Read+0x3c>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bae:	f8db 3044 	ldr.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008bb2:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008bb4:	2200      	movs	r2, #0
      return HAL_ERROR;
90008bb6:	2001      	movs	r0, #1
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bb8:	430b      	orrs	r3, r1
          __HAL_UNLOCK(hi2c);
90008bba:	f88b 2040 	strb.w	r2, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008bbe:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008bc2:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008bc6:	f88b 2042 	strb.w	r2, [fp, #66]	; 0x42
}
90008bca:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008bce:	f44f 7300 	mov.w	r3, #512	; 0x200
      return  HAL_ERROR;
90008bd2:	2001      	movs	r0, #1
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
90008bd4:	f8cb 3044 	str.w	r3, [fp, #68]	; 0x44
}
90008bd8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    return HAL_BUSY;
90008bdc:	2002      	movs	r0, #2
}
90008bde:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
90008be2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008be4:	2122      	movs	r1, #34	; 0x22
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
90008be6:	f3c7 0709 	ubfx	r7, r7, #0, #10
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008bea:	4658      	mov	r0, fp
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
90008bec:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008bf0:	2140      	movs	r1, #64	; 0x40
    hi2c->pBuffPtr  = pData;
90008bf2:	f8cb 2024 	str.w	r2, [fp, #36]	; 0x24
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008bf6:	2200      	movs	r2, #0
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008bf8:	f88b 1042 	strb.w	r1, [fp, #66]	; 0x42
    hi2c->XferISR   = NULL;
90008bfc:	f8cb 2034 	str.w	r2, [fp, #52]	; 0x34
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008c00:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
  MODIFY_REG(hi2c->Instance->CR2, \
90008c04:	4983      	ldr	r1, [pc, #524]	; (90008e14 <HAL_I2C_Mem_Read+0x2bc>)
    hi2c->XferCount = Size;
90008c06:	f8ab 902a 	strh.w	r9, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008c0a:	685a      	ldr	r2, [r3, #4]
90008c0c:	400a      	ands	r2, r1
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008c0e:	b2e1      	uxtb	r1, r4
  MODIFY_REG(hi2c->Instance->CR2, \
90008c10:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c14:	4629      	mov	r1, r5
  MODIFY_REG(hi2c->Instance->CR2, \
90008c16:	433a      	orrs	r2, r7
90008c18:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90008c1c:	605a      	str	r2, [r3, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c1e:	4632      	mov	r2, r6
90008c20:	f7ff fc80 	bl	90008524 <I2C_WaitOnTXISFlagUntilTimeout>
90008c24:	2800      	cmp	r0, #0
90008c26:	f040 8091 	bne.w	90008d4c <HAL_I2C_Mem_Read+0x1f4>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008c2a:	2c01      	cmp	r4, #1
90008c2c:	d00c      	beq.n	90008c48 <HAL_I2C_Mem_Read+0xf0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008c2e:	ea4f 2218 	mov.w	r2, r8, lsr #8
90008c32:	f8db 3000 	ldr.w	r3, [fp]
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c36:	4629      	mov	r1, r5
90008c38:	4658      	mov	r0, fp
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008c3a:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008c3c:	4632      	mov	r2, r6
90008c3e:	f7ff fc71 	bl	90008524 <I2C_WaitOnTXISFlagUntilTimeout>
90008c42:	2800      	cmp	r0, #0
90008c44:	f040 8082 	bne.w	90008d4c <HAL_I2C_Mem_Read+0x1f4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008c48:	fa5f f388 	uxtb.w	r3, r8
90008c4c:	f8db 4000 	ldr.w	r4, [fp]
90008c50:	62a3      	str	r3, [r4, #40]	; 0x28
90008c52:	1c6a      	adds	r2, r5, #1
90008c54:	d160      	bne.n	90008d18 <HAL_I2C_Mem_Read+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c56:	69a3      	ldr	r3, [r4, #24]
90008c58:	065b      	lsls	r3, r3, #25
90008c5a:	d5fc      	bpl.n	90008c56 <HAL_I2C_Mem_Read+0xfe>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008c5c:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008c60:	b29b      	uxth	r3, r3
90008c62:	2bff      	cmp	r3, #255	; 0xff
90008c64:	f240 80ae 	bls.w	90008dc4 <HAL_I2C_Mem_Read+0x26c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008c68:	6863      	ldr	r3, [r4, #4]
90008c6a:	4a6a      	ldr	r2, [pc, #424]	; (90008e14 <HAL_I2C_Mem_Read+0x2bc>)
90008c6c:	4013      	ands	r3, r2
90008c6e:	4a6a      	ldr	r2, [pc, #424]	; (90008e18 <HAL_I2C_Mem_Read+0x2c0>)
90008c70:	433b      	orrs	r3, r7
90008c72:	431a      	orrs	r2, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008c74:	23ff      	movs	r3, #255	; 0xff
90008c76:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008c7a:	6062      	str	r2, [r4, #4]
90008c7c:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 90008e24 <HAL_I2C_Mem_Read+0x2cc>
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008c80:	f04f 0aff 	mov.w	sl, #255	; 0xff
  MODIFY_REG(hi2c->Instance->CR2, \
90008c84:	f8df 91a0 	ldr.w	r9, [pc, #416]	; 90008e28 <HAL_I2C_Mem_Read+0x2d0>
90008c88:	1c69      	adds	r1, r5, #1
90008c8a:	d127      	bne.n	90008cdc <HAL_I2C_Mem_Read+0x184>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008c8c:	69a3      	ldr	r3, [r4, #24]
90008c8e:	075a      	lsls	r2, r3, #29
90008c90:	d5fc      	bpl.n	90008c8c <HAL_I2C_Mem_Read+0x134>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
90008c92:	6a62      	ldr	r2, [r4, #36]	; 0x24
90008c94:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
90008c98:	701a      	strb	r2, [r3, #0]
      hi2c->XferCount--;
90008c9a:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->pBuffPtr++;
90008c9e:	f8db 3024 	ldr.w	r3, [fp, #36]	; 0x24
      hi2c->XferCount--;
90008ca2:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
90008ca4:	3301      	adds	r3, #1
      hi2c->XferCount--;
90008ca6:	b292      	uxth	r2, r2
      hi2c->pBuffPtr++;
90008ca8:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
      hi2c->XferSize--;
90008cac:	f8bb 3028 	ldrh.w	r3, [fp, #40]	; 0x28
      hi2c->XferCount--;
90008cb0:	f8ab 202a 	strh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008cb4:	3b01      	subs	r3, #1
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008cb6:	f8bb 202a 	ldrh.w	r2, [fp, #42]	; 0x2a
      hi2c->XferSize--;
90008cba:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008cbc:	b292      	uxth	r2, r2
      hi2c->XferSize--;
90008cbe:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
90008cc2:	b10a      	cbz	r2, 90008cc8 <HAL_I2C_Mem_Read+0x170>
90008cc4:	2b00      	cmp	r3, #0
90008cc6:	d046      	beq.n	90008d56 <HAL_I2C_Mem_Read+0x1fe>
    } while (hi2c->XferCount > 0U);
90008cc8:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008ccc:	b29b      	uxth	r3, r3
90008cce:	2b00      	cmp	r3, #0
90008cd0:	f000 8088 	beq.w	90008de4 <HAL_I2C_Mem_Read+0x28c>
90008cd4:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008cd6:	f8db 4000 	ldr.w	r4, [fp]
90008cda:	d0d7      	beq.n	90008c8c <HAL_I2C_Mem_Read+0x134>
90008cdc:	69a3      	ldr	r3, [r4, #24]
90008cde:	075b      	lsls	r3, r3, #29
90008ce0:	d4d7      	bmi.n	90008c92 <HAL_I2C_Mem_Read+0x13a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008ce2:	f7fe ff87 	bl	90007bf4 <HAL_GetTick>
90008ce6:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008ce8:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008cec:	4285      	cmp	r5, r0
90008cee:	d301      	bcc.n	90008cf4 <HAL_I2C_Mem_Read+0x19c>
90008cf0:	2d00      	cmp	r5, #0
90008cf2:	d1c9      	bne.n	90008c88 <HAL_I2C_Mem_Read+0x130>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008cf4:	69a3      	ldr	r3, [r4, #24]
90008cf6:	f013 0304 	ands.w	r3, r3, #4
90008cfa:	d1c5      	bne.n	90008c88 <HAL_I2C_Mem_Read+0x130>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008cfc:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d00:	2120      	movs	r1, #32
          return HAL_ERROR;
90008d02:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90008d04:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008d08:	430a      	orrs	r2, r1
90008d0a:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d0e:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008d12:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
          return HAL_ERROR;
90008d16:	e75f      	b.n	90008bd8 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d18:	69a3      	ldr	r3, [r4, #24]
90008d1a:	0658      	lsls	r0, r3, #25
90008d1c:	d49e      	bmi.n	90008c5c <HAL_I2C_Mem_Read+0x104>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d1e:	f7fe ff69 	bl	90007bf4 <HAL_GetTick>
90008d22:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d24:	f8db 4000 	ldr.w	r4, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d28:	4285      	cmp	r5, r0
90008d2a:	d301      	bcc.n	90008d30 <HAL_I2C_Mem_Read+0x1d8>
90008d2c:	2d00      	cmp	r5, #0
90008d2e:	d190      	bne.n	90008c52 <HAL_I2C_Mem_Read+0xfa>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d30:	69a3      	ldr	r3, [r4, #24]
90008d32:	f013 0340 	ands.w	r3, r3, #64	; 0x40
90008d36:	d18c      	bne.n	90008c52 <HAL_I2C_Mem_Read+0xfa>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008d38:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d3c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90008d3e:	430a      	orrs	r2, r1
90008d40:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90008d44:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90008d48:	f88b 3042 	strb.w	r3, [fp, #66]	; 0x42
      __HAL_UNLOCK(hi2c);
90008d4c:	2300      	movs	r3, #0
      return HAL_ERROR;
90008d4e:	2001      	movs	r0, #1
      __HAL_UNLOCK(hi2c);
90008d50:	f88b 3040 	strb.w	r3, [fp, #64]	; 0x40
      return HAL_ERROR;
90008d54:	e740      	b.n	90008bd8 <HAL_I2C_Mem_Read+0x80>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d56:	f8db 2000 	ldr.w	r2, [fp]
90008d5a:	1c68      	adds	r0, r5, #1
90008d5c:	d111      	bne.n	90008d82 <HAL_I2C_Mem_Read+0x22a>
90008d5e:	6993      	ldr	r3, [r2, #24]
90008d60:	0619      	lsls	r1, r3, #24
90008d62:	d5fc      	bpl.n	90008d5e <HAL_I2C_Mem_Read+0x206>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008d64:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008d68:	b29b      	uxth	r3, r3
90008d6a:	2bff      	cmp	r3, #255	; 0xff
90008d6c:	d91a      	bls.n	90008da4 <HAL_I2C_Mem_Read+0x24c>
  MODIFY_REG(hi2c->Instance->CR2, \
90008d6e:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
90008d70:	f8ab a028 	strh.w	sl, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008d74:	ea03 0308 	and.w	r3, r3, r8
90008d78:	433b      	orrs	r3, r7
90008d7a:	ea43 0309 	orr.w	r3, r3, r9
90008d7e:	6053      	str	r3, [r2, #4]
}
90008d80:	e7a2      	b.n	90008cc8 <HAL_I2C_Mem_Read+0x170>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90008d82:	6993      	ldr	r3, [r2, #24]
90008d84:	061b      	lsls	r3, r3, #24
90008d86:	d4ed      	bmi.n	90008d64 <HAL_I2C_Mem_Read+0x20c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d88:	f7fe ff34 	bl	90007bf4 <HAL_GetTick>
90008d8c:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d8e:	f8db 2000 	ldr.w	r2, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90008d92:	4285      	cmp	r5, r0
90008d94:	d301      	bcc.n	90008d9a <HAL_I2C_Mem_Read+0x242>
90008d96:	2d00      	cmp	r5, #0
90008d98:	d1df      	bne.n	90008d5a <HAL_I2C_Mem_Read+0x202>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90008d9a:	6993      	ldr	r3, [r2, #24]
90008d9c:	f013 0380 	ands.w	r3, r3, #128	; 0x80
90008da0:	d1db      	bne.n	90008d5a <HAL_I2C_Mem_Read+0x202>
90008da2:	e7ab      	b.n	90008cfc <HAL_I2C_Mem_Read+0x1a4>
          hi2c->XferSize = hi2c->XferCount;
90008da4:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
90008da8:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008daa:	b2d9      	uxtb	r1, r3
          hi2c->XferSize = hi2c->XferCount;
90008dac:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008db0:	6853      	ldr	r3, [r2, #4]
90008db2:	ea03 0308 	and.w	r3, r3, r8
90008db6:	433b      	orrs	r3, r7
90008db8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90008dbc:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
90008dc0:	6053      	str	r3, [r2, #4]
}
90008dc2:	e781      	b.n	90008cc8 <HAL_I2C_Mem_Read+0x170>
      hi2c->XferSize = hi2c->XferCount;
90008dc4:	f8bb 302a 	ldrh.w	r3, [fp, #42]	; 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008dc8:	4912      	ldr	r1, [pc, #72]	; (90008e14 <HAL_I2C_Mem_Read+0x2bc>)
      hi2c->XferSize = hi2c->XferCount;
90008dca:	b29b      	uxth	r3, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008dcc:	b2da      	uxtb	r2, r3
      hi2c->XferSize = hi2c->XferCount;
90008dce:	f8ab 3028 	strh.w	r3, [fp, #40]	; 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008dd2:	6863      	ldr	r3, [r4, #4]
90008dd4:	400b      	ands	r3, r1
90008dd6:	433b      	orrs	r3, r7
90008dd8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008ddc:	4a0f      	ldr	r2, [pc, #60]	; (90008e1c <HAL_I2C_Mem_Read+0x2c4>)
90008dde:	431a      	orrs	r2, r3
90008de0:	6062      	str	r2, [r4, #4]
}
90008de2:	e74b      	b.n	90008c7c <HAL_I2C_Mem_Read+0x124>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008de4:	4632      	mov	r2, r6
90008de6:	4629      	mov	r1, r5
90008de8:	4658      	mov	r0, fp
90008dea:	f7ff fc51 	bl	90008690 <I2C_WaitOnSTOPFlagUntilTimeout>
90008dee:	b970      	cbnz	r0, 90008e0e <HAL_I2C_Mem_Read+0x2b6>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008df0:	f8db 3000 	ldr.w	r3, [fp]
90008df4:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008df6:	4c0a      	ldr	r4, [pc, #40]	; (90008e20 <HAL_I2C_Mem_Read+0x2c8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008df8:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008dfa:	685a      	ldr	r2, [r3, #4]
90008dfc:	4022      	ands	r2, r4
90008dfe:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008e00:	f88b 1041 	strb.w	r1, [fp, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008e04:	f88b 0040 	strb.w	r0, [fp, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008e08:	f88b 0042 	strb.w	r0, [fp, #66]	; 0x42
    return HAL_OK;
90008e0c:	e6e4      	b.n	90008bd8 <HAL_I2C_Mem_Read+0x80>
      return HAL_ERROR;
90008e0e:	2001      	movs	r0, #1
90008e10:	e6e2      	b.n	90008bd8 <HAL_I2C_Mem_Read+0x80>
90008e12:	bf00      	nop
90008e14:	fc009800 	.word	0xfc009800
90008e18:	01ff2400 	.word	0x01ff2400
90008e1c:	02002400 	.word	0x02002400
90008e20:	fe00e800 	.word	0xfe00e800
90008e24:	fc009c00 	.word	0xfc009c00
90008e28:	01ff0000 	.word	0x01ff0000

90008e2c <HAL_I2C_GetState>:
  return hi2c->State;
90008e2c:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
90008e30:	4770      	bx	lr
90008e32:	bf00      	nop

90008e34 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
90008e34:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
90008e36:	4770      	bx	lr

90008e38 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008e38:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008e3c:	2a20      	cmp	r2, #32
90008e3e:	d123      	bne.n	90008e88 <HAL_I2CEx_ConfigAnalogFilter+0x50>
90008e40:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008e44:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008e48:	4603      	mov	r3, r0
90008e4a:	2a01      	cmp	r2, #1
90008e4c:	d01c      	beq.n	90008e88 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008e4e:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008e50:	2024      	movs	r0, #36	; 0x24
{
90008e52:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
90008e54:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008e58:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
90008e5c:	6810      	ldr	r0, [r2, #0]
90008e5e:	f020 0001 	bic.w	r0, r0, #1
90008e62:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
90008e64:	6810      	ldr	r0, [r2, #0]
90008e66:	f420 5080 	bic.w	r0, r0, #4096	; 0x1000
90008e6a:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
90008e6c:	6810      	ldr	r0, [r2, #0]
90008e6e:	4301      	orrs	r1, r0

    return HAL_OK;
90008e70:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
90008e72:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008e74:	6811      	ldr	r1, [r2, #0]
90008e76:	f041 0101 	orr.w	r1, r1, #1
90008e7a:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008e7c:	f883 c041 	strb.w	ip, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008e80:	f883 e040 	strb.w	lr, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008e84:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008e88:	2002      	movs	r0, #2
}
90008e8a:	4770      	bx	lr

90008e8c <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
90008e8c:	f890 2041 	ldrb.w	r2, [r0, #65]	; 0x41
90008e90:	2a20      	cmp	r2, #32
90008e92:	d122      	bne.n	90008eda <HAL_I2CEx_ConfigDigitalFilter+0x4e>
90008e94:	4603      	mov	r3, r0
{
90008e96:	b500      	push	{lr}
90008e98:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008e9c:	f890 2040 	ldrb.w	r2, [r0, #64]	; 0x40
90008ea0:	2a01      	cmp	r2, #1
90008ea2:	d01c      	beq.n	90008ede <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
90008ea4:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
90008ea6:	2024      	movs	r0, #36	; 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008ea8:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008eac:	f883 0041 	strb.w	r0, [r3, #65]	; 0x41
    __HAL_I2C_DISABLE(hi2c);
90008eb0:	6810      	ldr	r0, [r2, #0]
90008eb2:	f020 0001 	bic.w	r0, r0, #1
90008eb6:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008eb8:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008eba:	f420 6070 	bic.w	r0, r0, #3840	; 0xf00
    tmpreg |= DigitalFilter << 8U;
90008ebe:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
90008ec2:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
90008ec4:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
90008ec6:	6811      	ldr	r1, [r2, #0]
90008ec8:	f041 0101 	orr.w	r1, r1, #1
90008ecc:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008ece:	f883 e041 	strb.w	lr, [r3, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
90008ed2:	f883 c040 	strb.w	ip, [r3, #64]	; 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
90008ed6:	f85d fb04 	ldr.w	pc, [sp], #4
    return HAL_BUSY;
90008eda:	2002      	movs	r0, #2
}
90008edc:	4770      	bx	lr
    return HAL_BUSY;
90008ede:	2002      	movs	r0, #2
}
90008ee0:	f85d fb04 	ldr.w	pc, [sp], #4

90008ee4 <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
90008ee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008ee8:	460d      	mov	r5, r1
90008eea:	4614      	mov	r4, r2
90008eec:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008eee:	7806      	ldrb	r6, [r0, #0]
    if ((p + i) > 256UL)
90008ef0:	4681      	mov	r9, r0
    i = (uint32_t)Bits[l];
90008ef2:	2701      	movs	r7, #1
  p = 0;
90008ef4:	f04f 0800 	mov.w	r8, #0
90008ef8:	e006      	b.n	90008f08 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90008efa:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90008efe:	eb06 0308 	add.w	r3, r6, r8
90008f02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90008f06:	d837      	bhi.n	90008f78 <JPEG_Bits_To_SizeCodes+0x94>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008f08:	eb05 0008 	add.w	r0, r5, r8
90008f0c:	4632      	mov	r2, r6
90008f0e:	4639      	mov	r1, r7
    while (i != 0UL)
90008f10:	b116      	cbz	r6, 90008f18 <JPEG_Bits_To_SizeCodes+0x34>
      p++;
90008f12:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
90008f14:	f01d fc54 	bl	900267c0 <memset>
  for (l = 0; l < 16UL; l++)
90008f18:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008f1a:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90008f1e:	d1ec      	bne.n	90008efa <JPEG_Bits_To_SizeCodes+0x16>
      i--;
    }
  }
  Huffsize[p] = 0;
90008f20:	2300      	movs	r3, #0
90008f22:	f805 3008 	strb.w	r3, [r5, r8]
  *LastK = p;
90008f26:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008f2a:	7828      	ldrb	r0, [r5, #0]
90008f2c:	4601      	mov	r1, r0
  p = 0;
  while (Huffsize[p] != 0U)
90008f2e:	b300      	cbz	r0, 90008f72 <JPEG_Bits_To_SizeCodes+0x8e>
90008f30:	f06f 4840 	mvn.w	r8, #3221225472	; 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008f34:	2701      	movs	r7, #1
  p = 0;
90008f36:	461a      	mov	r2, r3
    while (((uint32_t) Huffsize[p]) == si)
90008f38:	4288      	cmp	r0, r1
90008f3a:	d10f      	bne.n	90008f5c <JPEG_Bits_To_SizeCodes+0x78>
90008f3c:	eb02 0008 	add.w	r0, r2, r8
90008f40:	1c56      	adds	r6, r2, #1
90008f42:	eb05 0c02 	add.w	ip, r5, r2
90008f46:	eb04 0080 	add.w	r0, r4, r0, lsl #2
90008f4a:	1af6      	subs	r6, r6, r3
      Huffcode[p] = code;
90008f4c:	f840 3f04 	str.w	r3, [r0, #4]!
      p++;
90008f50:	18f2      	adds	r2, r6, r3
    while (((uint32_t) Huffsize[p]) == si)
90008f52:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
90008f56:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
90008f58:	458e      	cmp	lr, r1
90008f5a:	d0f7      	beq.n	90008f4c <JPEG_Bits_To_SizeCodes+0x68>
    if(si > 31UL)
90008f5c:	291f      	cmp	r1, #31
90008f5e:	d80b      	bhi.n	90008f78 <JPEG_Bits_To_SizeCodes+0x94>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
90008f60:	fa07 f001 	lsl.w	r0, r7, r1
90008f64:	4298      	cmp	r0, r3
90008f66:	d907      	bls.n	90008f78 <JPEG_Bits_To_SizeCodes+0x94>
  while (Huffsize[p] != 0U)
90008f68:	5ca8      	ldrb	r0, [r5, r2]
    {
      return HAL_ERROR;
    }
    code <<= 1;
90008f6a:	005b      	lsls	r3, r3, #1
    si++;
90008f6c:	3101      	adds	r1, #1
  while (Huffsize[p] != 0U)
90008f6e:	2800      	cmp	r0, #0
90008f70:	d1e2      	bne.n	90008f38 <JPEG_Bits_To_SizeCodes+0x54>
  }
  /* Return function status */
  return HAL_OK;
90008f72:	2000      	movs	r0, #0
}
90008f74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
90008f78:	2001      	movs	r0, #1
}
90008f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90008f7e:	bf00      	nop

90008f80 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
90008f80:	b5f0      	push	{r4, r5, r6, r7, lr}
90008f82:	f2ad 5d14 	subw	sp, sp, #1300	; 0x514
90008f86:	460d      	mov	r5, r1
90008f88:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90008f8a:	ab01      	add	r3, sp, #4
90008f8c:	aa43      	add	r2, sp, #268	; 0x10c
90008f8e:	a902      	add	r1, sp, #8
90008f90:	f7ff ffa8 	bl	90008ee4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008f94:	b9d0      	cbnz	r0, 90008fcc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
90008f96:	9f01      	ldr	r7, [sp, #4]
90008f98:	b1c7      	cbz	r7, 90008fcc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
90008f9a:	370f      	adds	r7, #15
90008f9c:	f50d 7e86 	add.w	lr, sp, #268	; 0x10c
90008fa0:	a902      	add	r1, sp, #8
90008fa2:	f104 0c0f 	add.w	ip, r4, #15
90008fa6:	4427      	add	r7, r4
90008fa8:	e009      	b.n	90008fbe <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008faa:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008fae:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008fb0:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008fb4:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008fb8:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008fba:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008fbc:	d006      	beq.n	90008fcc <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008fbe:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008fc2:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008fc4:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008fc8:	d9ef      	bls.n	90008faa <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
90008fca:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008fcc:	f20d 5d14 	addw	sp, sp, #1300	; 0x514
90008fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008fd2:	bf00      	nop

90008fd4 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008fd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008fd8:	6804      	ldr	r4, [r0, #0]
{
90008fda:	b093      	sub	sp, #76	; 0x4c
90008fdc:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008fde:	f504 63f8 	add.w	r3, r4, #1984	; 0x7c0
90008fe2:	429a      	cmp	r2, r3
90008fe4:	f000 809d 	beq.w	90009122 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
90008fe8:	f504 63fc 	add.w	r3, r4, #2016	; 0x7e0
90008fec:	429a      	cmp	r2, r3
90008fee:	d003      	beq.n	90008ff8 <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008ff0:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008ff2:	b013      	add	sp, #76	; 0x4c
90008ff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008ff8:	f504 64ff 	add.w	r4, r4, #2040	; 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008ffc:	a903      	add	r1, sp, #12
90008ffe:	f7ff ffbf 	bl	90008f80 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90009002:	2800      	cmp	r0, #0
90009004:	d1f5      	bne.n	90008ff2 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
90009006:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000900a:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000900e:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90009012:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009014:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
90009018:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000901a:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
9000901e:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009022:	f40a 6a70 	and.w	sl, sl, #3840	; 0xf00
90009026:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000902a:	f40e 6e70 	and.w	lr, lr, #3840	; 0xf00
9000902e:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009030:	f89d 9015 	ldrb.w	r9, [sp, #21]
90009034:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009038:	f89d c014 	ldrb.w	ip, [sp, #20]
9000903c:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009040:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009044:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009048:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000904c:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000904e:	f409 6970 	and.w	r9, r9, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009052:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
90009056:	f40c 6c70 	and.w	ip, ip, #3840	; 0xf00
9000905a:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000905e:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009062:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009066:	f89d 7011 	ldrb.w	r7, [sp, #17]
9000906a:	f408 6870 	and.w	r8, r8, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000906e:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
90009070:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009074:	f89d 2010 	ldrb.w	r2, [sp, #16]
90009078:	f401 6170 	and.w	r1, r1, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000907c:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
9000907e:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009082:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009084:	f89d e03c 	ldrb.w	lr, [sp, #60]	; 0x3c
90009088:	f407 6770 	and.w	r7, r7, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000908c:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009090:	f89d 600f 	ldrb.w	r6, [sp, #15]
90009094:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009098:	f89d e038 	ldrb.w	lr, [sp, #56]	; 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000909c:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000909e:	9b01      	ldr	r3, [sp, #4]
900090a0:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090a4:	f89d 500d 	ldrb.w	r5, [sp, #13]
900090a8:	f406 6670 	and.w	r6, r6, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090ac:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
900090b0:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090b4:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
900090b6:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090ba:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090be:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900090c2:	f405 6570 	and.w	r5, r5, #3840	; 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090c6:	f40b 6b70 	and.w	fp, fp, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090ca:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090ce:	f89d c030 	ldrb.w	ip, [sp, #48]	; 0x30
900090d2:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
900090d6:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
900090da:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090de:	f89d 102c 	ldrb.w	r1, [sp, #44]	; 0x2c
900090e2:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090e4:	f89d 1028 	ldrb.w	r1, [sp, #40]	; 0x28
900090e8:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
900090ea:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
900090ee:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090f2:	f89d 2024 	ldrb.w	r2, [sp, #36]	; 0x24
900090f6:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900090f8:	f89d 2020 	ldrb.w	r2, [sp, #32]
900090fc:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
900090fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90009102:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90009106:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000910a:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000910c:	f89d 3018 	ldrb.w	r3, [sp, #24]
90009110:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90009114:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
90009118:	f844 3c18 	str.w	r3, [r4, #-24]
}
9000911c:	b013      	add	sp, #76	; 0x4c
9000911e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90009122:	f504 64fb 	add.w	r4, r4, #2008	; 0x7d8
90009126:	e769      	b.n	90008ffc <JPEG_Set_HuffDC_Mem+0x28>

90009128 <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
90009128:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
9000912c:	6804      	ldr	r4, [r0, #0]
{
9000912e:	f6ad 0d3c 	subw	sp, sp, #2108	; 0x83c
90009132:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
90009134:	f504 63a0 	add.w	r3, r4, #1280	; 0x500
90009138:	429a      	cmp	r2, r3
9000913a:	d042      	beq.n	900091c2 <JPEG_Set_HuffAC_Mem+0x9a>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
9000913c:	f504 63cc 	add.w	r3, r4, #1632	; 0x660
90009140:	429a      	cmp	r2, r3
90009142:	d004      	beq.n	9000914e <JPEG_Set_HuffAC_Mem+0x26>
      return HAL_ERROR; /* Huffman Table overflow error*/
90009144:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90009146:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
9000914a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
9000914e:	f204 74a4 	addw	r4, r4, #1956	; 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
90009152:	4628      	mov	r0, r5
90009154:	466b      	mov	r3, sp
90009156:	f20d 4234 	addw	r2, sp, #1076	; 0x434
9000915a:	a901      	add	r1, sp, #4
9000915c:	f7ff fec2 	bl	90008ee4 <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90009160:	2800      	cmp	r0, #0
90009162:	d1f0      	bne.n	90009146 <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
90009164:	9b00      	ldr	r3, [sp, #0]
90009166:	b37b      	cbz	r3, 900091c8 <JPEG_Set_HuffAC_Mem+0xa0>
90009168:	330f      	adds	r3, #15
9000916a:	f20d 4734 	addw	r7, sp, #1076	; 0x434
9000916e:	f10d 0c04 	add.w	ip, sp, #4
90009172:	f105 020f 	add.w	r2, r5, #15
90009176:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000917a:	ae42      	add	r6, sp, #264	; 0x108
9000917c:	e011      	b.n	900091a2 <JPEG_Set_HuffAC_Mem+0x7a>
      l = (msb * 10UL) + lsb - 1UL;
9000917e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
90009182:	2ba1      	cmp	r3, #161	; 0xa1
90009184:	d8de      	bhi.n	90009144 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009186:	f81c 5b01 	ldrb.w	r5, [ip], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000918a:	eb06 0883 	add.w	r8, r6, r3, lsl #2
9000918e:	f857 9b04 	ldr.w	r9, [r7], #4
  while (k < lastK)
90009192:	4596      	cmp	lr, r2
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90009194:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90009198:	4631      	mov	r1, r6
9000919a:	f8c8 90a4 	str.w	r9, [r8, #164]	; 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000919e:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
900091a0:	d013      	beq.n	900091ca <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
900091a2:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
900091a6:	23a0      	movs	r3, #160	; 0xa0
    if (l == 0UL)
900091a8:	2900      	cmp	r1, #0
900091aa:	d0ec      	beq.n	90009186 <JPEG_Set_HuffAC_Mem+0x5e>
      msb = (l & 0xF0UL) >> 4;
900091ac:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
900091ae:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900091b2:	29f0      	cmp	r1, #240	; 0xf0
      l = (msb * 10UL) + lsb - 1UL;
900091b4:	eb05 0585 	add.w	r5, r5, r5, lsl #2
900091b8:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
900091bc:	d1df      	bne.n	9000917e <JPEG_Set_HuffAC_Mem+0x56>
      l = 161;
900091be:	23a1      	movs	r3, #161	; 0xa1
900091c0:	e7e1      	b.n	90009186 <JPEG_Set_HuffAC_Mem+0x5e>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900091c2:	f204 6444 	addw	r4, r4, #1604	; 0x644
900091c6:	e7c4      	b.n	90009152 <JPEG_Set_HuffAC_Mem+0x2a>
900091c8:	a942      	add	r1, sp, #264	; 0x108
      *addressDef = 0x0FFF0FFF;
900091ca:	f06f 23f0 	mvn.w	r3, #4026593280	; 0xf000f000
    *addressDef = 0x0FD10FD0;
900091ce:	4a1a      	ldr	r2, [pc, #104]	; (90009238 <JPEG_Set_HuffAC_Mem+0x110>)
900091d0:	eba1 0c81 	sub.w	ip, r1, r1, lsl #2
900091d4:	f10d 0566 	add.w	r5, sp, #102	; 0x66
      *addressDef = 0x0FFF0FFF;
900091d8:	6023      	str	r3, [r4, #0]
900091da:	6063      	str	r3, [r4, #4]
900091dc:	f50c 7e4a 	add.w	lr, ip, #808	; 0x328
900091e0:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
900091e2:	f103 33d3 	add.w	r3, r3, #3553874899	; 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
900091e6:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
900091e8:	f50c 7c49 	add.w	ip, ip, #804	; 0x324
900091ec:	f103 232c 	add.w	r3, r3, #738208768	; 0x2c002c00
900091f0:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
900091f2:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
900091f6:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
900091f8:	f103 1302 	add.w	r3, r3, #131074	; 0x20002
900091fc:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
900091fe:	f891 20a1 	ldrb.w	r2, [r1, #161]	; 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009202:	f891 30a0 	ldrb.w	r3, [r1, #160]	; 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009206:	0212      	lsls	r2, r2, #8
90009208:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000920c:	021b      	lsls	r3, r3, #8
9000920e:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009212:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
    while (i > 1UL)
90009216:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009218:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000921c:	433a      	orrs	r2, r7
    while (i > 1UL)
9000921e:	428d      	cmp	r5, r1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90009220:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
90009224:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90009228:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
9000922c:	d1e7      	bne.n	900091fe <JPEG_Set_HuffAC_Mem+0xd6>
}
9000922e:	f60d 0d3c 	addw	sp, sp, #2108	; 0x83c
90009232:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90009236:	bf00      	nop
90009238:	0fd10fd0 	.word	0x0fd10fd0

9000923c <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
9000923c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000923e:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
90009242:	6543      	str	r3, [r0, #84]	; 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009244:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009246:	f003 0303 	and.w	r3, r3, #3
9000924a:	2b02      	cmp	r3, #2
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
9000924c:	6803      	ldr	r3, [r0, #0]
9000924e:	685a      	ldr	r2, [r3, #4]
90009250:	bf0c      	ite	eq
90009252:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
90009256:	f022 0208 	bicne.w	r2, r2, #8
9000925a:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000925c:	681a      	ldr	r2, [r3, #0]
9000925e:	f022 0201 	bic.w	r2, r2, #1
90009262:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009264:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009266:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000926a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
9000926c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000926e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
90009272:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009274:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009276:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
9000927a:	631a      	str	r2, [r3, #48]	; 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000927c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000927e:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009282:	639a      	str	r2, [r3, #56]	; 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
90009284:	681a      	ldr	r2, [r3, #0]
90009286:	f042 0201 	orr.w	r2, r2, #1
9000928a:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000928c:	6d42      	ldr	r2, [r0, #84]	; 0x54
9000928e:	f002 020c 	and.w	r2, r2, #12
90009292:	2a08      	cmp	r2, #8
90009294:	d00a      	beq.n	900092ac <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009296:	6d42      	ldr	r2, [r0, #84]	; 0x54
90009298:	f002 020c 	and.w	r2, r2, #12
9000929c:	2a0c      	cmp	r2, #12
9000929e:	d000      	beq.n	900092a2 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
900092a0:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900092a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900092a4:	f042 0260 	orr.w	r2, r2, #96	; 0x60
900092a8:	631a      	str	r2, [r3, #48]	; 0x30
}
900092aa:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
900092ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
900092ae:	f042 026e 	orr.w	r2, r2, #110	; 0x6e
900092b2:	631a      	str	r2, [r3, #48]	; 0x30
900092b4:	4770      	bx	lr
900092b6:	bf00      	nop

900092b8 <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900092b8:	6b01      	ldr	r1, [r0, #48]	; 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900092ba:	6a82      	ldr	r2, [r0, #40]	; 0x28
{
900092bc:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900092be:	6a8d      	ldr	r5, [r1, #40]	; 0x28
{
900092c0:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900092c2:	42aa      	cmp	r2, r5
900092c4:	d32d      	bcc.n	90009322 <JPEG_DMA_StartProcess+0x6a>
900092c6:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900092c8:	6b40      	ldr	r0, [r0, #52]	; 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900092ca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
900092cc:	6a86      	ldr	r6, [r0, #40]	; 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
900092ce:	42b3      	cmp	r3, r6
900092d0:	d327      	bcc.n	90009322 <JPEG_DMA_StartProcess+0x6a>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900092d2:	4f1b      	ldr	r7, [pc, #108]	; (90009340 <JPEG_DMA_StartProcess+0x88>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900092d4:	f8df c074 	ldr.w	ip, [pc, #116]	; 9000934c <JPEG_DMA_StartProcess+0x94>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
900092d8:	654f      	str	r7, [r1, #84]	; 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
900092da:	f8c1 c044 	str.w	ip, [r1, #68]	; 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900092de:	4919      	ldr	r1, [pc, #100]	; (90009344 <JPEG_DMA_StartProcess+0x8c>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
900092e0:	6547      	str	r7, [r0, #84]	; 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
900092e2:	6441      	str	r1, [r0, #68]	; 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
900092e4:	4918      	ldr	r1, [pc, #96]	; (90009348 <JPEG_DMA_StartProcess+0x90>)
900092e6:	6581      	str	r1, [r0, #88]	; 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
900092e8:	b1a5      	cbz	r5, 90009314 <JPEG_DMA_StartProcess+0x5c>
900092ea:	b19e      	cbz	r6, 90009314 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900092ec:	fbb2 f1f5 	udiv	r1, r2, r5
900092f0:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092f4:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900092f6:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092f8:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900092fa:	62a2      	str	r2, [r4, #40]	; 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900092fc:	3144      	adds	r1, #68	; 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
900092fe:	fbb3 f2f6 	udiv	r2, r3, r6
90009302:	fb06 3212 	mls	r2, r6, r2, r3
90009306:	1a9b      	subs	r3, r3, r2
90009308:	62e3      	str	r3, [r4, #44]	; 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000930a:	9500      	str	r5, [sp, #0]
9000930c:	69e2      	ldr	r2, [r4, #28]
9000930e:	f001 fbb5 	bl	9000aa7c <HAL_MDMA_Start_IT>
90009312:	b148      	cbz	r0, 90009328 <JPEG_DMA_StartProcess+0x70>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009314:	6d23      	ldr	r3, [r4, #80]	; 0x50
    return HAL_ERROR;
90009316:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009318:	f043 0304 	orr.w	r3, r3, #4
9000931c:	6523      	str	r3, [r4, #80]	; 0x50
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
9000931e:	b003      	add	sp, #12
90009320:	bdf0      	pop	{r4, r5, r6, r7, pc}
    return HAL_ERROR;
90009322:	2001      	movs	r0, #1
}
90009324:	b003      	add	sp, #12
90009326:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009328:	6822      	ldr	r2, [r4, #0]
9000932a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000932c:	69a1      	ldr	r1, [r4, #24]
9000932e:	3240      	adds	r2, #64	; 0x40
90009330:	9500      	str	r5, [sp, #0]
90009332:	6b20      	ldr	r0, [r4, #48]	; 0x30
90009334:	f001 fba2 	bl	9000aa7c <HAL_MDMA_Start_IT>
90009338:	2800      	cmp	r0, #0
9000933a:	d0f3      	beq.n	90009324 <JPEG_DMA_StartProcess+0x6c>
9000933c:	e7ea      	b.n	90009314 <JPEG_DMA_StartProcess+0x5c>
9000933e:	bf00      	nop
90009340:	90009871 	.word	0x90009871
90009344:	90009ae9 	.word	0x90009ae9
90009348:	90009b69 	.word	0x90009b69
9000934c:	9000989d 	.word	0x9000989d

90009350 <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009350:	6803      	ldr	r3, [r0, #0]
90009352:	685a      	ldr	r2, [r3, #4]
90009354:	f002 0203 	and.w	r2, r2, #3
90009358:	2a02      	cmp	r2, #2
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
9000935a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000935e:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
90009360:	f000 8094 	beq.w	9000948c <HAL_JPEG_GetInfo.part.0+0x13c>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009364:	685c      	ldr	r4, [r3, #4]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009366:	685a      	ldr	r2, [r3, #4]
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
90009368:	f014 0403 	ands.w	r4, r4, #3
9000936c:	d172      	bne.n	90009454 <HAL_JPEG_GetInfo.part.0+0x104>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000936e:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009370:	600c      	str	r4, [r1, #0]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009372:	608a      	str	r2, [r1, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90009374:	68da      	ldr	r2, [r3, #12]
90009376:	0c12      	lsrs	r2, r2, #16
90009378:	60ca      	str	r2, [r1, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
9000937a:	4a5f      	ldr	r2, [pc, #380]	; (900094f8 <HAL_JPEG_GetInfo.part.0+0x1a8>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
9000937c:	f103 0c50 	add.w	ip, r3, #80	; 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
90009380:	f8c9 4004 	str.w	r4, [r9, #4]
  uint32_t quality = 0;
90009384:	2600      	movs	r6, #0
90009386:	f102 0540 	add.w	r5, r2, #64	; 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
9000938a:	f04f 0e64 	mov.w	lr, #100	; 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
9000938e:	f241 3488 	movw	r4, #5000	; 0x1388
90009392:	e033      	b.n	900093fc <HAL_JPEG_GetInfo.part.0+0xac>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009394:	f892 8001 	ldrb.w	r8, [r2, #1]
90009398:	fb0e f707 	mul.w	r7, lr, r7
9000939c:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
9000939e:	f811 8008 	ldrb.w	r8, [r1, r8]
900093a2:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900093a6:	2f64      	cmp	r7, #100	; 0x64
900093a8:	d961      	bls.n	9000946e <HAL_JPEG_GetInfo.part.0+0x11e>
          quality += 5000UL / scale;
900093aa:	fbb4 f7f7 	udiv	r7, r4, r7
900093ae:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900093b0:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
900093b4:	2f01      	cmp	r7, #1
900093b6:	d03d      	beq.n	90009434 <HAL_JPEG_GetInfo.part.0+0xe4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900093b8:	f892 8002 	ldrb.w	r8, [r2, #2]
900093bc:	fb0e f707 	mul.w	r7, lr, r7
900093c0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
900093c2:	f811 8008 	ldrb.w	r8, [r1, r8]
900093c6:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
900093ca:	2f64      	cmp	r7, #100	; 0x64
900093cc:	d94a      	bls.n	90009464 <HAL_JPEG_GetInfo.part.0+0x114>
          quality += 5000UL / scale;
900093ce:	fbb4 f7f7 	udiv	r7, r4, r7
900093d2:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
900093d4:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
900093d6:	2b01      	cmp	r3, #1
900093d8:	d030      	beq.n	9000943c <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900093da:	78d7      	ldrb	r7, [r2, #3]
900093dc:	fb0e f303 	mul.w	r3, lr, r3
900093e0:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
900093e2:	5dcf      	ldrb	r7, [r1, r7]
900093e4:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
900093e8:	2b64      	cmp	r3, #100	; 0x64
900093ea:	d94a      	bls.n	90009482 <HAL_JPEG_GetInfo.part.0+0x132>
          quality += 5000UL / scale;
900093ec:	fbb4 f3f3 	udiv	r3, r4, r3
900093f0:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900093f2:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
900093f4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
900093f8:	4295      	cmp	r5, r2
900093fa:	d025      	beq.n	90009448 <HAL_JPEG_GetInfo.part.0+0xf8>
    quantRow = *tableAddress;
900093fc:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009400:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90009402:	2f01      	cmp	r7, #1
90009404:	d02c      	beq.n	90009460 <HAL_JPEG_GetInfo.part.0+0x110>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90009406:	f892 8000 	ldrb.w	r8, [r2]
9000940a:	fb0e f707 	mul.w	r7, lr, r7
9000940e:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
90009410:	f811 8008 	ldrb.w	r8, [r1, r8]
90009414:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90009418:	2f64      	cmp	r7, #100	; 0x64
9000941a:	d92d      	bls.n	90009478 <HAL_JPEG_GetInfo.part.0+0x128>
          quality += 5000UL / scale;
9000941c:	fbb4 f7f7 	udiv	r7, r4, r7
90009420:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009422:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90009426:	2f01      	cmp	r7, #1
90009428:	d1b4      	bne.n	90009394 <HAL_JPEG_GetInfo.part.0+0x44>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
9000942a:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
9000942e:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
90009430:	2f01      	cmp	r7, #1
90009432:	d1c1      	bne.n	900093b8 <HAL_JPEG_GetInfo.part.0+0x68>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90009434:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90009436:	3664      	adds	r6, #100	; 0x64
      if (quantVal == 1UL)
90009438:	2b01      	cmp	r3, #1
9000943a:	d1ce      	bne.n	900093da <HAL_JPEG_GetInfo.part.0+0x8a>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
9000943c:	3204      	adds	r2, #4
        quality += 100UL;
9000943e:	3664      	adds	r6, #100	; 0x64
    tableAddress ++;
90009440:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90009444:	4295      	cmp	r5, r2
90009446:	d1d9      	bne.n	900093fc <HAL_JPEG_GetInfo.part.0+0xac>
  }

  return (quality / 64UL);
90009448:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
9000944a:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
9000944c:	f8c9 6010 	str.w	r6, [r9, #16]
}
90009450:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90009454:	f002 0203 	and.w	r2, r2, #3
90009458:	2a03      	cmp	r2, #3
9000945a:	d14a      	bne.n	900094f2 <HAL_JPEG_GetInfo.part.0+0x1a2>
9000945c:	2430      	movs	r4, #48	; 0x30
9000945e:	e016      	b.n	9000948e <HAL_JPEG_GetInfo.part.0+0x13e>
        quality += 100UL;
90009460:	3664      	adds	r6, #100	; 0x64
90009462:	e7de      	b.n	90009422 <HAL_JPEG_GetInfo.part.0+0xd2>
          quality += (200UL - scale) / 2UL;
90009464:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009468:	eb06 0657 	add.w	r6, r6, r7, lsr #1
9000946c:	e7b2      	b.n	900093d4 <HAL_JPEG_GetInfo.part.0+0x84>
9000946e:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
90009472:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009476:	e79b      	b.n	900093b0 <HAL_JPEG_GetInfo.part.0+0x60>
90009478:	f1c7 07c8 	rsb	r7, r7, #200	; 0xc8
9000947c:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90009480:	e7cf      	b.n	90009422 <HAL_JPEG_GetInfo.part.0+0xd2>
90009482:	f1c3 03c8 	rsb	r3, r3, #200	; 0xc8
90009486:	eb06 0653 	add.w	r6, r6, r3, lsr #1
9000948a:	e7b2      	b.n	900093f2 <HAL_JPEG_GetInfo.part.0+0xa2>
9000948c:	2410      	movs	r4, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
9000948e:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90009490:	f8c9 4000 	str.w	r4, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90009494:	0c12      	lsrs	r2, r2, #16
90009496:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
9000949a:	68da      	ldr	r2, [r3, #12]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
9000949c:	691d      	ldr	r5, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
9000949e:	695f      	ldr	r7, [r3, #20]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900094a0:	0c12      	lsrs	r2, r2, #16
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900094a2:	699e      	ldr	r6, [r3, #24]
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900094a4:	f017 0ff0 	tst.w	r7, #240	; 0xf0
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900094a8:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
900094ac:	ea4f 1616 	mov.w	r6, r6, lsr #4
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
900094b0:	ea4f 1215 	mov.w	r2, r5, lsr #4
900094b4:	f3c5 1503 	ubfx	r5, r5, #4, #4
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
900094b8:	ea4f 1c17 	mov.w	ip, r7, lsr #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900094bc:	d108      	bne.n	900094d0 <HAL_JPEG_GetInfo.part.0+0x180>
900094be:	2d01      	cmp	r5, #1
900094c0:	d106      	bne.n	900094d0 <HAL_JPEG_GetInfo.part.0+0x180>
900094c2:	f016 0f0f 	tst.w	r6, #15
900094c6:	bf0c      	ite	eq
900094c8:	2401      	moveq	r4, #1
900094ca:	2400      	movne	r4, #0
900094cc:	0064      	lsls	r4, r4, #1
900094ce:	e754      	b.n	9000937a <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900094d0:	ea42 020c 	orr.w	r2, r2, ip
900094d4:	f012 040f 	ands.w	r4, r2, #15
900094d8:	f43f af4f 	beq.w	9000937a <HAL_JPEG_GetInfo.part.0+0x2a>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
900094dc:	ea4c 0206 	orr.w	r2, ip, r6
900094e0:	f3c2 0203 	ubfx	r2, r2, #0, #4
900094e4:	2d03      	cmp	r5, #3
900094e6:	bf08      	it	eq
900094e8:	2a00      	cmpeq	r2, #0
900094ea:	bf0c      	ite	eq
900094ec:	2401      	moveq	r4, #1
900094ee:	2400      	movne	r4, #0
900094f0:	e743      	b.n	9000937a <HAL_JPEG_GetInfo.part.0+0x2a>
    return HAL_ERROR;
900094f2:	2001      	movs	r0, #1
}
900094f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900094f8:	9002a0f4 	.word	0x9002a0f4

900094fc <HAL_JPEG_Init>:
  if (hjpeg == NULL)
900094fc:	2800      	cmp	r0, #0
900094fe:	f000 810b 	beq.w	90009718 <HAL_JPEG_Init+0x21c>
{
90009502:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90009504:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
90009508:	4604      	mov	r4, r0
9000950a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000950e:	2b00      	cmp	r3, #0
90009510:	f000 80fd 	beq.w	9000970e <HAL_JPEG_Init+0x212>
  __HAL_JPEG_ENABLE(hjpeg);
90009514:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90009516:	2102      	movs	r1, #2
  hjpeg->QuantTable2 = NULL;
90009518:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
9000951a:	4880      	ldr	r0, [pc, #512]	; (9000971c <HAL_JPEG_Init+0x220>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
9000951c:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90009520:	6b11      	ldr	r1, [r2, #48]	; 0x30
90009522:	f041 0101 	orr.w	r1, r1, #1
90009526:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009528:	6811      	ldr	r1, [r2, #0]
9000952a:	f021 0101 	bic.w	r1, r1, #1
9000952e:	6011      	str	r1, [r2, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009530:	6b11      	ldr	r1, [r2, #48]	; 0x30
90009532:	f021 017e 	bic.w	r1, r1, #126	; 0x7e
90009536:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90009538:	6b11      	ldr	r1, [r2, #48]	; 0x30
9000953a:	f441 5100 	orr.w	r1, r1, #8192	; 0x2000
9000953e:	6311      	str	r1, [r2, #48]	; 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90009540:	6b11      	ldr	r1, [r2, #48]	; 0x30
90009542:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
90009546:	6311      	str	r1, [r2, #48]	; 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009548:	6b91      	ldr	r1, [r2, #56]	; 0x38
9000954a:	f041 0160 	orr.w	r1, r1, #96	; 0x60
9000954e:	6391      	str	r1, [r2, #56]	; 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009550:	4973      	ldr	r1, [pc, #460]	; (90009720 <HAL_JPEG_Init+0x224>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90009552:	63e0      	str	r0, [r4, #60]	; 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009554:	2001      	movs	r0, #1
  hjpeg->QuantTable3 = NULL;
90009556:	64a3      	str	r3, [r4, #72]	; 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90009558:	e9c4 1310 	strd	r1, r3, [r4, #64]	; 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
9000955c:	f8c2 336c 	str.w	r3, [r2, #876]	; 0x36c
90009560:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
90009564:	4b6f      	ldr	r3, [pc, #444]	; (90009724 <HAL_JPEG_Init+0x228>)
90009566:	f8c2 0368 	str.w	r0, [r2, #872]	; 0x368
9000956a:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
9000956e:	486e      	ldr	r0, [pc, #440]	; (90009728 <HAL_JPEG_Init+0x22c>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009570:	f8c2 3360 	str.w	r3, [r2, #864]	; 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009574:	4b6d      	ldr	r3, [pc, #436]	; (9000972c <HAL_JPEG_Init+0x230>)
90009576:	f8c2 0378 	str.w	r0, [r2, #888]	; 0x378
9000957a:	496d      	ldr	r1, [pc, #436]	; (90009730 <HAL_JPEG_Init+0x234>)
9000957c:	f8c2 3374 	str.w	r3, [r2, #884]	; 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009580:	4b6c      	ldr	r3, [pc, #432]	; (90009734 <HAL_JPEG_Init+0x238>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90009582:	f8c2 1370 	str.w	r1, [r2, #880]	; 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90009586:	486c      	ldr	r0, [pc, #432]	; (90009738 <HAL_JPEG_Init+0x23c>)
90009588:	f8c2 3388 	str.w	r3, [r2, #904]	; 0x388
9000958c:	496b      	ldr	r1, [pc, #428]	; (9000973c <HAL_JPEG_Init+0x240>)
9000958e:	4b6c      	ldr	r3, [pc, #432]	; (90009740 <HAL_JPEG_Init+0x244>)
90009590:	f8c2 0384 	str.w	r0, [r2, #900]	; 0x384
90009594:	f8c2 1380 	str.w	r1, [r2, #896]	; 0x380
90009598:	f8c2 337c 	str.w	r3, [r2, #892]	; 0x37c
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
9000959c:	f64f 23f9 	movw	r3, #64249	; 0xfaf9
  value = *address & 0xFFFF0000U;
900095a0:	f8d2 042c 	ldr.w	r0, [r2, #1068]	; 0x42c
900095a4:	4967      	ldr	r1, [pc, #412]	; (90009744 <HAL_JPEG_Init+0x248>)
900095a6:	4001      	ands	r1, r0
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
900095a8:	f502 6085 	add.w	r0, r2, #1064	; 0x428
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
900095ac:	430b      	orrs	r3, r1
  *address = value;
900095ae:	4966      	ldr	r1, [pc, #408]	; (90009748 <HAL_JPEG_Init+0x24c>)
900095b0:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
900095b4:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
900095b8:	f891 30ae 	ldrb.w	r3, [r1, #174]	; 0xae
  while (index > 3UL)
900095bc:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900095be:	f891 e0b3 	ldrb.w	lr, [r1, #179]	; 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
900095c2:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
900095c4:	f891 c0b0 	ldrb.w	ip, [r1, #176]	; 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
900095c8:	f891 50b1 	ldrb.w	r5, [r1, #177]	; 0xb1
  while (index > 3UL)
900095cc:	42b1      	cmp	r1, r6
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900095ce:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
900095d2:	ea43 030c 	orr.w	r3, r3, ip
900095d6:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
900095da:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
900095de:	d1eb      	bne.n	900095b8 <HAL_JPEG_Init+0xbc>
  value = *address & 0x0000FFFFU;
900095e0:	f8d2 342c 	ldr.w	r3, [r2, #1068]	; 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900095e4:	f04f 3101 	mov.w	r1, #16843009	; 0x1010101
  value = *address & 0xFFFF0000U;
900095e8:	4856      	ldr	r0, [pc, #344]	; (90009744 <HAL_JPEG_Init+0x248>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
900095ea:	2501      	movs	r5, #1
  value = *address & 0x0000FFFFU;
900095ec:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
900095ee:	f043 7340 	orr.w	r3, r3, #50331648	; 0x3000000
  *address = value;
900095f2:	f8c2 342c 	str.w	r3, [r2, #1068]	; 0x42c
  value = *address & 0xFFFF0000U;
900095f6:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
900095fa:	4003      	ands	r3, r0
  *address = value;
900095fc:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009600:	f8c2 5438 	str.w	r5, [r2, #1080]	; 0x438
90009604:	f8c2 1434 	str.w	r1, [r2, #1076]	; 0x434
90009608:	f8c2 1430 	str.w	r1, [r2, #1072]	; 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
9000960c:	f640 310a 	movw	r1, #2826	; 0xb0a
  value = *address & 0x0000FFFFUL;
90009610:	f8d2 343c 	ldr.w	r3, [r2, #1084]	; 0x43c
90009614:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90009616:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000961a:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
  value = *address & 0xFFFF0000UL;
9000961e:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
90009622:	4003      	ands	r3, r0
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90009624:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009626:	4b49      	ldr	r3, [pc, #292]	; (9000974c <HAL_JPEG_Init+0x250>)
  *address = value;
90009628:	f8c2 1448 	str.w	r1, [r2, #1096]	; 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
9000962c:	f247 7102 	movw	r1, #30466	; 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009630:	f8c2 3444 	str.w	r3, [r2, #1092]	; 0x444
90009634:	f1a3 3304 	sub.w	r3, r3, #67372036	; 0x4040404
90009638:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
  value = *address & 0x0000FFFFU;
9000963c:	f8d2 3448 	ldr.w	r3, [r2, #1096]	; 0x448
90009640:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90009642:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
  *address = value;
90009646:	f8c2 3448 	str.w	r3, [r2, #1096]	; 0x448
  value = *address & 0xFFFF0000U;
9000964a:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
9000964e:	4003      	ands	r3, r0
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009650:	483f      	ldr	r0, [pc, #252]	; (90009750 <HAL_JPEG_Init+0x254>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90009652:	4319      	orrs	r1, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009654:	4b3f      	ldr	r3, [pc, #252]	; (90009754 <HAL_JPEG_Init+0x258>)
  *address = value;
90009656:	f8c2 1458 	str.w	r1, [r2, #1112]	; 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
9000965a:	493f      	ldr	r1, [pc, #252]	; (90009758 <HAL_JPEG_Init+0x25c>)
9000965c:	f8c2 0454 	str.w	r0, [r2, #1108]	; 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90009660:	f502 609f 	add.w	r0, r2, #1272	; 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90009664:	f8c2 1450 	str.w	r1, [r2, #1104]	; 0x450
90009668:	f8c2 344c 	str.w	r3, [r2, #1100]	; 0x44c
  value = *address & 0x0000FFFFUL;
9000966c:	f8d2 3458 	ldr.w	r3, [r2, #1112]	; 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009670:	493a      	ldr	r1, [pc, #232]	; (9000975c <HAL_JPEG_Init+0x260>)
  value = *address & 0x0000FFFFUL;
90009672:	b29b      	uxth	r3, r3
90009674:	f1a1 06a0 	sub.w	r6, r1, #160	; 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90009678:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
  *address = value;
9000967c:	f8c2 3458 	str.w	r3, [r2, #1112]	; 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90009680:	f891 30b0 	ldrb.w	r3, [r1, #176]	; 0xb0
  while (index > 3UL)
90009684:	3904      	subs	r1, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90009686:	f891 50b5 	ldrb.w	r5, [r1, #181]	; 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
9000968a:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
9000968c:	f891 e0b2 	ldrb.w	lr, [r1, #178]	; 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009690:	f891 c0b3 	ldrb.w	ip, [r1, #179]	; 0xb3
  while (index > 3UL)
90009694:	42b1      	cmp	r1, r6
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90009696:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
9000969a:	ea43 030e 	orr.w	r3, r3, lr
9000969e:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
900096a2:	f840 3904 	str.w	r3, [r0], #-4
  while (index > 3UL)
900096a6:	d1eb      	bne.n	90009680 <HAL_JPEG_Init+0x184>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
900096a8:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
900096ac:	4926      	ldr	r1, [pc, #152]	; (90009748 <HAL_JPEG_Init+0x24c>)
900096ae:	4620      	mov	r0, r4
900096b0:	f7ff fd3a 	bl	90009128 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
900096b4:	b118      	cbz	r0, 900096be <HAL_JPEG_Init+0x1c2>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
900096b6:	2301      	movs	r3, #1
    return HAL_ERROR;
900096b8:	4618      	mov	r0, r3
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
900096ba:	6523      	str	r3, [r4, #80]	; 0x50
}
900096bc:	bd70      	pop	{r4, r5, r6, pc}
                              (hjpeg->Instance->HUFFENC_AC1));
900096be:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
900096c0:	4620      	mov	r0, r4
900096c2:	4926      	ldr	r1, [pc, #152]	; (9000975c <HAL_JPEG_Init+0x260>)
900096c4:	f502 62cc 	add.w	r2, r2, #1632	; 0x660
900096c8:	f7ff fd2e 	bl	90009128 <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
900096cc:	2800      	cmp	r0, #0
900096ce:	d1f2      	bne.n	900096b6 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC0);
900096d0:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
900096d2:	4620      	mov	r0, r4
900096d4:	4922      	ldr	r1, [pc, #136]	; (90009760 <HAL_JPEG_Init+0x264>)
900096d6:	f502 62f8 	add.w	r2, r2, #1984	; 0x7c0
900096da:	f7ff fc7b 	bl	90008fd4 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
900096de:	2800      	cmp	r0, #0
900096e0:	d1e9      	bne.n	900096b6 <HAL_JPEG_Init+0x1ba>
                              hjpeg->Instance->HUFFENC_DC1);
900096e2:	6822      	ldr	r2, [r4, #0]
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
900096e4:	4620      	mov	r0, r4
900096e6:	491f      	ldr	r1, [pc, #124]	; (90009764 <HAL_JPEG_Init+0x268>)
900096e8:	f502 62fc 	add.w	r2, r2, #2016	; 0x7e0
900096ec:	f7ff fc72 	bl	90008fd4 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
900096f0:	2800      	cmp	r0, #0
900096f2:	d1e0      	bne.n	900096b6 <HAL_JPEG_Init+0x1ba>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900096f4:	6822      	ldr	r2, [r4, #0]
  hjpeg->State = HAL_JPEG_STATE_READY;
900096f6:	2101      	movs	r1, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
900096f8:	6853      	ldr	r3, [r2, #4]
900096fa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
900096fe:	6053      	str	r3, [r2, #4]
  hjpeg->JpegInCount = 0;
90009700:	6220      	str	r0, [r4, #32]
  hjpeg->JpegOutCount = 0;
90009702:	6260      	str	r0, [r4, #36]	; 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90009704:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90009708:	6520      	str	r0, [r4, #80]	; 0x50
  hjpeg->Context = 0;
9000970a:	6560      	str	r0, [r4, #84]	; 0x54
}
9000970c:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
9000970e:	f880 204c 	strb.w	r2, [r0, #76]	; 0x4c
    HAL_JPEG_MspInit(hjpeg);
90009712:	f7f9 fdbb 	bl	9000328c <HAL_JPEG_MspInit>
90009716:	e6fd      	b.n	90009514 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90009718:	2001      	movs	r0, #1
}
9000971a:	4770      	bx	lr
9000971c:	9002a0b4 	.word	0x9002a0b4
90009720:	9002a03c 	.word	0x9002a03c
90009724:	01050100 	.word	0x01050100
90009728:	0b0a0908 	.word	0x0b0a0908
9000972c:	07060504 	.word	0x07060504
90009730:	03020100 	.word	0x03020100
90009734:	7d010000 	.word	0x7d010000
90009738:	04040505 	.word	0x04040505
9000973c:	03040203 	.word	0x03040203
90009740:	03010200 	.word	0x03010200
90009744:	ffff0000 	.word	0xffff0000
90009748:	90029f88 	.word	0x90029f88
9000974c:	09080706 	.word	0x09080706
90009750:	01000404 	.word	0x01000404
90009754:	04040201 	.word	0x04040201
90009758:	05070403 	.word	0x05070403
9000975c:	90029ed4 	.word	0x90029ed4
90009760:	9002a098 	.word	0x9002a098
90009764:	9002a07c 	.word	0x9002a07c

90009768 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009768:	2b00      	cmp	r3, #0
9000976a:	bf18      	it	ne
9000976c:	2900      	cmpne	r1, #0
9000976e:	d03b      	beq.n	900097e8 <HAL_JPEG_Decode_DMA+0x80>
{
90009770:	b570      	push	{r4, r5, r6, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90009772:	fab0 f580 	clz	r5, r0
90009776:	4604      	mov	r4, r0
90009778:	096d      	lsrs	r5, r5, #5
9000977a:	b330      	cbz	r0, 900097ca <HAL_JPEG_Decode_DMA+0x62>
  __HAL_LOCK(hjpeg);
9000977c:	f890 c04c 	ldrb.w	ip, [r0, #76]	; 0x4c
90009780:	f1bc 0f01 	cmp.w	ip, #1
90009784:	d02e      	beq.n	900097e4 <HAL_JPEG_Decode_DMA+0x7c>
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009786:	f890 c04d 	ldrb.w	ip, [r0, #77]	; 0x4d
  __HAL_LOCK(hjpeg);
9000978a:	f04f 0e01 	mov.w	lr, #1
  if (hjpeg->State == HAL_JPEG_STATE_READY)
9000978e:	45f4      	cmp	ip, lr
90009790:	fa5f f68c 	uxtb.w	r6, ip
  __HAL_LOCK(hjpeg);
90009794:	f880 e04c 	strb.w	lr, [r0, #76]	; 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90009798:	d119      	bne.n	900097ce <HAL_JPEG_Decode_DMA+0x66>
    hjpeg->InDataLength = InDataLength;
9000979a:	6282      	str	r2, [r0, #40]	; 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
9000979c:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
900097a0:	9b04      	ldr	r3, [sp, #16]
900097a2:	62c3      	str	r3, [r0, #44]	; 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
900097a4:	2304      	movs	r3, #4
900097a6:	f880 304d 	strb.w	r3, [r0, #77]	; 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
900097aa:	6d43      	ldr	r3, [r0, #84]	; 0x54
900097ac:	f023 030f 	bic.w	r3, r3, #15
900097b0:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
900097b2:	6d43      	ldr	r3, [r0, #84]	; 0x54
900097b4:	f043 030e 	orr.w	r3, r3, #14
900097b8:	6543      	str	r3, [r0, #84]	; 0x54
    hjpeg->JpegInCount = 0;
900097ba:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
900097bc:	6245      	str	r5, [r0, #36]	; 0x24
    JPEG_Init_Process(hjpeg);
900097be:	f7ff fd3d 	bl	9000923c <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
900097c2:	f7ff fd79 	bl	900092b8 <JPEG_DMA_StartProcess>
900097c6:	b930      	cbnz	r0, 900097d6 <HAL_JPEG_Decode_DMA+0x6e>
}
900097c8:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
900097ca:	2001      	movs	r0, #1
}
900097cc:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_BUSY;
900097ce:	2002      	movs	r0, #2
    __HAL_UNLOCK(hjpeg);
900097d0:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
}
900097d4:	bd70      	pop	{r4, r5, r6, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900097d6:	2306      	movs	r3, #6
      return HAL_ERROR;
900097d8:	4630      	mov	r0, r6
      __HAL_UNLOCK(hjpeg);
900097da:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
900097de:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
}
900097e2:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_LOCK(hjpeg);
900097e4:	2002      	movs	r0, #2
}
900097e6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
900097e8:	2001      	movs	r0, #1
}
900097ea:	4770      	bx	lr

900097ec <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900097ec:	6d43      	ldr	r3, [r0, #84]	; 0x54
900097ee:	f003 030c 	and.w	r3, r3, #12
900097f2:	2b0c      	cmp	r3, #12
900097f4:	d01a      	beq.n	9000982c <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900097f6:	6d43      	ldr	r3, [r0, #84]	; 0x54
900097f8:	f003 030c 	and.w	r3, r3, #12
900097fc:	2b08      	cmp	r3, #8
900097fe:	d001      	beq.n	90009804 <HAL_JPEG_Pause+0x18>
}
90009800:	2000      	movs	r0, #0
90009802:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009804:	07ca      	lsls	r2, r1, #31
90009806:	d41f      	bmi.n	90009848 <HAL_JPEG_Pause+0x5c>
90009808:	f04f 3cff 	mov.w	ip, #4294967295
9000980c:	f06f 0228 	mvn.w	r2, #40	; 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009810:	078b      	lsls	r3, r1, #30
90009812:	d504      	bpl.n	9000981e <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90009814:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009816:	4694      	mov	ip, r2
90009818:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
9000981c:	6543      	str	r3, [r0, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000981e:	6802      	ldr	r2, [r0, #0]
}
90009820:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90009822:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009824:	ea03 030c 	and.w	r3, r3, ip
90009828:	6313      	str	r3, [r2, #48]	; 0x30
}
9000982a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000982c:	07cb      	lsls	r3, r1, #31
9000982e:	d503      	bpl.n	90009838 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009830:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009832:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
90009836:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009838:	0789      	lsls	r1, r1, #30
9000983a:	d5e1      	bpl.n	90009800 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
9000983c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000983e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
90009842:	6543      	str	r3, [r0, #84]	; 0x54
}
90009844:	2000      	movs	r0, #0
90009846:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009848:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000984a:	f06f 0c06 	mvn.w	ip, #6
9000984e:	f06f 022e 	mvn.w	r2, #46	; 0x2e
90009852:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
90009856:	6543      	str	r3, [r0, #84]	; 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009858:	e7da      	b.n	90009810 <HAL_JPEG_Pause+0x24>
9000985a:	bf00      	nop

9000985c <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
9000985c:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
9000985e:	6282      	str	r2, [r0, #40]	; 0x28
}
90009860:	4770      	bx	lr
90009862:	bf00      	nop

90009864 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90009864:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90009866:	62c2      	str	r2, [r0, #44]	; 0x2c
}
90009868:	4770      	bx	lr
9000986a:	bf00      	nop

9000986c <HAL_JPEG_EncodeCpltCallback>:
9000986c:	4770      	bx	lr
9000986e:	bf00      	nop

90009870 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009870:	6c00      	ldr	r0, [r0, #64]	; 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90009872:	2101      	movs	r1, #1
{
90009874:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009876:	6803      	ldr	r3, [r0, #0]
90009878:	681a      	ldr	r2, [r3, #0]
9000987a:	f022 0201 	bic.w	r2, r2, #1
9000987e:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009880:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009882:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009886:	631a      	str	r2, [r3, #48]	; 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90009888:	f880 104d 	strb.w	r1, [r0, #77]	; 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000988c:	6d03      	ldr	r3, [r0, #80]	; 0x50
9000988e:	f043 0304 	orr.w	r3, r3, #4
90009892:	6503      	str	r3, [r0, #80]	; 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90009894:	f7f8 f80e 	bl	900018b4 <HAL_JPEG_ErrorCallback>
}
90009898:	bd08      	pop	{r3, pc}
9000989a:	bf00      	nop

9000989c <JPEG_MDMAInCpltCallback>:
{
9000989c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000989e:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900098a0:	f248 010c 	movw	r1, #32780	; 0x800c
{
900098a4:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900098a6:	6822      	ldr	r2, [r4, #0]
900098a8:	6b13      	ldr	r3, [r2, #48]	; 0x30
900098aa:	f023 037e 	bic.w	r3, r3, #126	; 0x7e
900098ae:	6313      	str	r3, [r2, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
900098b0:	6d63      	ldr	r3, [r4, #84]	; 0x54
900098b2:	400b      	ands	r3, r1
900098b4:	2b0c      	cmp	r3, #12
900098b6:	d001      	beq.n	900098bc <JPEG_MDMAInCpltCallback+0x20>
}
900098b8:	b003      	add	sp, #12
900098ba:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900098bc:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900098be:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900098c0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900098c2:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098c4:	6b21      	ldr	r1, [r4, #48]	; 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900098c6:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
900098ca:	6a8d      	ldr	r5, [r1, #40]	; 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900098cc:	1a9b      	subs	r3, r3, r2
900098ce:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
900098d0:	6a21      	ldr	r1, [r4, #32]
900098d2:	f7f7 ff7b 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
900098d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
900098d8:	42ab      	cmp	r3, r5
900098da:	d311      	bcc.n	90009900 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
900098dc:	b305      	cbz	r5, 90009920 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900098de:	fbb3 f2f5 	udiv	r2, r3, r5
900098e2:	fb05 3212 	mls	r2, r5, r2, r3
900098e6:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900098e8:	6d62      	ldr	r2, [r4, #84]	; 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
900098ea:	62a3      	str	r3, [r4, #40]	; 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
900098ec:	04d1      	lsls	r1, r2, #19
900098ee:	d400      	bmi.n	900098f2 <JPEG_MDMAInCpltCallback+0x56>
900098f0:	b963      	cbnz	r3, 9000990c <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
900098f2:	6822      	ldr	r2, [r4, #0]
900098f4:	6b13      	ldr	r3, [r2, #48]	; 0x30
900098f6:	f043 0360 	orr.w	r3, r3, #96	; 0x60
900098fa:	6313      	str	r3, [r2, #48]	; 0x30
}
900098fc:	b003      	add	sp, #12
900098fe:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009900:	b1cb      	cbz	r3, 90009936 <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
90009902:	0798      	lsls	r0, r3, #30
90009904:	d119      	bne.n	9000993a <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009906:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009908:	04d2      	lsls	r2, r2, #19
9000990a:	d4f2      	bmi.n	900098f2 <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
9000990c:	6822      	ldr	r2, [r4, #0]
9000990e:	2501      	movs	r5, #1
90009910:	69a1      	ldr	r1, [r4, #24]
90009912:	6b20      	ldr	r0, [r4, #48]	; 0x30
90009914:	3240      	adds	r2, #64	; 0x40
90009916:	9500      	str	r5, [sp, #0]
90009918:	f001 f8b0 	bl	9000aa7c <HAL_MDMA_Start_IT>
9000991c:	2800      	cmp	r0, #0
9000991e:	d0e8      	beq.n	900098f2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009920:	6d23      	ldr	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009922:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
90009924:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009926:	f043 0304 	orr.w	r3, r3, #4
9000992a:	6523      	str	r3, [r4, #80]	; 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000992c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009930:	f7f7 ffc0 	bl	900018b4 <HAL_JPEG_ErrorCallback>
        return;
90009934:	e7c0      	b.n	900098b8 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009936:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009938:	e7db      	b.n	900098f2 <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
9000993a:	f023 0303 	bic.w	r3, r3, #3
9000993e:	3304      	adds	r3, #4
90009940:	e7d2      	b.n	900098e8 <JPEG_MDMAInCpltCallback+0x4c>
90009942:	bf00      	nop

90009944 <JPEG_DMA_PollResidualData>:
{
90009944:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009946:	6802      	ldr	r2, [r0, #0]
90009948:	2610      	movs	r6, #16
{
9000994a:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000994c:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000994e:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
90009952:	d11d      	bne.n	90009990 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009954:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009956:	06df      	lsls	r7, r3, #27
90009958:	d51a      	bpl.n	90009990 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
9000995a:	6c53      	ldr	r3, [r2, #68]	; 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000995c:	69e7      	ldr	r7, [r4, #28]
9000995e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009960:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009962:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009964:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009966:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009968:	6a67      	ldr	r7, [r4, #36]	; 0x24
9000996a:	69e2      	ldr	r2, [r4, #28]
9000996c:	443a      	add	r2, r7
9000996e:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
90009970:	6a60      	ldr	r0, [r4, #36]	; 0x24
90009972:	69e2      	ldr	r2, [r4, #28]
90009974:	4402      	add	r2, r0
90009976:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
90009978:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000997a:	69e2      	ldr	r2, [r4, #28]
9000997c:	440a      	add	r2, r1
9000997e:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
90009980:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009982:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
        hjpeg->JpegOutCount += 4UL;
90009984:	3304      	adds	r3, #4
90009986:	6263      	str	r3, [r4, #36]	; 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009988:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000998a:	4293      	cmp	r3, r2
9000998c:	d021      	beq.n	900099d2 <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
9000998e:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
90009990:	3e01      	subs	r6, #1
90009992:	d1db      	bne.n	9000994c <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
90009994:	6d61      	ldr	r1, [r4, #84]	; 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009996:	6b53      	ldr	r3, [r2, #52]	; 0x34
90009998:	06d8      	lsls	r0, r3, #27
9000999a:	d501      	bpl.n	900099a0 <JPEG_DMA_PollResidualData+0x5c>
9000999c:	048b      	lsls	r3, r1, #18
9000999e:	d417      	bmi.n	900099d0 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900099a0:	6813      	ldr	r3, [r2, #0]
900099a2:	f023 0301 	bic.w	r3, r3, #1
900099a6:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
900099a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
900099aa:	b9eb      	cbnz	r3, 900099e8 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
900099ac:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
900099ae:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900099b0:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900099b2:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900099b4:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900099b8:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900099bc:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900099c0:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900099c2:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900099c4:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900099c6:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900099ca:	d00a      	beq.n	900099e2 <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900099cc:	f7ff ff4e 	bl	9000986c <HAL_JPEG_EncodeCpltCallback>
}
900099d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
900099d4:	4620      	mov	r0, r4
900099d6:	69e1      	ldr	r1, [r4, #28]
900099d8:	f7f7 ff18 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900099dc:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
900099de:	6265      	str	r5, [r4, #36]	; 0x24
900099e0:	e7d6      	b.n	90009990 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900099e2:	f7f7 ff69 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
900099e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900099e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
900099ea:	4620      	mov	r0, r4
900099ec:	69e1      	ldr	r1, [r4, #28]
900099ee:	f7f7 ff0d 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900099f2:	2300      	movs	r3, #0
900099f4:	6263      	str	r3, [r4, #36]	; 0x24
900099f6:	e7d9      	b.n	900099ac <JPEG_DMA_PollResidualData+0x68>

900099f8 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
900099f8:	6d43      	ldr	r3, [r0, #84]	; 0x54
900099fa:	f413 5f40 	tst.w	r3, #12288	; 0x3000
900099fe:	d028      	beq.n	90009a52 <HAL_JPEG_Resume+0x5a>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009a00:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009a02:	f003 030c 	and.w	r3, r3, #12
90009a06:	2b0c      	cmp	r3, #12
{
90009a08:	b570      	push	{r4, r5, r6, lr}
90009a0a:	4604      	mov	r4, r0
90009a0c:	b082      	sub	sp, #8
90009a0e:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009a10:	d007      	beq.n	90009a22 <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009a12:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009a14:	f003 030c 	and.w	r3, r3, #12
90009a18:	2b08      	cmp	r3, #8
90009a1a:	d037      	beq.n	90009a8c <HAL_JPEG_Resume+0x94>
  return HAL_OK;
90009a1c:	2000      	movs	r0, #0
}
90009a1e:	b002      	add	sp, #8
90009a20:	bd70      	pop	{r4, r5, r6, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009a22:	07c8      	lsls	r0, r1, #31
90009a24:	d417      	bmi.n	90009a56 <HAL_JPEG_Resume+0x5e>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009a26:	07a9      	lsls	r1, r5, #30
90009a28:	d5f8      	bpl.n	90009a1c <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009a2a:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009a2c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009a30:	6563      	str	r3, [r4, #84]	; 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009a32:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009a34:	041a      	lsls	r2, r3, #16
90009a36:	d453      	bmi.n	90009ae0 <HAL_JPEG_Resume+0xe8>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009a38:	6b60      	ldr	r0, [r4, #52]	; 0x34
90009a3a:	6a82      	ldr	r2, [r0, #40]	; 0x28
        if (xfrSize == 0UL)
90009a3c:	2a00      	cmp	r2, #0
90009a3e:	d13e      	bne.n	90009abe <HAL_JPEG_Resume+0xc6>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009a40:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a42:	2206      	movs	r2, #6
          return HAL_ERROR;
90009a44:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009a46:	f043 0304 	orr.w	r3, r3, #4
90009a4a:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009a4c:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          return HAL_ERROR;
90009a50:	e7e5      	b.n	90009a1e <HAL_JPEG_Resume+0x26>
    return HAL_ERROR;
90009a52:	2001      	movs	r0, #1
}
90009a54:	4770      	bx	lr
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009a56:	6d63      	ldr	r3, [r4, #84]	; 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009a58:	6b20      	ldr	r0, [r4, #48]	; 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009a5a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009a5e:	6a82      	ldr	r2, [r0, #40]	; 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009a60:	6563      	str	r3, [r4, #84]	; 0x54
      if (xfrSize == 0UL)
90009a62:	2a00      	cmp	r2, #0
90009a64:	d0ec      	beq.n	90009a40 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
90009a66:	6aa3      	ldr	r3, [r4, #40]	; 0x28
90009a68:	fbb3 f1f2 	udiv	r1, r3, r2
90009a6c:	fb02 3211 	mls	r2, r2, r1, r3
90009a70:	1a9b      	subs	r3, r3, r2
90009a72:	62a3      	str	r3, [r4, #40]	; 0x28
      if (hjpeg->InDataLength > 0UL)
90009a74:	2b00      	cmp	r3, #0
90009a76:	d0d6      	beq.n	90009a26 <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009a78:	6822      	ldr	r2, [r4, #0]
90009a7a:	2601      	movs	r6, #1
90009a7c:	3240      	adds	r2, #64	; 0x40
90009a7e:	9600      	str	r6, [sp, #0]
90009a80:	69a1      	ldr	r1, [r4, #24]
90009a82:	f000 fffb 	bl	9000aa7c <HAL_MDMA_Start_IT>
90009a86:	2800      	cmp	r0, #0
90009a88:	d0cd      	beq.n	90009a26 <HAL_JPEG_Resume+0x2e>
90009a8a:	e7d9      	b.n	90009a40 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90009a8c:	f011 0101 	ands.w	r1, r1, #1
90009a90:	d013      	beq.n	90009aba <HAL_JPEG_Resume+0xc2>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009a92:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009a94:	222e      	movs	r2, #46	; 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90009a96:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009a98:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
90009a9c:	6543      	str	r3, [r0, #84]	; 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90009a9e:	07ab      	lsls	r3, r5, #30
90009aa0:	d504      	bpl.n	90009aac <HAL_JPEG_Resume+0xb4>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009aa2:	6d63      	ldr	r3, [r4, #84]	; 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
90009aa4:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009aa6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
90009aaa:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009aac:	6822      	ldr	r2, [r4, #0]
  return HAL_OK;
90009aae:	2000      	movs	r0, #0
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
90009ab0:	6b13      	ldr	r3, [r2, #48]	; 0x30
90009ab2:	430b      	orrs	r3, r1
90009ab4:	6313      	str	r3, [r2, #48]	; 0x30
}
90009ab6:	b002      	add	sp, #8
90009ab8:	bd70      	pop	{r4, r5, r6, pc}
90009aba:	2228      	movs	r2, #40	; 0x28
90009abc:	e7ef      	b.n	90009a9e <HAL_JPEG_Resume+0xa6>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009abe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009ac0:	2501      	movs	r5, #1
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009ac2:	fbb3 f1f2 	udiv	r1, r3, r2
90009ac6:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009aca:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009acc:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009ace:	3144      	adds	r1, #68	; 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009ad0:	62e3      	str	r3, [r4, #44]	; 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009ad2:	9500      	str	r5, [sp, #0]
90009ad4:	69e2      	ldr	r2, [r4, #28]
90009ad6:	f000 ffd1 	bl	9000aa7c <HAL_MDMA_Start_IT>
90009ada:	2800      	cmp	r0, #0
90009adc:	d09e      	beq.n	90009a1c <HAL_JPEG_Resume+0x24>
90009ade:	e7af      	b.n	90009a40 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009ae0:	4620      	mov	r0, r4
90009ae2:	f7ff ff2f 	bl	90009944 <JPEG_DMA_PollResidualData>
90009ae6:	e799      	b.n	90009a1c <HAL_JPEG_Resume+0x24>

90009ae8 <JPEG_MDMAOutCpltCallback>:
{
90009ae8:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009aea:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009aec:	f248 010c 	movw	r1, #32780	; 0x800c
{
90009af0:	b083      	sub	sp, #12
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009af2:	6823      	ldr	r3, [r4, #0]
90009af4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009af6:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
90009afa:	631a      	str	r2, [r3, #48]	; 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009afc:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009afe:	400a      	ands	r2, r1
90009b00:	2a0c      	cmp	r2, #12
90009b02:	d001      	beq.n	90009b08 <JPEG_MDMAOutCpltCallback+0x20>
}
90009b04:	b003      	add	sp, #12
90009b06:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
90009b08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009b0a:	0692      	lsls	r2, r2, #26
90009b0c:	d505      	bpl.n	90009b1a <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009b0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009b10:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009b14:	631a      	str	r2, [r3, #48]	; 0x30
}
90009b16:	b003      	add	sp, #12
90009b18:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009b1a:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b1c:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009b1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90009b20:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b22:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009b24:	f3c2 0210 	ubfx	r2, r2, #0, #17
90009b28:	1a9b      	subs	r3, r3, r2
90009b2a:	6263      	str	r3, [r4, #36]	; 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b2c:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009b2e:	f7f7 fe6d 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009b32:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009b34:	049b      	lsls	r3, r3, #18
90009b36:	d501      	bpl.n	90009b3c <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009b38:	6823      	ldr	r3, [r4, #0]
90009b3a:	e7e8      	b.n	90009b0e <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009b3c:	6821      	ldr	r1, [r4, #0]
90009b3e:	2501      	movs	r5, #1
90009b40:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90009b42:	69e2      	ldr	r2, [r4, #28]
90009b44:	3144      	adds	r1, #68	; 0x44
90009b46:	6b60      	ldr	r0, [r4, #52]	; 0x34
90009b48:	9500      	str	r5, [sp, #0]
90009b4a:	f000 ff97 	bl	9000aa7c <HAL_MDMA_Start_IT>
90009b4e:	2800      	cmp	r0, #0
90009b50:	d0f2      	beq.n	90009b38 <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009b52:	6d23      	ldr	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b54:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
90009b56:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009b58:	f043 0304 	orr.w	r3, r3, #4
90009b5c:	6523      	str	r3, [r4, #80]	; 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009b5e:	f884 204d 	strb.w	r2, [r4, #77]	; 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90009b62:	f7f7 fea7 	bl	900018b4 <HAL_JPEG_ErrorCallback>
          return;
90009b66:	e7cd      	b.n	90009b04 <JPEG_MDMAOutCpltCallback+0x1c>

90009b68 <JPEG_MDMAOutAbortCallback>:
{
90009b68:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90009b6a:	6c04      	ldr	r4, [r0, #64]	; 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
90009b6c:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009b6e:	041a      	lsls	r2, r3, #16
90009b70:	d400      	bmi.n	90009b74 <JPEG_MDMAOutAbortCallback+0xc>
}
90009b72:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009b74:	6b63      	ldr	r3, [r4, #52]	; 0x34
90009b76:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009b78:	681b      	ldr	r3, [r3, #0]
90009b7a:	695b      	ldr	r3, [r3, #20]
90009b7c:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009b80:	1ad3      	subs	r3, r2, r3
90009b82:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009b84:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009b86:	429a      	cmp	r2, r3
90009b88:	d025      	beq.n	90009bd6 <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009b8a:	6822      	ldr	r2, [r4, #0]
90009b8c:	6b55      	ldr	r5, [r2, #52]	; 0x34
90009b8e:	f015 0510 	ands.w	r5, r5, #16
90009b92:	d118      	bne.n	90009bc6 <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
90009b94:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009b96:	bb4b      	cbnz	r3, 90009bec <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b98:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009b9a:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009b9c:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009b9e:	f023 0301 	bic.w	r3, r3, #1
90009ba2:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009ba4:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009ba6:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009ba8:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009bac:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009bb0:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009bb4:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb6:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009bb8:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009bba:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bbe:	d012      	beq.n	90009be6 <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009bc0:	f7ff fe54 	bl	9000986c <HAL_JPEG_EncodeCpltCallback>
}
90009bc4:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009bc6:	6d63      	ldr	r3, [r4, #84]	; 0x54
90009bc8:	049b      	lsls	r3, r3, #18
90009bca:	d4d2      	bmi.n	90009b72 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009bcc:	4620      	mov	r0, r4
}
90009bce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009bd2:	f7ff beb7 	b.w	90009944 <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bd6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009bd8:	4620      	mov	r0, r4
90009bda:	69e1      	ldr	r1, [r4, #28]
90009bdc:	f7f7 fe16 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009be0:	2300      	movs	r3, #0
90009be2:	6263      	str	r3, [r4, #36]	; 0x24
90009be4:	e7d1      	b.n	90009b8a <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009be6:	f7f7 fe67 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
}
90009bea:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009bec:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009bee:	4620      	mov	r0, r4
90009bf0:	69e1      	ldr	r1, [r4, #28]
90009bf2:	f7f7 fe0b 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009bf6:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009bf8:	6265      	str	r5, [r4, #36]	; 0x24
90009bfa:	e7cd      	b.n	90009b98 <JPEG_MDMAOutAbortCallback+0x30>

90009bfc <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bfc:	6d43      	ldr	r3, [r0, #84]	; 0x54
90009bfe:	f003 0303 	and.w	r3, r3, #3
90009c02:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c04:	6803      	ldr	r3, [r0, #0]
{
90009c06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90009c0a:	4604      	mov	r4, r0
90009c0c:	b082      	sub	sp, #8
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c0e:	d01f      	beq.n	90009c50 <JPEG_Process+0x54>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009c10:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009c12:	04d7      	lsls	r7, r2, #19
90009c14:	d407      	bmi.n	90009c26 <JPEG_Process+0x2a>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009c16:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009c18:	0796      	lsls	r6, r2, #30
90009c1a:	f100 811d 	bmi.w	90009e58 <JPEG_Process+0x25c>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009c1e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009c20:	0750      	lsls	r0, r2, #29
90009c22:	f100 81b1 	bmi.w	90009f88 <JPEG_Process+0x38c>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009c26:	6d65      	ldr	r5, [r4, #84]	; 0x54
90009c28:	f415 5500 	ands.w	r5, r5, #8192	; 0x2000
90009c2c:	d107      	bne.n	90009c3e <JPEG_Process+0x42>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009c2e:	6b5e      	ldr	r6, [r3, #52]	; 0x34
90009c30:	f016 0608 	ands.w	r6, r6, #8
90009c34:	d14c      	bne.n	90009cd0 <JPEG_Process+0xd4>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009c36:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009c38:	06d2      	lsls	r2, r2, #27
90009c3a:	f100 81e3 	bmi.w	9000a004 <JPEG_Process+0x408>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009c3e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009c40:	f002 0238 	and.w	r2, r2, #56	; 0x38
90009c44:	2a20      	cmp	r2, #32
90009c46:	d01a      	beq.n	90009c7e <JPEG_Process+0x82>
  return JPEG_PROCESS_ONGOING;
90009c48:	2000      	movs	r0, #0
}
90009c4a:	b002      	add	sp, #8
90009c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c50:	6b5a      	ldr	r2, [r3, #52]	; 0x34
90009c52:	0652      	lsls	r2, r2, #25
90009c54:	d5dc      	bpl.n	90009c10 <JPEG_Process+0x14>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009c56:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009c58:	9101      	str	r1, [sp, #4]
90009c5a:	f7ff fb79 	bl	90009350 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009c5e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c60:	9901      	ldr	r1, [sp, #4]
90009c62:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009c64:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c66:	f7f7 fd7b 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009c6a:	6823      	ldr	r3, [r4, #0]
90009c6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
90009c6e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
90009c72:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009c74:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009c76:	f042 0240 	orr.w	r2, r2, #64	; 0x40
90009c7a:	639a      	str	r2, [r3, #56]	; 0x38
90009c7c:	e7c8      	b.n	90009c10 <JPEG_Process+0x14>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c7e:	681a      	ldr	r2, [r3, #0]
90009c80:	f022 0201 	bic.w	r2, r2, #1
90009c84:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009c86:	6d62      	ldr	r2, [r4, #84]	; 0x54
90009c88:	f002 020c 	and.w	r2, r2, #12
90009c8c:	2a08      	cmp	r2, #8
90009c8e:	f000 81e6 	beq.w	9000a05e <JPEG_Process+0x462>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009c92:	6b9a      	ldr	r2, [r3, #56]	; 0x38
90009c94:	f042 0260 	orr.w	r2, r2, #96	; 0x60
90009c98:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->JpegOutCount > 0UL)
90009c9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009c9c:	2b00      	cmp	r3, #0
90009c9e:	f040 81e3 	bne.w	9000a068 <JPEG_Process+0x46c>
    tmpContext = hjpeg->Context;
90009ca2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hjpeg);
90009ca4:	2100      	movs	r1, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009ca6:	6d62      	ldr	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009ca8:	2501      	movs	r5, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009caa:	f003 0303 	and.w	r3, r3, #3
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009cae:	4620      	mov	r0, r4
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009cb0:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
    __HAL_UNLOCK(hjpeg);
90009cb4:	f884 104c 	strb.w	r1, [r4, #76]	; 0x4c
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cb8:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009cba:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009cbc:	f884 504d 	strb.w	r5, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009cc0:	f000 81c9 	beq.w	9000a056 <JPEG_Process+0x45a>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009cc4:	f7ff fdd2 	bl	9000986c <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
90009cc8:	4628      	mov	r0, r5
}
90009cca:	b002      	add	sp, #8
90009ccc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
90009cd0:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009cd2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
90009cd4:	3220      	adds	r2, #32
90009cd6:	4296      	cmp	r6, r2
90009cd8:	f0c0 81e4 	bcc.w	9000a0a4 <JPEG_Process+0x4a8>
      dataword = hjpeg->Instance->DOR;
90009cdc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009cde:	69e1      	ldr	r1, [r4, #28]
90009ce0:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009ce2:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009ce4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009ce6:	69e2      	ldr	r2, [r4, #28]
90009ce8:	440a      	add	r2, r1
90009cea:	0a19      	lsrs	r1, r3, #8
90009cec:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cee:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009cf0:	69e2      	ldr	r2, [r4, #28]
90009cf2:	440a      	add	r2, r1
90009cf4:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cf6:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009cf8:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009cfa:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009cfc:	69e2      	ldr	r2, [r4, #28]
90009cfe:	440a      	add	r2, r1
90009d00:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d02:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d04:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009d06:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d08:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009d0a:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009d0c:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d0e:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d10:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d12:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d14:	69e2      	ldr	r2, [r4, #28]
90009d16:	440a      	add	r2, r1
90009d18:	0a19      	lsrs	r1, r3, #8
90009d1a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d1c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d1e:	69e2      	ldr	r2, [r4, #28]
90009d20:	440a      	add	r2, r1
90009d22:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d24:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d26:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d28:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d2a:	69e2      	ldr	r2, [r4, #28]
90009d2c:	440a      	add	r2, r1
90009d2e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d30:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d32:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009d34:	3304      	adds	r3, #4
90009d36:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009d38:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d3a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d3c:	69e1      	ldr	r1, [r4, #28]
90009d3e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d40:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d42:	69e2      	ldr	r2, [r4, #28]
90009d44:	440a      	add	r2, r1
90009d46:	0a19      	lsrs	r1, r3, #8
90009d48:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d4a:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d4c:	69e2      	ldr	r2, [r4, #28]
90009d4e:	440a      	add	r2, r1
90009d50:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d52:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d54:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d56:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d58:	69e2      	ldr	r2, [r4, #28]
90009d5a:	440a      	add	r2, r1
90009d5c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d60:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009d62:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d64:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009d66:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009d68:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d6a:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d6c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d6e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d70:	69e2      	ldr	r2, [r4, #28]
90009d72:	440a      	add	r2, r1
90009d74:	0a19      	lsrs	r1, r3, #8
90009d76:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d78:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d7a:	69e2      	ldr	r2, [r4, #28]
90009d7c:	440a      	add	r2, r1
90009d7e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d80:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009d82:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009d84:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d86:	69e2      	ldr	r2, [r4, #28]
90009d88:	440a      	add	r2, r1
90009d8a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009d8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009d8e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009d90:	3304      	adds	r3, #4
90009d92:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009d94:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009d96:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009d98:	69e1      	ldr	r1, [r4, #28]
90009d9a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009d9c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009d9e:	69e2      	ldr	r2, [r4, #28]
90009da0:	440a      	add	r2, r1
90009da2:	0a19      	lsrs	r1, r3, #8
90009da4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009da6:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009da8:	69e2      	ldr	r2, [r4, #28]
90009daa:	440a      	add	r2, r1
90009dac:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009dae:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009db0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009db2:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009db4:	69e2      	ldr	r2, [r4, #28]
90009db6:	440a      	add	r2, r1
90009db8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009dba:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009dbc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009dbe:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009dc0:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009dc2:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009dc4:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009dc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009dc8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009dca:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dcc:	69e2      	ldr	r2, [r4, #28]
90009dce:	440a      	add	r2, r1
90009dd0:	0a19      	lsrs	r1, r3, #8
90009dd2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009dd4:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dd6:	69e2      	ldr	r2, [r4, #28]
90009dd8:	440a      	add	r2, r1
90009dda:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009ddc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009dde:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009de0:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009de2:	69e2      	ldr	r2, [r4, #28]
90009de4:	440a      	add	r2, r1
90009de6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009de8:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009dea:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009dec:	3304      	adds	r3, #4
90009dee:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009df0:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009df2:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009df4:	69e1      	ldr	r1, [r4, #28]
90009df6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009df8:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009dfa:	69e2      	ldr	r2, [r4, #28]
90009dfc:	440a      	add	r2, r1
90009dfe:	0a19      	lsrs	r1, r3, #8
90009e00:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e02:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e04:	69e2      	ldr	r2, [r4, #28]
90009e06:	440a      	add	r2, r1
90009e08:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e0a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e0c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e0e:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e10:	69e2      	ldr	r2, [r4, #28]
90009e12:	440a      	add	r2, r1
90009e14:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009e16:	6a63      	ldr	r3, [r4, #36]	; 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009e18:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009e1a:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e1c:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009e1e:	6263      	str	r3, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
90009e20:	6c53      	ldr	r3, [r2, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009e22:	6a62      	ldr	r2, [r4, #36]	; 0x24
90009e24:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009e26:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e28:	69e2      	ldr	r2, [r4, #28]
90009e2a:	440a      	add	r2, r1
90009e2c:	0a19      	lsrs	r1, r3, #8
90009e2e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e30:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e32:	69e2      	ldr	r2, [r4, #28]
90009e34:	440a      	add	r2, r1
90009e36:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e38:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009e3a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009e3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
90009e3e:	69e2      	ldr	r2, [r4, #28]
90009e40:	440a      	add	r2, r1
90009e42:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009e44:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009e46:	3304      	adds	r3, #4
90009e48:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009e4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
90009e4c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90009e4e:	429a      	cmp	r2, r3
90009e50:	f000 82ae 	beq.w	9000a3b0 <JPEG_Process+0x7b4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009e54:	6823      	ldr	r3, [r4, #0]
90009e56:	e6f2      	b.n	90009c3e <JPEG_Process+0x42>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009e58:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009e5a:	2a00      	cmp	r2, #0
90009e5c:	f000 810c 	beq.w	9000a078 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009e60:	6a21      	ldr	r1, [r4, #32]
90009e62:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009e64:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009e66:	f240 81a4 	bls.w	9000a1b2 <JPEG_Process+0x5b6>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009e6a:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009e6c:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009e6e:	04cd      	lsls	r5, r1, #19
90009e70:	f53f aed9 	bmi.w	90009c26 <JPEG_Process+0x2a>
90009e74:	2a00      	cmp	r2, #0
90009e76:	f43f aed6 	beq.w	90009c26 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009e7a:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
90009e7c:	ea4f 0192 	mov.w	r1, r2, lsr #2
    if (nb_words >= nbRequestWords)
90009e80:	f240 8203 	bls.w	9000a28a <JPEG_Process+0x68e>
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e84:	69a2      	ldr	r2, [r4, #24]
        input_count = hjpeg->JpegInCount;
90009e86:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e88:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e8a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e8c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e8e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e90:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009e92:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009e94:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009e98:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009e9a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009e9e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009ea0:	6a21      	ldr	r1, [r4, #32]
90009ea2:	3104      	adds	r1, #4
90009ea4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ea6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ea8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eaa:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eac:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eae:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eb0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009eb2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eb4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009eb8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eba:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ebe:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009ec0:	6a21      	ldr	r1, [r4, #32]
90009ec2:	3104      	adds	r1, #4
90009ec4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ec6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ec8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eca:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ecc:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ece:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ed0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ed2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ed4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ed8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eda:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ede:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009ee0:	6a21      	ldr	r1, [r4, #32]
90009ee2:	3104      	adds	r1, #4
90009ee4:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ee6:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ee8:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009eea:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009eec:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009eee:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ef0:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009ef2:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ef4:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009ef8:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009efa:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009efe:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f00:	6a21      	ldr	r1, [r4, #32]
90009f02:	3104      	adds	r1, #4
90009f04:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f06:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f08:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f0a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f0c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f0e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f10:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f12:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f14:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f18:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f1a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f1e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f20:	6a21      	ldr	r1, [r4, #32]
90009f22:	3104      	adds	r1, #4
90009f24:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f26:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f28:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f2a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f2c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f2e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f30:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f32:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f34:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f38:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f3a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f3e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f40:	6a21      	ldr	r1, [r4, #32]
90009f42:	3104      	adds	r1, #4
90009f44:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f46:	6a21      	ldr	r1, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f48:	1850      	adds	r0, r2, r1
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f4a:	5c55      	ldrb	r5, [r2, r1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f4c:	7881      	ldrb	r1, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f4e:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f50:	0409      	lsls	r1, r1, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f52:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f54:	ea41 2106 	orr.w	r1, r1, r6, lsl #8
90009f58:	4329      	orrs	r1, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f5a:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f5e:	6419      	str	r1, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f60:	6a21      	ldr	r1, [r4, #32]
90009f62:	3104      	adds	r1, #4
90009f64:	6221      	str	r1, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009f66:	6a20      	ldr	r0, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f68:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f6a:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f6c:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009f6e:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f70:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009f72:	7849      	ldrb	r1, [r1, #1]
90009f74:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009f78:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009f7a:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009f7e:	641a      	str	r2, [r3, #64]	; 0x40
        hjpeg->JpegInCount += 4UL;
90009f80:	6a22      	ldr	r2, [r4, #32]
90009f82:	3204      	adds	r2, #4
90009f84:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009f86:	e64e      	b.n	90009c26 <JPEG_Process+0x2a>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009f88:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009f8a:	2a00      	cmp	r2, #0
90009f8c:	d074      	beq.n	9000a078 <JPEG_Process+0x47c>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009f8e:	6a21      	ldr	r1, [r4, #32]
90009f90:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009f92:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009f94:	f200 8164 	bhi.w	9000a260 <JPEG_Process+0x664>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009f98:	428a      	cmp	r2, r1
90009f9a:	f040 810c 	bne.w	9000a1b6 <JPEG_Process+0x5ba>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009f9e:	6a21      	ldr	r1, [r4, #32]
90009fa0:	4620      	mov	r0, r4
90009fa2:	f7f7 fc13 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009fa6:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90009fa8:	2a04      	cmp	r2, #4
90009faa:	d902      	bls.n	90009fb2 <JPEG_Process+0x3b6>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009fac:	f022 0203 	bic.w	r2, r2, #3
90009fb0:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
90009fb2:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009fb4:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009fb6:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009fb8:	6d61      	ldr	r1, [r4, #84]	; 0x54
90009fba:	04c9      	lsls	r1, r1, #19
90009fbc:	f53f ae33 	bmi.w	90009c26 <JPEG_Process+0x2a>
90009fc0:	2a00      	cmp	r2, #0
90009fc2:	f43f ae30 	beq.w	90009c26 <JPEG_Process+0x2a>
    if (nb_words >= nbRequestWords)
90009fc6:	0891      	lsrs	r1, r2, #2
90009fc8:	f040 8203 	bne.w	9000a3d2 <JPEG_Process+0x7d6>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fcc:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fce:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009fd0:	6a21      	ldr	r1, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fd2:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
90009fd4:	f101 0101 	add.w	r1, r1, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fd8:	5c28      	ldrb	r0, [r5, r0]
          hjpeg->JpegInCount++;
90009fda:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fdc:	d010      	beq.n	9000a000 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fde:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009fe0:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009fe2:	5c69      	ldrb	r1, [r5, r1]
90009fe4:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
          hjpeg->JpegInCount++;
90009fe8:	6a21      	ldr	r1, [r4, #32]
90009fea:	f101 0101 	add.w	r1, r1, #1
90009fee:	6221      	str	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009ff0:	d106      	bne.n	9000a000 <JPEG_Process+0x404>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009ff2:	6a22      	ldr	r2, [r4, #32]
90009ff4:	5ca9      	ldrb	r1, [r5, r2]
          hjpeg->JpegInCount++;
90009ff6:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009ff8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009ffc:	3201      	adds	r2, #1
90009ffe:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a000:	6418      	str	r0, [r3, #64]	; 0x40
9000a002:	e610      	b.n	90009c26 <JPEG_Process+0x2a>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000a004:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a006:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000a008:	3204      	adds	r2, #4
9000a00a:	4295      	cmp	r5, r2
9000a00c:	f0c0 80d5 	bcc.w	9000a1ba <JPEG_Process+0x5be>
      dataword = hjpeg->Instance->DOR;
9000a010:	6c5b      	ldr	r3, [r3, #68]	; 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a012:	69e1      	ldr	r1, [r4, #28]
9000a014:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a016:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a018:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a01a:	69e2      	ldr	r2, [r4, #28]
9000a01c:	440a      	add	r2, r1
9000a01e:	0a19      	lsrs	r1, r3, #8
9000a020:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a022:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a024:	69e2      	ldr	r2, [r4, #28]
9000a026:	440a      	add	r2, r1
9000a028:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a02a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a02c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a02e:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a030:	69e2      	ldr	r2, [r4, #28]
9000a032:	440a      	add	r2, r1
9000a034:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a036:	6a63      	ldr	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a038:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
      hjpeg->JpegOutCount += 4UL;
9000a03a:	3304      	adds	r3, #4
9000a03c:	6263      	str	r3, [r4, #36]	; 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a03e:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a040:	429a      	cmp	r2, r3
9000a042:	f47f af07 	bne.w	90009e54 <JPEG_Process+0x258>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a046:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a048:	4620      	mov	r0, r4
9000a04a:	69e1      	ldr	r1, [r4, #28]
9000a04c:	f7f7 fbde 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a050:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a052:	6266      	str	r6, [r4, #36]	; 0x24
9000a054:	e5f3      	b.n	90009c3e <JPEG_Process+0x42>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a056:	f7f7 fc2f 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
    return JPEG_PROCESS_DONE;
9000a05a:	4628      	mov	r0, r5
9000a05c:	e5f5      	b.n	90009c4a <JPEG_Process+0x4e>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a05e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a060:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a064:	631a      	str	r2, [r3, #48]	; 0x30
9000a066:	e614      	b.n	90009c92 <JPEG_Process+0x96>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a068:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a06a:	4620      	mov	r0, r4
9000a06c:	69e1      	ldr	r1, [r4, #28]
9000a06e:	f7f7 fbcd 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a072:	2300      	movs	r3, #0
9000a074:	6263      	str	r3, [r4, #36]	; 0x24
9000a076:	e614      	b.n	90009ca2 <JPEG_Process+0xa6>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a078:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a07a:	f002 020c 	and.w	r2, r2, #12
9000a07e:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a080:	6d62      	ldr	r2, [r4, #84]	; 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a082:	f000 80fd 	beq.w	9000a280 <JPEG_Process+0x684>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a086:	f002 020c 	and.w	r2, r2, #12
9000a08a:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a08c:	6d62      	ldr	r2, [r4, #84]	; 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a08e:	f47f adca 	bne.w	90009c26 <JPEG_Process+0x2a>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a092:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000a096:	6562      	str	r2, [r4, #84]	; 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
9000a098:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a09a:	f022 0206 	bic.w	r2, r2, #6
9000a09e:	631a      	str	r2, [r3, #48]	; 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a0a0:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a0a2:	e5c0      	b.n	90009c26 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a0a4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0a6:	4296      	cmp	r6, r2
9000a0a8:	f67f adc9 	bls.w	90009c3e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a0ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a0ae:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
9000a0b0:	0880      	lsrs	r0, r0, #2
9000a0b2:	d020      	beq.n	9000a0f6 <JPEG_Process+0x4fa>
9000a0b4:	4629      	mov	r1, r5
9000a0b6:	e000      	b.n	9000a0ba <JPEG_Process+0x4be>
      dataword = hjpeg->Instance->DOR;
9000a0b8:	6823      	ldr	r3, [r4, #0]
9000a0ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000a0bc:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0be:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a0c0:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a0c2:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a0c4:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a0c6:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a0c8:	69e2      	ldr	r2, [r4, #28]
9000a0ca:	4432      	add	r2, r6
9000a0cc:	ea4f 2613 	mov.w	r6, r3, lsr #8
9000a0d0:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0d2:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a0d4:	69e2      	ldr	r2, [r4, #28]
9000a0d6:	4432      	add	r2, r6
9000a0d8:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0dc:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a0e0:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a0e2:	6a66      	ldr	r6, [r4, #36]	; 0x24
9000a0e4:	69e2      	ldr	r2, [r4, #28]
9000a0e6:	4432      	add	r2, r6
9000a0e8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a0ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a0ec:	f103 0304 	add.w	r3, r3, #4
9000a0f0:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000a0f2:	d1e1      	bne.n	9000a0b8 <JPEG_Process+0x4bc>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a0f4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
9000a0f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a0f8:	42b3      	cmp	r3, r6
9000a0fa:	f000 8161 	beq.w	9000a3c0 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a0fe:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000a102:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a104:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
9000a108:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000a10a:	d00e      	beq.n	9000a12a <JPEG_Process+0x52e>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a10c:	f005 0303 	and.w	r3, r5, #3
9000a110:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a112:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000a114:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a116:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a118:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a11a:	fa27 f303 	lsr.w	r3, r7, r3
9000a11e:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a120:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a122:	f103 0301 	add.w	r3, r3, #1
9000a126:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000a128:	d1f0      	bne.n	9000a10c <JPEG_Process+0x510>
      nb_bytes = 4UL - nb_bytes;
9000a12a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a12e:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a130:	69e1      	ldr	r1, [r4, #28]
9000a132:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a134:	eba8 0806 	sub.w	r8, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a138:	f7f7 fb68 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a13c:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a13e:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000a142:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a144:	f63f ae86 	bhi.w	90009e54 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a148:	ea4f 03c8 	mov.w	r3, r8, lsl #3
9000a14c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a14e:	69e1      	ldr	r1, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a150:	f1b8 0f03 	cmp.w	r8, #3
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a154:	fa27 f003 	lsr.w	r0, r7, r3
9000a158:	5488      	strb	r0, [r1, r2]
        hjpeg->JpegOutCount++;
9000a15a:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a15c:	f102 0201 	add.w	r2, r2, #1
9000a160:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a162:	f43f ae77 	beq.w	90009e54 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a166:	f103 0208 	add.w	r2, r3, #8
9000a16a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a16c:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a16e:	f1b8 0f02 	cmp.w	r8, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a172:	fa27 f202 	lsr.w	r2, r7, r2
9000a176:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
9000a178:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a17a:	f102 0201 	add.w	r2, r2, #1
9000a17e:	6262      	str	r2, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a180:	f108 0202 	add.w	r2, r8, #2
9000a184:	f43f ae66 	beq.w	90009e54 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a188:	3310      	adds	r3, #16
9000a18a:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000a18c:	69e0      	ldr	r0, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
9000a18e:	2a02      	cmp	r2, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a190:	fa27 f303 	lsr.w	r3, r7, r3
9000a194:	5443      	strb	r3, [r0, r1]
        hjpeg->JpegOutCount++;
9000a196:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a198:	f103 0301 	add.w	r3, r3, #1
9000a19c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a19e:	f47f ae59 	bne.w	90009e54 <JPEG_Process+0x258>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
9000a1a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a1a4:	0e3f      	lsrs	r7, r7, #24
9000a1a6:	69e2      	ldr	r2, [r4, #28]
9000a1a8:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
9000a1aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a1ac:	3301      	adds	r3, #1
9000a1ae:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a1b0:	e650      	b.n	90009e54 <JPEG_Process+0x258>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000a1b2:	428a      	cmp	r2, r1
9000a1b4:	d056      	beq.n	9000a264 <JPEG_Process+0x668>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a1b6:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a1b8:	e535      	b.n	90009c26 <JPEG_Process+0x2a>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000a1ba:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a1bc:	4295      	cmp	r5, r2
9000a1be:	f67f ad3e 	bls.w	90009c3e <JPEG_Process+0x42>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000a1c2:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a1c4:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000a1c6:	0880      	lsrs	r0, r0, #2
9000a1c8:	d020      	beq.n	9000a20c <JPEG_Process+0x610>
9000a1ca:	4631      	mov	r1, r6
9000a1cc:	e000      	b.n	9000a1d0 <JPEG_Process+0x5d4>
      dataword = hjpeg->Instance->DOR;
9000a1ce:	6823      	ldr	r3, [r4, #0]
9000a1d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
    for (index = 0; index < nb_words; index++)
9000a1d2:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a1d4:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a1d6:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
9000a1d8:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000a1da:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000a1dc:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a1de:	69e2      	ldr	r2, [r4, #28]
9000a1e0:	442a      	add	r2, r5
9000a1e2:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000a1e6:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a1e8:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a1ea:	69e2      	ldr	r2, [r4, #28]
9000a1ec:	442a      	add	r2, r5
9000a1ee:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a1f2:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000a1f6:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000a1f8:	6a65      	ldr	r5, [r4, #36]	; 0x24
9000a1fa:	69e2      	ldr	r2, [r4, #28]
9000a1fc:	442a      	add	r2, r5
9000a1fe:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000a200:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a202:	f103 0304 	add.w	r3, r3, #4
9000a206:	6263      	str	r3, [r4, #36]	; 0x24
    for (index = 0; index < nb_words; index++)
9000a208:	d1e1      	bne.n	9000a1ce <JPEG_Process+0x5d2>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000a20a:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
9000a20c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a20e:	429d      	cmp	r5, r3
9000a210:	f000 80d6 	beq.w	9000a3c0 <JPEG_Process+0x7c4>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000a214:	f8d4 8024 	ldr.w	r8, [r4, #36]	; 0x24
      dataword = hjpeg->Instance->DOR;
9000a218:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000a21a:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
9000a21e:	6c5f      	ldr	r7, [r3, #68]	; 0x44
      for (index = 0; index < nb_bytes; index++)
9000a220:	d00e      	beq.n	9000a240 <JPEG_Process+0x644>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a222:	f006 0303 	and.w	r3, r6, #3
9000a226:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a228:	69e1      	ldr	r1, [r4, #28]
      for (index = 0; index < nb_bytes; index++)
9000a22a:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a22c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000a22e:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000a230:	fa27 f303 	lsr.w	r3, r7, r3
9000a234:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000a236:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a238:	f103 0301 	add.w	r3, r3, #1
9000a23c:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = 0; index < nb_bytes; index++)
9000a23e:	d1f0      	bne.n	9000a222 <JPEG_Process+0x626>
      nb_bytes = 4UL - nb_bytes;
9000a240:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a244:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a246:	69e1      	ldr	r1, [r4, #28]
9000a248:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000a24a:	eba8 0805 	sub.w	r8, r8, r5
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a24e:	f7f7 fadd 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a252:	2300      	movs	r3, #0
      for (index = nb_bytes; index < 4UL; index++)
9000a254:	f1b8 0f03 	cmp.w	r8, #3
      hjpeg->JpegOutCount = 0;
9000a258:	6263      	str	r3, [r4, #36]	; 0x24
      for (index = nb_bytes; index < 4UL; index++)
9000a25a:	f67f af75 	bls.w	9000a148 <JPEG_Process+0x54c>
9000a25e:	e5f9      	b.n	90009e54 <JPEG_Process+0x258>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
9000a260:	1a52      	subs	r2, r2, r1
9000a262:	e6a9      	b.n	90009fb8 <JPEG_Process+0x3bc>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
9000a264:	6a21      	ldr	r1, [r4, #32]
9000a266:	4620      	mov	r0, r4
9000a268:	f7f7 fab0 	bl	900017cc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000a26c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000a26e:	2a04      	cmp	r2, #4
9000a270:	d902      	bls.n	9000a278 <JPEG_Process+0x67c>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
9000a272:	f022 0203 	bic.w	r2, r2, #3
9000a276:	62a2      	str	r2, [r4, #40]	; 0x28
    hjpeg->JpegInCount = 0;
9000a278:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a27a:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000a27c:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
9000a27e:	e5f5      	b.n	90009e6c <JPEG_Process+0x270>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
9000a280:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
9000a284:	6562      	str	r2, [r4, #84]	; 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000a286:	6d62      	ldr	r2, [r4, #84]	; 0x54
9000a288:	e4cd      	b.n	90009c26 <JPEG_Process+0x2a>
      if (nb_words > 0UL)
9000a28a:	2a03      	cmp	r2, #3
9000a28c:	f240 80a4 	bls.w	9000a3d8 <JPEG_Process+0x7dc>
        for (index = 0; index < nb_words; index++)
9000a290:	2900      	cmp	r1, #0
9000a292:	f43f acc8 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a296:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a298:	2901      	cmp	r1, #1
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a29a:	69a2      	ldr	r2, [r4, #24]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a29c:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2a0:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2a2:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2a4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2a6:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2aa:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2ac:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a2b0:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2b4:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2b8:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a2ba:	6a20      	ldr	r0, [r4, #32]
9000a2bc:	f100 0004 	add.w	r0, r0, #4
9000a2c0:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2c2:	f43f acb0 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a2c6:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2c8:	2902      	cmp	r1, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2ca:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2ce:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2d0:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2d2:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2d4:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a2d8:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2da:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a2de:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2e2:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2e6:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a2e8:	6a20      	ldr	r0, [r4, #32]
9000a2ea:	f100 0004 	add.w	r0, r0, #4
9000a2ee:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2f0:	f43f ac99 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a2f4:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a2f6:	2903      	cmp	r1, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a2f8:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a2fc:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a2fe:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a300:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a302:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a306:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a308:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a30c:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a310:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a314:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a316:	6a20      	ldr	r0, [r4, #32]
9000a318:	f100 0004 	add.w	r0, r0, #4
9000a31c:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a31e:	f43f ac82 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a322:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a324:	2904      	cmp	r1, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a326:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a32a:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a32c:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a32e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a330:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a334:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a336:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a33a:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a33e:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a342:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a344:	6a20      	ldr	r0, [r4, #32]
9000a346:	f100 0004 	add.w	r0, r0, #4
9000a34a:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a34c:	f43f ac6b 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a350:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a352:	2905      	cmp	r1, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a354:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a358:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a35a:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a35c:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a35e:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a362:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a364:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a368:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a36c:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a370:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a372:	6a20      	ldr	r0, [r4, #32]
9000a374:	f100 0004 	add.w	r0, r0, #4
9000a378:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a37a:	f43f ac54 	beq.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a37e:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a380:	2907      	cmp	r1, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a382:	eb02 0500 	add.w	r5, r2, r0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a386:	5c16      	ldrb	r6, [r2, r0]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a388:	78a8      	ldrb	r0, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a38a:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a38c:	ea4f 4000 	mov.w	r0, r0, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
9000a390:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000a392:	ea40 2007 	orr.w	r0, r0, r7, lsl #8
9000a396:	ea40 0006 	orr.w	r0, r0, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000a39a:	ea40 6005 	orr.w	r0, r0, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a39e:	6418      	str	r0, [r3, #64]	; 0x40
          hjpeg->JpegInCount += 4UL;
9000a3a0:	6a20      	ldr	r0, [r4, #32]
9000a3a2:	f100 0004 	add.w	r0, r0, #4
9000a3a6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000a3a8:	f47f ac3d 	bne.w	90009c26 <JPEG_Process+0x2a>
          input_count = hjpeg->JpegInCount;
9000a3ac:	6a20      	ldr	r0, [r4, #32]
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3ae:	e5db      	b.n	90009f68 <JPEG_Process+0x36c>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a3b0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a3b2:	4620      	mov	r0, r4
9000a3b4:	69e1      	ldr	r1, [r4, #28]
9000a3b6:	f7f7 fa29 	bl	9000180c <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3ba:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a3bc:	6265      	str	r5, [r4, #36]	; 0x24
9000a3be:	e43e      	b.n	90009c3e <JPEG_Process+0x42>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a3c0:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a3c2:	4620      	mov	r0, r4
9000a3c4:	69e1      	ldr	r1, [r4, #28]
9000a3c6:	f7f7 fa21 	bl	9000180c <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000a3ca:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000a3cc:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a3ce:	6262      	str	r2, [r4, #36]	; 0x24
9000a3d0:	e435      	b.n	90009c3e <JPEG_Process+0x42>
        input_count = hjpeg->JpegInCount;
9000a3d2:	6a22      	ldr	r2, [r4, #32]
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000a3d4:	69a0      	ldr	r0, [r4, #24]
9000a3d6:	e5c7      	b.n	90009f68 <JPEG_Process+0x36c>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3d8:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a3da:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000a3dc:	6a20      	ldr	r0, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3de:	69a5      	ldr	r5, [r4, #24]
          hjpeg->JpegInCount++;
9000a3e0:	f100 0001 	add.w	r0, r0, #1
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3e4:	5c69      	ldrb	r1, [r5, r1]
          hjpeg->JpegInCount++;
9000a3e6:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a3e8:	d010      	beq.n	9000a40c <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3ea:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a3ec:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3ee:	5c28      	ldrb	r0, [r5, r0]
9000a3f0:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
          hjpeg->JpegInCount++;
9000a3f4:	6a20      	ldr	r0, [r4, #32]
9000a3f6:	f100 0001 	add.w	r0, r0, #1
9000a3fa:	6220      	str	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
9000a3fc:	d106      	bne.n	9000a40c <JPEG_Process+0x810>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a3fe:	6a22      	ldr	r2, [r4, #32]
9000a400:	5ca8      	ldrb	r0, [r5, r2]
          hjpeg->JpegInCount++;
9000a402:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000a404:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
9000a408:	3201      	adds	r2, #1
9000a40a:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
9000a40c:	6419      	str	r1, [r3, #64]	; 0x40
9000a40e:	e40a      	b.n	90009c26 <JPEG_Process+0x2a>

9000a410 <HAL_JPEG_IRQHandler>:
  switch (hjpeg->State)
9000a410:	f890 304d 	ldrb.w	r3, [r0, #77]	; 0x4d
9000a414:	3b03      	subs	r3, #3
9000a416:	2b01      	cmp	r3, #1
9000a418:	d900      	bls.n	9000a41c <HAL_JPEG_IRQHandler+0xc>
9000a41a:	4770      	bx	lr
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a41c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a41e:	f003 030c 	and.w	r3, r3, #12
9000a422:	2b08      	cmp	r3, #8
{
9000a424:	b530      	push	{r4, r5, lr}
9000a426:	4604      	mov	r4, r0
9000a428:	b083      	sub	sp, #12
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000a42a:	d006      	beq.n	9000a43a <HAL_JPEG_IRQHandler+0x2a>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000a42c:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a42e:	f003 030c 	and.w	r3, r3, #12
9000a432:	2b0c      	cmp	r3, #12
9000a434:	d006      	beq.n	9000a444 <HAL_JPEG_IRQHandler+0x34>
}
9000a436:	b003      	add	sp, #12
9000a438:	bd30      	pop	{r4, r5, pc}
9000a43a:	b003      	add	sp, #12
9000a43c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
        (void) JPEG_Process(hjpeg);
9000a440:	f7ff bbdc 	b.w	90009bfc <JPEG_Process>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a444:	6d43      	ldr	r3, [r0, #84]	; 0x54
9000a446:	f003 0303 	and.w	r3, r3, #3
9000a44a:	2b02      	cmp	r3, #2
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a44c:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a44e:	d045      	beq.n	9000a4dc <HAL_JPEG_IRQHandler+0xcc>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
9000a450:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a452:	0692      	lsls	r2, r2, #26
9000a454:	d5ef      	bpl.n	9000a436 <HAL_JPEG_IRQHandler+0x26>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a456:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a458:	6b20      	ldr	r0, [r4, #48]	; 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
9000a45a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
9000a45e:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a460:	681a      	ldr	r2, [r3, #0]
9000a462:	f022 0201 	bic.w	r2, r2, #1
9000a466:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
9000a468:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a46a:	f022 027e 	bic.w	r2, r2, #126	; 0x7e
9000a46e:	631a      	str	r2, [r3, #48]	; 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
9000a470:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a472:	f042 0260 	orr.w	r2, r2, #96	; 0x60
9000a476:	639a      	str	r2, [r3, #56]	; 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
9000a478:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a47c:	2b02      	cmp	r3, #2
9000a47e:	d052      	beq.n	9000a526 <HAL_JPEG_IRQHandler+0x116>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
9000a480:	6b60      	ldr	r0, [r4, #52]	; 0x34
9000a482:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000a486:	2b02      	cmp	r3, #2
9000a488:	d03f      	beq.n	9000a50a <HAL_JPEG_IRQHandler+0xfa>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000a48a:	6803      	ldr	r3, [r0, #0]
9000a48c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000a48e:	695b      	ldr	r3, [r3, #20]
9000a490:	f3c3 0310 	ubfx	r3, r3, #0, #17
9000a494:	1ad3      	subs	r3, r2, r3
9000a496:	6263      	str	r3, [r4, #36]	; 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
9000a498:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a49a:	429a      	cmp	r2, r3
9000a49c:	d046      	beq.n	9000a52c <HAL_JPEG_IRQHandler+0x11c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
9000a49e:	6822      	ldr	r2, [r4, #0]
9000a4a0:	6b55      	ldr	r5, [r2, #52]	; 0x34
9000a4a2:	f015 0510 	ands.w	r5, r5, #16
9000a4a6:	d135      	bne.n	9000a514 <HAL_JPEG_IRQHandler+0x104>
    if (hjpeg->JpegOutCount > 0UL)
9000a4a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000a4aa:	2b00      	cmp	r3, #0
9000a4ac:	d149      	bne.n	9000a542 <HAL_JPEG_IRQHandler+0x132>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a4ae:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
9000a4b0:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a4b2:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a4b4:	f023 0301 	bic.w	r3, r3, #1
9000a4b8:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
9000a4ba:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a4bc:	6d62      	ldr	r2, [r4, #84]	; 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4be:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
9000a4c2:	f884 004c 	strb.w	r0, [r4, #76]	; 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a4c6:	f402 4282 	and.w	r2, r2, #16640	; 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a4ca:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4cc:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
9000a4ce:	6562      	str	r2, [r4, #84]	; 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
9000a4d0:	f884 104d 	strb.w	r1, [r4, #77]	; 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
9000a4d4:	d032      	beq.n	9000a53c <HAL_JPEG_IRQHandler+0x12c>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
9000a4d6:	f7ff f9c9 	bl	9000986c <HAL_JPEG_EncodeCpltCallback>
9000a4da:	e7ac      	b.n	9000a436 <HAL_JPEG_IRQHandler+0x26>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
9000a4dc:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a4de:	0651      	lsls	r1, r2, #25
9000a4e0:	d5b6      	bpl.n	9000a450 <HAL_JPEG_IRQHandler+0x40>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
9000a4e2:	1d01      	adds	r1, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
9000a4e4:	9101      	str	r1, [sp, #4]
9000a4e6:	f7fe ff33 	bl	90009350 <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000a4ea:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a4ec:	9901      	ldr	r1, [sp, #4]
9000a4ee:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
9000a4f0:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
9000a4f2:	f7f7 f935 	bl	90001760 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000a4f6:	6823      	ldr	r3, [r4, #0]
9000a4f8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000a4fa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
9000a4fe:	631a      	str	r2, [r3, #48]	; 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
9000a500:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000a502:	f042 0240 	orr.w	r2, r2, #64	; 0x40
9000a506:	639a      	str	r2, [r3, #56]	; 0x38
9000a508:	e7a2      	b.n	9000a450 <HAL_JPEG_IRQHandler+0x40>
}
9000a50a:	b003      	add	sp, #12
9000a50c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
9000a510:	f000 bb30 	b.w	9000ab74 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
9000a514:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000a516:	049b      	lsls	r3, r3, #18
9000a518:	d48d      	bmi.n	9000a436 <HAL_JPEG_IRQHandler+0x26>
    JPEG_DMA_PollResidualData(hjpeg);
9000a51a:	4620      	mov	r0, r4
}
9000a51c:	b003      	add	sp, #12
9000a51e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
9000a522:	f7ff ba0f 	b.w	90009944 <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
9000a526:	f000 fb25 	bl	9000ab74 <HAL_MDMA_Abort_IT>
9000a52a:	e7a9      	b.n	9000a480 <HAL_JPEG_IRQHandler+0x70>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a52c:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a52e:	4620      	mov	r0, r4
9000a530:	69e1      	ldr	r1, [r4, #28]
9000a532:	f7f7 f96b 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
9000a536:	2300      	movs	r3, #0
9000a538:	6263      	str	r3, [r4, #36]	; 0x24
9000a53a:	e7b0      	b.n	9000a49e <HAL_JPEG_IRQHandler+0x8e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000a53c:	f7f7 f9bc 	bl	900018b8 <HAL_JPEG_DecodeCpltCallback>
9000a540:	e779      	b.n	9000a436 <HAL_JPEG_IRQHandler+0x26>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000a542:	6a62      	ldr	r2, [r4, #36]	; 0x24
9000a544:	4620      	mov	r0, r4
9000a546:	69e1      	ldr	r1, [r4, #28]
9000a548:	f7f7 f960 	bl	9000180c <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000a54c:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000a54e:	6265      	str	r5, [r4, #36]	; 0x24
9000a550:	e7ad      	b.n	9000a4ae <HAL_JPEG_IRQHandler+0x9e>
9000a552:	bf00      	nop

9000a554 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
9000a554:	2800      	cmp	r0, #0
9000a556:	d067      	beq.n	9000a628 <HAL_LTDC_Init+0xd4>
{
9000a558:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
9000a55a:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
9000a55e:	4604      	mov	r4, r0
9000a560:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000a564:	2b00      	cmp	r3, #0
9000a566:	d05a      	beq.n	9000a61e <HAL_LTDC_Init+0xca>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a568:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a56a:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a56c:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a570:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a574:	4302      	orrs	r2, r0
9000a576:	68e1      	ldr	r1, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a578:	6998      	ldr	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a57a:	430a      	orrs	r2, r1
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a57c:	6921      	ldr	r1, [r4, #16]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a57e:	f020 4070 	bic.w	r0, r0, #4026531840	; 0xf0000000
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
9000a582:	430a      	orrs	r2, r1

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a584:	4929      	ldr	r1, [pc, #164]	; (9000a62c <HAL_LTDC_Init+0xd8>)
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
9000a586:	6198      	str	r0, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a588:	6998      	ldr	r0, [r3, #24]
9000a58a:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
9000a58c:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
9000a58e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
9000a590:	689a      	ldr	r2, [r3, #8]
9000a592:	400a      	ands	r2, r1
9000a594:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a596:	689a      	ldr	r2, [r3, #8]
9000a598:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a59c:	69a0      	ldr	r0, [r4, #24]
9000a59e:	4302      	orrs	r2, r0

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
9000a5a0:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
9000a5a2:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
9000a5a4:	68da      	ldr	r2, [r3, #12]
9000a5a6:	400a      	ands	r2, r1
9000a5a8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a5aa:	68da      	ldr	r2, [r3, #12]
9000a5ac:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a5b0:	6a20      	ldr	r0, [r4, #32]
9000a5b2:	4302      	orrs	r2, r0

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
9000a5b4:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
9000a5b6:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
9000a5b8:	691a      	ldr	r2, [r3, #16]
9000a5ba:	400a      	ands	r2, r1
9000a5bc:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a5be:	691a      	ldr	r2, [r3, #16]
9000a5c0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a5c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a5c6:	4302      	orrs	r2, r0

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
  tmp = (hltdc->Init.TotalWidth << 16U);
9000a5c8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
9000a5ca:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
9000a5cc:	695a      	ldr	r2, [r3, #20]
9000a5ce:	400a      	ands	r2, r1
9000a5d0:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
9000a5d2:	695a      	ldr	r2, [r3, #20]
9000a5d4:	6b21      	ldr	r1, [r4, #48]	; 0x30
9000a5d6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
9000a5da:	430a      	orrs	r2, r1
9000a5dc:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a5de:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
9000a5e0:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a5e4:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
9000a5e8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
9000a5ec:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a5ee:	6add      	ldr	r5, [r3, #44]	; 0x2c
9000a5f0:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
9000a5f4:	432a      	orrs	r2, r5
9000a5f6:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a5fa:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
9000a5fc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
9000a600:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
9000a602:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a604:	f042 0206 	orr.w	r2, r2, #6
9000a608:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
9000a60a:	699a      	ldr	r2, [r3, #24]
9000a60c:	f042 0201 	orr.w	r2, r2, #1
9000a610:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
9000a612:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
9000a614:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
9000a618:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1

  return HAL_OK;
}
9000a61c:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
9000a61e:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
9000a622:	f7f8 febf 	bl	900033a4 <HAL_LTDC_MspInit>
9000a626:	e79f      	b.n	9000a568 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
9000a628:	2001      	movs	r0, #1
}
9000a62a:	4770      	bx	lr
9000a62c:	f000f800 	.word	0xf000f800

9000a630 <HAL_LTDC_ErrorCallback>:
9000a630:	4770      	bx	lr
9000a632:	bf00      	nop

9000a634 <HAL_LTDC_ReloadEventCallback>:
9000a634:	4770      	bx	lr
9000a636:	bf00      	nop

9000a638 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a638:	6803      	ldr	r3, [r0, #0]
{
9000a63a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
9000a63c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
{
9000a63e:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
9000a640:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
9000a642:	076a      	lsls	r2, r5, #29
9000a644:	d501      	bpl.n	9000a64a <HAL_LTDC_IRQHandler+0x12>
9000a646:	0771      	lsls	r1, r6, #29
9000a648:	d41d      	bmi.n	9000a686 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
9000a64a:	07aa      	lsls	r2, r5, #30
9000a64c:	d501      	bpl.n	9000a652 <HAL_LTDC_IRQHandler+0x1a>
9000a64e:	07b3      	lsls	r3, r6, #30
9000a650:	d42d      	bmi.n	9000a6ae <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
9000a652:	07e8      	lsls	r0, r5, #31
9000a654:	d501      	bpl.n	9000a65a <HAL_LTDC_IRQHandler+0x22>
9000a656:	07f1      	lsls	r1, r6, #31
9000a658:	d440      	bmi.n	9000a6dc <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
9000a65a:	072a      	lsls	r2, r5, #28
9000a65c:	d501      	bpl.n	9000a662 <HAL_LTDC_IRQHandler+0x2a>
9000a65e:	0733      	lsls	r3, r6, #28
9000a660:	d400      	bmi.n	9000a664 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
9000a662:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a664:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a666:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
9000a668:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
9000a66a:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
9000a66c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a66e:	f022 0208 	bic.w	r2, r2, #8
9000a672:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
9000a674:	63d8      	str	r0, [r3, #60]	; 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a676:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
9000a678:	f884 50a1 	strb.w	r5, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a67c:	f884 10a0 	strb.w	r1, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
9000a680:	f7ff ffd8 	bl	9000a634 <HAL_LTDC_ReloadEventCallback>
}
9000a684:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
9000a686:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a688:	f022 0204 	bic.w	r2, r2, #4
9000a68c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
9000a68e:	2204      	movs	r2, #4
9000a690:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
9000a692:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
9000a696:	f043 0301 	orr.w	r3, r3, #1
9000a69a:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a69e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a6a0:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a6a4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a6a8:	f7ff ffc2 	bl	9000a630 <HAL_LTDC_ErrorCallback>
9000a6ac:	e7cd      	b.n	9000a64a <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a6ae:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
9000a6b0:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
9000a6b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a6b4:	f022 0202 	bic.w	r2, r2, #2
9000a6b8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
9000a6ba:	2202      	movs	r2, #2
9000a6bc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a6be:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
9000a6c0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
9000a6c4:	f043 0302 	orr.w	r3, r3, #2
9000a6c8:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
9000a6cc:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
9000a6ce:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a6d2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
9000a6d6:	f7ff ffab 	bl	9000a630 <HAL_LTDC_ErrorCallback>
9000a6da:	e7ba      	b.n	9000a652 <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a6dc:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
9000a6de:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a6e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000a6e2:	f022 0201 	bic.w	r2, r2, #1
9000a6e6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
9000a6e8:	2201      	movs	r2, #1
9000a6ea:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
9000a6ec:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
9000a6ee:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
9000a6f2:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
9000a6f6:	f7f8 f93f 	bl	90002978 <HAL_LTDC_LineEventCallback>
9000a6fa:	e7ae      	b.n	9000a65a <HAL_LTDC_IRQHandler+0x22>

9000a6fc <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
9000a6fc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
9000a700:	2b01      	cmp	r3, #1
9000a702:	f000 80c0 	beq.w	9000a886 <HAL_LTDC_ConfigLayer+0x18a>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a706:	2302      	movs	r3, #2
{
9000a708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a70c:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a710:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a714:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
{
9000a718:	b083      	sub	sp, #12
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a71a:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a71e:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a720:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a724:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a726:	f102 0684 	add.w	r6, r2, #132	; 0x84
9000a72a:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a72c:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
9000a730:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a732:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a736:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a73a:	f8df a160 	ldr.w	sl, [pc, #352]	; 9000a89c <HAL_LTDC_ConfigLayer+0x1a0>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a73e:	f8dc 3004 	ldr.w	r3, [ip, #4]
9000a742:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
9000a746:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a748:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a74a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a74e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a750:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a752:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a756:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
9000a758:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
9000a75c:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
9000a75e:	44bb      	add	fp, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
9000a760:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a764:	9b01      	ldr	r3, [sp, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a766:	682a      	ldr	r2, [r5, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
9000a768:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a76c:	f8d9 300c 	ldr.w	r3, [r9, #12]
9000a770:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a772:	68e8      	ldr	r0, [r5, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a774:	f3c3 430b 	ubfx	r3, r3, #16, #12
  tmp2 = (pLayerCfg->Alpha0 << 24U);
9000a778:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
9000a77c:	440b      	add	r3, r1
9000a77e:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
9000a782:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a786:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a78a:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a78e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a792:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
9000a796:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
9000a798:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a79c:	68ab      	ldr	r3, [r5, #8]
9000a79e:	f8d9 000c 	ldr.w	r0, [r9, #12]
9000a7a2:	3301      	adds	r3, #1
9000a7a4:	f3c0 000a 	ubfx	r0, r0, #0, #11
9000a7a8:	4403      	add	r3, r0
9000a7aa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a7ae:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
9000a7b0:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
9000a7b4:	f8dc 3010 	ldr.w	r3, [ip, #16]
9000a7b8:	f023 0307 	bic.w	r3, r3, #7
9000a7bc:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
9000a7c0:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a7c4:	f8dc 3018 	ldr.w	r3, [ip, #24]
9000a7c8:	2300      	movs	r3, #0
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
9000a7ca:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
9000a7ce:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
9000a7d2:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
9000a7d6:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
9000a7da:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
9000a7de:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000a7e2:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
9000a7e6:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
9000a7ea:	f8dc 3014 	ldr.w	r3, [ip, #20]
9000a7ee:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
9000a7f2:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
9000a7f6:	696b      	ldr	r3, [r5, #20]
9000a7f8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a7fc:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a800:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a802:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a806:	6a28      	ldr	r0, [r5, #32]
9000a808:	4303      	orrs	r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
9000a80a:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
9000a80e:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
9000a812:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
9000a816:	2300      	movs	r3, #0
9000a818:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
9000a81c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
9000a81e:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a822:	bb59      	cbnz	r1, 9000a87c <HAL_LTDC_ConfigLayer+0x180>
  {
    tmp = 4U;
9000a824:	2304      	movs	r3, #4
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a826:	1abf      	subs	r7, r7, r2
9000a828:	6aaa      	ldr	r2, [r5, #40]	; 0x28
9000a82a:	fb03 f707 	mul.w	r7, r3, r7
9000a82e:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a832:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a834:	3707      	adds	r7, #7
9000a836:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
9000a83a:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
9000a83e:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
9000a842:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
9000a846:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
9000a84a:	4b12      	ldr	r3, [pc, #72]	; (9000a894 <HAL_LTDC_ConfigLayer+0x198>)
9000a84c:	f8dc 1030 	ldr.w	r1, [ip, #48]	; 0x30
9000a850:	400b      	ands	r3, r1
9000a852:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
9000a856:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a85a:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
9000a85c:	f859 3006 	ldr.w	r3, [r9, r6]
9000a860:	4313      	orrs	r3, r2
9000a862:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
9000a866:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
9000a868:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  return HAL_OK;
9000a86c:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
9000a86e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
9000a872:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
9000a876:	b003      	add	sp, #12
9000a878:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
9000a87c:	3901      	subs	r1, #1
9000a87e:	2906      	cmp	r1, #6
9000a880:	d903      	bls.n	9000a88a <HAL_LTDC_ConfigLayer+0x18e>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
9000a882:	2301      	movs	r3, #1
9000a884:	e7cf      	b.n	9000a826 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
9000a886:	2002      	movs	r0, #2
}
9000a888:	4770      	bx	lr
9000a88a:	4b03      	ldr	r3, [pc, #12]	; (9000a898 <HAL_LTDC_ConfigLayer+0x19c>)
9000a88c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
9000a890:	e7c9      	b.n	9000a826 <HAL_LTDC_ConfigLayer+0x12a>
9000a892:	bf00      	nop
9000a894:	fffff800 	.word	0xfffff800
9000a898:	9002a134 	.word	0x9002a134
9000a89c:	fffff8f8 	.word	0xfffff8f8

9000a8a0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
9000a8a0:	f890 20a0 	ldrb.w	r2, [r0, #160]	; 0xa0
9000a8a4:	2a01      	cmp	r2, #1
9000a8a6:	d019      	beq.n	9000a8dc <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a8a8:	6802      	ldr	r2, [r0, #0]
9000a8aa:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a8ac:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
9000a8ae:	f04f 0c00 	mov.w	ip, #0
{
9000a8b2:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
9000a8b4:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a8b8:	6b50      	ldr	r0, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
9000a8ba:	4c09      	ldr	r4, [pc, #36]	; (9000a8e0 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
9000a8bc:	f020 0001 	bic.w	r0, r0, #1
9000a8c0:	6350      	str	r0, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a8c2:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
9000a8c4:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
9000a8c6:	6b51      	ldr	r1, [r2, #52]	; 0x34
9000a8c8:	4301      	orrs	r1, r0
9000a8ca:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
9000a8cc:	f883 00a1 	strb.w	r0, [r3, #161]	; 0xa1
  return HAL_OK;
9000a8d0:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
9000a8d2:	f883 c0a0 	strb.w	ip, [r3, #160]	; 0xa0
}
9000a8d6:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a8da:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a8dc:	2002      	movs	r0, #2
}
9000a8de:	4770      	bx	lr
9000a8e0:	50001000 	.word	0x50001000

9000a8e4 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a8e4:	b538      	push	{r3, r4, r5, lr}
9000a8e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a8e8:	f7fd f984 	bl	90007bf4 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a8ec:	2c00      	cmp	r4, #0
9000a8ee:	d05a      	beq.n	9000a9a6 <HAL_MDMA_Init+0xc2>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a8f0:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a8f2:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a8f4:	2100      	movs	r1, #0
9000a8f6:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a8f8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
9000a8fc:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a900:	68da      	ldr	r2, [r3, #12]
9000a902:	f022 0201 	bic.w	r2, r2, #1
9000a906:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a908:	e005      	b.n	9000a916 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a90a:	f7fd f973 	bl	90007bf4 <HAL_GetTick>
9000a90e:	1b43      	subs	r3, r0, r5
9000a910:	2b05      	cmp	r3, #5
9000a912:	d841      	bhi.n	9000a998 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a914:	6823      	ldr	r3, [r4, #0]
9000a916:	68da      	ldr	r2, [r3, #12]
9000a918:	07d2      	lsls	r2, r2, #31
9000a91a:	d4f6      	bmi.n	9000a90a <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a91c:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a920:	69e0      	ldr	r0, [r4, #28]
9000a922:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a924:	68e1      	ldr	r1, [r4, #12]
9000a926:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a928:	4302      	orrs	r2, r0
9000a92a:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a92c:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a92e:	4302      	orrs	r2, r0
9000a930:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000a932:	4302      	orrs	r2, r0
9000a934:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000a936:	4302      	orrs	r2, r0
9000a938:	6b20      	ldr	r0, [r4, #48]	; 0x30
9000a93a:	4302      	orrs	r2, r0
9000a93c:	68a0      	ldr	r0, [r4, #8]
9000a93e:	4302      	orrs	r2, r0
9000a940:	6aa0      	ldr	r0, [r4, #40]	; 0x28
9000a942:	3801      	subs	r0, #1
9000a944:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a948:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a94a:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a94c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a950:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a952:	d103      	bne.n	9000a95c <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a954:	691a      	ldr	r2, [r3, #16]
9000a956:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
9000a95a:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a95c:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a95e:	6b62      	ldr	r2, [r4, #52]	; 0x34
9000a960:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a962:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a964:	db30      	blt.n	9000a9c8 <HAL_MDMA_Init+0xe4>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a966:	b292      	uxth	r2, r2
9000a968:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a96a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000a96c:	2a00      	cmp	r2, #0
9000a96e:	db1c      	blt.n	9000a9aa <HAL_MDMA_Init+0xc6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a970:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a972:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a976:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a97a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a97c:	d021      	beq.n	9000a9c2 <HAL_MDMA_Init+0xde>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a97e:	b2c0      	uxtb	r0, r0
9000a980:	6298      	str	r0, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a982:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a984:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a986:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
9000a988:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a98a:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a98c:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a98e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
9000a992:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
9000a996:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a998:	2240      	movs	r2, #64	; 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a99a:	2303      	movs	r3, #3
      return HAL_ERROR;
9000a99c:	2001      	movs	r0, #1
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a99e:	66a2      	str	r2, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a9a0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000a9a4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
9000a9a6:	2001      	movs	r0, #1
}
9000a9a8:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a9aa:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a9ac:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a9ae:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a9b2:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
9000a9b6:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a9b8:	6a19      	ldr	r1, [r3, #32]
9000a9ba:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a9be:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a9c0:	d1dd      	bne.n	9000a97e <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a9c2:	2200      	movs	r2, #0
9000a9c4:	629a      	str	r2, [r3, #40]	; 0x28
9000a9c6:	e7dc      	b.n	9000a982 <HAL_MDMA_Init+0x9e>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a9c8:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a9ca:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a9cc:	f441 2180 	orr.w	r1, r1, #262144	; 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a9d0:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a9d2:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a9d4:	621a      	str	r2, [r3, #32]
9000a9d6:	e7c8      	b.n	9000a96a <HAL_MDMA_Init+0x86>

9000a9d8 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a9d8:	b1f8      	cbz	r0, 9000aa1a <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a9da:	6802      	ldr	r2, [r0, #0]
9000a9dc:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a9de:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a9e0:	68d0      	ldr	r0, [r2, #12]
{
9000a9e2:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a9e4:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a9e8:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a9ea:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a9ec:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a9ee:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a9f0:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a9f2:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a9f4:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a9f6:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a9f8:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a9fa:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
9000a9fc:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
9000a9fe:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
9000aa00:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000aa02:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000aa04:	668b      	str	r3, [r1, #104]	; 0x68
  __HAL_UNLOCK(hmdma);
9000aa06:	f881 303c 	strb.w	r3, [r1, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000aa0a:	f881 303d 	strb.w	r3, [r1, #61]	; 0x3d
}
9000aa0e:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000aa12:	664b      	str	r3, [r1, #100]	; 0x64
  hmdma->LastLinkedListNodeAddress   = 0;
9000aa14:	e9c1 3317 	strd	r3, r3, [r1, #92]	; 0x5c
}
9000aa18:	4770      	bx	lr
    return HAL_ERROR;
9000aa1a:	2001      	movs	r0, #1
}
9000aa1c:	4770      	bx	lr
9000aa1e:	bf00      	nop

9000aa20 <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000aa20:	b310      	cbz	r0, 9000aa68 <HAL_MDMA_ConfigPostRequestMask+0x48>
9000aa22:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000aa24:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000aa28:	2801      	cmp	r0, #1
9000aa2a:	d01f      	beq.n	9000aa6c <HAL_MDMA_ConfigPostRequestMask+0x4c>
{
9000aa2c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000aa2e:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000aa32:	f893 c03d 	ldrb.w	ip, [r3, #61]	; 0x3d
9000aa36:	45f4      	cmp	ip, lr
9000aa38:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000aa3c:	f883 e03c 	strb.w	lr, [r3, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000aa40:	d004      	beq.n	9000aa4c <HAL_MDMA_ConfigPostRequestMask+0x2c>
    status =  HAL_ERROR;
9000aa42:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000aa44:	2200      	movs	r2, #0
9000aa46:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
9000aa4a:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000aa4c:	681d      	ldr	r5, [r3, #0]
9000aa4e:	692c      	ldr	r4, [r5, #16]
9000aa50:	f014 4480 	ands.w	r4, r4, #1073741824	; 0x40000000
9000aa54:	d1f6      	bne.n	9000aa44 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000aa56:	6329      	str	r1, [r5, #48]	; 0x30
      hmdma->Instance->CMDR = MaskData;
9000aa58:	636a      	str	r2, [r5, #52]	; 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000aa5a:	692a      	ldr	r2, [r5, #16]
      if(MaskAddress == 0U)
9000aa5c:	b941      	cbnz	r1, 9000aa70 <HAL_MDMA_ConfigPostRequestMask+0x50>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000aa5e:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000aa62:	4608      	mov	r0, r1
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000aa64:	612a      	str	r2, [r5, #16]
9000aa66:	e7ed      	b.n	9000aa44 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000aa68:	2001      	movs	r0, #1
9000aa6a:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000aa6c:	2002      	movs	r0, #2
}
9000aa6e:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000aa70:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
  HAL_StatusTypeDef  status = HAL_OK;
9000aa74:	4620      	mov	r0, r4
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000aa76:	612a      	str	r2, [r5, #16]
9000aa78:	e7e4      	b.n	9000aa44 <HAL_MDMA_ConfigPostRequestMask+0x24>
9000aa7a:	bf00      	nop

9000aa7c <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000aa7c:	2800      	cmp	r0, #0
9000aa7e:	d06f      	beq.n	9000ab60 <HAL_MDMA_Start_IT+0xe4>
9000aa80:	4684      	mov	ip, r0
  __HAL_LOCK(hmdma);
9000aa82:	f890 003c 	ldrb.w	r0, [r0, #60]	; 0x3c
9000aa86:	2801      	cmp	r0, #1
9000aa88:	d072      	beq.n	9000ab70 <HAL_MDMA_Start_IT+0xf4>
9000aa8a:	2001      	movs	r0, #1
9000aa8c:	f88c 003c 	strb.w	r0, [ip, #60]	; 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000aa90:	f89c 003d 	ldrb.w	r0, [ip, #61]	; 0x3d
9000aa94:	2801      	cmp	r0, #1
9000aa96:	d004      	beq.n	9000aaa2 <HAL_MDMA_Start_IT+0x26>
    __HAL_UNLOCK(hmdma);
9000aa98:	2300      	movs	r3, #0
    return HAL_BUSY;
9000aa9a:	2002      	movs	r0, #2
    __HAL_UNLOCK(hmdma);
9000aa9c:	f88c 303c 	strb.w	r3, [ip, #60]	; 0x3c
    return HAL_BUSY;
9000aaa0:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000aaa2:	2002      	movs	r0, #2
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000aaa4:	f3c3 0310 	ubfx	r3, r3, #0, #17
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000aaa8:	f011 4f5f 	tst.w	r1, #3741319168	; 0xdf000000
{
9000aaac:	b530      	push	{r4, r5, lr}
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000aaae:	9d03      	ldr	r5, [sp, #12]
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000aab0:	f88c 003d 	strb.w	r0, [ip, #61]	; 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000aab4:	f04f 0000 	mov.w	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
9000aab8:	f8dc 4000 	ldr.w	r4, [ip]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000aabc:	f105 3eff 	add.w	lr, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000aac0:	f8cc 0068 	str.w	r0, [ip, #104]	; 0x68
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000aac4:	f5a0 3000 	sub.w	r0, r0, #131072	; 0x20000
    __HAL_MDMA_DISABLE(hmdma);
9000aac8:	68e5      	ldr	r5, [r4, #12]
9000aaca:	f025 0501 	bic.w	r5, r5, #1
9000aace:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000aad0:	6965      	ldr	r5, [r4, #20]
9000aad2:	ea00 0005 	and.w	r0, r0, r5
9000aad6:	ea40 0003 	orr.w	r0, r0, r3
9000aada:	6160      	str	r0, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000aadc:	6963      	ldr	r3, [r4, #20]
9000aade:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000aae2:	ea43 530e 	orr.w	r3, r3, lr, lsl #20
9000aae6:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000aae8:	f04f 031f 	mov.w	r3, #31
9000aaec:	6063      	str	r3, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000aaee:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000aaf0:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000aaf2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000aaf4:	bf0c      	ite	eq
9000aaf6:	f443 3380 	orreq.w	r3, r3, #65536	; 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000aafa:	f423 3380 	bicne.w	r3, r3, #65536	; 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000aafe:	f012 4f5f 	tst.w	r2, #3741319168	; 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000ab02:	f8dc 204c 	ldr.w	r2, [ip, #76]	; 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000ab06:	62a3      	str	r3, [r4, #40]	; 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000ab08:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ab0a:	bf0c      	ite	eq
9000ab0c:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000ab10:	f423 3300 	bicne.w	r3, r3, #131072	; 0x20000
9000ab14:	62a3      	str	r3, [r4, #40]	; 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000ab16:	f8dc 305c 	ldr.w	r3, [ip, #92]	; 0x5c
9000ab1a:	6263      	str	r3, [r4, #36]	; 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000ab1c:	68e3      	ldr	r3, [r4, #12]
9000ab1e:	f043 0306 	orr.w	r3, r3, #6
9000ab22:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000ab24:	b11a      	cbz	r2, 9000ab2e <HAL_MDMA_Start_IT+0xb2>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000ab26:	68e3      	ldr	r3, [r4, #12]
9000ab28:	f043 0310 	orr.w	r3, r3, #16
9000ab2c:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ab2e:	f8dc 3050 	ldr.w	r3, [ip, #80]	; 0x50
9000ab32:	b11b      	cbz	r3, 9000ab3c <HAL_MDMA_Start_IT+0xc0>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000ab34:	68e3      	ldr	r3, [r4, #12]
9000ab36:	f043 0308 	orr.w	r3, r3, #8
9000ab3a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000ab3c:	f8dc 3048 	ldr.w	r3, [ip, #72]	; 0x48
9000ab40:	b11b      	cbz	r3, 9000ab4a <HAL_MDMA_Start_IT+0xce>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000ab42:	68e3      	ldr	r3, [r4, #12]
9000ab44:	f043 0320 	orr.w	r3, r3, #32
9000ab48:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000ab4a:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ab4c:	f8dc 2004 	ldr.w	r2, [ip, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000ab50:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ab54:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000ab58:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000ab5a:	d003      	beq.n	9000ab64 <HAL_MDMA_Start_IT+0xe8>
  return HAL_OK;
9000ab5c:	2000      	movs	r0, #0
}
9000ab5e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
9000ab60:	2001      	movs	r0, #1
9000ab62:	4770      	bx	lr
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000ab64:	68e3      	ldr	r3, [r4, #12]
  return HAL_OK;
9000ab66:	2000      	movs	r0, #0
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000ab68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000ab6c:	60e3      	str	r3, [r4, #12]
}
9000ab6e:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hmdma);
9000ab70:	2002      	movs	r0, #2
}
9000ab72:	4770      	bx	lr

9000ab74 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000ab74:	4603      	mov	r3, r0
9000ab76:	b188      	cbz	r0, 9000ab9c <HAL_MDMA_Abort_IT+0x28>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000ab78:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
9000ab7c:	2a02      	cmp	r2, #2
9000ab7e:	d003      	beq.n	9000ab88 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ab80:	2280      	movs	r2, #128	; 0x80
    return HAL_ERROR;
9000ab82:	2001      	movs	r0, #1
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000ab84:	669a      	str	r2, [r3, #104]	; 0x68
    return HAL_ERROR;
9000ab86:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000ab88:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab8a:	2104      	movs	r1, #4
  return HAL_OK;
9000ab8c:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000ab8e:	f883 103d 	strb.w	r1, [r3, #61]	; 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000ab92:	68d3      	ldr	r3, [r2, #12]
9000ab94:	f023 0301 	bic.w	r3, r3, #1
9000ab98:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
9000ab9a:	4770      	bx	lr
    return HAL_ERROR;
9000ab9c:	2001      	movs	r0, #1
}
9000ab9e:	4770      	bx	lr

9000aba0 <HAL_MDMA_IRQHandler>:
{
9000aba0:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000aba2:	2300      	movs	r3, #0
{
9000aba4:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000aba6:	f04f 45a4 	mov.w	r5, #1375731712	; 0x52000000
{
9000abaa:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000abac:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000abae:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000abb0:	4b57      	ldr	r3, [pc, #348]	; (9000ad10 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000abb2:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000abb4:	4a57      	ldr	r2, [pc, #348]	; (9000ad14 <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000abb6:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000abb8:	6823      	ldr	r3, [r4, #0]
9000abba:	441a      	add	r2, r3
9000abbc:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000abc0:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000abc4:	4202      	tst	r2, r0
9000abc6:	f000 80a0 	beq.w	9000ad0a <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000abca:	681a      	ldr	r2, [r3, #0]
9000abcc:	07d1      	lsls	r1, r2, #31
9000abce:	d529      	bpl.n	9000ac24 <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000abd0:	68da      	ldr	r2, [r3, #12]
9000abd2:	0792      	lsls	r2, r2, #30
9000abd4:	d526      	bpl.n	9000ac24 <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000abd6:	68da      	ldr	r2, [r3, #12]
9000abd8:	f022 0202 	bic.w	r2, r2, #2
9000abdc:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000abde:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000abe0:	6ea1      	ldr	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000abe2:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000abe4:	bf54      	ite	pl
9000abe6:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000abea:	f041 0102 	orrmi.w	r1, r1, #2
9000abee:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000abf0:	0591      	lsls	r1, r2, #22
9000abf2:	d503      	bpl.n	9000abfc <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000abf4:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000abf6:	f041 0104 	orr.w	r1, r1, #4
9000abfa:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000abfc:	05d0      	lsls	r0, r2, #23
9000abfe:	d503      	bpl.n	9000ac08 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000ac00:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000ac02:	f041 0108 	orr.w	r1, r1, #8
9000ac06:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000ac08:	0551      	lsls	r1, r2, #21
9000ac0a:	d503      	bpl.n	9000ac14 <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000ac0c:	6ea1      	ldr	r1, [r4, #104]	; 0x68
9000ac0e:	f041 0110 	orr.w	r1, r1, #16
9000ac12:	66a1      	str	r1, [r4, #104]	; 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000ac14:	0510      	lsls	r0, r2, #20
9000ac16:	d503      	bpl.n	9000ac20 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000ac18:	6ea2      	ldr	r2, [r4, #104]	; 0x68
9000ac1a:	f042 0220 	orr.w	r2, r2, #32
9000ac1e:	66a2      	str	r2, [r4, #104]	; 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000ac20:	2201      	movs	r2, #1
9000ac22:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000ac24:	681a      	ldr	r2, [r3, #0]
9000ac26:	06d1      	lsls	r1, r2, #27
9000ac28:	d509      	bpl.n	9000ac3e <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000ac2a:	68da      	ldr	r2, [r3, #12]
9000ac2c:	0692      	lsls	r2, r2, #26
9000ac2e:	d506      	bpl.n	9000ac3e <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000ac30:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000ac32:	6ca2      	ldr	r2, [r4, #72]	; 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000ac34:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000ac36:	b112      	cbz	r2, 9000ac3e <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000ac38:	4620      	mov	r0, r4
9000ac3a:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000ac3c:	6823      	ldr	r3, [r4, #0]
9000ac3e:	681a      	ldr	r2, [r3, #0]
9000ac40:	0710      	lsls	r0, r2, #28
9000ac42:	d509      	bpl.n	9000ac58 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000ac44:	68da      	ldr	r2, [r3, #12]
9000ac46:	06d1      	lsls	r1, r2, #27
9000ac48:	d506      	bpl.n	9000ac58 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ac4a:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000ac4c:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000ac4e:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000ac50:	b112      	cbz	r2, 9000ac58 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000ac52:	4620      	mov	r0, r4
9000ac54:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000ac56:	6823      	ldr	r3, [r4, #0]
9000ac58:	681a      	ldr	r2, [r3, #0]
9000ac5a:	0752      	lsls	r2, r2, #29
9000ac5c:	d509      	bpl.n	9000ac72 <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000ac5e:	68da      	ldr	r2, [r3, #12]
9000ac60:	0710      	lsls	r0, r2, #28
9000ac62:	d506      	bpl.n	9000ac72 <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ac64:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ac66:	6d22      	ldr	r2, [r4, #80]	; 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000ac68:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000ac6a:	b112      	cbz	r2, 9000ac72 <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000ac6c:	4620      	mov	r0, r4
9000ac6e:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000ac70:	6823      	ldr	r3, [r4, #0]
9000ac72:	681a      	ldr	r2, [r3, #0]
9000ac74:	0791      	lsls	r1, r2, #30
9000ac76:	d516      	bpl.n	9000aca6 <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000ac78:	68da      	ldr	r2, [r3, #12]
9000ac7a:	0752      	lsls	r2, r2, #29
9000ac7c:	d513      	bpl.n	9000aca6 <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000ac7e:	68da      	ldr	r2, [r3, #12]
9000ac80:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
9000ac84:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000ac86:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
9000ac8a:	2a04      	cmp	r2, #4
9000ac8c:	d034      	beq.n	9000acf8 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ac8e:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000ac90:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000ac92:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000ac94:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000ac96:	6c63      	ldr	r3, [r4, #68]	; 0x44
      __HAL_UNLOCK(hmdma);
9000ac98:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000ac9c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000aca0:	b10b      	cbz	r3, 9000aca6 <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000aca2:	4620      	mov	r0, r4
9000aca4:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000aca6:	6ea3      	ldr	r3, [r4, #104]	; 0x68
9000aca8:	2b00      	cmp	r3, #0
9000acaa:	d02e      	beq.n	9000ad0a <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000acac:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000acae:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000acb0:	4b19      	ldr	r3, [pc, #100]	; (9000ad18 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000acb2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000acb6:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000acba:	68cb      	ldr	r3, [r1, #12]
9000acbc:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000acc0:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000acc2:	60cb      	str	r3, [r1, #12]
9000acc4:	e002      	b.n	9000accc <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000acc6:	68cb      	ldr	r3, [r1, #12]
9000acc8:	07d8      	lsls	r0, r3, #31
9000acca:	d504      	bpl.n	9000acd6 <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000accc:	9b01      	ldr	r3, [sp, #4]
9000acce:	3301      	adds	r3, #1
9000acd0:	4293      	cmp	r3, r2
9000acd2:	9301      	str	r3, [sp, #4]
9000acd4:	d9f7      	bls.n	9000acc6 <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000acd6:	2300      	movs	r3, #0
9000acd8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000acdc:	68cb      	ldr	r3, [r1, #12]
9000acde:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000ace0:	bf4c      	ite	mi
9000ace2:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000ace4:	2301      	movpl	r3, #1
9000ace6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000acea:	6d63      	ldr	r3, [r4, #84]	; 0x54
9000acec:	b16b      	cbz	r3, 9000ad0a <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000acee:	4620      	mov	r0, r4
}
9000acf0:	b003      	add	sp, #12
9000acf2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000acf6:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000acf8:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000acfa:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000acfc:	6da3      	ldr	r3, [r4, #88]	; 0x58
        __HAL_UNLOCK(hmdma);
9000acfe:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000ad02:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000ad06:	2b00      	cmp	r3, #0
9000ad08:	d1f1      	bne.n	9000acee <HAL_MDMA_IRQHandler+0x14e>
}
9000ad0a:	b003      	add	sp, #12
9000ad0c:	bd30      	pop	{r4, r5, pc}
9000ad0e:	bf00      	nop
9000ad10:	24000060 	.word	0x24000060
9000ad14:	adffffc0 	.word	0xadffffc0
9000ad18:	1b4e81b5 	.word	0x1b4e81b5

9000ad1c <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000ad1c:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000ad1e:	4c10      	ldr	r4, [pc, #64]	; (9000ad60 <HAL_PWREx_ConfigSupply+0x44>)
9000ad20:	68e3      	ldr	r3, [r4, #12]
9000ad22:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000ad26:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000ad28:	d105      	bne.n	9000ad36 <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000ad2a:	f003 0307 	and.w	r3, r3, #7
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
9000ad2e:	1a18      	subs	r0, r3, r0
9000ad30:	bf18      	it	ne
9000ad32:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000ad34:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000ad36:	f023 0307 	bic.w	r3, r3, #7
9000ad3a:	4303      	orrs	r3, r0
9000ad3c:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000ad3e:	f7fc ff59 	bl	90007bf4 <HAL_GetTick>
9000ad42:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000ad44:	e005      	b.n	9000ad52 <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000ad46:	f7fc ff55 	bl	90007bf4 <HAL_GetTick>
9000ad4a:	1b40      	subs	r0, r0, r5
9000ad4c:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
9000ad50:	d804      	bhi.n	9000ad5c <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000ad52:	6863      	ldr	r3, [r4, #4]
9000ad54:	049b      	lsls	r3, r3, #18
9000ad56:	d5f6      	bpl.n	9000ad46 <HAL_PWREx_ConfigSupply+0x2a>
  return HAL_OK;
9000ad58:	2000      	movs	r0, #0
}
9000ad5a:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000ad5c:	2001      	movs	r0, #1
}
9000ad5e:	bd38      	pop	{r3, r4, r5, pc}
9000ad60:	58024800 	.word	0x58024800

9000ad64 <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ad64:	4b3b      	ldr	r3, [pc, #236]	; (9000ae54 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000ad66:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ad68:	6a9a      	ldr	r2, [r3, #40]	; 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ad6a:	6a9c      	ldr	r4, [r3, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ad6c:	6add      	ldr	r5, [r3, #44]	; 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000ad6e:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad72:	6b59      	ldr	r1, [r3, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000ad74:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000ad78:	d038      	beq.n	9000adec <HAL_RCC_GetSysClockFreq.part.0+0x88>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad7a:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000ad7e:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000ad82:	f002 0203 	and.w	r2, r2, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000ad86:	fb05 f101 	mul.w	r1, r5, r1
9000ad8a:	2a01      	cmp	r2, #1
9000ad8c:	ee07 1a90 	vmov	s15, r1
9000ad90:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
      {
        switch (pllsource)
9000ad94:	d002      	beq.n	9000ad9c <HAL_RCC_GetSysClockFreq.part.0+0x38>
9000ad96:	2a02      	cmp	r2, #2
9000ad98:	d04e      	beq.n	9000ae38 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000ad9a:	b34a      	cbz	r2, 9000adf0 <HAL_RCC_GetSysClockFreq.part.0+0x8c>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ad9c:	ee07 0a90 	vmov	s15, r0
9000ada0:	ed9f 5a2d 	vldr	s10, [pc, #180]	; 9000ae58 <HAL_RCC_GetSysClockFreq.part.0+0xf4>
9000ada4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ada8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000adaa:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000adae:	eddf 5a2b 	vldr	s11, [pc, #172]	; 9000ae5c <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000adb2:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000adb6:	ee07 3a90 	vmov	s15, r3
9000adba:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000adbe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000adc2:	eee7 7a25 	vfma.f32	s15, s14, s11
9000adc6:	ee77 7a86 	vadd.f32	s15, s15, s12
9000adca:	ee66 6aa7 	vmul.f32	s13, s13, s15
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000adce:	4b21      	ldr	r3, [pc, #132]	; (9000ae54 <HAL_RCC_GetSysClockFreq.part.0+0xf0>)
9000add0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000add2:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000add6:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000add8:	ee07 3a90 	vmov	s15, r3
9000addc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000ade0:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000ade4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ade8:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000adec:	bc30      	pop	{r4, r5}
9000adee:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000adf0:	681a      	ldr	r2, [r3, #0]
9000adf2:	0692      	lsls	r2, r2, #26
9000adf4:	d527      	bpl.n	9000ae46 <HAL_RCC_GetSysClockFreq.part.0+0xe2>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000adf6:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000adf8:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000adfc:	4a18      	ldr	r2, [pc, #96]	; (9000ae60 <HAL_RCC_GetSysClockFreq.part.0+0xfc>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000adfe:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000ae02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ae04:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ae08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ae0c:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000ae5c <HAL_RCC_GetSysClockFreq.part.0+0xf8>
9000ae10:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ae14:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ae16:	ee06 3a90 	vmov	s13, r3
9000ae1a:	ee06 2a10 	vmov	s12, r2
9000ae1e:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000ae22:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ae26:	eee7 6a05 	vfma.f32	s13, s14, s10
9000ae2a:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ae2e:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000ae32:	ee66 6a87 	vmul.f32	s13, s13, s14
9000ae36:	e7ca      	b.n	9000adce <HAL_RCC_GetSysClockFreq.part.0+0x6a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ae38:	ee07 0a90 	vmov	s15, r0
9000ae3c:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000ae64 <HAL_RCC_GetSysClockFreq.part.0+0x100>
9000ae40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ae44:	e7b0      	b.n	9000ada8 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ae46:	ee07 0a90 	vmov	s15, r0
9000ae4a:	ed9f 5a07 	vldr	s10, [pc, #28]	; 9000ae68 <HAL_RCC_GetSysClockFreq.part.0+0x104>
9000ae4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000ae52:	e7a9      	b.n	9000ada8 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000ae54:	58024400 	.word	0x58024400
9000ae58:	4a742400 	.word	0x4a742400
9000ae5c:	39000000 	.word	0x39000000
9000ae60:	03d09000 	.word	0x03d09000
9000ae64:	4bbebc20 	.word	0x4bbebc20
9000ae68:	4c742400 	.word	0x4c742400

9000ae6c <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000ae6c:	2800      	cmp	r0, #0
9000ae6e:	f000 81e8 	beq.w	9000b242 <HAL_RCC_OscConfig+0x3d6>
{
9000ae72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000ae74:	6803      	ldr	r3, [r0, #0]
9000ae76:	4604      	mov	r4, r0
9000ae78:	07d9      	lsls	r1, r3, #31
9000ae7a:	d52e      	bpl.n	9000aeda <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ae7c:	49a4      	ldr	r1, [pc, #656]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000ae7e:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000ae80:	6a89      	ldr	r1, [r1, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000ae82:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000ae86:	2a10      	cmp	r2, #16
9000ae88:	f000 8107 	beq.w	9000b09a <HAL_RCC_OscConfig+0x22e>
9000ae8c:	2a18      	cmp	r2, #24
9000ae8e:	f000 80ff 	beq.w	9000b090 <HAL_RCC_OscConfig+0x224>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ae92:	6863      	ldr	r3, [r4, #4]
9000ae94:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000ae98:	f000 812a 	beq.w	9000b0f0 <HAL_RCC_OscConfig+0x284>
9000ae9c:	2b00      	cmp	r3, #0
9000ae9e:	f000 8168 	beq.w	9000b172 <HAL_RCC_OscConfig+0x306>
9000aea2:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
9000aea6:	4b9a      	ldr	r3, [pc, #616]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000aea8:	681a      	ldr	r2, [r3, #0]
9000aeaa:	f000 8289 	beq.w	9000b3c0 <HAL_RCC_OscConfig+0x554>
9000aeae:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
9000aeb2:	601a      	str	r2, [r3, #0]
9000aeb4:	681a      	ldr	r2, [r3, #0]
9000aeb6:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
9000aeba:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000aebc:	f7fc fe9a 	bl	90007bf4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aec0:	4e93      	ldr	r6, [pc, #588]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
        tickstart = HAL_GetTick();
9000aec2:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aec4:	e005      	b.n	9000aed2 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000aec6:	f7fc fe95 	bl	90007bf4 <HAL_GetTick>
9000aeca:	1b40      	subs	r0, r0, r5
9000aecc:	2864      	cmp	r0, #100	; 0x64
9000aece:	f200 814e 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aed2:	6833      	ldr	r3, [r6, #0]
9000aed4:	039b      	lsls	r3, r3, #14
9000aed6:	d5f6      	bpl.n	9000aec6 <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000aed8:	6823      	ldr	r3, [r4, #0]
9000aeda:	079d      	lsls	r5, r3, #30
9000aedc:	f100 808a 	bmi.w	9000aff4 <HAL_RCC_OscConfig+0x188>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000aee0:	06d9      	lsls	r1, r3, #27
9000aee2:	d533      	bpl.n	9000af4c <HAL_RCC_OscConfig+0xe0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aee4:	4a8a      	ldr	r2, [pc, #552]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000aee6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000aee8:	6a92      	ldr	r2, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aeea:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000aeee:	2b08      	cmp	r3, #8
9000aef0:	f000 80e3 	beq.w	9000b0ba <HAL_RCC_OscConfig+0x24e>
9000aef4:	2b18      	cmp	r3, #24
9000aef6:	f000 80db 	beq.w	9000b0b0 <HAL_RCC_OscConfig+0x244>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aefa:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000aefc:	4d84      	ldr	r5, [pc, #528]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000aefe:	2b00      	cmp	r3, #0
9000af00:	f000 816f 	beq.w	9000b1e2 <HAL_RCC_OscConfig+0x376>
        __HAL_RCC_CSI_ENABLE();
9000af04:	682b      	ldr	r3, [r5, #0]
9000af06:	f043 0380 	orr.w	r3, r3, #128	; 0x80
9000af0a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000af0c:	f7fc fe72 	bl	90007bf4 <HAL_GetTick>
9000af10:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000af12:	e005      	b.n	9000af20 <HAL_RCC_OscConfig+0xb4>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000af14:	f7fc fe6e 	bl	90007bf4 <HAL_GetTick>
9000af18:	1b80      	subs	r0, r0, r6
9000af1a:	2802      	cmp	r0, #2
9000af1c:	f200 8127 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000af20:	682b      	ldr	r3, [r5, #0]
9000af22:	05db      	lsls	r3, r3, #23
9000af24:	d5f6      	bpl.n	9000af14 <HAL_RCC_OscConfig+0xa8>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000af26:	f7fc fe6b 	bl	90007c00 <HAL_GetREVID>
9000af2a:	f241 0303 	movw	r3, #4099	; 0x1003
9000af2e:	4298      	cmp	r0, r3
9000af30:	f200 826d 	bhi.w	9000b40e <HAL_RCC_OscConfig+0x5a2>
9000af34:	6a22      	ldr	r2, [r4, #32]
9000af36:	686b      	ldr	r3, [r5, #4]
9000af38:	2a20      	cmp	r2, #32
9000af3a:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000af3e:	bf0c      	ite	eq
9000af40:	f043 4380 	orreq.w	r3, r3, #1073741824	; 0x40000000
9000af44:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000af48:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000af4a:	6823      	ldr	r3, [r4, #0]
9000af4c:	071d      	lsls	r5, r3, #28
9000af4e:	d516      	bpl.n	9000af7e <HAL_RCC_OscConfig+0x112>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000af50:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000af52:	4d6f      	ldr	r5, [pc, #444]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000af54:	2b00      	cmp	r3, #0
9000af56:	f000 8122 	beq.w	9000b19e <HAL_RCC_OscConfig+0x332>
      __HAL_RCC_LSI_ENABLE();
9000af5a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000af5c:	f043 0301 	orr.w	r3, r3, #1
9000af60:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000af62:	f7fc fe47 	bl	90007bf4 <HAL_GetTick>
9000af66:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000af68:	e005      	b.n	9000af76 <HAL_RCC_OscConfig+0x10a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000af6a:	f7fc fe43 	bl	90007bf4 <HAL_GetTick>
9000af6e:	1b80      	subs	r0, r0, r6
9000af70:	2802      	cmp	r0, #2
9000af72:	f200 80fc 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000af76:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000af78:	0798      	lsls	r0, r3, #30
9000af7a:	d5f6      	bpl.n	9000af6a <HAL_RCC_OscConfig+0xfe>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000af7c:	6823      	ldr	r3, [r4, #0]
9000af7e:	069a      	lsls	r2, r3, #26
9000af80:	d516      	bpl.n	9000afb0 <HAL_RCC_OscConfig+0x144>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000af82:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000af84:	4d62      	ldr	r5, [pc, #392]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000af86:	2b00      	cmp	r3, #0
9000af88:	f000 811a 	beq.w	9000b1c0 <HAL_RCC_OscConfig+0x354>
      __HAL_RCC_HSI48_ENABLE();
9000af8c:	682b      	ldr	r3, [r5, #0]
9000af8e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
9000af92:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000af94:	f7fc fe2e 	bl	90007bf4 <HAL_GetTick>
9000af98:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000af9a:	e005      	b.n	9000afa8 <HAL_RCC_OscConfig+0x13c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000af9c:	f7fc fe2a 	bl	90007bf4 <HAL_GetTick>
9000afa0:	1b80      	subs	r0, r0, r6
9000afa2:	2802      	cmp	r0, #2
9000afa4:	f200 80e3 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000afa8:	682b      	ldr	r3, [r5, #0]
9000afaa:	049f      	lsls	r7, r3, #18
9000afac:	d5f6      	bpl.n	9000af9c <HAL_RCC_OscConfig+0x130>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000afae:	6823      	ldr	r3, [r4, #0]
9000afb0:	0759      	lsls	r1, r3, #29
9000afb2:	f100 80a3 	bmi.w	9000b0fc <HAL_RCC_OscConfig+0x290>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000afb6:	6a60      	ldr	r0, [r4, #36]	; 0x24
9000afb8:	b1d0      	cbz	r0, 9000aff0 <HAL_RCC_OscConfig+0x184>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000afba:	4d55      	ldr	r5, [pc, #340]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000afbc:	692b      	ldr	r3, [r5, #16]
9000afbe:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000afc2:	2b18      	cmp	r3, #24
9000afc4:	f000 81ae 	beq.w	9000b324 <HAL_RCC_OscConfig+0x4b8>
        __HAL_RCC_PLL_DISABLE();
9000afc8:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000afca:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
9000afcc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
9000afd0:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000afd2:	f000 8142 	beq.w	9000b25a <HAL_RCC_OscConfig+0x3ee>
        tickstart = HAL_GetTick();
9000afd6:	f7fc fe0d 	bl	90007bf4 <HAL_GetTick>
9000afda:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000afdc:	e005      	b.n	9000afea <HAL_RCC_OscConfig+0x17e>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000afde:	f7fc fe09 	bl	90007bf4 <HAL_GetTick>
9000afe2:	1b00      	subs	r0, r0, r4
9000afe4:	2802      	cmp	r0, #2
9000afe6:	f200 80c2 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000afea:	682b      	ldr	r3, [r5, #0]
9000afec:	019b      	lsls	r3, r3, #6
9000afee:	d4f6      	bmi.n	9000afde <HAL_RCC_OscConfig+0x172>
  return HAL_OK;
9000aff0:	2000      	movs	r0, #0
}
9000aff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000aff4:	4a46      	ldr	r2, [pc, #280]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000aff6:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000aff8:	6a92      	ldr	r2, [r2, #40]	; 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000affa:	f013 0338 	ands.w	r3, r3, #56	; 0x38
9000affe:	d12d      	bne.n	9000b05c <HAL_RCC_OscConfig+0x1f0>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000b000:	4b43      	ldr	r3, [pc, #268]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b002:	68e2      	ldr	r2, [r4, #12]
9000b004:	681b      	ldr	r3, [r3, #0]
9000b006:	0759      	lsls	r1, r3, #29
9000b008:	d501      	bpl.n	9000b00e <HAL_RCC_OscConfig+0x1a2>
9000b00a:	2a00      	cmp	r2, #0
9000b00c:	d04e      	beq.n	9000b0ac <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b00e:	4d40      	ldr	r5, [pc, #256]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b010:	682b      	ldr	r3, [r5, #0]
9000b012:	f023 0319 	bic.w	r3, r3, #25
9000b016:	4313      	orrs	r3, r2
9000b018:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b01a:	f7fc fdeb 	bl	90007bf4 <HAL_GetTick>
9000b01e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b020:	e005      	b.n	9000b02e <HAL_RCC_OscConfig+0x1c2>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b022:	f7fc fde7 	bl	90007bf4 <HAL_GetTick>
9000b026:	1b80      	subs	r0, r0, r6
9000b028:	2802      	cmp	r0, #2
9000b02a:	f200 80a0 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b02e:	682b      	ldr	r3, [r5, #0]
9000b030:	075b      	lsls	r3, r3, #29
9000b032:	d5f6      	bpl.n	9000b022 <HAL_RCC_OscConfig+0x1b6>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b034:	f7fc fde4 	bl	90007c00 <HAL_GetREVID>
9000b038:	f241 0303 	movw	r3, #4099	; 0x1003
9000b03c:	4298      	cmp	r0, r3
9000b03e:	f200 80f7 	bhi.w	9000b230 <HAL_RCC_OscConfig+0x3c4>
9000b042:	6922      	ldr	r2, [r4, #16]
9000b044:	686b      	ldr	r3, [r5, #4]
9000b046:	2a40      	cmp	r2, #64	; 0x40
9000b048:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000b04c:	bf0c      	ite	eq
9000b04e:	f443 3300 	orreq.w	r3, r3, #131072	; 0x20000
9000b052:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000b056:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b058:	6823      	ldr	r3, [r4, #0]
9000b05a:	e741      	b.n	9000aee0 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b05c:	2b18      	cmp	r3, #24
9000b05e:	f000 80e3 	beq.w	9000b228 <HAL_RCC_OscConfig+0x3bc>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b062:	4d2b      	ldr	r5, [pc, #172]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b064:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b066:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000b068:	2a00      	cmp	r2, #0
9000b06a:	f000 80cc 	beq.w	9000b206 <HAL_RCC_OscConfig+0x39a>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000b06e:	f023 0319 	bic.w	r3, r3, #25
9000b072:	4313      	orrs	r3, r2
9000b074:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b076:	f7fc fdbd 	bl	90007bf4 <HAL_GetTick>
9000b07a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b07c:	e004      	b.n	9000b088 <HAL_RCC_OscConfig+0x21c>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b07e:	f7fc fdb9 	bl	90007bf4 <HAL_GetTick>
9000b082:	1b80      	subs	r0, r0, r6
9000b084:	2802      	cmp	r0, #2
9000b086:	d872      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b088:	682b      	ldr	r3, [r5, #0]
9000b08a:	075f      	lsls	r7, r3, #29
9000b08c:	d5f7      	bpl.n	9000b07e <HAL_RCC_OscConfig+0x212>
9000b08e:	e7d1      	b.n	9000b034 <HAL_RCC_OscConfig+0x1c8>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000b090:	f001 0103 	and.w	r1, r1, #3
9000b094:	2902      	cmp	r1, #2
9000b096:	f47f aefc 	bne.w	9000ae92 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000b09a:	4a1d      	ldr	r2, [pc, #116]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b09c:	6812      	ldr	r2, [r2, #0]
9000b09e:	0392      	lsls	r2, r2, #14
9000b0a0:	f57f af1b 	bpl.w	9000aeda <HAL_RCC_OscConfig+0x6e>
9000b0a4:	6862      	ldr	r2, [r4, #4]
9000b0a6:	2a00      	cmp	r2, #0
9000b0a8:	f47f af17 	bne.w	9000aeda <HAL_RCC_OscConfig+0x6e>
        return HAL_ERROR;
9000b0ac:	2001      	movs	r0, #1
}
9000b0ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000b0b0:	f002 0203 	and.w	r2, r2, #3
9000b0b4:	2a01      	cmp	r2, #1
9000b0b6:	f47f af20 	bne.w	9000aefa <HAL_RCC_OscConfig+0x8e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000b0ba:	4b15      	ldr	r3, [pc, #84]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b0bc:	681b      	ldr	r3, [r3, #0]
9000b0be:	05da      	lsls	r2, r3, #23
9000b0c0:	d502      	bpl.n	9000b0c8 <HAL_RCC_OscConfig+0x25c>
9000b0c2:	69e3      	ldr	r3, [r4, #28]
9000b0c4:	2b80      	cmp	r3, #128	; 0x80
9000b0c6:	d1f1      	bne.n	9000b0ac <HAL_RCC_OscConfig+0x240>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b0c8:	f7fc fd9a 	bl	90007c00 <HAL_GetREVID>
9000b0cc:	f241 0303 	movw	r3, #4099	; 0x1003
9000b0d0:	4298      	cmp	r0, r3
9000b0d2:	f200 80b8 	bhi.w	9000b246 <HAL_RCC_OscConfig+0x3da>
9000b0d6:	6a22      	ldr	r2, [r4, #32]
9000b0d8:	2a20      	cmp	r2, #32
9000b0da:	f000 81a7 	beq.w	9000b42c <HAL_RCC_OscConfig+0x5c0>
9000b0de:	490c      	ldr	r1, [pc, #48]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b0e0:	684b      	ldr	r3, [r1, #4]
9000b0e2:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000b0e6:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000b0ea:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b0ec:	6823      	ldr	r3, [r4, #0]
9000b0ee:	e72d      	b.n	9000af4c <HAL_RCC_OscConfig+0xe0>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b0f0:	4a07      	ldr	r2, [pc, #28]	; (9000b110 <HAL_RCC_OscConfig+0x2a4>)
9000b0f2:	6813      	ldr	r3, [r2, #0]
9000b0f4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b0f8:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000b0fa:	e6df      	b.n	9000aebc <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000b0fc:	4d05      	ldr	r5, [pc, #20]	; (9000b114 <HAL_RCC_OscConfig+0x2a8>)
9000b0fe:	682b      	ldr	r3, [r5, #0]
9000b100:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000b104:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000b106:	f7fc fd75 	bl	90007bf4 <HAL_GetTick>
9000b10a:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b10c:	e009      	b.n	9000b122 <HAL_RCC_OscConfig+0x2b6>
9000b10e:	bf00      	nop
9000b110:	58024400 	.word	0x58024400
9000b114:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000b118:	f7fc fd6c 	bl	90007bf4 <HAL_GetTick>
9000b11c:	1b80      	subs	r0, r0, r6
9000b11e:	2864      	cmp	r0, #100	; 0x64
9000b120:	d825      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000b122:	682b      	ldr	r3, [r5, #0]
9000b124:	05da      	lsls	r2, r3, #23
9000b126:	d5f7      	bpl.n	9000b118 <HAL_RCC_OscConfig+0x2ac>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b128:	68a3      	ldr	r3, [r4, #8]
9000b12a:	2b01      	cmp	r3, #1
9000b12c:	f000 8178 	beq.w	9000b420 <HAL_RCC_OscConfig+0x5b4>
9000b130:	2b00      	cmp	r3, #0
9000b132:	f000 8153 	beq.w	9000b3dc <HAL_RCC_OscConfig+0x570>
9000b136:	2b05      	cmp	r3, #5
9000b138:	4ba5      	ldr	r3, [pc, #660]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
9000b13a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b13c:	f000 817f 	beq.w	9000b43e <HAL_RCC_OscConfig+0x5d2>
9000b140:	f022 0201 	bic.w	r2, r2, #1
9000b144:	671a      	str	r2, [r3, #112]	; 0x70
9000b146:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b148:	f022 0204 	bic.w	r2, r2, #4
9000b14c:	671a      	str	r2, [r3, #112]	; 0x70
      tickstart = HAL_GetTick();
9000b14e:	f7fc fd51 	bl	90007bf4 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b152:	4e9f      	ldr	r6, [pc, #636]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b154:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
9000b158:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b15a:	e004      	b.n	9000b166 <HAL_RCC_OscConfig+0x2fa>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b15c:	f7fc fd4a 	bl	90007bf4 <HAL_GetTick>
9000b160:	1b40      	subs	r0, r0, r5
9000b162:	42b8      	cmp	r0, r7
9000b164:	d803      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000b166:	6f33      	ldr	r3, [r6, #112]	; 0x70
9000b168:	079b      	lsls	r3, r3, #30
9000b16a:	d5f7      	bpl.n	9000b15c <HAL_RCC_OscConfig+0x2f0>
9000b16c:	e723      	b.n	9000afb6 <HAL_RCC_OscConfig+0x14a>
            return HAL_TIMEOUT;
9000b16e:	2003      	movs	r0, #3
}
9000b170:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b172:	4d97      	ldr	r5, [pc, #604]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
9000b174:	682b      	ldr	r3, [r5, #0]
9000b176:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
9000b17a:	602b      	str	r3, [r5, #0]
9000b17c:	682b      	ldr	r3, [r5, #0]
9000b17e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
9000b182:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b184:	f7fc fd36 	bl	90007bf4 <HAL_GetTick>
9000b188:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b18a:	e004      	b.n	9000b196 <HAL_RCC_OscConfig+0x32a>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000b18c:	f7fc fd32 	bl	90007bf4 <HAL_GetTick>
9000b190:	1b80      	subs	r0, r0, r6
9000b192:	2864      	cmp	r0, #100	; 0x64
9000b194:	d8eb      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000b196:	682b      	ldr	r3, [r5, #0]
9000b198:	039f      	lsls	r7, r3, #14
9000b19a:	d4f7      	bmi.n	9000b18c <HAL_RCC_OscConfig+0x320>
9000b19c:	e69c      	b.n	9000aed8 <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000b19e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b1a0:	f023 0301 	bic.w	r3, r3, #1
9000b1a4:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
9000b1a6:	f7fc fd25 	bl	90007bf4 <HAL_GetTick>
9000b1aa:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b1ac:	e004      	b.n	9000b1b8 <HAL_RCC_OscConfig+0x34c>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000b1ae:	f7fc fd21 	bl	90007bf4 <HAL_GetTick>
9000b1b2:	1b80      	subs	r0, r0, r6
9000b1b4:	2802      	cmp	r0, #2
9000b1b6:	d8da      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000b1b8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
9000b1ba:	0799      	lsls	r1, r3, #30
9000b1bc:	d4f7      	bmi.n	9000b1ae <HAL_RCC_OscConfig+0x342>
9000b1be:	e6dd      	b.n	9000af7c <HAL_RCC_OscConfig+0x110>
      __HAL_RCC_HSI48_DISABLE();
9000b1c0:	682b      	ldr	r3, [r5, #0]
9000b1c2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9000b1c6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000b1c8:	f7fc fd14 	bl	90007bf4 <HAL_GetTick>
9000b1cc:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b1ce:	e004      	b.n	9000b1da <HAL_RCC_OscConfig+0x36e>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000b1d0:	f7fc fd10 	bl	90007bf4 <HAL_GetTick>
9000b1d4:	1b80      	subs	r0, r0, r6
9000b1d6:	2802      	cmp	r0, #2
9000b1d8:	d8c9      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000b1da:	682b      	ldr	r3, [r5, #0]
9000b1dc:	0498      	lsls	r0, r3, #18
9000b1de:	d4f7      	bmi.n	9000b1d0 <HAL_RCC_OscConfig+0x364>
9000b1e0:	e6e5      	b.n	9000afae <HAL_RCC_OscConfig+0x142>
        __HAL_RCC_CSI_DISABLE();
9000b1e2:	682b      	ldr	r3, [r5, #0]
9000b1e4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000b1e8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b1ea:	f7fc fd03 	bl	90007bf4 <HAL_GetTick>
9000b1ee:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b1f0:	e004      	b.n	9000b1fc <HAL_RCC_OscConfig+0x390>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000b1f2:	f7fc fcff 	bl	90007bf4 <HAL_GetTick>
9000b1f6:	1b80      	subs	r0, r0, r6
9000b1f8:	2802      	cmp	r0, #2
9000b1fa:	d8b8      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000b1fc:	682b      	ldr	r3, [r5, #0]
9000b1fe:	05df      	lsls	r7, r3, #23
9000b200:	d4f7      	bmi.n	9000b1f2 <HAL_RCC_OscConfig+0x386>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b202:	6823      	ldr	r3, [r4, #0]
9000b204:	e6a2      	b.n	9000af4c <HAL_RCC_OscConfig+0xe0>
        __HAL_RCC_HSI_DISABLE();
9000b206:	f023 0301 	bic.w	r3, r3, #1
9000b20a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b20c:	f7fc fcf2 	bl	90007bf4 <HAL_GetTick>
9000b210:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b212:	e004      	b.n	9000b21e <HAL_RCC_OscConfig+0x3b2>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000b214:	f7fc fcee 	bl	90007bf4 <HAL_GetTick>
9000b218:	1b80      	subs	r0, r0, r6
9000b21a:	2802      	cmp	r0, #2
9000b21c:	d8a7      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000b21e:	682b      	ldr	r3, [r5, #0]
9000b220:	0758      	lsls	r0, r3, #29
9000b222:	d4f7      	bmi.n	9000b214 <HAL_RCC_OscConfig+0x3a8>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b224:	6823      	ldr	r3, [r4, #0]
9000b226:	e65b      	b.n	9000aee0 <HAL_RCC_OscConfig+0x74>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000b228:	0790      	lsls	r0, r2, #30
9000b22a:	f47f af1a 	bne.w	9000b062 <HAL_RCC_OscConfig+0x1f6>
9000b22e:	e6e7      	b.n	9000b000 <HAL_RCC_OscConfig+0x194>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000b230:	686b      	ldr	r3, [r5, #4]
9000b232:	6922      	ldr	r2, [r4, #16]
9000b234:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
9000b238:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b23c:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000b23e:	6823      	ldr	r3, [r4, #0]
9000b240:	e64e      	b.n	9000aee0 <HAL_RCC_OscConfig+0x74>
    return HAL_ERROR;
9000b242:	2001      	movs	r0, #1
}
9000b244:	4770      	bx	lr
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b246:	4a62      	ldr	r2, [pc, #392]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
9000b248:	6a21      	ldr	r1, [r4, #32]
9000b24a:	68d3      	ldr	r3, [r2, #12]
9000b24c:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b250:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000b254:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b256:	6823      	ldr	r3, [r4, #0]
9000b258:	e678      	b.n	9000af4c <HAL_RCC_OscConfig+0xe0>
        tickstart = HAL_GetTick();
9000b25a:	f7fc fccb 	bl	90007bf4 <HAL_GetTick>
9000b25e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b260:	e004      	b.n	9000b26c <HAL_RCC_OscConfig+0x400>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b262:	f7fc fcc7 	bl	90007bf4 <HAL_GetTick>
9000b266:	1b80      	subs	r0, r0, r6
9000b268:	2802      	cmp	r0, #2
9000b26a:	d880      	bhi.n	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000b26c:	682b      	ldr	r3, [r5, #0]
9000b26e:	0199      	lsls	r1, r3, #6
9000b270:	d4f7      	bmi.n	9000b262 <HAL_RCC_OscConfig+0x3f6>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b272:	6aa9      	ldr	r1, [r5, #40]	; 0x28
9000b274:	4b57      	ldr	r3, [pc, #348]	; (9000b3d4 <HAL_RCC_OscConfig+0x568>)
9000b276:	6aa2      	ldr	r2, [r4, #40]	; 0x28
9000b278:	400b      	ands	r3, r1
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b27a:	4957      	ldr	r1, [pc, #348]	; (9000b3d8 <HAL_RCC_OscConfig+0x56c>)
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b27c:	4e54      	ldr	r6, [pc, #336]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000b27e:	4313      	orrs	r3, r2
9000b280:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b282:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000b286:	62ab      	str	r3, [r5, #40]	; 0x28
9000b288:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	; 0x34
9000b28c:	3b01      	subs	r3, #1
9000b28e:	3a01      	subs	r2, #1
9000b290:	025b      	lsls	r3, r3, #9
9000b292:	0412      	lsls	r2, r2, #16
9000b294:	b29b      	uxth	r3, r3
9000b296:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b29a:	4313      	orrs	r3, r2
9000b29c:	6b22      	ldr	r2, [r4, #48]	; 0x30
9000b29e:	3a01      	subs	r2, #1
9000b2a0:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b2a4:	4313      	orrs	r3, r2
9000b2a6:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000b2a8:	3a01      	subs	r2, #1
9000b2aa:	0612      	lsls	r2, r2, #24
9000b2ac:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b2b0:	4313      	orrs	r3, r2
9000b2b2:	632b      	str	r3, [r5, #48]	; 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000b2b4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2b6:	f023 0301 	bic.w	r3, r3, #1
9000b2ba:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b2bc:	6b6a      	ldr	r2, [r5, #52]	; 0x34
9000b2be:	6ca3      	ldr	r3, [r4, #72]	; 0x48
9000b2c0:	4011      	ands	r1, r2
9000b2c2:	ea41 01c3 	orr.w	r1, r1, r3, lsl #3
9000b2c6:	6369      	str	r1, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000b2c8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2ca:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000b2cc:	f023 030c 	bic.w	r3, r3, #12
9000b2d0:	4313      	orrs	r3, r2
9000b2d2:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000b2d4:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2d6:	6c62      	ldr	r2, [r4, #68]	; 0x44
9000b2d8:	f023 0302 	bic.w	r3, r3, #2
9000b2dc:	4313      	orrs	r3, r2
9000b2de:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000b2e0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2e2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
9000b2e6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b2e8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
9000b2ee:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000b2f0:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2f2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
9000b2f6:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000b2f8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000b2fa:	f043 0301 	orr.w	r3, r3, #1
9000b2fe:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
9000b300:	682b      	ldr	r3, [r5, #0]
9000b302:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
9000b306:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000b308:	f7fc fc74 	bl	90007bf4 <HAL_GetTick>
9000b30c:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b30e:	e005      	b.n	9000b31c <HAL_RCC_OscConfig+0x4b0>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000b310:	f7fc fc70 	bl	90007bf4 <HAL_GetTick>
9000b314:	1b00      	subs	r0, r0, r4
9000b316:	2802      	cmp	r0, #2
9000b318:	f63f af29 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b31c:	6833      	ldr	r3, [r6, #0]
9000b31e:	019a      	lsls	r2, r3, #6
9000b320:	d5f6      	bpl.n	9000b310 <HAL_RCC_OscConfig+0x4a4>
9000b322:	e665      	b.n	9000aff0 <HAL_RCC_OscConfig+0x184>
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b324:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000b326:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000b328:	6b2e      	ldr	r6, [r5, #48]	; 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b32a:	f43f ae62 	beq.w	9000aff2 <HAL_RCC_OscConfig+0x186>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b32e:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000b332:	6aa1      	ldr	r1, [r4, #40]	; 0x28
9000b334:	428b      	cmp	r3, r1
9000b336:	f47f aeb9 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b33a:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000b33e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b340:	429a      	cmp	r2, r3
9000b342:	f47f aeb3 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b346:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000b348:	f3c6 0208 	ubfx	r2, r6, #0, #9
9000b34c:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000b34e:	429a      	cmp	r2, r3
9000b350:	f47f aeac 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b354:	6b63      	ldr	r3, [r4, #52]	; 0x34
9000b356:	f3c6 2246 	ubfx	r2, r6, #9, #7
9000b35a:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000b35c:	429a      	cmp	r2, r3
9000b35e:	f47f aea5 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b362:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000b364:	f3c6 4206 	ubfx	r2, r6, #16, #7
9000b368:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000b36a:	429a      	cmp	r2, r3
9000b36c:	f47f ae9e 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000b370:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000b372:	f3c6 6606 	ubfx	r6, r6, #24, #7
9000b376:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000b378:	429e      	cmp	r6, r3
9000b37a:	f47f ae97 	bne.w	9000b0ac <HAL_RCC_OscConfig+0x240>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b37e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b380:	6ca2      	ldr	r2, [r4, #72]	; 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000b382:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000b386:	429a      	cmp	r2, r3
9000b388:	f43f ae32 	beq.w	9000aff0 <HAL_RCC_OscConfig+0x184>
          __HAL_RCC_PLLFRACN_DISABLE();
9000b38c:	4a10      	ldr	r2, [pc, #64]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
9000b38e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b390:	f023 0301 	bic.w	r3, r3, #1
9000b394:	62d3      	str	r3, [r2, #44]	; 0x2c
          tickstart = HAL_GetTick();
9000b396:	f7fc fc2d 	bl	90007bf4 <HAL_GetTick>
9000b39a:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000b39c:	f7fc fc2a 	bl	90007bf4 <HAL_GetTick>
9000b3a0:	42a8      	cmp	r0, r5
9000b3a2:	d0fb      	beq.n	9000b39c <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b3a4:	4a0a      	ldr	r2, [pc, #40]	; (9000b3d0 <HAL_RCC_OscConfig+0x564>)
  return HAL_OK;
9000b3a6:	2000      	movs	r0, #0
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000b3a8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000b3aa:	4b0b      	ldr	r3, [pc, #44]	; (9000b3d8 <HAL_RCC_OscConfig+0x56c>)
9000b3ac:	6b54      	ldr	r4, [r2, #52]	; 0x34
9000b3ae:	4023      	ands	r3, r4
9000b3b0:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000b3b4:	6353      	str	r3, [r2, #52]	; 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000b3b6:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
9000b3b8:	f043 0301 	orr.w	r3, r3, #1
9000b3bc:	62d3      	str	r3, [r2, #44]	; 0x2c
}
9000b3be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000b3c0:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
9000b3c4:	601a      	str	r2, [r3, #0]
9000b3c6:	681a      	ldr	r2, [r3, #0]
9000b3c8:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
9000b3cc:	601a      	str	r2, [r3, #0]
9000b3ce:	e575      	b.n	9000aebc <HAL_RCC_OscConfig+0x50>
9000b3d0:	58024400 	.word	0x58024400
9000b3d4:	fffffc0c 	.word	0xfffffc0c
9000b3d8:	ffff0007 	.word	0xffff0007
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b3dc:	4d1c      	ldr	r5, [pc, #112]	; (9000b450 <HAL_RCC_OscConfig+0x5e4>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b3de:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b3e2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b3e4:	f023 0301 	bic.w	r3, r3, #1
9000b3e8:	672b      	str	r3, [r5, #112]	; 0x70
9000b3ea:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b3ec:	f023 0304 	bic.w	r3, r3, #4
9000b3f0:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
9000b3f2:	f7fc fbff 	bl	90007bf4 <HAL_GetTick>
9000b3f6:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b3f8:	e005      	b.n	9000b406 <HAL_RCC_OscConfig+0x59a>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000b3fa:	f7fc fbfb 	bl	90007bf4 <HAL_GetTick>
9000b3fe:	1b80      	subs	r0, r0, r6
9000b400:	42b8      	cmp	r0, r7
9000b402:	f63f aeb4 	bhi.w	9000b16e <HAL_RCC_OscConfig+0x302>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000b406:	6f2b      	ldr	r3, [r5, #112]	; 0x70
9000b408:	0798      	lsls	r0, r3, #30
9000b40a:	d4f6      	bmi.n	9000b3fa <HAL_RCC_OscConfig+0x58e>
9000b40c:	e5d3      	b.n	9000afb6 <HAL_RCC_OscConfig+0x14a>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b40e:	68eb      	ldr	r3, [r5, #12]
9000b410:	6a22      	ldr	r2, [r4, #32]
9000b412:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
9000b416:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000b41a:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b41c:	6823      	ldr	r3, [r4, #0]
9000b41e:	e595      	b.n	9000af4c <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b420:	4a0b      	ldr	r2, [pc, #44]	; (9000b450 <HAL_RCC_OscConfig+0x5e4>)
9000b422:	6f13      	ldr	r3, [r2, #112]	; 0x70
9000b424:	f043 0301 	orr.w	r3, r3, #1
9000b428:	6713      	str	r3, [r2, #112]	; 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000b42a:	e690      	b.n	9000b14e <HAL_RCC_OscConfig+0x2e2>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000b42c:	4a08      	ldr	r2, [pc, #32]	; (9000b450 <HAL_RCC_OscConfig+0x5e4>)
9000b42e:	6853      	ldr	r3, [r2, #4]
9000b430:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
9000b434:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
9000b438:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000b43a:	6823      	ldr	r3, [r4, #0]
9000b43c:	e586      	b.n	9000af4c <HAL_RCC_OscConfig+0xe0>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000b43e:	f042 0204 	orr.w	r2, r2, #4
9000b442:	671a      	str	r2, [r3, #112]	; 0x70
9000b444:	6f1a      	ldr	r2, [r3, #112]	; 0x70
9000b446:	f042 0201 	orr.w	r2, r2, #1
9000b44a:	671a      	str	r2, [r3, #112]	; 0x70
9000b44c:	e67f      	b.n	9000b14e <HAL_RCC_OscConfig+0x2e2>
9000b44e:	bf00      	nop
9000b450:	58024400 	.word	0x58024400

9000b454 <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b454:	4a47      	ldr	r2, [pc, #284]	; (9000b574 <HAL_RCC_GetSysClockFreq+0x120>)
9000b456:	6913      	ldr	r3, [r2, #16]
9000b458:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b45c:	2b10      	cmp	r3, #16
9000b45e:	d004      	beq.n	9000b46a <HAL_RCC_GetSysClockFreq+0x16>
9000b460:	2b18      	cmp	r3, #24
9000b462:	d00d      	beq.n	9000b480 <HAL_RCC_GetSysClockFreq+0x2c>
9000b464:	b11b      	cbz	r3, 9000b46e <HAL_RCC_GetSysClockFreq+0x1a>
      sysclockfreq = CSI_VALUE;
9000b466:	4844      	ldr	r0, [pc, #272]	; (9000b578 <HAL_RCC_GetSysClockFreq+0x124>)
9000b468:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b46a:	4844      	ldr	r0, [pc, #272]	; (9000b57c <HAL_RCC_GetSysClockFreq+0x128>)
9000b46c:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b46e:	6813      	ldr	r3, [r2, #0]
9000b470:	0699      	lsls	r1, r3, #26
9000b472:	d54a      	bpl.n	9000b50a <HAL_RCC_GetSysClockFreq+0xb6>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b474:	6813      	ldr	r3, [r2, #0]
9000b476:	4842      	ldr	r0, [pc, #264]	; (9000b580 <HAL_RCC_GetSysClockFreq+0x12c>)
9000b478:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b47c:	40d8      	lsrs	r0, r3
9000b47e:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b480:	6a93      	ldr	r3, [r2, #40]	; 0x28
{
9000b482:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b484:	6a94      	ldr	r4, [r2, #40]	; 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b486:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
      if (pllm != 0U)
9000b488:	f414 7f7c 	tst.w	r4, #1008	; 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b48c:	6b51      	ldr	r1, [r2, #52]	; 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000b48e:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000b492:	d038      	beq.n	9000b506 <HAL_RCC_GetSysClockFreq+0xb2>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b494:	f3c1 01cc 	ubfx	r1, r1, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000b498:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000b49c:	f003 0303 	and.w	r3, r3, #3
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000b4a0:	fb05 f101 	mul.w	r1, r5, r1
9000b4a4:	2b01      	cmp	r3, #1
9000b4a6:	ee07 1a90 	vmov	s15, r1
9000b4aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
        switch (pllsource)
9000b4ae:	d002      	beq.n	9000b4b6 <HAL_RCC_GetSysClockFreq+0x62>
9000b4b0:	2b02      	cmp	r3, #2
9000b4b2:	d02c      	beq.n	9000b50e <HAL_RCC_GetSysClockFreq+0xba>
9000b4b4:	b393      	cbz	r3, 9000b51c <HAL_RCC_GetSysClockFreq+0xc8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b4b6:	ee07 0a90 	vmov	s15, r0
9000b4ba:	ed9f 5a32 	vldr	s10, [pc, #200]	; 9000b584 <HAL_RCC_GetSysClockFreq+0x130>
9000b4be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b4c2:	6b13      	ldr	r3, [r2, #48]	; 0x30
9000b4c4:	eec5 6a27 	vdiv.f32	s13, s10, s15
9000b4c8:	eddf 5a2f 	vldr	s11, [pc, #188]	; 9000b588 <HAL_RCC_GetSysClockFreq+0x134>
9000b4cc:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000b4d0:	ee07 3a90 	vmov	s15, r3
9000b4d4:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
9000b4d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b4dc:	eee7 7a25 	vfma.f32	s15, s14, s11
9000b4e0:	ee77 7a86 	vadd.f32	s15, s15, s12
9000b4e4:	ee66 6aa7 	vmul.f32	s13, s13, s15
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000b4e8:	4b22      	ldr	r3, [pc, #136]	; (9000b574 <HAL_RCC_GetSysClockFreq+0x120>)
9000b4ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9000b4ec:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000b4f0:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000b4f2:	ee07 3a90 	vmov	s15, r3
9000b4f6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000b4fa:	eec6 7a87 	vdiv.f32	s15, s13, s14
9000b4fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000b502:	ee17 0a90 	vmov	r0, s15
}
9000b506:	bc30      	pop	{r4, r5}
9000b508:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b50a:	481d      	ldr	r0, [pc, #116]	; (9000b580 <HAL_RCC_GetSysClockFreq+0x12c>)
}
9000b50c:	4770      	bx	lr
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b50e:	ee07 0a90 	vmov	s15, r0
9000b512:	ed9f 5a1e 	vldr	s10, [pc, #120]	; 9000b58c <HAL_RCC_GetSysClockFreq+0x138>
9000b516:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b51a:	e7d2      	b.n	9000b4c2 <HAL_RCC_GetSysClockFreq+0x6e>
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b51c:	6813      	ldr	r3, [r2, #0]
9000b51e:	069b      	lsls	r3, r3, #26
9000b520:	d520      	bpl.n	9000b564 <HAL_RCC_GetSysClockFreq+0x110>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b522:	6814      	ldr	r4, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b524:	ee07 0a90 	vmov	s15, r0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b528:	4915      	ldr	r1, [pc, #84]	; (9000b580 <HAL_RCC_GetSysClockFreq+0x12c>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b52a:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
9000b52e:	6b13      	ldr	r3, [r2, #48]	; 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b530:	f3c4 04c1 	ubfx	r4, r4, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b534:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b538:	ed9f 5a13 	vldr	s10, [pc, #76]	; 9000b588 <HAL_RCC_GetSysClockFreq+0x134>
9000b53c:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b540:	40e1      	lsrs	r1, r4
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b542:	ee06 3a90 	vmov	s13, r3
9000b546:	ee06 1a10 	vmov	s12, r1
9000b54a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000b54e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000b552:	eee7 6a05 	vfma.f32	s13, s14, s10
9000b556:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000b55a:	ee76 6aa5 	vadd.f32	s13, s13, s11
9000b55e:	ee66 6a87 	vmul.f32	s13, s13, s14
9000b562:	e7c1      	b.n	9000b4e8 <HAL_RCC_GetSysClockFreq+0x94>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000b564:	ee07 0a90 	vmov	s15, r0
9000b568:	ed9f 5a09 	vldr	s10, [pc, #36]	; 9000b590 <HAL_RCC_GetSysClockFreq+0x13c>
9000b56c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000b570:	e7a7      	b.n	9000b4c2 <HAL_RCC_GetSysClockFreq+0x6e>
9000b572:	bf00      	nop
9000b574:	58024400 	.word	0x58024400
9000b578:	003d0900 	.word	0x003d0900
9000b57c:	017d7840 	.word	0x017d7840
9000b580:	03d09000 	.word	0x03d09000
9000b584:	4a742400 	.word	0x4a742400
9000b588:	39000000 	.word	0x39000000
9000b58c:	4bbebc20 	.word	0x4bbebc20
9000b590:	4c742400 	.word	0x4c742400

9000b594 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000b594:	2800      	cmp	r0, #0
9000b596:	f000 810c 	beq.w	9000b7b2 <HAL_RCC_ClockConfig+0x21e>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b59a:	4a8c      	ldr	r2, [pc, #560]	; (9000b7cc <HAL_RCC_ClockConfig+0x238>)
9000b59c:	6813      	ldr	r3, [r2, #0]
9000b59e:	f003 030f 	and.w	r3, r3, #15
9000b5a2:	428b      	cmp	r3, r1
{
9000b5a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000b5a8:	4604      	mov	r4, r0
9000b5aa:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000b5ac:	d20c      	bcs.n	9000b5c8 <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b5ae:	6813      	ldr	r3, [r2, #0]
9000b5b0:	f023 030f 	bic.w	r3, r3, #15
9000b5b4:	430b      	orrs	r3, r1
9000b5b6:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b5b8:	6813      	ldr	r3, [r2, #0]
9000b5ba:	f003 030f 	and.w	r3, r3, #15
9000b5be:	428b      	cmp	r3, r1
9000b5c0:	d002      	beq.n	9000b5c8 <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000b5c2:	2001      	movs	r0, #1
}
9000b5c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b5c8:	6823      	ldr	r3, [r4, #0]
9000b5ca:	075f      	lsls	r7, r3, #29
9000b5cc:	d50b      	bpl.n	9000b5e6 <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b5ce:	4980      	ldr	r1, [pc, #512]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b5d0:	6920      	ldr	r0, [r4, #16]
9000b5d2:	698a      	ldr	r2, [r1, #24]
9000b5d4:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b5d8:	4290      	cmp	r0, r2
9000b5da:	d904      	bls.n	9000b5e6 <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b5dc:	698a      	ldr	r2, [r1, #24]
9000b5de:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b5e2:	4302      	orrs	r2, r0
9000b5e4:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b5e6:	071e      	lsls	r6, r3, #28
9000b5e8:	d50b      	bpl.n	9000b602 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b5ea:	4979      	ldr	r1, [pc, #484]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b5ec:	6960      	ldr	r0, [r4, #20]
9000b5ee:	69ca      	ldr	r2, [r1, #28]
9000b5f0:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b5f4:	4290      	cmp	r0, r2
9000b5f6:	d904      	bls.n	9000b602 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b5f8:	69ca      	ldr	r2, [r1, #28]
9000b5fa:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b5fe:	4302      	orrs	r2, r0
9000b600:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b602:	06d8      	lsls	r0, r3, #27
9000b604:	d50b      	bpl.n	9000b61e <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b606:	4972      	ldr	r1, [pc, #456]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b608:	69a0      	ldr	r0, [r4, #24]
9000b60a:	69ca      	ldr	r2, [r1, #28]
9000b60c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b610:	4290      	cmp	r0, r2
9000b612:	d904      	bls.n	9000b61e <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b614:	69ca      	ldr	r2, [r1, #28]
9000b616:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b61a:	4302      	orrs	r2, r0
9000b61c:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b61e:	0699      	lsls	r1, r3, #26
9000b620:	d50b      	bpl.n	9000b63a <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b622:	496b      	ldr	r1, [pc, #428]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b624:	69e0      	ldr	r0, [r4, #28]
9000b626:	6a0a      	ldr	r2, [r1, #32]
9000b628:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b62c:	4290      	cmp	r0, r2
9000b62e:	d904      	bls.n	9000b63a <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b630:	6a0a      	ldr	r2, [r1, #32]
9000b632:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b636:	4302      	orrs	r2, r0
9000b638:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b63a:	079a      	lsls	r2, r3, #30
9000b63c:	f140 80ab 	bpl.w	9000b796 <HAL_RCC_ClockConfig+0x202>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b640:	4863      	ldr	r0, [pc, #396]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b642:	68e1      	ldr	r1, [r4, #12]
9000b644:	6982      	ldr	r2, [r0, #24]
9000b646:	f002 020f 	and.w	r2, r2, #15
9000b64a:	4291      	cmp	r1, r2
9000b64c:	d904      	bls.n	9000b658 <HAL_RCC_ClockConfig+0xc4>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b64e:	6982      	ldr	r2, [r0, #24]
9000b650:	f022 020f 	bic.w	r2, r2, #15
9000b654:	430a      	orrs	r2, r1
9000b656:	6182      	str	r2, [r0, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b658:	07d8      	lsls	r0, r3, #31
9000b65a:	d530      	bpl.n	9000b6be <HAL_RCC_ClockConfig+0x12a>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000b65c:	4a5c      	ldr	r2, [pc, #368]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b65e:	68a1      	ldr	r1, [r4, #8]
9000b660:	6993      	ldr	r3, [r2, #24]
9000b662:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
9000b666:	430b      	orrs	r3, r1
9000b668:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b66a:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b66c:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000b66e:	2902      	cmp	r1, #2
9000b670:	f000 80a1 	beq.w	9000b7b6 <HAL_RCC_ClockConfig+0x222>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000b674:	2903      	cmp	r1, #3
9000b676:	f000 8098 	beq.w	9000b7aa <HAL_RCC_ClockConfig+0x216>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000b67a:	2901      	cmp	r1, #1
9000b67c:	f000 80a1 	beq.w	9000b7c2 <HAL_RCC_ClockConfig+0x22e>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000b680:	0758      	lsls	r0, r3, #29
9000b682:	d59e      	bpl.n	9000b5c2 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b684:	4e52      	ldr	r6, [pc, #328]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b686:	f241 3888 	movw	r8, #5000	; 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000b68a:	6933      	ldr	r3, [r6, #16]
9000b68c:	f023 0307 	bic.w	r3, r3, #7
9000b690:	430b      	orrs	r3, r1
9000b692:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000b694:	f7fc faae 	bl	90007bf4 <HAL_GetTick>
9000b698:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b69a:	e005      	b.n	9000b6a8 <HAL_RCC_ClockConfig+0x114>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000b69c:	f7fc faaa 	bl	90007bf4 <HAL_GetTick>
9000b6a0:	1bc0      	subs	r0, r0, r7
9000b6a2:	4540      	cmp	r0, r8
9000b6a4:	f200 808b 	bhi.w	9000b7be <HAL_RCC_ClockConfig+0x22a>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000b6a8:	6933      	ldr	r3, [r6, #16]
9000b6aa:	6862      	ldr	r2, [r4, #4]
9000b6ac:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b6b0:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000b6b4:	d1f2      	bne.n	9000b69c <HAL_RCC_ClockConfig+0x108>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000b6b6:	6823      	ldr	r3, [r4, #0]
9000b6b8:	0799      	lsls	r1, r3, #30
9000b6ba:	d506      	bpl.n	9000b6ca <HAL_RCC_ClockConfig+0x136>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000b6bc:	68e1      	ldr	r1, [r4, #12]
9000b6be:	4844      	ldr	r0, [pc, #272]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b6c0:	6982      	ldr	r2, [r0, #24]
9000b6c2:	f002 020f 	and.w	r2, r2, #15
9000b6c6:	428a      	cmp	r2, r1
9000b6c8:	d869      	bhi.n	9000b79e <HAL_RCC_ClockConfig+0x20a>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000b6ca:	4940      	ldr	r1, [pc, #256]	; (9000b7cc <HAL_RCC_ClockConfig+0x238>)
9000b6cc:	680a      	ldr	r2, [r1, #0]
9000b6ce:	f002 020f 	and.w	r2, r2, #15
9000b6d2:	42aa      	cmp	r2, r5
9000b6d4:	d90a      	bls.n	9000b6ec <HAL_RCC_ClockConfig+0x158>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000b6d6:	680a      	ldr	r2, [r1, #0]
9000b6d8:	f022 020f 	bic.w	r2, r2, #15
9000b6dc:	432a      	orrs	r2, r5
9000b6de:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000b6e0:	680a      	ldr	r2, [r1, #0]
9000b6e2:	f002 020f 	and.w	r2, r2, #15
9000b6e6:	42aa      	cmp	r2, r5
9000b6e8:	f47f af6b 	bne.w	9000b5c2 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000b6ec:	075a      	lsls	r2, r3, #29
9000b6ee:	d50b      	bpl.n	9000b708 <HAL_RCC_ClockConfig+0x174>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000b6f0:	4937      	ldr	r1, [pc, #220]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b6f2:	6920      	ldr	r0, [r4, #16]
9000b6f4:	698a      	ldr	r2, [r1, #24]
9000b6f6:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b6fa:	4290      	cmp	r0, r2
9000b6fc:	d204      	bcs.n	9000b708 <HAL_RCC_ClockConfig+0x174>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000b6fe:	698a      	ldr	r2, [r1, #24]
9000b700:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b704:	4302      	orrs	r2, r0
9000b706:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000b708:	071f      	lsls	r7, r3, #28
9000b70a:	d50b      	bpl.n	9000b724 <HAL_RCC_ClockConfig+0x190>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000b70c:	4930      	ldr	r1, [pc, #192]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b70e:	6960      	ldr	r0, [r4, #20]
9000b710:	69ca      	ldr	r2, [r1, #28]
9000b712:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b716:	4290      	cmp	r0, r2
9000b718:	d204      	bcs.n	9000b724 <HAL_RCC_ClockConfig+0x190>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000b71a:	69ca      	ldr	r2, [r1, #28]
9000b71c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
9000b720:	4302      	orrs	r2, r0
9000b722:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000b724:	06de      	lsls	r6, r3, #27
9000b726:	d50b      	bpl.n	9000b740 <HAL_RCC_ClockConfig+0x1ac>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000b728:	4929      	ldr	r1, [pc, #164]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b72a:	69a0      	ldr	r0, [r4, #24]
9000b72c:	69ca      	ldr	r2, [r1, #28]
9000b72e:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b732:	4290      	cmp	r0, r2
9000b734:	d204      	bcs.n	9000b740 <HAL_RCC_ClockConfig+0x1ac>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000b736:	69ca      	ldr	r2, [r1, #28]
9000b738:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
9000b73c:	4302      	orrs	r2, r0
9000b73e:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000b740:	069d      	lsls	r5, r3, #26
9000b742:	d50b      	bpl.n	9000b75c <HAL_RCC_ClockConfig+0x1c8>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000b744:	4a22      	ldr	r2, [pc, #136]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b746:	69e1      	ldr	r1, [r4, #28]
9000b748:	6a13      	ldr	r3, [r2, #32]
9000b74a:	f003 0370 	and.w	r3, r3, #112	; 0x70
9000b74e:	4299      	cmp	r1, r3
9000b750:	d204      	bcs.n	9000b75c <HAL_RCC_ClockConfig+0x1c8>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000b752:	6a13      	ldr	r3, [r2, #32]
9000b754:	f023 0370 	bic.w	r3, r3, #112	; 0x70
9000b758:	430b      	orrs	r3, r1
9000b75a:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b75c:	f7ff fe7a 	bl	9000b454 <HAL_RCC_GetSysClockFreq>
9000b760:	4a1b      	ldr	r2, [pc, #108]	; (9000b7d0 <HAL_RCC_ClockConfig+0x23c>)
9000b762:	4603      	mov	r3, r0
9000b764:	481b      	ldr	r0, [pc, #108]	; (9000b7d4 <HAL_RCC_ClockConfig+0x240>)
9000b766:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b768:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b76a:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000b76e:	4d1a      	ldr	r5, [pc, #104]	; (9000b7d8 <HAL_RCC_ClockConfig+0x244>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b770:	f002 020f 	and.w	r2, r2, #15
9000b774:	4c19      	ldr	r4, [pc, #100]	; (9000b7dc <HAL_RCC_ClockConfig+0x248>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b776:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b778:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b77a:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000b77e:	4818      	ldr	r0, [pc, #96]	; (9000b7e0 <HAL_RCC_ClockConfig+0x24c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b780:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000b784:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000b786:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000b788:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b78a:	40d3      	lsrs	r3, r2
9000b78c:	6023      	str	r3, [r4, #0]
}
9000b78e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000b792:	f7f7 bf67 	b.w	90003664 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000b796:	07da      	lsls	r2, r3, #31
9000b798:	f53f af60 	bmi.w	9000b65c <HAL_RCC_ClockConfig+0xc8>
9000b79c:	e795      	b.n	9000b6ca <HAL_RCC_ClockConfig+0x136>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000b79e:	6982      	ldr	r2, [r0, #24]
9000b7a0:	f022 020f 	bic.w	r2, r2, #15
9000b7a4:	430a      	orrs	r2, r1
9000b7a6:	6182      	str	r2, [r0, #24]
9000b7a8:	e78f      	b.n	9000b6ca <HAL_RCC_ClockConfig+0x136>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000b7aa:	019f      	lsls	r7, r3, #6
9000b7ac:	f53f af6a 	bmi.w	9000b684 <HAL_RCC_ClockConfig+0xf0>
9000b7b0:	e707      	b.n	9000b5c2 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000b7b2:	2001      	movs	r0, #1
}
9000b7b4:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000b7b6:	039b      	lsls	r3, r3, #14
9000b7b8:	f53f af64 	bmi.w	9000b684 <HAL_RCC_ClockConfig+0xf0>
9000b7bc:	e701      	b.n	9000b5c2 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000b7be:	2003      	movs	r0, #3
9000b7c0:	e700      	b.n	9000b5c4 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000b7c2:	05de      	lsls	r6, r3, #23
9000b7c4:	f53f af5e 	bmi.w	9000b684 <HAL_RCC_ClockConfig+0xf0>
9000b7c8:	e6fb      	b.n	9000b5c2 <HAL_RCC_ClockConfig+0x2e>
9000b7ca:	bf00      	nop
9000b7cc:	52002000 	.word	0x52002000
9000b7d0:	58024400 	.word	0x58024400
9000b7d4:	90029ec4 	.word	0x90029ec4
9000b7d8:	24000060 	.word	0x24000060
9000b7dc:	24000064 	.word	0x24000064
9000b7e0:	2400006c 	.word	0x2400006c

9000b7e4 <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b7e4:	4a1c      	ldr	r2, [pc, #112]	; (9000b858 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000b7e6:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b7e8:	6913      	ldr	r3, [r2, #16]
9000b7ea:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b7ee:	2b10      	cmp	r3, #16
9000b7f0:	d021      	beq.n	9000b836 <HAL_RCC_GetPCLK1Freq+0x52>
9000b7f2:	2b18      	cmp	r3, #24
9000b7f4:	d02a      	beq.n	9000b84c <HAL_RCC_GetPCLK1Freq+0x68>
9000b7f6:	b303      	cbz	r3, 9000b83a <HAL_RCC_GetPCLK1Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b7f8:	4818      	ldr	r0, [pc, #96]	; (9000b85c <HAL_RCC_GetPCLK1Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b7fa:	4a17      	ldr	r2, [pc, #92]	; (9000b858 <HAL_RCC_GetPCLK1Freq+0x74>)
9000b7fc:	4918      	ldr	r1, [pc, #96]	; (9000b860 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000b7fe:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b800:	4c18      	ldr	r4, [pc, #96]	; (9000b864 <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b802:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b806:	4d18      	ldr	r5, [pc, #96]	; (9000b868 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b808:	5ccb      	ldrb	r3, [r1, r3]
9000b80a:	f003 031f 	and.w	r3, r3, #31
9000b80e:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b810:	6993      	ldr	r3, [r2, #24]
9000b812:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b816:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b818:	5ccb      	ldrb	r3, [r1, r3]
9000b81a:	f003 031f 	and.w	r3, r3, #31
9000b81e:	fa20 f303 	lsr.w	r3, r0, r3
9000b822:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000b824:	69d2      	ldr	r2, [r2, #28]
9000b826:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000b82a:	5c88      	ldrb	r0, [r1, r2]
9000b82c:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000b830:	fa23 f000 	lsr.w	r0, r3, r0
9000b834:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b836:	480d      	ldr	r0, [pc, #52]	; (9000b86c <HAL_RCC_GetPCLK1Freq+0x88>)
9000b838:	e7df      	b.n	9000b7fa <HAL_RCC_GetPCLK1Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b83a:	6813      	ldr	r3, [r2, #0]
9000b83c:	069b      	lsls	r3, r3, #26
9000b83e:	d508      	bpl.n	9000b852 <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b840:	6813      	ldr	r3, [r2, #0]
9000b842:	480b      	ldr	r0, [pc, #44]	; (9000b870 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b844:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b848:	40d8      	lsrs	r0, r3
9000b84a:	e7d6      	b.n	9000b7fa <HAL_RCC_GetPCLK1Freq+0x16>
9000b84c:	f7ff fa8a 	bl	9000ad64 <HAL_RCC_GetSysClockFreq.part.0>
9000b850:	e7d3      	b.n	9000b7fa <HAL_RCC_GetPCLK1Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b852:	4807      	ldr	r0, [pc, #28]	; (9000b870 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000b854:	e7d1      	b.n	9000b7fa <HAL_RCC_GetPCLK1Freq+0x16>
9000b856:	bf00      	nop
9000b858:	58024400 	.word	0x58024400
9000b85c:	003d0900 	.word	0x003d0900
9000b860:	90029ec4 	.word	0x90029ec4
9000b864:	24000064 	.word	0x24000064
9000b868:	24000060 	.word	0x24000060
9000b86c:	017d7840 	.word	0x017d7840
9000b870:	03d09000 	.word	0x03d09000

9000b874 <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b874:	4a1c      	ldr	r2, [pc, #112]	; (9000b8e8 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b876:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b878:	6913      	ldr	r3, [r2, #16]
9000b87a:	f003 0338 	and.w	r3, r3, #56	; 0x38
9000b87e:	2b10      	cmp	r3, #16
9000b880:	d021      	beq.n	9000b8c6 <HAL_RCC_GetPCLK2Freq+0x52>
9000b882:	2b18      	cmp	r3, #24
9000b884:	d02a      	beq.n	9000b8dc <HAL_RCC_GetPCLK2Freq+0x68>
9000b886:	b303      	cbz	r3, 9000b8ca <HAL_RCC_GetPCLK2Freq+0x56>
      sysclockfreq = CSI_VALUE;
9000b888:	4818      	ldr	r0, [pc, #96]	; (9000b8ec <HAL_RCC_GetPCLK2Freq+0x78>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b88a:	4a17      	ldr	r2, [pc, #92]	; (9000b8e8 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b88c:	4918      	ldr	r1, [pc, #96]	; (9000b8f0 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b88e:	6993      	ldr	r3, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b890:	4c18      	ldr	r4, [pc, #96]	; (9000b8f4 <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b892:	f3c3 2303 	ubfx	r3, r3, #8, #4
  SystemCoreClock = common_system_clock;
9000b896:	4d18      	ldr	r5, [pc, #96]	; (9000b8f8 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b898:	5ccb      	ldrb	r3, [r1, r3]
9000b89a:	f003 031f 	and.w	r3, r3, #31
9000b89e:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b8a0:	6993      	ldr	r3, [r2, #24]
9000b8a2:	f003 030f 	and.w	r3, r3, #15
  SystemCoreClock = common_system_clock;
9000b8a6:	6028      	str	r0, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b8a8:	5ccb      	ldrb	r3, [r1, r3]
9000b8aa:	f003 031f 	and.w	r3, r3, #31
9000b8ae:	fa20 f303 	lsr.w	r3, r0, r3
9000b8b2:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b8b4:	69d2      	ldr	r2, [r2, #28]
9000b8b6:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b8ba:	5c88      	ldrb	r0, [r1, r2]
9000b8bc:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b8c0:	fa23 f000 	lsr.w	r0, r3, r0
9000b8c4:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b8c6:	480d      	ldr	r0, [pc, #52]	; (9000b8fc <HAL_RCC_GetPCLK2Freq+0x88>)
9000b8c8:	e7df      	b.n	9000b88a <HAL_RCC_GetPCLK2Freq+0x16>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b8ca:	6813      	ldr	r3, [r2, #0]
9000b8cc:	069b      	lsls	r3, r3, #26
9000b8ce:	d508      	bpl.n	9000b8e2 <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b8d0:	6813      	ldr	r3, [r2, #0]
9000b8d2:	480b      	ldr	r0, [pc, #44]	; (9000b900 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b8d4:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000b8d8:	40d8      	lsrs	r0, r3
9000b8da:	e7d6      	b.n	9000b88a <HAL_RCC_GetPCLK2Freq+0x16>
9000b8dc:	f7ff fa42 	bl	9000ad64 <HAL_RCC_GetSysClockFreq.part.0>
9000b8e0:	e7d3      	b.n	9000b88a <HAL_RCC_GetPCLK2Freq+0x16>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b8e2:	4807      	ldr	r0, [pc, #28]	; (9000b900 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b8e4:	e7d1      	b.n	9000b88a <HAL_RCC_GetPCLK2Freq+0x16>
9000b8e6:	bf00      	nop
9000b8e8:	58024400 	.word	0x58024400
9000b8ec:	003d0900 	.word	0x003d0900
9000b8f0:	90029ec4 	.word	0x90029ec4
9000b8f4:	24000064 	.word	0x24000064
9000b8f8:	24000060 	.word	0x24000060
9000b8fc:	017d7840 	.word	0x017d7840
9000b900:	03d09000 	.word	0x03d09000

9000b904 <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b904:	4b13      	ldr	r3, [pc, #76]	; (9000b954 <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b906:	223f      	movs	r2, #63	; 0x3f
9000b908:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b90a:	691a      	ldr	r2, [r3, #16]
9000b90c:	f002 0207 	and.w	r2, r2, #7
9000b910:	6042      	str	r2, [r0, #4]

#if defined(RCC_D1CFGR_D1CPRE)
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b912:	699a      	ldr	r2, [r3, #24]
9000b914:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
9000b918:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b91a:	699a      	ldr	r2, [r3, #24]
9000b91c:	f002 020f 	and.w	r2, r2, #15
9000b920:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b922:	699a      	ldr	r2, [r3, #24]
9000b924:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b928:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b92a:	69da      	ldr	r2, [r3, #28]
9000b92c:	f002 0270 	and.w	r2, r2, #112	; 0x70
9000b930:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b932:	69da      	ldr	r2, [r3, #28]
9000b934:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
9000b938:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b93a:	6a1b      	ldr	r3, [r3, #32]
{
9000b93c:	b410      	push	{r4}
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b93e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b942:	4c05      	ldr	r4, [pc, #20]	; (9000b958 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b944:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b946:	6823      	ldr	r3, [r4, #0]
}
9000b948:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b94c:	f003 030f 	and.w	r3, r3, #15
9000b950:	600b      	str	r3, [r1, #0]
}
9000b952:	4770      	bx	lr
9000b954:	58024400 	.word	0x58024400
9000b958:	52002000 	.word	0x52002000

9000b95c <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
9000b95c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b95e:	4c3a      	ldr	r4, [pc, #232]	; (9000ba48 <RCCEx_PLL2_Config+0xec>)
9000b960:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b962:	f003 0303 	and.w	r3, r3, #3
9000b966:	2b03      	cmp	r3, #3
9000b968:	d067      	beq.n	9000ba3a <RCCEx_PLL2_Config+0xde>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b96a:	6823      	ldr	r3, [r4, #0]
9000b96c:	4606      	mov	r6, r0
9000b96e:	460f      	mov	r7, r1
9000b970:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
9000b974:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b976:	f7fc f93d 	bl	90007bf4 <HAL_GetTick>
9000b97a:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b97c:	e004      	b.n	9000b988 <RCCEx_PLL2_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b97e:	f7fc f939 	bl	90007bf4 <HAL_GetTick>
9000b982:	1b43      	subs	r3, r0, r5
9000b984:	2b02      	cmp	r3, #2
9000b986:	d856      	bhi.n	9000ba36 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b988:	6823      	ldr	r3, [r4, #0]
9000b98a:	011a      	lsls	r2, r3, #4
9000b98c:	d4f7      	bmi.n	9000b97e <RCCEx_PLL2_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b98e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000b990:	6832      	ldr	r2, [r6, #0]
9000b992:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
9000b996:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b99a:	62a3      	str	r3, [r4, #40]	; 0x28
9000b99c:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b9a0:	3b01      	subs	r3, #1
9000b9a2:	3a01      	subs	r2, #1
9000b9a4:	025b      	lsls	r3, r3, #9
9000b9a6:	0412      	lsls	r2, r2, #16
9000b9a8:	b29b      	uxth	r3, r3
9000b9aa:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000b9ae:	4313      	orrs	r3, r2
9000b9b0:	6872      	ldr	r2, [r6, #4]
9000b9b2:	3a01      	subs	r2, #1
9000b9b4:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b9b8:	4313      	orrs	r3, r2
9000b9ba:	6932      	ldr	r2, [r6, #16]
9000b9bc:	3a01      	subs	r2, #1
9000b9be:	0612      	lsls	r2, r2, #24
9000b9c0:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000b9c4:	4313      	orrs	r3, r2
9000b9c6:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b9c8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b9ca:	6972      	ldr	r2, [r6, #20]
9000b9cc:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
9000b9d0:	4313      	orrs	r3, r2
9000b9d2:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b9d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b9d6:	69b3      	ldr	r3, [r6, #24]
9000b9d8:	f022 0220 	bic.w	r2, r2, #32
9000b9dc:	431a      	orrs	r2, r3

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b9de:	4b1b      	ldr	r3, [pc, #108]	; (9000ba4c <RCCEx_PLL2_Config+0xf0>)
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b9e0:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b9e2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000b9e4:	f022 0210 	bic.w	r2, r2, #16
9000b9e8:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b9ea:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9000b9ec:	69f2      	ldr	r2, [r6, #28]
9000b9ee:	400b      	ands	r3, r1
9000b9f0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b9f4:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b9f6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000b9f8:	f043 0310 	orr.w	r3, r3, #16
9000b9fc:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b9fe:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000ba00:	b1ef      	cbz	r7, 9000ba3e <RCCEx_PLL2_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000ba02:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000ba04:	bf0c      	ite	eq
9000ba06:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000ba0a:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
9000ba0e:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000ba10:	4c0d      	ldr	r4, [pc, #52]	; (9000ba48 <RCCEx_PLL2_Config+0xec>)
9000ba12:	6823      	ldr	r3, [r4, #0]
9000ba14:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
9000ba18:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ba1a:	f7fc f8eb 	bl	90007bf4 <HAL_GetTick>
9000ba1e:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ba20:	e004      	b.n	9000ba2c <RCCEx_PLL2_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000ba22:	f7fc f8e7 	bl	90007bf4 <HAL_GetTick>
9000ba26:	1b40      	subs	r0, r0, r5
9000ba28:	2802      	cmp	r0, #2
9000ba2a:	d804      	bhi.n	9000ba36 <RCCEx_PLL2_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000ba2c:	6823      	ldr	r3, [r4, #0]
9000ba2e:	011b      	lsls	r3, r3, #4
9000ba30:	d5f7      	bpl.n	9000ba22 <RCCEx_PLL2_Config+0xc6>
    }

  }


  return status;
9000ba32:	2000      	movs	r0, #0
}
9000ba34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000ba36:	2003      	movs	r0, #3
}
9000ba38:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000ba3a:	2001      	movs	r0, #1
}
9000ba3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000ba3e:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
9000ba42:	62e3      	str	r3, [r4, #44]	; 0x2c
9000ba44:	e7e4      	b.n	9000ba10 <RCCEx_PLL2_Config+0xb4>
9000ba46:	bf00      	nop
9000ba48:	58024400 	.word	0x58024400
9000ba4c:	ffff0007 	.word	0xffff0007

9000ba50 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
9000ba50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba52:	4c3a      	ldr	r4, [pc, #232]	; (9000bb3c <RCCEx_PLL3_Config+0xec>)
9000ba54:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba56:	f003 0303 	and.w	r3, r3, #3
9000ba5a:	2b03      	cmp	r3, #3
9000ba5c:	d067      	beq.n	9000bb2e <RCCEx_PLL3_Config+0xde>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000ba5e:	6823      	ldr	r3, [r4, #0]
9000ba60:	4606      	mov	r6, r0
9000ba62:	460f      	mov	r7, r1
9000ba64:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
9000ba68:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000ba6a:	f7fc f8c3 	bl	90007bf4 <HAL_GetTick>
9000ba6e:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ba70:	e004      	b.n	9000ba7c <RCCEx_PLL3_Config+0x2c>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000ba72:	f7fc f8bf 	bl	90007bf4 <HAL_GetTick>
9000ba76:	1b43      	subs	r3, r0, r5
9000ba78:	2b02      	cmp	r3, #2
9000ba7a:	d856      	bhi.n	9000bb2a <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000ba7c:	6823      	ldr	r3, [r4, #0]
9000ba7e:	009a      	lsls	r2, r3, #2
9000ba80:	d4f7      	bmi.n	9000ba72 <RCCEx_PLL3_Config+0x22>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000ba82:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9000ba84:	6832      	ldr	r2, [r6, #0]
9000ba86:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
9000ba8a:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000ba8e:	62a3      	str	r3, [r4, #40]	; 0x28
9000ba90:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000ba94:	3b01      	subs	r3, #1
9000ba96:	3a01      	subs	r2, #1
9000ba98:	025b      	lsls	r3, r3, #9
9000ba9a:	0412      	lsls	r2, r2, #16
9000ba9c:	b29b      	uxth	r3, r3
9000ba9e:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
9000baa2:	4313      	orrs	r3, r2
9000baa4:	6872      	ldr	r2, [r6, #4]
9000baa6:	3a01      	subs	r2, #1
9000baa8:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000baac:	4313      	orrs	r3, r2
9000baae:	6932      	ldr	r2, [r6, #16]
9000bab0:	3a01      	subs	r2, #1
9000bab2:	0612      	lsls	r2, r2, #24
9000bab4:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
9000bab8:	4313      	orrs	r3, r2
9000baba:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000babc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000babe:	6972      	ldr	r2, [r6, #20]
9000bac0:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
9000bac4:	4313      	orrs	r3, r2
9000bac6:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000bac8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000baca:	69b3      	ldr	r3, [r6, #24]
9000bacc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
9000bad0:	431a      	orrs	r2, r3

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000bad2:	4b1b      	ldr	r3, [pc, #108]	; (9000bb40 <RCCEx_PLL3_Config+0xf0>)
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000bad4:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_DISABLE();
9000bad6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000bad8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
9000badc:	62e2      	str	r2, [r4, #44]	; 0x2c
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000bade:	6c61      	ldr	r1, [r4, #68]	; 0x44
9000bae0:	69f2      	ldr	r2, [r6, #28]
9000bae2:	400b      	ands	r3, r1
9000bae4:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000bae8:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000baea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000baec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000baf0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000baf2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000baf4:	b1ef      	cbz	r7, 9000bb32 <RCCEx_PLL3_Config+0xe2>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000baf6:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000baf8:	bf0c      	ite	eq
9000bafa:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000bafe:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
9000bb02:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000bb04:	4c0d      	ldr	r4, [pc, #52]	; (9000bb3c <RCCEx_PLL3_Config+0xec>)
9000bb06:	6823      	ldr	r3, [r4, #0]
9000bb08:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
9000bb0c:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000bb0e:	f7fc f871 	bl	90007bf4 <HAL_GetTick>
9000bb12:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000bb14:	e004      	b.n	9000bb20 <RCCEx_PLL3_Config+0xd0>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000bb16:	f7fc f86d 	bl	90007bf4 <HAL_GetTick>
9000bb1a:	1b40      	subs	r0, r0, r5
9000bb1c:	2802      	cmp	r0, #2
9000bb1e:	d804      	bhi.n	9000bb2a <RCCEx_PLL3_Config+0xda>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000bb20:	6823      	ldr	r3, [r4, #0]
9000bb22:	009b      	lsls	r3, r3, #2
9000bb24:	d5f7      	bpl.n	9000bb16 <RCCEx_PLL3_Config+0xc6>
    }

  }


  return status;
9000bb26:	2000      	movs	r0, #0
}
9000bb28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000bb2a:	2003      	movs	r0, #3
}
9000bb2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    return HAL_ERROR;
9000bb2e:	2001      	movs	r0, #1
}
9000bb30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000bb32:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
9000bb36:	62e3      	str	r3, [r4, #44]	; 0x2c
9000bb38:	e7e4      	b.n	9000bb04 <RCCEx_PLL3_Config+0xb4>
9000bb3a:	bf00      	nop
9000bb3c:	58024400 	.word	0x58024400
9000bb40:	ffff0007 	.word	0xffff0007

9000bb44 <HAL_RCCEx_PeriphCLKConfig>:
{
9000bb44:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bb48:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000bb4c:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000bb4e:	011d      	lsls	r5, r3, #4
9000bb50:	f003 6600 	and.w	r6, r3, #134217728	; 0x8000000
9000bb54:	d523      	bpl.n	9000bb9e <HAL_RCCEx_PeriphCLKConfig+0x5a>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bb56:	6e81      	ldr	r1, [r0, #104]	; 0x68
9000bb58:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bb5c:	f000 8553 	beq.w	9000c606 <HAL_RCCEx_PeriphCLKConfig+0xac2>
9000bb60:	d812      	bhi.n	9000bb88 <HAL_RCCEx_PeriphCLKConfig+0x44>
9000bb62:	2900      	cmp	r1, #0
9000bb64:	f000 85a9 	beq.w	9000c6ba <HAL_RCCEx_PeriphCLKConfig+0xb76>
9000bb68:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000bb6c:	f040 85a2 	bne.w	9000c6b4 <HAL_RCCEx_PeriphCLKConfig+0xb70>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000bb70:	2102      	movs	r1, #2
9000bb72:	3008      	adds	r0, #8
9000bb74:	f7ff fef2 	bl	9000b95c <RCCEx_PLL2_Config>
9000bb78:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000bb7a:	2e00      	cmp	r6, #0
9000bb7c:	f040 8522 	bne.w	9000c5c4 <HAL_RCCEx_PeriphCLKConfig+0xa80>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bb80:	6ea1      	ldr	r1, [r4, #104]	; 0x68
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bb82:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bb86:	e003      	b.n	9000bb90 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000bb88:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000bb8c:	f040 8592 	bne.w	9000c6b4 <HAL_RCCEx_PeriphCLKConfig+0xb70>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000bb90:	4dae      	ldr	r5, [pc, #696]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bb92:	2600      	movs	r6, #0
9000bb94:	6d28      	ldr	r0, [r5, #80]	; 0x50
9000bb96:	f420 1040 	bic.w	r0, r0, #3145728	; 0x300000
9000bb9a:	4301      	orrs	r1, r0
9000bb9c:	6529      	str	r1, [r5, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000bb9e:	05d8      	lsls	r0, r3, #23
9000bba0:	d50a      	bpl.n	9000bbb8 <HAL_RCCEx_PeriphCLKConfig+0x74>
    switch (PeriphClkInit->Sai1ClockSelection)
9000bba2:	6da1      	ldr	r1, [r4, #88]	; 0x58
9000bba4:	2904      	cmp	r1, #4
9000bba6:	d806      	bhi.n	9000bbb6 <HAL_RCCEx_PeriphCLKConfig+0x72>
9000bba8:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bbac:	053d0536 	.word	0x053d0536
9000bbb0:	0323051a 	.word	0x0323051a
9000bbb4:	0323      	.short	0x0323
9000bbb6:	2601      	movs	r6, #1
9000bbb8:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000bbba:	0599      	lsls	r1, r3, #22
9000bbbc:	d51d      	bpl.n	9000bbfa <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000bbbe:	6de1      	ldr	r1, [r4, #92]	; 0x5c
9000bbc0:	2980      	cmp	r1, #128	; 0x80
9000bbc2:	f000 8516 	beq.w	9000c5f2 <HAL_RCCEx_PeriphCLKConfig+0xaae>
9000bbc6:	f200 80f9 	bhi.w	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0x278>
9000bbca:	2900      	cmp	r1, #0
9000bbcc:	f000 8433 	beq.w	9000c436 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000bbd0:	2940      	cmp	r1, #64	; 0x40
9000bbd2:	f040 80fa 	bne.w	9000bdca <HAL_RCCEx_PeriphCLKConfig+0x286>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bbd6:	2100      	movs	r1, #0
9000bbd8:	f104 0008 	add.w	r0, r4, #8
9000bbdc:	f7ff febe 	bl	9000b95c <RCCEx_PLL2_Config>
9000bbe0:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bbe2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bbe6:	2d00      	cmp	r5, #0
9000bbe8:	f040 83fe 	bne.w	9000c3e8 <HAL_RCCEx_PeriphCLKConfig+0x8a4>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000bbec:	4f97      	ldr	r7, [pc, #604]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bbee:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9000bbf0:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bbf2:	f421 71e0 	bic.w	r1, r1, #448	; 0x1c0
9000bbf6:	4301      	orrs	r1, r0
9000bbf8:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bbfa:	055f      	lsls	r7, r3, #21
9000bbfc:	d521      	bpl.n	9000bc42 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bbfe:	f8d4 10a8 	ldr.w	r1, [r4, #168]	; 0xa8
9000bc02:	f5b1 0f80 	cmp.w	r1, #4194304	; 0x400000
9000bc06:	f000 8521 	beq.w	9000c64c <HAL_RCCEx_PeriphCLKConfig+0xb08>
9000bc0a:	f200 80e1 	bhi.w	9000bdd0 <HAL_RCCEx_PeriphCLKConfig+0x28c>
9000bc0e:	2900      	cmp	r1, #0
9000bc10:	f000 8418 	beq.w	9000c444 <HAL_RCCEx_PeriphCLKConfig+0x900>
9000bc14:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000bc18:	f040 80e2 	bne.w	9000bde0 <HAL_RCCEx_PeriphCLKConfig+0x29c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bc1c:	2100      	movs	r1, #0
9000bc1e:	f104 0008 	add.w	r0, r4, #8
9000bc22:	f7ff fe9b 	bl	9000b95c <RCCEx_PLL2_Config>
9000bc26:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bc28:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc2c:	2d00      	cmp	r5, #0
9000bc2e:	f040 83e2 	bne.w	9000c3f6 <HAL_RCCEx_PeriphCLKConfig+0x8b2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000bc32:	4f86      	ldr	r7, [pc, #536]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bc34:	f8d4 00a8 	ldr.w	r0, [r4, #168]	; 0xa8
9000bc38:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bc3a:	f421 0160 	bic.w	r1, r1, #14680064	; 0xe00000
9000bc3e:	4301      	orrs	r1, r0
9000bc40:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000bc42:	0518      	lsls	r0, r3, #20
9000bc44:	d521      	bpl.n	9000bc8a <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bc46:	f8d4 10ac 	ldr.w	r1, [r4, #172]	; 0xac
9000bc4a:	f1b1 7f00 	cmp.w	r1, #33554432	; 0x2000000
9000bc4e:	f000 84bd 	beq.w	9000c5cc <HAL_RCCEx_PeriphCLKConfig+0xa88>
9000bc52:	f200 80c8 	bhi.w	9000bde6 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
9000bc56:	2900      	cmp	r1, #0
9000bc58:	f000 83e7 	beq.w	9000c42a <HAL_RCCEx_PeriphCLKConfig+0x8e6>
9000bc5c:	f1b1 7f80 	cmp.w	r1, #16777216	; 0x1000000
9000bc60:	f040 80c9 	bne.w	9000bdf6 <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bc64:	2100      	movs	r1, #0
9000bc66:	f104 0008 	add.w	r0, r4, #8
9000bc6a:	f7ff fe77 	bl	9000b95c <RCCEx_PLL2_Config>
9000bc6e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bc70:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc74:	2d00      	cmp	r5, #0
9000bc76:	f040 83b5 	bne.w	9000c3e4 <HAL_RCCEx_PeriphCLKConfig+0x8a0>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000bc7a:	4f74      	ldr	r7, [pc, #464]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bc7c:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
9000bc80:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bc82:	f021 61e0 	bic.w	r1, r1, #117440512	; 0x7000000
9000bc86:	4301      	orrs	r1, r0
9000bc88:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000bc8a:	0199      	lsls	r1, r3, #6
9000bc8c:	d518      	bpl.n	9000bcc0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->QspiClockSelection)
9000bc8e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
9000bc90:	2920      	cmp	r1, #32
9000bc92:	f000 841f 	beq.w	9000c4d4 <HAL_RCCEx_PeriphCLKConfig+0x990>
9000bc96:	f200 80b1 	bhi.w	9000bdfc <HAL_RCCEx_PeriphCLKConfig+0x2b8>
9000bc9a:	b139      	cbz	r1, 9000bcac <HAL_RCCEx_PeriphCLKConfig+0x168>
9000bc9c:	2910      	cmp	r1, #16
9000bc9e:	f040 80b0 	bne.w	9000be02 <HAL_RCCEx_PeriphCLKConfig+0x2be>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bca2:	486a      	ldr	r0, [pc, #424]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bca4:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000bca6:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000bcaa:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000bcac:	2d00      	cmp	r5, #0
9000bcae:	f040 83d8 	bne.w	9000c462 <HAL_RCCEx_PeriphCLKConfig+0x91e>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000bcb2:	4f66      	ldr	r7, [pc, #408]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bcb4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
9000bcb6:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000bcb8:	f021 0130 	bic.w	r1, r1, #48	; 0x30
9000bcbc:	4301      	orrs	r1, r0
9000bcbe:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bcc0:	04df      	lsls	r7, r3, #19
9000bcc2:	d51f      	bpl.n	9000bd04 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000bcc4:	6e21      	ldr	r1, [r4, #96]	; 0x60
9000bcc6:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000bcca:	f000 84b5 	beq.w	9000c638 <HAL_RCCEx_PeriphCLKConfig+0xaf4>
9000bcce:	f200 809b 	bhi.w	9000be08 <HAL_RCCEx_PeriphCLKConfig+0x2c4>
9000bcd2:	2900      	cmp	r1, #0
9000bcd4:	f000 83a3 	beq.w	9000c41e <HAL_RCCEx_PeriphCLKConfig+0x8da>
9000bcd8:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
9000bcdc:	f040 809c 	bne.w	9000be18 <HAL_RCCEx_PeriphCLKConfig+0x2d4>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bce0:	2100      	movs	r1, #0
9000bce2:	f104 0008 	add.w	r0, r4, #8
9000bce6:	f7ff fe39 	bl	9000b95c <RCCEx_PLL2_Config>
9000bcea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bcec:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bcf0:	2d00      	cmp	r5, #0
9000bcf2:	f040 837b 	bne.w	9000c3ec <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000bcf6:	4f55      	ldr	r7, [pc, #340]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bcf8:	6e20      	ldr	r0, [r4, #96]	; 0x60
9000bcfa:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bcfc:	f421 41e0 	bic.w	r1, r1, #28672	; 0x7000
9000bd00:	4301      	orrs	r1, r0
9000bd02:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bd04:	0498      	lsls	r0, r3, #18
9000bd06:	d51d      	bpl.n	9000bd44 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bd08:	6e61      	ldr	r1, [r4, #100]	; 0x64
9000bd0a:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000bd0e:	f000 8410 	beq.w	9000c532 <HAL_RCCEx_PeriphCLKConfig+0x9ee>
9000bd12:	f200 8084 	bhi.w	9000be1e <HAL_RCCEx_PeriphCLKConfig+0x2da>
9000bd16:	b159      	cbz	r1, 9000bd30 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000bd18:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000bd1c:	f040 8087 	bne.w	9000be2e <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bd20:	2101      	movs	r1, #1
9000bd22:	f104 0008 	add.w	r0, r4, #8
9000bd26:	f7ff fe19 	bl	9000b95c <RCCEx_PLL2_Config>
9000bd2a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bd2c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd30:	2d00      	cmp	r5, #0
9000bd32:	f040 839a 	bne.w	9000c46a <HAL_RCCEx_PeriphCLKConfig+0x926>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000bd36:	4f45      	ldr	r7, [pc, #276]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bd38:	6e60      	ldr	r0, [r4, #100]	; 0x64
9000bd3a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000bd3c:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
9000bd40:	4301      	orrs	r1, r0
9000bd42:	6539      	str	r1, [r7, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bd44:	0459      	lsls	r1, r3, #17
9000bd46:	d51d      	bpl.n	9000bd84 <HAL_RCCEx_PeriphCLKConfig+0x240>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bd48:	f8d4 10b0 	ldr.w	r1, [r4, #176]	; 0xb0
9000bd4c:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000bd50:	f000 83fb 	beq.w	9000c54a <HAL_RCCEx_PeriphCLKConfig+0xa06>
9000bd54:	d86e      	bhi.n	9000be34 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000bd56:	b151      	cbz	r1, 9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000bd58:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000bd5c:	d172      	bne.n	9000be44 <HAL_RCCEx_PeriphCLKConfig+0x300>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bd5e:	2101      	movs	r1, #1
9000bd60:	f104 0008 	add.w	r0, r4, #8
9000bd64:	f7ff fdfa 	bl	9000b95c <RCCEx_PLL2_Config>
9000bd68:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bd6a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd6e:	2d00      	cmp	r5, #0
9000bd70:	f040 837f 	bne.w	9000c472 <HAL_RCCEx_PeriphCLKConfig+0x92e>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000bd74:	4f35      	ldr	r7, [pc, #212]	; (9000be4c <HAL_RCCEx_PeriphCLKConfig+0x308>)
9000bd76:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
9000bd7a:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bd7c:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000bd80:	4301      	orrs	r1, r0
9000bd82:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bd84:	041f      	lsls	r7, r3, #16
9000bd86:	d50d      	bpl.n	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0x260>
    switch (PeriphClkInit->FdcanClockSelection)
9000bd88:	6f21      	ldr	r1, [r4, #112]	; 0x70
9000bd8a:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000bd8e:	f000 83c8 	beq.w	9000c522 <HAL_RCCEx_PeriphCLKConfig+0x9de>
9000bd92:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000bd96:	f000 823b 	beq.w	9000c210 <HAL_RCCEx_PeriphCLKConfig+0x6cc>
9000bd9a:	2900      	cmp	r1, #0
9000bd9c:	f000 8240 	beq.w	9000c220 <HAL_RCCEx_PeriphCLKConfig+0x6dc>
9000bda0:	2601      	movs	r6, #1
9000bda2:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000bda4:	01d8      	lsls	r0, r3, #7
9000bda6:	d562      	bpl.n	9000be6e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->FmcClockSelection)
9000bda8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
9000bdaa:	2903      	cmp	r1, #3
9000bdac:	f200 84bf 	bhi.w	9000c72e <HAL_RCCEx_PeriphCLKConfig+0xbea>
9000bdb0:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bdb4:	004e0053 	.word	0x004e0053
9000bdb8:	005303e2 	.word	0x005303e2
    switch (PeriphClkInit->Sai23ClockSelection)
9000bdbc:	29c0      	cmp	r1, #192	; 0xc0
9000bdbe:	f43f af12 	beq.w	9000bbe6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000bdc2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000bdc6:	f43f af0e 	beq.w	9000bbe6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
9000bdca:	2601      	movs	r6, #1
9000bdcc:	4635      	mov	r5, r6
9000bdce:	e714      	b.n	9000bbfa <HAL_RCCEx_PeriphCLKConfig+0xb6>
    switch (PeriphClkInit->Sai4AClockSelection)
9000bdd0:	f5b1 0fc0 	cmp.w	r1, #6291456	; 0x600000
9000bdd4:	f43f af2a 	beq.w	9000bc2c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000bdd8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
9000bddc:	f43f af26 	beq.w	9000bc2c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000bde0:	2601      	movs	r6, #1
9000bde2:	4635      	mov	r5, r6
9000bde4:	e72d      	b.n	9000bc42 <HAL_RCCEx_PeriphCLKConfig+0xfe>
    switch (PeriphClkInit->Sai4BClockSelection)
9000bde6:	f1b1 7f40 	cmp.w	r1, #50331648	; 0x3000000
9000bdea:	f43f af43 	beq.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000bdee:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
9000bdf2:	f43f af3f 	beq.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x130>
9000bdf6:	2601      	movs	r6, #1
9000bdf8:	4635      	mov	r5, r6
9000bdfa:	e746      	b.n	9000bc8a <HAL_RCCEx_PeriphCLKConfig+0x146>
    switch (PeriphClkInit->QspiClockSelection)
9000bdfc:	2930      	cmp	r1, #48	; 0x30
9000bdfe:	f43f af55 	beq.w	9000bcac <HAL_RCCEx_PeriphCLKConfig+0x168>
9000be02:	2601      	movs	r6, #1
9000be04:	4635      	mov	r5, r6
9000be06:	e75b      	b.n	9000bcc0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
    switch (PeriphClkInit->Spi123ClockSelection)
9000be08:	f5b1 5f40 	cmp.w	r1, #12288	; 0x3000
9000be0c:	f43f af70 	beq.w	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000be10:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000be14:	f43f af6c 	beq.w	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
9000be18:	2601      	movs	r6, #1
9000be1a:	4635      	mov	r5, r6
9000be1c:	e772      	b.n	9000bd04 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
    switch (PeriphClkInit->Spi45ClockSelection)
9000be1e:	f421 3080 	bic.w	r0, r1, #65536	; 0x10000
9000be22:	f5b0 2f80 	cmp.w	r0, #262144	; 0x40000
9000be26:	d083      	beq.n	9000bd30 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000be28:	f5b1 3f40 	cmp.w	r1, #196608	; 0x30000
9000be2c:	d080      	beq.n	9000bd30 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
9000be2e:	2601      	movs	r6, #1
9000be30:	4635      	mov	r5, r6
9000be32:	e787      	b.n	9000bd44 <HAL_RCCEx_PeriphCLKConfig+0x200>
    switch (PeriphClkInit->Spi6ClockSelection)
9000be34:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000be38:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000be3c:	d097      	beq.n	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000be3e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000be42:	d094      	beq.n	9000bd6e <HAL_RCCEx_PeriphCLKConfig+0x22a>
9000be44:	2601      	movs	r6, #1
9000be46:	4635      	mov	r5, r6
9000be48:	e79c      	b.n	9000bd84 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000be4a:	bf00      	nop
9000be4c:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000be50:	4839      	ldr	r0, [pc, #228]	; (9000bf38 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000be52:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000be54:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000be58:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000be5a:	2d00      	cmp	r5, #0
9000be5c:	f040 8303 	bne.w	9000c466 <HAL_RCCEx_PeriphCLKConfig+0x922>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000be60:	4f35      	ldr	r7, [pc, #212]	; (9000bf38 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000be62:	6ca0      	ldr	r0, [r4, #72]	; 0x48
9000be64:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000be66:	f021 0103 	bic.w	r1, r1, #3
9000be6a:	4301      	orrs	r1, r0
9000be6c:	64f9      	str	r1, [r7, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000be6e:	0259      	lsls	r1, r3, #9
9000be70:	f100 826a 	bmi.w	9000c348 <HAL_RCCEx_PeriphCLKConfig+0x804>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000be74:	07d8      	lsls	r0, r3, #31
9000be76:	d52f      	bpl.n	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x394>
    switch (PeriphClkInit->Usart16ClockSelection)
9000be78:	6fe1      	ldr	r1, [r4, #124]	; 0x7c
9000be7a:	2928      	cmp	r1, #40	; 0x28
9000be7c:	d82a      	bhi.n	9000bed4 <HAL_RCCEx_PeriphCLKConfig+0x390>
9000be7e:	e8df f011 	tbh	[pc, r1, lsl #1]
9000be82:	020a      	.short	0x020a
9000be84:	00290029 	.word	0x00290029
9000be88:	00290029 	.word	0x00290029
9000be8c:	00290029 	.word	0x00290029
9000be90:	02020029 	.word	0x02020029
9000be94:	00290029 	.word	0x00290029
9000be98:	00290029 	.word	0x00290029
9000be9c:	00290029 	.word	0x00290029
9000bea0:	04070029 	.word	0x04070029
9000bea4:	00290029 	.word	0x00290029
9000bea8:	00290029 	.word	0x00290029
9000beac:	00290029 	.word	0x00290029
9000beb0:	020a0029 	.word	0x020a0029
9000beb4:	00290029 	.word	0x00290029
9000beb8:	00290029 	.word	0x00290029
9000bebc:	00290029 	.word	0x00290029
9000bec0:	020a0029 	.word	0x020a0029
9000bec4:	00290029 	.word	0x00290029
9000bec8:	00290029 	.word	0x00290029
9000becc:	00290029 	.word	0x00290029
9000bed0:	020a0029 	.word	0x020a0029
9000bed4:	2601      	movs	r6, #1
9000bed6:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bed8:	0799      	lsls	r1, r3, #30
9000beda:	d51d      	bpl.n	9000bf18 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000bedc:	6fa1      	ldr	r1, [r4, #120]	; 0x78
9000bede:	2905      	cmp	r1, #5
9000bee0:	f200 8421 	bhi.w	9000c726 <HAL_RCCEx_PeriphCLKConfig+0xbe2>
9000bee4:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bee8:	0006000e 	.word	0x0006000e
9000beec:	000e03c8 	.word	0x000e03c8
9000bef0:	000e000e 	.word	0x000e000e
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bef4:	2101      	movs	r1, #1
9000bef6:	f104 0008 	add.w	r0, r4, #8
9000befa:	f7ff fd2f 	bl	9000b95c <RCCEx_PLL2_Config>
9000befe:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bf00:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf04:	2d00      	cmp	r5, #0
9000bf06:	f040 82b8 	bne.w	9000c47a <HAL_RCCEx_PeriphCLKConfig+0x936>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bf0a:	4f0b      	ldr	r7, [pc, #44]	; (9000bf38 <HAL_RCCEx_PeriphCLKConfig+0x3f4>)
9000bf0c:	6fa0      	ldr	r0, [r4, #120]	; 0x78
9000bf0e:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bf10:	f021 0107 	bic.w	r1, r1, #7
9000bf14:	4301      	orrs	r1, r0
9000bf16:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bf18:	075f      	lsls	r7, r3, #29
9000bf1a:	d522      	bpl.n	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0x41e>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000bf1c:	f8d4 1094 	ldr.w	r1, [r4, #148]	; 0x94
9000bf20:	2905      	cmp	r1, #5
9000bf22:	f200 8408 	bhi.w	9000c736 <HAL_RCCEx_PeriphCLKConfig+0xbf2>
9000bf26:	e8df f011 	tbh	[pc, r1, lsl #1]
9000bf2a:	0011      	.short	0x0011
9000bf2c:	039b0009 	.word	0x039b0009
9000bf30:	00110011 	.word	0x00110011
9000bf34:	0011      	.short	0x0011
9000bf36:	bf00      	nop
9000bf38:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000bf3c:	2101      	movs	r1, #1
9000bf3e:	f104 0008 	add.w	r0, r4, #8
9000bf42:	f7ff fd0b 	bl	9000b95c <RCCEx_PLL2_Config>
9000bf46:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bf48:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf4c:	2d00      	cmp	r5, #0
9000bf4e:	f040 8286 	bne.w	9000c45e <HAL_RCCEx_PeriphCLKConfig+0x91a>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bf52:	4fae      	ldr	r7, [pc, #696]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bf54:	f8d4 0094 	ldr.w	r0, [r4, #148]	; 0x94
9000bf58:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bf5a:	f021 0107 	bic.w	r1, r1, #7
9000bf5e:	4301      	orrs	r1, r0
9000bf60:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000bf62:	0698      	lsls	r0, r3, #26
9000bf64:	d51f      	bpl.n	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bf66:	f8d4 1090 	ldr.w	r1, [r4, #144]	; 0x90
9000bf6a:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
9000bf6e:	f000 82f7 	beq.w	9000c560 <HAL_RCCEx_PeriphCLKConfig+0xa1c>
9000bf72:	f200 810b 	bhi.w	9000c18c <HAL_RCCEx_PeriphCLKConfig+0x648>
9000bf76:	b159      	cbz	r1, 9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000bf78:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
9000bf7c:	f040 8110 	bne.w	9000c1a0 <HAL_RCCEx_PeriphCLKConfig+0x65c>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bf80:	2100      	movs	r1, #0
9000bf82:	f104 0008 	add.w	r0, r4, #8
9000bf86:	f7ff fce9 	bl	9000b95c <RCCEx_PLL2_Config>
9000bf8a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bf8c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf90:	2d00      	cmp	r5, #0
9000bf92:	f040 8260 	bne.w	9000c456 <HAL_RCCEx_PeriphCLKConfig+0x912>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000bf96:	4f9d      	ldr	r7, [pc, #628]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bf98:	f8d4 0090 	ldr.w	r0, [r4, #144]	; 0x90
9000bf9c:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000bf9e:	f021 41e0 	bic.w	r1, r1, #1879048192	; 0x70000000
9000bfa2:	4301      	orrs	r1, r0
9000bfa4:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bfa6:	0659      	lsls	r1, r3, #25
9000bfa8:	d51f      	bpl.n	9000bfea <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bfaa:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
9000bfae:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
9000bfb2:	f000 829b 	beq.w	9000c4ec <HAL_RCCEx_PeriphCLKConfig+0x9a8>
9000bfb6:	f200 80f6 	bhi.w	9000c1a6 <HAL_RCCEx_PeriphCLKConfig+0x662>
9000bfba:	b159      	cbz	r1, 9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000bfbc:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
9000bfc0:	f040 80fb 	bne.w	9000c1ba <HAL_RCCEx_PeriphCLKConfig+0x676>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000bfc4:	2100      	movs	r1, #0
9000bfc6:	f104 0008 	add.w	r0, r4, #8
9000bfca:	f7ff fcc7 	bl	9000b95c <RCCEx_PLL2_Config>
9000bfce:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bfd0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bfd4:	2d00      	cmp	r5, #0
9000bfd6:	f040 824e 	bne.w	9000c476 <HAL_RCCEx_PeriphCLKConfig+0x932>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000bfda:	4f8c      	ldr	r7, [pc, #560]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000bfdc:	f8d4 009c 	ldr.w	r0, [r4, #156]	; 0x9c
9000bfe0:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000bfe2:	f421 51e0 	bic.w	r1, r1, #7168	; 0x1c00
9000bfe6:	4301      	orrs	r1, r0
9000bfe8:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bfea:	061f      	lsls	r7, r3, #24
9000bfec:	d51f      	bpl.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bfee:	f8d4 10a0 	ldr.w	r1, [r4, #160]	; 0xa0
9000bff2:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
9000bff6:	f000 8289 	beq.w	9000c50c <HAL_RCCEx_PeriphCLKConfig+0x9c8>
9000bffa:	f200 80e1 	bhi.w	9000c1c0 <HAL_RCCEx_PeriphCLKConfig+0x67c>
9000bffe:	b159      	cbz	r1, 9000c018 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c000:	f5b1 5f00 	cmp.w	r1, #8192	; 0x2000
9000c004:	f040 80e6 	bne.w	9000c1d4 <HAL_RCCEx_PeriphCLKConfig+0x690>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c008:	2100      	movs	r1, #0
9000c00a:	f104 0008 	add.w	r0, r4, #8
9000c00e:	f7ff fca5 	bl	9000b95c <RCCEx_PLL2_Config>
9000c012:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c014:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c018:	2d00      	cmp	r5, #0
9000c01a:	f040 8228 	bne.w	9000c46e <HAL_RCCEx_PeriphCLKConfig+0x92a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000c01e:	4f7b      	ldr	r7, [pc, #492]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c020:	f8d4 00a0 	ldr.w	r0, [r4, #160]	; 0xa0
9000c024:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c026:	f421 4160 	bic.w	r1, r1, #57344	; 0xe000
9000c02a:	4301      	orrs	r1, r0
9000c02c:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c02e:	0718      	lsls	r0, r3, #28
9000c030:	d50b      	bpl.n	9000c04a <HAL_RCCEx_PeriphCLKConfig+0x506>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000c032:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
9000c036:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000c03a:	f000 82a9 	beq.w	9000c590 <HAL_RCCEx_PeriphCLKConfig+0xa4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c03e:	4f73      	ldr	r7, [pc, #460]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c040:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c042:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
9000c046:	4301      	orrs	r1, r0
9000c048:	6579      	str	r1, [r7, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c04a:	06d9      	lsls	r1, r3, #27
9000c04c:	d50b      	bpl.n	9000c066 <HAL_RCCEx_PeriphCLKConfig+0x522>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000c04e:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
9000c052:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
9000c056:	f000 82a8 	beq.w	9000c5aa <HAL_RCCEx_PeriphCLKConfig+0xa66>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c05a:	4f6c      	ldr	r7, [pc, #432]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c05c:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c05e:	f421 7140 	bic.w	r1, r1, #768	; 0x300
9000c062:	4301      	orrs	r1, r0
9000c064:	65b9      	str	r1, [r7, #88]	; 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c066:	031f      	lsls	r7, r3, #12
9000c068:	d50e      	bpl.n	9000c088 <HAL_RCCEx_PeriphCLKConfig+0x544>
    switch (PeriphClkInit->AdcClockSelection)
9000c06a:	f8d4 10a4 	ldr.w	r1, [r4, #164]	; 0xa4
9000c06e:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000c072:	f000 80f4 	beq.w	9000c25e <HAL_RCCEx_PeriphCLKConfig+0x71a>
9000c076:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
9000c07a:	f000 80f8 	beq.w	9000c26e <HAL_RCCEx_PeriphCLKConfig+0x72a>
9000c07e:	2900      	cmp	r1, #0
9000c080:	f000 821c 	beq.w	9000c4bc <HAL_RCCEx_PeriphCLKConfig+0x978>
9000c084:	2601      	movs	r6, #1
9000c086:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c088:	0358      	lsls	r0, r3, #13
9000c08a:	d50f      	bpl.n	9000c0ac <HAL_RCCEx_PeriphCLKConfig+0x568>
    switch (PeriphClkInit->UsbClockSelection)
9000c08c:	f8d4 1088 	ldr.w	r1, [r4, #136]	; 0x88
9000c090:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
9000c094:	f000 80cf 	beq.w	9000c236 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
9000c098:	f5b1 1f40 	cmp.w	r1, #3145728	; 0x300000
9000c09c:	f000 80d3 	beq.w	9000c246 <HAL_RCCEx_PeriphCLKConfig+0x702>
9000c0a0:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
9000c0a4:	f000 8202 	beq.w	9000c4ac <HAL_RCCEx_PeriphCLKConfig+0x968>
9000c0a8:	2601      	movs	r6, #1
9000c0aa:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c0ac:	03d9      	lsls	r1, r3, #15
9000c0ae:	d509      	bpl.n	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0x580>
    switch (PeriphClkInit->SdmmcClockSelection)
9000c0b0:	6d21      	ldr	r1, [r4, #80]	; 0x50
9000c0b2:	2900      	cmp	r1, #0
9000c0b4:	f000 81f1 	beq.w	9000c49a <HAL_RCCEx_PeriphCLKConfig+0x956>
9000c0b8:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
9000c0bc:	f000 819d 	beq.w	9000c3fa <HAL_RCCEx_PeriphCLKConfig+0x8b6>
9000c0c0:	2601      	movs	r6, #1
9000c0c2:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c0c4:	009f      	lsls	r7, r3, #2
9000c0c6:	f100 80f1 	bmi.w	9000c2ac <HAL_RCCEx_PeriphCLKConfig+0x768>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c0ca:	0398      	lsls	r0, r3, #14
9000c0cc:	d50c      	bpl.n	9000c0e8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->RngClockSelection)
9000c0ce:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
9000c0d2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
9000c0d6:	f000 81d8 	beq.w	9000c48a <HAL_RCCEx_PeriphCLKConfig+0x946>
9000c0da:	d97e      	bls.n	9000c1da <HAL_RCCEx_PeriphCLKConfig+0x696>
9000c0dc:	f421 7080 	bic.w	r0, r1, #256	; 0x100
9000c0e0:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
9000c0e4:	d07b      	beq.n	9000c1de <HAL_RCCEx_PeriphCLKConfig+0x69a>
9000c0e6:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000c0e8:	02d9      	lsls	r1, r3, #11
9000c0ea:	d506      	bpl.n	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0x5b6>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000c0ec:	4847      	ldr	r0, [pc, #284]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c0ee:	6f65      	ldr	r5, [r4, #116]	; 0x74
9000c0f0:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000c0f2:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
9000c0f6:	4329      	orrs	r1, r5
9000c0f8:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000c0fa:	00df      	lsls	r7, r3, #3
9000c0fc:	d507      	bpl.n	9000c10e <HAL_RCCEx_PeriphCLKConfig+0x5ca>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000c0fe:	4843      	ldr	r0, [pc, #268]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c100:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
9000c104:	6901      	ldr	r1, [r0, #16]
9000c106:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
9000c10a:	4329      	orrs	r1, r5
9000c10c:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000c10e:	029d      	lsls	r5, r3, #10
9000c110:	d506      	bpl.n	9000c120 <HAL_RCCEx_PeriphCLKConfig+0x5dc>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000c112:	483e      	ldr	r0, [pc, #248]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c114:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
9000c116:	6d01      	ldr	r1, [r0, #80]	; 0x50
9000c118:	f021 7180 	bic.w	r1, r1, #16777216	; 0x1000000
9000c11c:	4329      	orrs	r1, r5
9000c11e:	6501      	str	r1, [r0, #80]	; 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000c120:	0058      	lsls	r0, r3, #1
9000c122:	d509      	bpl.n	9000c138 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000c124:	4939      	ldr	r1, [pc, #228]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c126:	6908      	ldr	r0, [r1, #16]
9000c128:	f420 4000 	bic.w	r0, r0, #32768	; 0x8000
9000c12c:	6108      	str	r0, [r1, #16]
9000c12e:	6908      	ldr	r0, [r1, #16]
9000c130:	f8d4 50bc 	ldr.w	r5, [r4, #188]	; 0xbc
9000c134:	4328      	orrs	r0, r5
9000c136:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000c138:	2b00      	cmp	r3, #0
9000c13a:	da06      	bge.n	9000c14a <HAL_RCCEx_PeriphCLKConfig+0x606>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000c13c:	4833      	ldr	r0, [pc, #204]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c13e:	6d65      	ldr	r5, [r4, #84]	; 0x54
9000c140:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
9000c142:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000c146:	4329      	orrs	r1, r5
9000c148:	64c1      	str	r1, [r0, #76]	; 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000c14a:	0219      	lsls	r1, r3, #8
9000c14c:	d507      	bpl.n	9000c15e <HAL_RCCEx_PeriphCLKConfig+0x61a>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000c14e:	492f      	ldr	r1, [pc, #188]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c150:	f8d4 008c 	ldr.w	r0, [r4, #140]	; 0x8c
9000c154:	6d4b      	ldr	r3, [r1, #84]	; 0x54
9000c156:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
9000c15a:	4303      	orrs	r3, r0
9000c15c:	654b      	str	r3, [r1, #84]	; 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000c15e:	07d3      	lsls	r3, r2, #31
9000c160:	f100 80b0 	bmi.w	9000c2c4 <HAL_RCCEx_PeriphCLKConfig+0x780>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c164:	0797      	lsls	r7, r2, #30
9000c166:	f100 80ba 	bmi.w	9000c2de <HAL_RCCEx_PeriphCLKConfig+0x79a>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c16a:	0755      	lsls	r5, r2, #29
9000c16c:	f100 80c4 	bmi.w	9000c2f8 <HAL_RCCEx_PeriphCLKConfig+0x7b4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c170:	0710      	lsls	r0, r2, #28
9000c172:	f100 80ce 	bmi.w	9000c312 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c176:	06d1      	lsls	r1, r2, #27
9000c178:	f100 80d8 	bmi.w	9000c32c <HAL_RCCEx_PeriphCLKConfig+0x7e8>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c17c:	0692      	lsls	r2, r2, #26
9000c17e:	f100 8125 	bmi.w	9000c3cc <HAL_RCCEx_PeriphCLKConfig+0x888>
    return HAL_OK;
9000c182:	1e30      	subs	r0, r6, #0
9000c184:	bf18      	it	ne
9000c186:	2001      	movne	r0, #1
}
9000c188:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000c18c:	f021 5080 	bic.w	r0, r1, #268435456	; 0x10000000
9000c190:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
9000c194:	f43f aefc 	beq.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c198:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
9000c19c:	f43f aef8 	beq.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0x44c>
9000c1a0:	2601      	movs	r6, #1
9000c1a2:	4635      	mov	r5, r6
9000c1a4:	e6ff      	b.n	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x462>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000c1a6:	f421 6080 	bic.w	r0, r1, #1024	; 0x400
9000c1aa:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
9000c1ae:	f43f af11 	beq.w	9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c1b2:	f5b1 6f40 	cmp.w	r1, #3072	; 0xc00
9000c1b6:	f43f af0d 	beq.w	9000bfd4 <HAL_RCCEx_PeriphCLKConfig+0x490>
9000c1ba:	2601      	movs	r6, #1
9000c1bc:	4635      	mov	r5, r6
9000c1be:	e714      	b.n	9000bfea <HAL_RCCEx_PeriphCLKConfig+0x4a6>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000c1c0:	f421 5000 	bic.w	r0, r1, #8192	; 0x2000
9000c1c4:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
9000c1c8:	f43f af26 	beq.w	9000c018 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c1cc:	f5b1 4fc0 	cmp.w	r1, #24576	; 0x6000
9000c1d0:	f43f af22 	beq.w	9000c018 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000c1d4:	2601      	movs	r6, #1
9000c1d6:	4635      	mov	r5, r6
9000c1d8:	e729      	b.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
    switch (PeriphClkInit->RngClockSelection)
9000c1da:	2900      	cmp	r1, #0
9000c1dc:	d183      	bne.n	9000c0e6 <HAL_RCCEx_PeriphCLKConfig+0x5a2>
    if (ret == HAL_OK)
9000c1de:	2d00      	cmp	r5, #0
9000c1e0:	f040 8151 	bne.w	9000c486 <HAL_RCCEx_PeriphCLKConfig+0x942>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000c1e4:	4d09      	ldr	r5, [pc, #36]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1e6:	6d68      	ldr	r0, [r5, #84]	; 0x54
9000c1e8:	f420 7040 	bic.w	r0, r0, #768	; 0x300
9000c1ec:	4301      	orrs	r1, r0
9000c1ee:	6569      	str	r1, [r5, #84]	; 0x54
9000c1f0:	e77a      	b.n	9000c0e8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch (PeriphClkInit->Sai1ClockSelection)
9000c1f2:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000c1f4:	2d00      	cmp	r5, #0
9000c1f6:	f040 80fb 	bne.w	9000c3f0 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000c1fa:	4f04      	ldr	r7, [pc, #16]	; (9000c20c <HAL_RCCEx_PeriphCLKConfig+0x6c8>)
9000c1fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
9000c1fe:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c200:	f021 0107 	bic.w	r1, r1, #7
9000c204:	4301      	orrs	r1, r0
9000c206:	6539      	str	r1, [r7, #80]	; 0x50
9000c208:	e4d7      	b.n	9000bbba <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c20a:	bf00      	nop
9000c20c:	58024400 	.word	0x58024400
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c210:	2101      	movs	r1, #1
9000c212:	f104 0008 	add.w	r0, r4, #8
9000c216:	f7ff fba1 	bl	9000b95c <RCCEx_PLL2_Config>
9000c21a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c21c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c220:	2d00      	cmp	r5, #0
9000c222:	f040 811a 	bne.w	9000c45a <HAL_RCCEx_PeriphCLKConfig+0x916>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000c226:	4fb7      	ldr	r7, [pc, #732]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c228:	6f20      	ldr	r0, [r4, #112]	; 0x70
9000c22a:	6d39      	ldr	r1, [r7, #80]	; 0x50
9000c22c:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
9000c230:	4301      	orrs	r1, r0
9000c232:	6539      	str	r1, [r7, #80]	; 0x50
9000c234:	e5b6      	b.n	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0x260>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c236:	2101      	movs	r1, #1
9000c238:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c23c:	f7ff fc08 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c240:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000c242:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c246:	2d00      	cmp	r5, #0
9000c248:	f040 811b 	bne.w	9000c482 <HAL_RCCEx_PeriphCLKConfig+0x93e>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000c24c:	4fad      	ldr	r7, [pc, #692]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c24e:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
9000c252:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c254:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
9000c258:	4301      	orrs	r1, r0
9000c25a:	6579      	str	r1, [r7, #84]	; 0x54
9000c25c:	e726      	b.n	9000c0ac <HAL_RCCEx_PeriphCLKConfig+0x568>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c25e:	2102      	movs	r1, #2
9000c260:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c264:	f7ff fbf4 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c268:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c26a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c26e:	2d00      	cmp	r5, #0
9000c270:	f040 8105 	bne.w	9000c47e <HAL_RCCEx_PeriphCLKConfig+0x93a>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000c274:	4fa3      	ldr	r7, [pc, #652]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c276:	f8d4 00a4 	ldr.w	r0, [r4, #164]	; 0xa4
9000c27a:	6db9      	ldr	r1, [r7, #88]	; 0x58
9000c27c:	f421 3140 	bic.w	r1, r1, #196608	; 0x30000
9000c280:	4301      	orrs	r1, r0
9000c282:	65b9      	str	r1, [r7, #88]	; 0x58
9000c284:	e700      	b.n	9000c088 <HAL_RCCEx_PeriphCLKConfig+0x544>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c286:	2101      	movs	r1, #1
9000c288:	f104 0008 	add.w	r0, r4, #8
9000c28c:	f7ff fb66 	bl	9000b95c <RCCEx_PLL2_Config>
9000c290:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c292:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c296:	2d00      	cmp	r5, #0
9000c298:	f040 80db 	bne.w	9000c452 <HAL_RCCEx_PeriphCLKConfig+0x90e>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000c29c:	4f99      	ldr	r7, [pc, #612]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c29e:	6fe0      	ldr	r0, [r4, #124]	; 0x7c
9000c2a0:	6d79      	ldr	r1, [r7, #84]	; 0x54
9000c2a2:	f021 0138 	bic.w	r1, r1, #56	; 0x38
9000c2a6:	4301      	orrs	r1, r0
9000c2a8:	6579      	str	r1, [r7, #84]	; 0x54
9000c2aa:	e615      	b.n	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x394>
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c2ac:	2102      	movs	r1, #2
9000c2ae:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c2b2:	f7ff fbcd 	bl	9000ba50 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000c2b6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c2ba:	2800      	cmp	r0, #0
9000c2bc:	f43f af05 	beq.w	9000c0ca <HAL_RCCEx_PeriphCLKConfig+0x586>
      status = HAL_ERROR;
9000c2c0:	2601      	movs	r6, #1
9000c2c2:	e702      	b.n	9000c0ca <HAL_RCCEx_PeriphCLKConfig+0x586>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c2c4:	2100      	movs	r1, #0
9000c2c6:	f104 0008 	add.w	r0, r4, #8
9000c2ca:	f7ff fb47 	bl	9000b95c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c2ce:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c2d0:	2800      	cmp	r0, #0
9000c2d2:	f43f af47 	beq.w	9000c164 <HAL_RCCEx_PeriphCLKConfig+0x620>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000c2d6:	0797      	lsls	r7, r2, #30
9000c2d8:	4606      	mov	r6, r0
9000c2da:	f57f af46 	bpl.w	9000c16a <HAL_RCCEx_PeriphCLKConfig+0x626>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
9000c2de:	2101      	movs	r1, #1
9000c2e0:	f104 0008 	add.w	r0, r4, #8
9000c2e4:	f7ff fb3a 	bl	9000b95c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c2e8:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c2ea:	2800      	cmp	r0, #0
9000c2ec:	f43f af3d 	beq.w	9000c16a <HAL_RCCEx_PeriphCLKConfig+0x626>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000c2f0:	0755      	lsls	r5, r2, #29
9000c2f2:	4606      	mov	r6, r0
9000c2f4:	f57f af3c 	bpl.w	9000c170 <HAL_RCCEx_PeriphCLKConfig+0x62c>
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c2f8:	2102      	movs	r1, #2
9000c2fa:	f104 0008 	add.w	r0, r4, #8
9000c2fe:	f7ff fb2d 	bl	9000b95c <RCCEx_PLL2_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c302:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c304:	2800      	cmp	r0, #0
9000c306:	f43f af33 	beq.w	9000c170 <HAL_RCCEx_PeriphCLKConfig+0x62c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000c30a:	4606      	mov	r6, r0
9000c30c:	0710      	lsls	r0, r2, #28
9000c30e:	f57f af32 	bpl.w	9000c176 <HAL_RCCEx_PeriphCLKConfig+0x632>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c312:	2100      	movs	r1, #0
9000c314:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c318:	f7ff fb9a 	bl	9000ba50 <RCCEx_PLL3_Config>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c31c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000c31e:	2800      	cmp	r0, #0
9000c320:	f43f af29 	beq.w	9000c176 <HAL_RCCEx_PeriphCLKConfig+0x632>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000c324:	06d1      	lsls	r1, r2, #27
9000c326:	4606      	mov	r6, r0
9000c328:	f57f af28 	bpl.w	9000c17c <HAL_RCCEx_PeriphCLKConfig+0x638>
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c32c:	f104 0528 	add.w	r5, r4, #40	; 0x28
9000c330:	2101      	movs	r1, #1
9000c332:	4628      	mov	r0, r5
9000c334:	f7ff fb8c 	bl	9000ba50 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c338:	2800      	cmp	r0, #0
9000c33a:	f000 80c9 	beq.w	9000c4d0 <HAL_RCCEx_PeriphCLKConfig+0x98c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c33e:	6863      	ldr	r3, [r4, #4]
9000c340:	069b      	lsls	r3, r3, #26
9000c342:	d54c      	bpl.n	9000c3de <HAL_RCCEx_PeriphCLKConfig+0x89a>
9000c344:	4606      	mov	r6, r0
9000c346:	e043      	b.n	9000c3d0 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000c348:	4f6f      	ldr	r7, [pc, #444]	; (9000c508 <HAL_RCCEx_PeriphCLKConfig+0x9c4>)
9000c34a:	683b      	ldr	r3, [r7, #0]
9000c34c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
9000c350:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000c352:	f7fb fc4f 	bl	90007bf4 <HAL_GetTick>
9000c356:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c358:	e006      	b.n	9000c368 <HAL_RCCEx_PeriphCLKConfig+0x824>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000c35a:	f7fb fc4b 	bl	90007bf4 <HAL_GetTick>
9000c35e:	eba0 0008 	sub.w	r0, r0, r8
9000c362:	2864      	cmp	r0, #100	; 0x64
9000c364:	f200 81a0 	bhi.w	9000c6a8 <HAL_RCCEx_PeriphCLKConfig+0xb64>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000c368:	683b      	ldr	r3, [r7, #0]
9000c36a:	05da      	lsls	r2, r3, #23
9000c36c:	d5f5      	bpl.n	9000c35a <HAL_RCCEx_PeriphCLKConfig+0x816>
    if (ret == HAL_OK)
9000c36e:	2d00      	cmp	r5, #0
9000c370:	f040 81d4 	bne.w	9000c71c <HAL_RCCEx_PeriphCLKConfig+0xbd8>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000c374:	4a63      	ldr	r2, [pc, #396]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c376:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c37a:	6f11      	ldr	r1, [r2, #112]	; 0x70
9000c37c:	4059      	eors	r1, r3
9000c37e:	f411 7f40 	tst.w	r1, #768	; 0x300
9000c382:	d00b      	beq.n	9000c39c <HAL_RCCEx_PeriphCLKConfig+0x858>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c384:	6f11      	ldr	r1, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000c386:	6f10      	ldr	r0, [r2, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000c388:	f421 7140 	bic.w	r1, r1, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000c38c:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
9000c390:	6710      	str	r0, [r2, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000c392:	6f10      	ldr	r0, [r2, #112]	; 0x70
9000c394:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
9000c398:	6710      	str	r0, [r2, #112]	; 0x70
        RCC->BDCR = tmpreg;
9000c39a:	6711      	str	r1, [r2, #112]	; 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000c39c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
9000c3a0:	f000 819e 	beq.w	9000c6e0 <HAL_RCCEx_PeriphCLKConfig+0xb9c>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c3a4:	f403 7240 	and.w	r2, r3, #768	; 0x300
9000c3a8:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
9000c3ac:	f000 81ac 	beq.w	9000c708 <HAL_RCCEx_PeriphCLKConfig+0xbc4>
9000c3b0:	4954      	ldr	r1, [pc, #336]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c3b2:	690a      	ldr	r2, [r1, #16]
9000c3b4:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
9000c3b8:	610a      	str	r2, [r1, #16]
9000c3ba:	4852      	ldr	r0, [pc, #328]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c3bc:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000c3c0:	6f07      	ldr	r7, [r0, #112]	; 0x70
9000c3c2:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c3c4:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c3c8:	6701      	str	r1, [r0, #112]	; 0x70
9000c3ca:	e553      	b.n	9000be74 <HAL_RCCEx_PeriphCLKConfig+0x330>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c3cc:	f104 0528 	add.w	r5, r4, #40	; 0x28
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c3d0:	2102      	movs	r1, #2
9000c3d2:	4628      	mov	r0, r5
9000c3d4:	f7ff fb3c 	bl	9000ba50 <RCCEx_PLL3_Config>
    if (ret == HAL_OK)
9000c3d8:	2800      	cmp	r0, #0
9000c3da:	f43f aed2 	beq.w	9000c182 <HAL_RCCEx_PeriphCLKConfig+0x63e>
  return HAL_ERROR;
9000c3de:	2001      	movs	r0, #1
}
9000c3e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9000c3e4:	462e      	mov	r6, r5
9000c3e6:	e450      	b.n	9000bc8a <HAL_RCCEx_PeriphCLKConfig+0x146>
9000c3e8:	462e      	mov	r6, r5
9000c3ea:	e406      	b.n	9000bbfa <HAL_RCCEx_PeriphCLKConfig+0xb6>
9000c3ec:	462e      	mov	r6, r5
9000c3ee:	e489      	b.n	9000bd04 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
9000c3f0:	462e      	mov	r6, r5
9000c3f2:	f7ff bbe2 	b.w	9000bbba <HAL_RCCEx_PeriphCLKConfig+0x76>
9000c3f6:	462e      	mov	r6, r5
9000c3f8:	e423      	b.n	9000bc42 <HAL_RCCEx_PeriphCLKConfig+0xfe>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c3fa:	2102      	movs	r1, #2
9000c3fc:	f104 0008 	add.w	r0, r4, #8
9000c400:	f7ff faac 	bl	9000b95c <RCCEx_PLL2_Config>
9000c404:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000c406:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c40a:	2d00      	cmp	r5, #0
9000c40c:	d14c      	bne.n	9000c4a8 <HAL_RCCEx_PeriphCLKConfig+0x964>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000c40e:	4f3d      	ldr	r7, [pc, #244]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c410:	6d20      	ldr	r0, [r4, #80]	; 0x50
9000c412:	6cf9      	ldr	r1, [r7, #76]	; 0x4c
9000c414:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
9000c418:	4301      	orrs	r1, r0
9000c41a:	64f9      	str	r1, [r7, #76]	; 0x4c
9000c41c:	e652      	b.n	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c41e:	4839      	ldr	r0, [pc, #228]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c420:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c422:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c426:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c428:	e462      	b.n	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c42a:	4836      	ldr	r0, [pc, #216]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c42c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c42e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c432:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c434:	e41e      	b.n	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x130>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c436:	4833      	ldr	r0, [pc, #204]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c438:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c43a:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c43e:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c440:	f7ff bbd1 	b.w	9000bbe6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c444:	482f      	ldr	r0, [pc, #188]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c446:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c448:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c44c:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c44e:	f7ff bbed 	b.w	9000bc2c <HAL_RCCEx_PeriphCLKConfig+0xe8>
9000c452:	462e      	mov	r6, r5
9000c454:	e540      	b.n	9000bed8 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000c456:	462e      	mov	r6, r5
9000c458:	e5a5      	b.n	9000bfa6 <HAL_RCCEx_PeriphCLKConfig+0x462>
9000c45a:	462e      	mov	r6, r5
9000c45c:	e4a2      	b.n	9000bda4 <HAL_RCCEx_PeriphCLKConfig+0x260>
9000c45e:	462e      	mov	r6, r5
9000c460:	e57f      	b.n	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c462:	462e      	mov	r6, r5
9000c464:	e42c      	b.n	9000bcc0 <HAL_RCCEx_PeriphCLKConfig+0x17c>
9000c466:	462e      	mov	r6, r5
9000c468:	e501      	b.n	9000be6e <HAL_RCCEx_PeriphCLKConfig+0x32a>
9000c46a:	462e      	mov	r6, r5
9000c46c:	e46a      	b.n	9000bd44 <HAL_RCCEx_PeriphCLKConfig+0x200>
9000c46e:	462e      	mov	r6, r5
9000c470:	e5dd      	b.n	9000c02e <HAL_RCCEx_PeriphCLKConfig+0x4ea>
9000c472:	462e      	mov	r6, r5
9000c474:	e486      	b.n	9000bd84 <HAL_RCCEx_PeriphCLKConfig+0x240>
9000c476:	462e      	mov	r6, r5
9000c478:	e5b7      	b.n	9000bfea <HAL_RCCEx_PeriphCLKConfig+0x4a6>
9000c47a:	462e      	mov	r6, r5
9000c47c:	e54c      	b.n	9000bf18 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
9000c47e:	462e      	mov	r6, r5
9000c480:	e602      	b.n	9000c088 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000c482:	462e      	mov	r6, r5
9000c484:	e612      	b.n	9000c0ac <HAL_RCCEx_PeriphCLKConfig+0x568>
9000c486:	462e      	mov	r6, r5
9000c488:	e62e      	b.n	9000c0e8 <HAL_RCCEx_PeriphCLKConfig+0x5a4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c48a:	4f1e      	ldr	r7, [pc, #120]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c48c:	6af8      	ldr	r0, [r7, #44]	; 0x2c
9000c48e:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c492:	62f8      	str	r0, [r7, #44]	; 0x2c
    if (ret == HAL_OK)
9000c494:	2d00      	cmp	r5, #0
9000c496:	d1f6      	bne.n	9000c486 <HAL_RCCEx_PeriphCLKConfig+0x942>
9000c498:	e6a4      	b.n	9000c1e4 <HAL_RCCEx_PeriphCLKConfig+0x6a0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c49a:	481a      	ldr	r0, [pc, #104]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c49c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c49e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4a2:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c4a4:	2d00      	cmp	r5, #0
9000c4a6:	d0b2      	beq.n	9000c40e <HAL_RCCEx_PeriphCLKConfig+0x8ca>
9000c4a8:	462e      	mov	r6, r5
9000c4aa:	e60b      	b.n	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0x580>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c4ac:	4815      	ldr	r0, [pc, #84]	; (9000c504 <HAL_RCCEx_PeriphCLKConfig+0x9c0>)
9000c4ae:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c4b0:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c4b4:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c4b6:	2d00      	cmp	r5, #0
9000c4b8:	d1e3      	bne.n	9000c482 <HAL_RCCEx_PeriphCLKConfig+0x93e>
9000c4ba:	e6c7      	b.n	9000c24c <HAL_RCCEx_PeriphCLKConfig+0x708>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c4bc:	f104 0008 	add.w	r0, r4, #8
9000c4c0:	f7ff fa4c 	bl	9000b95c <RCCEx_PLL2_Config>
9000c4c4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000c4c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4ca:	2d00      	cmp	r5, #0
9000c4cc:	d1d7      	bne.n	9000c47e <HAL_RCCEx_PeriphCLKConfig+0x93a>
9000c4ce:	e6d1      	b.n	9000c274 <HAL_RCCEx_PeriphCLKConfig+0x730>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c4d0:	6862      	ldr	r2, [r4, #4]
9000c4d2:	e653      	b.n	9000c17c <HAL_RCCEx_PeriphCLKConfig+0x638>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c4d4:	2102      	movs	r1, #2
9000c4d6:	f104 0008 	add.w	r0, r4, #8
9000c4da:	f7ff fa3f 	bl	9000b95c <RCCEx_PLL2_Config>
9000c4de:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000c4e0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4e4:	2d00      	cmp	r5, #0
9000c4e6:	d1bc      	bne.n	9000c462 <HAL_RCCEx_PeriphCLKConfig+0x91e>
9000c4e8:	f7ff bbe3 	b.w	9000bcb2 <HAL_RCCEx_PeriphCLKConfig+0x16e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c4ec:	2102      	movs	r1, #2
9000c4ee:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c4f2:	f7ff faad 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c4f6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000c4f8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c4fc:	2d00      	cmp	r5, #0
9000c4fe:	d1ba      	bne.n	9000c476 <HAL_RCCEx_PeriphCLKConfig+0x932>
9000c500:	e56b      	b.n	9000bfda <HAL_RCCEx_PeriphCLKConfig+0x496>
9000c502:	bf00      	nop
9000c504:	58024400 	.word	0x58024400
9000c508:	58024800 	.word	0x58024800
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c50c:	2102      	movs	r1, #2
9000c50e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c512:	f7ff fa9d 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c516:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000c518:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c51c:	2d00      	cmp	r5, #0
9000c51e:	d1a6      	bne.n	9000c46e <HAL_RCCEx_PeriphCLKConfig+0x92a>
9000c520:	e57d      	b.n	9000c01e <HAL_RCCEx_PeriphCLKConfig+0x4da>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c522:	4886      	ldr	r0, [pc, #536]	; (9000c73c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c524:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c526:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c52a:	62c1      	str	r1, [r0, #44]	; 0x2c
    if (ret == HAL_OK)
9000c52c:	2d00      	cmp	r5, #0
9000c52e:	d194      	bne.n	9000c45a <HAL_RCCEx_PeriphCLKConfig+0x916>
9000c530:	e679      	b.n	9000c226 <HAL_RCCEx_PeriphCLKConfig+0x6e2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c532:	2101      	movs	r1, #1
9000c534:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c538:	f7ff fa8a 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c53c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000c53e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c542:	2d00      	cmp	r5, #0
9000c544:	d191      	bne.n	9000c46a <HAL_RCCEx_PeriphCLKConfig+0x926>
9000c546:	f7ff bbf6 	b.w	9000bd36 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c54a:	2101      	movs	r1, #1
9000c54c:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c550:	f7ff fa7e 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c554:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000c556:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c55a:	2d00      	cmp	r5, #0
9000c55c:	d189      	bne.n	9000c472 <HAL_RCCEx_PeriphCLKConfig+0x92e>
9000c55e:	e409      	b.n	9000bd74 <HAL_RCCEx_PeriphCLKConfig+0x230>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c560:	2102      	movs	r1, #2
9000c562:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c566:	f7ff fa73 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c56a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000c56c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c570:	2d00      	cmp	r5, #0
9000c572:	f47f af70 	bne.w	9000c456 <HAL_RCCEx_PeriphCLKConfig+0x912>
9000c576:	e50e      	b.n	9000bf96 <HAL_RCCEx_PeriphCLKConfig+0x452>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
9000c578:	2102      	movs	r1, #2
9000c57a:	f104 0008 	add.w	r0, r4, #8
9000c57e:	f7ff f9ed 	bl	9000b95c <RCCEx_PLL2_Config>
9000c582:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000c584:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c588:	2d00      	cmp	r5, #0
9000c58a:	f47f af6c 	bne.w	9000c466 <HAL_RCCEx_PeriphCLKConfig+0x922>
9000c58e:	e467      	b.n	9000be60 <HAL_RCCEx_PeriphCLKConfig+0x31c>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c590:	2102      	movs	r1, #2
9000c592:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c596:	f7ff fa5b 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c59a:	2800      	cmp	r0, #0
9000c59c:	f040 8094 	bne.w	9000c6c8 <HAL_RCCEx_PeriphCLKConfig+0xb84>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c5a0:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c5a4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c5a8:	e549      	b.n	9000c03e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000c5aa:	2102      	movs	r1, #2
9000c5ac:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5b0:	f7ff fa4e 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c5b4:	2800      	cmp	r0, #0
9000c5b6:	f040 808d 	bne.w	9000c6d4 <HAL_RCCEx_PeriphCLKConfig+0xb90>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c5ba:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c5be:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c5c2:	e54a      	b.n	9000c05a <HAL_RCCEx_PeriphCLKConfig+0x516>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000c5c4:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c5c8:	f7ff bae9 	b.w	9000bb9e <HAL_RCCEx_PeriphCLKConfig+0x5a>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c5cc:	2100      	movs	r1, #0
9000c5ce:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5d2:	f7ff fa3d 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c5d6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000c5d8:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c5dc:	f7ff bb4a 	b.w	9000bc74 <HAL_RCCEx_PeriphCLKConfig+0x130>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c5e0:	2100      	movs	r1, #0
9000c5e2:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5e6:	f7ff fa33 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c5ea:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c5ec:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c5f0:	e600      	b.n	9000c1f4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c5f2:	2100      	movs	r1, #0
9000c5f4:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c5f8:	f7ff fa2a 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c5fc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000c5fe:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c602:	f7ff baf0 	b.w	9000bbe6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
9000c606:	2102      	movs	r1, #2
9000c608:	3028      	adds	r0, #40	; 0x28
9000c60a:	f7ff fa21 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c60e:	4606      	mov	r6, r0
    if (ret == HAL_OK)
9000c610:	2e00      	cmp	r6, #0
9000c612:	f43f aab5 	beq.w	9000bb80 <HAL_RCCEx_PeriphCLKConfig+0x3c>
9000c616:	e7d5      	b.n	9000c5c4 <HAL_RCCEx_PeriphCLKConfig+0xa80>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c618:	4848      	ldr	r0, [pc, #288]	; (9000c73c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
        break;
9000c61a:	4635      	mov	r5, r6
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c61c:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
9000c61e:	f441 3100 	orr.w	r1, r1, #131072	; 0x20000
9000c622:	62c1      	str	r1, [r0, #44]	; 0x2c
        break;
9000c624:	e5e6      	b.n	9000c1f4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
9000c626:	2100      	movs	r1, #0
9000c628:	f104 0008 	add.w	r0, r4, #8
9000c62c:	f7ff f996 	bl	9000b95c <RCCEx_PLL2_Config>
9000c630:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000c632:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c636:	e5dd      	b.n	9000c1f4 <HAL_RCCEx_PeriphCLKConfig+0x6b0>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c638:	2100      	movs	r1, #0
9000c63a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c63e:	f7ff fa07 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c642:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000c644:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c648:	f7ff bb52 	b.w	9000bcf0 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
9000c64c:	2100      	movs	r1, #0
9000c64e:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c652:	f7ff f9fd 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c656:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000c658:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000c65c:	f7ff bae6 	b.w	9000bc2c <HAL_RCCEx_PeriphCLKConfig+0xe8>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c660:	2101      	movs	r1, #1
9000c662:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c666:	f7ff f9f3 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c66a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000c66c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c670:	2d00      	cmp	r5, #0
9000c672:	f47f aef4 	bne.w	9000c45e <HAL_RCCEx_PeriphCLKConfig+0x91a>
9000c676:	e46c      	b.n	9000bf52 <HAL_RCCEx_PeriphCLKConfig+0x40e>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c678:	2101      	movs	r1, #1
9000c67a:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c67e:	f7ff f9e7 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c682:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000c684:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c688:	2d00      	cmp	r5, #0
9000c68a:	f47f aef6 	bne.w	9000c47a <HAL_RCCEx_PeriphCLKConfig+0x936>
9000c68e:	e43c      	b.n	9000bf0a <HAL_RCCEx_PeriphCLKConfig+0x3c6>
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
9000c690:	2101      	movs	r1, #1
9000c692:	f104 0028 	add.w	r0, r4, #40	; 0x28
9000c696:	f7ff f9db 	bl	9000ba50 <RCCEx_PLL3_Config>
9000c69a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000c69c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c6a0:	2d00      	cmp	r5, #0
9000c6a2:	f47f aed6 	bne.w	9000c452 <HAL_RCCEx_PeriphCLKConfig+0x90e>
9000c6a6:	e5f9      	b.n	9000c29c <HAL_RCCEx_PeriphCLKConfig+0x758>
        status = ret;
9000c6a8:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c6aa:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c6ae:	4635      	mov	r5, r6
9000c6b0:	f7ff bbe0 	b.w	9000be74 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c6b4:	2601      	movs	r6, #1
9000c6b6:	f7ff ba72 	b.w	9000bb9e <HAL_RCCEx_PeriphCLKConfig+0x5a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000c6ba:	4d20      	ldr	r5, [pc, #128]	; (9000c73c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c6bc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000c6be:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
9000c6c2:	62e8      	str	r0, [r5, #44]	; 0x2c
    if (ret == HAL_OK)
9000c6c4:	f7ff ba64 	b.w	9000bb90 <HAL_RCCEx_PeriphCLKConfig+0x4c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c6c8:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
        status = HAL_ERROR;
9000c6cc:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c6ce:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c6d2:	e4b4      	b.n	9000c03e <HAL_RCCEx_PeriphCLKConfig+0x4fa>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c6d4:	f8d4 0098 	ldr.w	r0, [r4, #152]	; 0x98
        status = HAL_ERROR;
9000c6d8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c6da:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c6de:	e4bc      	b.n	9000c05a <HAL_RCCEx_PeriphCLKConfig+0x516>
        tickstart = HAL_GetTick();
9000c6e0:	f7fb fa88 	bl	90007bf4 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c6e4:	f8df 8054 	ldr.w	r8, [pc, #84]	; 9000c73c <HAL_RCCEx_PeriphCLKConfig+0xbf8>
        tickstart = HAL_GetTick();
9000c6e8:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c6ea:	f241 3988 	movw	r9, #5000	; 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c6ee:	e004      	b.n	9000c6fa <HAL_RCCEx_PeriphCLKConfig+0xbb6>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c6f0:	f7fb fa80 	bl	90007bf4 <HAL_GetTick>
9000c6f4:	1bc0      	subs	r0, r0, r7
9000c6f6:	4548      	cmp	r0, r9
9000c6f8:	d8d6      	bhi.n	9000c6a8 <HAL_RCCEx_PeriphCLKConfig+0xb64>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c6fa:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
9000c6fe:	079b      	lsls	r3, r3, #30
9000c700:	d5f6      	bpl.n	9000c6f0 <HAL_RCCEx_PeriphCLKConfig+0xbac>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c702:	f8d4 30b4 	ldr.w	r3, [r4, #180]	; 0xb4
9000c706:	e64d      	b.n	9000c3a4 <HAL_RCCEx_PeriphCLKConfig+0x860>
9000c708:	480c      	ldr	r0, [pc, #48]	; (9000c73c <HAL_RCCEx_PeriphCLKConfig+0xbf8>)
9000c70a:	4a0d      	ldr	r2, [pc, #52]	; (9000c740 <HAL_RCCEx_PeriphCLKConfig+0xbfc>)
9000c70c:	6901      	ldr	r1, [r0, #16]
9000c70e:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c712:	f421 517c 	bic.w	r1, r1, #16128	; 0x3f00
9000c716:	430a      	orrs	r2, r1
9000c718:	6102      	str	r2, [r0, #16]
9000c71a:	e64e      	b.n	9000c3ba <HAL_RCCEx_PeriphCLKConfig+0x876>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c71c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c720:	462e      	mov	r6, r5
9000c722:	f7ff bba7 	b.w	9000be74 <HAL_RCCEx_PeriphCLKConfig+0x330>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000c726:	2601      	movs	r6, #1
9000c728:	4635      	mov	r5, r6
9000c72a:	f7ff bbf5 	b.w	9000bf18 <HAL_RCCEx_PeriphCLKConfig+0x3d4>
    switch (PeriphClkInit->FmcClockSelection)
9000c72e:	2601      	movs	r6, #1
9000c730:	4635      	mov	r5, r6
9000c732:	f7ff bb9c 	b.w	9000be6e <HAL_RCCEx_PeriphCLKConfig+0x32a>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000c736:	2601      	movs	r6, #1
9000c738:	4635      	mov	r5, r6
9000c73a:	e412      	b.n	9000bf62 <HAL_RCCEx_PeriphCLKConfig+0x41e>
9000c73c:	58024400 	.word	0x58024400
9000c740:	00ffffcf 	.word	0x00ffffcf

9000c744 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c744:	b318      	cbz	r0, 9000c78e <HAL_SDRAM_Init+0x4a>
{
9000c746:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c748:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
9000c74c:	4604      	mov	r4, r0
9000c74e:	460d      	mov	r5, r1
9000c750:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c754:	b1b3      	cbz	r3, 9000c784 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c756:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c758:	2302      	movs	r3, #2
9000c75a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c75e:	f851 0b04 	ldr.w	r0, [r1], #4
9000c762:	f000 fa39 	bl	9000cbd8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c766:	6862      	ldr	r2, [r4, #4]
9000c768:	4629      	mov	r1, r5
9000c76a:	6820      	ldr	r0, [r4, #0]
9000c76c:	f000 fa72 	bl	9000cc54 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c770:	4a08      	ldr	r2, [pc, #32]	; (9000c794 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c772:	2101      	movs	r1, #1

  return HAL_OK;
9000c774:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c776:	6813      	ldr	r3, [r2, #0]
9000c778:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
9000c77c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c77e:	f884 102c 	strb.w	r1, [r4, #44]	; 0x2c
}
9000c782:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c784:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c788:	f7f6 feba 	bl	90003500 <HAL_SDRAM_MspInit>
9000c78c:	e7e3      	b.n	9000c756 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c78e:	2001      	movs	r0, #1
}
9000c790:	4770      	bx	lr
9000c792:	bf00      	nop
9000c794:	52004000 	.word	0x52004000

9000c798 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c798:	b510      	push	{r4, lr}
9000c79a:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c79c:	f7f6 ff2c 	bl	900035f8 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c7a0:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c7a4:	f000 faa4 	bl	9000ccf0 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c7a8:	2000      	movs	r0, #0
9000c7aa:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c7ae:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
9000c7b2:	bd10      	pop	{r4, pc}

9000c7b4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c7b4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c7b6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c7ba:	4604      	mov	r4, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c7bc:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c7be:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c7c0:	d004      	beq.n	9000c7cc <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c7c2:	f000 06fb 	and.w	r6, r0, #251	; 0xfb
9000c7c6:	2e01      	cmp	r6, #1
9000c7c8:	d001      	beq.n	9000c7ce <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c7ca:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c7cc:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c7ce:	2302      	movs	r3, #2
9000c7d0:	460d      	mov	r5, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c7d2:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c7d4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c7d8:	f000 fa9e 	bl	9000cd18 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c7dc:	682b      	ldr	r3, [r5, #0]
9000c7de:	2b02      	cmp	r3, #2
9000c7e0:	d003      	beq.n	9000c7ea <HAL_SDRAM_SendCommand+0x36>
  return HAL_OK;
9000c7e2:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c7e4:	f884 602c 	strb.w	r6, [r4, #44]	; 0x2c
}
9000c7e8:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c7ea:	2305      	movs	r3, #5
  return HAL_OK;
9000c7ec:	2000      	movs	r0, #0
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c7ee:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
9000c7f2:	bd70      	pop	{r4, r5, r6, pc}

9000c7f4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c7f4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c7f6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
9000c7fa:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c7fc:	2b02      	cmp	r3, #2
9000c7fe:	b2d8      	uxtb	r0, r3
9000c800:	d005      	beq.n	9000c80e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c802:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9000c806:	2b01      	cmp	r3, #1
9000c808:	b2dd      	uxtb	r5, r3
9000c80a:	d001      	beq.n	9000c810 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c80c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c80e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c810:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c812:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c814:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c818:	f000 fa96 	bl	9000cd48 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c81c:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c81e:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
9000c822:	bd38      	pop	{r3, r4, r5, pc}

9000c824 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c824:	4770      	bx	lr
9000c826:	bf00      	nop

9000c828 <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c828:	2800      	cmp	r0, #0
9000c82a:	f000 80a5 	beq.w	9000c978 <HAL_TIM_Base_Init+0x150>
{
9000c82e:	b538      	push	{r3, r4, r5, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c830:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c834:	4604      	mov	r4, r0
9000c836:	f003 02ff 	and.w	r2, r3, #255	; 0xff
9000c83a:	2b00      	cmp	r3, #0
9000c83c:	d076      	beq.n	9000c92c <HAL_TIM_Base_Init+0x104>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c83e:	6822      	ldr	r2, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c840:	2302      	movs	r3, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c842:	494e      	ldr	r1, [pc, #312]	; (9000c97c <HAL_TIM_Base_Init+0x154>)
9000c844:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
  htim->State = HAL_TIM_STATE_BUSY;
9000c848:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c84c:	eba2 0101 	sub.w	r1, r2, r1
  tmpcr1 = TIMx->CR1;
9000c850:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c852:	fab1 f181 	clz	r1, r1
9000c856:	ea4f 1151 	mov.w	r1, r1, lsr #5
9000c85a:	d027      	beq.n	9000c8ac <HAL_TIM_Base_Init+0x84>
9000c85c:	bb31      	cbnz	r1, 9000c8ac <HAL_TIM_Base_Init+0x84>
9000c85e:	4848      	ldr	r0, [pc, #288]	; (9000c980 <HAL_TIM_Base_Init+0x158>)
9000c860:	4d48      	ldr	r5, [pc, #288]	; (9000c984 <HAL_TIM_Base_Init+0x15c>)
9000c862:	4282      	cmp	r2, r0
9000c864:	d067      	beq.n	9000c936 <HAL_TIM_Base_Init+0x10e>
9000c866:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c86a:	4282      	cmp	r2, r0
9000c86c:	d063      	beq.n	9000c936 <HAL_TIM_Base_Init+0x10e>
9000c86e:	1b55      	subs	r5, r2, r5
9000c870:	f500 6080 	add.w	r0, r0, #1024	; 0x400
9000c874:	fab5 f585 	clz	r5, r5
9000c878:	4282      	cmp	r2, r0
9000c87a:	ea4f 1555 	mov.w	r5, r5, lsr #5
9000c87e:	d063      	beq.n	9000c948 <HAL_TIM_Base_Init+0x120>
9000c880:	2d00      	cmp	r5, #0
9000c882:	d161      	bne.n	9000c948 <HAL_TIM_Base_Init+0x120>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c884:	4840      	ldr	r0, [pc, #256]	; (9000c988 <HAL_TIM_Base_Init+0x160>)
9000c886:	4941      	ldr	r1, [pc, #260]	; (9000c98c <HAL_TIM_Base_Init+0x164>)
9000c888:	428a      	cmp	r2, r1
9000c88a:	bf18      	it	ne
9000c88c:	4282      	cmpne	r2, r0
9000c88e:	d065      	beq.n	9000c95c <HAL_TIM_Base_Init+0x134>
9000c890:	f501 6180 	add.w	r1, r1, #1024	; 0x400
9000c894:	428a      	cmp	r2, r1
9000c896:	d061      	beq.n	9000c95c <HAL_TIM_Base_Init+0x134>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c898:	69a0      	ldr	r0, [r4, #24]
9000c89a:	f023 0380 	bic.w	r3, r3, #128	; 0x80

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c89e:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c8a0:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c8a2:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c8a4:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c8a6:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c8a8:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c8aa:	e023      	b.n	9000c8f4 <HAL_TIM_Base_Init+0xcc>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c8ac:	4d35      	ldr	r5, [pc, #212]	; (9000c984 <HAL_TIM_Base_Init+0x15c>)
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c8ae:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c8b2:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c8b4:	1b55      	subs	r5, r2, r5
    tmpcr1 |= Structure->CounterMode;
9000c8b6:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c8b8:	fab5 f585 	clz	r5, r5
9000c8bc:	096d      	lsrs	r5, r5, #5
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c8be:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c8c0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c8c4:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c8c6:	69a0      	ldr	r0, [r4, #24]
9000c8c8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c8cc:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
9000c8ce:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c8d0:	68e3      	ldr	r3, [r4, #12]
9000c8d2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c8d4:	6863      	ldr	r3, [r4, #4]
9000c8d6:	6293      	str	r3, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c8d8:	b951      	cbnz	r1, 9000c8f0 <HAL_TIM_Base_Init+0xc8>
9000c8da:	b94d      	cbnz	r5, 9000c8f0 <HAL_TIM_Base_Init+0xc8>
9000c8dc:	492a      	ldr	r1, [pc, #168]	; (9000c988 <HAL_TIM_Base_Init+0x160>)
9000c8de:	4b2b      	ldr	r3, [pc, #172]	; (9000c98c <HAL_TIM_Base_Init+0x164>)
9000c8e0:	429a      	cmp	r2, r3
9000c8e2:	bf18      	it	ne
9000c8e4:	428a      	cmpne	r2, r1
9000c8e6:	d003      	beq.n	9000c8f0 <HAL_TIM_Base_Init+0xc8>
9000c8e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
9000c8ec:	429a      	cmp	r2, r3
9000c8ee:	d101      	bne.n	9000c8f4 <HAL_TIM_Base_Init+0xcc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c8f0:	6963      	ldr	r3, [r4, #20]
9000c8f2:	6313      	str	r3, [r2, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c8f4:	2301      	movs	r3, #1
  return HAL_OK;
9000c8f6:	2000      	movs	r0, #0
  TIMx->EGR = TIM_EGR_UG;
9000c8f8:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c8fa:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c8fe:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
9000c902:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
9000c906:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
9000c90a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
9000c90e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
9000c912:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c916:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000c91a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000c91e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
9000c922:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c926:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
9000c92a:	bd38      	pop	{r3, r4, r5, pc}
    htim->Lock = HAL_UNLOCKED;
9000c92c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c930:	f7ff ff78 	bl	9000c824 <HAL_TIM_Base_MspInit>
9000c934:	e783      	b.n	9000c83e <HAL_TIM_Base_Init+0x16>
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c936:	1b55      	subs	r5, r2, r5
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c938:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c93c:	68a0      	ldr	r0, [r4, #8]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c93e:	fab5 f585 	clz	r5, r5
    tmpcr1 |= Structure->CounterMode;
9000c942:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c944:	096d      	lsrs	r5, r5, #5
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c946:	e7ba      	b.n	9000c8be <HAL_TIM_Base_Init+0x96>
    tmpcr1 |= Structure->CounterMode;
9000c948:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c94a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
9000c94e:	4303      	orrs	r3, r0
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c950:	480f      	ldr	r0, [pc, #60]	; (9000c990 <HAL_TIM_Base_Init+0x168>)
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c952:	4282      	cmp	r2, r0
9000c954:	d0b3      	beq.n	9000c8be <HAL_TIM_Base_Init+0x96>
9000c956:	2d00      	cmp	r5, #0
9000c958:	d1b1      	bne.n	9000c8be <HAL_TIM_Base_Init+0x96>
9000c95a:	e793      	b.n	9000c884 <HAL_TIM_Base_Init+0x5c>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c95c:	6920      	ldr	r0, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c95e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c962:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c964:	4303      	orrs	r3, r0
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c966:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c968:	f023 0380 	bic.w	r3, r3, #128	; 0x80
9000c96c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
9000c96e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
9000c970:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c972:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c974:	6291      	str	r1, [r2, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c976:	e7b1      	b.n	9000c8dc <HAL_TIM_Base_Init+0xb4>
    return HAL_ERROR;
9000c978:	2001      	movs	r0, #1
}
9000c97a:	4770      	bx	lr
9000c97c:	40010000 	.word	0x40010000
9000c980:	40000400 	.word	0x40000400
9000c984:	40010400 	.word	0x40010400
9000c988:	40014000 	.word	0x40014000
9000c98c:	40014400 	.word	0x40014400
9000c990:	40000c00 	.word	0x40000c00

9000c994 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c994:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
9000c998:	2b01      	cmp	r3, #1
9000c99a:	d141      	bne.n	9000ca20 <HAL_TIM_Base_Start_IT+0x8c>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c99c:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c99e:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9a0:	4b24      	ldr	r3, [pc, #144]	; (9000ca34 <HAL_TIM_Base_Start_IT+0xa0>)
9000c9a2:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
9000c9a6:	bf18      	it	ne
9000c9a8:	429a      	cmpne	r2, r3
{
9000c9aa:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9ac:	bf0c      	ite	eq
9000c9ae:	2301      	moveq	r3, #1
9000c9b0:	2300      	movne	r3, #0
9000c9b2:	4d21      	ldr	r5, [pc, #132]	; (9000ca38 <HAL_TIM_Base_Start_IT+0xa4>)
9000c9b4:	4c21      	ldr	r4, [pc, #132]	; (9000ca3c <HAL_TIM_Base_Start_IT+0xa8>)
9000c9b6:	42aa      	cmp	r2, r5
9000c9b8:	bf08      	it	eq
9000c9ba:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c9be:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c9c2:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9c4:	42a2      	cmp	r2, r4
9000c9c6:	bf08      	it	eq
9000c9c8:	f043 0301 	orreq.w	r3, r3, #1
9000c9cc:	f504 6480 	add.w	r4, r4, #1024	; 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c9d0:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9d4:	481a      	ldr	r0, [pc, #104]	; (9000ca40 <HAL_TIM_Base_Start_IT+0xac>)
9000c9d6:	42a2      	cmp	r2, r4
9000c9d8:	bf08      	it	eq
9000c9da:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c9de:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c9e0:	4282      	cmp	r2, r0
9000c9e2:	bf08      	it	eq
9000c9e4:	f043 0301 	orreq.w	r3, r3, #1
9000c9e8:	4916      	ldr	r1, [pc, #88]	; (9000ca44 <HAL_TIM_Base_Start_IT+0xb0>)
9000c9ea:	428a      	cmp	r2, r1
9000c9ec:	bf08      	it	eq
9000c9ee:	f043 0301 	orreq.w	r3, r3, #1
9000c9f2:	b933      	cbnz	r3, 9000ca02 <HAL_TIM_Base_Start_IT+0x6e>
9000c9f4:	f500 5070 	add.w	r0, r0, #15360	; 0x3c00
9000c9f8:	1a10      	subs	r0, r2, r0
9000c9fa:	fab0 f080 	clz	r0, r0
9000c9fe:	0940      	lsrs	r0, r0, #5
9000ca00:	b198      	cbz	r0, 9000ca2a <HAL_TIM_Base_Start_IT+0x96>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000ca02:	6891      	ldr	r1, [r2, #8]
9000ca04:	4b10      	ldr	r3, [pc, #64]	; (9000ca48 <HAL_TIM_Base_Start_IT+0xb4>)
9000ca06:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000ca08:	2b06      	cmp	r3, #6
9000ca0a:	d00b      	beq.n	9000ca24 <HAL_TIM_Base_Start_IT+0x90>
9000ca0c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
9000ca10:	d008      	beq.n	9000ca24 <HAL_TIM_Base_Start_IT+0x90>
      __HAL_TIM_ENABLE(htim);
9000ca12:	6813      	ldr	r3, [r2, #0]
  return HAL_OK;
9000ca14:	2000      	movs	r0, #0
      __HAL_TIM_ENABLE(htim);
9000ca16:	f043 0301 	orr.w	r3, r3, #1
9000ca1a:	6013      	str	r3, [r2, #0]
}
9000ca1c:	bc30      	pop	{r4, r5}
9000ca1e:	4770      	bx	lr
    return HAL_ERROR;
9000ca20:	2001      	movs	r0, #1
}
9000ca22:	4770      	bx	lr
  return HAL_OK;
9000ca24:	2000      	movs	r0, #0
}
9000ca26:	bc30      	pop	{r4, r5}
9000ca28:	4770      	bx	lr
    __HAL_TIM_ENABLE(htim);
9000ca2a:	6813      	ldr	r3, [r2, #0]
9000ca2c:	f043 0301 	orr.w	r3, r3, #1
9000ca30:	6013      	str	r3, [r2, #0]
9000ca32:	e7f3      	b.n	9000ca1c <HAL_TIM_Base_Start_IT+0x88>
9000ca34:	40010000 	.word	0x40010000
9000ca38:	40000400 	.word	0x40000400
9000ca3c:	40000800 	.word	0x40000800
9000ca40:	40010400 	.word	0x40010400
9000ca44:	40001800 	.word	0x40001800
9000ca48:	00010007 	.word	0x00010007

9000ca4c <HAL_TIM_OC_DelayElapsedCallback>:
9000ca4c:	4770      	bx	lr
9000ca4e:	bf00      	nop

9000ca50 <HAL_TIM_IC_CaptureCallback>:
9000ca50:	4770      	bx	lr
9000ca52:	bf00      	nop

9000ca54 <HAL_TIM_PWM_PulseFinishedCallback>:
9000ca54:	4770      	bx	lr
9000ca56:	bf00      	nop

9000ca58 <HAL_TIM_TriggerCallback>:
9000ca58:	4770      	bx	lr
9000ca5a:	bf00      	nop

9000ca5c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000ca5c:	6803      	ldr	r3, [r0, #0]
9000ca5e:	691a      	ldr	r2, [r3, #16]
9000ca60:	0791      	lsls	r1, r2, #30
{
9000ca62:	b510      	push	{r4, lr}
9000ca64:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
9000ca66:	d502      	bpl.n	9000ca6e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
9000ca68:	68da      	ldr	r2, [r3, #12]
9000ca6a:	0792      	lsls	r2, r2, #30
9000ca6c:	d468      	bmi.n	9000cb40 <HAL_TIM_IRQHandler+0xe4>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000ca6e:	691a      	ldr	r2, [r3, #16]
9000ca70:	0752      	lsls	r2, r2, #29
9000ca72:	d502      	bpl.n	9000ca7a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
9000ca74:	68da      	ldr	r2, [r3, #12]
9000ca76:	0750      	lsls	r0, r2, #29
9000ca78:	d44f      	bmi.n	9000cb1a <HAL_TIM_IRQHandler+0xbe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000ca7a:	691a      	ldr	r2, [r3, #16]
9000ca7c:	0711      	lsls	r1, r2, #28
9000ca7e:	d502      	bpl.n	9000ca86 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
9000ca80:	68da      	ldr	r2, [r3, #12]
9000ca82:	0712      	lsls	r2, r2, #28
9000ca84:	d437      	bmi.n	9000caf6 <HAL_TIM_IRQHandler+0x9a>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000ca86:	691a      	ldr	r2, [r3, #16]
9000ca88:	06d0      	lsls	r0, r2, #27
9000ca8a:	d502      	bpl.n	9000ca92 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
9000ca8c:	68da      	ldr	r2, [r3, #12]
9000ca8e:	06d1      	lsls	r1, r2, #27
9000ca90:	d41e      	bmi.n	9000cad0 <HAL_TIM_IRQHandler+0x74>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000ca92:	691a      	ldr	r2, [r3, #16]
9000ca94:	07d2      	lsls	r2, r2, #31
9000ca96:	d502      	bpl.n	9000ca9e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
9000ca98:	68da      	ldr	r2, [r3, #12]
9000ca9a:	07d0      	lsls	r0, r2, #31
9000ca9c:	d469      	bmi.n	9000cb72 <HAL_TIM_IRQHandler+0x116>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000ca9e:	691a      	ldr	r2, [r3, #16]
9000caa0:	0611      	lsls	r1, r2, #24
9000caa2:	d502      	bpl.n	9000caaa <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000caa4:	68da      	ldr	r2, [r3, #12]
9000caa6:	0612      	lsls	r2, r2, #24
9000caa8:	d46b      	bmi.n	9000cb82 <HAL_TIM_IRQHandler+0x126>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000caaa:	691a      	ldr	r2, [r3, #16]
9000caac:	05d0      	lsls	r0, r2, #23
9000caae:	d502      	bpl.n	9000cab6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
9000cab0:	68da      	ldr	r2, [r3, #12]
9000cab2:	0611      	lsls	r1, r2, #24
9000cab4:	d46d      	bmi.n	9000cb92 <HAL_TIM_IRQHandler+0x136>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cab6:	691a      	ldr	r2, [r3, #16]
9000cab8:	0652      	lsls	r2, r2, #25
9000caba:	d502      	bpl.n	9000cac2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
9000cabc:	68da      	ldr	r2, [r3, #12]
9000cabe:	0650      	lsls	r0, r2, #25
9000cac0:	d46f      	bmi.n	9000cba2 <HAL_TIM_IRQHandler+0x146>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cac2:	691a      	ldr	r2, [r3, #16]
9000cac4:	0691      	lsls	r1, r2, #26
9000cac6:	d502      	bpl.n	9000cace <HAL_TIM_IRQHandler+0x72>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
9000cac8:	68da      	ldr	r2, [r3, #12]
9000caca:	0692      	lsls	r2, r2, #26
9000cacc:	d449      	bmi.n	9000cb62 <HAL_TIM_IRQHandler+0x106>
}
9000cace:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cad0:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cad4:	2208      	movs	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000cad6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
9000cad8:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000cada:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000cadc:	69db      	ldr	r3, [r3, #28]
9000cade:	f413 7f40 	tst.w	r3, #768	; 0x300
9000cae2:	d16f      	bne.n	9000cbc4 <HAL_TIM_IRQHandler+0x168>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cae4:	f7ff ffb2 	bl	9000ca4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cae8:	4620      	mov	r0, r4
9000caea:	f7ff ffb3 	bl	9000ca54 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000caee:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
9000caf0:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000caf2:	7722      	strb	r2, [r4, #28]
9000caf4:	e7cd      	b.n	9000ca92 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000caf6:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cafa:	2204      	movs	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000cafc:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
9000cafe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000cb00:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000cb02:	69db      	ldr	r3, [r3, #28]
9000cb04:	079b      	lsls	r3, r3, #30
9000cb06:	d15a      	bne.n	9000cbbe <HAL_TIM_IRQHandler+0x162>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cb08:	f7ff ffa0 	bl	9000ca4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cb0c:	4620      	mov	r0, r4
9000cb0e:	f7ff ffa1 	bl	9000ca54 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb12:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
9000cb14:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb16:	7722      	strb	r2, [r4, #28]
9000cb18:	e7b5      	b.n	9000ca86 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000cb1a:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000cb1e:	2202      	movs	r2, #2
        HAL_TIM_IC_CaptureCallback(htim);
9000cb20:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
9000cb22:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000cb24:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000cb26:	699b      	ldr	r3, [r3, #24]
9000cb28:	f413 7f40 	tst.w	r3, #768	; 0x300
9000cb2c:	d144      	bne.n	9000cbb8 <HAL_TIM_IRQHandler+0x15c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000cb2e:	f7ff ff8d 	bl	9000ca4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cb32:	4620      	mov	r0, r4
9000cb34:	f7ff ff8e 	bl	9000ca54 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb38:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
9000cb3a:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb3c:	7722      	strb	r2, [r4, #28]
9000cb3e:	e79c      	b.n	9000ca7a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000cb40:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cb44:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
9000cb46:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000cb48:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000cb4a:	699b      	ldr	r3, [r3, #24]
9000cb4c:	0799      	lsls	r1, r3, #30
9000cb4e:	d130      	bne.n	9000cbb2 <HAL_TIM_IRQHandler+0x156>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000cb50:	f7ff ff7c 	bl	9000ca4c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000cb54:	4620      	mov	r0, r4
9000cb56:	f7ff ff7d 	bl	9000ca54 <HAL_TIM_PWM_PulseFinishedCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb5a:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
9000cb5c:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000cb5e:	7722      	strb	r2, [r4, #28]
9000cb60:	e785      	b.n	9000ca6e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000cb62:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000cb66:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
9000cb68:	611a      	str	r2, [r3, #16]
}
9000cb6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
9000cb6e:	f000 b82d 	b.w	9000cbcc <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cb72:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000cb76:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
9000cb78:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000cb7a:	f7f6 fb25 	bl	900031c8 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
9000cb7e:	6823      	ldr	r3, [r4, #0]
9000cb80:	e78d      	b.n	9000ca9e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cb82:	f06f 0280 	mvn.w	r2, #128	; 0x80
      HAL_TIMEx_BreakCallback(htim);
9000cb86:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
9000cb88:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000cb8a:	f000 f821 	bl	9000cbd0 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
9000cb8e:	6823      	ldr	r3, [r4, #0]
9000cb90:	e78b      	b.n	9000caaa <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cb92:	f46f 7280 	mvn.w	r2, #256	; 0x100
      HAL_TIMEx_Break2Callback(htim);
9000cb96:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000cb98:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000cb9a:	f000 f81b 	bl	9000cbd4 <HAL_TIMEx_Break2Callback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
9000cb9e:	6823      	ldr	r3, [r4, #0]
9000cba0:	e789      	b.n	9000cab6 <HAL_TIM_IRQHandler+0x5a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cba2:	f06f 0240 	mvn.w	r2, #64	; 0x40
      HAL_TIM_TriggerCallback(htim);
9000cba6:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
9000cba8:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000cbaa:	f7ff ff55 	bl	9000ca58 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
9000cbae:	6823      	ldr	r3, [r4, #0]
9000cbb0:	e787      	b.n	9000cac2 <HAL_TIM_IRQHandler+0x66>
          HAL_TIM_IC_CaptureCallback(htim);
9000cbb2:	f7ff ff4d 	bl	9000ca50 <HAL_TIM_IC_CaptureCallback>
9000cbb6:	e7d0      	b.n	9000cb5a <HAL_TIM_IRQHandler+0xfe>
        HAL_TIM_IC_CaptureCallback(htim);
9000cbb8:	f7ff ff4a 	bl	9000ca50 <HAL_TIM_IC_CaptureCallback>
9000cbbc:	e7bc      	b.n	9000cb38 <HAL_TIM_IRQHandler+0xdc>
        HAL_TIM_IC_CaptureCallback(htim);
9000cbbe:	f7ff ff47 	bl	9000ca50 <HAL_TIM_IC_CaptureCallback>
9000cbc2:	e7a6      	b.n	9000cb12 <HAL_TIM_IRQHandler+0xb6>
        HAL_TIM_IC_CaptureCallback(htim);
9000cbc4:	f7ff ff44 	bl	9000ca50 <HAL_TIM_IC_CaptureCallback>
9000cbc8:	e791      	b.n	9000caee <HAL_TIM_IRQHandler+0x92>
9000cbca:	bf00      	nop

9000cbcc <HAL_TIMEx_CommutCallback>:
9000cbcc:	4770      	bx	lr
9000cbce:	bf00      	nop

9000cbd0 <HAL_TIMEx_BreakCallback>:
9000cbd0:	4770      	bx	lr
9000cbd2:	bf00      	nop

9000cbd4 <HAL_TIMEx_Break2Callback>:
9000cbd4:	4770      	bx	lr
9000cbd6:	bf00      	nop

9000cbd8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cbd8:	680b      	ldr	r3, [r1, #0]
{
9000cbda:	b410      	push	{r4}
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000cbdc:	b9d3      	cbnz	r3, 9000cc14 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cbde:	6804      	ldr	r4, [r0, #0]
9000cbe0:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
9000cbe4:	684a      	ldr	r2, [r1, #4]
9000cbe6:	4023      	ands	r3, r4
9000cbe8:	4313      	orrs	r3, r2
9000cbea:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000cbee:	4323      	orrs	r3, r4
9000cbf0:	4313      	orrs	r3, r2
9000cbf2:	e9d1 4204 	ldrd	r4, r2, [r1, #16]
9000cbf6:	4323      	orrs	r3, r4
9000cbf8:	4313      	orrs	r3, r2
9000cbfa:	e9d1 4206 	ldrd	r4, r2, [r1, #24]
9000cbfe:	4323      	orrs	r3, r4
9000cc00:	4313      	orrs	r3, r2
9000cc02:	e9d1 4208 	ldrd	r4, r2, [r1, #32]
9000cc06:	4323      	orrs	r3, r4
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000cc08:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cc0c:	4313      	orrs	r3, r2
9000cc0e:	6003      	str	r3, [r0, #0]
}
9000cc10:	2000      	movs	r0, #0
9000cc12:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cc14:	6802      	ldr	r2, [r0, #0]
9000cc16:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
9000cc1a:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
9000cc1e:	4322      	orrs	r2, r4
9000cc20:	6a4c      	ldr	r4, [r1, #36]	; 0x24
9000cc22:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cc24:	4b0a      	ldr	r3, [pc, #40]	; (9000cc50 <FMC_SDRAM_Init+0x78>)
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000cc26:	4322      	orrs	r2, r4
9000cc28:	6002      	str	r2, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cc2a:	6842      	ldr	r2, [r0, #4]
9000cc2c:	4013      	ands	r3, r2
9000cc2e:	e9d1 4201 	ldrd	r4, r2, [r1, #4]
9000cc32:	4323      	orrs	r3, r4
9000cc34:	4313      	orrs	r3, r2
9000cc36:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
9000cc3a:	4323      	orrs	r3, r4
9000cc3c:	4313      	orrs	r3, r2
9000cc3e:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
9000cc42:	4323      	orrs	r3, r4
}
9000cc44:	f85d 4b04 	ldr.w	r4, [sp], #4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000cc48:	4313      	orrs	r3, r2
9000cc4a:	6043      	str	r3, [r0, #4]
}
9000cc4c:	2000      	movs	r0, #0
9000cc4e:	4770      	bx	lr
9000cc50:	ffff8000 	.word	0xffff8000

9000cc54 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000cc54:	b430      	push	{r4, r5}
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
9000cc56:	bb0a      	cbnz	r2, 9000cc9c <FMC_SDRAM_Timing_Init+0x48>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cc58:	6883      	ldr	r3, [r0, #8]
9000cc5a:	e9d1 2400 	ldrd	r2, r4, [r1]
9000cc5e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000cc62:	3c01      	subs	r4, #1
9000cc64:	3a01      	subs	r2, #1
9000cc66:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cc6a:	4313      	orrs	r3, r2
9000cc6c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
9000cc70:	3c01      	subs	r4, #1
9000cc72:	3a01      	subs	r2, #1
9000cc74:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
9000cc78:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000cc7c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000cc80:	698a      	ldr	r2, [r1, #24]
9000cc82:	3d01      	subs	r5, #1
9000cc84:	1e61      	subs	r1, r4, #1
9000cc86:	3a01      	subs	r2, #1
9000cc88:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000cc8c:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
9000cc90:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000cc94:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cc96:	6083      	str	r3, [r0, #8]
}
9000cc98:	2000      	movs	r0, #0
9000cc9a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000cc9c:	6885      	ldr	r5, [r0, #8]
9000cc9e:	68ca      	ldr	r2, [r1, #12]
9000cca0:	4b12      	ldr	r3, [pc, #72]	; (9000ccec <FMC_SDRAM_Timing_Init+0x98>)
9000cca2:	1e54      	subs	r4, r2, #1
9000cca4:	694a      	ldr	r2, [r1, #20]
9000cca6:	402b      	ands	r3, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cca8:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ccaa:	3a01      	subs	r2, #1
9000ccac:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ccb0:	f105 3cff 	add.w	ip, r5, #4294967295
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ccb4:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ccb8:	e9d1 2400 	ldrd	r2, r4, [r1]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000ccbc:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000ccbe:	68c3      	ldr	r3, [r0, #12]
9000ccc0:	3c01      	subs	r4, #1
9000ccc2:	3a01      	subs	r2, #1
9000ccc4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
9000ccc8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
9000cccc:	690c      	ldr	r4, [r1, #16]
9000ccce:	4313      	orrs	r3, r2
9000ccd0:	698a      	ldr	r2, [r1, #24]
9000ccd2:	1e61      	subs	r1, r4, #1
9000ccd4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
9000ccd8:	3a01      	subs	r2, #1
9000ccda:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9000ccde:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
}
9000cce2:	bc30      	pop	{r4, r5}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000cce4:	60c3      	str	r3, [r0, #12]
}
9000cce6:	2000      	movs	r0, #0
9000cce8:	4770      	bx	lr
9000ccea:	bf00      	nop
9000ccec:	ff0f0fff 	.word	0xff0f0fff

9000ccf0 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000ccf0:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000ccf2:	2200      	movs	r2, #0
{
9000ccf4:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000ccf6:	f44f 7534 	mov.w	r5, #720	; 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000ccfa:	f06f 4470 	mvn.w	r4, #4026531840	; 0xf0000000
9000ccfe:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000cd02:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000cd06:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000cd08:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000cd0c:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000cd0e:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000cd10:	619a      	str	r2, [r3, #24]
}
9000cd12:	bc30      	pop	{r4, r5}
9000cd14:	4770      	bx	lr
9000cd16:	bf00      	nop

9000cd18 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000cd18:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cd1a:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000cd1e:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cd20:	6900      	ldr	r0, [r0, #16]
9000cd22:	4323      	orrs	r3, r4
9000cd24:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000cd28:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000cd2c:	4c05      	ldr	r4, [pc, #20]	; (9000cd44 <FMC_SDRAM_SendCommand+0x2c>)
9000cd2e:	3901      	subs	r1, #1
9000cd30:	4004      	ands	r4, r0
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000cd32:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cd34:	4323      	orrs	r3, r4
}
9000cd36:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000cd3a:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000cd3e:	6113      	str	r3, [r2, #16]
}
9000cd40:	4770      	bx	lr
9000cd42:	bf00      	nop
9000cd44:	ffc00000 	.word	0xffc00000

9000cd48 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000cd48:	4602      	mov	r2, r0
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cd4a:	4b05      	ldr	r3, [pc, #20]	; (9000cd60 <FMC_SDRAM_ProgramRefreshRate+0x18>)

  return HAL_OK;
}
9000cd4c:	2000      	movs	r0, #0
{
9000cd4e:	b410      	push	{r4}
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cd50:	6954      	ldr	r4, [r2, #20]
9000cd52:	4023      	ands	r3, r4
}
9000cd54:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000cd58:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
9000cd5c:	6151      	str	r1, [r2, #20]
}
9000cd5e:	4770      	bx	lr
9000cd60:	ffffc001 	.word	0xffffc001

9000cd64 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000cd64:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000cd66:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000cd6a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000cd6c:	f002 fd08 	bl	9000f780 <xTaskGetSchedulerState>
9000cd70:	2801      	cmp	r0, #1
9000cd72:	d100      	bne.n	9000cd76 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000cd74:	bd08      	pop	{r3, pc}
9000cd76:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000cd7a:	f000 bce3 	b.w	9000d744 <xPortSysTickHandler>
9000cd7e:	bf00      	nop

9000cd80 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000cd80:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000cd84:	b92b      	cbnz	r3, 9000cd92 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000cd86:	4b06      	ldr	r3, [pc, #24]	; (9000cda0 <osKernelInitialize+0x20>)
9000cd88:	6818      	ldr	r0, [r3, #0]
9000cd8a:	b928      	cbnz	r0, 9000cd98 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000cd8c:	2201      	movs	r2, #1
9000cd8e:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000cd90:	4770      	bx	lr
    stat = osErrorISR;
9000cd92:	f06f 0005 	mvn.w	r0, #5
9000cd96:	4770      	bx	lr
    } else {
      stat = osError;
9000cd98:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000cd9c:	4770      	bx	lr
9000cd9e:	bf00      	nop
9000cda0:	2400a3dc 	.word	0x2400a3dc

9000cda4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000cda4:	b510      	push	{r4, lr}
9000cda6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000cdaa:	b974      	cbnz	r4, 9000cdca <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000cdac:	4b08      	ldr	r3, [pc, #32]	; (9000cdd0 <osKernelStart+0x2c>)
9000cdae:	681a      	ldr	r2, [r3, #0]
9000cdb0:	2a01      	cmp	r2, #1
9000cdb2:	d107      	bne.n	9000cdc4 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000cdb4:	4907      	ldr	r1, [pc, #28]	; (9000cdd4 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000cdb6:	2202      	movs	r2, #2
9000cdb8:	77cc      	strb	r4, [r1, #31]
9000cdba:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000cdbc:	f002 fa6e 	bl	9000f29c <vTaskStartScheduler>
      stat = osOK;
9000cdc0:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000cdc2:	bd10      	pop	{r4, pc}
      stat = osError;
9000cdc4:	f04f 30ff 	mov.w	r0, #4294967295
}
9000cdc8:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cdca:	f06f 0005 	mvn.w	r0, #5
}
9000cdce:	bd10      	pop	{r4, pc}
9000cdd0:	2400a3dc 	.word	0x2400a3dc
9000cdd4:	e000ed00 	.word	0xe000ed00

9000cdd8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cdd8:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000cdda:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000cddc:	b087      	sub	sp, #28
9000cdde:	4614      	mov	r4, r2
  hTask = NULL;
9000cde0:	9505      	str	r5, [sp, #20]
9000cde2:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000cde6:	bb5a      	cbnz	r2, 9000ce40 <osThreadNew+0x68>
9000cde8:	4606      	mov	r6, r0
9000cdea:	b348      	cbz	r0, 9000ce40 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000cdec:	b1e4      	cbz	r4, 9000ce28 <osThreadNew+0x50>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000cdee:	69a7      	ldr	r7, [r4, #24]
9000cdf0:	bb4f      	cbnz	r7, 9000ce46 <osThreadNew+0x6e>
9000cdf2:	2718      	movs	r7, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000cdf4:	6863      	ldr	r3, [r4, #4]
9000cdf6:	07db      	lsls	r3, r3, #31
9000cdf8:	d422      	bmi.n	9000ce40 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000cdfa:	6963      	ldr	r3, [r4, #20]
9000cdfc:	b33b      	cbz	r3, 9000ce4e <osThreadNew+0x76>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000cdfe:	ea4f 0c93 	mov.w	ip, r3, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000ce02:	68a0      	ldr	r0, [r4, #8]
      if (attr->name != NULL) {
9000ce04:	6825      	ldr	r5, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000ce06:	b338      	cbz	r0, 9000ce58 <osThreadNew+0x80>
9000ce08:	68e2      	ldr	r2, [r4, #12]
9000ce0a:	2a5f      	cmp	r2, #95	; 0x5f
9000ce0c:	d918      	bls.n	9000ce40 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000ce0e:	6924      	ldr	r4, [r4, #16]
9000ce10:	b1b3      	cbz	r3, 9000ce40 <osThreadNew+0x68>
9000ce12:	b1ac      	cbz	r4, 9000ce40 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000ce14:	460b      	mov	r3, r1
9000ce16:	4662      	mov	r2, ip
9000ce18:	4629      	mov	r1, r5
9000ce1a:	9700      	str	r7, [sp, #0]
9000ce1c:	e9cd 4001 	strd	r4, r0, [sp, #4]
9000ce20:	4630      	mov	r0, r6
9000ce22:	f002 f89f 	bl	9000ef64 <xTaskCreateStatic>
9000ce26:	e00c      	b.n	9000ce42 <osThreadNew+0x6a>
9000ce28:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000ce2a:	2718      	movs	r7, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000ce2c:	460b      	mov	r3, r1
9000ce2e:	4621      	mov	r1, r4
9000ce30:	ac05      	add	r4, sp, #20
9000ce32:	4630      	mov	r0, r6
9000ce34:	9700      	str	r7, [sp, #0]
9000ce36:	9401      	str	r4, [sp, #4]
9000ce38:	f002 f93e 	bl	9000f0b8 <xTaskCreate>
9000ce3c:	2801      	cmp	r0, #1
9000ce3e:	d009      	beq.n	9000ce54 <osThreadNew+0x7c>
        return (NULL);
9000ce40:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000ce42:	b007      	add	sp, #28
9000ce44:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000ce46:	1e7a      	subs	r2, r7, #1
9000ce48:	2a37      	cmp	r2, #55	; 0x37
9000ce4a:	d9d3      	bls.n	9000cdf4 <osThreadNew+0x1c>
9000ce4c:	e7f8      	b.n	9000ce40 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
9000ce4e:	f04f 0c80 	mov.w	ip, #128	; 0x80
9000ce52:	e7d6      	b.n	9000ce02 <osThreadNew+0x2a>
  return ((osThreadId_t)hTask);
9000ce54:	9805      	ldr	r0, [sp, #20]
9000ce56:	e7f4      	b.n	9000ce42 <osThreadNew+0x6a>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000ce58:	68e3      	ldr	r3, [r4, #12]
9000ce5a:	2b00      	cmp	r3, #0
9000ce5c:	d1f1      	bne.n	9000ce42 <osThreadNew+0x6a>
9000ce5e:	6923      	ldr	r3, [r4, #16]
9000ce60:	2b00      	cmp	r3, #0
9000ce62:	d1ee      	bne.n	9000ce42 <osThreadNew+0x6a>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000ce64:	fa1f f28c 	uxth.w	r2, ip
9000ce68:	462c      	mov	r4, r5
9000ce6a:	e7df      	b.n	9000ce2c <osThreadNew+0x54>

9000ce6c <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
9000ce6c:	b510      	push	{r4, lr}
9000ce6e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000ce72:	b92c      	cbnz	r4, 9000ce80 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000ce74:	b900      	cbnz	r0, 9000ce78 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000ce76:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
9000ce78:	f002 f9ba 	bl	9000f1f0 <vTaskDelay>
    stat = osOK;
9000ce7c:	4620      	mov	r0, r4
}
9000ce7e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000ce80:	f06f 0005 	mvn.w	r0, #5
}
9000ce84:	bd10      	pop	{r4, pc}
9000ce86:	bf00      	nop

9000ce88 <osMutexNew>:
}

/*---------------------------------------------------------------------------*/
#if (configUSE_OS2_MUTEX == 1)

osMutexId_t osMutexNew (const osMutexAttr_t *attr) {
9000ce88:	b570      	push	{r4, r5, r6, lr}
9000ce8a:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hMutex = NULL;

  if (!IS_IRQ()) {
9000ce8e:	b9db      	cbnz	r3, 9000cec8 <osMutexNew+0x40>
    if (attr != NULL) {
9000ce90:	4604      	mov	r4, r0
9000ce92:	b1e0      	cbz	r0, 9000cece <osMutexNew+0x46>
      type = attr->attr_bits;
9000ce94:	6846      	ldr	r6, [r0, #4]
      rmtx = 1U;
    } else {
      rmtx = 0U;
    }

    if ((type & osMutexRobust) != osMutexRobust) {
9000ce96:	0733      	lsls	r3, r6, #28
9000ce98:	d416      	bmi.n	9000cec8 <osMutexNew+0x40>
      mem = -1;

      if (attr != NULL) {
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000ce9a:	6881      	ldr	r1, [r0, #8]
    if ((type & osMutexRecursive) == osMutexRecursive) {
9000ce9c:	f006 0601 	and.w	r6, r6, #1
        if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cea0:	68c3      	ldr	r3, [r0, #12]
9000cea2:	b181      	cbz	r1, 9000cec6 <osMutexNew+0x3e>
9000cea4:	2b4f      	cmp	r3, #79	; 0x4f
9000cea6:	d90f      	bls.n	9000cec8 <osMutexNew+0x40>
        mem = 0;
      }

      if (mem == 1) {
        #if (configSUPPORT_STATIC_ALLOCATION == 1)
          if (rmtx != 0U) {
9000cea8:	b31e      	cbz	r6, 9000cef2 <osMutexNew+0x6a>
            #if (configUSE_RECURSIVE_MUTEXES == 1)
            hMutex = xSemaphoreCreateRecursiveMutexStatic (attr->cb_mem);
9000ceaa:	2004      	movs	r0, #4
9000ceac:	f001 f85c 	bl	9000df68 <xQueueCreateMutexStatic>
9000ceb0:	4605      	mov	r5, r0
          #endif
        }
      }

      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hMutex != NULL) {
9000ceb2:	b14d      	cbz	r5, 9000cec8 <osMutexNew+0x40>
        if (attr != NULL) {
          name = attr->name;
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hMutex, name);
9000ceb4:	6821      	ldr	r1, [r4, #0]
9000ceb6:	4628      	mov	r0, r5
9000ceb8:	f001 fdb0 	bl	9000ea1c <vQueueAddToRegistry>
      }
      #endif

      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cebc:	b12e      	cbz	r6, 9000ceca <osMutexNew+0x42>
        hMutex = (SemaphoreHandle_t)((uint32_t)hMutex | 1U);
9000cebe:	f045 0501 	orr.w	r5, r5, #1
      }
    }
  }

  return ((osMutexId_t)hMutex);
}
9000cec2:	4628      	mov	r0, r5
9000cec4:	bd70      	pop	{r4, r5, r6, pc}
          if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000cec6:	b163      	cbz	r3, 9000cee2 <osMutexNew+0x5a>
  hMutex = NULL;
9000cec8:	2500      	movs	r5, #0
}
9000ceca:	4628      	mov	r0, r5
9000cecc:	bd70      	pop	{r4, r5, r6, pc}
              hMutex = xSemaphoreCreateMutex ();
9000cece:	2001      	movs	r0, #1
9000ced0:	f001 f8ba 	bl	9000e048 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000ced4:	4605      	mov	r5, r0
9000ced6:	2800      	cmp	r0, #0
9000ced8:	d0f6      	beq.n	9000cec8 <osMutexNew+0x40>
        vQueueAddToRegistry (hMutex, name);
9000ceda:	4621      	mov	r1, r4
9000cedc:	f001 fd9e 	bl	9000ea1c <vQueueAddToRegistry>
      if ((hMutex != NULL) && (rmtx != 0U)) {
9000cee0:	e7f3      	b.n	9000ceca <osMutexNew+0x42>
            if (rmtx != 0U) {
9000cee2:	b15e      	cbz	r6, 9000cefc <osMutexNew+0x74>
              hMutex = xSemaphoreCreateRecursiveMutex ();
9000cee4:	2004      	movs	r0, #4
9000cee6:	f001 f8af 	bl	9000e048 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000ceea:	4605      	mov	r5, r0
9000ceec:	2800      	cmp	r0, #0
9000ceee:	d1e1      	bne.n	9000ceb4 <osMutexNew+0x2c>
9000cef0:	e7ea      	b.n	9000cec8 <osMutexNew+0x40>
            hMutex = xSemaphoreCreateMutexStatic (attr->cb_mem);
9000cef2:	2001      	movs	r0, #1
9000cef4:	f001 f838 	bl	9000df68 <xQueueCreateMutexStatic>
9000cef8:	4605      	mov	r5, r0
9000cefa:	e7da      	b.n	9000ceb2 <osMutexNew+0x2a>
              hMutex = xSemaphoreCreateMutex ();
9000cefc:	2001      	movs	r0, #1
9000cefe:	f001 f8a3 	bl	9000e048 <xQueueCreateMutex>
      if (hMutex != NULL) {
9000cf02:	4605      	mov	r5, r0
9000cf04:	e7d5      	b.n	9000ceb2 <osMutexNew+0x2a>
9000cf06:	bf00      	nop

9000cf08 <osMutexAcquire>:
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
  SemaphoreHandle_t hMutex;
  osStatus_t stat;
  uint32_t rmtx;

  hMutex = (SemaphoreHandle_t)((uint32_t)mutex_id & ~1U);
9000cf08:	f020 0201 	bic.w	r2, r0, #1

  rmtx = (uint32_t)mutex_id & 1U;
9000cf0c:	f000 0301 	and.w	r3, r0, #1
9000cf10:	f3ef 8005 	mrs	r0, IPSR

  stat = osOK;

  if (IS_IRQ()) {
9000cf14:	b9a8      	cbnz	r0, 9000cf42 <osMutexAcquire+0x3a>
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cf16:	b1ba      	cbz	r2, 9000cf48 <osMutexAcquire+0x40>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
      #if (configUSE_RECURSIVE_MUTEXES == 1)
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cf18:	4610      	mov	r0, r2
osStatus_t osMutexAcquire (osMutexId_t mutex_id, uint32_t timeout) {
9000cf1a:	b510      	push	{r4, lr}
9000cf1c:	460c      	mov	r4, r1
    if (rmtx != 0U) {
9000cf1e:	b953      	cbnz	r3, 9000cf36 <osMutexAcquire+0x2e>
        }
      }
      #endif
    }
    else {
      if (xSemaphoreTake (hMutex, timeout) != pdPASS) {
9000cf20:	f001 fb0a 	bl	9000e538 <xQueueSemaphoreTake>
9000cf24:	2801      	cmp	r0, #1
9000cf26:	d00a      	beq.n	9000cf3e <osMutexAcquire+0x36>
          stat = osErrorResource;
9000cf28:	2c00      	cmp	r4, #0
9000cf2a:	bf14      	ite	ne
9000cf2c:	f06f 0001 	mvnne.w	r0, #1
9000cf30:	f06f 0002 	mvneq.w	r0, #2
      }
    }
  }

  return (stat);
}
9000cf34:	bd10      	pop	{r4, pc}
      if (xSemaphoreTakeRecursive (hMutex, timeout) != pdPASS) {
9000cf36:	f001 fc87 	bl	9000e848 <xQueueTakeMutexRecursive>
9000cf3a:	2801      	cmp	r0, #1
9000cf3c:	d1f4      	bne.n	9000cf28 <osMutexAcquire+0x20>
  stat = osOK;
9000cf3e:	2000      	movs	r0, #0
}
9000cf40:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cf42:	f06f 0005 	mvn.w	r0, #5
9000cf46:	4770      	bx	lr
    stat = osErrorParameter;
9000cf48:	f06f 0003 	mvn.w	r0, #3
}
9000cf4c:	4770      	bx	lr
9000cf4e:	bf00      	nop

9000cf50 <osMutexRelease>:
9000cf50:	f3ef 8205 	mrs	r2, IPSR

  rmtx = (uint32_t)mutex_id & 1U;

  stat = osOK;

  if (IS_IRQ()) {
9000cf54:	b9ba      	cbnz	r2, 9000cf86 <osMutexRelease+0x36>
osStatus_t osMutexRelease (osMutexId_t mutex_id) {
9000cf56:	b510      	push	{r4, lr}
9000cf58:	f020 0401 	bic.w	r4, r0, #1
    stat = osErrorISR;
  }
  else if (hMutex == NULL) {
9000cf5c:	b1b4      	cbz	r4, 9000cf8c <osMutexRelease+0x3c>
    stat = osErrorParameter;
  }
  else {
    if (rmtx != 0U) {
9000cf5e:	f000 0301 	and.w	r3, r0, #1
9000cf62:	b943      	cbnz	r3, 9000cf76 <osMutexRelease+0x26>
        stat = osErrorResource;
      }
      #endif
    }
    else {
      if (xSemaphoreGive (hMutex) != pdPASS) {
9000cf64:	461a      	mov	r2, r3
9000cf66:	4619      	mov	r1, r3
9000cf68:	4620      	mov	r0, r4
9000cf6a:	f000 fe7b 	bl	9000dc64 <xQueueGenericSend>
9000cf6e:	2801      	cmp	r0, #1
9000cf70:	d106      	bne.n	9000cf80 <osMutexRelease+0x30>
  stat = osOK;
9000cf72:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000cf74:	bd10      	pop	{r4, pc}
      if (xSemaphoreGiveRecursive (hMutex) != pdPASS) {
9000cf76:	4620      	mov	r0, r4
9000cf78:	f001 f846 	bl	9000e008 <xQueueGiveMutexRecursive>
9000cf7c:	2801      	cmp	r0, #1
9000cf7e:	d0f8      	beq.n	9000cf72 <osMutexRelease+0x22>
        stat = osErrorResource;
9000cf80:	f06f 0002 	mvn.w	r0, #2
}
9000cf84:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000cf86:	f06f 0005 	mvn.w	r0, #5
}
9000cf8a:	4770      	bx	lr
    stat = osErrorParameter;
9000cf8c:	f06f 0003 	mvn.w	r0, #3
}
9000cf90:	bd10      	pop	{r4, pc}
9000cf92:	bf00      	nop

9000cf94 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000cf94:	b5f0      	push	{r4, r5, r6, r7, lr}
9000cf96:	b083      	sub	sp, #12
9000cf98:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000cf9c:	b98e      	cbnz	r6, 9000cfc2 <osSemaphoreNew+0x2e>
9000cf9e:	4605      	mov	r5, r0
9000cfa0:	b178      	cbz	r0, 9000cfc2 <osSemaphoreNew+0x2e>
9000cfa2:	4288      	cmp	r0, r1
9000cfa4:	460f      	mov	r7, r1
9000cfa6:	d30c      	bcc.n	9000cfc2 <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000cfa8:	4614      	mov	r4, r2
9000cfaa:	b182      	cbz	r2, 9000cfce <osSemaphoreNew+0x3a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000cfac:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000cfb0:	b15a      	cbz	r2, 9000cfca <osSemaphoreNew+0x36>
9000cfb2:	2b4f      	cmp	r3, #79	; 0x4f
9000cfb4:	d905      	bls.n	9000cfc2 <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000cfb6:	2801      	cmp	r0, #1
9000cfb8:	d032      	beq.n	9000d020 <osSemaphoreNew+0x8c>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000cfba:	f000 fdab 	bl	9000db14 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000cfbe:	4605      	mov	r5, r0
9000cfc0:	b978      	cbnz	r0, 9000cfe2 <osSemaphoreNew+0x4e>
  hSemaphore = NULL;
9000cfc2:	2500      	movs	r5, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000cfc4:	4628      	mov	r0, r5
9000cfc6:	b003      	add	sp, #12
9000cfc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000cfca:	2b00      	cmp	r3, #0
9000cfcc:	d1f9      	bne.n	9000cfc2 <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000cfce:	2d01      	cmp	r5, #1
9000cfd0:	d00f      	beq.n	9000cff2 <osSemaphoreNew+0x5e>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000cfd2:	4628      	mov	r0, r5
9000cfd4:	4639      	mov	r1, r7
9000cfd6:	f000 fdff 	bl	9000dbd8 <xQueueCreateCountingSemaphore>
9000cfda:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000cfdc:	2d00      	cmp	r5, #0
9000cfde:	d0f0      	beq.n	9000cfc2 <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000cfe0:	b104      	cbz	r4, 9000cfe4 <osSemaphoreNew+0x50>
          name = attr->name;
9000cfe2:	6824      	ldr	r4, [r4, #0]
        vQueueAddToRegistry (hSemaphore, name);
9000cfe4:	4628      	mov	r0, r5
9000cfe6:	4621      	mov	r1, r4
9000cfe8:	f001 fd18 	bl	9000ea1c <vQueueAddToRegistry>
}
9000cfec:	4628      	mov	r0, r5
9000cfee:	b003      	add	sp, #12
9000cff0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000cff2:	4628      	mov	r0, r5
9000cff4:	2203      	movs	r2, #3
9000cff6:	2100      	movs	r1, #0
9000cff8:	f000 fd4a 	bl	9000da90 <xQueueGenericCreate>
9000cffc:	4605      	mov	r5, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000cffe:	2d00      	cmp	r5, #0
9000d000:	d0df      	beq.n	9000cfc2 <osSemaphoreNew+0x2e>
9000d002:	2f00      	cmp	r7, #0
9000d004:	d0ea      	beq.n	9000cfdc <osSemaphoreNew+0x48>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d006:	2300      	movs	r3, #0
9000d008:	4628      	mov	r0, r5
9000d00a:	461a      	mov	r2, r3
9000d00c:	4619      	mov	r1, r3
9000d00e:	f000 fe29 	bl	9000dc64 <xQueueGenericSend>
9000d012:	2801      	cmp	r0, #1
9000d014:	d0e4      	beq.n	9000cfe0 <osSemaphoreNew+0x4c>
            vSemaphoreDelete (hSemaphore);
9000d016:	4628      	mov	r0, r5
            hSemaphore = NULL;
9000d018:	2500      	movs	r5, #0
            vSemaphoreDelete (hSemaphore);
9000d01a:	f001 fcb9 	bl	9000e990 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d01e:	e7d1      	b.n	9000cfc4 <osSemaphoreNew+0x30>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d020:	4613      	mov	r3, r2
9000d022:	2203      	movs	r2, #3
9000d024:	4631      	mov	r1, r6
9000d026:	9200      	str	r2, [sp, #0]
9000d028:	4632      	mov	r2, r6
9000d02a:	f000 fcc5 	bl	9000d9b8 <xQueueGenericCreateStatic>
9000d02e:	4605      	mov	r5, r0
9000d030:	e7e5      	b.n	9000cffe <osSemaphoreNew+0x6a>
9000d032:	bf00      	nop

9000d034 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d034:	b370      	cbz	r0, 9000d094 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d036:	b510      	push	{r4, lr}
9000d038:	460c      	mov	r4, r1
9000d03a:	b082      	sub	sp, #8
9000d03c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d040:	b1c3      	cbz	r3, 9000d074 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
9000d042:	bb21      	cbnz	r1, 9000d08e <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d044:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d046:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d048:	f001 fc1e 	bl	9000e888 <xQueueReceiveFromISR>
9000d04c:	2801      	cmp	r0, #1
9000d04e:	d11a      	bne.n	9000d086 <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d050:	9b01      	ldr	r3, [sp, #4]
9000d052:	b913      	cbnz	r3, 9000d05a <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d054:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d056:	b002      	add	sp, #8
9000d058:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d05a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d05e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d062:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d066:	f3bf 8f4f 	dsb	sy
9000d06a:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d06e:	4620      	mov	r0, r4
}
9000d070:	b002      	add	sp, #8
9000d072:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d074:	f001 fa60 	bl	9000e538 <xQueueSemaphoreTake>
9000d078:	2801      	cmp	r0, #1
9000d07a:	d0eb      	beq.n	9000d054 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d07c:	b11c      	cbz	r4, 9000d086 <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
9000d07e:	f06f 0001 	mvn.w	r0, #1
}
9000d082:	b002      	add	sp, #8
9000d084:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d086:	f06f 0002 	mvn.w	r0, #2
}
9000d08a:	b002      	add	sp, #8
9000d08c:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d08e:	f06f 0003 	mvn.w	r0, #3
9000d092:	e7e0      	b.n	9000d056 <osSemaphoreAcquire+0x22>
9000d094:	f06f 0003 	mvn.w	r0, #3
}
9000d098:	4770      	bx	lr
9000d09a:	bf00      	nop

9000d09c <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d09c:	b330      	cbz	r0, 9000d0ec <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d09e:	b510      	push	{r4, lr}
9000d0a0:	b082      	sub	sp, #8
9000d0a2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d0a6:	b1ab      	cbz	r3, 9000d0d4 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
9000d0a8:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d0aa:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d0ac:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d0ae:	f001 f86d 	bl	9000e18c <xQueueGiveFromISR>
9000d0b2:	2801      	cmp	r0, #1
9000d0b4:	d117      	bne.n	9000d0e6 <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d0b6:	9b01      	ldr	r3, [sp, #4]
9000d0b8:	b193      	cbz	r3, 9000d0e0 <osSemaphoreRelease+0x44>
9000d0ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d0be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d0c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d0c6:	f3bf 8f4f 	dsb	sy
9000d0ca:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d0ce:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d0d0:	b002      	add	sp, #8
9000d0d2:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d0d4:	461a      	mov	r2, r3
9000d0d6:	4619      	mov	r1, r3
9000d0d8:	f000 fdc4 	bl	9000dc64 <xQueueGenericSend>
9000d0dc:	2801      	cmp	r0, #1
9000d0de:	d102      	bne.n	9000d0e6 <osSemaphoreRelease+0x4a>
  stat = osOK;
9000d0e0:	2000      	movs	r0, #0
}
9000d0e2:	b002      	add	sp, #8
9000d0e4:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
9000d0e6:	f06f 0002 	mvn.w	r0, #2
9000d0ea:	e7fa      	b.n	9000d0e2 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
9000d0ec:	f06f 0003 	mvn.w	r0, #3
}
9000d0f0:	4770      	bx	lr
9000d0f2:	bf00      	nop

9000d0f4 <osSemaphoreGetCount>:

uint32_t osSemaphoreGetCount (osSemaphoreId_t semaphore_id) {
  SemaphoreHandle_t hSemaphore = (SemaphoreHandle_t)semaphore_id;
  uint32_t count;

  if (hSemaphore == NULL) {
9000d0f4:	b130      	cbz	r0, 9000d104 <osSemaphoreGetCount+0x10>
9000d0f6:	f3ef 8305 	mrs	r3, IPSR
    count = 0U;
  }
  else if (IS_IRQ()) {
9000d0fa:	b10b      	cbz	r3, 9000d100 <osSemaphoreGetCount+0xc>
    count = uxQueueMessagesWaitingFromISR (hSemaphore);
9000d0fc:	f001 bc3a 	b.w	9000e974 <uxQueueMessagesWaitingFromISR>
  } else {
    count = (uint32_t)uxSemaphoreGetCount (hSemaphore);
9000d100:	f001 bc22 	b.w	9000e948 <uxQueueMessagesWaiting>
  }

  return (count);
}
9000d104:	4770      	bx	lr
9000d106:	bf00      	nop

9000d108 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d108:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d10a:	b083      	sub	sp, #12
9000d10c:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d110:	b987      	cbnz	r7, 9000d134 <osMessageQueueNew+0x2c>
9000d112:	4605      	mov	r5, r0
9000d114:	b170      	cbz	r0, 9000d134 <osMessageQueueNew+0x2c>
9000d116:	b169      	cbz	r1, 9000d134 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d118:	4614      	mov	r4, r2
9000d11a:	b17a      	cbz	r2, 9000d13c <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d11c:	6893      	ldr	r3, [r2, #8]
9000d11e:	b1cb      	cbz	r3, 9000d154 <osMessageQueueNew+0x4c>
9000d120:	68d2      	ldr	r2, [r2, #12]
9000d122:	2a4f      	cmp	r2, #79	; 0x4f
9000d124:	d906      	bls.n	9000d134 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d126:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d128:	b122      	cbz	r2, 9000d134 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d12a:	fb01 f505 	mul.w	r5, r1, r5
9000d12e:	6966      	ldr	r6, [r4, #20]
9000d130:	42ae      	cmp	r6, r5
9000d132:	d21f      	bcs.n	9000d174 <osMessageQueueNew+0x6c>
  hQueue = NULL;
9000d134:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d136:	4628      	mov	r0, r5
9000d138:	b003      	add	sp, #12
9000d13a:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d13c:	f000 fca8 	bl	9000da90 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d140:	4605      	mov	r5, r0
9000d142:	2800      	cmp	r0, #0
9000d144:	d0f6      	beq.n	9000d134 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d146:	4628      	mov	r0, r5
9000d148:	4621      	mov	r1, r4
9000d14a:	f001 fc67 	bl	9000ea1c <vQueueAddToRegistry>
}
9000d14e:	4628      	mov	r0, r5
9000d150:	b003      	add	sp, #12
9000d152:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d154:	68d3      	ldr	r3, [r2, #12]
9000d156:	2b00      	cmp	r3, #0
9000d158:	d1ec      	bne.n	9000d134 <osMessageQueueNew+0x2c>
9000d15a:	6913      	ldr	r3, [r2, #16]
9000d15c:	2b00      	cmp	r3, #0
9000d15e:	d1e9      	bne.n	9000d134 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d160:	6952      	ldr	r2, [r2, #20]
9000d162:	2a00      	cmp	r2, #0
9000d164:	d1e6      	bne.n	9000d134 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d166:	f000 fc93 	bl	9000da90 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d16a:	4605      	mov	r5, r0
9000d16c:	2800      	cmp	r0, #0
9000d16e:	d0e1      	beq.n	9000d134 <osMessageQueueNew+0x2c>
        name = attr->name;
9000d170:	6824      	ldr	r4, [r4, #0]
9000d172:	e7e8      	b.n	9000d146 <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d174:	9700      	str	r7, [sp, #0]
9000d176:	f000 fc1f 	bl	9000d9b8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d17a:	4605      	mov	r5, r0
9000d17c:	2800      	cmp	r0, #0
9000d17e:	d1f7      	bne.n	9000d170 <osMessageQueueNew+0x68>
9000d180:	e7d8      	b.n	9000d134 <osMessageQueueNew+0x2c>
9000d182:	bf00      	nop

9000d184 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d184:	b530      	push	{r4, r5, lr}
9000d186:	461c      	mov	r4, r3
9000d188:	b083      	sub	sp, #12
9000d18a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d18e:	b30b      	cbz	r3, 9000d1d4 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d190:	3c00      	subs	r4, #0
9000d192:	bf18      	it	ne
9000d194:	2401      	movne	r4, #1
9000d196:	2900      	cmp	r1, #0
9000d198:	bf08      	it	eq
9000d19a:	f044 0401 	orreq.w	r4, r4, #1
9000d19e:	bb7c      	cbnz	r4, 9000d200 <osMessageQueuePut+0x7c>
9000d1a0:	fab0 f480 	clz	r4, r0
9000d1a4:	0964      	lsrs	r4, r4, #5
9000d1a6:	b358      	cbz	r0, 9000d200 <osMessageQueuePut+0x7c>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d1a8:	4623      	mov	r3, r4
9000d1aa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d1ac:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d1ae:	f000 ff83 	bl	9000e0b8 <xQueueGenericSendFromISR>
9000d1b2:	2801      	cmp	r0, #1
9000d1b4:	d120      	bne.n	9000d1f8 <osMessageQueuePut+0x74>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d1b6:	9b01      	ldr	r3, [sp, #4]
9000d1b8:	b1db      	cbz	r3, 9000d1f2 <osMessageQueuePut+0x6e>
9000d1ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d1be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d1c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d1c6:	f3bf 8f4f 	dsb	sy
9000d1ca:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d1ce:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d1d0:	b003      	add	sp, #12
9000d1d2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d1d4:	b1a0      	cbz	r0, 9000d200 <osMessageQueuePut+0x7c>
9000d1d6:	fab1 f381 	clz	r3, r1
9000d1da:	095b      	lsrs	r3, r3, #5
9000d1dc:	b181      	cbz	r1, 9000d200 <osMessageQueuePut+0x7c>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d1de:	4622      	mov	r2, r4
9000d1e0:	f000 fd40 	bl	9000dc64 <xQueueGenericSend>
9000d1e4:	2801      	cmp	r0, #1
9000d1e6:	d004      	beq.n	9000d1f2 <osMessageQueuePut+0x6e>
        if (timeout != 0U) {
9000d1e8:	b134      	cbz	r4, 9000d1f8 <osMessageQueuePut+0x74>
          stat = osErrorTimeout;
9000d1ea:	f06f 0001 	mvn.w	r0, #1
}
9000d1ee:	b003      	add	sp, #12
9000d1f0:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d1f2:	2000      	movs	r0, #0
}
9000d1f4:	b003      	add	sp, #12
9000d1f6:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d1f8:	f06f 0002 	mvn.w	r0, #2
}
9000d1fc:	b003      	add	sp, #12
9000d1fe:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d200:	f06f 0003 	mvn.w	r0, #3
9000d204:	e7e4      	b.n	9000d1d0 <osMessageQueuePut+0x4c>
9000d206:	bf00      	nop

9000d208 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d208:	b530      	push	{r4, r5, lr}
9000d20a:	461c      	mov	r4, r3
9000d20c:	b083      	sub	sp, #12
9000d20e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
9000d212:	b303      	cbz	r3, 9000d256 <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d214:	3c00      	subs	r4, #0
9000d216:	bf18      	it	ne
9000d218:	2401      	movne	r4, #1
9000d21a:	2900      	cmp	r1, #0
9000d21c:	bf08      	it	eq
9000d21e:	f044 0401 	orreq.w	r4, r4, #1
9000d222:	bb5c      	cbnz	r4, 9000d27c <osMessageQueueGet+0x74>
9000d224:	fab0 f480 	clz	r4, r0
9000d228:	0964      	lsrs	r4, r4, #5
9000d22a:	b338      	cbz	r0, 9000d27c <osMessageQueueGet+0x74>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d22c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d22e:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d230:	f001 fb2a 	bl	9000e888 <xQueueReceiveFromISR>
9000d234:	2801      	cmp	r0, #1
9000d236:	d11d      	bne.n	9000d274 <osMessageQueueGet+0x6c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d238:	9b01      	ldr	r3, [sp, #4]
9000d23a:	b1c3      	cbz	r3, 9000d26e <osMessageQueueGet+0x66>
9000d23c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d240:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d244:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000d248:	f3bf 8f4f 	dsb	sy
9000d24c:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d250:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
9000d252:	b003      	add	sp, #12
9000d254:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d256:	b188      	cbz	r0, 9000d27c <osMessageQueueGet+0x74>
9000d258:	b181      	cbz	r1, 9000d27c <osMessageQueueGet+0x74>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d25a:	4622      	mov	r2, r4
9000d25c:	f000 ffee 	bl	9000e23c <xQueueReceive>
9000d260:	2801      	cmp	r0, #1
9000d262:	d004      	beq.n	9000d26e <osMessageQueueGet+0x66>
        if (timeout != 0U) {
9000d264:	b134      	cbz	r4, 9000d274 <osMessageQueueGet+0x6c>
          stat = osErrorTimeout;
9000d266:	f06f 0001 	mvn.w	r0, #1
}
9000d26a:	b003      	add	sp, #12
9000d26c:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
9000d26e:	2000      	movs	r0, #0
}
9000d270:	b003      	add	sp, #12
9000d272:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
9000d274:	f06f 0002 	mvn.w	r0, #2
}
9000d278:	b003      	add	sp, #12
9000d27a:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
9000d27c:	f06f 0003 	mvn.w	r0, #3
9000d280:	e7e7      	b.n	9000d252 <osMessageQueueGet+0x4a>
9000d282:	bf00      	nop

9000d284 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d284:	4b04      	ldr	r3, [pc, #16]	; (9000d298 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d286:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d288:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d28a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d28c:	4c03      	ldr	r4, [pc, #12]	; (9000d29c <vApplicationGetIdleTaskMemory+0x18>)
9000d28e:	600c      	str	r4, [r1, #0]
}
9000d290:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d294:	6013      	str	r3, [r2, #0]
}
9000d296:	4770      	bx	lr
9000d298:	2400a37c 	.word	0x2400a37c
9000d29c:	2400a17c 	.word	0x2400a17c

9000d2a0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d2a0:	4b05      	ldr	r3, [pc, #20]	; (9000d2b8 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d2a2:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d2a4:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d2a6:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d2aa:	4c04      	ldr	r4, [pc, #16]	; (9000d2bc <vApplicationGetTimerTaskMemory+0x1c>)
9000d2ac:	600c      	str	r4, [r1, #0]
}
9000d2ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d2b2:	6013      	str	r3, [r2, #0]
}
9000d2b4:	4770      	bx	lr
9000d2b6:	bf00      	nop
9000d2b8:	2400a7e0 	.word	0x2400a7e0
9000d2bc:	2400a3e0 	.word	0x2400a3e0

9000d2c0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d2c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000d2c4:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d2c6:	f002 f885 	bl	9000f3d4 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d2ca:	4a54      	ldr	r2, [pc, #336]	; (9000d41c <pvPortMalloc+0x15c>)
9000d2cc:	6816      	ldr	r6, [r2, #0]
9000d2ce:	2e00      	cmp	r6, #0
9000d2d0:	d06f      	beq.n	9000d3b2 <pvPortMalloc+0xf2>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d2d2:	4b53      	ldr	r3, [pc, #332]	; (9000d420 <pvPortMalloc+0x160>)
9000d2d4:	681f      	ldr	r7, [r3, #0]
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d2d6:	423d      	tst	r5, r7
9000d2d8:	d12e      	bne.n	9000d338 <pvPortMalloc+0x78>
9000d2da:	b36d      	cbz	r5, 9000d338 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
9000d2dc:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d2e0:	076d      	lsls	r5, r5, #29
9000d2e2:	d002      	beq.n	9000d2ea <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d2e4:	f024 0407 	bic.w	r4, r4, #7
9000d2e8:	3408      	adds	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d2ea:	b32c      	cbz	r4, 9000d338 <pvPortMalloc+0x78>
9000d2ec:	f8df c148 	ldr.w	ip, [pc, #328]	; 9000d438 <pvPortMalloc+0x178>
9000d2f0:	f8dc 5000 	ldr.w	r5, [ip]
9000d2f4:	42a5      	cmp	r5, r4
9000d2f6:	d31f      	bcc.n	9000d338 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d2f8:	484a      	ldr	r0, [pc, #296]	; (9000d424 <pvPortMalloc+0x164>)
9000d2fa:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d2fc:	e003      	b.n	9000d306 <pvPortMalloc+0x46>
9000d2fe:	681a      	ldr	r2, [r3, #0]
9000d300:	b122      	cbz	r2, 9000d30c <pvPortMalloc+0x4c>
9000d302:	4618      	mov	r0, r3
9000d304:	4613      	mov	r3, r2
9000d306:	6859      	ldr	r1, [r3, #4]
9000d308:	42a1      	cmp	r1, r4
9000d30a:	d3f8      	bcc.n	9000d2fe <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d30c:	42b3      	cmp	r3, r6
9000d30e:	d013      	beq.n	9000d338 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d310:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d312:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d314:	f858 eb08 	ldr.w	lr, [r8], #8
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d318:	2a10      	cmp	r2, #16
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d31a:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d31e:	d929      	bls.n	9000d374 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d320:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d322:	0748      	lsls	r0, r1, #29
9000d324:	d00f      	beq.n	9000d346 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d326:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d32a:	f383 8811 	msr	BASEPRI, r3
9000d32e:	f3bf 8f6f 	isb	sy
9000d332:	f3bf 8f4f 	dsb	sy
9000d336:	e7fe      	b.n	9000d336 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d338:	f04f 0800 	mov.w	r8, #0
9000d33c:	f002 f852 	bl	9000f3e4 <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d340:	4640      	mov	r0, r8
9000d342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d346:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d348:	4a36      	ldr	r2, [pc, #216]	; (9000d424 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
9000d34a:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d34c:	4614      	mov	r4, r2
9000d34e:	6812      	ldr	r2, [r2, #0]
9000d350:	4291      	cmp	r1, r2
9000d352:	d8fb      	bhi.n	9000d34c <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d354:	6860      	ldr	r0, [r4, #4]
9000d356:	eb04 0e00 	add.w	lr, r4, r0
9000d35a:	4571      	cmp	r1, lr
9000d35c:	d04a      	beq.n	9000d3f4 <pvPortMalloc+0x134>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d35e:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d362:	eb01 000e 	add.w	r0, r1, lr
9000d366:	4282      	cmp	r2, r0
9000d368:	d050      	beq.n	9000d40c <pvPortMalloc+0x14c>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d36a:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d36c:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d36e:	bf18      	it	ne
9000d370:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d372:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d374:	4a2c      	ldr	r2, [pc, #176]	; (9000d428 <pvPortMalloc+0x168>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d376:	1a6d      	subs	r5, r5, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d378:	4339      	orrs	r1, r7
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d37a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d37c:	f8cc 5000 	str.w	r5, [ip]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d380:	4285      	cmp	r5, r0
					pxBlock->pxNextFreeBlock = NULL;
9000d382:	f04f 0000 	mov.w	r0, #0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d386:	bf38      	it	cc
9000d388:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
9000d38a:	4a28      	ldr	r2, [pc, #160]	; (9000d42c <pvPortMalloc+0x16c>)
					pxBlock->pxNextFreeBlock = NULL;
9000d38c:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
9000d390:	6813      	ldr	r3, [r2, #0]
9000d392:	3301      	adds	r3, #1
9000d394:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
9000d396:	f002 f825 	bl	9000f3e4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d39a:	f018 0f07 	tst.w	r8, #7
9000d39e:	d0cf      	beq.n	9000d340 <pvPortMalloc+0x80>
9000d3a0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d3a4:	f383 8811 	msr	BASEPRI, r3
9000d3a8:	f3bf 8f6f 	isb	sy
9000d3ac:	f3bf 8f4f 	dsb	sy
9000d3b0:	e7fe      	b.n	9000d3b0 <pvPortMalloc+0xf0>
	uxAddress = ( size_t ) ucHeap;
9000d3b2:	4b1f      	ldr	r3, [pc, #124]	; (9000d430 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d3b4:	075e      	lsls	r6, r3, #29
9000d3b6:	d117      	bne.n	9000d3e8 <pvPortMalloc+0x128>
9000d3b8:	4e1e      	ldr	r6, [pc, #120]	; (9000d434 <pvPortMalloc+0x174>)
9000d3ba:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
9000d3bc:	3e08      	subs	r6, #8
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d3be:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d3c2:	4818      	ldr	r0, [pc, #96]	; (9000d424 <pvPortMalloc+0x164>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d3c4:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
9000d3c8:	6016      	str	r6, [r2, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d3ca:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d3cc:	4a16      	ldr	r2, [pc, #88]	; (9000d428 <pvPortMalloc+0x168>)
9000d3ce:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d3d0:	4a19      	ldr	r2, [pc, #100]	; (9000d438 <pvPortMalloc+0x178>)
9000d3d2:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d3d4:	4a12      	ldr	r2, [pc, #72]	; (9000d420 <pvPortMalloc+0x160>)
9000d3d6:	6017      	str	r7, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d3d8:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d3da:	e9c0 1200 	strd	r1, r2, [r0]
	pxEnd->pxNextFreeBlock = NULL;
9000d3de:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d3e2:	e9c1 6300 	strd	r6, r3, [r1]
}
9000d3e6:	e776      	b.n	9000d2d6 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d3e8:	3307      	adds	r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
9000d3ea:	4e12      	ldr	r6, [pc, #72]	; (9000d434 <pvPortMalloc+0x174>)
	pucAlignedHeap = ( uint8_t * ) uxAddress;
9000d3ec:	f023 0107 	bic.w	r1, r3, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d3f0:	460b      	mov	r3, r1
9000d3f2:	e7e3      	b.n	9000d3bc <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d3f4:	6849      	ldr	r1, [r1, #4]
9000d3f6:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d3fa:	eb04 010e 	add.w	r1, r4, lr
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d3fe:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d402:	428a      	cmp	r2, r1
9000d404:	d001      	beq.n	9000d40a <pvPortMalloc+0x14a>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d406:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
9000d408:	e7b3      	b.n	9000d372 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d40a:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d40c:	42b2      	cmp	r2, r6
9000d40e:	d0ac      	beq.n	9000d36a <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d410:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d412:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d414:	4470      	add	r0, lr
9000d416:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d418:	e7a7      	b.n	9000d36a <pvPortMalloc+0xaa>
9000d41a:	bf00      	nop
9000d41c:	2400a840 	.word	0x2400a840
9000d420:	24022ee4 	.word	0x24022ee4
9000d424:	24022ef8 	.word	0x24022ef8
9000d428:	24022eec 	.word	0x24022eec
9000d42c:	24022ef0 	.word	0x24022ef0
9000d430:	2400a844 	.word	0x2400a844
9000d434:	24022ee4 	.word	0x24022ee4
9000d438:	24022ee8 	.word	0x24022ee8

9000d43c <vPortFree>:
	if( pv != NULL )
9000d43c:	b1d0      	cbz	r0, 9000d474 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d43e:	4a2c      	ldr	r2, [pc, #176]	; (9000d4f0 <vPortFree+0xb4>)
9000d440:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d444:	6812      	ldr	r2, [r2, #0]
9000d446:	4213      	tst	r3, r2
9000d448:	d00b      	beq.n	9000d462 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d44a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d44e:	b191      	cbz	r1, 9000d476 <vPortFree+0x3a>
9000d450:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d454:	f383 8811 	msr	BASEPRI, r3
9000d458:	f3bf 8f6f 	isb	sy
9000d45c:	f3bf 8f4f 	dsb	sy
9000d460:	e7fe      	b.n	9000d460 <vPortFree+0x24>
9000d462:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d466:	f383 8811 	msr	BASEPRI, r3
9000d46a:	f3bf 8f6f 	isb	sy
9000d46e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d472:	e7fe      	b.n	9000d472 <vPortFree+0x36>
9000d474:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d476:	ea23 0302 	bic.w	r3, r3, r2
{
9000d47a:	b530      	push	{r4, r5, lr}
9000d47c:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d47e:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d482:	f1a0 0408 	sub.w	r4, r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d486:	4d1b      	ldr	r5, [pc, #108]	; (9000d4f4 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d488:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d48a:	f001 ffa3 	bl	9000f3d4 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d48e:	9801      	ldr	r0, [sp, #4]
9000d490:	682a      	ldr	r2, [r5, #0]
9000d492:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d496:	4b18      	ldr	r3, [pc, #96]	; (9000d4f8 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d498:	440a      	add	r2, r1
9000d49a:	602a      	str	r2, [r5, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d49c:	461a      	mov	r2, r3
9000d49e:	681b      	ldr	r3, [r3, #0]
9000d4a0:	429c      	cmp	r4, r3
9000d4a2:	d8fb      	bhi.n	9000d49c <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d4a4:	6850      	ldr	r0, [r2, #4]
9000d4a6:	eb02 0c00 	add.w	ip, r2, r0
9000d4aa:	4564      	cmp	r4, ip
9000d4ac:	d00f      	beq.n	9000d4ce <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4ae:	1860      	adds	r0, r4, r1
9000d4b0:	4283      	cmp	r3, r0
9000d4b2:	d014      	beq.n	9000d4de <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
9000d4b4:	42a2      	cmp	r2, r4
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4b6:	6023      	str	r3, [r4, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d4b8:	bf18      	it	ne
9000d4ba:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d4bc:	4a0f      	ldr	r2, [pc, #60]	; (9000d4fc <vPortFree+0xc0>)
9000d4be:	6813      	ldr	r3, [r2, #0]
9000d4c0:	3301      	adds	r3, #1
9000d4c2:	6013      	str	r3, [r2, #0]
}
9000d4c4:	b003      	add	sp, #12
9000d4c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d4ca:	f001 bf8b 	b.w	9000f3e4 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4ce:	4401      	add	r1, r0
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4d0:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d4d2:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4d4:	4283      	cmp	r3, r0
9000d4d6:	d001      	beq.n	9000d4dc <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4d8:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
9000d4da:	e7ef      	b.n	9000d4bc <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d4dc:	4614      	mov	r4, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d4de:	4808      	ldr	r0, [pc, #32]	; (9000d500 <vPortFree+0xc4>)
9000d4e0:	6800      	ldr	r0, [r0, #0]
9000d4e2:	4283      	cmp	r3, r0
9000d4e4:	d0e6      	beq.n	9000d4b4 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4e6:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d4ea:	4401      	add	r1, r0
9000d4ec:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d4ee:	e7e1      	b.n	9000d4b4 <vPortFree+0x78>
9000d4f0:	24022ee4 	.word	0x24022ee4
9000d4f4:	24022ee8 	.word	0x24022ee8
9000d4f8:	24022ef8 	.word	0x24022ef8
9000d4fc:	24022ef4 	.word	0x24022ef4
9000d500:	2400a840 	.word	0x2400a840

9000d504 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d504:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d508:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d50c:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d50e:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d510:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d512:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d514:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d518:	4770      	bx	lr
9000d51a:	bf00      	nop

9000d51c <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d51c:	2300      	movs	r3, #0
9000d51e:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d520:	4770      	bx	lr
9000d522:	bf00      	nop

9000d524 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
9000d524:	6843      	ldr	r3, [r0, #4]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d526:	6802      	ldr	r2, [r0, #0]
{
9000d528:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d52a:	689c      	ldr	r4, [r3, #8]
	( pxList->uxNumberOfItems )++;
9000d52c:	3201      	adds	r2, #1
	pxNewListItem->pxNext = pxIndex;
9000d52e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d530:	608c      	str	r4, [r1, #8]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d532:	689c      	ldr	r4, [r3, #8]
9000d534:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d536:	6099      	str	r1, [r3, #8]
}
9000d538:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d53c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d53e:	6002      	str	r2, [r0, #0]
}
9000d540:	4770      	bx	lr
9000d542:	bf00      	nop

9000d544 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d544:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d546:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d548:	1c6b      	adds	r3, r5, #1
9000d54a:	d010      	beq.n	9000d56e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d54c:	f100 0308 	add.w	r3, r0, #8
9000d550:	461c      	mov	r4, r3
9000d552:	685b      	ldr	r3, [r3, #4]
9000d554:	681a      	ldr	r2, [r3, #0]
9000d556:	42aa      	cmp	r2, r5
9000d558:	d9fa      	bls.n	9000d550 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d55a:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d55c:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d55e:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d560:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d562:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d564:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d566:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d568:	6002      	str	r2, [r0, #0]
}
9000d56a:	bc30      	pop	{r4, r5}
9000d56c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d56e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d570:	6863      	ldr	r3, [r4, #4]
9000d572:	e7f2      	b.n	9000d55a <vListInsert+0x16>

9000d574 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d574:	6903      	ldr	r3, [r0, #16]
{
9000d576:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d578:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d57a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d57e:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d580:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d584:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d586:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d588:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d58c:	bf08      	it	eq
9000d58e:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d590:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d592:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d594:	3a01      	subs	r2, #1
9000d596:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d598:	6818      	ldr	r0, [r3, #0]
}
9000d59a:	4770      	bx	lr

9000d59c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d59c:	4808      	ldr	r0, [pc, #32]	; (9000d5c0 <prvPortStartFirstTask+0x24>)
9000d59e:	6800      	ldr	r0, [r0, #0]
9000d5a0:	6800      	ldr	r0, [r0, #0]
9000d5a2:	f380 8808 	msr	MSP, r0
9000d5a6:	f04f 0000 	mov.w	r0, #0
9000d5aa:	f380 8814 	msr	CONTROL, r0
9000d5ae:	b662      	cpsie	i
9000d5b0:	b661      	cpsie	f
9000d5b2:	f3bf 8f4f 	dsb	sy
9000d5b6:	f3bf 8f6f 	isb	sy
9000d5ba:	df00      	svc	0
9000d5bc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d5be:	0000      	.short	0x0000
9000d5c0:	e000ed08 	.word	0xe000ed08

9000d5c4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d5c4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 9000d5d4 <vPortEnableVFP+0x10>
9000d5c8:	6801      	ldr	r1, [r0, #0]
9000d5ca:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
9000d5ce:	6001      	str	r1, [r0, #0]
9000d5d0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d5d2:	0000      	.short	0x0000
9000d5d4:	e000ed88 	.word	0xe000ed88

9000d5d8 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d5d8:	4b0e      	ldr	r3, [pc, #56]	; (9000d614 <prvTaskExitError+0x3c>)
{
9000d5da:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d5dc:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d5de:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d5e0:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d5e2:	3301      	adds	r3, #1
9000d5e4:	d008      	beq.n	9000d5f8 <prvTaskExitError+0x20>
9000d5e6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5ea:	f383 8811 	msr	BASEPRI, r3
9000d5ee:	f3bf 8f6f 	isb	sy
9000d5f2:	f3bf 8f4f 	dsb	sy
9000d5f6:	e7fe      	b.n	9000d5f6 <prvTaskExitError+0x1e>
9000d5f8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d5fc:	f383 8811 	msr	BASEPRI, r3
9000d600:	f3bf 8f6f 	isb	sy
9000d604:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d608:	9b01      	ldr	r3, [sp, #4]
9000d60a:	2b00      	cmp	r3, #0
9000d60c:	d0fc      	beq.n	9000d608 <prvTaskExitError+0x30>
}
9000d60e:	b002      	add	sp, #8
9000d610:	4770      	bx	lr
9000d612:	bf00      	nop
9000d614:	24000070 	.word	0x24000070

9000d618 <pxPortInitialiseStack>:
{
9000d618:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d61a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d61e:	4809      	ldr	r0, [pc, #36]	; (9000d644 <pxPortInitialiseStack+0x2c>)
{
9000d620:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d622:	f04f 7480 	mov.w	r4, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d626:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d62a:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d62e:	f1a3 0044 	sub.w	r0, r3, #68	; 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d632:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d636:	f06f 0102 	mvn.w	r1, #2
}
9000d63a:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d63e:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d642:	4770      	bx	lr
9000d644:	9000d5d9 	.word	0x9000d5d9
	...

9000d650 <SVC_Handler>:
	__asm volatile (
9000d650:	4b07      	ldr	r3, [pc, #28]	; (9000d670 <pxCurrentTCBConst2>)
9000d652:	6819      	ldr	r1, [r3, #0]
9000d654:	6808      	ldr	r0, [r1, #0]
9000d656:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d65a:	f380 8809 	msr	PSP, r0
9000d65e:	f3bf 8f6f 	isb	sy
9000d662:	f04f 0000 	mov.w	r0, #0
9000d666:	f380 8811 	msr	BASEPRI, r0
9000d66a:	4770      	bx	lr
9000d66c:	f3af 8000 	nop.w

9000d670 <pxCurrentTCBConst2>:
9000d670:	24022f48 	.word	0x24022f48

9000d674 <vPortEnterCritical>:
9000d674:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d678:	f383 8811 	msr	BASEPRI, r3
9000d67c:	f3bf 8f6f 	isb	sy
9000d680:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d684:	4a0b      	ldr	r2, [pc, #44]	; (9000d6b4 <vPortEnterCritical+0x40>)
9000d686:	6813      	ldr	r3, [r2, #0]
9000d688:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d68a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d68c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d68e:	d000      	beq.n	9000d692 <vPortEnterCritical+0x1e>
}
9000d690:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d692:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d696:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
9000d69a:	b2db      	uxtb	r3, r3
9000d69c:	2b00      	cmp	r3, #0
9000d69e:	d0f7      	beq.n	9000d690 <vPortEnterCritical+0x1c>
9000d6a0:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6a4:	f383 8811 	msr	BASEPRI, r3
9000d6a8:	f3bf 8f6f 	isb	sy
9000d6ac:	f3bf 8f4f 	dsb	sy
9000d6b0:	e7fe      	b.n	9000d6b0 <vPortEnterCritical+0x3c>
9000d6b2:	bf00      	nop
9000d6b4:	24000070 	.word	0x24000070

9000d6b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d6b8:	4a08      	ldr	r2, [pc, #32]	; (9000d6dc <vPortExitCritical+0x24>)
9000d6ba:	6813      	ldr	r3, [r2, #0]
9000d6bc:	b943      	cbnz	r3, 9000d6d0 <vPortExitCritical+0x18>
9000d6be:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d6c2:	f383 8811 	msr	BASEPRI, r3
9000d6c6:	f3bf 8f6f 	isb	sy
9000d6ca:	f3bf 8f4f 	dsb	sy
9000d6ce:	e7fe      	b.n	9000d6ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d6d0:	3b01      	subs	r3, #1
9000d6d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d6d4:	b90b      	cbnz	r3, 9000d6da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d6d6:	f383 8811 	msr	BASEPRI, r3
}
9000d6da:	4770      	bx	lr
9000d6dc:	24000070 	.word	0x24000070

9000d6e0 <PendSV_Handler>:
	__asm volatile
9000d6e0:	f3ef 8009 	mrs	r0, PSP
9000d6e4:	f3bf 8f6f 	isb	sy
9000d6e8:	4b15      	ldr	r3, [pc, #84]	; (9000d740 <pxCurrentTCBConst>)
9000d6ea:	681a      	ldr	r2, [r3, #0]
9000d6ec:	f01e 0f10 	tst.w	lr, #16
9000d6f0:	bf08      	it	eq
9000d6f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d6f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d6fa:	6010      	str	r0, [r2, #0]
9000d6fc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000d700:	f04f 0050 	mov.w	r0, #80	; 0x50
9000d704:	f380 8811 	msr	BASEPRI, r0
9000d708:	f3bf 8f4f 	dsb	sy
9000d70c:	f3bf 8f6f 	isb	sy
9000d710:	f001 fea4 	bl	9000f45c <vTaskSwitchContext>
9000d714:	f04f 0000 	mov.w	r0, #0
9000d718:	f380 8811 	msr	BASEPRI, r0
9000d71c:	bc09      	pop	{r0, r3}
9000d71e:	6819      	ldr	r1, [r3, #0]
9000d720:	6808      	ldr	r0, [r1, #0]
9000d722:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d726:	f01e 0f10 	tst.w	lr, #16
9000d72a:	bf08      	it	eq
9000d72c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000d730:	f380 8809 	msr	PSP, r0
9000d734:	f3bf 8f6f 	isb	sy
9000d738:	4770      	bx	lr
9000d73a:	bf00      	nop
9000d73c:	f3af 8000 	nop.w

9000d740 <pxCurrentTCBConst>:
9000d740:	24022f48 	.word	0x24022f48

9000d744 <xPortSysTickHandler>:
{
9000d744:	b508      	push	{r3, lr}
	__asm volatile
9000d746:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d74a:	f383 8811 	msr	BASEPRI, r3
9000d74e:	f3bf 8f6f 	isb	sy
9000d752:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000d756:	f001 fe5b 	bl	9000f410 <xTaskIncrementTick>
9000d75a:	b128      	cbz	r0, 9000d768 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000d75c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d760:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000d764:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
9000d768:	2300      	movs	r3, #0
9000d76a:	f383 8811 	msr	BASEPRI, r3
}
9000d76e:	bd08      	pop	{r3, pc}

9000d770 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d770:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
9000d774:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d776:	4806      	ldr	r0, [pc, #24]	; (9000d790 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000d778:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d77a:	4906      	ldr	r1, [pc, #24]	; (9000d794 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000d77c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d77e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d780:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000d782:	fba1 1303 	umull	r1, r3, r1, r3
9000d786:	099b      	lsrs	r3, r3, #6
9000d788:	3b01      	subs	r3, #1
9000d78a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000d78c:	6110      	str	r0, [r2, #16]
}
9000d78e:	4770      	bx	lr
9000d790:	24000060 	.word	0x24000060
9000d794:	10624dd3 	.word	0x10624dd3

9000d798 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d798:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d79c:	4a48      	ldr	r2, [pc, #288]	; (9000d8c0 <xPortStartScheduler+0x128>)
9000d79e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
9000d7a2:	4291      	cmp	r1, r2
9000d7a4:	d041      	beq.n	9000d82a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d7a6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
9000d7aa:	4b46      	ldr	r3, [pc, #280]	; (9000d8c4 <xPortStartScheduler+0x12c>)
9000d7ac:	429a      	cmp	r2, r3
9000d7ae:	d033      	beq.n	9000d818 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7b0:	4b45      	ldr	r3, [pc, #276]	; (9000d8c8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d7b2:	20ff      	movs	r0, #255	; 0xff
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7b4:	4945      	ldr	r1, [pc, #276]	; (9000d8cc <xPortStartScheduler+0x134>)
{
9000d7b6:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7b8:	781a      	ldrb	r2, [r3, #0]
{
9000d7ba:	b084      	sub	sp, #16
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7bc:	4c44      	ldr	r4, [pc, #272]	; (9000d8d0 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000d7be:	b2d2      	uxtb	r2, r2
9000d7c0:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7c2:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000d7c4:	7018      	strb	r0, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d7c6:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000d7c8:	6022      	str	r2, [r4, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000d7ca:	b2db      	uxtb	r3, r3
9000d7cc:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7d0:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7d4:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7d8:	f003 0350 	and.w	r3, r3, #80	; 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7dc:	0610      	lsls	r0, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000d7de:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7e0:	d511      	bpl.n	9000d806 <xPortStartScheduler+0x6e>
9000d7e2:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d7e4:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000d7e8:	4610      	mov	r0, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7ea:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000d7ec:	005b      	lsls	r3, r3, #1
9000d7ee:	b2db      	uxtb	r3, r3
9000d7f0:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000d7f4:	f89d 1007 	ldrb.w	r1, [sp, #7]
9000d7f8:	0609      	lsls	r1, r1, #24
9000d7fa:	d4f3      	bmi.n	9000d7e4 <xPortStartScheduler+0x4c>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000d7fc:	2803      	cmp	r0, #3
9000d7fe:	6020      	str	r0, [r4, #0]
9000d800:	f88d 3007 	strb.w	r3, [sp, #7]
9000d804:	d01a      	beq.n	9000d83c <xPortStartScheduler+0xa4>
	__asm volatile
9000d806:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d80a:	f383 8811 	msr	BASEPRI, r3
9000d80e:	f3bf 8f6f 	isb	sy
9000d812:	f3bf 8f4f 	dsb	sy
9000d816:	e7fe      	b.n	9000d816 <xPortStartScheduler+0x7e>
9000d818:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d81c:	f383 8811 	msr	BASEPRI, r3
9000d820:	f3bf 8f6f 	isb	sy
9000d824:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000d828:	e7fe      	b.n	9000d828 <xPortStartScheduler+0x90>
9000d82a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d82e:	f383 8811 	msr	BASEPRI, r3
9000d832:	f3bf 8f6f 	isb	sy
9000d836:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000d83a:	e7fe      	b.n	9000d83a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d83c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d83e:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d842:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d846:	4a20      	ldr	r2, [pc, #128]	; (9000d8c8 <xPortStartScheduler+0x130>)
9000d848:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000d84a:	4e22      	ldr	r6, [pc, #136]	; (9000d8d4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000d84c:	6021      	str	r1, [r4, #0]
	uxCriticalNesting = 0;
9000d84e:	2400      	movs	r4, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000d850:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000d852:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d856:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
9000d85a:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000d85e:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
9000d862:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
9000d866:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
9000d86a:	f7ff ff81 	bl	9000d770 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000d86e:	6034      	str	r4, [r6, #0]
	vPortEnableVFP();
9000d870:	f7ff fea8 	bl	9000d5c4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000d874:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
9000d878:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
9000d87c:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
9000d880:	f7ff fe8c 	bl	9000d59c <prvPortStartFirstTask>
	vTaskSwitchContext();
9000d884:	f001 fdea 	bl	9000f45c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000d888:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000d88a:	9403      	str	r4, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000d88c:	3301      	adds	r3, #1
9000d88e:	d008      	beq.n	9000d8a2 <xPortStartScheduler+0x10a>
9000d890:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d894:	f383 8811 	msr	BASEPRI, r3
9000d898:	f3bf 8f6f 	isb	sy
9000d89c:	f3bf 8f4f 	dsb	sy
9000d8a0:	e7fe      	b.n	9000d8a0 <xPortStartScheduler+0x108>
9000d8a2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8a6:	f383 8811 	msr	BASEPRI, r3
9000d8aa:	f3bf 8f6f 	isb	sy
9000d8ae:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d8b2:	9b03      	ldr	r3, [sp, #12]
9000d8b4:	2b00      	cmp	r3, #0
9000d8b6:	d0fc      	beq.n	9000d8b2 <xPortStartScheduler+0x11a>
}
9000d8b8:	2000      	movs	r0, #0
9000d8ba:	b004      	add	sp, #16
9000d8bc:	bd70      	pop	{r4, r5, r6, pc}
9000d8be:	bf00      	nop
9000d8c0:	410fc271 	.word	0x410fc271
9000d8c4:	410fc270 	.word	0x410fc270
9000d8c8:	e000e400 	.word	0xe000e400
9000d8cc:	24022f00 	.word	0x24022f00
9000d8d0:	24022f04 	.word	0x24022f04
9000d8d4:	24000070 	.word	0x24000070

9000d8d8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000d8d8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000d8dc:	2b0f      	cmp	r3, #15
9000d8de:	d90e      	bls.n	9000d8fe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d8e0:	4911      	ldr	r1, [pc, #68]	; (9000d928 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d8e2:	4a12      	ldr	r2, [pc, #72]	; (9000d92c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000d8e4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000d8e6:	7812      	ldrb	r2, [r2, #0]
9000d8e8:	429a      	cmp	r2, r3
9000d8ea:	d908      	bls.n	9000d8fe <vPortValidateInterruptPriority+0x26>
9000d8ec:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d8f0:	f383 8811 	msr	BASEPRI, r3
9000d8f4:	f3bf 8f6f 	isb	sy
9000d8f8:	f3bf 8f4f 	dsb	sy
9000d8fc:	e7fe      	b.n	9000d8fc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000d8fe:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000d902:	4a0b      	ldr	r2, [pc, #44]	; (9000d930 <vPortValidateInterruptPriority+0x58>)
9000d904:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
9000d908:	6812      	ldr	r2, [r2, #0]
9000d90a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
9000d90e:	4293      	cmp	r3, r2
9000d910:	d908      	bls.n	9000d924 <vPortValidateInterruptPriority+0x4c>
9000d912:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d916:	f383 8811 	msr	BASEPRI, r3
9000d91a:	f3bf 8f6f 	isb	sy
9000d91e:	f3bf 8f4f 	dsb	sy
9000d922:	e7fe      	b.n	9000d922 <vPortValidateInterruptPriority+0x4a>
	}
9000d924:	4770      	bx	lr
9000d926:	bf00      	nop
9000d928:	e000e3f0 	.word	0xe000e3f0
9000d92c:	24022f00 	.word	0x24022f00
9000d930:	24022f04 	.word	0x24022f04

9000d934 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000d934:	b570      	push	{r4, r5, r6, lr}
9000d936:	4615      	mov	r5, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d938:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
9000d93a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000d93c:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000d93e:	b92a      	cbnz	r2, 9000d94c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000d940:	6805      	ldr	r5, [r0, #0]
9000d942:	b365      	cbz	r5, 9000d99e <prvCopyDataToQueue+0x6a>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d944:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d946:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d948:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
9000d94a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000d94c:	b97d      	cbnz	r5, 9000d96e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000d94e:	6840      	ldr	r0, [r0, #4]
9000d950:	f019 f817 	bl	90026982 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d954:	6863      	ldr	r3, [r4, #4]
9000d956:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d958:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d95a:	68a2      	ldr	r2, [r4, #8]
9000d95c:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000d95e:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d960:	d319      	bcc.n	9000d996 <prvCopyDataToQueue+0x62>
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d962:	6822      	ldr	r2, [r4, #0]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d964:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d966:	4628      	mov	r0, r5
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000d968:	6062      	str	r2, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d96a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d96c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000d96e:	68c0      	ldr	r0, [r0, #12]
9000d970:	f019 f807 	bl	90026982 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d974:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000d976:	68e3      	ldr	r3, [r4, #12]
9000d978:	4251      	negs	r1, r2
9000d97a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d97c:	6822      	ldr	r2, [r4, #0]
9000d97e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000d980:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000d982:	d202      	bcs.n	9000d98a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000d984:	68a3      	ldr	r3, [r4, #8]
9000d986:	440b      	add	r3, r1
9000d988:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000d98a:	2d02      	cmp	r5, #2
9000d98c:	d00d      	beq.n	9000d9aa <prvCopyDataToQueue+0x76>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d98e:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d990:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d992:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d994:	bd70      	pop	{r4, r5, r6, pc}
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d996:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
9000d998:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d99a:	63a6      	str	r6, [r4, #56]	; 0x38
}
9000d99c:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d99e:	6880      	ldr	r0, [r0, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000d9a0:	3601      	adds	r6, #1
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000d9a2:	f001 ff43 	bl	9000f82c <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000d9a6:	60a5      	str	r5, [r4, #8]
9000d9a8:	e7ce      	b.n	9000d948 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000d9aa:	2e01      	cmp	r6, #1
BaseType_t xReturn = pdFALSE;
9000d9ac:	f04f 0000 	mov.w	r0, #0
9000d9b0:	bf38      	it	cc
9000d9b2:	2601      	movcc	r6, #1
9000d9b4:	e7c8      	b.n	9000d948 <prvCopyDataToQueue+0x14>
9000d9b6:	bf00      	nop

9000d9b8 <xQueueGenericCreateStatic>:
	{
9000d9b8:	b530      	push	{r4, r5, lr}
9000d9ba:	b083      	sub	sp, #12
9000d9bc:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000d9c0:	b940      	cbnz	r0, 9000d9d4 <xQueueGenericCreateStatic+0x1c>
9000d9c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9c6:	f383 8811 	msr	BASEPRI, r3
9000d9ca:	f3bf 8f6f 	isb	sy
9000d9ce:	f3bf 8f4f 	dsb	sy
9000d9d2:	e7fe      	b.n	9000d9d2 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000d9d4:	461d      	mov	r5, r3
9000d9d6:	b153      	cbz	r3, 9000d9ee <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000d9d8:	b30a      	cbz	r2, 9000da1e <xQueueGenericCreateStatic+0x66>
9000d9da:	b989      	cbnz	r1, 9000da00 <xQueueGenericCreateStatic+0x48>
9000d9dc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9e0:	f383 8811 	msr	BASEPRI, r3
9000d9e4:	f3bf 8f6f 	isb	sy
9000d9e8:	f3bf 8f4f 	dsb	sy
9000d9ec:	e7fe      	b.n	9000d9ec <xQueueGenericCreateStatic+0x34>
9000d9ee:	f04f 0350 	mov.w	r3, #80	; 0x50
9000d9f2:	f383 8811 	msr	BASEPRI, r3
9000d9f6:	f3bf 8f6f 	isb	sy
9000d9fa:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000d9fe:	e7fe      	b.n	9000d9fe <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000da00:	b16a      	cbz	r2, 9000da1e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000da02:	2350      	movs	r3, #80	; 0x50
9000da04:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000da06:	9b01      	ldr	r3, [sp, #4]
9000da08:	2b50      	cmp	r3, #80	; 0x50
9000da0a:	d013      	beq.n	9000da34 <xQueueGenericCreateStatic+0x7c>
9000da0c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da10:	f383 8811 	msr	BASEPRI, r3
9000da14:	f3bf 8f6f 	isb	sy
9000da18:	f3bf 8f4f 	dsb	sy
9000da1c:	e7fe      	b.n	9000da1c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000da1e:	2900      	cmp	r1, #0
9000da20:	d0ef      	beq.n	9000da02 <xQueueGenericCreateStatic+0x4a>
9000da22:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da26:	f383 8811 	msr	BASEPRI, r3
9000da2a:	f3bf 8f6f 	isb	sy
9000da2e:	f3bf 8f4f 	dsb	sy
9000da32:	e7fe      	b.n	9000da32 <xQueueGenericCreateStatic+0x7a>
	if( uxItemSize == ( UBaseType_t ) 0 )
9000da34:	2900      	cmp	r1, #0
9000da36:	bf08      	it	eq
9000da38:	462a      	moveq	r2, r5
	pxNewQueue->uxLength = uxQueueLength;
9000da3a:	63e8      	str	r0, [r5, #60]	; 0x3c
	pxNewQueue->uxItemSize = uxItemSize;
9000da3c:	6429      	str	r1, [r5, #64]	; 0x40
9000da3e:	602a      	str	r2, [r5, #0]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000da40:	9a01      	ldr	r2, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000da42:	2201      	movs	r2, #1
9000da44:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
9000da48:	f7ff fe14 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da4c:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000da4e:	2300      	movs	r3, #0
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000da50:	6069      	str	r1, [r5, #4]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000da52:	63ab      	str	r3, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da54:	e9d5 200f 	ldrd	r2, r0, [r5, #60]	; 0x3c
9000da58:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da5c:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da5e:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da60:	4401      	add	r1, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da62:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000da64:	22ff      	movs	r2, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da66:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000da6a:	60e9      	str	r1, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000da6c:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000da70:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000da74:	f7ff fd46 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000da78:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000da7c:	f7ff fd42 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000da80:	f7ff fe1a 	bl	9000d6b8 <vPortExitCritical>
	}
9000da84:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000da86:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
9000da8a:	b003      	add	sp, #12
9000da8c:	bd30      	pop	{r4, r5, pc}
9000da8e:	bf00      	nop

9000da90 <xQueueGenericCreate>:
	{
9000da90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000da92:	b940      	cbnz	r0, 9000daa6 <xQueueGenericCreate+0x16>
9000da94:	f04f 0350 	mov.w	r3, #80	; 0x50
9000da98:	f383 8811 	msr	BASEPRI, r3
9000da9c:	f3bf 8f6f 	isb	sy
9000daa0:	f3bf 8f4f 	dsb	sy
9000daa4:	e7fe      	b.n	9000daa4 <xQueueGenericCreate+0x14>
9000daa6:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000daa8:	fb01 f000 	mul.w	r0, r1, r0
9000daac:	460e      	mov	r6, r1
9000daae:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dab0:	3050      	adds	r0, #80	; 0x50
9000dab2:	f7ff fc05 	bl	9000d2c0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dab6:	4604      	mov	r4, r0
9000dab8:	b340      	cbz	r0, 9000db0c <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000daba:	2300      	movs	r3, #0
9000dabc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000dac0:	b336      	cbz	r6, 9000db10 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dac2:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000dac6:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000dac8:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
9000dacc:	f7ff fdd2 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dad0:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dad2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dad6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dad8:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
9000dadc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dae6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dae8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000daea:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000daec:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000daee:	63a1      	str	r1, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000daf0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000daf4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000daf8:	f7ff fd04 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dafc:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000db00:	f7ff fd00 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000db04:	f7ff fdd8 	bl	9000d6b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000db08:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
9000db0c:	4620      	mov	r0, r4
9000db0e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000db10:	4603      	mov	r3, r0
9000db12:	e7d8      	b.n	9000dac6 <xQueueGenericCreate+0x36>

9000db14 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000db14:	b940      	cbnz	r0, 9000db28 <xQueueCreateCountingSemaphoreStatic+0x14>
9000db16:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db1a:	f383 8811 	msr	BASEPRI, r3
9000db1e:	f3bf 8f6f 	isb	sy
9000db22:	f3bf 8f4f 	dsb	sy
9000db26:	e7fe      	b.n	9000db26 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000db28:	4288      	cmp	r0, r1
9000db2a:	d208      	bcs.n	9000db3e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000db2c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db30:	f383 8811 	msr	BASEPRI, r3
9000db34:	f3bf 8f6f 	isb	sy
9000db38:	f3bf 8f4f 	dsb	sy
9000db3c:	e7fe      	b.n	9000db3c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000db3e:	b530      	push	{r4, r5, lr}
9000db40:	4615      	mov	r5, r2
9000db42:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000db44:	2a00      	cmp	r2, #0
9000db46:	d03d      	beq.n	9000dbc4 <xQueueCreateCountingSemaphoreStatic+0xb0>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000db48:	2350      	movs	r3, #80	; 0x50
9000db4a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000db4c:	9b03      	ldr	r3, [sp, #12]
9000db4e:	2b50      	cmp	r3, #80	; 0x50
9000db50:	d008      	beq.n	9000db64 <xQueueCreateCountingSemaphoreStatic+0x50>
9000db52:	f04f 0350 	mov.w	r3, #80	; 0x50
9000db56:	f383 8811 	msr	BASEPRI, r3
9000db5a:	f3bf 8f6f 	isb	sy
9000db5e:	f3bf 8f4f 	dsb	sy
9000db62:	e7fe      	b.n	9000db62 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000db64:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db66:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000db68:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000db6a:	63d0      	str	r0, [r2, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000db6c:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000db70:	6414      	str	r4, [r2, #64]	; 0x40
9000db72:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000db74:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000db76:	f7ff fd7d 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db7a:	6828      	ldr	r0, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000db7c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000db7e:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db80:	e9d5 3c0f 	ldrd	r3, ip, [r5, #60]	; 0x3c
9000db84:	fb03 f30c 	mul.w	r3, r3, ip
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db88:	eba3 0c0c 	sub.w	ip, r3, ip
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db8c:	4403      	add	r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db8e:	4484      	add	ip, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db90:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000db92:	23ff      	movs	r3, #255	; 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000db94:	f105 0010 	add.w	r0, r5, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000db98:	f8c5 c00c 	str.w	ip, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000db9c:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dba0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dba4:	f7ff fcae 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dba8:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000dbac:	f7ff fcaa 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000dbb0:	f7ff fd82 	bl	9000d6b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dbb4:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dbb6:	9901      	ldr	r1, [sp, #4]
	}
9000dbb8:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
9000dbba:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dbbe:	63a9      	str	r1, [r5, #56]	; 0x38
	}
9000dbc0:	b005      	add	sp, #20
9000dbc2:	bd30      	pop	{r4, r5, pc}
9000dbc4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbc8:	f383 8811 	msr	BASEPRI, r3
9000dbcc:	f3bf 8f6f 	isb	sy
9000dbd0:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dbd4:	e7fe      	b.n	9000dbd4 <xQueueCreateCountingSemaphoreStatic+0xc0>
9000dbd6:	bf00      	nop

9000dbd8 <xQueueCreateCountingSemaphore>:
	{
9000dbd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dbda:	b940      	cbnz	r0, 9000dbee <xQueueCreateCountingSemaphore+0x16>
9000dbdc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbe0:	f383 8811 	msr	BASEPRI, r3
9000dbe4:	f3bf 8f6f 	isb	sy
9000dbe8:	f3bf 8f4f 	dsb	sy
9000dbec:	e7fe      	b.n	9000dbec <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000dbee:	4288      	cmp	r0, r1
9000dbf0:	4604      	mov	r4, r0
9000dbf2:	460e      	mov	r6, r1
9000dbf4:	d208      	bcs.n	9000dc08 <xQueueCreateCountingSemaphore+0x30>
9000dbf6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dbfa:	f383 8811 	msr	BASEPRI, r3
9000dbfe:	f3bf 8f6f 	isb	sy
9000dc02:	f3bf 8f4f 	dsb	sy
9000dc06:	e7fe      	b.n	9000dc06 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dc08:	2050      	movs	r0, #80	; 0x50
9000dc0a:	f7ff fb59 	bl	9000d2c0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dc0e:	4605      	mov	r5, r0
9000dc10:	b330      	cbz	r0, 9000dc60 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc12:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dc14:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000dc16:	63c4      	str	r4, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000dc18:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000dc1c:	6407      	str	r7, [r0, #64]	; 0x40
	taskENTER_CRITICAL();
9000dc1e:	f7ff fd29 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc22:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dc24:	63af      	str	r7, [r5, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc26:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc2a:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc2c:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	; 0x3c
9000dc30:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc34:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc36:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc38:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3a:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc3c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dc3e:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000dc40:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dc44:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dc48:	f7ff fc5c 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dc4c:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000dc50:	f7ff fc58 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000dc54:	f7ff fd30 	bl	9000d6b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dc58:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dc5a:	63ae      	str	r6, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000dc5c:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
9000dc60:	4628      	mov	r0, r5
9000dc62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000dc64 <xQueueGenericSend>:
{
9000dc64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000dc68:	b084      	sub	sp, #16
9000dc6a:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000dc6c:	2800      	cmp	r0, #0
9000dc6e:	f000 8103 	beq.w	9000de78 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000dc72:	4688      	mov	r8, r1
9000dc74:	4604      	mov	r4, r0
9000dc76:	461f      	mov	r7, r3
9000dc78:	2900      	cmp	r1, #0
9000dc7a:	f000 8097 	beq.w	9000ddac <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000dc7e:	2f02      	cmp	r7, #2
9000dc80:	d10b      	bne.n	9000dc9a <xQueueGenericSend+0x36>
9000dc82:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dc84:	2b01      	cmp	r3, #1
9000dc86:	d008      	beq.n	9000dc9a <xQueueGenericSend+0x36>
9000dc88:	f04f 0350 	mov.w	r3, #80	; 0x50
9000dc8c:	f383 8811 	msr	BASEPRI, r3
9000dc90:	f3bf 8f6f 	isb	sy
9000dc94:	f3bf 8f4f 	dsb	sy
9000dc98:	e7fe      	b.n	9000dc98 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000dc9a:	f001 fd71 	bl	9000f780 <xTaskGetSchedulerState>
9000dc9e:	2800      	cmp	r0, #0
9000dca0:	f000 80f3 	beq.w	9000de8a <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dca4:	f1a7 0902 	sub.w	r9, r7, #2
9000dca8:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dcaa:	f104 0624 	add.w	r6, r4, #36	; 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dcae:	fab9 f989 	clz	r9, r9
9000dcb2:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000dcb6:	f7ff fcdd 	bl	9000d674 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dcba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000dcbc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dcbe:	429a      	cmp	r2, r3
9000dcc0:	f0c0 80f0 	bcc.w	9000dea4 <xQueueGenericSend+0x240>
9000dcc4:	f1b9 0f00 	cmp.w	r9, #0
9000dcc8:	f040 80ec 	bne.w	9000dea4 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dccc:	9b01      	ldr	r3, [sp, #4]
9000dcce:	2b00      	cmp	r3, #0
9000dcd0:	f000 8101 	beq.w	9000ded6 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000dcd4:	2d00      	cmp	r5, #0
9000dcd6:	f000 80cb 	beq.w	9000de70 <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000dcda:	f7ff fced 	bl	9000d6b8 <vPortExitCritical>
		vTaskSuspendAll();
9000dcde:	f001 fb79 	bl	9000f3d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000dce2:	f7ff fcc7 	bl	9000d674 <vPortEnterCritical>
9000dce6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000dcea:	2bff      	cmp	r3, #255	; 0xff
9000dcec:	d102      	bne.n	9000dcf4 <xQueueGenericSend+0x90>
9000dcee:	2300      	movs	r3, #0
9000dcf0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000dcf4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dcf8:	2bff      	cmp	r3, #255	; 0xff
9000dcfa:	d102      	bne.n	9000dd02 <xQueueGenericSend+0x9e>
9000dcfc:	2300      	movs	r3, #0
9000dcfe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000dd02:	f7ff fcd9 	bl	9000d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000dd06:	a901      	add	r1, sp, #4
9000dd08:	a802      	add	r0, sp, #8
9000dd0a:	f001 fce5 	bl	9000f6d8 <xTaskCheckForTimeOut>
9000dd0e:	2800      	cmp	r0, #0
9000dd10:	f040 80e5 	bne.w	9000dede <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000dd14:	f7ff fcae 	bl	9000d674 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000dd18:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000dd1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000dd1c:	429a      	cmp	r2, r3
9000dd1e:	d052      	beq.n	9000ddc6 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000dd20:	f7ff fcca 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dd24:	f7ff fca6 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dd28:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
9000dd2c:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd2e:	2d00      	cmp	r5, #0
9000dd30:	dc04      	bgt.n	9000dd3c <xQueueGenericSend+0xd8>
9000dd32:	e011      	b.n	9000dd58 <xQueueGenericSend+0xf4>
			--cTxLock;
9000dd34:	1e6a      	subs	r2, r5, #1
9000dd36:	b2d3      	uxtb	r3, r2
9000dd38:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd3a:	b16b      	cbz	r3, 9000dd58 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd3e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000dd40:	b153      	cbz	r3, 9000dd58 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000dd42:	f001 fc73 	bl	9000f62c <xTaskRemoveFromEventList>
9000dd46:	2800      	cmp	r0, #0
9000dd48:	d0f4      	beq.n	9000dd34 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000dd4a:	f001 fd0d 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000dd4e:	1e6a      	subs	r2, r5, #1
9000dd50:	b2d3      	uxtb	r3, r2
9000dd52:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dd54:	2b00      	cmp	r3, #0
9000dd56:	d1f1      	bne.n	9000dd3c <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000dd58:	23ff      	movs	r3, #255	; 0xff
9000dd5a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000dd5e:	f7ff fcab 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000dd62:	f7ff fc87 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000dd66:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
9000dd6a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd6c:	2d00      	cmp	r5, #0
9000dd6e:	dd14      	ble.n	9000dd9a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd70:	f104 0a10 	add.w	sl, r4, #16
9000dd74:	e003      	b.n	9000dd7e <xQueueGenericSend+0x11a>
				--cRxLock;
9000dd76:	1e6a      	subs	r2, r5, #1
9000dd78:	b2d3      	uxtb	r3, r2
9000dd7a:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd7c:	b16b      	cbz	r3, 9000dd9a <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd7e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd80:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000dd82:	b153      	cbz	r3, 9000dd9a <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000dd84:	f001 fc52 	bl	9000f62c <xTaskRemoveFromEventList>
9000dd88:	2800      	cmp	r0, #0
9000dd8a:	d0f4      	beq.n	9000dd76 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000dd8c:	f001 fcec 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000dd90:	1e6a      	subs	r2, r5, #1
9000dd92:	b2d3      	uxtb	r3, r2
9000dd94:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000dd96:	2b00      	cmp	r3, #0
9000dd98:	d1f1      	bne.n	9000dd7e <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000dd9a:	23ff      	movs	r3, #255	; 0xff
9000dd9c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000dda0:	f7ff fc8a 	bl	9000d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000dda4:	f001 fb1e 	bl	9000f3e4 <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dda8:	2501      	movs	r5, #1
9000ddaa:	e784      	b.n	9000dcb6 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ddac:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000ddae:	2b00      	cmp	r3, #0
9000ddb0:	f43f af65 	beq.w	9000dc7e <xQueueGenericSend+0x1a>
9000ddb4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ddb8:	f383 8811 	msr	BASEPRI, r3
9000ddbc:	f3bf 8f6f 	isb	sy
9000ddc0:	f3bf 8f4f 	dsb	sy
9000ddc4:	e7fe      	b.n	9000ddc4 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ddc6:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000ddca:	f7ff fc75 	bl	9000d6b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000ddce:	9901      	ldr	r1, [sp, #4]
9000ddd0:	4650      	mov	r0, sl
9000ddd2:	f001 fb9d 	bl	9000f510 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000ddd6:	f7ff fc4d 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ddda:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000ddde:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dde0:	2d00      	cmp	r5, #0
9000dde2:	dc04      	bgt.n	9000ddee <xQueueGenericSend+0x18a>
9000dde4:	e011      	b.n	9000de0a <xQueueGenericSend+0x1a6>
			--cTxLock;
9000dde6:	1e6b      	subs	r3, r5, #1
9000dde8:	b2da      	uxtb	r2, r3
9000ddea:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ddec:	b16a      	cbz	r2, 9000de0a <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddee:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddf0:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ddf2:	b153      	cbz	r3, 9000de0a <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ddf4:	f001 fc1a 	bl	9000f62c <xTaskRemoveFromEventList>
9000ddf8:	2800      	cmp	r0, #0
9000ddfa:	d0f4      	beq.n	9000dde6 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000ddfc:	f001 fcb4 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000de00:	1e6b      	subs	r3, r5, #1
9000de02:	b2da      	uxtb	r2, r3
9000de04:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000de06:	2a00      	cmp	r2, #0
9000de08:	d1f1      	bne.n	9000ddee <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000de0a:	23ff      	movs	r3, #255	; 0xff
9000de0c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000de10:	f7ff fc52 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000de14:	f7ff fc2e 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000de18:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000de1c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de1e:	2d00      	cmp	r5, #0
9000de20:	dc04      	bgt.n	9000de2c <xQueueGenericSend+0x1c8>
9000de22:	e011      	b.n	9000de48 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000de24:	1e6b      	subs	r3, r5, #1
9000de26:	b2da      	uxtb	r2, r3
9000de28:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de2a:	b16a      	cbz	r2, 9000de48 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de2c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de2e:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000de30:	b153      	cbz	r3, 9000de48 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000de32:	f001 fbfb 	bl	9000f62c <xTaskRemoveFromEventList>
9000de36:	2800      	cmp	r0, #0
9000de38:	d0f4      	beq.n	9000de24 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000de3a:	f001 fc95 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000de3e:	1e6b      	subs	r3, r5, #1
9000de40:	b2da      	uxtb	r2, r3
9000de42:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000de44:	2a00      	cmp	r2, #0
9000de46:	d1f1      	bne.n	9000de2c <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000de48:	23ff      	movs	r3, #255	; 0xff
9000de4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000de4e:	f7ff fc33 	bl	9000d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000de52:	f001 fac7 	bl	9000f3e4 <xTaskResumeAll>
9000de56:	2800      	cmp	r0, #0
9000de58:	d1a6      	bne.n	9000dda8 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000de5a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000de5e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000de62:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000de66:	f3bf 8f4f 	dsb	sy
9000de6a:	f3bf 8f6f 	isb	sy
9000de6e:	e79b      	b.n	9000dda8 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000de70:	a802      	add	r0, sp, #8
9000de72:	f001 fc25 	bl	9000f6c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000de76:	e730      	b.n	9000dcda <xQueueGenericSend+0x76>
9000de78:	f04f 0350 	mov.w	r3, #80	; 0x50
9000de7c:	f383 8811 	msr	BASEPRI, r3
9000de80:	f3bf 8f6f 	isb	sy
9000de84:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000de88:	e7fe      	b.n	9000de88 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000de8a:	9b01      	ldr	r3, [sp, #4]
9000de8c:	2b00      	cmp	r3, #0
9000de8e:	f43f af09 	beq.w	9000dca4 <xQueueGenericSend+0x40>
9000de92:	f04f 0350 	mov.w	r3, #80	; 0x50
9000de96:	f383 8811 	msr	BASEPRI, r3
9000de9a:	f3bf 8f6f 	isb	sy
9000de9e:	f3bf 8f4f 	dsb	sy
9000dea2:	e7fe      	b.n	9000dea2 <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000dea4:	463a      	mov	r2, r7
9000dea6:	4641      	mov	r1, r8
9000dea8:	4620      	mov	r0, r4
9000deaa:	f7ff fd43 	bl	9000d934 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000deae:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000deb0:	2b00      	cmp	r3, #0
9000deb2:	d152      	bne.n	9000df5a <xQueueGenericSend+0x2f6>
					else if( xYieldRequired != pdFALSE )
9000deb4:	b148      	cbz	r0, 9000deca <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000deb6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000deba:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000debe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000dec2:	f3bf 8f4f 	dsb	sy
9000dec6:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000deca:	f7ff fbf5 	bl	9000d6b8 <vPortExitCritical>
				return pdPASS;
9000dece:	2001      	movs	r0, #1
}
9000ded0:	b004      	add	sp, #16
9000ded2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000ded6:	f7ff fbef 	bl	9000d6b8 <vPortExitCritical>
					return errQUEUE_FULL;
9000deda:	4648      	mov	r0, r9
9000dedc:	e7f8      	b.n	9000ded0 <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000dede:	f7ff fbc9 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000dee2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000dee6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000dee8:	2d00      	cmp	r5, #0
9000deea:	dd10      	ble.n	9000df0e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000deec:	f104 0624 	add.w	r6, r4, #36	; 0x24
9000def0:	e003      	b.n	9000defa <xQueueGenericSend+0x296>
			--cTxLock;
9000def2:	1e6b      	subs	r3, r5, #1
9000def4:	b2da      	uxtb	r2, r3
9000def6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000def8:	b14a      	cbz	r2, 9000df0e <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000defa:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000defc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000defe:	b133      	cbz	r3, 9000df0e <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df00:	f001 fb94 	bl	9000f62c <xTaskRemoveFromEventList>
9000df04:	2800      	cmp	r0, #0
9000df06:	d0f4      	beq.n	9000def2 <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000df08:	f001 fc2e 	bl	9000f768 <vTaskMissedYield>
9000df0c:	e7f1      	b.n	9000def2 <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000df0e:	23ff      	movs	r3, #255	; 0xff
9000df10:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000df14:	f7ff fbd0 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000df18:	f7ff fbac 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000df1c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000df20:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df22:	2d00      	cmp	r5, #0
9000df24:	dd10      	ble.n	9000df48 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df26:	f104 0610 	add.w	r6, r4, #16
9000df2a:	e003      	b.n	9000df34 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000df2c:	1e6b      	subs	r3, r5, #1
9000df2e:	b2da      	uxtb	r2, r3
9000df30:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000df32:	b14a      	cbz	r2, 9000df48 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df34:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df36:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000df38:	b133      	cbz	r3, 9000df48 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000df3a:	f001 fb77 	bl	9000f62c <xTaskRemoveFromEventList>
9000df3e:	2800      	cmp	r0, #0
9000df40:	d0f4      	beq.n	9000df2c <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000df42:	f001 fc11 	bl	9000f768 <vTaskMissedYield>
9000df46:	e7f1      	b.n	9000df2c <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000df48:	23ff      	movs	r3, #255	; 0xff
9000df4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000df4e:	f7ff fbb3 	bl	9000d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000df52:	f001 fa47 	bl	9000f3e4 <xTaskResumeAll>
			return errQUEUE_FULL;
9000df56:	2000      	movs	r0, #0
9000df58:	e7ba      	b.n	9000ded0 <xQueueGenericSend+0x26c>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df5a:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000df5e:	f001 fb65 	bl	9000f62c <xTaskRemoveFromEventList>
9000df62:	2800      	cmp	r0, #0
9000df64:	d0b1      	beq.n	9000deca <xQueueGenericSend+0x266>
9000df66:	e7a6      	b.n	9000deb6 <xQueueGenericSend+0x252>

9000df68 <xQueueCreateMutexStatic>:
		configASSERT( pxStaticQueue != NULL );
9000df68:	b179      	cbz	r1, 9000df8a <xQueueCreateMutexStatic+0x22>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000df6a:	2350      	movs	r3, #80	; 0x50
	{
9000df6c:	b570      	push	{r4, r5, r6, lr}
9000df6e:	b082      	sub	sp, #8
			volatile size_t xSize = sizeof( StaticQueue_t );
9000df70:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000df72:	9b01      	ldr	r3, [sp, #4]
9000df74:	2b50      	cmp	r3, #80	; 0x50
9000df76:	d011      	beq.n	9000df9c <xQueueCreateMutexStatic+0x34>
9000df78:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df7c:	f383 8811 	msr	BASEPRI, r3
9000df80:	f3bf 8f6f 	isb	sy
9000df84:	f3bf 8f4f 	dsb	sy
9000df88:	e7fe      	b.n	9000df88 <xQueueCreateMutexStatic+0x20>
9000df8a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000df8e:	f383 8811 	msr	BASEPRI, r3
9000df92:	f3bf 8f6f 	isb	sy
9000df96:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000df9a:	e7fe      	b.n	9000df9a <xQueueCreateMutexStatic+0x32>
	pxNewQueue->uxItemSize = uxItemSize;
9000df9c:	2600      	movs	r6, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000df9e:	2301      	movs	r3, #1
9000dfa0:	460c      	mov	r4, r1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dfa2:	6009      	str	r1, [r1, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dfa4:	f881 3046 	strb.w	r3, [r1, #70]	; 0x46
9000dfa8:	4605      	mov	r5, r0
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000dfaa:	9a01      	ldr	r2, [sp, #4]
	pxNewQueue->uxItemSize = uxItemSize;
9000dfac:	e9c1 360f 	strd	r3, r6, [r1, #60]	; 0x3c
	taskENTER_CRITICAL();
9000dfb0:	f7ff fb60 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfb4:	6821      	ldr	r1, [r4, #0]
		pxQueue->cRxLock = queueUNLOCKED;
9000dfb6:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dfb8:	63a6      	str	r6, [r4, #56]	; 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dfba:	6061      	str	r1, [r4, #4]
		pxQueue->cRxLock = queueUNLOCKED;
9000dfbc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dfc0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfc4:	e9d4 200f 	ldrd	r2, r0, [r4, #60]	; 0x3c
9000dfc8:	fb00 f202 	mul.w	r2, r0, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfcc:	1a10      	subs	r0, r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfce:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfd0:	4401      	add	r1, r0
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dfd2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dfd6:	e9c4 2102 	strd	r2, r1, [r4, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dfda:	f7ff fa93 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dfde:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000dfe2:	f7ff fa8f 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000dfe6:	f7ff fb67 	bl	9000d6b8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dfea:	4633      	mov	r3, r6
9000dfec:	4632      	mov	r2, r6
9000dfee:	4631      	mov	r1, r6
9000dff0:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dff2:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000dff6:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000dff8:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000dffa:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000dffc:	f7ff fe32 	bl	9000dc64 <xQueueGenericSend>
	}
9000e000:	4620      	mov	r0, r4
9000e002:	b002      	add	sp, #8
9000e004:	bd70      	pop	{r4, r5, r6, pc}
9000e006:	bf00      	nop

9000e008 <xQueueGiveMutexRecursive>:
	{
9000e008:	b538      	push	{r3, r4, r5, lr}
		configASSERT( pxMutex );
9000e00a:	b138      	cbz	r0, 9000e01c <xQueueGiveMutexRecursive+0x14>
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e00c:	6885      	ldr	r5, [r0, #8]
9000e00e:	4604      	mov	r4, r0
9000e010:	f001 fbb0 	bl	9000f774 <xTaskGetCurrentTaskHandle>
9000e014:	4285      	cmp	r5, r0
9000e016:	d00a      	beq.n	9000e02e <xQueueGiveMutexRecursive+0x26>
			xReturn = pdFAIL;
9000e018:	2000      	movs	r0, #0
	}
9000e01a:	bd38      	pop	{r3, r4, r5, pc}
9000e01c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e020:	f383 8811 	msr	BASEPRI, r3
9000e024:	f3bf 8f6f 	isb	sy
9000e028:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e02c:	e7fe      	b.n	9000e02c <xQueueGiveMutexRecursive+0x24>
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )--;
9000e02e:	68e3      	ldr	r3, [r4, #12]
9000e030:	3b01      	subs	r3, #1
9000e032:	60e3      	str	r3, [r4, #12]
			if( pxMutex->u.xSemaphore.uxRecursiveCallCount == ( UBaseType_t ) 0 )
9000e034:	b10b      	cbz	r3, 9000e03a <xQueueGiveMutexRecursive+0x32>
			xReturn = pdPASS;
9000e036:	2001      	movs	r0, #1
	}
9000e038:	bd38      	pop	{r3, r4, r5, pc}
				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
9000e03a:	461a      	mov	r2, r3
9000e03c:	4619      	mov	r1, r3
9000e03e:	4620      	mov	r0, r4
9000e040:	f7ff fe10 	bl	9000dc64 <xQueueGenericSend>
			xReturn = pdPASS;
9000e044:	2001      	movs	r0, #1
	}
9000e046:	bd38      	pop	{r3, r4, r5, pc}

9000e048 <xQueueCreateMutex>:
	{
9000e048:	b570      	push	{r4, r5, r6, lr}
9000e04a:	4605      	mov	r5, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000e04c:	2050      	movs	r0, #80	; 0x50
9000e04e:	f7ff f937 	bl	9000d2c0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000e052:	4604      	mov	r4, r0
9000e054:	b370      	cbz	r0, 9000e0b4 <xQueueCreateMutex+0x6c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e056:	2600      	movs	r6, #0
	pxNewQueue->uxLength = uxQueueLength;
9000e058:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000e05a:	6020      	str	r0, [r4, #0]
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000e05c:	f880 6046 	strb.w	r6, [r0, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000e060:	e9c0 360f 	strd	r3, r6, [r0, #60]	; 0x3c
	taskENTER_CRITICAL();
9000e064:	f7ff fb06 	bl	9000d674 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e068:	6821      	ldr	r1, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000e06a:	63a6      	str	r6, [r4, #56]	; 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e06c:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000e070:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e072:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
9000e076:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e07a:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e07c:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e07e:	4419      	add	r1, r3
		pxQueue->cRxLock = queueUNLOCKED;
9000e080:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000e082:	e9c4 2102 	strd	r2, r1, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000e086:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000e08a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000e08e:	f7ff fa39 	bl	9000d504 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000e092:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e096:	f7ff fa35 	bl	9000d504 <vListInitialise>
	taskEXIT_CRITICAL();
9000e09a:	f7ff fb0d 	bl	9000d6b8 <vPortExitCritical>
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e09e:	4633      	mov	r3, r6
9000e0a0:	4632      	mov	r2, r6
9000e0a2:	4631      	mov	r1, r6
9000e0a4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000e0a6:	f884 504c 	strb.w	r5, [r4, #76]	; 0x4c
			pxNewQueue->u.xSemaphore.xMutexHolder = NULL;
9000e0aa:	60a6      	str	r6, [r4, #8]
			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
9000e0ac:	6026      	str	r6, [r4, #0]
			pxNewQueue->u.xSemaphore.uxRecursiveCallCount = 0;
9000e0ae:	60e6      	str	r6, [r4, #12]
			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
9000e0b0:	f7ff fdd8 	bl	9000dc64 <xQueueGenericSend>
	}
9000e0b4:	4620      	mov	r0, r4
9000e0b6:	bd70      	pop	{r4, r5, r6, pc}

9000e0b8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e0b8:	2800      	cmp	r0, #0
9000e0ba:	d04e      	beq.n	9000e15a <xQueueGenericSendFromISR+0xa2>
{
9000e0bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e0c0:	460e      	mov	r6, r1
9000e0c2:	4604      	mov	r4, r0
9000e0c4:	4617      	mov	r7, r2
9000e0c6:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e0c8:	b339      	cbz	r1, 9000e11a <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e0ca:	2d02      	cmp	r5, #2
9000e0cc:	d10b      	bne.n	9000e0e6 <xQueueGenericSendFromISR+0x2e>
9000e0ce:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e0d0:	2b01      	cmp	r3, #1
9000e0d2:	d008      	beq.n	9000e0e6 <xQueueGenericSendFromISR+0x2e>
9000e0d4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e0d8:	f383 8811 	msr	BASEPRI, r3
9000e0dc:	f3bf 8f6f 	isb	sy
9000e0e0:	f3bf 8f4f 	dsb	sy
9000e0e4:	e7fe      	b.n	9000e0e4 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e0e6:	f7ff fbf7 	bl	9000d8d8 <vPortValidateInterruptPriority>
	__asm volatile
9000e0ea:	f3ef 8811 	mrs	r8, BASEPRI
9000e0ee:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e0f2:	f383 8811 	msr	BASEPRI, r3
9000e0f6:	f3bf 8f6f 	isb	sy
9000e0fa:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e0fe:	6ba2      	ldr	r2, [r4, #56]	; 0x38
9000e100:	6be3      	ldr	r3, [r4, #60]	; 0x3c
9000e102:	429a      	cmp	r2, r3
9000e104:	d315      	bcc.n	9000e132 <xQueueGenericSendFromISR+0x7a>
9000e106:	f1a5 0002 	sub.w	r0, r5, #2
9000e10a:	fab0 f080 	clz	r0, r0
9000e10e:	0940      	lsrs	r0, r0, #5
9000e110:	b978      	cbnz	r0, 9000e132 <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e112:	f388 8811 	msr	BASEPRI, r8
}
9000e116:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e11a:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e11c:	2b00      	cmp	r3, #0
9000e11e:	d0d4      	beq.n	9000e0ca <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e120:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e124:	f383 8811 	msr	BASEPRI, r3
9000e128:	f3bf 8f6f 	isb	sy
9000e12c:	f3bf 8f4f 	dsb	sy
9000e130:	e7fe      	b.n	9000e130 <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e132:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e134:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e138:	4631      	mov	r1, r6
9000e13a:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e13c:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e13e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e140:	f7ff fbf8 	bl	9000d934 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e144:	1c6b      	adds	r3, r5, #1
9000e146:	d011      	beq.n	9000e16c <xQueueGenericSendFromISR+0xb4>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e148:	1c6b      	adds	r3, r5, #1
			xReturn = pdPASS;
9000e14a:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e14c:	b25b      	sxtb	r3, r3
9000e14e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	__asm volatile
9000e152:	f388 8811 	msr	BASEPRI, r8
}
9000e156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
9000e15a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e15e:	f383 8811 	msr	BASEPRI, r3
9000e162:	f3bf 8f6f 	isb	sy
9000e166:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e16a:	e7fe      	b.n	9000e16a <xQueueGenericSendFromISR+0xb2>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e16c:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000e16e:	b90b      	cbnz	r3, 9000e174 <xQueueGenericSendFromISR+0xbc>
			xReturn = pdPASS;
9000e170:	2001      	movs	r0, #1
9000e172:	e7ce      	b.n	9000e112 <xQueueGenericSendFromISR+0x5a>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e174:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e178:	f001 fa58 	bl	9000f62c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e17c:	2800      	cmp	r0, #0
9000e17e:	d0f7      	beq.n	9000e170 <xQueueGenericSendFromISR+0xb8>
9000e180:	2f00      	cmp	r7, #0
9000e182:	d0f5      	beq.n	9000e170 <xQueueGenericSendFromISR+0xb8>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e184:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e186:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e188:	603b      	str	r3, [r7, #0]
9000e18a:	e7c2      	b.n	9000e112 <xQueueGenericSendFromISR+0x5a>

9000e18c <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e18c:	b360      	cbz	r0, 9000e1e8 <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e18e:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
9000e190:	b570      	push	{r4, r5, r6, lr}
9000e192:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e194:	b143      	cbz	r3, 9000e1a8 <xQueueGiveFromISR+0x1c>
9000e196:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e19a:	f383 8811 	msr	BASEPRI, r3
9000e19e:	f3bf 8f6f 	isb	sy
9000e1a2:	f3bf 8f4f 	dsb	sy
9000e1a6:	e7fe      	b.n	9000e1a6 <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e1a8:	6803      	ldr	r3, [r0, #0]
9000e1aa:	460d      	mov	r5, r1
9000e1ac:	b32b      	cbz	r3, 9000e1fa <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e1ae:	f7ff fb93 	bl	9000d8d8 <vPortValidateInterruptPriority>
	__asm volatile
9000e1b2:	f3ef 8611 	mrs	r6, BASEPRI
9000e1b6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1ba:	f383 8811 	msr	BASEPRI, r3
9000e1be:	f3bf 8f6f 	isb	sy
9000e1c2:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e1c6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e1c8:	6be2      	ldr	r2, [r4, #60]	; 0x3c
9000e1ca:	429a      	cmp	r2, r3
9000e1cc:	d921      	bls.n	9000e212 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e1ce:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e1d2:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e1d4:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e1d6:	63a3      	str	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e1d8:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e1da:	d01e      	beq.n	9000e21a <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e1dc:	3301      	adds	r3, #1
			xReturn = pdPASS;
9000e1de:	2001      	movs	r0, #1
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e1e0:	b25b      	sxtb	r3, r3
9000e1e2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e1e6:	e015      	b.n	9000e214 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e1e8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e1ec:	f383 8811 	msr	BASEPRI, r3
9000e1f0:	f3bf 8f6f 	isb	sy
9000e1f4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e1f8:	e7fe      	b.n	9000e1f8 <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e1fa:	6883      	ldr	r3, [r0, #8]
9000e1fc:	2b00      	cmp	r3, #0
9000e1fe:	d0d6      	beq.n	9000e1ae <xQueueGiveFromISR+0x22>
9000e200:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e204:	f383 8811 	msr	BASEPRI, r3
9000e208:	f3bf 8f6f 	isb	sy
9000e20c:	f3bf 8f4f 	dsb	sy
9000e210:	e7fe      	b.n	9000e210 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e212:	2000      	movs	r0, #0
	__asm volatile
9000e214:	f386 8811 	msr	BASEPRI, r6
}
9000e218:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e21a:	6a63      	ldr	r3, [r4, #36]	; 0x24
9000e21c:	b90b      	cbnz	r3, 9000e222 <xQueueGiveFromISR+0x96>
			xReturn = pdPASS;
9000e21e:	2001      	movs	r0, #1
9000e220:	e7f8      	b.n	9000e214 <xQueueGiveFromISR+0x88>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e222:	f104 0024 	add.w	r0, r4, #36	; 0x24
9000e226:	f001 fa01 	bl	9000f62c <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e22a:	2d00      	cmp	r5, #0
9000e22c:	d0f7      	beq.n	9000e21e <xQueueGiveFromISR+0x92>
9000e22e:	2800      	cmp	r0, #0
9000e230:	d0f5      	beq.n	9000e21e <xQueueGiveFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e232:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e234:	4618      	mov	r0, r3
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e236:	602b      	str	r3, [r5, #0]
9000e238:	e7ec      	b.n	9000e214 <xQueueGiveFromISR+0x88>
9000e23a:	bf00      	nop

9000e23c <xQueueReceive>:
{
9000e23c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e240:	b085      	sub	sp, #20
9000e242:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e244:	2800      	cmp	r0, #0
9000e246:	f000 815c 	beq.w	9000e502 <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e24a:	460f      	mov	r7, r1
9000e24c:	4604      	mov	r4, r0
9000e24e:	2900      	cmp	r1, #0
9000e250:	d079      	beq.n	9000e346 <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e252:	f001 fa95 	bl	9000f780 <xTaskGetSchedulerState>
9000e256:	2800      	cmp	r0, #0
9000e258:	f000 8081 	beq.w	9000e35e <xQueueReceive+0x122>
		taskENTER_CRITICAL();
9000e25c:	f7ff fa0a 	bl	9000d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e260:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e262:	2d00      	cmp	r5, #0
9000e264:	f040 8138 	bne.w	9000e4d8 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e268:	9b01      	ldr	r3, [sp, #4]
9000e26a:	2b00      	cmp	r3, #0
9000e26c:	f000 80d5 	beq.w	9000e41a <xQueueReceive+0x1de>
		prvLockQueue( pxQueue );
9000e270:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e272:	f104 0624 	add.w	r6, r4, #36	; 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e276:	a802      	add	r0, sp, #8
9000e278:	f001 fa22 	bl	9000f6c0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e27c:	f7ff fa1c 	bl	9000d6b8 <vPortExitCritical>
		vTaskSuspendAll();
9000e280:	f001 f8a8 	bl	9000f3d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e284:	f7ff f9f6 	bl	9000d674 <vPortEnterCritical>
9000e288:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e28c:	2bff      	cmp	r3, #255	; 0xff
9000e28e:	d101      	bne.n	9000e294 <xQueueReceive+0x58>
9000e290:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
9000e294:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e298:	2bff      	cmp	r3, #255	; 0xff
9000e29a:	d101      	bne.n	9000e2a0 <xQueueReceive+0x64>
9000e29c:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
9000e2a0:	f7ff fa0a 	bl	9000d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e2a4:	a901      	add	r1, sp, #4
9000e2a6:	a802      	add	r0, sp, #8
9000e2a8:	f001 fa16 	bl	9000f6d8 <xTaskCheckForTimeOut>
9000e2ac:	2800      	cmp	r0, #0
9000e2ae:	d163      	bne.n	9000e378 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
9000e2b0:	f7ff f9e0 	bl	9000d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e2b4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e2b6:	2b00      	cmp	r3, #0
9000e2b8:	f000 80b5 	beq.w	9000e426 <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
9000e2bc:	f7ff f9fc 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e2c0:	f7ff f9d8 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e2c4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e2c8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2ca:	2d00      	cmp	r5, #0
9000e2cc:	dc04      	bgt.n	9000e2d8 <xQueueReceive+0x9c>
9000e2ce:	e011      	b.n	9000e2f4 <xQueueReceive+0xb8>
			--cTxLock;
9000e2d0:	1e6b      	subs	r3, r5, #1
9000e2d2:	b2da      	uxtb	r2, r3
9000e2d4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2d6:	b16a      	cbz	r2, 9000e2f4 <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2da:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e2dc:	b153      	cbz	r3, 9000e2f4 <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e2de:	f001 f9a5 	bl	9000f62c <xTaskRemoveFromEventList>
9000e2e2:	2800      	cmp	r0, #0
9000e2e4:	d0f4      	beq.n	9000e2d0 <xQueueReceive+0x94>
						vTaskMissedYield();
9000e2e6:	f001 fa3f 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000e2ea:	1e6b      	subs	r3, r5, #1
9000e2ec:	b2da      	uxtb	r2, r3
9000e2ee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e2f0:	2a00      	cmp	r2, #0
9000e2f2:	d1f1      	bne.n	9000e2d8 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
9000e2f4:	23ff      	movs	r3, #255	; 0xff
9000e2f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e2fa:	f7ff f9dd 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e2fe:	f7ff f9b9 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e302:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e306:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e308:	2d00      	cmp	r5, #0
9000e30a:	dd14      	ble.n	9000e336 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e30c:	f104 0910 	add.w	r9, r4, #16
9000e310:	e003      	b.n	9000e31a <xQueueReceive+0xde>
				--cRxLock;
9000e312:	1e6b      	subs	r3, r5, #1
9000e314:	b2da      	uxtb	r2, r3
9000e316:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e318:	b16a      	cbz	r2, 9000e336 <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e31a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e31c:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e31e:	b153      	cbz	r3, 9000e336 <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e320:	f001 f984 	bl	9000f62c <xTaskRemoveFromEventList>
9000e324:	2800      	cmp	r0, #0
9000e326:	d0f4      	beq.n	9000e312 <xQueueReceive+0xd6>
					vTaskMissedYield();
9000e328:	f001 fa1e 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000e32c:	1e6b      	subs	r3, r5, #1
9000e32e:	b2da      	uxtb	r2, r3
9000e330:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e332:	2a00      	cmp	r2, #0
9000e334:	d1f1      	bne.n	9000e31a <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
9000e336:	23ff      	movs	r3, #255	; 0xff
9000e338:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e33c:	f7ff f9bc 	bl	9000d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e340:	f001 f850 	bl	9000f3e4 <xTaskResumeAll>
		taskENTER_CRITICAL();
9000e344:	e060      	b.n	9000e408 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e346:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e348:	2b00      	cmp	r3, #0
9000e34a:	d082      	beq.n	9000e252 <xQueueReceive+0x16>
	__asm volatile
9000e34c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e350:	f383 8811 	msr	BASEPRI, r3
9000e354:	f3bf 8f6f 	isb	sy
9000e358:	f3bf 8f4f 	dsb	sy
9000e35c:	e7fe      	b.n	9000e35c <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e35e:	9b01      	ldr	r3, [sp, #4]
9000e360:	2b00      	cmp	r3, #0
9000e362:	f43f af7b 	beq.w	9000e25c <xQueueReceive+0x20>
9000e366:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e36a:	f383 8811 	msr	BASEPRI, r3
9000e36e:	f3bf 8f6f 	isb	sy
9000e372:	f3bf 8f4f 	dsb	sy
9000e376:	e7fe      	b.n	9000e376 <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
9000e378:	f7ff f97c 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e37c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e380:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e382:	2d00      	cmp	r5, #0
9000e384:	dc04      	bgt.n	9000e390 <xQueueReceive+0x154>
9000e386:	e011      	b.n	9000e3ac <xQueueReceive+0x170>
			--cTxLock;
9000e388:	1e6b      	subs	r3, r5, #1
9000e38a:	b2da      	uxtb	r2, r3
9000e38c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e38e:	b16a      	cbz	r2, 9000e3ac <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e390:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e392:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e394:	b153      	cbz	r3, 9000e3ac <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e396:	f001 f949 	bl	9000f62c <xTaskRemoveFromEventList>
9000e39a:	2800      	cmp	r0, #0
9000e39c:	d0f4      	beq.n	9000e388 <xQueueReceive+0x14c>
						vTaskMissedYield();
9000e39e:	f001 f9e3 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000e3a2:	1e6b      	subs	r3, r5, #1
9000e3a4:	b2da      	uxtb	r2, r3
9000e3a6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e3a8:	2a00      	cmp	r2, #0
9000e3aa:	d1f1      	bne.n	9000e390 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
9000e3ac:	23ff      	movs	r3, #255	; 0xff
9000e3ae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e3b2:	f7ff f981 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e3b6:	f7ff f95d 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e3ba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e3be:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3c0:	2d00      	cmp	r5, #0
9000e3c2:	dd14      	ble.n	9000e3ee <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3c4:	f104 0910 	add.w	r9, r4, #16
9000e3c8:	e003      	b.n	9000e3d2 <xQueueReceive+0x196>
				--cRxLock;
9000e3ca:	1e6b      	subs	r3, r5, #1
9000e3cc:	b2da      	uxtb	r2, r3
9000e3ce:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3d0:	b16a      	cbz	r2, 9000e3ee <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3d2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3d4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e3d6:	b153      	cbz	r3, 9000e3ee <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e3d8:	f001 f928 	bl	9000f62c <xTaskRemoveFromEventList>
9000e3dc:	2800      	cmp	r0, #0
9000e3de:	d0f4      	beq.n	9000e3ca <xQueueReceive+0x18e>
					vTaskMissedYield();
9000e3e0:	f001 f9c2 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000e3e4:	1e6b      	subs	r3, r5, #1
9000e3e6:	b2da      	uxtb	r2, r3
9000e3e8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e3ea:	2a00      	cmp	r2, #0
9000e3ec:	d1f1      	bne.n	9000e3d2 <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
9000e3ee:	23ff      	movs	r3, #255	; 0xff
9000e3f0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e3f4:	f7ff f960 	bl	9000d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e3f8:	f000 fff4 	bl	9000f3e4 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e3fc:	f7ff f93a 	bl	9000d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e400:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e402:	b153      	cbz	r3, 9000e41a <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
9000e404:	f7ff f958 	bl	9000d6b8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e408:	f7ff f934 	bl	9000d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e40c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e40e:	2d00      	cmp	r5, #0
9000e410:	d162      	bne.n	9000e4d8 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e412:	9b01      	ldr	r3, [sp, #4]
9000e414:	2b00      	cmp	r3, #0
9000e416:	f47f af31 	bne.w	9000e27c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e41a:	f7ff f94d 	bl	9000d6b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e41e:	2000      	movs	r0, #0
}
9000e420:	b005      	add	sp, #20
9000e422:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000e426:	f7ff f947 	bl	9000d6b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e42a:	9901      	ldr	r1, [sp, #4]
9000e42c:	4630      	mov	r0, r6
9000e42e:	f001 f86f 	bl	9000f510 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e432:	f7ff f91f 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e436:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e43a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e43c:	2d00      	cmp	r5, #0
9000e43e:	dc04      	bgt.n	9000e44a <xQueueReceive+0x20e>
9000e440:	e011      	b.n	9000e466 <xQueueReceive+0x22a>
			--cTxLock;
9000e442:	1e6b      	subs	r3, r5, #1
9000e444:	b2da      	uxtb	r2, r3
9000e446:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e448:	b16a      	cbz	r2, 9000e466 <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e44a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e44c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e44e:	b153      	cbz	r3, 9000e466 <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e450:	f001 f8ec 	bl	9000f62c <xTaskRemoveFromEventList>
9000e454:	2800      	cmp	r0, #0
9000e456:	d0f4      	beq.n	9000e442 <xQueueReceive+0x206>
						vTaskMissedYield();
9000e458:	f001 f986 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000e45c:	1e6b      	subs	r3, r5, #1
9000e45e:	b2da      	uxtb	r2, r3
9000e460:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e462:	2a00      	cmp	r2, #0
9000e464:	d1f1      	bne.n	9000e44a <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e466:	23ff      	movs	r3, #255	; 0xff
9000e468:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e46c:	f7ff f924 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e470:	f7ff f900 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e474:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e478:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e47a:	2d00      	cmp	r5, #0
9000e47c:	dd14      	ble.n	9000e4a8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e47e:	f104 0910 	add.w	r9, r4, #16
9000e482:	e003      	b.n	9000e48c <xQueueReceive+0x250>
				--cRxLock;
9000e484:	1e6b      	subs	r3, r5, #1
9000e486:	b2da      	uxtb	r2, r3
9000e488:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e48a:	b16a      	cbz	r2, 9000e4a8 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e48c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e48e:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e490:	b153      	cbz	r3, 9000e4a8 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e492:	f001 f8cb 	bl	9000f62c <xTaskRemoveFromEventList>
9000e496:	2800      	cmp	r0, #0
9000e498:	d0f4      	beq.n	9000e484 <xQueueReceive+0x248>
					vTaskMissedYield();
9000e49a:	f001 f965 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000e49e:	1e6b      	subs	r3, r5, #1
9000e4a0:	b2da      	uxtb	r2, r3
9000e4a2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e4a4:	2a00      	cmp	r2, #0
9000e4a6:	d1f1      	bne.n	9000e48c <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
9000e4a8:	23ff      	movs	r3, #255	; 0xff
9000e4aa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e4ae:	f7ff f903 	bl	9000d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e4b2:	f000 ff97 	bl	9000f3e4 <xTaskResumeAll>
9000e4b6:	2800      	cmp	r0, #0
9000e4b8:	d1a6      	bne.n	9000e408 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
9000e4ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e4be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e4c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e4c6:	f3bf 8f4f 	dsb	sy
9000e4ca:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
9000e4ce:	f7ff f8d1 	bl	9000d674 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e4d2:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e4d4:	2d00      	cmp	r5, #0
9000e4d6:	d09c      	beq.n	9000e412 <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e4d8:	6c22      	ldr	r2, [r4, #64]	; 0x40
9000e4da:	b152      	cbz	r2, 9000e4f2 <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4dc:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4de:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4e0:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4e2:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e4e4:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e4e6:	d301      	bcc.n	9000e4ec <xQueueReceive+0x2b0>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e4e8:	6821      	ldr	r1, [r4, #0]
9000e4ea:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e4ec:	4638      	mov	r0, r7
9000e4ee:	f018 fa48 	bl	90026982 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e4f2:	3d01      	subs	r5, #1
9000e4f4:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e4f6:	6923      	ldr	r3, [r4, #16]
9000e4f8:	b963      	cbnz	r3, 9000e514 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e4fa:	f7ff f8dd 	bl	9000d6b8 <vPortExitCritical>
				return pdPASS;
9000e4fe:	2001      	movs	r0, #1
9000e500:	e78e      	b.n	9000e420 <xQueueReceive+0x1e4>
9000e502:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e506:	f383 8811 	msr	BASEPRI, r3
9000e50a:	f3bf 8f6f 	isb	sy
9000e50e:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e512:	e7fe      	b.n	9000e512 <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e514:	f104 0010 	add.w	r0, r4, #16
9000e518:	f001 f888 	bl	9000f62c <xTaskRemoveFromEventList>
9000e51c:	2800      	cmp	r0, #0
9000e51e:	d0ec      	beq.n	9000e4fa <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
9000e520:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e524:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e528:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e52c:	f3bf 8f4f 	dsb	sy
9000e530:	f3bf 8f6f 	isb	sy
9000e534:	e7e1      	b.n	9000e4fa <xQueueReceive+0x2be>
9000e536:	bf00      	nop

9000e538 <xQueueSemaphoreTake>:
{
9000e538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e53c:	b084      	sub	sp, #16
9000e53e:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e540:	2800      	cmp	r0, #0
9000e542:	d05c      	beq.n	9000e5fe <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e544:	6c07      	ldr	r7, [r0, #64]	; 0x40
9000e546:	4604      	mov	r4, r0
9000e548:	b147      	cbz	r7, 9000e55c <xQueueSemaphoreTake+0x24>
9000e54a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e54e:	f383 8811 	msr	BASEPRI, r3
9000e552:	f3bf 8f6f 	isb	sy
9000e556:	f3bf 8f4f 	dsb	sy
9000e55a:	e7fe      	b.n	9000e55a <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e55c:	f001 f910 	bl	9000f780 <xTaskGetSchedulerState>
9000e560:	4605      	mov	r5, r0
9000e562:	2800      	cmp	r0, #0
9000e564:	d054      	beq.n	9000e610 <xQueueSemaphoreTake+0xd8>
9000e566:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e568:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
9000e56c:	f7ff f882 	bl	9000d674 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e570:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e572:	2b00      	cmp	r3, #0
9000e574:	f040 8149 	bne.w	9000e80a <xQueueSemaphoreTake+0x2d2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e578:	9b01      	ldr	r3, [sp, #4]
9000e57a:	2b00      	cmp	r3, #0
9000e57c:	f000 813a 	beq.w	9000e7f4 <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
9000e580:	2d00      	cmp	r5, #0
9000e582:	f000 809d 	beq.w	9000e6c0 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
9000e586:	f7ff f897 	bl	9000d6b8 <vPortExitCritical>
		vTaskSuspendAll();
9000e58a:	f000 ff23 	bl	9000f3d4 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e58e:	f7ff f871 	bl	9000d674 <vPortEnterCritical>
9000e592:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e596:	2bff      	cmp	r3, #255	; 0xff
9000e598:	d102      	bne.n	9000e5a0 <xQueueSemaphoreTake+0x68>
9000e59a:	2300      	movs	r3, #0
9000e59c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
9000e5a0:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e5a4:	2bff      	cmp	r3, #255	; 0xff
9000e5a6:	d102      	bne.n	9000e5ae <xQueueSemaphoreTake+0x76>
9000e5a8:	2300      	movs	r3, #0
9000e5aa:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
9000e5ae:	f7ff f883 	bl	9000d6b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e5b2:	a901      	add	r1, sp, #4
9000e5b4:	a802      	add	r0, sp, #8
9000e5b6:	f001 f88f 	bl	9000f6d8 <xTaskCheckForTimeOut>
9000e5ba:	2800      	cmp	r0, #0
9000e5bc:	d135      	bne.n	9000e62a <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
9000e5be:	f7ff f859 	bl	9000d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e5c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e5c4:	2b00      	cmp	r3, #0
9000e5c6:	f000 80a4 	beq.w	9000e712 <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
9000e5ca:	f7ff f875 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e5ce:	f7ff f851 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5d2:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e5d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5d8:	2d00      	cmp	r5, #0
9000e5da:	dc05      	bgt.n	9000e5e8 <xQueueSemaphoreTake+0xb0>
9000e5dc:	e074      	b.n	9000e6c8 <xQueueSemaphoreTake+0x190>
			--cTxLock;
9000e5de:	1e6b      	subs	r3, r5, #1
9000e5e0:	b2da      	uxtb	r2, r3
9000e5e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5e4:	2a00      	cmp	r2, #0
9000e5e6:	d06f      	beq.n	9000e6c8 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5ea:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5ec:	2b00      	cmp	r3, #0
9000e5ee:	d06b      	beq.n	9000e6c8 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5f0:	f001 f81c 	bl	9000f62c <xTaskRemoveFromEventList>
9000e5f4:	2800      	cmp	r0, #0
9000e5f6:	d0f2      	beq.n	9000e5de <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
9000e5f8:	f001 f8b6 	bl	9000f768 <vTaskMissedYield>
9000e5fc:	e7ef      	b.n	9000e5de <xQueueSemaphoreTake+0xa6>
9000e5fe:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e602:	f383 8811 	msr	BASEPRI, r3
9000e606:	f3bf 8f6f 	isb	sy
9000e60a:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e60e:	e7fe      	b.n	9000e60e <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e610:	9b01      	ldr	r3, [sp, #4]
9000e612:	2b00      	cmp	r3, #0
9000e614:	f000 80d4 	beq.w	9000e7c0 <xQueueSemaphoreTake+0x288>
9000e618:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e61c:	f383 8811 	msr	BASEPRI, r3
9000e620:	f3bf 8f6f 	isb	sy
9000e624:	f3bf 8f4f 	dsb	sy
9000e628:	e7fe      	b.n	9000e628 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
9000e62a:	f7ff f823 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e62e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e632:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e634:	2d00      	cmp	r5, #0
9000e636:	dc04      	bgt.n	9000e642 <xQueueSemaphoreTake+0x10a>
9000e638:	e011      	b.n	9000e65e <xQueueSemaphoreTake+0x126>
			--cTxLock;
9000e63a:	1e6b      	subs	r3, r5, #1
9000e63c:	b2da      	uxtb	r2, r3
9000e63e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e640:	b16a      	cbz	r2, 9000e65e <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e642:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e644:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e646:	b153      	cbz	r3, 9000e65e <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e648:	f000 fff0 	bl	9000f62c <xTaskRemoveFromEventList>
9000e64c:	2800      	cmp	r0, #0
9000e64e:	d0f4      	beq.n	9000e63a <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
9000e650:	f001 f88a 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000e654:	1e6b      	subs	r3, r5, #1
9000e656:	b2da      	uxtb	r2, r3
9000e658:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e65a:	2a00      	cmp	r2, #0
9000e65c:	d1f1      	bne.n	9000e642 <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e65e:	23ff      	movs	r3, #255	; 0xff
9000e660:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e664:	f7ff f828 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e668:	f7ff f804 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e66c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e670:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e672:	2d00      	cmp	r5, #0
9000e674:	dd14      	ble.n	9000e6a0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e676:	f104 0810 	add.w	r8, r4, #16
9000e67a:	e003      	b.n	9000e684 <xQueueSemaphoreTake+0x14c>
				--cRxLock;
9000e67c:	1e6b      	subs	r3, r5, #1
9000e67e:	b2da      	uxtb	r2, r3
9000e680:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e682:	b16a      	cbz	r2, 9000e6a0 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e684:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e686:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e688:	b153      	cbz	r3, 9000e6a0 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e68a:	f000 ffcf 	bl	9000f62c <xTaskRemoveFromEventList>
9000e68e:	2800      	cmp	r0, #0
9000e690:	d0f4      	beq.n	9000e67c <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
9000e692:	f001 f869 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000e696:	1e6b      	subs	r3, r5, #1
9000e698:	b2da      	uxtb	r2, r3
9000e69a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e69c:	2a00      	cmp	r2, #0
9000e69e:	d1f1      	bne.n	9000e684 <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
9000e6a0:	23ff      	movs	r3, #255	; 0xff
9000e6a2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e6a6:	f7ff f807 	bl	9000d6b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e6aa:	f000 fe9b 	bl	9000f3e4 <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e6ae:	f7fe ffe1 	bl	9000d674 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e6b2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
9000e6b4:	2b00      	cmp	r3, #0
9000e6b6:	d07c      	beq.n	9000e7b2 <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
9000e6b8:	f7fe fffe 	bl	9000d6b8 <vPortExitCritical>
	return xReturn;
9000e6bc:	2501      	movs	r5, #1
9000e6be:	e755      	b.n	9000e56c <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e6c0:	a802      	add	r0, sp, #8
9000e6c2:	f000 fffd 	bl	9000f6c0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e6c6:	e75e      	b.n	9000e586 <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e6c8:	23ff      	movs	r3, #255	; 0xff
9000e6ca:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e6ce:	f7fe fff3 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e6d2:	f7fe ffcf 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e6d6:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e6da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6dc:	2d00      	cmp	r5, #0
9000e6de:	dd10      	ble.n	9000e702 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6e0:	f104 0810 	add.w	r8, r4, #16
9000e6e4:	e003      	b.n	9000e6ee <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
9000e6e6:	1e6b      	subs	r3, r5, #1
9000e6e8:	b2da      	uxtb	r2, r3
9000e6ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e6ec:	b14a      	cbz	r2, 9000e702 <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6ee:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6f0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e6f2:	b133      	cbz	r3, 9000e702 <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6f4:	f000 ff9a 	bl	9000f62c <xTaskRemoveFromEventList>
9000e6f8:	2800      	cmp	r0, #0
9000e6fa:	d0f4      	beq.n	9000e6e6 <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
9000e6fc:	f001 f834 	bl	9000f768 <vTaskMissedYield>
9000e700:	e7f1      	b.n	9000e6e6 <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
9000e702:	23ff      	movs	r3, #255	; 0xff
9000e704:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e708:	f7fe ffd6 	bl	9000d6b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e70c:	f000 fe6a 	bl	9000f3e4 <xTaskResumeAll>
9000e710:	e7d4      	b.n	9000e6bc <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e712:	f7fe ffd1 	bl	9000d6b8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e716:	6823      	ldr	r3, [r4, #0]
9000e718:	2b00      	cmp	r3, #0
9000e71a:	d062      	beq.n	9000e7e2 <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e71c:	9901      	ldr	r1, [sp, #4]
9000e71e:	4630      	mov	r0, r6
9000e720:	f000 fef6 	bl	9000f510 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e724:	f7fe ffa6 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e728:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
9000e72c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e72e:	2d00      	cmp	r5, #0
9000e730:	dc04      	bgt.n	9000e73c <xQueueSemaphoreTake+0x204>
9000e732:	e00d      	b.n	9000e750 <xQueueSemaphoreTake+0x218>
			--cTxLock;
9000e734:	1e6b      	subs	r3, r5, #1
9000e736:	b2da      	uxtb	r2, r3
9000e738:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e73a:	b14a      	cbz	r2, 9000e750 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e73c:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e73e:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e740:	b133      	cbz	r3, 9000e750 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e742:	f000 ff73 	bl	9000f62c <xTaskRemoveFromEventList>
9000e746:	2800      	cmp	r0, #0
9000e748:	d0f4      	beq.n	9000e734 <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
9000e74a:	f001 f80d 	bl	9000f768 <vTaskMissedYield>
9000e74e:	e7f1      	b.n	9000e734 <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
9000e750:	23ff      	movs	r3, #255	; 0xff
9000e752:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
9000e756:	f7fe ffaf 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e75a:	f7fe ff8b 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e75e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
9000e762:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e764:	2d00      	cmp	r5, #0
9000e766:	dd10      	ble.n	9000e78a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e768:	f104 0810 	add.w	r8, r4, #16
9000e76c:	e003      	b.n	9000e776 <xQueueSemaphoreTake+0x23e>
				--cRxLock;
9000e76e:	1e6b      	subs	r3, r5, #1
9000e770:	b2da      	uxtb	r2, r3
9000e772:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e774:	b14a      	cbz	r2, 9000e78a <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e776:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e778:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e77a:	b133      	cbz	r3, 9000e78a <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e77c:	f000 ff56 	bl	9000f62c <xTaskRemoveFromEventList>
9000e780:	2800      	cmp	r0, #0
9000e782:	d0f4      	beq.n	9000e76e <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
9000e784:	f000 fff0 	bl	9000f768 <vTaskMissedYield>
9000e788:	e7f1      	b.n	9000e76e <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
9000e78a:	23ff      	movs	r3, #255	; 0xff
9000e78c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
9000e790:	f7fe ff92 	bl	9000d6b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e794:	f000 fe26 	bl	9000f3e4 <xTaskResumeAll>
9000e798:	2800      	cmp	r0, #0
9000e79a:	d18f      	bne.n	9000e6bc <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
9000e79c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e7a0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e7a4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e7a8:	f3bf 8f4f 	dsb	sy
9000e7ac:	f3bf 8f6f 	isb	sy
9000e7b0:	e784      	b.n	9000e6bc <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
9000e7b2:	f7fe ff81 	bl	9000d6b8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e7b6:	b92f      	cbnz	r7, 9000e7c4 <xQueueSemaphoreTake+0x28c>
}
9000e7b8:	4638      	mov	r0, r7
9000e7ba:	b004      	add	sp, #16
9000e7bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000e7c0:	4607      	mov	r7, r0
9000e7c2:	e6d1      	b.n	9000e568 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
9000e7c4:	f7fe ff56 	bl	9000d674 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e7c8:	6a61      	ldr	r1, [r4, #36]	; 0x24
9000e7ca:	b119      	cbz	r1, 9000e7d4 <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e7cc:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000e7ce:	6819      	ldr	r1, [r3, #0]
9000e7d0:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e7d4:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
9000e7d6:	2700      	movs	r7, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e7d8:	f001 f86e 	bl	9000f8b8 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e7dc:	f7fe ff6c 	bl	9000d6b8 <vPortExitCritical>
9000e7e0:	e7ea      	b.n	9000e7b8 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
9000e7e2:	f7fe ff47 	bl	9000d674 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e7e6:	68a0      	ldr	r0, [r4, #8]
9000e7e8:	f000 ffda 	bl	9000f7a0 <xTaskPriorityInherit>
9000e7ec:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e7ee:	f7fe ff63 	bl	9000d6b8 <vPortExitCritical>
9000e7f2:	e793      	b.n	9000e71c <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e7f4:	2f00      	cmp	r7, #0
9000e7f6:	d0f1      	beq.n	9000e7dc <xQueueSemaphoreTake+0x2a4>
9000e7f8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e7fc:	f383 8811 	msr	BASEPRI, r3
9000e800:	f3bf 8f6f 	isb	sy
9000e804:	f3bf 8f4f 	dsb	sy
9000e808:	e7fe      	b.n	9000e808 <xQueueSemaphoreTake+0x2d0>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e80a:	3b01      	subs	r3, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e80c:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e80e:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e810:	b12a      	cbz	r2, 9000e81e <xQueueSemaphoreTake+0x2e6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e812:	6923      	ldr	r3, [r4, #16]
9000e814:	b93b      	cbnz	r3, 9000e826 <xQueueSemaphoreTake+0x2ee>
				return pdPASS;
9000e816:	2701      	movs	r7, #1
				taskEXIT_CRITICAL();
9000e818:	f7fe ff4e 	bl	9000d6b8 <vPortExitCritical>
				return pdPASS;
9000e81c:	e7cc      	b.n	9000e7b8 <xQueueSemaphoreTake+0x280>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e81e:	f001 f89f 	bl	9000f960 <pvTaskIncrementMutexHeldCount>
9000e822:	60a0      	str	r0, [r4, #8]
9000e824:	e7f5      	b.n	9000e812 <xQueueSemaphoreTake+0x2da>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e826:	f104 0010 	add.w	r0, r4, #16
9000e82a:	f000 feff 	bl	9000f62c <xTaskRemoveFromEventList>
9000e82e:	2800      	cmp	r0, #0
9000e830:	d0f1      	beq.n	9000e816 <xQueueSemaphoreTake+0x2de>
						queueYIELD_IF_USING_PREEMPTION();
9000e832:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000e836:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000e83a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000e83e:	f3bf 8f4f 	dsb	sy
9000e842:	f3bf 8f6f 	isb	sy
9000e846:	e7e6      	b.n	9000e816 <xQueueSemaphoreTake+0x2de>

9000e848 <xQueueTakeMutexRecursive>:
		configASSERT( pxMutex );
9000e848:	b1a8      	cbz	r0, 9000e876 <xQueueTakeMutexRecursive+0x2e>
	{
9000e84a:	b570      	push	{r4, r5, r6, lr}
		if( pxMutex->u.xSemaphore.xMutexHolder == xTaskGetCurrentTaskHandle() )
9000e84c:	6886      	ldr	r6, [r0, #8]
9000e84e:	4604      	mov	r4, r0
9000e850:	460d      	mov	r5, r1
9000e852:	f000 ff8f 	bl	9000f774 <xTaskGetCurrentTaskHandle>
9000e856:	4286      	cmp	r6, r0
9000e858:	d008      	beq.n	9000e86c <xQueueTakeMutexRecursive+0x24>
			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
9000e85a:	4629      	mov	r1, r5
9000e85c:	4620      	mov	r0, r4
9000e85e:	f7ff fe6b 	bl	9000e538 <xQueueSemaphoreTake>
			if( xReturn != pdFAIL )
9000e862:	b110      	cbz	r0, 9000e86a <xQueueTakeMutexRecursive+0x22>
				( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e864:	68e3      	ldr	r3, [r4, #12]
9000e866:	3301      	adds	r3, #1
9000e868:	60e3      	str	r3, [r4, #12]
	}
9000e86a:	bd70      	pop	{r4, r5, r6, pc}
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e86c:	68e3      	ldr	r3, [r4, #12]
			xReturn = pdPASS;
9000e86e:	2001      	movs	r0, #1
			( pxMutex->u.xSemaphore.uxRecursiveCallCount )++;
9000e870:	4403      	add	r3, r0
9000e872:	60e3      	str	r3, [r4, #12]
	}
9000e874:	bd70      	pop	{r4, r5, r6, pc}
9000e876:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e87a:	f383 8811 	msr	BASEPRI, r3
9000e87e:	f3bf 8f6f 	isb	sy
9000e882:	f3bf 8f4f 	dsb	sy
		configASSERT( pxMutex );
9000e886:	e7fe      	b.n	9000e886 <xQueueTakeMutexRecursive+0x3e>

9000e888 <xQueueReceiveFromISR>:
{
9000e888:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e88c:	b310      	cbz	r0, 9000e8d4 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e88e:	460e      	mov	r6, r1
9000e890:	4604      	mov	r4, r0
9000e892:	4617      	mov	r7, r2
9000e894:	b191      	cbz	r1, 9000e8bc <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e896:	f7ff f81f 	bl	9000d8d8 <vPortValidateInterruptPriority>
	__asm volatile
9000e89a:	f3ef 8911 	mrs	r9, BASEPRI
9000e89e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8a2:	f383 8811 	msr	BASEPRI, r3
9000e8a6:	f3bf 8f6f 	isb	sy
9000e8aa:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e8ae:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e8b0:	b9cd      	cbnz	r5, 9000e8e6 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000e8b2:	4628      	mov	r0, r5
	__asm volatile
9000e8b4:	f389 8811 	msr	BASEPRI, r9
}
9000e8b8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e8bc:	6c03      	ldr	r3, [r0, #64]	; 0x40
9000e8be:	2b00      	cmp	r3, #0
9000e8c0:	d0e9      	beq.n	9000e896 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000e8c2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8c6:	f383 8811 	msr	BASEPRI, r3
9000e8ca:	f3bf 8f6f 	isb	sy
9000e8ce:	f3bf 8f4f 	dsb	sy
9000e8d2:	e7fe      	b.n	9000e8d2 <xQueueReceiveFromISR+0x4a>
9000e8d4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e8d8:	f383 8811 	msr	BASEPRI, r3
9000e8dc:	f3bf 8f6f 	isb	sy
9000e8e0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e8e4:	e7fe      	b.n	9000e8e4 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000e8e6:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e8ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000e8ec:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e8f0:	b142      	cbz	r2, 9000e904 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e8f2:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e8f4:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e8f6:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e8f8:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e8fa:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e8fc:	d215      	bcs.n	9000e92a <xQueueReceiveFromISR+0xa2>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e8fe:	4630      	mov	r0, r6
9000e900:	f018 f83f 	bl	90026982 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e904:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000e906:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e90a:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
9000e90c:	d009      	beq.n	9000e922 <xQueueReceiveFromISR+0x9a>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e90e:	f108 0301 	add.w	r3, r8, #1
			xReturn = pdPASS;
9000e912:	2001      	movs	r0, #1
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000e914:	b25b      	sxtb	r3, r3
9000e916:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	__asm volatile
9000e91a:	f389 8811 	msr	BASEPRI, r9
}
9000e91e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e922:	6923      	ldr	r3, [r4, #16]
9000e924:	b923      	cbnz	r3, 9000e930 <xQueueReceiveFromISR+0xa8>
			xReturn = pdPASS;
9000e926:	2001      	movs	r0, #1
9000e928:	e7c4      	b.n	9000e8b4 <xQueueReceiveFromISR+0x2c>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e92a:	6821      	ldr	r1, [r4, #0]
9000e92c:	60e1      	str	r1, [r4, #12]
9000e92e:	e7e6      	b.n	9000e8fe <xQueueReceiveFromISR+0x76>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e930:	f104 0010 	add.w	r0, r4, #16
9000e934:	f000 fe7a 	bl	9000f62c <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000e938:	2f00      	cmp	r7, #0
9000e93a:	d0f4      	beq.n	9000e926 <xQueueReceiveFromISR+0x9e>
9000e93c:	2800      	cmp	r0, #0
9000e93e:	d0f2      	beq.n	9000e926 <xQueueReceiveFromISR+0x9e>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e940:	2301      	movs	r3, #1
			xReturn = pdPASS;
9000e942:	4618      	mov	r0, r3
							*pxHigherPriorityTaskWoken = pdTRUE;
9000e944:	603b      	str	r3, [r7, #0]
9000e946:	e7b5      	b.n	9000e8b4 <xQueueReceiveFromISR+0x2c>

9000e948 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
9000e948:	b158      	cbz	r0, 9000e962 <uxQueueMessagesWaiting+0x1a>
{
9000e94a:	b510      	push	{r4, lr}
9000e94c:	4604      	mov	r4, r0
9000e94e:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
9000e950:	f7fe fe90 	bl	9000d674 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
9000e954:	6ba0      	ldr	r0, [r4, #56]	; 0x38
9000e956:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000e958:	f7fe feae 	bl	9000d6b8 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e95c:	9801      	ldr	r0, [sp, #4]
9000e95e:	b002      	add	sp, #8
9000e960:	bd10      	pop	{r4, pc}
	__asm volatile
9000e962:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e966:	f383 8811 	msr	BASEPRI, r3
9000e96a:	f3bf 8f6f 	isb	sy
9000e96e:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
9000e972:	e7fe      	b.n	9000e972 <uxQueueMessagesWaiting+0x2a>

9000e974 <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
9000e974:	b108      	cbz	r0, 9000e97a <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
9000e976:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
9000e978:	4770      	bx	lr
9000e97a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e97e:	f383 8811 	msr	BASEPRI, r3
9000e982:	f3bf 8f6f 	isb	sy
9000e986:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e98a:	e7fe      	b.n	9000e98a <uxQueueMessagesWaitingFromISR+0x16>
9000e98c:	0000      	movs	r0, r0
	...

9000e990 <vQueueDelete>:
	configASSERT( pxQueue );
9000e990:	b1e0      	cbz	r0, 9000e9cc <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000e992:	4b21      	ldr	r3, [pc, #132]	; (9000ea18 <vQueueDelete+0x88>)
9000e994:	685a      	ldr	r2, [r3, #4]
9000e996:	4290      	cmp	r0, r2
9000e998:	d02b      	beq.n	9000e9f2 <vQueueDelete+0x62>
9000e99a:	68da      	ldr	r2, [r3, #12]
9000e99c:	4290      	cmp	r0, r2
9000e99e:	d02a      	beq.n	9000e9f6 <vQueueDelete+0x66>
9000e9a0:	695a      	ldr	r2, [r3, #20]
9000e9a2:	4290      	cmp	r0, r2
9000e9a4:	d029      	beq.n	9000e9fa <vQueueDelete+0x6a>
9000e9a6:	69da      	ldr	r2, [r3, #28]
9000e9a8:	4290      	cmp	r0, r2
9000e9aa:	d028      	beq.n	9000e9fe <vQueueDelete+0x6e>
9000e9ac:	6a5a      	ldr	r2, [r3, #36]	; 0x24
9000e9ae:	4290      	cmp	r0, r2
9000e9b0:	d027      	beq.n	9000ea02 <vQueueDelete+0x72>
9000e9b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
9000e9b4:	4290      	cmp	r0, r2
9000e9b6:	d014      	beq.n	9000e9e2 <vQueueDelete+0x52>
9000e9b8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
9000e9ba:	4290      	cmp	r0, r2
9000e9bc:	d023      	beq.n	9000ea06 <vQueueDelete+0x76>
9000e9be:	6bda      	ldr	r2, [r3, #60]	; 0x3c
9000e9c0:	4290      	cmp	r0, r2
9000e9c2:	d022      	beq.n	9000ea0a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000e9c4:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
9000e9c8:	b14b      	cbz	r3, 9000e9de <vQueueDelete+0x4e>
}
9000e9ca:	4770      	bx	lr
9000e9cc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000e9d0:	f383 8811 	msr	BASEPRI, r3
9000e9d4:	f3bf 8f6f 	isb	sy
9000e9d8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e9dc:	e7fe      	b.n	9000e9dc <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000e9de:	f7fe bd2d 	b.w	9000d43c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e9e2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000e9e4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000e9e8:	ed9f 7b09 	vldr	d7, [pc, #36]	; 9000ea10 <vQueueDelete+0x80>
9000e9ec:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000e9f0:	e7e8      	b.n	9000e9c4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000e9f2:	2200      	movs	r2, #0
9000e9f4:	e7f6      	b.n	9000e9e4 <vQueueDelete+0x54>
9000e9f6:	2201      	movs	r2, #1
9000e9f8:	e7f4      	b.n	9000e9e4 <vQueueDelete+0x54>
9000e9fa:	2202      	movs	r2, #2
9000e9fc:	e7f2      	b.n	9000e9e4 <vQueueDelete+0x54>
9000e9fe:	2203      	movs	r2, #3
9000ea00:	e7f0      	b.n	9000e9e4 <vQueueDelete+0x54>
9000ea02:	2204      	movs	r2, #4
9000ea04:	e7ee      	b.n	9000e9e4 <vQueueDelete+0x54>
9000ea06:	2206      	movs	r2, #6
9000ea08:	e7ec      	b.n	9000e9e4 <vQueueDelete+0x54>
9000ea0a:	2207      	movs	r2, #7
9000ea0c:	e7ea      	b.n	9000e9e4 <vQueueDelete+0x54>
9000ea0e:	bf00      	nop
	...
9000ea18:	24022f08 	.word	0x24022f08

9000ea1c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000ea1c:	4b12      	ldr	r3, [pc, #72]	; (9000ea68 <vQueueAddToRegistry+0x4c>)
9000ea1e:	681a      	ldr	r2, [r3, #0]
9000ea20:	b17a      	cbz	r2, 9000ea42 <vQueueAddToRegistry+0x26>
9000ea22:	689a      	ldr	r2, [r3, #8]
9000ea24:	b162      	cbz	r2, 9000ea40 <vQueueAddToRegistry+0x24>
9000ea26:	691a      	ldr	r2, [r3, #16]
9000ea28:	b192      	cbz	r2, 9000ea50 <vQueueAddToRegistry+0x34>
9000ea2a:	699a      	ldr	r2, [r3, #24]
9000ea2c:	b192      	cbz	r2, 9000ea54 <vQueueAddToRegistry+0x38>
9000ea2e:	6a1a      	ldr	r2, [r3, #32]
9000ea30:	b192      	cbz	r2, 9000ea58 <vQueueAddToRegistry+0x3c>
9000ea32:	6a9a      	ldr	r2, [r3, #40]	; 0x28
9000ea34:	b192      	cbz	r2, 9000ea5c <vQueueAddToRegistry+0x40>
9000ea36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
9000ea38:	b192      	cbz	r2, 9000ea60 <vQueueAddToRegistry+0x44>
9000ea3a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
9000ea3c:	b192      	cbz	r2, 9000ea64 <vQueueAddToRegistry+0x48>
	}
9000ea3e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ea40:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000ea42:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000ea46:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000ea4a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000ea4e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000ea50:	2202      	movs	r2, #2
9000ea52:	e7f6      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea54:	2203      	movs	r2, #3
9000ea56:	e7f4      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea58:	2204      	movs	r2, #4
9000ea5a:	e7f2      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea5c:	2205      	movs	r2, #5
9000ea5e:	e7f0      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea60:	2206      	movs	r2, #6
9000ea62:	e7ee      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea64:	2207      	movs	r2, #7
9000ea66:	e7ec      	b.n	9000ea42 <vQueueAddToRegistry+0x26>
9000ea68:	24022f08 	.word	0x24022f08

9000ea6c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000ea6c:	b570      	push	{r4, r5, r6, lr}
9000ea6e:	4605      	mov	r5, r0
9000ea70:	460e      	mov	r6, r1
9000ea72:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000ea74:	f7fe fdfe 	bl	9000d674 <vPortEnterCritical>
9000ea78:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000ea7c:	2bff      	cmp	r3, #255	; 0xff
9000ea7e:	d102      	bne.n	9000ea86 <vQueueWaitForMessageRestricted+0x1a>
9000ea80:	2300      	movs	r3, #0
9000ea82:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
9000ea86:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000ea8a:	2bff      	cmp	r3, #255	; 0xff
9000ea8c:	d102      	bne.n	9000ea94 <vQueueWaitForMessageRestricted+0x28>
9000ea8e:	2300      	movs	r3, #0
9000ea90:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
9000ea94:	f7fe fe10 	bl	9000d6b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000ea98:	6bab      	ldr	r3, [r5, #56]	; 0x38
9000ea9a:	2b00      	cmp	r3, #0
9000ea9c:	d043      	beq.n	9000eb26 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000ea9e:	f7fe fde9 	bl	9000d674 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000eaa2:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
9000eaa6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eaa8:	2c00      	cmp	r4, #0
9000eaaa:	dd14      	ble.n	9000ead6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eaac:	f105 0624 	add.w	r6, r5, #36	; 0x24
9000eab0:	e003      	b.n	9000eaba <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000eab2:	1e63      	subs	r3, r4, #1
9000eab4:	b2da      	uxtb	r2, r3
9000eab6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000eab8:	b16a      	cbz	r2, 9000ead6 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eaba:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eabc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000eabe:	b153      	cbz	r3, 9000ead6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000eac0:	f000 fdb4 	bl	9000f62c <xTaskRemoveFromEventList>
9000eac4:	2800      	cmp	r0, #0
9000eac6:	d0f4      	beq.n	9000eab2 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000eac8:	f000 fe4e 	bl	9000f768 <vTaskMissedYield>
			--cTxLock;
9000eacc:	1e63      	subs	r3, r4, #1
9000eace:	b2da      	uxtb	r2, r3
9000ead0:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ead2:	2a00      	cmp	r2, #0
9000ead4:	d1f1      	bne.n	9000eaba <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ead6:	23ff      	movs	r3, #255	; 0xff
9000ead8:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
9000eadc:	f7fe fdec 	bl	9000d6b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000eae0:	f7fe fdc8 	bl	9000d674 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000eae4:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
9000eae8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eaea:	2c00      	cmp	r4, #0
9000eaec:	dd14      	ble.n	9000eb18 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eaee:	f105 0610 	add.w	r6, r5, #16
9000eaf2:	e003      	b.n	9000eafc <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000eaf4:	1e63      	subs	r3, r4, #1
9000eaf6:	b2da      	uxtb	r2, r3
9000eaf8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eafa:	b16a      	cbz	r2, 9000eb18 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eafc:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eafe:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000eb00:	b153      	cbz	r3, 9000eb18 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000eb02:	f000 fd93 	bl	9000f62c <xTaskRemoveFromEventList>
9000eb06:	2800      	cmp	r0, #0
9000eb08:	d0f4      	beq.n	9000eaf4 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000eb0a:	f000 fe2d 	bl	9000f768 <vTaskMissedYield>
				--cRxLock;
9000eb0e:	1e63      	subs	r3, r4, #1
9000eb10:	b2da      	uxtb	r2, r3
9000eb12:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000eb14:	2a00      	cmp	r2, #0
9000eb16:	d1f1      	bne.n	9000eafc <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000eb18:	23ff      	movs	r3, #255	; 0xff
9000eb1a:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000eb1e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000eb22:	f7fe bdc9 	b.w	9000d6b8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000eb26:	4622      	mov	r2, r4
9000eb28:	4631      	mov	r1, r6
9000eb2a:	f105 0024 	add.w	r0, r5, #36	; 0x24
9000eb2e:	f000 fd33 	bl	9000f598 <vTaskPlaceOnEventListRestricted>
9000eb32:	e7b4      	b.n	9000ea9e <vQueueWaitForMessageRestricted+0x32>

9000eb34 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000eb34:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000eb38:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000eb3a:	f7fe fd9b 	bl	9000d674 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000eb3e:	4a34      	ldr	r2, [pc, #208]	; (9000ec10 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
9000eb40:	4e34      	ldr	r6, [pc, #208]	; (9000ec14 <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
9000eb42:	6813      	ldr	r3, [r2, #0]
9000eb44:	3301      	adds	r3, #1
9000eb46:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000eb48:	6833      	ldr	r3, [r6, #0]
9000eb4a:	2b00      	cmp	r3, #0
9000eb4c:	d032      	beq.n	9000ebb4 <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000eb4e:	4c32      	ldr	r4, [pc, #200]	; (9000ec18 <prvAddNewTaskToReadyList+0xe4>)
9000eb50:	6823      	ldr	r3, [r4, #0]
9000eb52:	b33b      	cbz	r3, 9000eba4 <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000eb54:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000eb56:	4f31      	ldr	r7, [pc, #196]	; (9000ec1c <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000eb58:	4a31      	ldr	r2, [pc, #196]	; (9000ec20 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000eb5a:	4932      	ldr	r1, [pc, #200]	; (9000ec24 <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
9000eb5c:	6813      	ldr	r3, [r2, #0]
9000eb5e:	3301      	adds	r3, #1
9000eb60:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000eb62:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000eb64:	680b      	ldr	r3, [r1, #0]
9000eb66:	4283      	cmp	r3, r0
9000eb68:	d200      	bcs.n	9000eb6c <prvAddNewTaskToReadyList+0x38>
9000eb6a:	6008      	str	r0, [r1, #0]
9000eb6c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000eb70:	1d29      	adds	r1, r5, #4
9000eb72:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000eb76:	f7fe fcd5 	bl	9000d524 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000eb7a:	f7fe fd9d 	bl	9000d6b8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000eb7e:	6823      	ldr	r3, [r4, #0]
9000eb80:	b173      	cbz	r3, 9000eba0 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000eb82:	6832      	ldr	r2, [r6, #0]
9000eb84:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
9000eb86:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000eb88:	429a      	cmp	r2, r3
9000eb8a:	d209      	bcs.n	9000eba0 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000eb8c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eb90:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eb94:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000eb98:	f3bf 8f4f 	dsb	sy
9000eb9c:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000eba0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000eba4:	6833      	ldr	r3, [r6, #0]
9000eba6:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000eba8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ebaa:	4f1c      	ldr	r7, [pc, #112]	; (9000ec1c <prvAddNewTaskToReadyList+0xe8>)
9000ebac:	4283      	cmp	r3, r0
9000ebae:	d8d3      	bhi.n	9000eb58 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ebb0:	6035      	str	r5, [r6, #0]
9000ebb2:	e7d1      	b.n	9000eb58 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000ebb4:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000ebb6:	6813      	ldr	r3, [r2, #0]
9000ebb8:	2b01      	cmp	r3, #1
9000ebba:	d003      	beq.n	9000ebc4 <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ebbc:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
9000ebbe:	4f17      	ldr	r7, [pc, #92]	; (9000ec1c <prvAddNewTaskToReadyList+0xe8>)
9000ebc0:	4c15      	ldr	r4, [pc, #84]	; (9000ec18 <prvAddNewTaskToReadyList+0xe4>)
9000ebc2:	e7c9      	b.n	9000eb58 <prvAddNewTaskToReadyList+0x24>
9000ebc4:	4f15      	ldr	r7, [pc, #84]	; (9000ec1c <prvAddNewTaskToReadyList+0xe8>)
9000ebc6:	463c      	mov	r4, r7
9000ebc8:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ebcc:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ebce:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ebd0:	f7fe fc98 	bl	9000d504 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ebd4:	45a0      	cmp	r8, r4
9000ebd6:	d1f9      	bne.n	9000ebcc <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
9000ebd8:	f8df 9060 	ldr.w	r9, [pc, #96]	; 9000ec3c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ebdc:	f8df 8060 	ldr.w	r8, [pc, #96]	; 9000ec40 <prvAddNewTaskToReadyList+0x10c>
	vListInitialise( &xDelayedTaskList1 );
9000ebe0:	4648      	mov	r0, r9
9000ebe2:	4c0d      	ldr	r4, [pc, #52]	; (9000ec18 <prvAddNewTaskToReadyList+0xe4>)
9000ebe4:	f7fe fc8e 	bl	9000d504 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ebe8:	4640      	mov	r0, r8
9000ebea:	f7fe fc8b 	bl	9000d504 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ebee:	480e      	ldr	r0, [pc, #56]	; (9000ec28 <prvAddNewTaskToReadyList+0xf4>)
9000ebf0:	f7fe fc88 	bl	9000d504 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000ebf4:	480d      	ldr	r0, [pc, #52]	; (9000ec2c <prvAddNewTaskToReadyList+0xf8>)
9000ebf6:	f7fe fc85 	bl	9000d504 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ebfa:	480d      	ldr	r0, [pc, #52]	; (9000ec30 <prvAddNewTaskToReadyList+0xfc>)
9000ebfc:	f7fe fc82 	bl	9000d504 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ec00:	4b0c      	ldr	r3, [pc, #48]	; (9000ec34 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ec02:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ec04:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ec08:	4b0b      	ldr	r3, [pc, #44]	; (9000ec38 <prvAddNewTaskToReadyList+0x104>)
9000ec0a:	f8c3 8000 	str.w	r8, [r3]
}
9000ec0e:	e7a3      	b.n	9000eb58 <prvAddNewTaskToReadyList+0x24>
9000ec10:	240233b4 	.word	0x240233b4
9000ec14:	24022f48 	.word	0x24022f48
9000ec18:	24023410 	.word	0x24023410
9000ec1c:	24022f54 	.word	0x24022f54
9000ec20:	240233c0 	.word	0x240233c0
9000ec24:	240233c4 	.word	0x240233c4
9000ec28:	240233fc 	.word	0x240233fc
9000ec2c:	24023428 	.word	0x24023428
9000ec30:	24023414 	.word	0x24023414
9000ec34:	24022f4c 	.word	0x24022f4c
9000ec38:	24022f50 	.word	0x24022f50
9000ec3c:	240233c8 	.word	0x240233c8
9000ec40:	240233dc 	.word	0x240233dc

9000ec44 <prvIdleTask>:
{
9000ec44:	b580      	push	{r7, lr}
9000ec46:	4c22      	ldr	r4, [pc, #136]	; (9000ecd0 <prvIdleTask+0x8c>)
				taskYIELD();
9000ec48:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000ec4c:	4e21      	ldr	r6, [pc, #132]	; (9000ecd4 <prvIdleTask+0x90>)
9000ec4e:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
9000ec52:	4d21      	ldr	r5, [pc, #132]	; (9000ecd8 <prvIdleTask+0x94>)
9000ec54:	4f21      	ldr	r7, [pc, #132]	; (9000ecdc <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ec56:	6823      	ldr	r3, [r4, #0]
9000ec58:	b353      	cbz	r3, 9000ecb0 <prvIdleTask+0x6c>
		{
			taskENTER_CRITICAL();
9000ec5a:	f7fe fd0b 	bl	9000d674 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ec5e:	68f3      	ldr	r3, [r6, #12]
9000ec60:	f8d3 a00c 	ldr.w	sl, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ec64:	f10a 0004 	add.w	r0, sl, #4
9000ec68:	f7fe fc84 	bl	9000d574 <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ec6c:	682b      	ldr	r3, [r5, #0]
9000ec6e:	3b01      	subs	r3, #1
9000ec70:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ec72:	6823      	ldr	r3, [r4, #0]
9000ec74:	3b01      	subs	r3, #1
9000ec76:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ec78:	f7fe fd1e 	bl	9000d6b8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ec7c:	f89a 305d 	ldrb.w	r3, [sl, #93]	; 0x5d
9000ec80:	b163      	cbz	r3, 9000ec9c <prvIdleTask+0x58>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ec82:	2b01      	cmp	r3, #1
9000ec84:	d020      	beq.n	9000ecc8 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ec86:	2b02      	cmp	r3, #2
9000ec88:	d0e5      	beq.n	9000ec56 <prvIdleTask+0x12>
9000ec8a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ec8e:	f383 8811 	msr	BASEPRI, r3
9000ec92:	f3bf 8f6f 	isb	sy
9000ec96:	f3bf 8f4f 	dsb	sy
9000ec9a:	e7fe      	b.n	9000ec9a <prvIdleTask+0x56>
				vPortFree( pxTCB->pxStack );
9000ec9c:	f8da 0030 	ldr.w	r0, [sl, #48]	; 0x30
9000eca0:	f7fe fbcc 	bl	9000d43c <vPortFree>
				vPortFree( pxTCB );
9000eca4:	4650      	mov	r0, sl
9000eca6:	f7fe fbc9 	bl	9000d43c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ecaa:	6823      	ldr	r3, [r4, #0]
9000ecac:	2b00      	cmp	r3, #0
9000ecae:	d1d4      	bne.n	9000ec5a <prvIdleTask+0x16>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000ecb0:	683b      	ldr	r3, [r7, #0]
9000ecb2:	2b01      	cmp	r3, #1
9000ecb4:	d905      	bls.n	9000ecc2 <prvIdleTask+0x7e>
				taskYIELD();
9000ecb6:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
9000ecba:	f3bf 8f4f 	dsb	sy
9000ecbe:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000ecc2:	f7f3 ff25 	bl	90002b10 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000ecc6:	e7c6      	b.n	9000ec56 <prvIdleTask+0x12>
				vPortFree( pxTCB );
9000ecc8:	4650      	mov	r0, sl
9000ecca:	f7fe fbb7 	bl	9000d43c <vPortFree>
9000ecce:	e7c2      	b.n	9000ec56 <prvIdleTask+0x12>
9000ecd0:	240233b8 	.word	0x240233b8
9000ecd4:	24023428 	.word	0x24023428
9000ecd8:	240233b4 	.word	0x240233b4
9000ecdc:	24022f54 	.word	0x24022f54

9000ece0 <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ece0:	4b4a      	ldr	r3, [pc, #296]	; (9000ee0c <xTaskIncrementTick.part.0+0x12c>)
BaseType_t xTaskIncrementTick( void )
9000ece2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ece6:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000ece8:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000ecea:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000ecec:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000ecee:	2e00      	cmp	r6, #0
9000ecf0:	d040      	beq.n	9000ed74 <xTaskIncrementTick.part.0+0x94>
9000ecf2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 9000ee20 <xTaskIncrementTick.part.0+0x140>
		if( xConstTickCount >= xNextTaskUnblockTime )
9000ecf6:	f8db 3000 	ldr.w	r3, [fp]
9000ecfa:	429e      	cmp	r6, r3
9000ecfc:	d347      	bcc.n	9000ed8e <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ecfe:	4f44      	ldr	r7, [pc, #272]	; (9000ee10 <xTaskIncrementTick.part.0+0x130>)
9000ed00:	683b      	ldr	r3, [r7, #0]
9000ed02:	681d      	ldr	r5, [r3, #0]
9000ed04:	2d00      	cmp	r5, #0
9000ed06:	d077      	beq.n	9000edf8 <xTaskIncrementTick.part.0+0x118>
BaseType_t xSwitchRequired = pdFALSE;
9000ed08:	2500      	movs	r5, #0
9000ed0a:	f8df 9118 	ldr.w	r9, [pc, #280]	; 9000ee24 <xTaskIncrementTick.part.0+0x144>
9000ed0e:	f8df a118 	ldr.w	sl, [pc, #280]	; 9000ee28 <xTaskIncrementTick.part.0+0x148>
					prvAddTaskToReadyList( pxTCB );
9000ed12:	f8df 8118 	ldr.w	r8, [pc, #280]	; 9000ee2c <xTaskIncrementTick.part.0+0x14c>
9000ed16:	e022      	b.n	9000ed5e <xTaskIncrementTick.part.0+0x7e>
9000ed18:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed1a:	f7fe fc2b 	bl	9000d574 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ed1e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ed20:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ed24:	9901      	ldr	r1, [sp, #4]
9000ed26:	b113      	cbz	r3, 9000ed2e <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ed28:	f7fe fc24 	bl	9000d574 <uxListRemove>
9000ed2c:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
9000ed2e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ed30:	f8d8 2000 	ldr.w	r2, [r8]
9000ed34:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ed38:	4293      	cmp	r3, r2
9000ed3a:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ed3e:	d901      	bls.n	9000ed44 <xTaskIncrementTick.part.0+0x64>
9000ed40:	f8c8 3000 	str.w	r3, [r8]
9000ed44:	f7fe fbee 	bl	9000d524 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ed48:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed4c:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ed4e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
9000ed50:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed52:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ed54:	4291      	cmp	r1, r2
9000ed56:	bf28      	it	cs
9000ed58:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ed5a:	2b00      	cmp	r3, #0
9000ed5c:	d050      	beq.n	9000ee00 <xTaskIncrementTick.part.0+0x120>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed5e:	683b      	ldr	r3, [r7, #0]
9000ed60:	68db      	ldr	r3, [r3, #12]
9000ed62:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ed64:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed66:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
9000ed68:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed6a:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
9000ed6c:	d2d4      	bcs.n	9000ed18 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
9000ed6e:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000ed72:	e011      	b.n	9000ed98 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
9000ed74:	4b26      	ldr	r3, [pc, #152]	; (9000ee10 <xTaskIncrementTick.part.0+0x130>)
9000ed76:	681a      	ldr	r2, [r3, #0]
9000ed78:	6812      	ldr	r2, [r2, #0]
9000ed7a:	b30a      	cbz	r2, 9000edc0 <xTaskIncrementTick.part.0+0xe0>
9000ed7c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ed80:	f383 8811 	msr	BASEPRI, r3
9000ed84:	f3bf 8f6f 	isb	sy
9000ed88:	f3bf 8f4f 	dsb	sy
9000ed8c:	e7fe      	b.n	9000ed8c <xTaskIncrementTick.part.0+0xac>
BaseType_t xSwitchRequired = pdFALSE;
9000ed8e:	2500      	movs	r5, #0
9000ed90:	f8df 9090 	ldr.w	r9, [pc, #144]	; 9000ee24 <xTaskIncrementTick.part.0+0x144>
9000ed94:	f8df a090 	ldr.w	sl, [pc, #144]	; 9000ee28 <xTaskIncrementTick.part.0+0x148>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ed98:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000ed9c:	491d      	ldr	r1, [pc, #116]	; (9000ee14 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000ed9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000eda0:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000eda4:	009b      	lsls	r3, r3, #2
9000eda6:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000edaa:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000edac:	2a02      	cmp	r2, #2
9000edae:	bf28      	it	cs
9000edb0:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000edb2:	2b00      	cmp	r3, #0
}
9000edb4:	bf0c      	ite	eq
9000edb6:	4628      	moveq	r0, r5
9000edb8:	2001      	movne	r0, #1
9000edba:	b003      	add	sp, #12
9000edbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000edc0:	4a15      	ldr	r2, [pc, #84]	; (9000ee18 <xTaskIncrementTick.part.0+0x138>)
9000edc2:	6818      	ldr	r0, [r3, #0]
9000edc4:	6811      	ldr	r1, [r2, #0]
9000edc6:	6019      	str	r1, [r3, #0]
9000edc8:	4914      	ldr	r1, [pc, #80]	; (9000ee1c <xTaskIncrementTick.part.0+0x13c>)
9000edca:	6010      	str	r0, [r2, #0]
9000edcc:	680a      	ldr	r2, [r1, #0]
9000edce:	3201      	adds	r2, #1
9000edd0:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000edd2:	681a      	ldr	r2, [r3, #0]
9000edd4:	6812      	ldr	r2, [r2, #0]
9000edd6:	b932      	cbnz	r2, 9000ede6 <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000edd8:	f8df b044 	ldr.w	fp, [pc, #68]	; 9000ee20 <xTaskIncrementTick.part.0+0x140>
9000eddc:	f04f 33ff 	mov.w	r3, #4294967295
9000ede0:	f8cb 3000 	str.w	r3, [fp]
9000ede4:	e787      	b.n	9000ecf6 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ede6:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000ede8:	f8df b034 	ldr.w	fp, [pc, #52]	; 9000ee20 <xTaskIncrementTick.part.0+0x140>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000edec:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000edee:	68db      	ldr	r3, [r3, #12]
9000edf0:	685b      	ldr	r3, [r3, #4]
9000edf2:	f8cb 3000 	str.w	r3, [fp]
	}
}
9000edf6:	e77e      	b.n	9000ecf6 <xTaskIncrementTick.part.0+0x16>
9000edf8:	f8df 9028 	ldr.w	r9, [pc, #40]	; 9000ee24 <xTaskIncrementTick.part.0+0x144>
9000edfc:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000ee28 <xTaskIncrementTick.part.0+0x148>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ee00:	f04f 33ff 	mov.w	r3, #4294967295
9000ee04:	f8cb 3000 	str.w	r3, [fp]
					break;
9000ee08:	e7c6      	b.n	9000ed98 <xTaskIncrementTick.part.0+0xb8>
9000ee0a:	bf00      	nop
9000ee0c:	2402343c 	.word	0x2402343c
9000ee10:	24022f4c 	.word	0x24022f4c
9000ee14:	24023440 	.word	0x24023440
9000ee18:	24022f50 	.word	0x24022f50
9000ee1c:	240233f4 	.word	0x240233f4
9000ee20:	240233f0 	.word	0x240233f0
9000ee24:	24022f54 	.word	0x24022f54
9000ee28:	24022f48 	.word	0x24022f48
9000ee2c:	240233c4 	.word	0x240233c4

9000ee30 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000ee30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000ee34:	4d41      	ldr	r5, [pc, #260]	; (9000ef3c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
9000ee36:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
9000ee38:	f7fe fc1c 	bl	9000d674 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000ee3c:	682b      	ldr	r3, [r5, #0]
9000ee3e:	3b01      	subs	r3, #1
9000ee40:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ee42:	682b      	ldr	r3, [r5, #0]
9000ee44:	2b00      	cmp	r3, #0
9000ee46:	d161      	bne.n	9000ef0c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ee48:	4b3d      	ldr	r3, [pc, #244]	; (9000ef40 <xTaskResumeAll.part.0+0x110>)
9000ee4a:	681b      	ldr	r3, [r3, #0]
9000ee4c:	2b00      	cmp	r3, #0
9000ee4e:	d05d      	beq.n	9000ef0c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ee50:	4e3c      	ldr	r6, [pc, #240]	; (9000ef44 <xTaskResumeAll.part.0+0x114>)
9000ee52:	6833      	ldr	r3, [r6, #0]
9000ee54:	2b00      	cmp	r3, #0
9000ee56:	d06e      	beq.n	9000ef36 <xTaskResumeAll.part.0+0x106>
9000ee58:	4f3b      	ldr	r7, [pc, #236]	; (9000ef48 <xTaskResumeAll.part.0+0x118>)
9000ee5a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 9000ef58 <xTaskResumeAll.part.0+0x128>
9000ee5e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 9000ef5c <xTaskResumeAll.part.0+0x12c>
9000ee62:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 9000ef60 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee66:	68f3      	ldr	r3, [r6, #12]
9000ee68:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee6a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ee6e:	f104 0018 	add.w	r0, r4, #24
9000ee72:	f7fe fb7f 	bl	9000d574 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee76:	4658      	mov	r0, fp
9000ee78:	f7fe fb7c 	bl	9000d574 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ee7c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000ee7e:	683a      	ldr	r2, [r7, #0]
9000ee80:	4659      	mov	r1, fp
9000ee82:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ee86:	4293      	cmp	r3, r2
9000ee88:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ee8c:	d900      	bls.n	9000ee90 <xTaskResumeAll.part.0+0x60>
9000ee8e:	603b      	str	r3, [r7, #0]
9000ee90:	f7fe fb48 	bl	9000d524 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ee94:	f8d8 3000 	ldr.w	r3, [r8]
9000ee98:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000ee9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000ee9c:	429a      	cmp	r2, r3
9000ee9e:	d33d      	bcc.n	9000ef1c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
9000eea0:	2301      	movs	r3, #1
9000eea2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000eea6:	6833      	ldr	r3, [r6, #0]
9000eea8:	2b00      	cmp	r3, #0
9000eeaa:	d1dc      	bne.n	9000ee66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eeac:	4b27      	ldr	r3, [pc, #156]	; (9000ef4c <xTaskResumeAll.part.0+0x11c>)
9000eeae:	681a      	ldr	r2, [r3, #0]
9000eeb0:	6812      	ldr	r2, [r2, #0]
9000eeb2:	2a00      	cmp	r2, #0
9000eeb4:	d03a      	beq.n	9000ef2c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eeb6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000eeb8:	4b25      	ldr	r3, [pc, #148]	; (9000ef50 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eeba:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000eebc:	68d2      	ldr	r2, [r2, #12]
9000eebe:	6852      	ldr	r2, [r2, #4]
9000eec0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000eec2:	4e24      	ldr	r6, [pc, #144]	; (9000ef54 <xTaskResumeAll.part.0+0x124>)
9000eec4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000eec6:	b194      	cbz	r4, 9000eeee <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
9000eec8:	2701      	movs	r7, #1
9000eeca:	e006      	b.n	9000eeda <xTaskResumeAll.part.0+0xaa>
9000eecc:	f7ff ff08 	bl	9000ece0 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000eed0:	b108      	cbz	r0, 9000eed6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
9000eed2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eed6:	3c01      	subs	r4, #1
9000eed8:	d008      	beq.n	9000eeec <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000eeda:	682b      	ldr	r3, [r5, #0]
9000eedc:	2b00      	cmp	r3, #0
9000eede:	d0f5      	beq.n	9000eecc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
9000eee0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eee2:	3c01      	subs	r4, #1
		++xPendedTicks;
9000eee4:	f103 0301 	add.w	r3, r3, #1
9000eee8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eeea:	d1f6      	bne.n	9000eeda <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
9000eeec:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000eeee:	f8da 3000 	ldr.w	r3, [sl]
9000eef2:	b15b      	cbz	r3, 9000ef0c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
9000eef4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000eef8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000eefc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000ef00:	f3bf 8f4f 	dsb	sy
9000ef04:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000ef08:	2001      	movs	r0, #1
9000ef0a:	e000      	b.n	9000ef0e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
9000ef0c:	2000      	movs	r0, #0
9000ef0e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000ef10:	f7fe fbd2 	bl	9000d6b8 <vPortExitCritical>
}
9000ef14:	9801      	ldr	r0, [sp, #4]
9000ef16:	b003      	add	sp, #12
9000ef18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ef1c:	6833      	ldr	r3, [r6, #0]
9000ef1e:	2b00      	cmp	r3, #0
9000ef20:	d1a1      	bne.n	9000ee66 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ef22:	4b0a      	ldr	r3, [pc, #40]	; (9000ef4c <xTaskResumeAll.part.0+0x11c>)
9000ef24:	681a      	ldr	r2, [r3, #0]
9000ef26:	6812      	ldr	r2, [r2, #0]
9000ef28:	2a00      	cmp	r2, #0
9000ef2a:	d1c4      	bne.n	9000eeb6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
9000ef2c:	4b08      	ldr	r3, [pc, #32]	; (9000ef50 <xTaskResumeAll.part.0+0x120>)
9000ef2e:	f04f 32ff 	mov.w	r2, #4294967295
9000ef32:	601a      	str	r2, [r3, #0]
9000ef34:	e7c5      	b.n	9000eec2 <xTaskResumeAll.part.0+0x92>
9000ef36:	f8df a028 	ldr.w	sl, [pc, #40]	; 9000ef60 <xTaskResumeAll.part.0+0x130>
9000ef3a:	e7c2      	b.n	9000eec2 <xTaskResumeAll.part.0+0x92>
9000ef3c:	240233bc 	.word	0x240233bc
9000ef40:	240233b4 	.word	0x240233b4
9000ef44:	240233fc 	.word	0x240233fc
9000ef48:	240233c4 	.word	0x240233c4
9000ef4c:	24022f4c 	.word	0x24022f4c
9000ef50:	240233f0 	.word	0x240233f0
9000ef54:	240233f8 	.word	0x240233f8
9000ef58:	24022f54 	.word	0x24022f54
9000ef5c:	24022f48 	.word	0x24022f48
9000ef60:	24023440 	.word	0x24023440

9000ef64 <xTaskCreateStatic>:
	{
9000ef64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000ef68:	b083      	sub	sp, #12
9000ef6a:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000ef6c:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	; 0x2c
9000ef70:	b1bb      	cbz	r3, 9000efa2 <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000ef72:	b16c      	cbz	r4, 9000ef90 <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000ef74:	2360      	movs	r3, #96	; 0x60
9000ef76:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000ef78:	9b01      	ldr	r3, [sp, #4]
9000ef7a:	2b60      	cmp	r3, #96	; 0x60
9000ef7c:	d01a      	beq.n	9000efb4 <xTaskCreateStatic+0x50>
9000ef7e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef82:	f383 8811 	msr	BASEPRI, r3
9000ef86:	f3bf 8f6f 	isb	sy
9000ef8a:	f3bf 8f4f 	dsb	sy
9000ef8e:	e7fe      	b.n	9000ef8e <xTaskCreateStatic+0x2a>
9000ef90:	f04f 0350 	mov.w	r3, #80	; 0x50
9000ef94:	f383 8811 	msr	BASEPRI, r3
9000ef98:	f3bf 8f6f 	isb	sy
9000ef9c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000efa0:	e7fe      	b.n	9000efa0 <xTaskCreateStatic+0x3c>
9000efa2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000efa6:	f383 8811 	msr	BASEPRI, r3
9000efaa:	f3bf 8f6f 	isb	sy
9000efae:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000efb2:	e7fe      	b.n	9000efb2 <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000efb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000efb6:	0096      	lsls	r6, r2, #2
9000efb8:	4607      	mov	r7, r0
9000efba:	460d      	mov	r5, r1
9000efbc:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000efbe:	6323      	str	r3, [r4, #48]	; 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000efc0:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000efc2:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000efc4:	4632      	mov	r2, r6
9000efc6:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000efc8:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000efcc:	f017 fbf8 	bl	900267c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000efd0:	1f32      	subs	r2, r6, #4
9000efd2:	6b23      	ldr	r3, [r4, #48]	; 0x30
9000efd4:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000efd6:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
9000efda:	2d00      	cmp	r5, #0
9000efdc:	d069      	beq.n	9000f0b2 <xTaskCreateStatic+0x14e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efde:	782b      	ldrb	r3, [r5, #0]
9000efe0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000efe4:	2b00      	cmp	r3, #0
9000efe6:	d03b      	beq.n	9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000efe8:	786b      	ldrb	r3, [r5, #1]
9000efea:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000efee:	2b00      	cmp	r3, #0
9000eff0:	d036      	beq.n	9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000eff2:	78ab      	ldrb	r3, [r5, #2]
9000eff4:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000eff8:	b393      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000effa:	78eb      	ldrb	r3, [r5, #3]
9000effc:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f000:	b373      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f002:	792b      	ldrb	r3, [r5, #4]
9000f004:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f008:	b353      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f00a:	796b      	ldrb	r3, [r5, #5]
9000f00c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f010:	b333      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f012:	79ab      	ldrb	r3, [r5, #6]
9000f014:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f018:	b313      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f01a:	79eb      	ldrb	r3, [r5, #7]
9000f01c:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f020:	b1f3      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f022:	7a2b      	ldrb	r3, [r5, #8]
9000f024:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f028:	b1d3      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f02a:	7a6b      	ldrb	r3, [r5, #9]
9000f02c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f030:	b1b3      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f032:	7aab      	ldrb	r3, [r5, #10]
9000f034:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f038:	b193      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f03a:	7aeb      	ldrb	r3, [r5, #11]
9000f03c:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f040:	b173      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f042:	7b2b      	ldrb	r3, [r5, #12]
9000f044:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f048:	b153      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f04a:	7b6b      	ldrb	r3, [r5, #13]
9000f04c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f050:	b133      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f052:	7bab      	ldrb	r3, [r5, #14]
9000f054:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000f058:	b113      	cbz	r3, 9000f060 <xTaskCreateStatic+0xfc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f05a:	7beb      	ldrb	r3, [r5, #15]
9000f05c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f060:	2300      	movs	r3, #0
9000f062:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f066:	9d0a      	ldr	r5, [sp, #40]	; 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000f068:	2600      	movs	r6, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f06a:	1d20      	adds	r0, r4, #4
9000f06c:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f06e:	6526      	str	r6, [r4, #80]	; 0x50
9000f070:	bf28      	it	cs
9000f072:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f074:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f076:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f078:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f07c:	f7fe fa4e 	bl	9000d51c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f080:	f104 0018 	add.w	r0, r4, #24
9000f084:	f7fe fa4a 	bl	9000d51c <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f088:	4642      	mov	r2, r8
9000f08a:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000f08c:	65a6      	str	r6, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f08e:	4648      	mov	r0, r9
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f090:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f092:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f094:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f096:	6566      	str	r6, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f098:	f884 605c 	strb.w	r6, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f09c:	f7fe fabc 	bl	9000d618 <pxPortInitialiseStack>
9000f0a0:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f0a2:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f0a4:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f0a6:	f7ff fd45 	bl	9000eb34 <prvAddNewTaskToReadyList>
	}
9000f0aa:	4620      	mov	r0, r4
9000f0ac:	b003      	add	sp, #12
9000f0ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f0b2:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000f0b6:	e7d6      	b.n	9000f066 <xTaskCreateStatic+0x102>

9000f0b8 <xTaskCreate>:
	{
9000f0b8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f0bc:	0096      	lsls	r6, r2, #2
	{
9000f0be:	4680      	mov	r8, r0
9000f0c0:	460d      	mov	r5, r1
9000f0c2:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f0c4:	4630      	mov	r0, r6
9000f0c6:	f7fe f8fb 	bl	9000d2c0 <pvPortMalloc>
			if( pxStack != NULL )
9000f0ca:	2800      	cmp	r0, #0
9000f0cc:	f000 8083 	beq.w	9000f1d6 <xTaskCreate+0x11e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f0d0:	4607      	mov	r7, r0
9000f0d2:	2060      	movs	r0, #96	; 0x60
9000f0d4:	f7fe f8f4 	bl	9000d2c0 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f0d8:	4604      	mov	r4, r0
9000f0da:	2800      	cmp	r0, #0
9000f0dc:	d07f      	beq.n	9000f1de <xTaskCreate+0x126>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f0de:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f0e0:	6307      	str	r7, [r0, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f0e2:	4632      	mov	r2, r6
9000f0e4:	4638      	mov	r0, r7
9000f0e6:	21a5      	movs	r1, #165	; 0xa5
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f0e8:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f0ec:	f017 fb68 	bl	900267c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f0f0:	f8d4 a030 	ldr.w	sl, [r4, #48]	; 0x30
	if( pcName != NULL )
9000f0f4:	2d00      	cmp	r5, #0
9000f0f6:	d078      	beq.n	9000f1ea <xTaskCreate+0x132>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0f8:	782b      	ldrb	r3, [r5, #0]
9000f0fa:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f0fe:	2b00      	cmp	r3, #0
9000f100:	d03b      	beq.n	9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f102:	786b      	ldrb	r3, [r5, #1]
9000f104:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f108:	2b00      	cmp	r3, #0
9000f10a:	d036      	beq.n	9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f10c:	78ab      	ldrb	r3, [r5, #2]
9000f10e:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f112:	b393      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f114:	78eb      	ldrb	r3, [r5, #3]
9000f116:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f11a:	b373      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f11c:	792b      	ldrb	r3, [r5, #4]
9000f11e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f122:	b353      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f124:	796b      	ldrb	r3, [r5, #5]
9000f126:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f12a:	b333      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f12c:	79ab      	ldrb	r3, [r5, #6]
9000f12e:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f132:	b313      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f134:	79eb      	ldrb	r3, [r5, #7]
9000f136:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f13a:	b1f3      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f13c:	7a2b      	ldrb	r3, [r5, #8]
9000f13e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f142:	b1d3      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f144:	7a6b      	ldrb	r3, [r5, #9]
9000f146:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f14a:	b1b3      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f14c:	7aab      	ldrb	r3, [r5, #10]
9000f14e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f152:	b193      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f154:	7aeb      	ldrb	r3, [r5, #11]
9000f156:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f15a:	b173      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f15c:	7b2b      	ldrb	r3, [r5, #12]
9000f15e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f162:	b153      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f164:	7b6b      	ldrb	r3, [r5, #13]
9000f166:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f16a:	b133      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f16c:	7bab      	ldrb	r3, [r5, #14]
9000f16e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
9000f172:	b113      	cbz	r3, 9000f17a <xTaskCreate+0xc2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f174:	7beb      	ldrb	r3, [r5, #15]
9000f176:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f17a:	2300      	movs	r3, #0
9000f17c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f180:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f182:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f184:	1d20      	adds	r0, r4, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f186:	3e04      	subs	r6, #4
9000f188:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f18a:	6527      	str	r7, [r4, #80]	; 0x50
9000f18c:	bf28      	it	cs
9000f18e:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f190:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f192:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f194:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f198:	f7fe f9c0 	bl	9000d51c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f19c:	f104 0018 	add.w	r0, r4, #24
9000f1a0:	f7fe f9bc 	bl	9000d51c <vListInitialiseItem>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1a4:	eb0a 0006 	add.w	r0, sl, r6
		pxNewTCB->ulNotifiedValue = 0;
9000f1a8:	65a7      	str	r7, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1aa:	464a      	mov	r2, r9
9000f1ac:	4641      	mov	r1, r8
9000f1ae:	f020 0007 	bic.w	r0, r0, #7
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f1b2:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f1b4:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f1b6:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f1b8:	6567      	str	r7, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f1ba:	f884 705c 	strb.w	r7, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1be:	f7fe fa2b 	bl	9000d618 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f1c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1c4:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f1c6:	b103      	cbz	r3, 9000f1ca <xTaskCreate+0x112>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f1c8:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f1ca:	4620      	mov	r0, r4
9000f1cc:	f7ff fcb2 	bl	9000eb34 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f1d0:	2001      	movs	r0, #1
	}
9000f1d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f1d6:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f1da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					vPortFree( pxStack );
9000f1de:	4638      	mov	r0, r7
9000f1e0:	f7fe f92c 	bl	9000d43c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f1e4:	f04f 30ff 	mov.w	r0, #4294967295
9000f1e8:	e7f3      	b.n	9000f1d2 <xTaskCreate+0x11a>
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f1ea:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
9000f1ee:	e7c7      	b.n	9000f180 <xTaskCreate+0xc8>

9000f1f0 <vTaskDelay>:
	{
9000f1f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f1f2:	b950      	cbnz	r0, 9000f20a <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f1f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
9000f1f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
9000f1fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
9000f200:	f3bf 8f4f 	dsb	sy
9000f204:	f3bf 8f6f 	isb	sy
	}
9000f208:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f20a:	4d1e      	ldr	r5, [pc, #120]	; (9000f284 <vTaskDelay+0x94>)
9000f20c:	682b      	ldr	r3, [r5, #0]
9000f20e:	b143      	cbz	r3, 9000f222 <vTaskDelay+0x32>
9000f210:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f214:	f383 8811 	msr	BASEPRI, r3
9000f218:	f3bf 8f6f 	isb	sy
9000f21c:	f3bf 8f4f 	dsb	sy
9000f220:	e7fe      	b.n	9000f220 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f222:	682b      	ldr	r3, [r5, #0]
9000f224:	4604      	mov	r4, r0
9000f226:	3301      	adds	r3, #1
9000f228:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f22a:	4b17      	ldr	r3, [pc, #92]	; (9000f288 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f22c:	4e17      	ldr	r6, [pc, #92]	; (9000f28c <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f22e:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f230:	6830      	ldr	r0, [r6, #0]
9000f232:	3004      	adds	r0, #4
9000f234:	f7fe f99e 	bl	9000d574 <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f238:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f23a:	6833      	ldr	r3, [r6, #0]
9000f23c:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f23e:	d315      	bcc.n	9000f26c <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f240:	4b13      	ldr	r3, [pc, #76]	; (9000f290 <vTaskDelay+0xa0>)
9000f242:	6818      	ldr	r0, [r3, #0]
9000f244:	6831      	ldr	r1, [r6, #0]
9000f246:	3104      	adds	r1, #4
9000f248:	f7fe f97c 	bl	9000d544 <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f24c:	682b      	ldr	r3, [r5, #0]
9000f24e:	b943      	cbnz	r3, 9000f262 <vTaskDelay+0x72>
9000f250:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f254:	f383 8811 	msr	BASEPRI, r3
9000f258:	f3bf 8f6f 	isb	sy
9000f25c:	f3bf 8f4f 	dsb	sy
9000f260:	e7fe      	b.n	9000f260 <vTaskDelay+0x70>
9000f262:	f7ff fde5 	bl	9000ee30 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f266:	2800      	cmp	r0, #0
9000f268:	d0c4      	beq.n	9000f1f4 <vTaskDelay+0x4>
	}
9000f26a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f26c:	4b09      	ldr	r3, [pc, #36]	; (9000f294 <vTaskDelay+0xa4>)
9000f26e:	6818      	ldr	r0, [r3, #0]
9000f270:	6831      	ldr	r1, [r6, #0]
9000f272:	3104      	adds	r1, #4
9000f274:	f7fe f966 	bl	9000d544 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f278:	4b07      	ldr	r3, [pc, #28]	; (9000f298 <vTaskDelay+0xa8>)
9000f27a:	681a      	ldr	r2, [r3, #0]
9000f27c:	4294      	cmp	r4, r2
9000f27e:	d2e5      	bcs.n	9000f24c <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f280:	601c      	str	r4, [r3, #0]
9000f282:	e7e3      	b.n	9000f24c <vTaskDelay+0x5c>
9000f284:	240233bc 	.word	0x240233bc
9000f288:	2402343c 	.word	0x2402343c
9000f28c:	24022f48 	.word	0x24022f48
9000f290:	24022f50 	.word	0x24022f50
9000f294:	24022f4c 	.word	0x24022f4c
9000f298:	240233f0 	.word	0x240233f0

9000f29c <vTaskStartScheduler>:
{
9000f29c:	b570      	push	{r4, r5, r6, lr}
9000f29e:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f2a0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f2a2:	4668      	mov	r0, sp
9000f2a4:	aa02      	add	r2, sp, #8
9000f2a6:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f2a8:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f2ac:	f7fd ffea 	bl	9000d284 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f2b0:	9d00      	ldr	r5, [sp, #0]
9000f2b2:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f2b6:	b1b8      	cbz	r0, 9000f2e8 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f2b8:	b16d      	cbz	r5, 9000f2d6 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f2ba:	2260      	movs	r2, #96	; 0x60
9000f2bc:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f2be:	9a03      	ldr	r2, [sp, #12]
9000f2c0:	2a60      	cmp	r2, #96	; 0x60
9000f2c2:	d01a      	beq.n	9000f2fa <vTaskStartScheduler+0x5e>
9000f2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2c8:	f383 8811 	msr	BASEPRI, r3
9000f2cc:	f3bf 8f6f 	isb	sy
9000f2d0:	f3bf 8f4f 	dsb	sy
9000f2d4:	e7fe      	b.n	9000f2d4 <vTaskStartScheduler+0x38>
9000f2d6:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2da:	f383 8811 	msr	BASEPRI, r3
9000f2de:	f3bf 8f6f 	isb	sy
9000f2e2:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f2e6:	e7fe      	b.n	9000f2e6 <vTaskStartScheduler+0x4a>
9000f2e8:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f2ec:	f383 8811 	msr	BASEPRI, r3
9000f2f0:	f3bf 8f6f 	isb	sy
9000f2f4:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f2f8:	e7fe      	b.n	9000f2f8 <vTaskStartScheduler+0x5c>
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f2fa:	00b6      	lsls	r6, r6, #2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f2fc:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f2fe:	21a5      	movs	r1, #165	; 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f300:	6328      	str	r0, [r5, #48]	; 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f302:	4632      	mov	r2, r6
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f304:	f885 305d 	strb.w	r3, [r5, #93]	; 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f308:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f30a:	f017 fa59 	bl	900267c0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f30e:	1f33      	subs	r3, r6, #4
9000f310:	6b2a      	ldr	r2, [r5, #48]	; 0x30
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f312:	492a      	ldr	r1, [pc, #168]	; (9000f3bc <vTaskStartScheduler+0x120>)
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f314:	1d28      	adds	r0, r5, #4
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f316:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f318:	f885 4038 	strb.w	r4, [r5, #56]	; 0x38
9000f31c:	6369      	str	r1, [r5, #52]	; 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f31e:	f885 4043 	strb.w	r4, [r5, #67]	; 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f322:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f326:	62ec      	str	r4, [r5, #44]	; 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f328:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f32c:	f7fe f8f6 	bl	9000d51c <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f330:	f105 0018 	add.w	r0, r5, #24
9000f334:	f7fe f8f2 	bl	9000d51c <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f338:	2338      	movs	r3, #56	; 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f33a:	4622      	mov	r2, r4
9000f33c:	4920      	ldr	r1, [pc, #128]	; (9000f3c0 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f33e:	65ac      	str	r4, [r5, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f340:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f342:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f344:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f346:	626d      	str	r5, [r5, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f348:	656c      	str	r4, [r5, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f34a:	f885 405c 	strb.w	r4, [r5, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f34e:	f7fe f963 	bl	9000d618 <pxPortInitialiseStack>
9000f352:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f354:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f356:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f358:	f7ff fbec 	bl	9000eb34 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f35c:	f000 fca4 	bl	9000fca8 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f360:	2801      	cmp	r0, #1
9000f362:	d00c      	beq.n	9000f37e <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f364:	3001      	adds	r0, #1
9000f366:	d001      	beq.n	9000f36c <vTaskStartScheduler+0xd0>
}
9000f368:	b004      	add	sp, #16
9000f36a:	bd70      	pop	{r4, r5, r6, pc}
9000f36c:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f370:	f383 8811 	msr	BASEPRI, r3
9000f374:	f3bf 8f6f 	isb	sy
9000f378:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f37c:	e7fe      	b.n	9000f37c <vTaskStartScheduler+0xe0>
9000f37e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f382:	f383 8811 	msr	BASEPRI, r3
9000f386:	f3bf 8f6f 	isb	sy
9000f38a:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f38e:	4b0d      	ldr	r3, [pc, #52]	; (9000f3c4 <vTaskStartScheduler+0x128>)
9000f390:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f394:	490c      	ldr	r1, [pc, #48]	; (9000f3c8 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f396:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f398:	4b0c      	ldr	r3, [pc, #48]	; (9000f3cc <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f39a:	4a0d      	ldr	r2, [pc, #52]	; (9000f3d0 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f39c:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f39e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f3a0:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f3a2:	b143      	cbz	r3, 9000f3b6 <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f3a4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f3a6:	b10b      	cbz	r3, 9000f3ac <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f3a8:	2000      	movs	r0, #0
9000f3aa:	4798      	blx	r3
}
9000f3ac:	b004      	add	sp, #16
9000f3ae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f3b2:	f7fe b9f1 	b.w	9000d798 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f3b6:	6813      	ldr	r3, [r2, #0]
9000f3b8:	e7f4      	b.n	9000f3a4 <vTaskStartScheduler+0x108>
9000f3ba:	bf00      	nop
9000f3bc:	454c4449 	.word	0x454c4449
9000f3c0:	9000ec45 	.word	0x9000ec45
9000f3c4:	240233f0 	.word	0x240233f0
9000f3c8:	24023410 	.word	0x24023410
9000f3cc:	2402343c 	.word	0x2402343c
9000f3d0:	24022f48 	.word	0x24022f48

9000f3d4 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f3d4:	4a02      	ldr	r2, [pc, #8]	; (9000f3e0 <vTaskSuspendAll+0xc>)
9000f3d6:	6813      	ldr	r3, [r2, #0]
9000f3d8:	3301      	adds	r3, #1
9000f3da:	6013      	str	r3, [r2, #0]
}
9000f3dc:	4770      	bx	lr
9000f3de:	bf00      	nop
9000f3e0:	240233bc 	.word	0x240233bc

9000f3e4 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f3e4:	4b06      	ldr	r3, [pc, #24]	; (9000f400 <xTaskResumeAll+0x1c>)
9000f3e6:	681b      	ldr	r3, [r3, #0]
9000f3e8:	b943      	cbnz	r3, 9000f3fc <xTaskResumeAll+0x18>
9000f3ea:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f3ee:	f383 8811 	msr	BASEPRI, r3
9000f3f2:	f3bf 8f6f 	isb	sy
9000f3f6:	f3bf 8f4f 	dsb	sy
9000f3fa:	e7fe      	b.n	9000f3fa <xTaskResumeAll+0x16>
9000f3fc:	f7ff bd18 	b.w	9000ee30 <xTaskResumeAll.part.0>
9000f400:	240233bc 	.word	0x240233bc

9000f404 <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f404:	4b01      	ldr	r3, [pc, #4]	; (9000f40c <xTaskGetTickCount+0x8>)
9000f406:	6818      	ldr	r0, [r3, #0]
}
9000f408:	4770      	bx	lr
9000f40a:	bf00      	nop
9000f40c:	2402343c 	.word	0x2402343c

9000f410 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f410:	4b05      	ldr	r3, [pc, #20]	; (9000f428 <xTaskIncrementTick+0x18>)
9000f412:	681b      	ldr	r3, [r3, #0]
9000f414:	b90b      	cbnz	r3, 9000f41a <xTaskIncrementTick+0xa>
9000f416:	f7ff bc63 	b.w	9000ece0 <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f41a:	4a04      	ldr	r2, [pc, #16]	; (9000f42c <xTaskIncrementTick+0x1c>)
}
9000f41c:	2000      	movs	r0, #0
		++xPendedTicks;
9000f41e:	6813      	ldr	r3, [r2, #0]
9000f420:	3301      	adds	r3, #1
9000f422:	6013      	str	r3, [r2, #0]
}
9000f424:	4770      	bx	lr
9000f426:	bf00      	nop
9000f428:	240233bc 	.word	0x240233bc
9000f42c:	240233f8 	.word	0x240233f8

9000f430 <vTaskSetApplicationTaskTag>:
	{
9000f430:	b538      	push	{r3, r4, r5, lr}
9000f432:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f434:	b138      	cbz	r0, 9000f446 <vTaskSetApplicationTaskTag+0x16>
9000f436:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f438:	f7fe f91c 	bl	9000d674 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f43c:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f43e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f442:	f7fe b939 	b.w	9000d6b8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f446:	4b04      	ldr	r3, [pc, #16]	; (9000f458 <vTaskSetApplicationTaskTag+0x28>)
9000f448:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f44a:	f7fe f913 	bl	9000d674 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f44e:	6565      	str	r5, [r4, #84]	; 0x54
	}
9000f450:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f454:	f7fe b930 	b.w	9000d6b8 <vPortExitCritical>
9000f458:	24022f48 	.word	0x24022f48

9000f45c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f45c:	4b27      	ldr	r3, [pc, #156]	; (9000f4fc <vTaskSwitchContext+0xa0>)
9000f45e:	681b      	ldr	r3, [r3, #0]
9000f460:	b11b      	cbz	r3, 9000f46a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f462:	4b27      	ldr	r3, [pc, #156]	; (9000f500 <vTaskSwitchContext+0xa4>)
9000f464:	2201      	movs	r2, #1
9000f466:	601a      	str	r2, [r3, #0]
9000f468:	4770      	bx	lr
{
9000f46a:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f46c:	4a24      	ldr	r2, [pc, #144]	; (9000f500 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f46e:	4c25      	ldr	r4, [pc, #148]	; (9000f504 <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f470:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f472:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f474:	2b00      	cmp	r3, #0
9000f476:	d036      	beq.n	9000f4e6 <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f478:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f47a:	b10b      	cbz	r3, 9000f480 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f47c:	2001      	movs	r0, #1
9000f47e:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f480:	4d21      	ldr	r5, [pc, #132]	; (9000f508 <vTaskSwitchContext+0xac>)
9000f482:	4922      	ldr	r1, [pc, #136]	; (9000f50c <vTaskSwitchContext+0xb0>)
9000f484:	682b      	ldr	r3, [r5, #0]
9000f486:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f48a:	0098      	lsls	r0, r3, #2
9000f48c:	0092      	lsls	r2, r2, #2
9000f48e:	588a      	ldr	r2, [r1, r2]
9000f490:	b942      	cbnz	r2, 9000f4a4 <vTaskSwitchContext+0x48>
9000f492:	b1fb      	cbz	r3, 9000f4d4 <vTaskSwitchContext+0x78>
9000f494:	3b01      	subs	r3, #1
9000f496:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f49a:	0098      	lsls	r0, r3, #2
9000f49c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f4a0:	2a00      	cmp	r2, #0
9000f4a2:	d0f6      	beq.n	9000f492 <vTaskSwitchContext+0x36>
9000f4a4:	4418      	add	r0, r3
9000f4a6:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f4aa:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f4ae:	4662      	mov	r2, ip
9000f4b0:	6849      	ldr	r1, [r1, #4]
9000f4b2:	3208      	adds	r2, #8
9000f4b4:	4291      	cmp	r1, r2
9000f4b6:	f8cc 1004 	str.w	r1, [ip, #4]
9000f4ba:	d01b      	beq.n	9000f4f4 <vTaskSwitchContext+0x98>
9000f4bc:	68ca      	ldr	r2, [r1, #12]
9000f4be:	6022      	str	r2, [r4, #0]
9000f4c0:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f4c2:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f4c4:	b1a3      	cbz	r3, 9000f4f0 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f4c6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f4c8:	b11b      	cbz	r3, 9000f4d2 <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f4ca:	2000      	movs	r0, #0
}
9000f4cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f4d0:	4718      	bx	r3
}
9000f4d2:	bd70      	pop	{r4, r5, r6, pc}
9000f4d4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f4d8:	f383 8811 	msr	BASEPRI, r3
9000f4dc:	f3bf 8f6f 	isb	sy
9000f4e0:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f4e4:	e7fe      	b.n	9000f4e4 <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f4e6:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f4e8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000f4ea:	2b00      	cmp	r3, #0
9000f4ec:	d1c6      	bne.n	9000f47c <vTaskSwitchContext+0x20>
9000f4ee:	e7c7      	b.n	9000f480 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f4f0:	6823      	ldr	r3, [r4, #0]
9000f4f2:	e7e8      	b.n	9000f4c6 <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f4f4:	6849      	ldr	r1, [r1, #4]
9000f4f6:	f8cc 1004 	str.w	r1, [ip, #4]
9000f4fa:	e7df      	b.n	9000f4bc <vTaskSwitchContext+0x60>
9000f4fc:	240233bc 	.word	0x240233bc
9000f500:	24023440 	.word	0x24023440
9000f504:	24022f48 	.word	0x24022f48
9000f508:	240233c4 	.word	0x240233c4
9000f50c:	24022f54 	.word	0x24022f54

9000f510 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f510:	b1f0      	cbz	r0, 9000f550 <vTaskPlaceOnEventList+0x40>
{
9000f512:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f514:	4d1a      	ldr	r5, [pc, #104]	; (9000f580 <vTaskPlaceOnEventList+0x70>)
9000f516:	460c      	mov	r4, r1
9000f518:	6829      	ldr	r1, [r5, #0]
9000f51a:	3118      	adds	r1, #24
9000f51c:	f7fe f812 	bl	9000d544 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f520:	4b18      	ldr	r3, [pc, #96]	; (9000f584 <vTaskPlaceOnEventList+0x74>)
9000f522:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f524:	6828      	ldr	r0, [r5, #0]
9000f526:	3004      	adds	r0, #4
9000f528:	f7fe f824 	bl	9000d574 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f52c:	1c63      	adds	r3, r4, #1
9000f52e:	d020      	beq.n	9000f572 <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f530:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f532:	682b      	ldr	r3, [r5, #0]
9000f534:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f536:	d214      	bcs.n	9000f562 <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f538:	4b13      	ldr	r3, [pc, #76]	; (9000f588 <vTaskPlaceOnEventList+0x78>)
9000f53a:	6818      	ldr	r0, [r3, #0]
9000f53c:	6829      	ldr	r1, [r5, #0]
9000f53e:	3104      	adds	r1, #4
9000f540:	f7fe f800 	bl	9000d544 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f544:	4b11      	ldr	r3, [pc, #68]	; (9000f58c <vTaskPlaceOnEventList+0x7c>)
9000f546:	681a      	ldr	r2, [r3, #0]
9000f548:	4294      	cmp	r4, r2
9000f54a:	d200      	bcs.n	9000f54e <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f54c:	601c      	str	r4, [r3, #0]
}
9000f54e:	bd70      	pop	{r4, r5, r6, pc}
9000f550:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f554:	f383 8811 	msr	BASEPRI, r3
9000f558:	f3bf 8f6f 	isb	sy
9000f55c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f560:	e7fe      	b.n	9000f560 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f562:	4b0b      	ldr	r3, [pc, #44]	; (9000f590 <vTaskPlaceOnEventList+0x80>)
9000f564:	6818      	ldr	r0, [r3, #0]
9000f566:	6829      	ldr	r1, [r5, #0]
}
9000f568:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f56c:	3104      	adds	r1, #4
9000f56e:	f7fd bfe9 	b.w	9000d544 <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f572:	6829      	ldr	r1, [r5, #0]
9000f574:	4807      	ldr	r0, [pc, #28]	; (9000f594 <vTaskPlaceOnEventList+0x84>)
9000f576:	3104      	adds	r1, #4
}
9000f578:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f57c:	f7fd bfd2 	b.w	9000d524 <vListInsertEnd>
9000f580:	24022f48 	.word	0x24022f48
9000f584:	2402343c 	.word	0x2402343c
9000f588:	24022f4c 	.word	0x24022f4c
9000f58c:	240233f0 	.word	0x240233f0
9000f590:	24022f50 	.word	0x24022f50
9000f594:	24023414 	.word	0x24023414

9000f598 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f598:	b358      	cbz	r0, 9000f5f2 <vTaskPlaceOnEventListRestricted+0x5a>
	{
9000f59a:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f59c:	4e1d      	ldr	r6, [pc, #116]	; (9000f614 <vTaskPlaceOnEventListRestricted+0x7c>)
9000f59e:	460c      	mov	r4, r1
9000f5a0:	4615      	mov	r5, r2
9000f5a2:	6831      	ldr	r1, [r6, #0]
9000f5a4:	3118      	adds	r1, #24
9000f5a6:	f7fd ffbd 	bl	9000d524 <vListInsertEnd>
		if( xWaitIndefinitely != pdFALSE )
9000f5aa:	b165      	cbz	r5, 9000f5c6 <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f5ac:	4b1a      	ldr	r3, [pc, #104]	; (9000f618 <vTaskPlaceOnEventListRestricted+0x80>)
9000f5ae:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f5b0:	6830      	ldr	r0, [r6, #0]
9000f5b2:	3004      	adds	r0, #4
9000f5b4:	f7fd ffde 	bl	9000d574 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f5b8:	6831      	ldr	r1, [r6, #0]
9000f5ba:	4818      	ldr	r0, [pc, #96]	; (9000f61c <vTaskPlaceOnEventListRestricted+0x84>)
9000f5bc:	3104      	adds	r1, #4
	}
9000f5be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f5c2:	f7fd bfaf 	b.w	9000d524 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f5c6:	4b14      	ldr	r3, [pc, #80]	; (9000f618 <vTaskPlaceOnEventListRestricted+0x80>)
9000f5c8:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f5ca:	6830      	ldr	r0, [r6, #0]
9000f5cc:	3004      	adds	r0, #4
9000f5ce:	f7fd ffd1 	bl	9000d574 <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f5d2:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f5d4:	6833      	ldr	r3, [r6, #0]
9000f5d6:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f5d8:	d214      	bcs.n	9000f604 <vTaskPlaceOnEventListRestricted+0x6c>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f5da:	4b11      	ldr	r3, [pc, #68]	; (9000f620 <vTaskPlaceOnEventListRestricted+0x88>)
9000f5dc:	6818      	ldr	r0, [r3, #0]
9000f5de:	6831      	ldr	r1, [r6, #0]
9000f5e0:	3104      	adds	r1, #4
9000f5e2:	f7fd ffaf 	bl	9000d544 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f5e6:	4b0f      	ldr	r3, [pc, #60]	; (9000f624 <vTaskPlaceOnEventListRestricted+0x8c>)
9000f5e8:	681a      	ldr	r2, [r3, #0]
9000f5ea:	4294      	cmp	r4, r2
9000f5ec:	d200      	bcs.n	9000f5f0 <vTaskPlaceOnEventListRestricted+0x58>
					xNextTaskUnblockTime = xTimeToWake;
9000f5ee:	601c      	str	r4, [r3, #0]
	}
9000f5f0:	bd70      	pop	{r4, r5, r6, pc}
9000f5f2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f5f6:	f383 8811 	msr	BASEPRI, r3
9000f5fa:	f3bf 8f6f 	isb	sy
9000f5fe:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f602:	e7fe      	b.n	9000f602 <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f604:	4b08      	ldr	r3, [pc, #32]	; (9000f628 <vTaskPlaceOnEventListRestricted+0x90>)
9000f606:	6818      	ldr	r0, [r3, #0]
9000f608:	6831      	ldr	r1, [r6, #0]
	}
9000f60a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f60e:	3104      	adds	r1, #4
9000f610:	f7fd bf98 	b.w	9000d544 <vListInsert>
9000f614:	24022f48 	.word	0x24022f48
9000f618:	2402343c 	.word	0x2402343c
9000f61c:	24023414 	.word	0x24023414
9000f620:	24022f4c 	.word	0x24022f4c
9000f624:	240233f0 	.word	0x240233f0
9000f628:	24022f50 	.word	0x24022f50

9000f62c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f62c:	68c3      	ldr	r3, [r0, #12]
{
9000f62e:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f630:	68dc      	ldr	r4, [r3, #12]
{
9000f632:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
9000f634:	b35c      	cbz	r4, 9000f68e <xTaskRemoveFromEventList+0x62>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f636:	f104 0518 	add.w	r5, r4, #24
9000f63a:	4628      	mov	r0, r5
9000f63c:	f7fd ff9a 	bl	9000d574 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f640:	4b19      	ldr	r3, [pc, #100]	; (9000f6a8 <xTaskRemoveFromEventList+0x7c>)
9000f642:	681b      	ldr	r3, [r3, #0]
9000f644:	b17b      	cbz	r3, 9000f666 <xTaskRemoveFromEventList+0x3a>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f646:	4629      	mov	r1, r5
9000f648:	4818      	ldr	r0, [pc, #96]	; (9000f6ac <xTaskRemoveFromEventList+0x80>)
9000f64a:	f7fd ff6b 	bl	9000d524 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f64e:	4b18      	ldr	r3, [pc, #96]	; (9000f6b0 <xTaskRemoveFromEventList+0x84>)
9000f650:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f652:	681b      	ldr	r3, [r3, #0]
9000f654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f656:	429a      	cmp	r2, r3
9000f658:	d922      	bls.n	9000f6a0 <xTaskRemoveFromEventList+0x74>
		xYieldPending = pdTRUE;
9000f65a:	2301      	movs	r3, #1
9000f65c:	4a15      	ldr	r2, [pc, #84]	; (9000f6b4 <xTaskRemoveFromEventList+0x88>)
		xReturn = pdTRUE;
9000f65e:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f660:	6013      	str	r3, [r2, #0]
}
9000f662:	b003      	add	sp, #12
9000f664:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f666:	1d21      	adds	r1, r4, #4
9000f668:	4608      	mov	r0, r1
9000f66a:	9101      	str	r1, [sp, #4]
9000f66c:	f7fd ff82 	bl	9000d574 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f670:	4a11      	ldr	r2, [pc, #68]	; (9000f6b8 <xTaskRemoveFromEventList+0x8c>)
9000f672:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
9000f674:	6810      	ldr	r0, [r2, #0]
9000f676:	9901      	ldr	r1, [sp, #4]
9000f678:	4283      	cmp	r3, r0
9000f67a:	d900      	bls.n	9000f67e <xTaskRemoveFromEventList+0x52>
9000f67c:	6013      	str	r3, [r2, #0]
9000f67e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f682:	480e      	ldr	r0, [pc, #56]	; (9000f6bc <xTaskRemoveFromEventList+0x90>)
9000f684:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000f688:	f7fd ff4c 	bl	9000d524 <vListInsertEnd>
9000f68c:	e7df      	b.n	9000f64e <xTaskRemoveFromEventList+0x22>
9000f68e:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f692:	f383 8811 	msr	BASEPRI, r3
9000f696:	f3bf 8f6f 	isb	sy
9000f69a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f69e:	e7fe      	b.n	9000f69e <xTaskRemoveFromEventList+0x72>
		xReturn = pdFALSE;
9000f6a0:	2000      	movs	r0, #0
}
9000f6a2:	b003      	add	sp, #12
9000f6a4:	bd30      	pop	{r4, r5, pc}
9000f6a6:	bf00      	nop
9000f6a8:	240233bc 	.word	0x240233bc
9000f6ac:	240233fc 	.word	0x240233fc
9000f6b0:	24022f48 	.word	0x24022f48
9000f6b4:	24023440 	.word	0x24023440
9000f6b8:	240233c4 	.word	0x240233c4
9000f6bc:	24022f54 	.word	0x24022f54

9000f6c0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f6c0:	4a03      	ldr	r2, [pc, #12]	; (9000f6d0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f6c2:	4b04      	ldr	r3, [pc, #16]	; (9000f6d4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f6c4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f6c6:	681b      	ldr	r3, [r3, #0]
9000f6c8:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f6cc:	4770      	bx	lr
9000f6ce:	bf00      	nop
9000f6d0:	240233f4 	.word	0x240233f4
9000f6d4:	2402343c 	.word	0x2402343c

9000f6d8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
9000f6d8:	b328      	cbz	r0, 9000f726 <xTaskCheckForTimeOut+0x4e>
{
9000f6da:	b5f0      	push	{r4, r5, r6, r7, lr}
9000f6dc:	460d      	mov	r5, r1
9000f6de:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
9000f6e0:	b1c1      	cbz	r1, 9000f714 <xTaskCheckForTimeOut+0x3c>
9000f6e2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f6e4:	f7fd ffc6 	bl	9000d674 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f6e8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f6ea:	4a1d      	ldr	r2, [pc, #116]	; (9000f760 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f6ec:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f6ee:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f6f0:	d030      	beq.n	9000f754 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f6f2:	f8df c070 	ldr.w	ip, [pc, #112]	; 9000f764 <xTaskCheckForTimeOut+0x8c>
9000f6f6:	6826      	ldr	r6, [r4, #0]
9000f6f8:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f6fc:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f6fe:	42be      	cmp	r6, r7
9000f700:	d01a      	beq.n	9000f738 <xTaskCheckForTimeOut+0x60>
9000f702:	4288      	cmp	r0, r1
9000f704:	d818      	bhi.n	9000f738 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
9000f706:	2001      	movs	r0, #1
9000f708:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
9000f70a:	f7fd ffd5 	bl	9000d6b8 <vPortExitCritical>
}
9000f70e:	9801      	ldr	r0, [sp, #4]
9000f710:	b003      	add	sp, #12
9000f712:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000f714:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f718:	f383 8811 	msr	BASEPRI, r3
9000f71c:	f3bf 8f6f 	isb	sy
9000f720:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f724:	e7fe      	b.n	9000f724 <xTaskCheckForTimeOut+0x4c>
9000f726:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f72a:	f383 8811 	msr	BASEPRI, r3
9000f72e:	f3bf 8f6f 	isb	sy
9000f732:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f736:	e7fe      	b.n	9000f736 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f738:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f73c:	4573      	cmp	r3, lr
9000f73e:	d90b      	bls.n	9000f758 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
9000f740:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f742:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f746:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f748:	4403      	add	r3, r0
			xReturn = pdFALSE;
9000f74a:	2000      	movs	r0, #0
			*pxTicksToWait -= xElapsedTime;
9000f74c:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f74e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
9000f752:	e7d9      	b.n	9000f708 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
9000f754:	2000      	movs	r0, #0
9000f756:	e7d7      	b.n	9000f708 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
9000f758:	2300      	movs	r3, #0
			xReturn = pdTRUE;
9000f75a:	2001      	movs	r0, #1
			*pxTicksToWait = 0;
9000f75c:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f75e:	e7d3      	b.n	9000f708 <xTaskCheckForTimeOut+0x30>
9000f760:	2402343c 	.word	0x2402343c
9000f764:	240233f4 	.word	0x240233f4

9000f768 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f768:	4b01      	ldr	r3, [pc, #4]	; (9000f770 <vTaskMissedYield+0x8>)
9000f76a:	2201      	movs	r2, #1
9000f76c:	601a      	str	r2, [r3, #0]
}
9000f76e:	4770      	bx	lr
9000f770:	24023440 	.word	0x24023440

9000f774 <xTaskGetCurrentTaskHandle>:
		xReturn = pxCurrentTCB;
9000f774:	4b01      	ldr	r3, [pc, #4]	; (9000f77c <xTaskGetCurrentTaskHandle+0x8>)
9000f776:	6818      	ldr	r0, [r3, #0]
	}
9000f778:	4770      	bx	lr
9000f77a:	bf00      	nop
9000f77c:	24022f48 	.word	0x24022f48

9000f780 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f780:	4b05      	ldr	r3, [pc, #20]	; (9000f798 <xTaskGetSchedulerState+0x18>)
9000f782:	681b      	ldr	r3, [r3, #0]
9000f784:	b133      	cbz	r3, 9000f794 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f786:	4b05      	ldr	r3, [pc, #20]	; (9000f79c <xTaskGetSchedulerState+0x1c>)
9000f788:	6818      	ldr	r0, [r3, #0]
9000f78a:	fab0 f080 	clz	r0, r0
9000f78e:	0940      	lsrs	r0, r0, #5
9000f790:	0040      	lsls	r0, r0, #1
9000f792:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f794:	2001      	movs	r0, #1
	}
9000f796:	4770      	bx	lr
9000f798:	24023410 	.word	0x24023410
9000f79c:	240233bc 	.word	0x240233bc

9000f7a0 <xTaskPriorityInherit>:
	{
9000f7a0:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
9000f7a2:	4604      	mov	r4, r0
	{
9000f7a4:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
9000f7a6:	b1c8      	cbz	r0, 9000f7dc <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f7a8:	4d1d      	ldr	r5, [pc, #116]	; (9000f820 <xTaskPriorityInherit+0x80>)
9000f7aa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
9000f7ac:	682a      	ldr	r2, [r5, #0]
9000f7ae:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f7b0:	4293      	cmp	r3, r2
9000f7b2:	d215      	bcs.n	9000f7e0 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f7b4:	6982      	ldr	r2, [r0, #24]
9000f7b6:	2a00      	cmp	r2, #0
9000f7b8:	db04      	blt.n	9000f7c4 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f7ba:	682a      	ldr	r2, [r5, #0]
9000f7bc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
9000f7be:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
9000f7c2:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f7c4:	4e17      	ldr	r6, [pc, #92]	; (9000f824 <xTaskPriorityInherit+0x84>)
9000f7c6:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f7ca:	6962      	ldr	r2, [r4, #20]
9000f7cc:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f7d0:	429a      	cmp	r2, r3
9000f7d2:	d00e      	beq.n	9000f7f2 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f7d4:	682b      	ldr	r3, [r5, #0]
				xReturn = pdTRUE;
9000f7d6:	2001      	movs	r0, #1
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f7d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f7da:	62e3      	str	r3, [r4, #44]	; 0x2c
	}
9000f7dc:	b002      	add	sp, #8
9000f7de:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f7e0:	682b      	ldr	r3, [r5, #0]
9000f7e2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9000f7e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9000f7e6:	4298      	cmp	r0, r3
9000f7e8:	bf2c      	ite	cs
9000f7ea:	2000      	movcs	r0, #0
9000f7ec:	2001      	movcc	r0, #1
	}
9000f7ee:	b002      	add	sp, #8
9000f7f0:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f7f2:	1d21      	adds	r1, r4, #4
9000f7f4:	4608      	mov	r0, r1
9000f7f6:	9101      	str	r1, [sp, #4]
9000f7f8:	f7fd febc 	bl	9000d574 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f7fc:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f7fe:	4b0a      	ldr	r3, [pc, #40]	; (9000f828 <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f800:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f802:	681a      	ldr	r2, [r3, #0]
9000f804:	9901      	ldr	r1, [sp, #4]
9000f806:	4290      	cmp	r0, r2
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f808:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f80a:	d900      	bls.n	9000f80e <xTaskPriorityInherit+0x6e>
9000f80c:	6018      	str	r0, [r3, #0]
9000f80e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f812:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f816:	f7fd fe85 	bl	9000d524 <vListInsertEnd>
				xReturn = pdTRUE;
9000f81a:	2001      	movs	r0, #1
9000f81c:	e7de      	b.n	9000f7dc <xTaskPriorityInherit+0x3c>
9000f81e:	bf00      	nop
9000f820:	24022f48 	.word	0x24022f48
9000f824:	24022f54 	.word	0x24022f54
9000f828:	240233c4 	.word	0x240233c4

9000f82c <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f82c:	b318      	cbz	r0, 9000f876 <xTaskPriorityDisinherit+0x4a>
			configASSERT( pxTCB == pxCurrentTCB );
9000f82e:	4b1f      	ldr	r3, [pc, #124]	; (9000f8ac <xTaskPriorityDisinherit+0x80>)
	{
9000f830:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f832:	681c      	ldr	r4, [r3, #0]
	{
9000f834:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
9000f836:	4284      	cmp	r4, r0
9000f838:	d008      	beq.n	9000f84c <xTaskPriorityDisinherit+0x20>
9000f83a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f83e:	f383 8811 	msr	BASEPRI, r3
9000f842:	f3bf 8f6f 	isb	sy
9000f846:	f3bf 8f4f 	dsb	sy
9000f84a:	e7fe      	b.n	9000f84a <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f84c:	6d23      	ldr	r3, [r4, #80]	; 0x50
9000f84e:	b14b      	cbz	r3, 9000f864 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f850:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f852:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f854:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f856:	6523      	str	r3, [r4, #80]	; 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f858:	4291      	cmp	r1, r2
9000f85a:	d000      	beq.n	9000f85e <xTaskPriorityDisinherit+0x32>
9000f85c:	b16b      	cbz	r3, 9000f87a <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
9000f85e:	2000      	movs	r0, #0
	}
9000f860:	b002      	add	sp, #8
9000f862:	bd10      	pop	{r4, pc}
9000f864:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f868:	f383 8811 	msr	BASEPRI, r3
9000f86c:	f3bf 8f6f 	isb	sy
9000f870:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f874:	e7fe      	b.n	9000f874 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
9000f876:	2000      	movs	r0, #0
	}
9000f878:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f87a:	1d21      	adds	r1, r4, #4
9000f87c:	4608      	mov	r0, r1
9000f87e:	9101      	str	r1, [sp, #4]
9000f880:	f7fd fe78 	bl	9000d574 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f884:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f886:	4b0a      	ldr	r3, [pc, #40]	; (9000f8b0 <xTaskPriorityDisinherit+0x84>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f888:	f1c0 0238 	rsb	r2, r0, #56	; 0x38
					prvAddTaskToReadyList( pxTCB );
9000f88c:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f88e:	62e0      	str	r0, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f890:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f892:	681a      	ldr	r2, [r3, #0]
9000f894:	4290      	cmp	r0, r2
9000f896:	d900      	bls.n	9000f89a <xTaskPriorityDisinherit+0x6e>
9000f898:	6018      	str	r0, [r3, #0]
9000f89a:	4b06      	ldr	r3, [pc, #24]	; (9000f8b4 <xTaskPriorityDisinherit+0x88>)
9000f89c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f8a0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f8a4:	f7fd fe3e 	bl	9000d524 <vListInsertEnd>
					xReturn = pdTRUE;
9000f8a8:	2001      	movs	r0, #1
		return xReturn;
9000f8aa:	e7d9      	b.n	9000f860 <xTaskPriorityDisinherit+0x34>
9000f8ac:	24022f48 	.word	0x24022f48
9000f8b0:	240233c4 	.word	0x240233c4
9000f8b4:	24022f54 	.word	0x24022f54

9000f8b8 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f8b8:	2800      	cmp	r0, #0
9000f8ba:	d040      	beq.n	9000f93e <vTaskPriorityDisinheritAfterTimeout+0x86>
			configASSERT( pxTCB->uxMutexesHeld );
9000f8bc:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
9000f8be:	b530      	push	{r4, r5, lr}
9000f8c0:	4604      	mov	r4, r0
9000f8c2:	b083      	sub	sp, #12
			configASSERT( pxTCB->uxMutexesHeld );
9000f8c4:	b153      	cbz	r3, 9000f8dc <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f8c6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f8c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
9000f8ca:	4281      	cmp	r1, r0
9000f8cc:	bf38      	it	cc
9000f8ce:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f8d0:	2b01      	cmp	r3, #1
9000f8d2:	d101      	bne.n	9000f8d8 <vTaskPriorityDisinheritAfterTimeout+0x20>
9000f8d4:	428a      	cmp	r2, r1
9000f8d6:	d10a      	bne.n	9000f8ee <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
9000f8d8:	b003      	add	sp, #12
9000f8da:	bd30      	pop	{r4, r5, pc}
9000f8dc:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f8e0:	f383 8811 	msr	BASEPRI, r3
9000f8e4:	f3bf 8f6f 	isb	sy
9000f8e8:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f8ec:	e7fe      	b.n	9000f8ec <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
9000f8ee:	4b19      	ldr	r3, [pc, #100]	; (9000f954 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f8f0:	681b      	ldr	r3, [r3, #0]
9000f8f2:	42a3      	cmp	r3, r4
9000f8f4:	d024      	beq.n	9000f940 <vTaskPriorityDisinheritAfterTimeout+0x88>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f8f6:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f8f8:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f8fa:	2b00      	cmp	r3, #0
9000f8fc:	db02      	blt.n	9000f904 <vTaskPriorityDisinheritAfterTimeout+0x4c>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f8fe:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
9000f902:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f904:	4d14      	ldr	r5, [pc, #80]	; (9000f958 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
9000f906:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f90a:	6961      	ldr	r1, [r4, #20]
9000f90c:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f910:	4299      	cmp	r1, r3
9000f912:	d1e1      	bne.n	9000f8d8 <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f914:	1d21      	adds	r1, r4, #4
9000f916:	4608      	mov	r0, r1
9000f918:	9101      	str	r1, [sp, #4]
9000f91a:	f7fd fe2b 	bl	9000d574 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f91e:	4b0f      	ldr	r3, [pc, #60]	; (9000f95c <vTaskPriorityDisinheritAfterTimeout+0xa4>)
9000f920:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
9000f922:	681a      	ldr	r2, [r3, #0]
9000f924:	9901      	ldr	r1, [sp, #4]
9000f926:	4290      	cmp	r0, r2
9000f928:	d900      	bls.n	9000f92c <vTaskPriorityDisinheritAfterTimeout+0x74>
9000f92a:	6018      	str	r0, [r3, #0]
9000f92c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f930:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f934:	b003      	add	sp, #12
9000f936:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
9000f93a:	f7fd bdf3 	b.w	9000d524 <vListInsertEnd>
9000f93e:	4770      	bx	lr
9000f940:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f944:	f383 8811 	msr	BASEPRI, r3
9000f948:	f3bf 8f6f 	isb	sy
9000f94c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000f950:	e7fe      	b.n	9000f950 <vTaskPriorityDisinheritAfterTimeout+0x98>
9000f952:	bf00      	nop
9000f954:	24022f48 	.word	0x24022f48
9000f958:	24022f54 	.word	0x24022f54
9000f95c:	240233c4 	.word	0x240233c4

9000f960 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000f960:	4b04      	ldr	r3, [pc, #16]	; (9000f974 <pvTaskIncrementMutexHeldCount+0x14>)
9000f962:	681a      	ldr	r2, [r3, #0]
9000f964:	b11a      	cbz	r2, 9000f96e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000f966:	6819      	ldr	r1, [r3, #0]
9000f968:	6d0a      	ldr	r2, [r1, #80]	; 0x50
9000f96a:	3201      	adds	r2, #1
9000f96c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
9000f96e:	6818      	ldr	r0, [r3, #0]
	}
9000f970:	4770      	bx	lr
9000f972:	bf00      	nop
9000f974:	24022f48 	.word	0x24022f48

9000f978 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000f978:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f97c:	4e22      	ldr	r6, [pc, #136]	; (9000fa08 <prvSwitchTimerLists+0x90>)
9000f97e:	b085      	sub	sp, #20
	if( xTimerQueue != NULL )
9000f980:	f8df 908c 	ldr.w	r9, [pc, #140]	; 9000fa10 <prvSwitchTimerLists+0x98>
		xMessage.xMessageID = xCommandID;
9000f984:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f988:	e00d      	b.n	9000f9a6 <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f98a:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f98c:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000f98e:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000f990:	1d25      	adds	r5, r4, #4
9000f992:	4628      	mov	r0, r5
9000f994:	f7fd fdee 	bl	9000d574 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000f998:	6a23      	ldr	r3, [r4, #32]
9000f99a:	4620      	mov	r0, r4
9000f99c:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000f99e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
9000f9a2:	075b      	lsls	r3, r3, #29
9000f9a4:	d40a      	bmi.n	9000f9bc <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000f9a6:	6833      	ldr	r3, [r6, #0]
9000f9a8:	681a      	ldr	r2, [r3, #0]
9000f9aa:	2a00      	cmp	r2, #0
9000f9ac:	d1ed      	bne.n	9000f98a <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000f9ae:	4a17      	ldr	r2, [pc, #92]	; (9000fa0c <prvSwitchTimerLists+0x94>)
9000f9b0:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000f9b2:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000f9b4:	6031      	str	r1, [r6, #0]
}
9000f9b6:	b005      	add	sp, #20
9000f9b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f9bc:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9be:	4629      	mov	r1, r5
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000f9c0:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000f9c2:	429f      	cmp	r7, r3
9000f9c4:	d205      	bcs.n	9000f9d2 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9c6:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000f9c8:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000f9ca:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000f9cc:	f7fd fdba 	bl	9000d544 <vListInsert>
9000f9d0:	e7e9      	b.n	9000f9a6 <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
9000f9d2:	f8d9 3000 	ldr.w	r3, [r9]
9000f9d6:	b16b      	cbz	r3, 9000f9f4 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000f9d8:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000f9da:	e9cd 8700 	strd	r8, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000f9de:	f7ff fecf 	bl	9000f780 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000f9e2:	2300      	movs	r3, #0
9000f9e4:	4669      	mov	r1, sp
9000f9e6:	f8d9 0000 	ldr.w	r0, [r9]
9000f9ea:	461a      	mov	r2, r3
9000f9ec:	f7fe f93a 	bl	9000dc64 <xQueueGenericSend>
				configASSERT( xResult );
9000f9f0:	2800      	cmp	r0, #0
9000f9f2:	d1d8      	bne.n	9000f9a6 <prvSwitchTimerLists+0x2e>
9000f9f4:	f04f 0350 	mov.w	r3, #80	; 0x50
9000f9f8:	f383 8811 	msr	BASEPRI, r3
9000f9fc:	f3bf 8f6f 	isb	sy
9000fa00:	f3bf 8f4f 	dsb	sy
9000fa04:	e7fe      	b.n	9000fa04 <prvSwitchTimerLists+0x8c>
9000fa06:	bf00      	nop
9000fa08:	24023444 	.word	0x24023444
9000fa0c:	24023448 	.word	0x24023448
9000fa10:	24023568 	.word	0x24023568

9000fa14 <prvTimerTask>:
{
9000fa14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fa18:	4e9f      	ldr	r6, [pc, #636]	; (9000fc98 <prvTimerTask+0x284>)
9000fa1a:	b089      	sub	sp, #36	; 0x24
9000fa1c:	4d9f      	ldr	r5, [pc, #636]	; (9000fc9c <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000fa1e:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
9000fa22:	4c9f      	ldr	r4, [pc, #636]	; (9000fca0 <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000fa24:	6833      	ldr	r3, [r6, #0]
9000fa26:	681f      	ldr	r7, [r3, #0]
9000fa28:	2f00      	cmp	r7, #0
9000fa2a:	f000 80b2 	beq.w	9000fb92 <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fa2e:	68db      	ldr	r3, [r3, #12]
9000fa30:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000fa32:	f7ff fccf 	bl	9000f3d4 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fa36:	f7ff fce5 	bl	9000f404 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fa3a:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fa3c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fa3e:	4290      	cmp	r0, r2
9000fa40:	f0c0 80af 	bcc.w	9000fba2 <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fa44:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000fa46:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fa48:	f200 80d0 	bhi.w	9000fbec <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000fa4c:	f7ff fcca 	bl	9000f3e4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa50:	6832      	ldr	r2, [r6, #0]
9000fa52:	68d2      	ldr	r2, [r2, #12]
9000fa54:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fa58:	f10b 0804 	add.w	r8, fp, #4
9000fa5c:	4640      	mov	r0, r8
9000fa5e:	f7fd fd89 	bl	9000d574 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fa62:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
9000fa66:	0741      	lsls	r1, r0, #29
9000fa68:	f100 80d0 	bmi.w	9000fc0c <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fa6c:	f020 0001 	bic.w	r0, r0, #1
9000fa70:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fa74:	f8db 3020 	ldr.w	r3, [fp, #32]
9000fa78:	4658      	mov	r0, fp
9000fa7a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000fa7c:	2200      	movs	r2, #0
9000fa7e:	4669      	mov	r1, sp
9000fa80:	6820      	ldr	r0, [r4, #0]
9000fa82:	f7fe fbdb 	bl	9000e23c <xQueueReceive>
9000fa86:	2800      	cmp	r0, #0
9000fa88:	d0cc      	beq.n	9000fa24 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fa8a:	9b00      	ldr	r3, [sp, #0]
9000fa8c:	2b00      	cmp	r3, #0
9000fa8e:	db77      	blt.n	9000fb80 <prvTimerTask+0x16c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000fa90:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000fa92:	697b      	ldr	r3, [r7, #20]
9000fa94:	b113      	cbz	r3, 9000fa9c <prvTimerTask+0x88>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fa96:	1d38      	adds	r0, r7, #4
9000fa98:	f7fd fd6c 	bl	9000d574 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000fa9c:	f7ff fcb2 	bl	9000f404 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000faa0:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000faa2:	4680      	mov	r8, r0
	if( xTimeNow < xLastTime )
9000faa4:	4298      	cmp	r0, r3
9000faa6:	f0c0 8083 	bcc.w	9000fbb0 <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000faaa:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000faac:	f8c5 8000 	str.w	r8, [r5]
			switch( xMessage.xMessageID )
9000fab0:	2b09      	cmp	r3, #9
9000fab2:	d8e3      	bhi.n	9000fa7c <prvTimerTask+0x68>
9000fab4:	e8df f003 	tbb	[pc, r3]
9000fab8:	54050505 	.word	0x54050505
9000fabc:	05055b3e 	.word	0x05055b3e
9000fac0:	3e54      	.short	0x3e54
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fac2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fac6:	69ba      	ldr	r2, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fac8:	f043 0301 	orr.w	r3, r3, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000facc:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000face:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fad2:	9b01      	ldr	r3, [sp, #4]
9000fad4:	1899      	adds	r1, r3, r2
9000fad6:	bf2c      	ite	cs
9000fad8:	2001      	movcs	r0, #1
9000fada:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000fadc:	4541      	cmp	r1, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fade:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fae0:	f200 8086 	bhi.w	9000fbf0 <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fae4:	eba8 0303 	sub.w	r3, r8, r3
9000fae8:	429a      	cmp	r2, r3
9000faea:	f200 80c0 	bhi.w	9000fc6e <prvTimerTask+0x25a>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000faee:	6a3b      	ldr	r3, [r7, #32]
9000faf0:	4638      	mov	r0, r7
9000faf2:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000faf4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000faf8:	075b      	lsls	r3, r3, #29
9000fafa:	d5bf      	bpl.n	9000fa7c <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000fafc:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fafe:	9901      	ldr	r1, [sp, #4]
9000fb00:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
9000fb02:	b172      	cbz	r2, 9000fb22 <prvTimerTask+0x10e>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fb04:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fb06:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fb0a:	2300      	movs	r3, #0
9000fb0c:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fb0e:	f7ff fe37 	bl	9000f780 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fb12:	2300      	movs	r3, #0
9000fb14:	a904      	add	r1, sp, #16
9000fb16:	6820      	ldr	r0, [r4, #0]
9000fb18:	461a      	mov	r2, r3
9000fb1a:	f7fe f8a3 	bl	9000dc64 <xQueueGenericSend>
							configASSERT( xResult );
9000fb1e:	2800      	cmp	r0, #0
9000fb20:	d1ac      	bne.n	9000fa7c <prvTimerTask+0x68>
9000fb22:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fb26:	f383 8811 	msr	BASEPRI, r3
9000fb2a:	f3bf 8f6f 	isb	sy
9000fb2e:	f3bf 8f4f 	dsb	sy
9000fb32:	e7fe      	b.n	9000fb32 <prvTimerTask+0x11e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb34:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fb38:	f043 0301 	orr.w	r3, r3, #1
9000fb3c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fb40:	9b01      	ldr	r3, [sp, #4]
9000fb42:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fb44:	2b00      	cmp	r3, #0
9000fb46:	f000 809e 	beq.w	9000fc86 <prvTimerTask+0x272>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000fb4a:	4443      	add	r3, r8
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fb4c:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fb4e:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000fb50:	4543      	cmp	r3, r8
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fb52:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fb54:	d856      	bhi.n	9000fc04 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fb56:	4b53      	ldr	r3, [pc, #332]	; (9000fca4 <prvTimerTask+0x290>)
9000fb58:	6818      	ldr	r0, [r3, #0]
9000fb5a:	f7fd fcf3 	bl	9000d544 <vListInsert>
	return xProcessTimerNow;
9000fb5e:	e78d      	b.n	9000fa7c <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fb60:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fb64:	f023 0301 	bic.w	r3, r3, #1
9000fb68:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
9000fb6c:	e786      	b.n	9000fa7c <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000fb6e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
9000fb72:	079a      	lsls	r2, r3, #30
9000fb74:	d572      	bpl.n	9000fc5c <prvTimerTask+0x248>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fb76:	f023 0301 	bic.w	r3, r3, #1
9000fb7a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
9000fb7e:	e77d      	b.n	9000fa7c <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fb80:	9b01      	ldr	r3, [sp, #4]
9000fb82:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
9000fb86:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fb88:	9b00      	ldr	r3, [sp, #0]
9000fb8a:	2b00      	cmp	r3, #0
9000fb8c:	f6ff af76 	blt.w	9000fa7c <prvTimerTask+0x68>
9000fb90:	e77e      	b.n	9000fa90 <prvTimerTask+0x7c>
	vTaskSuspendAll();
9000fb92:	f7ff fc1f 	bl	9000f3d4 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fb96:	f7ff fc35 	bl	9000f404 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fb9a:	682a      	ldr	r2, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fb9c:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fb9e:	4282      	cmp	r2, r0
9000fba0:	d909      	bls.n	9000fbb6 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fba2:	f7ff fee9 	bl	9000f978 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fba6:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fbaa:	f7ff fc1b 	bl	9000f3e4 <xTaskResumeAll>
9000fbae:	e765      	b.n	9000fa7c <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fbb0:	f7ff fee2 	bl	9000f978 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000fbb4:	e779      	b.n	9000faaa <prvTimerTask+0x96>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fbb6:	4b3b      	ldr	r3, [pc, #236]	; (9000fca4 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000fbb8:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fbbc:	681a      	ldr	r2, [r3, #0]
9000fbbe:	6812      	ldr	r2, [r2, #0]
9000fbc0:	fab2 f282 	clz	r2, r2
9000fbc4:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fbc6:	eba7 010a 	sub.w	r1, r7, sl
9000fbca:	6820      	ldr	r0, [r4, #0]
9000fbcc:	f7fe ff4e 	bl	9000ea6c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fbd0:	f7ff fc08 	bl	9000f3e4 <xTaskResumeAll>
9000fbd4:	2800      	cmp	r0, #0
9000fbd6:	f47f af51 	bne.w	9000fa7c <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fbda:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
9000fbde:	f8c9 3d04 	str.w	r3, [r9, #3332]	; 0xd04
9000fbe2:	f3bf 8f4f 	dsb	sy
9000fbe6:	f3bf 8f6f 	isb	sy
9000fbea:	e747      	b.n	9000fa7c <prvTimerTask+0x68>
9000fbec:	2200      	movs	r2, #0
9000fbee:	e7ea      	b.n	9000fbc6 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fbf0:	4543      	cmp	r3, r8
9000fbf2:	d902      	bls.n	9000fbfa <prvTimerTask+0x1e6>
9000fbf4:	2800      	cmp	r0, #0
9000fbf6:	f43f af7a 	beq.w	9000faee <prvTimerTask+0xda>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fbfa:	1d39      	adds	r1, r7, #4
9000fbfc:	6830      	ldr	r0, [r6, #0]
9000fbfe:	f7fd fca1 	bl	9000d544 <vListInsert>
	return xProcessTimerNow;
9000fc02:	e73b      	b.n	9000fa7c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fc04:	6830      	ldr	r0, [r6, #0]
9000fc06:	f7fd fc9d 	bl	9000d544 <vListInsert>
9000fc0a:	e737      	b.n	9000fa7c <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fc0c:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fc10:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fc14:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000fc16:	4582      	cmp	sl, r0
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fc18:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fc1c:	d322      	bcc.n	9000fc64 <prvTimerTask+0x250>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fc1e:	ebaa 0307 	sub.w	r3, sl, r7
9000fc22:	429a      	cmp	r2, r3
9000fc24:	d829      	bhi.n	9000fc7a <prvTimerTask+0x266>
	if( xTimerQueue != NULL )
9000fc26:	6823      	ldr	r3, [r4, #0]
9000fc28:	b17b      	cbz	r3, 9000fc4a <prvTimerTask+0x236>
		xMessage.xMessageID = xCommandID;
9000fc2a:	2300      	movs	r3, #0
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fc2c:	9705      	str	r7, [sp, #20]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fc2e:	f8cd b018 	str.w	fp, [sp, #24]
		xMessage.xMessageID = xCommandID;
9000fc32:	9304      	str	r3, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fc34:	f7ff fda4 	bl	9000f780 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fc38:	2300      	movs	r3, #0
9000fc3a:	a904      	add	r1, sp, #16
9000fc3c:	6820      	ldr	r0, [r4, #0]
9000fc3e:	461a      	mov	r2, r3
9000fc40:	f7fe f810 	bl	9000dc64 <xQueueGenericSend>
			configASSERT( xResult );
9000fc44:	2800      	cmp	r0, #0
9000fc46:	f47f af15 	bne.w	9000fa74 <prvTimerTask+0x60>
9000fc4a:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc4e:	f383 8811 	msr	BASEPRI, r3
9000fc52:	f3bf 8f6f 	isb	sy
9000fc56:	f3bf 8f4f 	dsb	sy
9000fc5a:	e7fe      	b.n	9000fc5a <prvTimerTask+0x246>
							vPortFree( pxTimer );
9000fc5c:	4638      	mov	r0, r7
9000fc5e:	f7fd fbed 	bl	9000d43c <vPortFree>
9000fc62:	e70b      	b.n	9000fa7c <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fc64:	4641      	mov	r1, r8
9000fc66:	6830      	ldr	r0, [r6, #0]
9000fc68:	f7fd fc6c 	bl	9000d544 <vListInsert>
	return xProcessTimerNow;
9000fc6c:	e702      	b.n	9000fa74 <prvTimerTask+0x60>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fc6e:	4b0d      	ldr	r3, [pc, #52]	; (9000fca4 <prvTimerTask+0x290>)
9000fc70:	1d39      	adds	r1, r7, #4
9000fc72:	6818      	ldr	r0, [r3, #0]
9000fc74:	f7fd fc66 	bl	9000d544 <vListInsert>
	return xProcessTimerNow;
9000fc78:	e700      	b.n	9000fa7c <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fc7a:	4b0a      	ldr	r3, [pc, #40]	; (9000fca4 <prvTimerTask+0x290>)
9000fc7c:	4641      	mov	r1, r8
9000fc7e:	6818      	ldr	r0, [r3, #0]
9000fc80:	f7fd fc60 	bl	9000d544 <vListInsert>
	return xProcessTimerNow;
9000fc84:	e6f6      	b.n	9000fa74 <prvTimerTask+0x60>
9000fc86:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fc8a:	f383 8811 	msr	BASEPRI, r3
9000fc8e:	f3bf 8f6f 	isb	sy
9000fc92:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fc96:	e7fe      	b.n	9000fc96 <prvTimerTask+0x282>
9000fc98:	24023444 	.word	0x24023444
9000fc9c:	24023514 	.word	0x24023514
9000fca0:	24023568 	.word	0x24023568
9000fca4:	24023448 	.word	0x24023448

9000fca8 <xTimerCreateTimerTask>:
{
9000fca8:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fcaa:	4c23      	ldr	r4, [pc, #140]	; (9000fd38 <xTimerCreateTimerTask+0x90>)
{
9000fcac:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
9000fcae:	f7fd fce1 	bl	9000d674 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fcb2:	6825      	ldr	r5, [r4, #0]
9000fcb4:	b335      	cbz	r5, 9000fd04 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fcb6:	f7fd fcff 	bl	9000d6b8 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fcba:	6823      	ldr	r3, [r4, #0]
9000fcbc:	b1cb      	cbz	r3, 9000fcf2 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fcbe:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fcc0:	aa07      	add	r2, sp, #28
9000fcc2:	a906      	add	r1, sp, #24
9000fcc4:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fcc6:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fcc8:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fccc:	f7fd fae8 	bl	9000d2a0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fcd0:	4623      	mov	r3, r4
9000fcd2:	9a07      	ldr	r2, [sp, #28]
9000fcd4:	9500      	str	r5, [sp, #0]
9000fcd6:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fcda:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fcde:	4917      	ldr	r1, [pc, #92]	; (9000fd3c <xTimerCreateTimerTask+0x94>)
9000fce0:	4817      	ldr	r0, [pc, #92]	; (9000fd40 <xTimerCreateTimerTask+0x98>)
9000fce2:	f7ff f93f 	bl	9000ef64 <xTaskCreateStatic>
9000fce6:	4b17      	ldr	r3, [pc, #92]	; (9000fd44 <xTimerCreateTimerTask+0x9c>)
9000fce8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fcea:	b110      	cbz	r0, 9000fcf2 <xTimerCreateTimerTask+0x4a>
}
9000fcec:	2001      	movs	r0, #1
9000fcee:	b009      	add	sp, #36	; 0x24
9000fcf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fcf2:	f04f 0350 	mov.w	r3, #80	; 0x50
9000fcf6:	f383 8811 	msr	BASEPRI, r3
9000fcfa:	f3bf 8f6f 	isb	sy
9000fcfe:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fd02:	e7fe      	b.n	9000fd02 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fd04:	4f10      	ldr	r7, [pc, #64]	; (9000fd48 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fd06:	4e11      	ldr	r6, [pc, #68]	; (9000fd4c <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fd08:	4638      	mov	r0, r7
9000fd0a:	f7fd fbfb 	bl	9000d504 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fd0e:	4630      	mov	r0, r6
9000fd10:	f7fd fbf8 	bl	9000d504 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fd14:	4a0e      	ldr	r2, [pc, #56]	; (9000fd50 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fd16:	9500      	str	r5, [sp, #0]
9000fd18:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fd1a:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fd1c:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fd1e:	4a0d      	ldr	r2, [pc, #52]	; (9000fd54 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fd20:	4b0d      	ldr	r3, [pc, #52]	; (9000fd58 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fd22:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fd24:	4a0d      	ldr	r2, [pc, #52]	; (9000fd5c <xTimerCreateTimerTask+0xb4>)
9000fd26:	f7fd fe47 	bl	9000d9b8 <xQueueGenericCreateStatic>
9000fd2a:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fd2c:	2800      	cmp	r0, #0
9000fd2e:	d0c2      	beq.n	9000fcb6 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fd30:	490b      	ldr	r1, [pc, #44]	; (9000fd60 <xTimerCreateTimerTask+0xb8>)
9000fd32:	f7fe fe73 	bl	9000ea1c <vQueueAddToRegistry>
9000fd36:	e7be      	b.n	9000fcb6 <xTimerCreateTimerTask+0xe>
9000fd38:	24023568 	.word	0x24023568
9000fd3c:	9002a158 	.word	0x9002a158
9000fd40:	9000fa15 	.word	0x9000fa15
9000fd44:	2402356c 	.word	0x2402356c
9000fd48:	240234ec 	.word	0x240234ec
9000fd4c:	24023500 	.word	0x24023500
9000fd50:	24023444 	.word	0x24023444
9000fd54:	24023448 	.word	0x24023448
9000fd58:	24023518 	.word	0x24023518
9000fd5c:	2402344c 	.word	0x2402344c
9000fd60:	9002a150 	.word	0x9002a150

9000fd64 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fd64:	8880      	ldrh	r0, [r0, #4]
9000fd66:	4770      	bx	lr

9000fd68 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fd68:	b570      	push	{r4, r5, r6, lr}
9000fd6a:	6803      	ldr	r3, [r0, #0]
9000fd6c:	460c      	mov	r4, r1
9000fd6e:	2100      	movs	r1, #0
9000fd70:	4605      	mov	r5, r0
9000fd72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fd74:	4798      	blx	r3
9000fd76:	4606      	mov	r6, r0
9000fd78:	682b      	ldr	r3, [r5, #0]
9000fd7a:	4628      	mov	r0, r5
9000fd7c:	1ba4      	subs	r4, r4, r6
9000fd7e:	6a1b      	ldr	r3, [r3, #32]
9000fd80:	b2a4      	uxth	r4, r4
9000fd82:	4798      	blx	r3
9000fd84:	fbb4 f0f0 	udiv	r0, r4, r0
9000fd88:	bd70      	pop	{r4, r5, r6, pc}

9000fd8a <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fd8a:	2300      	movs	r3, #0
9000fd8c:	8083      	strh	r3, [r0, #4]
9000fd8e:	4770      	bx	lr

9000fd90 <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fd90:	b510      	push	{r4, lr}
9000fd92:	6803      	ldr	r3, [r0, #0]
9000fd94:	4604      	mov	r4, r0
9000fd96:	8881      	ldrh	r1, [r0, #4]
9000fd98:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fd9a:	4798      	blx	r3
9000fd9c:	88a3      	ldrh	r3, [r4, #4]
9000fd9e:	3301      	adds	r3, #1
9000fda0:	80a3      	strh	r3, [r4, #4]
9000fda2:	bd10      	pop	{r4, pc}

9000fda4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fda4:	6803      	ldr	r3, [r0, #0]
9000fda6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
9000fda8:	4718      	bx	r3

9000fdaa <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fdaa:	4770      	bx	lr

9000fdac <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fdac:	4a02      	ldr	r2, [pc, #8]	; (9000fdb8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fdae:	6002      	str	r2, [r0, #0]
9000fdb0:	2200      	movs	r2, #0
9000fdb2:	8082      	strh	r2, [r0, #4]
9000fdb4:	4770      	bx	lr
9000fdb6:	bf00      	nop
9000fdb8:	9002a168 	.word	0x9002a168

9000fdbc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fdbc:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fdbe:	2000      	movs	r0, #0
9000fdc0:	b12b      	cbz	r3, 9000fdce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fdc2:	b920      	cbnz	r0, 9000fdce <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fdc4:	1a5a      	subs	r2, r3, r1
9000fdc6:	699b      	ldr	r3, [r3, #24]
9000fdc8:	4250      	negs	r0, r2
9000fdca:	4150      	adcs	r0, r2
9000fdcc:	e7f8      	b.n	9000fdc0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fdce:	4770      	bx	lr

9000fdd0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fdd0:	2300      	movs	r3, #0
9000fdd2:	6148      	str	r0, [r1, #20]
9000fdd4:	618b      	str	r3, [r1, #24]
9000fdd6:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fdd8:	b913      	cbnz	r3, 9000fde0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fdda:	6281      	str	r1, [r0, #40]	; 0x28
9000fddc:	4770      	bx	lr
9000fdde:	4613      	mov	r3, r2
9000fde0:	699a      	ldr	r2, [r3, #24]
9000fde2:	2a00      	cmp	r2, #0
9000fde4:	d1fb      	bne.n	9000fdde <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fde6:	6199      	str	r1, [r3, #24]
9000fde8:	4770      	bx	lr

9000fdea <_ZN8touchgfx9Container9removeAllEv>:
9000fdea:	2200      	movs	r2, #0
9000fdec:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fdee:	b123      	cbz	r3, 9000fdfa <_ZN8touchgfx9Container9removeAllEv+0x10>
9000fdf0:	6999      	ldr	r1, [r3, #24]
9000fdf2:	6281      	str	r1, [r0, #40]	; 0x28
9000fdf4:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000fdf8:	e7f8      	b.n	9000fdec <_ZN8touchgfx9Container9removeAllEv+0x2>
9000fdfa:	4770      	bx	lr

9000fdfc <_ZN8touchgfx9Container6unlinkEv>:
9000fdfc:	2300      	movs	r3, #0
9000fdfe:	6283      	str	r3, [r0, #40]	; 0x28
9000fe00:	4770      	bx	lr

9000fe02 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fe02:	2200      	movs	r2, #0
9000fe04:	8002      	strh	r2, [r0, #0]
9000fe06:	8042      	strh	r2, [r0, #2]
9000fe08:	8082      	strh	r2, [r0, #4]
9000fe0a:	80c2      	strh	r2, [r0, #6]
9000fe0c:	4770      	bx	lr

9000fe0e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fe0e:	b570      	push	{r4, r5, r6, lr}
9000fe10:	460d      	mov	r5, r1
9000fe12:	4616      	mov	r6, r2
9000fe14:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fe16:	b13c      	cbz	r4, 9000fe28 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fe18:	6823      	ldr	r3, [r4, #0]
9000fe1a:	4620      	mov	r0, r4
9000fe1c:	4632      	mov	r2, r6
9000fe1e:	4629      	mov	r1, r5
9000fe20:	6d5b      	ldr	r3, [r3, #84]	; 0x54
9000fe22:	4798      	blx	r3
9000fe24:	69a4      	ldr	r4, [r4, #24]
9000fe26:	e7f6      	b.n	9000fe16 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fe28:	bd70      	pop	{r4, r5, r6, pc}

9000fe2a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000fe2a:	b538      	push	{r3, r4, r5, lr}
9000fe2c:	460d      	mov	r5, r1
9000fe2e:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fe30:	b134      	cbz	r4, 9000fe40 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fe32:	682b      	ldr	r3, [r5, #0]
9000fe34:	4621      	mov	r1, r4
9000fe36:	4628      	mov	r0, r5
9000fe38:	689b      	ldr	r3, [r3, #8]
9000fe3a:	4798      	blx	r3
9000fe3c:	69a4      	ldr	r4, [r4, #24]
9000fe3e:	e7f7      	b.n	9000fe30 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000fe40:	bd38      	pop	{r3, r4, r5, pc}

9000fe42 <_ZN8touchgfx9ContainerD1Ev>:
9000fe42:	4770      	bx	lr

9000fe44 <_ZN8touchgfx9ContainerD0Ev>:
9000fe44:	b510      	push	{r4, lr}
9000fe46:	4604      	mov	r4, r0
9000fe48:	212c      	movs	r1, #44	; 0x2c
9000fe4a:	f016 f9b2 	bl	900261b2 <_ZdlPvj>
9000fe4e:	4620      	mov	r0, r4
9000fe50:	bd10      	pop	{r4, pc}

9000fe52 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000fe52:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fe54:	b19b      	cbz	r3, 9000fe7e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fe56:	428b      	cmp	r3, r1
9000fe58:	d109      	bne.n	9000fe6e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000fe5a:	699a      	ldr	r2, [r3, #24]
9000fe5c:	2100      	movs	r1, #0
9000fe5e:	6159      	str	r1, [r3, #20]
9000fe60:	6282      	str	r2, [r0, #40]	; 0x28
9000fe62:	b902      	cbnz	r2, 9000fe66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000fe64:	4770      	bx	lr
9000fe66:	6199      	str	r1, [r3, #24]
9000fe68:	4770      	bx	lr
9000fe6a:	4613      	mov	r3, r2
9000fe6c:	b13a      	cbz	r2, 9000fe7e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000fe6e:	699a      	ldr	r2, [r3, #24]
9000fe70:	428a      	cmp	r2, r1
9000fe72:	d1fa      	bne.n	9000fe6a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000fe74:	698a      	ldr	r2, [r1, #24]
9000fe76:	619a      	str	r2, [r3, #24]
9000fe78:	2300      	movs	r3, #0
9000fe7a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000fe7e:	4770      	bx	lr

9000fe80 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000fe80:	b410      	push	{r4}
9000fe82:	6a83      	ldr	r3, [r0, #40]	; 0x28
9000fe84:	4604      	mov	r4, r0
9000fe86:	b92b      	cbnz	r3, 9000fe94 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000fe88:	6803      	ldr	r3, [r0, #0]
9000fe8a:	4611      	mov	r1, r2
9000fe8c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fe90:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9000fe92:	4718      	bx	r3
9000fe94:	b941      	cbnz	r1, 9000fea8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000fe96:	6193      	str	r3, [r2, #24]
9000fe98:	6282      	str	r2, [r0, #40]	; 0x28
9000fe9a:	6154      	str	r4, [r2, #20]
9000fe9c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000fea0:	4770      	bx	lr
9000fea2:	4603      	mov	r3, r0
9000fea4:	2800      	cmp	r0, #0
9000fea6:	d0f9      	beq.n	9000fe9c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000fea8:	4299      	cmp	r1, r3
9000feaa:	6998      	ldr	r0, [r3, #24]
9000feac:	d1f9      	bne.n	9000fea2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000feae:	6190      	str	r0, [r2, #24]
9000feb0:	618a      	str	r2, [r1, #24]
9000feb2:	e7f2      	b.n	9000fe9a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000feb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000feb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000feb8:	461f      	mov	r7, r3
9000feba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
9000febe:	460d      	mov	r5, r1
9000fec0:	4616      	mov	r6, r2
9000fec2:	b103      	cbz	r3, 9000fec6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000fec4:	6038      	str	r0, [r7, #0]
9000fec6:	6a84      	ldr	r4, [r0, #40]	; 0x28
9000fec8:	b314      	cbz	r4, 9000ff10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000feca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9000fece:	b1eb      	cbz	r3, 9000ff0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fed0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000fed4:	428d      	cmp	r5, r1
9000fed6:	db19      	blt.n	9000ff0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fed8:	b289      	uxth	r1, r1
9000feda:	8923      	ldrh	r3, [r4, #8]
9000fedc:	440b      	add	r3, r1
9000fede:	b21b      	sxth	r3, r3
9000fee0:	429d      	cmp	r5, r3
9000fee2:	da13      	bge.n	9000ff0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fee4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000fee8:	4296      	cmp	r6, r2
9000feea:	db0f      	blt.n	9000ff0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000feec:	b292      	uxth	r2, r2
9000feee:	8963      	ldrh	r3, [r4, #10]
9000fef0:	4413      	add	r3, r2
9000fef2:	b21b      	sxth	r3, r3
9000fef4:	429e      	cmp	r6, r3
9000fef6:	da09      	bge.n	9000ff0c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000fef8:	6823      	ldr	r3, [r4, #0]
9000fefa:	1ab2      	subs	r2, r6, r2
9000fefc:	1a69      	subs	r1, r5, r1
9000fefe:	4620      	mov	r0, r4
9000ff00:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
9000ff04:	b212      	sxth	r2, r2
9000ff06:	463b      	mov	r3, r7
9000ff08:	b209      	sxth	r1, r1
9000ff0a:	47c0      	blx	r8
9000ff0c:	69a4      	ldr	r4, [r4, #24]
9000ff0e:	e7db      	b.n	9000fec8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000ff10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000ff14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000ff14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ff18:	4c6d      	ldr	r4, [pc, #436]	; (900100d0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000ff1a:	b0a1      	sub	sp, #132	; 0x84
9000ff1c:	4606      	mov	r6, r0
9000ff1e:	6824      	ldr	r4, [r4, #0]
9000ff20:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9000ff22:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
9000ff26:	2400      	movs	r4, #0
9000ff28:	9303      	str	r3, [sp, #12]
9000ff2a:	802c      	strh	r4, [r5, #0]
9000ff2c:	9d2b      	ldr	r5, [sp, #172]	; 0xac
9000ff2e:	802c      	strh	r4, [r5, #0]
9000ff30:	601c      	str	r4, [r3, #0]
9000ff32:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000ff36:	f7ff ffbd 	bl	9000feb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000ff3a:	f1b9 0f03 	cmp.w	r9, #3
9000ff3e:	f340 80c1 	ble.w	900100c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
9000ff42:	4631      	mov	r1, r6
9000ff44:	a80c      	add	r0, sp, #48	; 0x30
9000ff46:	f006 f8fb 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000ff4a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9000ff4e:	9306      	str	r3, [sp, #24]
9000ff50:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9000ff54:	9307      	str	r3, [sp, #28]
9000ff56:	9b03      	ldr	r3, [sp, #12]
9000ff58:	f8d3 a000 	ldr.w	sl, [r3]
9000ff5c:	f1ba 0f00 	cmp.w	sl, #0
9000ff60:	f000 80b3 	beq.w	900100ca <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
9000ff64:	4651      	mov	r1, sl
9000ff66:	a810      	add	r0, sp, #64	; 0x40
9000ff68:	f006 f8ea 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9000ff6c:	2002      	movs	r0, #2
9000ff6e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
9000ff72:	9b01      	ldr	r3, [sp, #4]
9000ff74:	9a06      	ldr	r2, [sp, #24]
9000ff76:	fb91 f1f0 	sdiv	r1, r1, r0
9000ff7a:	189d      	adds	r5, r3, r2
9000ff7c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
9000ff80:	9a07      	ldr	r2, [sp, #28]
9000ff82:	4419      	add	r1, r3
9000ff84:	9b02      	ldr	r3, [sp, #8]
9000ff86:	4413      	add	r3, r2
9000ff88:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
9000ff8c:	1a6d      	subs	r5, r5, r1
9000ff8e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
9000ff92:	fb92 f2f0 	sdiv	r2, r2, r0
9000ff96:	440a      	add	r2, r1
9000ff98:	1a9b      	subs	r3, r3, r2
9000ff9a:	435b      	muls	r3, r3
9000ff9c:	fb05 3505 	mla	r5, r5, r5, r3
9000ffa0:	4f4c      	ldr	r7, [pc, #304]	; (900100d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
9000ffa2:	ac10      	add	r4, sp, #64	; 0x40
9000ffa4:	f1b9 0f0c 	cmp.w	r9, #12
9000ffa8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000ffaa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000ffac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000ffae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000ffb0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9000ffb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9000ffb4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
9000ffb8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9000ffbc:	f04f 0303 	mov.w	r3, #3
9000ffc0:	bfd8      	it	le
9000ffc2:	f109 32ff 	addle.w	r2, r9, #4294967295
9000ffc6:	f04f 0400 	mov.w	r4, #0
9000ffca:	f8cd 9000 	str.w	r9, [sp]
9000ffce:	bfcc      	ite	gt
9000ffd0:	4698      	movgt	r8, r3
9000ffd2:	fb92 f8f3 	sdivle	r8, r2, r3
9000ffd6:	1c63      	adds	r3, r4, #1
9000ffd8:	aa10      	add	r2, sp, #64	; 0x40
9000ffda:	f004 0401 	and.w	r4, r4, #1
9000ffde:	f04f 0b00 	mov.w	fp, #0
9000ffe2:	9308      	str	r3, [sp, #32]
9000ffe4:	9b00      	ldr	r3, [sp, #0]
9000ffe6:	eb02 1444 	add.w	r4, r2, r4, lsl #5
9000ffea:	fb93 f3f8 	sdiv	r3, r3, r8
9000ffee:	3404      	adds	r4, #4
9000fff0:	b29b      	uxth	r3, r3
9000fff2:	9304      	str	r3, [sp, #16]
9000fff4:	9a04      	ldr	r2, [sp, #16]
9000fff6:	f854 3c04 	ldr.w	r3, [r4, #-4]
9000fffa:	fb13 f302 	smulbb	r3, r3, r2
9000fffe:	9a01      	ldr	r2, [sp, #4]
90010000:	b29b      	uxth	r3, r3
90010002:	1899      	adds	r1, r3, r2
90010004:	9305      	str	r3, [sp, #20]
90010006:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
9001000a:	b209      	sxth	r1, r1
9001000c:	4299      	cmp	r1, r3
9001000e:	db4d      	blt.n	900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010010:	8932      	ldrh	r2, [r6, #8]
90010012:	4413      	add	r3, r2
90010014:	b21b      	sxth	r3, r3
90010016:	4299      	cmp	r1, r3
90010018:	da48      	bge.n	900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001001a:	9b04      	ldr	r3, [sp, #16]
9001001c:	6827      	ldr	r7, [r4, #0]
9001001e:	fb17 f703 	smulbb	r7, r7, r3
90010022:	9b02      	ldr	r3, [sp, #8]
90010024:	b2bf      	uxth	r7, r7
90010026:	18fa      	adds	r2, r7, r3
90010028:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
9001002c:	b212      	sxth	r2, r2
9001002e:	429a      	cmp	r2, r3
90010030:	db3c      	blt.n	900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010032:	8970      	ldrh	r0, [r6, #10]
90010034:	4403      	add	r3, r0
90010036:	b21b      	sxth	r3, r3
90010038:	429a      	cmp	r2, r3
9001003a:	da37      	bge.n	900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001003c:	2300      	movs	r3, #0
9001003e:	4630      	mov	r0, r6
90010040:	930b      	str	r3, [sp, #44]	; 0x2c
90010042:	ab0b      	add	r3, sp, #44	; 0x2c
90010044:	f7ff ff36 	bl	9000feb4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010048:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001004a:	b37a      	cbz	r2, 900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001004c:	4552      	cmp	r2, sl
9001004e:	d02d      	beq.n	900100ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010050:	4611      	mov	r1, r2
90010052:	a80e      	add	r0, sp, #56	; 0x38
90010054:	9209      	str	r2, [sp, #36]	; 0x24
90010056:	f006 f873 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001005a:	f04f 0e02 	mov.w	lr, #2
9001005e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
90010062:	9a06      	ldr	r2, [sp, #24]
90010064:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
90010068:	9b01      	ldr	r3, [sp, #4]
9001006a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
9001006e:	4413      	add	r3, r2
90010070:	9a07      	ldr	r2, [sp, #28]
90010072:	fb91 f1fe 	sdiv	r1, r1, lr
90010076:	fb9c fcfe 	sdiv	ip, ip, lr
9001007a:	4401      	add	r1, r0
9001007c:	1a58      	subs	r0, r3, r1
9001007e:	9b02      	ldr	r3, [sp, #8]
90010080:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
90010084:	4413      	add	r3, r2
90010086:	9a09      	ldr	r2, [sp, #36]	; 0x24
90010088:	448c      	add	ip, r1
9001008a:	eba3 030c 	sub.w	r3, r3, ip
9001008e:	435b      	muls	r3, r3
90010090:	fb00 3300 	mla	r3, r0, r0, r3
90010094:	42ab      	cmp	r3, r5
90010096:	d208      	bcs.n	900100aa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010098:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001009a:	461d      	mov	r5, r3
9001009c:	9803      	ldr	r0, [sp, #12]
9001009e:	6001      	str	r1, [r0, #0]
900100a0:	992a      	ldr	r1, [sp, #168]	; 0xa8
900100a2:	9805      	ldr	r0, [sp, #20]
900100a4:	8008      	strh	r0, [r1, #0]
900100a6:	992b      	ldr	r1, [sp, #172]	; 0xac
900100a8:	800f      	strh	r7, [r1, #0]
900100aa:	4692      	mov	sl, r2
900100ac:	f10b 0b01 	add.w	fp, fp, #1
900100b0:	3408      	adds	r4, #8
900100b2:	f1bb 0f04 	cmp.w	fp, #4
900100b6:	d19d      	bne.n	9000fff4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
900100b8:	9b00      	ldr	r3, [sp, #0]
900100ba:	9c08      	ldr	r4, [sp, #32]
900100bc:	444b      	add	r3, r9
900100be:	4544      	cmp	r4, r8
900100c0:	9300      	str	r3, [sp, #0]
900100c2:	d188      	bne.n	9000ffd6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
900100c4:	b021      	add	sp, #132	; 0x84
900100c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900100ca:	f04f 35ff 	mov.w	r5, #4294967295
900100ce:	e767      	b.n	9000ffa0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
900100d0:	2402357c 	.word	0x2402357c
900100d4:	90027334 	.word	0x90027334

900100d8 <_ZN8touchgfx4RectaNERKS0_>:
900100d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900100dc:	f9b1 7000 	ldrsh.w	r7, [r1]
900100e0:	888c      	ldrh	r4, [r1, #4]
900100e2:	f9b0 9000 	ldrsh.w	r9, [r0]
900100e6:	443c      	add	r4, r7
900100e8:	b2a4      	uxth	r4, r4
900100ea:	fa0f f884 	sxth.w	r8, r4
900100ee:	45c1      	cmp	r9, r8
900100f0:	da2f      	bge.n	90010152 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900100f2:	8882      	ldrh	r2, [r0, #4]
900100f4:	444a      	add	r2, r9
900100f6:	b292      	uxth	r2, r2
900100f8:	fa0f fe82 	sxth.w	lr, r2
900100fc:	4577      	cmp	r7, lr
900100fe:	da28      	bge.n	90010152 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010100:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
90010104:	88cb      	ldrh	r3, [r1, #6]
90010106:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
9001010a:	442b      	add	r3, r5
9001010c:	b21b      	sxth	r3, r3
9001010e:	429e      	cmp	r6, r3
90010110:	da1f      	bge.n	90010152 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010112:	88c3      	ldrh	r3, [r0, #6]
90010114:	4433      	add	r3, r6
90010116:	b29b      	uxth	r3, r3
90010118:	fa0f fc83 	sxth.w	ip, r3
9001011c:	4565      	cmp	r5, ip
9001011e:	da18      	bge.n	90010152 <_ZN8touchgfx4RectaNERKS0_+0x7a>
90010120:	454f      	cmp	r7, r9
90010122:	bfb8      	it	lt
90010124:	464f      	movlt	r7, r9
90010126:	42b5      	cmp	r5, r6
90010128:	bfb8      	it	lt
9001012a:	4635      	movlt	r5, r6
9001012c:	45f0      	cmp	r8, lr
9001012e:	bfd8      	it	le
90010130:	4622      	movle	r2, r4
90010132:	1bd2      	subs	r2, r2, r7
90010134:	8082      	strh	r2, [r0, #4]
90010136:	884a      	ldrh	r2, [r1, #2]
90010138:	88c9      	ldrh	r1, [r1, #6]
9001013a:	8007      	strh	r7, [r0, #0]
9001013c:	440a      	add	r2, r1
9001013e:	8045      	strh	r5, [r0, #2]
90010140:	b292      	uxth	r2, r2
90010142:	b211      	sxth	r1, r2
90010144:	458c      	cmp	ip, r1
90010146:	bfa8      	it	ge
90010148:	4613      	movge	r3, r2
9001014a:	1b5b      	subs	r3, r3, r5
9001014c:	80c3      	strh	r3, [r0, #6]
9001014e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010152:	2300      	movs	r3, #0
90010154:	8003      	strh	r3, [r0, #0]
90010156:	8043      	strh	r3, [r0, #2]
90010158:	8083      	strh	r3, [r0, #4]
9001015a:	80c3      	strh	r3, [r0, #6]
9001015c:	e7f7      	b.n	9001014e <_ZN8touchgfx4RectaNERKS0_+0x76>

9001015e <_ZNK8touchgfx4Rect7isEmptyEv>:
9001015e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010162:	2b00      	cmp	r3, #0
90010164:	dd06      	ble.n	90010174 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010166:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001016a:	2800      	cmp	r0, #0
9001016c:	bfcc      	ite	gt
9001016e:	2000      	movgt	r0, #0
90010170:	2001      	movle	r0, #1
90010172:	4770      	bx	lr
90010174:	2001      	movs	r0, #1
90010176:	4770      	bx	lr

90010178 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010178:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001017c:	2300      	movs	r3, #0
9001017e:	4604      	mov	r4, r0
90010180:	6a8d      	ldr	r5, [r1, #40]	; 0x28
90010182:	8003      	strh	r3, [r0, #0]
90010184:	8043      	strh	r3, [r0, #2]
90010186:	8083      	strh	r3, [r0, #4]
90010188:	80c3      	strh	r3, [r0, #6]
9001018a:	2d00      	cmp	r5, #0
9001018c:	d040      	beq.n	90010210 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001018e:	1d28      	adds	r0, r5, #4
90010190:	f7ff ffe5 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90010194:	b988      	cbnz	r0, 900101ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010196:	4620      	mov	r0, r4
90010198:	f7ff ffe1 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001019c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
900101a0:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
900101a4:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
900101a8:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
900101ac:	b138      	cbz	r0, 900101be <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
900101ae:	8022      	strh	r2, [r4, #0]
900101b0:	8063      	strh	r3, [r4, #2]
900101b2:	f8a4 e004 	strh.w	lr, [r4, #4]
900101b6:	f8a4 c006 	strh.w	ip, [r4, #6]
900101ba:	69ad      	ldr	r5, [r5, #24]
900101bc:	e7e5      	b.n	9001018a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
900101be:	f9b4 0000 	ldrsh.w	r0, [r4]
900101c2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
900101c6:	4290      	cmp	r0, r2
900101c8:	4607      	mov	r7, r0
900101ca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
900101ce:	460e      	mov	r6, r1
900101d0:	bfa8      	it	ge
900101d2:	4617      	movge	r7, r2
900101d4:	4299      	cmp	r1, r3
900101d6:	4472      	add	r2, lr
900101d8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
900101dc:	bfa8      	it	ge
900101de:	461e      	movge	r6, r3
900101e0:	4440      	add	r0, r8
900101e2:	4471      	add	r1, lr
900101e4:	4463      	add	r3, ip
900101e6:	b200      	sxth	r0, r0
900101e8:	8027      	strh	r7, [r4, #0]
900101ea:	b212      	sxth	r2, r2
900101ec:	8066      	strh	r6, [r4, #2]
900101ee:	b209      	sxth	r1, r1
900101f0:	b21b      	sxth	r3, r3
900101f2:	4290      	cmp	r0, r2
900101f4:	bfac      	ite	ge
900101f6:	ebc7 0200 	rsbge	r2, r7, r0
900101fa:	ebc7 0202 	rsblt	r2, r7, r2
900101fe:	4299      	cmp	r1, r3
90010200:	bfac      	ite	ge
90010202:	ebc6 0301 	rsbge	r3, r6, r1
90010206:	ebc6 0303 	rsblt	r3, r6, r3
9001020a:	80a2      	strh	r2, [r4, #4]
9001020c:	80e3      	strh	r3, [r4, #6]
9001020e:	e7d4      	b.n	900101ba <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010210:	4620      	mov	r0, r4
90010212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010216 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
90010216:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
9001021a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9001021e:	b383      	cbz	r3, 90010282 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010220:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010222:	b374      	cbz	r4, 90010282 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
90010224:	f9b1 5000 	ldrsh.w	r5, [r1]
90010228:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
9001022c:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
90010230:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
90010234:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
90010238:	b303      	cbz	r3, 9001027c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001023a:	4668      	mov	r0, sp
9001023c:	1d21      	adds	r1, r4, #4
9001023e:	f8ad 5000 	strh.w	r5, [sp]
90010242:	f8ad 6002 	strh.w	r6, [sp, #2]
90010246:	f8ad 7004 	strh.w	r7, [sp, #4]
9001024a:	f8ad 8006 	strh.w	r8, [sp, #6]
9001024e:	f7ff ff43 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90010252:	4668      	mov	r0, sp
90010254:	f7ff ff83 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90010258:	b980      	cbnz	r0, 9001027c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001025a:	f8bd 3000 	ldrh.w	r3, [sp]
9001025e:	4669      	mov	r1, sp
90010260:	88a2      	ldrh	r2, [r4, #4]
90010262:	4620      	mov	r0, r4
90010264:	1a9b      	subs	r3, r3, r2
90010266:	88e2      	ldrh	r2, [r4, #6]
90010268:	f8ad 3000 	strh.w	r3, [sp]
9001026c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010270:	1a9b      	subs	r3, r3, r2
90010272:	f8ad 3002 	strh.w	r3, [sp, #2]
90010276:	6823      	ldr	r3, [r4, #0]
90010278:	689b      	ldr	r3, [r3, #8]
9001027a:	4798      	blx	r3
9001027c:	69a4      	ldr	r4, [r4, #24]
9001027e:	2c00      	cmp	r4, #0
90010280:	d1d8      	bne.n	90010234 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010282:	b002      	add	sp, #8
90010284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010288 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010288:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001028a:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
9001028e:	460d      	mov	r5, r1
90010290:	4616      	mov	r6, r2
90010292:	b323      	cbz	r3, 900102de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010294:	6a84      	ldr	r4, [r0, #40]	; 0x28
90010296:	b314      	cbz	r4, 900102de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010298:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
9001029c:	b1eb      	cbz	r3, 900102da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001029e:	6828      	ldr	r0, [r5, #0]
900102a0:	466b      	mov	r3, sp
900102a2:	6869      	ldr	r1, [r5, #4]
900102a4:	c303      	stmia	r3!, {r0, r1}
900102a6:	4668      	mov	r0, sp
900102a8:	1d21      	adds	r1, r4, #4
900102aa:	f7ff ff15 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900102ae:	4668      	mov	r0, sp
900102b0:	f7ff ff55 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
900102b4:	b988      	cbnz	r0, 900102da <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
900102b6:	f8bd 3000 	ldrh.w	r3, [sp]
900102ba:	4669      	mov	r1, sp
900102bc:	88a2      	ldrh	r2, [r4, #4]
900102be:	4620      	mov	r0, r4
900102c0:	1a9b      	subs	r3, r3, r2
900102c2:	88e2      	ldrh	r2, [r4, #6]
900102c4:	f8ad 3000 	strh.w	r3, [sp]
900102c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900102cc:	1a9b      	subs	r3, r3, r2
900102ce:	4632      	mov	r2, r6
900102d0:	f8ad 3002 	strh.w	r3, [sp, #2]
900102d4:	6823      	ldr	r3, [r4, #0]
900102d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
900102d8:	4798      	blx	r3
900102da:	69a4      	ldr	r4, [r4, #24]
900102dc:	e7db      	b.n	90010296 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
900102de:	b002      	add	sp, #8
900102e0:	bd70      	pop	{r4, r5, r6, pc}

900102e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900102e2:	6803      	ldr	r3, [r0, #0]
900102e4:	b513      	push	{r0, r1, r4, lr}
900102e6:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
900102ea:	2300      	movs	r3, #0
900102ec:	e9cd 3300 	strd	r3, r3, [sp]
900102f0:	466b      	mov	r3, sp
900102f2:	47a0      	blx	r4
900102f4:	b002      	add	sp, #8
900102f6:	bd10      	pop	{r4, pc}

900102f8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900102f8:	2301      	movs	r3, #1
900102fa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
900102fe:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
90010302:	4770      	bx	lr

90010304 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
90010304:	2301      	movs	r3, #1
90010306:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
9001030a:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
9001030e:	4770      	bx	lr

90010310 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
90010310:	6843      	ldr	r3, [r0, #4]
90010312:	2201      	movs	r2, #1
90010314:	725a      	strb	r2, [r3, #9]
90010316:	6840      	ldr	r0, [r0, #4]
90010318:	6803      	ldr	r3, [r0, #0]
9001031a:	691b      	ldr	r3, [r3, #16]
9001031c:	4718      	bx	r3

9001031e <_ZN8touchgfx3HAL8flushDMAEv>:
9001031e:	6840      	ldr	r0, [r0, #4]
90010320:	6803      	ldr	r3, [r0, #0]
90010322:	689b      	ldr	r3, [r3, #8]
90010324:	4718      	bx	r3

90010326 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
90010326:	b530      	push	{r4, r5, lr}
90010328:	b08b      	sub	sp, #44	; 0x2c
9001032a:	6804      	ldr	r4, [r0, #0]
9001032c:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
90010330:	9509      	str	r5, [sp, #36]	; 0x24
90010332:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
90010336:	9508      	str	r5, [sp, #32]
90010338:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
9001033c:	9507      	str	r5, [sp, #28]
9001033e:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
90010342:	9506      	str	r5, [sp, #24]
90010344:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
90010348:	9505      	str	r5, [sp, #20]
9001034a:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
9001034e:	9504      	str	r5, [sp, #16]
90010350:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
90010354:	9503      	str	r5, [sp, #12]
90010356:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
9001035a:	9502      	str	r5, [sp, #8]
9001035c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
90010360:	e9cd 3500 	strd	r3, r5, [sp]
90010364:	4613      	mov	r3, r2
90010366:	6be4      	ldr	r4, [r4, #60]	; 0x3c
90010368:	2200      	movs	r2, #0
9001036a:	47a0      	blx	r4
9001036c:	b00b      	add	sp, #44	; 0x2c
9001036e:	bd30      	pop	{r4, r5, pc}

90010370 <_ZN8touchgfx3HAL10beginFrameEv>:
90010370:	4b04      	ldr	r3, [pc, #16]	; (90010384 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010372:	781b      	ldrb	r3, [r3, #0]
90010374:	b123      	cbz	r3, 90010380 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010376:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
9001037a:	f080 0001 	eor.w	r0, r0, #1
9001037e:	4770      	bx	lr
90010380:	2001      	movs	r0, #1
90010382:	4770      	bx	lr
90010384:	2402357a 	.word	0x2402357a

90010388 <_ZN8touchgfx3HAL8endFrameEv>:
90010388:	b510      	push	{r4, lr}
9001038a:	4604      	mov	r4, r0
9001038c:	6840      	ldr	r0, [r0, #4]
9001038e:	6803      	ldr	r3, [r0, #0]
90010390:	689b      	ldr	r3, [r3, #8]
90010392:	4798      	blx	r3
90010394:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
90010398:	b113      	cbz	r3, 900103a0 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001039a:	2301      	movs	r3, #1
9001039c:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
900103a0:	bd10      	pop	{r4, pc}

900103a2 <_ZN8touchgfx3HAL10initializeEv>:
900103a2:	b510      	push	{r4, lr}
900103a4:	4604      	mov	r4, r0
900103a6:	f7f1 faf7 	bl	90001998 <_ZN8touchgfx10OSWrappers10initializeEv>
900103aa:	f7f0 f8a9 	bl	90000500 <_ZN8touchgfx4GPIO4initEv>
900103ae:	6860      	ldr	r0, [r4, #4]
900103b0:	6803      	ldr	r3, [r0, #0]
900103b2:	68db      	ldr	r3, [r3, #12]
900103b4:	4798      	blx	r3
900103b6:	68e0      	ldr	r0, [r4, #12]
900103b8:	6803      	ldr	r3, [r0, #0]
900103ba:	689b      	ldr	r3, [r3, #8]
900103bc:	4798      	blx	r3
900103be:	6823      	ldr	r3, [r4, #0]
900103c0:	4620      	mov	r0, r4
900103c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
900103c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900103c8:	4718      	bx	r3
	...

900103cc <_ZN8touchgfx3HAL4tickEv>:
900103cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900103ce:	6803      	ldr	r3, [r0, #0]
900103d0:	4604      	mov	r4, r0
900103d2:	4d5b      	ldr	r5, [pc, #364]	; (90010540 <_ZN8touchgfx3HAL4tickEv+0x174>)
900103d4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
900103d8:	4798      	blx	r3
900103da:	2800      	cmp	r0, #0
900103dc:	f000 8095 	beq.w	9001050a <_ZN8touchgfx3HAL4tickEv+0x13e>
900103e0:	2001      	movs	r0, #1
900103e2:	2600      	movs	r6, #0
900103e4:	f7f0 f8b6 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900103e8:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
900103ec:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
900103f0:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
900103f4:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
900103f8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
900103fc:	b133      	cbz	r3, 9001040c <_ZN8touchgfx3HAL4tickEv+0x40>
900103fe:	6823      	ldr	r3, [r4, #0]
90010400:	4620      	mov	r0, r4
90010402:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
90010406:	4798      	blx	r3
90010408:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
9001040c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
90010410:	2601      	movs	r6, #1
90010412:	6862      	ldr	r2, [r4, #4]
90010414:	f083 0301 	eor.w	r3, r3, #1
90010418:	702e      	strb	r6, [r5, #0]
9001041a:	7253      	strb	r3, [r2, #9]
9001041c:	f004 fd7c 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90010420:	6803      	ldr	r3, [r0, #0]
90010422:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010424:	4798      	blx	r3
90010426:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
9001042a:	b90b      	cbnz	r3, 90010430 <_ZN8touchgfx3HAL4tickEv+0x64>
9001042c:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
90010430:	f004 fd72 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90010434:	6803      	ldr	r3, [r0, #0]
90010436:	695b      	ldr	r3, [r3, #20]
90010438:	4798      	blx	r3
9001043a:	6de0      	ldr	r0, [r4, #92]	; 0x5c
9001043c:	6803      	ldr	r3, [r0, #0]
9001043e:	691b      	ldr	r3, [r3, #16]
90010440:	4798      	blx	r3
90010442:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
90010446:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
9001044a:	3b01      	subs	r3, #1
9001044c:	b2db      	uxtb	r3, r3
9001044e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
90010452:	b10a      	cbz	r2, 90010458 <_ZN8touchgfx3HAL4tickEv+0x8c>
90010454:	2b00      	cmp	r3, #0
90010456:	d1eb      	bne.n	90010430 <_ZN8touchgfx3HAL4tickEv+0x64>
90010458:	4a3a      	ldr	r2, [pc, #232]	; (90010544 <_ZN8touchgfx3HAL4tickEv+0x178>)
9001045a:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
9001045e:	7813      	ldrb	r3, [r2, #0]
90010460:	3301      	adds	r3, #1
90010462:	b25b      	sxtb	r3, r3
90010464:	4299      	cmp	r1, r3
90010466:	7013      	strb	r3, [r2, #0]
90010468:	dc10      	bgt.n	9001048c <_ZN8touchgfx3HAL4tickEv+0xc0>
9001046a:	2300      	movs	r3, #0
9001046c:	68e0      	ldr	r0, [r4, #12]
9001046e:	a902      	add	r1, sp, #8
90010470:	7013      	strb	r3, [r2, #0]
90010472:	aa03      	add	r2, sp, #12
90010474:	6803      	ldr	r3, [r0, #0]
90010476:	68db      	ldr	r3, [r3, #12]
90010478:	4798      	blx	r3
9001047a:	6823      	ldr	r3, [r4, #0]
9001047c:	2800      	cmp	r0, #0
9001047e:	d050      	beq.n	90010522 <_ZN8touchgfx3HAL4tickEv+0x156>
90010480:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
90010484:	4620      	mov	r0, r4
90010486:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
9001048a:	4798      	blx	r3
9001048c:	2300      	movs	r3, #0
9001048e:	6960      	ldr	r0, [r4, #20]
90010490:	f88d 3007 	strb.w	r3, [sp, #7]
90010494:	b158      	cbz	r0, 900104ae <_ZN8touchgfx3HAL4tickEv+0xe2>
90010496:	6803      	ldr	r3, [r0, #0]
90010498:	f10d 0107 	add.w	r1, sp, #7
9001049c:	68db      	ldr	r3, [r3, #12]
9001049e:	4798      	blx	r3
900104a0:	b128      	cbz	r0, 900104ae <_ZN8touchgfx3HAL4tickEv+0xe2>
900104a2:	6de0      	ldr	r0, [r4, #92]	; 0x5c
900104a4:	f89d 1007 	ldrb.w	r1, [sp, #7]
900104a8:	6803      	ldr	r3, [r0, #0]
900104aa:	68db      	ldr	r3, [r3, #12]
900104ac:	4798      	blx	r3
900104ae:	f104 001c 	add.w	r0, r4, #28
900104b2:	f015 fa0b 	bl	900258cc <_ZN8touchgfx8Gestures4tickEv>
900104b6:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
900104ba:	b30b      	cbz	r3, 90010500 <_ZN8touchgfx3HAL4tickEv+0x134>
900104bc:	6920      	ldr	r0, [r4, #16]
900104be:	6803      	ldr	r3, [r0, #0]
900104c0:	691b      	ldr	r3, [r3, #16]
900104c2:	4798      	blx	r3
900104c4:	6f63      	ldr	r3, [r4, #116]	; 0x74
900104c6:	4606      	mov	r6, r0
900104c8:	b903      	cbnz	r3, 900104cc <_ZN8touchgfx3HAL4tickEv+0x100>
900104ca:	6760      	str	r0, [r4, #116]	; 0x74
900104cc:	6f63      	ldr	r3, [r4, #116]	; 0x74
900104ce:	4a1e      	ldr	r2, [pc, #120]	; (90010548 <_ZN8touchgfx3HAL4tickEv+0x17c>)
900104d0:	1af3      	subs	r3, r6, r3
900104d2:	4293      	cmp	r3, r2
900104d4:	d914      	bls.n	90010500 <_ZN8touchgfx3HAL4tickEv+0x134>
900104d6:	6920      	ldr	r0, [r4, #16]
900104d8:	6803      	ldr	r3, [r0, #0]
900104da:	699b      	ldr	r3, [r3, #24]
900104dc:	4798      	blx	r3
900104de:	6f63      	ldr	r3, [r4, #116]	; 0x74
900104e0:	2264      	movs	r2, #100	; 0x64
900104e2:	1af3      	subs	r3, r6, r3
900104e4:	fbb3 f3f2 	udiv	r3, r3, r2
900104e8:	fbb0 f0f3 	udiv	r0, r0, r3
900104ec:	2800      	cmp	r0, #0
900104ee:	dc1d      	bgt.n	9001052c <_ZN8touchgfx3HAL4tickEv+0x160>
900104f0:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
900104f4:	6920      	ldr	r0, [r4, #16]
900104f6:	2100      	movs	r1, #0
900104f8:	6803      	ldr	r3, [r0, #0]
900104fa:	69db      	ldr	r3, [r3, #28]
900104fc:	4798      	blx	r3
900104fe:	6766      	str	r6, [r4, #116]	; 0x74
90010500:	f004 fd0a 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
90010504:	6803      	ldr	r3, [r0, #0]
90010506:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010508:	4798      	blx	r3
9001050a:	6823      	ldr	r3, [r4, #0]
9001050c:	4620      	mov	r0, r4
9001050e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
90010512:	4798      	blx	r3
90010514:	2001      	movs	r0, #1
90010516:	f7f0 f851 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
9001051a:	2300      	movs	r3, #0
9001051c:	702b      	strb	r3, [r5, #0]
9001051e:	b004      	add	sp, #16
90010520:	bd70      	pop	{r4, r5, r6, pc}
90010522:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
90010526:	4620      	mov	r0, r4
90010528:	4798      	blx	r3
9001052a:	e7af      	b.n	9001048c <_ZN8touchgfx3HAL4tickEv+0xc0>
9001052c:	2863      	cmp	r0, #99	; 0x63
9001052e:	bfcb      	itete	gt
90010530:	2300      	movgt	r3, #0
90010532:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
90010536:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
9001053a:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
9001053e:	e7d9      	b.n	900104f4 <_ZN8touchgfx3HAL4tickEv+0x128>
90010540:	24023580 	.word	0x24023580
90010544:	24023581 	.word	0x24023581
90010548:	05f5e100 	.word	0x05f5e100

9001054c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
9001054c:	b510      	push	{r4, lr}
9001054e:	4604      	mov	r4, r0
90010550:	f7f1 fa54 	bl	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010554:	2200      	movs	r2, #0
90010556:	6863      	ldr	r3, [r4, #4]
90010558:	729a      	strb	r2, [r3, #10]
9001055a:	bd10      	pop	{r4, pc}

9001055c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
9001055c:	65c1      	str	r1, [r0, #92]	; 0x5c
9001055e:	301c      	adds	r0, #28
90010560:	f015 b9b2 	b.w	900258c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010564 <_ZN8touchgfx3HAL5touchEll>:
90010564:	b530      	push	{r4, r5, lr}
90010566:	b087      	sub	sp, #28
90010568:	4604      	mov	r4, r0
9001056a:	a804      	add	r0, sp, #16
9001056c:	e9cd 1204 	strd	r1, r2, [sp, #16]
90010570:	f004 fa9c 	bl	90014aac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010574:	9b04      	ldr	r3, [sp, #16]
90010576:	a906      	add	r1, sp, #24
90010578:	a803      	add	r0, sp, #12
9001057a:	f8ad 300c 	strh.w	r3, [sp, #12]
9001057e:	9b05      	ldr	r3, [sp, #20]
90010580:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010584:	f004 fae4 	bl	90014b50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010588:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
9001058c:	f104 001c 	add.w	r0, r4, #28
90010590:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010594:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010598:	b189      	cbz	r1, 900105be <_ZN8touchgfx3HAL5touchEll+0x5a>
9001059a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
9001059e:	9300      	str	r3, [sp, #0]
900105a0:	4613      	mov	r3, r2
900105a2:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
900105a6:	462a      	mov	r2, r5
900105a8:	f015 f99e 	bl	900258e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
900105ac:	b128      	cbz	r0, 900105ba <_ZN8touchgfx3HAL5touchEll+0x56>
900105ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900105b2:	6623      	str	r3, [r4, #96]	; 0x60
900105b4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900105b8:	6663      	str	r3, [r4, #100]	; 0x64
900105ba:	b007      	add	sp, #28
900105bc:	bd30      	pop	{r4, r5, pc}
900105be:	f015 f9d3 	bl	90025968 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
900105c2:	2301      	movs	r3, #1
900105c4:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
900105c8:	e7f1      	b.n	900105ae <_ZN8touchgfx3HAL5touchEll+0x4a>

900105ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900105ca:	b510      	push	{r4, lr}
900105cc:	2b00      	cmp	r3, #0
900105ce:	d046      	beq.n	9001065e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900105d0:	ea81 0002 	eor.w	r0, r1, r2
900105d4:	07c4      	lsls	r4, r0, #31
900105d6:	d508      	bpl.n	900105ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900105d8:	440b      	add	r3, r1
900105da:	3a01      	subs	r2, #1
900105dc:	428b      	cmp	r3, r1
900105de:	d93e      	bls.n	9001065e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900105e0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900105e4:	f801 0b01 	strb.w	r0, [r1], #1
900105e8:	e7f8      	b.n	900105dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900105ea:	07d0      	lsls	r0, r2, #31
900105ec:	bf42      	ittt	mi
900105ee:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900105f2:	f103 33ff 	addmi.w	r3, r3, #4294967295
900105f6:	f801 0b01 	strbmi.w	r0, [r1], #1
900105fa:	2b01      	cmp	r3, #1
900105fc:	d911      	bls.n	90010622 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900105fe:	ea81 0402 	eor.w	r4, r1, r2
90010602:	4610      	mov	r0, r2
90010604:	07a4      	lsls	r4, r4, #30
90010606:	d022      	beq.n	9001064e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
90010608:	f023 0401 	bic.w	r4, r3, #1
9001060c:	440c      	add	r4, r1
9001060e:	428c      	cmp	r4, r1
90010610:	4602      	mov	r2, r0
90010612:	d904      	bls.n	9001061e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
90010614:	8812      	ldrh	r2, [r2, #0]
90010616:	3002      	adds	r0, #2
90010618:	f821 2b02 	strh.w	r2, [r1], #2
9001061c:	e7f7      	b.n	9001060e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
9001061e:	f003 0301 	and.w	r3, r3, #1
90010622:	f023 0003 	bic.w	r0, r3, #3
90010626:	4408      	add	r0, r1
90010628:	4288      	cmp	r0, r1
9001062a:	4614      	mov	r4, r2
9001062c:	d904      	bls.n	90010638 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001062e:	6824      	ldr	r4, [r4, #0]
90010630:	3204      	adds	r2, #4
90010632:	f841 4b04 	str.w	r4, [r1], #4
90010636:	e7f7      	b.n	90010628 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010638:	f003 0303 	and.w	r3, r3, #3
9001063c:	3a01      	subs	r2, #1
9001063e:	440b      	add	r3, r1
90010640:	428b      	cmp	r3, r1
90010642:	d90c      	bls.n	9001065e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010644:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010648:	f801 0b01 	strb.w	r0, [r1], #1
9001064c:	e7f8      	b.n	90010640 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001064e:	0790      	lsls	r0, r2, #30
90010650:	d0e7      	beq.n	90010622 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
90010652:	f832 0b02 	ldrh.w	r0, [r2], #2
90010656:	3b02      	subs	r3, #2
90010658:	f821 0b02 	strh.w	r0, [r1], #2
9001065c:	e7e1      	b.n	90010622 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001065e:	2001      	movs	r0, #1
90010660:	bd10      	pop	{r4, pc}

90010662 <_ZN8touchgfx3HAL7noTouchEv>:
90010662:	b510      	push	{r4, lr}
90010664:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
90010668:	4604      	mov	r4, r0
9001066a:	b153      	cbz	r3, 90010682 <_ZN8touchgfx3HAL7noTouchEv+0x20>
9001066c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
90010670:	2101      	movs	r1, #1
90010672:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
90010676:	301c      	adds	r0, #28
90010678:	f015 f976 	bl	90025968 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001067c:	2300      	movs	r3, #0
9001067e:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
90010682:	bd10      	pop	{r4, pc}

90010684 <_ZN8touchgfx8Drawable5setXYEss>:
90010684:	b570      	push	{r4, r5, r6, lr}
90010686:	6803      	ldr	r3, [r0, #0]
90010688:	4604      	mov	r4, r0
9001068a:	4615      	mov	r5, r2
9001068c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001068e:	4798      	blx	r3
90010690:	6823      	ldr	r3, [r4, #0]
90010692:	4629      	mov	r1, r5
90010694:	4620      	mov	r0, r4
90010696:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001069c:	4718      	bx	r3
	...

900106a0 <_ZN8touchgfx3HAL3lcdEv>:
900106a0:	4b04      	ldr	r3, [pc, #16]	; (900106b4 <_ZN8touchgfx3HAL3lcdEv+0x14>)
900106a2:	681b      	ldr	r3, [r3, #0]
900106a4:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900106a8:	b10a      	cbz	r2, 900106ae <_ZN8touchgfx3HAL3lcdEv+0xe>
900106aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900106ac:	b900      	cbnz	r0, 900106b0 <_ZN8touchgfx3HAL3lcdEv+0x10>
900106ae:	6898      	ldr	r0, [r3, #8]
900106b0:	4770      	bx	lr
900106b2:	bf00      	nop
900106b4:	2402357c 	.word	0x2402357c

900106b8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
900106b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900106bc:	b085      	sub	sp, #20
900106be:	4604      	mov	r4, r0
900106c0:	2000      	movs	r0, #0
900106c2:	4699      	mov	r9, r3
900106c4:	ad04      	add	r5, sp, #16
900106c6:	460f      	mov	r7, r1
900106c8:	4690      	mov	r8, r2
900106ca:	f845 0d04 	str.w	r0, [r5, #-4]!
900106ce:	69a0      	ldr	r0, [r4, #24]
900106d0:	6806      	ldr	r6, [r0, #0]
900106d2:	9501      	str	r5, [sp, #4]
900106d4:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
900106d8:	9500      	str	r5, [sp, #0]
900106da:	6835      	ldr	r5, [r6, #0]
900106dc:	47a8      	blx	r5
900106de:	4d10      	ldr	r5, [pc, #64]	; (90010720 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900106e0:	4606      	mov	r6, r0
900106e2:	f8a5 9000 	strh.w	r9, [r5]
900106e6:	f7ff ffdb 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
900106ea:	6803      	ldr	r3, [r0, #0]
900106ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900106ee:	4798      	blx	r3
900106f0:	b128      	cbz	r0, 900106fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900106f2:	2801      	cmp	r0, #1
900106f4:	d00b      	beq.n	9001070e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900106f6:	4630      	mov	r0, r6
900106f8:	b005      	add	sp, #20
900106fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900106fe:	882b      	ldrh	r3, [r5, #0]
90010700:	fb08 7203 	mla	r2, r8, r3, r7
90010704:	9b03      	ldr	r3, [sp, #12]
90010706:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
9001070a:	63e3      	str	r3, [r4, #60]	; 0x3c
9001070c:	e7f3      	b.n	900106f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
9001070e:	882a      	ldrh	r2, [r5, #0]
90010710:	9b03      	ldr	r3, [sp, #12]
90010712:	fb08 7202 	mla	r2, r8, r2, r7
90010716:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001071a:	1a9a      	subs	r2, r3, r2
9001071c:	63e2      	str	r2, [r4, #60]	; 0x3c
9001071e:	e7ea      	b.n	900106f6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
90010720:	24023576 	.word	0x24023576

90010724 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010724:	b5f0      	push	{r4, r5, r6, r7, lr}
90010726:	b08b      	sub	sp, #44	; 0x2c
90010728:	4617      	mov	r7, r2
9001072a:	4604      	mov	r4, r0
9001072c:	460e      	mov	r6, r1
9001072e:	461d      	mov	r5, r3
90010730:	f7ff ffb6 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010734:	6803      	ldr	r3, [r0, #0]
90010736:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010738:	4798      	blx	r3
9001073a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
9001073e:	9007      	str	r0, [sp, #28]
90010740:	4631      	mov	r1, r6
90010742:	6822      	ldr	r2, [r4, #0]
90010744:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010748:	4b0c      	ldr	r3, [pc, #48]	; (9001077c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
9001074a:	4620      	mov	r0, r4
9001074c:	881b      	ldrh	r3, [r3, #0]
9001074e:	9306      	str	r3, [sp, #24]
90010750:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010754:	9305      	str	r3, [sp, #20]
90010756:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
9001075a:	9304      	str	r3, [sp, #16]
9001075c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010760:	9303      	str	r3, [sp, #12]
90010762:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010766:	9302      	str	r3, [sp, #8]
90010768:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001076c:	e9cd 5300 	strd	r5, r3, [sp]
90010770:	463b      	mov	r3, r7
90010772:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
90010774:	2200      	movs	r2, #0
90010776:	47a8      	blx	r5
90010778:	b00b      	add	sp, #44	; 0x2c
9001077a:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001077c:	24023576 	.word	0x24023576

90010780 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
90010780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010784:	4698      	mov	r8, r3
90010786:	6803      	ldr	r3, [r0, #0]
90010788:	b08b      	sub	sp, #44	; 0x2c
9001078a:	4617      	mov	r7, r2
9001078c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
9001078e:	460e      	mov	r6, r1
90010790:	4b13      	ldr	r3, [pc, #76]	; (900107e0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
90010792:	4604      	mov	r4, r0
90010794:	f8b3 9000 	ldrh.w	r9, [r3]
90010798:	f7ff ff82 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
9001079c:	6803      	ldr	r3, [r0, #0]
9001079e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900107a0:	4798      	blx	r3
900107a2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
900107a6:	2200      	movs	r2, #0
900107a8:	4631      	mov	r1, r6
900107aa:	e9cd 0308 	strd	r0, r3, [sp, #32]
900107ae:	2302      	movs	r3, #2
900107b0:	4620      	mov	r0, r4
900107b2:	e9cd 9306 	strd	r9, r3, [sp, #24]
900107b6:	2301      	movs	r3, #1
900107b8:	9305      	str	r3, [sp, #20]
900107ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
900107be:	9304      	str	r3, [sp, #16]
900107c0:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
900107c4:	9303      	str	r3, [sp, #12]
900107c6:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
900107ca:	9302      	str	r3, [sp, #8]
900107cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
900107d0:	e9cd 8300 	strd	r8, r3, [sp]
900107d4:	463b      	mov	r3, r7
900107d6:	47a8      	blx	r5
900107d8:	b00b      	add	sp, #44	; 0x2c
900107da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900107de:	bf00      	nop
900107e0:	24023576 	.word	0x24023576

900107e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
900107e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900107e8:	4698      	mov	r8, r3
900107ea:	6803      	ldr	r3, [r0, #0]
900107ec:	b087      	sub	sp, #28
900107ee:	460e      	mov	r6, r1
900107f0:	6d9d      	ldr	r5, [r3, #88]	; 0x58
900107f2:	4617      	mov	r7, r2
900107f4:	4b0f      	ldr	r3, [pc, #60]	; (90010834 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
900107f6:	4604      	mov	r4, r0
900107f8:	f8b3 9000 	ldrh.w	r9, [r3]
900107fc:	f7ff ff50 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010800:	6803      	ldr	r3, [r0, #0]
90010802:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010804:	4798      	blx	r3
90010806:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
9001080a:	463a      	mov	r2, r7
9001080c:	4631      	mov	r1, r6
9001080e:	f8cd 900c 	str.w	r9, [sp, #12]
90010812:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010816:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
9001081a:	4620      	mov	r0, r4
9001081c:	9302      	str	r3, [sp, #8]
9001081e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
90010822:	9301      	str	r3, [sp, #4]
90010824:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90010828:	9300      	str	r3, [sp, #0]
9001082a:	4643      	mov	r3, r8
9001082c:	47a8      	blx	r5
9001082e:	b007      	add	sp, #28
90010830:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010834:	24023576 	.word	0x24023576

90010838 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001083c:	4604      	mov	r4, r0
9001083e:	b08f      	sub	sp, #60	; 0x3c
90010840:	4610      	mov	r0, r2
90010842:	460d      	mov	r5, r1
90010844:	4691      	mov	r9, r2
90010846:	461e      	mov	r6, r3
90010848:	f007 fc12 	bl	90018070 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
9001084c:	2800      	cmp	r0, #0
9001084e:	f000 809d 	beq.w	9001098c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
90010852:	6823      	ldr	r3, [r4, #0]
90010854:	4620      	mov	r0, r4
90010856:	f8df b198 	ldr.w	fp, [pc, #408]	; 900109f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
9001085a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
9001085e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010860:	4798      	blx	r3
90010862:	6823      	ldr	r3, [r4, #0]
90010864:	4620      	mov	r0, r4
90010866:	f8df a18c 	ldr.w	sl, [pc, #396]	; 900109f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
9001086a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001086c:	4798      	blx	r3
9001086e:	f8bb 3000 	ldrh.w	r3, [fp]
90010872:	4f5c      	ldr	r7, [pc, #368]	; (900109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010874:	9301      	str	r3, [sp, #4]
90010876:	f8ba 3000 	ldrh.w	r3, [sl]
9001087a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
9001087e:	4640      	mov	r0, r8
90010880:	9302      	str	r3, [sp, #8]
90010882:	883b      	ldrh	r3, [r7, #0]
90010884:	9303      	str	r3, [sp, #12]
90010886:	4b58      	ldr	r3, [pc, #352]	; (900109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010888:	881a      	ldrh	r2, [r3, #0]
9001088a:	9305      	str	r3, [sp, #20]
9001088c:	9204      	str	r2, [sp, #16]
9001088e:	f007 fc83 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90010892:	8038      	strh	r0, [r7, #0]
90010894:	4640      	mov	r0, r8
90010896:	f007 fcb3 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001089a:	9b05      	ldr	r3, [sp, #20]
9001089c:	b280      	uxth	r0, r0
9001089e:	8018      	strh	r0, [r3, #0]
900108a0:	4b52      	ldr	r3, [pc, #328]	; (900109ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900108a2:	781b      	ldrb	r3, [r3, #0]
900108a4:	2b00      	cmp	r3, #0
900108a6:	d174      	bne.n	90010992 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900108a8:	883b      	ldrh	r3, [r7, #0]
900108aa:	f8aa 0000 	strh.w	r0, [sl]
900108ae:	f8ab 3000 	strh.w	r3, [fp]
900108b2:	4648      	mov	r0, r9
900108b4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
900108b8:	f007 fbda 	bl	90018070 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900108bc:	2200      	movs	r2, #0
900108be:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
900108c2:	4611      	mov	r1, r2
900108c4:	4628      	mov	r0, r5
900108c6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
900108ca:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
900108ce:	f7ff fed9 	bl	90010684 <_ZN8touchgfx8Drawable5setXYEss>
900108d2:	2301      	movs	r3, #1
900108d4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
900108d8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
900108dc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900108e0:	2b00      	cmp	r3, #0
900108e2:	dd5c      	ble.n	9001099e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900108e4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900108e8:	2b00      	cmp	r3, #0
900108ea:	dd58      	ble.n	9001099e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
900108ec:	462a      	mov	r2, r5
900108ee:	ab0a      	add	r3, sp, #40	; 0x28
900108f0:	f852 0f04 	ldr.w	r0, [r2, #4]!
900108f4:	6851      	ldr	r1, [r2, #4]
900108f6:	c303      	stmia	r3!, {r0, r1}
900108f8:	4631      	mov	r1, r6
900108fa:	a80a      	add	r0, sp, #40	; 0x28
900108fc:	f7ff fbec 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90010900:	4b38      	ldr	r3, [pc, #224]	; (900109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010902:	2100      	movs	r1, #0
90010904:	f9b3 2000 	ldrsh.w	r2, [r3]
90010908:	4b37      	ldr	r3, [pc, #220]	; (900109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
9001090a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
9001090e:	aa0a      	add	r2, sp, #40	; 0x28
90010910:	f9b3 3000 	ldrsh.w	r3, [r3]
90010914:	910c      	str	r1, [sp, #48]	; 0x30
90010916:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001091a:	ab08      	add	r3, sp, #32
9001091c:	e892 0003 	ldmia.w	r2, {r0, r1}
90010920:	e883 0003 	stmia.w	r3, {r0, r1}
90010924:	4618      	mov	r0, r3
90010926:	a90c      	add	r1, sp, #48	; 0x30
90010928:	f7ff fbd6 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001092c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
9001092e:	2b00      	cmp	r3, #0
90010930:	d13c      	bne.n	900109ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010932:	2000      	movs	r0, #0
90010934:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
90010938:	2600      	movs	r6, #0
9001093a:	696b      	ldr	r3, [r5, #20]
9001093c:	a908      	add	r1, sp, #32
9001093e:	682a      	ldr	r2, [r5, #0]
90010940:	4628      	mov	r0, r5
90010942:	9305      	str	r3, [sp, #20]
90010944:	616e      	str	r6, [r5, #20]
90010946:	6892      	ldr	r2, [r2, #8]
90010948:	4790      	blx	r2
9001094a:	9b05      	ldr	r3, [sp, #20]
9001094c:	4652      	mov	r2, sl
9001094e:	4649      	mov	r1, r9
90010950:	616b      	str	r3, [r5, #20]
90010952:	4628      	mov	r0, r5
90010954:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
90010958:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
9001095c:	f7ff fe92 	bl	90010684 <_ZN8touchgfx8Drawable5setXYEss>
90010960:	9a01      	ldr	r2, [sp, #4]
90010962:	4b23      	ldr	r3, [pc, #140]	; (900109f0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010964:	4620      	mov	r0, r4
90010966:	801a      	strh	r2, [r3, #0]
90010968:	9a02      	ldr	r2, [sp, #8]
9001096a:	4b22      	ldr	r3, [pc, #136]	; (900109f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
9001096c:	801a      	strh	r2, [r3, #0]
9001096e:	9a03      	ldr	r2, [sp, #12]
90010970:	4b1c      	ldr	r3, [pc, #112]	; (900109e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010972:	801a      	strh	r2, [r3, #0]
90010974:	4b1c      	ldr	r3, [pc, #112]	; (900109e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010976:	9a04      	ldr	r2, [sp, #16]
90010978:	801a      	strh	r2, [r3, #0]
9001097a:	6823      	ldr	r3, [r4, #0]
9001097c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
90010980:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010982:	4798      	blx	r3
90010984:	6823      	ldr	r3, [r4, #0]
90010986:	4620      	mov	r0, r4
90010988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001098a:	4798      	blx	r3
9001098c:	b00f      	add	sp, #60	; 0x3c
9001098e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010992:	883b      	ldrh	r3, [r7, #0]
90010994:	f8ab 0000 	strh.w	r0, [fp]
90010998:	f8aa 3000 	strh.w	r3, [sl]
9001099c:	e789      	b.n	900108b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
9001099e:	462a      	mov	r2, r5
900109a0:	ab0a      	add	r3, sp, #40	; 0x28
900109a2:	f852 0f04 	ldr.w	r0, [r2, #4]!
900109a6:	6851      	ldr	r1, [r2, #4]
900109a8:	c303      	stmia	r3!, {r0, r1}
900109aa:	e7a9      	b.n	90010900 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
900109ac:	a807      	add	r0, sp, #28
900109ae:	f007 fd63 	bl	90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>
900109b2:	4606      	mov	r6, r0
900109b4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
900109b6:	6803      	ldr	r3, [r0, #0]
900109b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900109ba:	4798      	blx	r3
900109bc:	4286      	cmp	r6, r0
900109be:	d1b8      	bne.n	90010932 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
900109c0:	f7ff fe6e 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
900109c4:	6803      	ldr	r3, [r0, #0]
900109c6:	4606      	mov	r6, r0
900109c8:	a807      	add	r0, sp, #28
900109ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
900109cc:	9305      	str	r3, [sp, #20]
900109ce:	f007 fd53 	bl	90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>
900109d2:	9b05      	ldr	r3, [sp, #20]
900109d4:	4601      	mov	r1, r0
900109d6:	4630      	mov	r0, r6
900109d8:	4798      	blx	r3
900109da:	f080 0001 	eor.w	r0, r0, #1
900109de:	b2c0      	uxtb	r0, r0
900109e0:	e7a8      	b.n	90010934 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
900109e2:	bf00      	nop
900109e4:	24023570 	.word	0x24023570
900109e8:	24023572 	.word	0x24023572
900109ec:	24023574 	.word	0x24023574
900109f0:	24023576 	.word	0x24023576
900109f4:	24023578 	.word	0x24023578

900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
900109f8:	4b07      	ldr	r3, [pc, #28]	; (90010a18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
900109fa:	b510      	push	{r4, lr}
900109fc:	781b      	ldrb	r3, [r3, #0]
900109fe:	4604      	mov	r4, r0
90010a00:	b13b      	cbz	r3, 90010a12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010a02:	6803      	ldr	r3, [r0, #0]
90010a04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010a06:	4798      	blx	r3
90010a08:	6be3      	ldr	r3, [r4, #60]	; 0x3c
90010a0a:	4283      	cmp	r3, r0
90010a0c:	d101      	bne.n	90010a12 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010a0e:	6c20      	ldr	r0, [r4, #64]	; 0x40
90010a10:	bd10      	pop	{r4, pc}
90010a12:	6be0      	ldr	r0, [r4, #60]	; 0x3c
90010a14:	e7fc      	b.n	90010a10 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010a16:	bf00      	nop
90010a18:	2402357a 	.word	0x2402357a

90010a1c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010a20:	461d      	mov	r5, r3
90010a22:	b08a      	sub	sp, #40	; 0x28
90010a24:	f44f 6380 	mov.w	r3, #1024	; 0x400
90010a28:	4690      	mov	r8, r2
90010a2a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
90010a2e:	2400      	movs	r4, #0
90010a30:	4607      	mov	r7, r0
90010a32:	fb06 8505 	mla	r5, r6, r5, r8
90010a36:	9404      	str	r4, [sp, #16]
90010a38:	f88d 4020 	strb.w	r4, [sp, #32]
90010a3c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010a40:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010a44:	f8ad 3018 	strh.w	r3, [sp, #24]
90010a48:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010a4c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010a50:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010a54:	f8ad 301c 	strh.w	r3, [sp, #28]
90010a58:	f7ff ffce 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010a5c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010a60:	6878      	ldr	r0, [r7, #4]
90010a62:	f8ad 601e 	strh.w	r6, [sp, #30]
90010a66:	a901      	add	r1, sp, #4
90010a68:	9505      	str	r5, [sp, #20]
90010a6a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010a6e:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
90010a72:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90010a76:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010a7a:	6803      	ldr	r3, [r0, #0]
90010a7c:	685b      	ldr	r3, [r3, #4]
90010a7e:	4798      	blx	r3
90010a80:	b00a      	add	sp, #40	; 0x28
90010a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010a86 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010a86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010a8a:	b08b      	sub	sp, #44	; 0x2c
90010a8c:	2400      	movs	r4, #0
90010a8e:	4691      	mov	r9, r2
90010a90:	461d      	mov	r5, r3
90010a92:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
90010a96:	f44f 6300 	mov.w	r3, #2048	; 0x800
90010a9a:	4688      	mov	r8, r1
90010a9c:	4607      	mov	r7, r0
90010a9e:	9404      	str	r4, [sp, #16]
90010aa0:	fb06 9505 	mla	r5, r6, r5, r9
90010aa4:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010aa8:	f7ff ffa6 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010aac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010ab0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010ab4:	6878      	ldr	r0, [r7, #4]
90010ab6:	f8ad 3018 	strh.w	r3, [sp, #24]
90010aba:	a901      	add	r1, sp, #4
90010abc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010ac0:	9505      	str	r5, [sp, #20]
90010ac2:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ac6:	f8ad 401c 	strh.w	r4, [sp, #28]
90010aca:	f8ad 601e 	strh.w	r6, [sp, #30]
90010ace:	f8cd 8010 	str.w	r8, [sp, #16]
90010ad2:	f8ad 4020 	strh.w	r4, [sp, #32]
90010ad6:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010ada:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
90010ade:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
90010ae2:	6803      	ldr	r3, [r0, #0]
90010ae4:	685b      	ldr	r3, [r3, #4]
90010ae6:	4798      	blx	r3
90010ae8:	b00b      	add	sp, #44	; 0x2c
90010aea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010af0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010af4:	b08a      	sub	sp, #40	; 0x28
90010af6:	4698      	mov	r8, r3
90010af8:	2300      	movs	r3, #0
90010afa:	4606      	mov	r6, r0
90010afc:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
90010b00:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
90010b04:	2d0b      	cmp	r5, #11
90010b06:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
90010b0a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
90010b0e:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
90010b12:	9304      	str	r3, [sp, #16]
90010b14:	d137      	bne.n	90010b86 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010b16:	2380      	movs	r3, #128	; 0x80
90010b18:	f88d 0020 	strb.w	r0, [sp, #32]
90010b1c:	4630      	mov	r0, r6
90010b1e:	9203      	str	r2, [sp, #12]
90010b20:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010b24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010b28:	f8ad 3018 	strh.w	r3, [sp, #24]
90010b2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010b30:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b34:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
90010b38:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b3c:	f7ff ff5c 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b40:	2c0b      	cmp	r4, #11
90010b42:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
90010b46:	f8ad 701e 	strh.w	r7, [sp, #30]
90010b4a:	bf94      	ite	ls
90010b4c:	4b19      	ldrls	r3, [pc, #100]	; (90010bb4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010b4e:	2100      	movhi	r1, #0
90010b50:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
90010b54:	bf98      	it	ls
90010b56:	5d19      	ldrbls	r1, [r3, r4]
90010b58:	fb02 8307 	mla	r3, r2, r7, r8
90010b5c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
90010b60:	10c9      	asrs	r1, r1, #3
90010b62:	fb01 0003 	mla	r0, r1, r3, r0
90010b66:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
90010b6a:	a901      	add	r1, sp, #4
90010b6c:	9005      	str	r0, [sp, #20]
90010b6e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010b72:	2300      	movs	r3, #0
90010b74:	6870      	ldr	r0, [r6, #4]
90010b76:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010b7a:	6803      	ldr	r3, [r0, #0]
90010b7c:	685b      	ldr	r3, [r3, #4]
90010b7e:	4798      	blx	r3
90010b80:	b00a      	add	sp, #40	; 0x28
90010b82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010b86:	2d02      	cmp	r5, #2
90010b88:	d109      	bne.n	90010b9e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010b8a:	28ff      	cmp	r0, #255	; 0xff
90010b8c:	d105      	bne.n	90010b9a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010b8e:	f1bc 0f00 	cmp.w	ip, #0
90010b92:	bf14      	ite	ne
90010b94:	2340      	movne	r3, #64	; 0x40
90010b96:	2320      	moveq	r3, #32
90010b98:	e7be      	b.n	90010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010b9a:	2340      	movs	r3, #64	; 0x40
90010b9c:	e7bc      	b.n	90010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010b9e:	28ff      	cmp	r0, #255	; 0xff
90010ba0:	d105      	bne.n	90010bae <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010ba2:	f1bc 0f00 	cmp.w	ip, #0
90010ba6:	bf14      	ite	ne
90010ba8:	2304      	movne	r3, #4
90010baa:	2301      	moveq	r3, #1
90010bac:	e7b4      	b.n	90010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010bae:	2304      	movs	r3, #4
90010bb0:	e7b2      	b.n	90010b18 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010bb2:	bf00      	nop
90010bb4:	9002a224 	.word	0x9002a224

90010bb8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010bbc:	b08b      	sub	sp, #44	; 0x2c
90010bbe:	461d      	mov	r5, r3
90010bc0:	2400      	movs	r4, #0
90010bc2:	4688      	mov	r8, r1
90010bc4:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
90010bc8:	4693      	mov	fp, r2
90010bca:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
90010bce:	4607      	mov	r7, r0
90010bd0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90010bd4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
90010bd8:	9404      	str	r4, [sp, #16]
90010bda:	bf14      	ite	ne
90010bdc:	2308      	movne	r3, #8
90010bde:	2302      	moveq	r3, #2
90010be0:	fb05 b50a 	mla	r5, r5, sl, fp
90010be4:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010be8:	f7ff ff06 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010bec:	2e0b      	cmp	r6, #11
90010bee:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90010bf2:	a901      	add	r1, sp, #4
90010bf4:	bf98      	it	ls
90010bf6:	4b13      	ldrls	r3, [pc, #76]	; (90010c44 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010bf8:	f8ad a01e 	strh.w	sl, [sp, #30]
90010bfc:	bf98      	it	ls
90010bfe:	5d9c      	ldrbls	r4, [r3, r6]
90010c00:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
90010c04:	10e4      	asrs	r4, r4, #3
90010c06:	f8cd 8010 	str.w	r8, [sp, #16]
90010c0a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010c0e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010c12:	fb04 0405 	mla	r4, r4, r5, r0
90010c16:	6878      	ldr	r0, [r7, #4]
90010c18:	f8ad 301a 	strh.w	r3, [sp, #26]
90010c1c:	2300      	movs	r3, #0
90010c1e:	9405      	str	r4, [sp, #20]
90010c20:	f8ad 301c 	strh.w	r3, [sp, #28]
90010c24:	f88d 9020 	strb.w	r9, [sp, #32]
90010c28:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
90010c2c:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
90010c30:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
90010c34:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
90010c38:	6803      	ldr	r3, [r0, #0]
90010c3a:	685b      	ldr	r3, [r3, #4]
90010c3c:	4798      	blx	r3
90010c3e:	b00b      	add	sp, #44	; 0x2c
90010c40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010c44:	9002a224 	.word	0x9002a224

90010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010c48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c4c:	461e      	mov	r6, r3
90010c4e:	4b0a      	ldr	r3, [pc, #40]	; (90010c78 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010c50:	460f      	mov	r7, r1
90010c52:	4690      	mov	r8, r2
90010c54:	881d      	ldrh	r5, [r3, #0]
90010c56:	f7ff fd23 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010c5a:	6803      	ldr	r3, [r0, #0]
90010c5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010c5e:	4798      	blx	r3
90010c60:	280b      	cmp	r0, #11
90010c62:	bf96      	itet	ls
90010c64:	4b05      	ldrls	r3, [pc, #20]	; (90010c7c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010c66:	2400      	movhi	r4, #0
90010c68:	5c1c      	ldrbls	r4, [r3, r0]
90010c6a:	fb08 7005 	mla	r0, r8, r5, r7
90010c6e:	10e4      	asrs	r4, r4, #3
90010c70:	fb04 6000 	mla	r0, r4, r0, r6
90010c74:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010c78:	24023576 	.word	0x24023576
90010c7c:	9002a224 	.word	0x9002a224

90010c80 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010c80:	b5f0      	push	{r4, r5, r6, r7, lr}
90010c82:	b08b      	sub	sp, #44	; 0x2c
90010c84:	461f      	mov	r7, r3
90010c86:	4604      	mov	r4, r0
90010c88:	4616      	mov	r6, r2
90010c8a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
90010c8e:	2500      	movs	r5, #0
90010c90:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010c94:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
90010c98:	9504      	str	r5, [sp, #16]
90010c9a:	f8ad 3018 	strh.w	r3, [sp, #24]
90010c9e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90010ca2:	f8ad 301a 	strh.w	r3, [sp, #26]
90010ca6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90010caa:	f8ad 301c 	strh.w	r3, [sp, #28]
90010cae:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90010cb2:	f88d 3020 	strb.w	r3, [sp, #32]
90010cb6:	f7ff fe9f 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010cba:	463a      	mov	r2, r7
90010cbc:	4631      	mov	r1, r6
90010cbe:	4603      	mov	r3, r0
90010cc0:	4620      	mov	r0, r4
90010cc2:	f7ff ffc1 	bl	90010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010cc6:	4b0e      	ldr	r3, [pc, #56]	; (90010d00 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010cc8:	9005      	str	r0, [sp, #20]
90010cca:	881b      	ldrh	r3, [r3, #0]
90010ccc:	f8ad 301e 	strh.w	r3, [sp, #30]
90010cd0:	f7ff fce6 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010cd4:	6803      	ldr	r3, [r0, #0]
90010cd6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010cd8:	4798      	blx	r3
90010cda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90010cdc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
90010ce0:	a901      	add	r1, sp, #4
90010ce2:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90010ce6:	9304      	str	r3, [sp, #16]
90010ce8:	6860      	ldr	r0, [r4, #4]
90010cea:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
90010cee:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
90010cf2:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
90010cf6:	6803      	ldr	r3, [r0, #0]
90010cf8:	685b      	ldr	r3, [r3, #4]
90010cfa:	4798      	blx	r3
90010cfc:	b00b      	add	sp, #44	; 0x2c
90010cfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010d00:	24023576 	.word	0x24023576

90010d04 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010d04:	b5f0      	push	{r4, r5, r6, r7, lr}
90010d06:	b08d      	sub	sp, #52	; 0x34
90010d08:	2501      	movs	r5, #1
90010d0a:	4604      	mov	r4, r0
90010d0c:	466b      	mov	r3, sp
90010d0e:	9503      	str	r5, [sp, #12]
90010d10:	e883 0006 	stmia.w	r3, {r1, r2}
90010d14:	2300      	movs	r3, #0
90010d16:	f8bd 6000 	ldrh.w	r6, [sp]
90010d1a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010d1e:	9306      	str	r3, [sp, #24]
90010d20:	6803      	ldr	r3, [r0, #0]
90010d22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010d24:	4798      	blx	r3
90010d26:	463a      	mov	r2, r7
90010d28:	4631      	mov	r1, r6
90010d2a:	4603      	mov	r3, r0
90010d2c:	4620      	mov	r0, r4
90010d2e:	f7ff ff8b 	bl	90010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010d32:	6c63      	ldr	r3, [r4, #68]	; 0x44
90010d34:	9004      	str	r0, [sp, #16]
90010d36:	9307      	str	r3, [sp, #28]
90010d38:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010d3c:	f8ad 3020 	strh.w	r3, [sp, #32]
90010d40:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010d44:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010d48:	4b0e      	ldr	r3, [pc, #56]	; (90010d84 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010d4a:	881b      	ldrh	r3, [r3, #0]
90010d4c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010d50:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010d54:	f7ff fca4 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010d58:	6803      	ldr	r3, [r0, #0]
90010d5a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010d5c:	4798      	blx	r3
90010d5e:	23ff      	movs	r3, #255	; 0xff
90010d60:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010d64:	a903      	add	r1, sp, #12
90010d66:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010d6a:	6860      	ldr	r0, [r4, #4]
90010d6c:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010d70:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010d74:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010d78:	6803      	ldr	r3, [r0, #0]
90010d7a:	685b      	ldr	r3, [r3, #4]
90010d7c:	4798      	blx	r3
90010d7e:	6c60      	ldr	r0, [r4, #68]	; 0x44
90010d80:	b00d      	add	sp, #52	; 0x34
90010d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010d84:	24023576 	.word	0x24023576

90010d88 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010d88:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010d8c:	b08c      	sub	sp, #48	; 0x30
90010d8e:	461e      	mov	r6, r3
90010d90:	2300      	movs	r3, #0
90010d92:	4604      	mov	r4, r0
90010d94:	466d      	mov	r5, sp
90010d96:	9306      	str	r3, [sp, #24]
90010d98:	6803      	ldr	r3, [r0, #0]
90010d9a:	e885 0006 	stmia.w	r5, {r1, r2}
90010d9e:	2501      	movs	r5, #1
90010da0:	f8bd 7000 	ldrh.w	r7, [sp]
90010da4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010da8:	9503      	str	r5, [sp, #12]
90010daa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010dac:	4798      	blx	r3
90010dae:	4642      	mov	r2, r8
90010db0:	4639      	mov	r1, r7
90010db2:	4603      	mov	r3, r0
90010db4:	4620      	mov	r0, r4
90010db6:	f7ff ff47 	bl	90010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010dba:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010dbe:	9004      	str	r0, [sp, #16]
90010dc0:	f8ad 3020 	strh.w	r3, [sp, #32]
90010dc4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010dc8:	9607      	str	r6, [sp, #28]
90010dca:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90010dce:	4b10      	ldr	r3, [pc, #64]	; (90010e10 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010dd0:	881b      	ldrh	r3, [r3, #0]
90010dd2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
90010dd6:	9b12      	ldr	r3, [sp, #72]	; 0x48
90010dd8:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
90010ddc:	f7ff fc60 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90010de0:	6803      	ldr	r3, [r0, #0]
90010de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90010de4:	4798      	blx	r3
90010de6:	23ff      	movs	r3, #255	; 0xff
90010de8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
90010dec:	a903      	add	r1, sp, #12
90010dee:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
90010df2:	6860      	ldr	r0, [r4, #4]
90010df4:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
90010df8:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
90010dfc:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
90010e00:	6803      	ldr	r3, [r0, #0]
90010e02:	685b      	ldr	r3, [r3, #4]
90010e04:	4798      	blx	r3
90010e06:	4630      	mov	r0, r6
90010e08:	b00c      	add	sp, #48	; 0x30
90010e0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010e0e:	bf00      	nop
90010e10:	24023576 	.word	0x24023576

90010e14 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010e14:	b5f0      	push	{r4, r5, r6, r7, lr}
90010e16:	b085      	sub	sp, #20
90010e18:	4605      	mov	r5, r0
90010e1a:	ac02      	add	r4, sp, #8
90010e1c:	e884 0006 	stmia.w	r4, {r1, r2}
90010e20:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010e24:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010e28:	f7ff fde6 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010e2c:	4631      	mov	r1, r6
90010e2e:	4603      	mov	r3, r0
90010e30:	463a      	mov	r2, r7
90010e32:	4628      	mov	r0, r5
90010e34:	f7ff ff08 	bl	90010c48 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010e38:	4a05      	ldr	r2, [pc, #20]	; (90010e50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010e3a:	682b      	ldr	r3, [r5, #0]
90010e3c:	8812      	ldrh	r2, [r2, #0]
90010e3e:	9200      	str	r2, [sp, #0]
90010e40:	6ede      	ldr	r6, [r3, #108]	; 0x6c
90010e42:	4603      	mov	r3, r0
90010e44:	4628      	mov	r0, r5
90010e46:	e894 0006 	ldmia.w	r4, {r1, r2}
90010e4a:	47b0      	blx	r6
90010e4c:	b005      	add	sp, #20
90010e4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010e50:	24023576 	.word	0x24023576

90010e54 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010e54:	b570      	push	{r4, r5, r6, lr}
90010e56:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
90010e5a:	4604      	mov	r4, r0
90010e5c:	b19b      	cbz	r3, 90010e86 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010e5e:	2002      	movs	r0, #2
90010e60:	f7ef fbe0 	bl	90000624 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010e64:	2300      	movs	r3, #0
90010e66:	4620      	mov	r0, r4
90010e68:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
90010e6c:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
90010e70:	6823      	ldr	r3, [r4, #0]
90010e72:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
90010e76:	f7ff fdbf 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010e7a:	4601      	mov	r1, r0
90010e7c:	4620      	mov	r0, r4
90010e7e:	462b      	mov	r3, r5
90010e80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010e84:	4718      	bx	r3
90010e86:	bd70      	pop	{r4, r5, r6, pc}

90010e88 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010e88:	b570      	push	{r4, r5, r6, lr}
90010e8a:	4605      	mov	r5, r0
90010e8c:	460c      	mov	r4, r1
90010e8e:	2003      	movs	r0, #3
90010e90:	b149      	cbz	r1, 90010ea6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010e92:	f7ef fb5f 	bl	90000554 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010e96:	6928      	ldr	r0, [r5, #16]
90010e98:	b168      	cbz	r0, 90010eb6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010e9a:	6803      	ldr	r3, [r0, #0]
90010e9c:	2101      	movs	r1, #1
90010e9e:	695b      	ldr	r3, [r3, #20]
90010ea0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010ea4:	4718      	bx	r3
90010ea6:	f7ef fb89 	bl	900005bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010eaa:	6928      	ldr	r0, [r5, #16]
90010eac:	b118      	cbz	r0, 90010eb6 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010eae:	6803      	ldr	r3, [r0, #0]
90010eb0:	4621      	mov	r1, r4
90010eb2:	695b      	ldr	r3, [r3, #20]
90010eb4:	e7f4      	b.n	90010ea0 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010eb6:	bd70      	pop	{r4, r5, r6, pc}

90010eb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010eb8:	b538      	push	{r3, r4, r5, lr}
90010eba:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
90010ebe:	4604      	mov	r4, r0
90010ec0:	460d      	mov	r5, r1
90010ec2:	428b      	cmp	r3, r1
90010ec4:	d006      	beq.n	90010ed4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90010ec6:	6803      	ldr	r3, [r0, #0]
90010ec8:	b929      	cbnz	r1, 90010ed6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90010eca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
90010ece:	4798      	blx	r3
90010ed0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
90010ed4:	bd38      	pop	{r3, r4, r5, pc}
90010ed6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
90010eda:	e7f8      	b.n	90010ece <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90010edc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90010edc:	4b0d      	ldr	r3, [pc, #52]	; (90010f14 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
90010ede:	b510      	push	{r4, lr}
90010ee0:	781b      	ldrb	r3, [r3, #0]
90010ee2:	4604      	mov	r4, r0
90010ee4:	b95b      	cbnz	r3, 90010efe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010ee6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
90010eea:	2b02      	cmp	r3, #2
90010eec:	d007      	beq.n	90010efe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010eee:	6840      	ldr	r0, [r0, #4]
90010ef0:	f000 f91a 	bl	90011128 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
90010ef4:	b118      	cbz	r0, 90010efe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
90010ef6:	6862      	ldr	r2, [r4, #4]
90010ef8:	7a53      	ldrb	r3, [r2, #9]
90010efa:	2b00      	cmp	r3, #0
90010efc:	d0fc      	beq.n	90010ef8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
90010efe:	f7f0 fd75 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
90010f02:	4620      	mov	r0, r4
90010f04:	2100      	movs	r1, #0
90010f06:	f7ff ffd7 	bl	90010eb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010f0a:	4620      	mov	r0, r4
90010f0c:	f7ff fd74 	bl	900109f8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010f10:	bd10      	pop	{r4, pc}
90010f12:	bf00      	nop
90010f14:	2402357a 	.word	0x2402357a

90010f18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90010f18:	b570      	push	{r4, r5, r6, lr}
90010f1a:	4604      	mov	r4, r0
90010f1c:	6803      	ldr	r3, [r0, #0]
90010f1e:	b919      	cbnz	r1, 90010f28 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90010f20:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010f22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010f26:	4718      	bx	r3
90010f28:	2200      	movs	r2, #0
90010f2a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
90010f2e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
90010f32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90010f34:	4798      	blx	r3
90010f36:	6863      	ldr	r3, [r4, #4]
90010f38:	2101      	movs	r1, #1
90010f3a:	4605      	mov	r5, r0
90010f3c:	4620      	mov	r0, r4
90010f3e:	7299      	strb	r1, [r3, #10]
90010f40:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
90010f44:	f7ff ffb8 	bl	90010eb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90010f48:	4628      	mov	r0, r5
90010f4a:	bd70      	pop	{r4, r5, r6, pc}

90010f4c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90010f4c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90010f50:	1a13      	subs	r3, r2, r0
90010f52:	4258      	negs	r0, r3
90010f54:	4158      	adcs	r0, r3
90010f56:	4770      	bx	lr

90010f58 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90010f58:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90010f5c:	1a9b      	subs	r3, r3, r2
90010f5e:	2b00      	cmp	r3, #0
90010f60:	bfdc      	itt	le
90010f62:	6882      	ldrle	r2, [r0, #8]
90010f64:	189b      	addle	r3, r3, r2
90010f66:	2b01      	cmp	r3, #1
90010f68:	bfcc      	ite	gt
90010f6a:	2000      	movgt	r0, #0
90010f6c:	2001      	movle	r0, #1
90010f6e:	4770      	bx	lr

90010f70 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
90010f70:	6902      	ldr	r2, [r0, #16]
90010f72:	6843      	ldr	r3, [r0, #4]
90010f74:	2024      	movs	r0, #36	; 0x24
90010f76:	fb00 3002 	mla	r0, r0, r2, r3
90010f7a:	4770      	bx	lr

90010f7c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
90010f7c:	6803      	ldr	r3, [r0, #0]
90010f7e:	691b      	ldr	r3, [r3, #16]
90010f80:	4718      	bx	r3

90010f82 <_ZN8touchgfx13DMA_Interface7executeEv>:
90010f82:	2301      	movs	r3, #1
90010f84:	b570      	push	{r4, r5, r6, lr}
90010f86:	7203      	strb	r3, [r0, #8]
90010f88:	4604      	mov	r4, r0
90010f8a:	6840      	ldr	r0, [r0, #4]
90010f8c:	6803      	ldr	r3, [r0, #0]
90010f8e:	699b      	ldr	r3, [r3, #24]
90010f90:	4798      	blx	r3
90010f92:	6803      	ldr	r3, [r0, #0]
90010f94:	4605      	mov	r5, r0
90010f96:	2b40      	cmp	r3, #64	; 0x40
90010f98:	d00c      	beq.n	90010fb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010f9a:	d810      	bhi.n	90010fbe <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
90010f9c:	2b04      	cmp	r3, #4
90010f9e:	d01d      	beq.n	90010fdc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
90010fa0:	d804      	bhi.n	90010fac <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
90010fa2:	2b01      	cmp	r3, #1
90010fa4:	d006      	beq.n	90010fb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010fa6:	2b02      	cmp	r3, #2
90010fa8:	d02c      	beq.n	90011004 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
90010faa:	bd70      	pop	{r4, r5, r6, pc}
90010fac:	2b08      	cmp	r3, #8
90010fae:	d01d      	beq.n	90010fec <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
90010fb0:	2b20      	cmp	r3, #32
90010fb2:	d1fa      	bne.n	90010faa <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
90010fb4:	6823      	ldr	r3, [r4, #0]
90010fb6:	4620      	mov	r0, r4
90010fb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90010fba:	4798      	blx	r3
90010fbc:	e013      	b.n	90010fe6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
90010fbe:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90010fc2:	d0f7      	beq.n	90010fb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010fc4:	d804      	bhi.n	90010fd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
90010fc6:	2b80      	cmp	r3, #128	; 0x80
90010fc8:	d0f4      	beq.n	90010fb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010fca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
90010fce:	e7f0      	b.n	90010fb2 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90010fd0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
90010fd4:	d0ee      	beq.n	90010fb4 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90010fd6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
90010fda:	e7e5      	b.n	90010fa8 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90010fdc:	6823      	ldr	r3, [r4, #0]
90010fde:	7f01      	ldrb	r1, [r0, #28]
90010fe0:	4620      	mov	r0, r4
90010fe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010fe4:	4798      	blx	r3
90010fe6:	6823      	ldr	r3, [r4, #0]
90010fe8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90010fea:	e006      	b.n	90010ffa <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90010fec:	6823      	ldr	r3, [r4, #0]
90010fee:	7f01      	ldrb	r1, [r0, #28]
90010ff0:	4620      	mov	r0, r4
90010ff2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90010ff4:	4798      	blx	r3
90010ff6:	6823      	ldr	r3, [r4, #0]
90010ff8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
90010ffa:	4629      	mov	r1, r5
90010ffc:	4620      	mov	r0, r4
90010ffe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011002:	4718      	bx	r3
90011004:	6823      	ldr	r3, [r4, #0]
90011006:	4620      	mov	r0, r4
90011008:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001100a:	4798      	blx	r3
9001100c:	e7f3      	b.n	90010ff6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

9001100e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
9001100e:	4770      	bx	lr

90011010 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011010:	4770      	bx	lr

90011012 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
90011012:	4770      	bx	lr

90011014 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
90011014:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011018:	b510      	push	{r4, lr}
9001101a:	1ad2      	subs	r2, r2, r3
9001101c:	2a00      	cmp	r2, #0
9001101e:	bfdc      	itt	le
90011020:	6884      	ldrle	r4, [r0, #8]
90011022:	1912      	addle	r2, r2, r4
90011024:	2a01      	cmp	r2, #1
90011026:	dd16      	ble.n	90011056 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011028:	6842      	ldr	r2, [r0, #4]
9001102a:	2424      	movs	r4, #36	; 0x24
9001102c:	fb04 2303 	mla	r3, r4, r3, r2
90011030:	f101 0220 	add.w	r2, r1, #32
90011034:	f851 4b04 	ldr.w	r4, [r1], #4
90011038:	4291      	cmp	r1, r2
9001103a:	f843 4b04 	str.w	r4, [r3], #4
9001103e:	d1f9      	bne.n	90011034 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011040:	780a      	ldrb	r2, [r1, #0]
90011042:	701a      	strb	r2, [r3, #0]
90011044:	68c3      	ldr	r3, [r0, #12]
90011046:	6882      	ldr	r2, [r0, #8]
90011048:	f3bf 8f5b 	dmb	ish
9001104c:	3301      	adds	r3, #1
9001104e:	429a      	cmp	r2, r3
90011050:	bfd8      	it	le
90011052:	1a9b      	suble	r3, r3, r2
90011054:	60c3      	str	r3, [r0, #12]
90011056:	bd10      	pop	{r4, pc}

90011058 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011058:	6903      	ldr	r3, [r0, #16]
9001105a:	6882      	ldr	r2, [r0, #8]
9001105c:	f3bf 8f5b 	dmb	ish
90011060:	3301      	adds	r3, #1
90011062:	429a      	cmp	r2, r3
90011064:	bfd8      	it	le
90011066:	1a9b      	suble	r3, r3, r2
90011068:	6103      	str	r3, [r0, #16]
9001106a:	4770      	bx	lr

9001106c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
9001106c:	b570      	push	{r4, r5, r6, lr}
9001106e:	4604      	mov	r4, r0
90011070:	460e      	mov	r6, r1
90011072:	6860      	ldr	r0, [r4, #4]
90011074:	6803      	ldr	r3, [r0, #0]
90011076:	685b      	ldr	r3, [r3, #4]
90011078:	4798      	blx	r3
9001107a:	2800      	cmp	r0, #0
9001107c:	d1f9      	bne.n	90011072 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
9001107e:	4d0d      	ldr	r5, [pc, #52]	; (900110b4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
90011080:	6828      	ldr	r0, [r5, #0]
90011082:	6803      	ldr	r3, [r0, #0]
90011084:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011086:	4798      	blx	r3
90011088:	f7f0 fcbe 	bl	90001a08 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
9001108c:	6828      	ldr	r0, [r5, #0]
9001108e:	2101      	movs	r1, #1
90011090:	f7ff ff12 	bl	90010eb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011094:	6860      	ldr	r0, [r4, #4]
90011096:	4631      	mov	r1, r6
90011098:	6803      	ldr	r3, [r0, #0]
9001109a:	689b      	ldr	r3, [r3, #8]
9001109c:	4798      	blx	r3
9001109e:	6823      	ldr	r3, [r4, #0]
900110a0:	4620      	mov	r0, r4
900110a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900110a4:	4798      	blx	r3
900110a6:	6828      	ldr	r0, [r5, #0]
900110a8:	6803      	ldr	r3, [r0, #0]
900110aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900110ae:	6f9b      	ldr	r3, [r3, #120]	; 0x78
900110b0:	4718      	bx	r3
900110b2:	bf00      	nop
900110b4:	2402357c 	.word	0x2402357c

900110b8 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900110b8:	b508      	push	{r3, lr}
900110ba:	f7f0 fc97 	bl	900019ec <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900110be:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900110c2:	f7f0 bc9b 	b.w	900019fc <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900110c6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900110c6:	b510      	push	{r4, lr}
900110c8:	4604      	mov	r4, r0
900110ca:	2114      	movs	r1, #20
900110cc:	f015 f871 	bl	900261b2 <_ZdlPvj>
900110d0:	4620      	mov	r0, r4
900110d2:	bd10      	pop	{r4, pc}

900110d4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
900110d4:	b570      	push	{r4, r5, r6, lr}
900110d6:	4604      	mov	r4, r0
900110d8:	6840      	ldr	r0, [r0, #4]
900110da:	6803      	ldr	r3, [r0, #0]
900110dc:	681b      	ldr	r3, [r3, #0]
900110de:	4798      	blx	r3
900110e0:	4605      	mov	r5, r0
900110e2:	b930      	cbnz	r0, 900110f2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900110e4:	7a23      	ldrb	r3, [r4, #8]
900110e6:	b123      	cbz	r3, 900110f2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
900110e8:	6860      	ldr	r0, [r4, #4]
900110ea:	6803      	ldr	r3, [r0, #0]
900110ec:	695b      	ldr	r3, [r3, #20]
900110ee:	4798      	blx	r3
900110f0:	7225      	strb	r5, [r4, #8]
900110f2:	6860      	ldr	r0, [r4, #4]
900110f4:	6803      	ldr	r3, [r0, #0]
900110f6:	681b      	ldr	r3, [r3, #0]
900110f8:	4798      	blx	r3
900110fa:	b928      	cbnz	r0, 90011108 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
900110fc:	6823      	ldr	r3, [r4, #0]
900110fe:	4620      	mov	r0, r4
90011100:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90011102:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011106:	4718      	bx	r3
90011108:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001110c:	f7f0 bc84 	b.w	90001a18 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011110 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011110:	b510      	push	{r4, lr}
90011112:	6082      	str	r2, [r0, #8]
90011114:	2200      	movs	r2, #0
90011116:	4c03      	ldr	r4, [pc, #12]	; (90011124 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011118:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001111c:	e9c0 4100 	strd	r4, r1, [r0]
90011120:	bd10      	pop	{r4, pc}
90011122:	bf00      	nop
90011124:	9002a238 	.word	0x9002a238

90011128 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011128:	6840      	ldr	r0, [r0, #4]
9001112a:	6803      	ldr	r3, [r0, #0]
9001112c:	681b      	ldr	r3, [r3, #0]
9001112e:	4718      	bx	r3

90011130 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011130:	094a      	lsrs	r2, r1, #5
90011132:	4b06      	ldr	r3, [pc, #24]	; (9001114c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
90011134:	60c1      	str	r1, [r0, #12]
90011136:	ea03 2311 	and.w	r3, r3, r1, lsr #8
9001113a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001113e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90011142:	4313      	orrs	r3, r2
90011144:	4319      	orrs	r1, r3
90011146:	8201      	strh	r1, [r0, #16]
90011148:	4770      	bx	lr
9001114a:	bf00      	nop
9001114c:	fffff800 	.word	0xfffff800

90011150 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
90011150:	f1a0 0008 	sub.w	r0, r0, #8
90011154:	e7ec      	b.n	90011130 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
90011156:	bf00      	nop

90011158 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
90011158:	b508      	push	{r3, lr}
9001115a:	4b05      	ldr	r3, [pc, #20]	; (90011170 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
9001115c:	6818      	ldr	r0, [r3, #0]
9001115e:	6803      	ldr	r3, [r0, #0]
90011160:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
90011164:	4798      	blx	r3
90011166:	1e43      	subs	r3, r0, #1
90011168:	4258      	negs	r0, r3
9001116a:	4158      	adcs	r0, r3
9001116c:	bd08      	pop	{r3, pc}
9001116e:	bf00      	nop
90011170:	2402357c 	.word	0x2402357c

90011174 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011174:	4770      	bx	lr

90011176 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011176:	3808      	subs	r0, #8
90011178:	4770      	bx	lr

9001117a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
9001117a:	b430      	push	{r4, r5}
9001117c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011180:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011184:	8a02      	ldrh	r2, [r0, #16]
90011186:	f89d 3010 	ldrb.w	r3, [sp, #16]
9001118a:	4629      	mov	r1, r5
9001118c:	9202      	str	r2, [sp, #8]
9001118e:	68c2      	ldr	r2, [r0, #12]
90011190:	4620      	mov	r0, r4
90011192:	bc30      	pop	{r4, r5}
90011194:	f7f0 bf18 	b.w	90001fc8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011198 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011198:	f7f0 bf0c 	b.w	90001fb4 <_ZN8touchgfx5paint8tearDownEv>

9001119c <_ZN8touchgfx13PainterRGB565D0Ev>:
9001119c:	b510      	push	{r4, lr}
9001119e:	4604      	mov	r4, r0
900111a0:	2114      	movs	r1, #20
900111a2:	f015 f806 	bl	900261b2 <_ZdlPvj>
900111a6:	4620      	mov	r0, r4
900111a8:	bd10      	pop	{r4, pc}

900111aa <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
900111aa:	f1a0 0008 	sub.w	r0, r0, #8
900111ae:	e7f5      	b.n	9001119c <_ZN8touchgfx13PainterRGB565D0Ev>

900111b0 <_ZNK8touchgfx13AbstractShape14getMinimalRectEv>:
900111b0:	f101 0344 	add.w	r3, r1, #68	; 0x44
900111b4:	4602      	mov	r2, r0
900111b6:	cb03      	ldmia	r3!, {r0, r1}
900111b8:	6010      	str	r0, [r2, #0]
900111ba:	4610      	mov	r0, r2
900111bc:	6051      	str	r1, [r2, #4]
900111be:	4770      	bx	lr

900111c0 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
900111c0:	b507      	push	{r0, r1, r2, lr}
900111c2:	f44f 4200 	mov.w	r2, #32768	; 0x8000
900111c6:	ab01      	add	r3, sp, #4
900111c8:	6809      	ldr	r1, [r1, #0]
900111ca:	6800      	ldr	r0, [r0, #0]
900111cc:	f005 f8ea 	bl	900163a4 <_ZN8touchgfx6muldivElllRl>
900111d0:	b003      	add	sp, #12
900111d2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

900111d8 <_ZN8touchgfx7CWRUtil4sineEi>:
900111d8:	f44f 73b4 	mov.w	r3, #360	; 0x168
900111dc:	fb90 f2f3 	sdiv	r2, r0, r3
900111e0:	fb02 0013 	mls	r0, r2, r3, r0
900111e4:	2800      	cmp	r0, #0
900111e6:	bfb8      	it	lt
900111e8:	18c0      	addlt	r0, r0, r3
900111ea:	4b0a      	ldr	r3, [pc, #40]	; (90011214 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
900111ec:	285a      	cmp	r0, #90	; 0x5a
900111ee:	dc02      	bgt.n	900111f6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
900111f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
900111f4:	4770      	bx	lr
900111f6:	28b4      	cmp	r0, #180	; 0xb4
900111f8:	dc02      	bgt.n	90011200 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
900111fa:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
900111fe:	e7f7      	b.n	900111f0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
90011200:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
90011204:	bfd4      	ite	le
90011206:	38b4      	suble	r0, #180	; 0xb4
90011208:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
9001120c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90011210:	4240      	negs	r0, r0
90011212:	4770      	bx	lr
90011214:	9002a28c 	.word	0x9002a28c

90011218 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
90011218:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
9001121c:	fb90 f2f3 	sdiv	r2, r0, r3
90011220:	b573      	push	{r0, r1, r4, r5, r6, lr}
90011222:	fb02 0013 	mls	r0, r2, r3, r0
90011226:	2800      	cmp	r0, #0
90011228:	bfb8      	it	lt
9001122a:	18c0      	addlt	r0, r0, r3
9001122c:	1144      	asrs	r4, r0, #5
9001122e:	f000 061f 	and.w	r6, r0, #31
90011232:	4620      	mov	r0, r4
90011234:	f7ff ffd0 	bl	900111d8 <_ZN8touchgfx7CWRUtil4sineEi>
90011238:	4605      	mov	r5, r0
9001123a:	b90e      	cbnz	r6, 90011240 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
9001123c:	b002      	add	sp, #8
9001123e:	bd70      	pop	{r4, r5, r6, pc}
90011240:	1c60      	adds	r0, r4, #1
90011242:	f7ff ffc9 	bl	900111d8 <_ZN8touchgfx7CWRUtil4sineEi>
90011246:	ab01      	add	r3, sp, #4
90011248:	2220      	movs	r2, #32
9001124a:	4631      	mov	r1, r6
9001124c:	1b40      	subs	r0, r0, r5
9001124e:	f005 f8a9 	bl	900163a4 <_ZN8touchgfx6muldivElllRl>
90011252:	4428      	add	r0, r5
90011254:	e7f2      	b.n	9001123c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

90011256 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>:
90011256:	b507      	push	{r0, r1, r2, lr}
90011258:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001125c:	ab01      	add	r3, sp, #4
9001125e:	0140      	lsls	r0, r0, #5
90011260:	f005 f8a0 	bl	900163a4 <_ZN8touchgfx6muldivElllRl>
90011264:	2320      	movs	r3, #32
90011266:	fb90 f0f3 	sdiv	r0, r0, r3
9001126a:	b003      	add	sp, #12
9001126c:	f85d fb04 	ldr.w	pc, [sp], #4

90011270 <_ZN8touchgfx13AbstractShapeC1Ev>:
90011270:	b510      	push	{r4, lr}
90011272:	4604      	mov	r4, r0
90011274:	f000 f9a0 	bl	900115b8 <_ZN8touchgfx12CanvasWidgetC1Ev>
90011278:	4b08      	ldr	r3, [pc, #32]	; (9001129c <_ZN8touchgfx13AbstractShapeC1Ev+0x2c>)
9001127a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001127e:	4620      	mov	r0, r4
90011280:	6023      	str	r3, [r4, #0]
90011282:	2300      	movs	r3, #0
90011284:	e9c4 220f 	strd	r2, r2, [r4, #60]	; 0x3c
90011288:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
9001128c:	63a3      	str	r3, [r4, #56]	; 0x38
9001128e:	60a3      	str	r3, [r4, #8]
90011290:	e9c4 330c 	strd	r3, r3, [r4, #48]	; 0x30
90011294:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
90011298:	bd10      	pop	{r4, pc}
9001129a:	bf00      	nop
9001129c:	9002a34c 	.word	0x9002a34c

900112a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv>:
900112a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900112a4:	6803      	ldr	r3, [r0, #0]
900112a6:	b087      	sub	sp, #28
900112a8:	4604      	mov	r4, r0
900112aa:	2500      	movs	r5, #0
900112ac:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900112ae:	4798      	blx	r3
900112b0:	9000      	str	r0, [sp, #0]
900112b2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
900112b4:	462e      	mov	r6, r5
900112b6:	46a8      	mov	r8, r5
900112b8:	462f      	mov	r7, r5
900112ba:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
900112be:	46a9      	mov	r9, r5
900112c0:	f7ff ffaa 	bl	90011218 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900112c4:	9002      	str	r0, [sp, #8]
900112c6:	6ba0      	ldr	r0, [r4, #56]	; 0x38
900112c8:	f7ff ffa6 	bl	90011218 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
900112cc:	9003      	str	r0, [sp, #12]
900112ce:	9b00      	ldr	r3, [sp, #0]
900112d0:	429d      	cmp	r5, r3
900112d2:	da6d      	bge.n	900113b0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x110>
900112d4:	6823      	ldr	r3, [r4, #0]
900112d6:	4629      	mov	r1, r5
900112d8:	4620      	mov	r0, r4
900112da:	6f9b      	ldr	r3, [r3, #120]	; 0x78
900112dc:	4798      	blx	r3
900112de:	6823      	ldr	r3, [r4, #0]
900112e0:	4682      	mov	sl, r0
900112e2:	4629      	mov	r1, r5
900112e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900112e6:	4620      	mov	r0, r4
900112e8:	4798      	blx	r3
900112ea:	6be1      	ldr	r1, [r4, #60]	; 0x3c
900112ec:	4683      	mov	fp, r0
900112ee:	4650      	mov	r0, sl
900112f0:	f7ff ffb1 	bl	90011256 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
900112f4:	a902      	add	r1, sp, #8
900112f6:	9004      	str	r0, [sp, #16]
900112f8:	a804      	add	r0, sp, #16
900112fa:	f7ff ff61 	bl	900111c0 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
900112fe:	6b22      	ldr	r2, [r4, #48]	; 0x30
90011300:	6c21      	ldr	r1, [r4, #64]	; 0x40
90011302:	4402      	add	r2, r0
90011304:	4658      	mov	r0, fp
90011306:	9201      	str	r2, [sp, #4]
90011308:	f7ff ffa5 	bl	90011256 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
9001130c:	ab06      	add	r3, sp, #24
9001130e:	a903      	add	r1, sp, #12
90011310:	f843 0d04 	str.w	r0, [r3, #-4]!
90011314:	4618      	mov	r0, r3
90011316:	f7ff ff53 	bl	900111c0 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
9001131a:	9a01      	ldr	r2, [sp, #4]
9001131c:	1a12      	subs	r2, r2, r0
9001131e:	b125      	cbz	r5, 9001132a <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x8a>
90011320:	2320      	movs	r3, #32
90011322:	fb92 f3f3 	sdiv	r3, r2, r3
90011326:	429f      	cmp	r7, r3
90011328:	da03      	bge.n	90011332 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x92>
9001132a:	2720      	movs	r7, #32
9001132c:	fb92 f7f7 	sdiv	r7, r2, r7
90011330:	b125      	cbz	r5, 9001133c <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x9c>
90011332:	2320      	movs	r3, #32
90011334:	fb92 f3f3 	sdiv	r3, r2, r3
90011338:	4599      	cmp	r9, r3
9001133a:	dd03      	ble.n	90011344 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xa4>
9001133c:	f04f 0920 	mov.w	r9, #32
90011340:	fb92 f9f9 	sdiv	r9, r2, r9
90011344:	6c21      	ldr	r1, [r4, #64]	; 0x40
90011346:	4658      	mov	r0, fp
90011348:	9201      	str	r2, [sp, #4]
9001134a:	f7ff ff84 	bl	90011256 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
9001134e:	a902      	add	r1, sp, #8
90011350:	9004      	str	r0, [sp, #16]
90011352:	a804      	add	r0, sp, #16
90011354:	f7ff ff34 	bl	900111c0 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011358:	6b63      	ldr	r3, [r4, #52]	; 0x34
9001135a:	6be1      	ldr	r1, [r4, #60]	; 0x3c
9001135c:	eb00 0b03 	add.w	fp, r0, r3
90011360:	4650      	mov	r0, sl
90011362:	f7ff ff78 	bl	90011256 <_ZN8touchgfx7CWRUtil5mulQ5ENS0_2Q5ENS0_3Q10E>
90011366:	ab06      	add	r3, sp, #24
90011368:	a903      	add	r1, sp, #12
9001136a:	f843 0d04 	str.w	r0, [r3, #-4]!
9001136e:	4618      	mov	r0, r3
90011370:	f7ff ff26 	bl	900111c0 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
90011374:	9a01      	ldr	r2, [sp, #4]
90011376:	eb00 030b 	add.w	r3, r0, fp
9001137a:	b125      	cbz	r5, 90011386 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xe6>
9001137c:	2120      	movs	r1, #32
9001137e:	fb93 f1f1 	sdiv	r1, r3, r1
90011382:	428e      	cmp	r6, r1
90011384:	da03      	bge.n	9001138e <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xee>
90011386:	2620      	movs	r6, #32
90011388:	fb93 f6f6 	sdiv	r6, r3, r6
9001138c:	b125      	cbz	r5, 90011398 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0xf8>
9001138e:	2120      	movs	r1, #32
90011390:	fb93 f1f1 	sdiv	r1, r3, r1
90011394:	4588      	cmp	r8, r1
90011396:	dd03      	ble.n	900113a0 <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x100>
90011398:	f04f 0820 	mov.w	r8, #32
9001139c:	fb93 f8f8 	sdiv	r8, r3, r8
900113a0:	6821      	ldr	r1, [r4, #0]
900113a2:	4620      	mov	r0, r4
900113a4:	f8d1 a080 	ldr.w	sl, [r1, #128]	; 0x80
900113a8:	4629      	mov	r1, r5
900113aa:	47d0      	blx	sl
900113ac:	3501      	adds	r5, #1
900113ae:	e78e      	b.n	900112ce <_ZN8touchgfx13AbstractShape24updateAbstractShapeCacheEv+0x2e>
900113b0:	3701      	adds	r7, #1
900113b2:	3601      	adds	r6, #1
900113b4:	f8a4 9044 	strh.w	r9, [r4, #68]	; 0x44
900113b8:	f8a4 8046 	strh.w	r8, [r4, #70]	; 0x46
900113bc:	eba7 0909 	sub.w	r9, r7, r9
900113c0:	eba6 0808 	sub.w	r8, r6, r8
900113c4:	f8a4 9048 	strh.w	r9, [r4, #72]	; 0x48
900113c8:	f8a4 804a 	strh.w	r8, [r4, #74]	; 0x4a
900113cc:	b007      	add	sp, #28
900113ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

900113d4 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE>:
900113d4:	b5f0      	push	{r4, r5, r6, r7, lr}
900113d6:	6803      	ldr	r3, [r0, #0]
900113d8:	b0a3      	sub	sp, #140	; 0x8c
900113da:	4604      	mov	r4, r0
900113dc:	460f      	mov	r7, r1
900113de:	6f1b      	ldr	r3, [r3, #112]	; 0x70
900113e0:	4798      	blx	r3
900113e2:	4606      	mov	r6, r0
900113e4:	2800      	cmp	r0, #0
900113e6:	d04f      	beq.n	90011488 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb4>
900113e8:	4621      	mov	r1, r4
900113ea:	a803      	add	r0, sp, #12
900113ec:	6aa5      	ldr	r5, [r4, #40]	; 0x28
900113ee:	f004 fea7 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900113f2:	6823      	ldr	r3, [r4, #0]
900113f4:	4620      	mov	r0, r4
900113f6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
900113f8:	4798      	blx	r3
900113fa:	aa03      	add	r2, sp, #12
900113fc:	4629      	mov	r1, r5
900113fe:	9000      	str	r0, [sp, #0]
90011400:	463b      	mov	r3, r7
90011402:	a805      	add	r0, sp, #20
90011404:	f014 fbfe 	bl	90025c04 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
90011408:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
9001140c:	2100      	movs	r1, #0
9001140e:	4620      	mov	r0, r4
90011410:	f88d 3058 	strb.w	r3, [sp, #88]	; 0x58
90011414:	6823      	ldr	r3, [r4, #0]
90011416:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
9001141a:	4798      	blx	r3
9001141c:	6823      	ldr	r3, [r4, #0]
9001141e:	4605      	mov	r5, r0
90011420:	2100      	movs	r1, #0
90011422:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90011426:	4620      	mov	r0, r4
90011428:	4798      	blx	r3
9001142a:	4629      	mov	r1, r5
9001142c:	2501      	movs	r5, #1
9001142e:	4602      	mov	r2, r0
90011430:	a805      	add	r0, sp, #20
90011432:	f014 fd33 	bl	90025e9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90011436:	42b5      	cmp	r5, r6
90011438:	da17      	bge.n	9001146a <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x96>
9001143a:	6823      	ldr	r3, [r4, #0]
9001143c:	4629      	mov	r1, r5
9001143e:	4620      	mov	r0, r4
90011440:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
90011444:	4798      	blx	r3
90011446:	6823      	ldr	r3, [r4, #0]
90011448:	4607      	mov	r7, r0
9001144a:	4629      	mov	r1, r5
9001144c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
90011450:	4620      	mov	r0, r4
90011452:	4798      	blx	r3
90011454:	4639      	mov	r1, r7
90011456:	4602      	mov	r2, r0
90011458:	a805      	add	r0, sp, #20
9001145a:	f014 fd6c 	bl	90025f36 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
9001145e:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90011462:	429a      	cmp	r2, r3
90011464:	d30e      	bcc.n	90011484 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb0>
90011466:	3501      	adds	r5, #1
90011468:	e7e5      	b.n	90011436 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0x62>
9001146a:	21ff      	movs	r1, #255	; 0xff
9001146c:	a805      	add	r0, sp, #20
9001146e:	f014 fc5d 	bl	90025d2c <_ZN8touchgfx6Canvas6renderEh>
90011472:	4604      	mov	r4, r0
90011474:	4b05      	ldr	r3, [pc, #20]	; (9001148c <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xb8>)
90011476:	a80a      	add	r0, sp, #40	; 0x28
90011478:	9305      	str	r3, [sp, #20]
9001147a:	f001 f9af 	bl	900127dc <_ZN8touchgfx7OutlineD1Ev>
9001147e:	4620      	mov	r0, r4
90011480:	b023      	add	sp, #140	; 0x8c
90011482:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011484:	2400      	movs	r4, #0
90011486:	e7f5      	b.n	90011474 <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xa0>
90011488:	2401      	movs	r4, #1
9001148a:	e7f8      	b.n	9001147e <_ZNK8touchgfx13AbstractShape16drawCanvasWidgetERKNS_4RectE+0xaa>
9001148c:	9002ab98 	.word	0x9002ab98

90011490 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90011490:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90011492:	6803      	ldr	r3, [r0, #0]
90011494:	460d      	mov	r5, r1
90011496:	4604      	mov	r4, r0
90011498:	4601      	mov	r1, r0
9001149a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001149c:	a802      	add	r0, sp, #8
9001149e:	4798      	blx	r3
900114a0:	6828      	ldr	r0, [r5, #0]
900114a2:	6869      	ldr	r1, [r5, #4]
900114a4:	466b      	mov	r3, sp
900114a6:	c303      	stmia	r3!, {r0, r1}
900114a8:	4668      	mov	r0, sp
900114aa:	4619      	mov	r1, r3
900114ac:	f7fe fe14 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900114b0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900114b2:	b188      	cbz	r0, 900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900114b4:	6803      	ldr	r3, [r0, #0]
900114b6:	1d21      	adds	r1, r4, #4
900114b8:	68db      	ldr	r3, [r3, #12]
900114ba:	4798      	blx	r3
900114bc:	b160      	cbz	r0, 900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900114be:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
900114c2:	2b00      	cmp	r3, #0
900114c4:	dd08      	ble.n	900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900114c6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
900114ca:	2d00      	cmp	r5, #0
900114cc:	dd04      	ble.n	900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900114ce:	4a2b      	ldr	r2, [pc, #172]	; (9001157c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
900114d0:	7812      	ldrb	r2, [r2, #0]
900114d2:	b11a      	cbz	r2, 900114dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
900114d4:	2a01      	cmp	r2, #1
900114d6:	d029      	beq.n	9001152c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
900114d8:	b004      	add	sp, #16
900114da:	bd70      	pop	{r4, r5, r6, pc}
900114dc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900114e0:	441d      	add	r5, r3
900114e2:	b2ad      	uxth	r5, r5
900114e4:	b22e      	sxth	r6, r5
900114e6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
900114ea:	42b3      	cmp	r3, r6
900114ec:	daf4      	bge.n	900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
900114ee:	6823      	ldr	r3, [r4, #0]
900114f0:	4669      	mov	r1, sp
900114f2:	4620      	mov	r0, r4
900114f4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
900114f6:	4798      	blx	r3
900114f8:	b940      	cbnz	r0, 9001150c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
900114fa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
900114fe:	2b01      	cmp	r3, #1
90011500:	d004      	beq.n	9001150c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90011502:	3301      	adds	r3, #1
90011504:	105b      	asrs	r3, r3, #1
90011506:	f8ad 3006 	strh.w	r3, [sp, #6]
9001150a:	e7f0      	b.n	900114ee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
9001150c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90011510:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90011514:	4413      	add	r3, r2
90011516:	b29b      	uxth	r3, r3
90011518:	441a      	add	r2, r3
9001151a:	f8ad 3002 	strh.w	r3, [sp, #2]
9001151e:	b212      	sxth	r2, r2
90011520:	4296      	cmp	r6, r2
90011522:	dae0      	bge.n	900114e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90011524:	1aeb      	subs	r3, r5, r3
90011526:	f8ad 3006 	strh.w	r3, [sp, #6]
9001152a:	e7dc      	b.n	900114e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
9001152c:	f8bd 5000 	ldrh.w	r5, [sp]
90011530:	441d      	add	r5, r3
90011532:	b2ad      	uxth	r5, r5
90011534:	b22e      	sxth	r6, r5
90011536:	f9bd 3000 	ldrsh.w	r3, [sp]
9001153a:	42b3      	cmp	r3, r6
9001153c:	dacc      	bge.n	900114d8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
9001153e:	6823      	ldr	r3, [r4, #0]
90011540:	4669      	mov	r1, sp
90011542:	4620      	mov	r0, r4
90011544:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011546:	4798      	blx	r3
90011548:	b940      	cbnz	r0, 9001155c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
9001154a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001154e:	2b01      	cmp	r3, #1
90011550:	d004      	beq.n	9001155c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90011552:	3301      	adds	r3, #1
90011554:	105b      	asrs	r3, r3, #1
90011556:	f8ad 3004 	strh.w	r3, [sp, #4]
9001155a:	e7f0      	b.n	9001153e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
9001155c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90011560:	f8bd 3000 	ldrh.w	r3, [sp]
90011564:	4413      	add	r3, r2
90011566:	b29b      	uxth	r3, r3
90011568:	441a      	add	r2, r3
9001156a:	f8ad 3000 	strh.w	r3, [sp]
9001156e:	b212      	sxth	r2, r2
90011570:	4296      	cmp	r6, r2
90011572:	dae0      	bge.n	90011536 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90011574:	1aeb      	subs	r3, r5, r3
90011576:	f8ad 3004 	strh.w	r3, [sp, #4]
9001157a:	e7dc      	b.n	90011536 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
9001157c:	24023574 	.word	0x24023574

90011580 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90011580:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90011582:	6803      	ldr	r3, [r0, #0]
90011584:	4604      	mov	r4, r0
90011586:	4601      	mov	r1, r0
90011588:	4668      	mov	r0, sp
9001158a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
9001158c:	4798      	blx	r3
9001158e:	2100      	movs	r1, #0
90011590:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011594:	4668      	mov	r0, sp
90011596:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
9001159a:	9102      	str	r1, [sp, #8]
9001159c:	a902      	add	r1, sp, #8
9001159e:	f8ad 200c 	strh.w	r2, [sp, #12]
900115a2:	f8ad 300e 	strh.w	r3, [sp, #14]
900115a6:	f7fe fd97 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900115aa:	6823      	ldr	r3, [r4, #0]
900115ac:	4669      	mov	r1, sp
900115ae:	4620      	mov	r0, r4
900115b0:	691b      	ldr	r3, [r3, #16]
900115b2:	4798      	blx	r3
900115b4:	b004      	add	sp, #16
900115b6:	bd10      	pop	{r4, pc}

900115b8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
900115b8:	2101      	movs	r1, #1
900115ba:	2200      	movs	r2, #0
900115bc:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900115c0:	490a      	ldr	r1, [pc, #40]	; (900115ec <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
900115c2:	8082      	strh	r2, [r0, #4]
900115c4:	6001      	str	r1, [r0, #0]
900115c6:	21ff      	movs	r1, #255	; 0xff
900115c8:	80c2      	strh	r2, [r0, #6]
900115ca:	8102      	strh	r2, [r0, #8]
900115cc:	8142      	strh	r2, [r0, #10]
900115ce:	8182      	strh	r2, [r0, #12]
900115d0:	81c2      	strh	r2, [r0, #14]
900115d2:	8202      	strh	r2, [r0, #16]
900115d4:	8242      	strh	r2, [r0, #18]
900115d6:	61c2      	str	r2, [r0, #28]
900115d8:	8402      	strh	r2, [r0, #32]
900115da:	8442      	strh	r2, [r0, #34]	; 0x22
900115dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
900115e0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
900115e4:	6282      	str	r2, [r0, #40]	; 0x28
900115e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
900115ea:	4770      	bx	lr
900115ec:	9002a3e0 	.word	0x9002a3e0

900115f0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
900115f0:	b508      	push	{r3, lr}
900115f2:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
900115f6:	b10b      	cbz	r3, 900115fc <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
900115f8:	f7f0 fef6 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
900115fc:	bd08      	pop	{r3, pc}

900115fe <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
900115fe:	6803      	ldr	r3, [r0, #0]
90011600:	f64f 71fe 	movw	r1, #65534	; 0xfffe
90011604:	6e5b      	ldr	r3, [r3, #100]	; 0x64
90011606:	4718      	bx	r3

90011608 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
90011608:	4770      	bx	lr

9001160a <_ZN8touchgfx14SnapshotWidgetD0Ev>:
9001160a:	b510      	push	{r4, lr}
9001160c:	4604      	mov	r4, r0
9001160e:	212c      	movs	r1, #44	; 0x2c
90011610:	f014 fdcf 	bl	900261b2 <_ZdlPvj>
90011614:	4620      	mov	r0, r4
90011616:	bd10      	pop	{r4, pc}

90011618 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
90011618:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001161c:	2bff      	cmp	r3, #255	; 0xff
9001161e:	b510      	push	{r4, lr}
90011620:	d104      	bne.n	9001162c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
90011622:	8cca      	ldrh	r2, [r1, #38]	; 0x26
90011624:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011628:	429a      	cmp	r2, r3
9001162a:	d105      	bne.n	90011638 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
9001162c:	2300      	movs	r3, #0
9001162e:	8003      	strh	r3, [r0, #0]
90011630:	8043      	strh	r3, [r0, #2]
90011632:	8083      	strh	r3, [r0, #4]
90011634:	80c3      	strh	r3, [r0, #6]
90011636:	bd10      	pop	{r4, pc}
90011638:	2300      	movs	r3, #0
9001163a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
9001163e:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
90011642:	8003      	strh	r3, [r0, #0]
90011644:	8043      	strh	r3, [r0, #2]
90011646:	8084      	strh	r4, [r0, #4]
90011648:	80c2      	strh	r2, [r0, #6]
9001164a:	e7f4      	b.n	90011636 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

9001164c <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
9001164c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011650:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011654:	b087      	sub	sp, #28
90011656:	4604      	mov	r4, r0
90011658:	4689      	mov	r9, r1
9001165a:	b363      	cbz	r3, 900116b6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
9001165c:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
9001165e:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011662:	429a      	cmp	r2, r3
90011664:	d027      	beq.n	900116b6 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
90011666:	ad06      	add	r5, sp, #24
90011668:	2700      	movs	r7, #0
9001166a:	f825 2d0c 	strh.w	r2, [r5, #-12]!
9001166e:	4628      	mov	r0, r5
90011670:	f006 fd92 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011674:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011678:	a904      	add	r1, sp, #16
9001167a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001167e:	f8ad 3016 	strh.w	r3, [sp, #22]
90011682:	4620      	mov	r0, r4
90011684:	6823      	ldr	r3, [r4, #0]
90011686:	9704      	str	r7, [sp, #16]
90011688:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001168a:	4798      	blx	r3
9001168c:	f7ff f808 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90011690:	6803      	ldr	r3, [r0, #0]
90011692:	4606      	mov	r6, r0
90011694:	4628      	mov	r0, r5
90011696:	f8d3 800c 	ldr.w	r8, [r3, #12]
9001169a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
9001169c:	f8ad 300c 	strh.w	r3, [sp, #12]
900116a0:	f006 fe66 	bl	90018370 <_ZNK8touchgfx6Bitmap7getDataEv>
900116a4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
900116a8:	4601      	mov	r1, r0
900116aa:	9701      	str	r7, [sp, #4]
900116ac:	aa04      	add	r2, sp, #16
900116ae:	9300      	str	r3, [sp, #0]
900116b0:	4630      	mov	r0, r6
900116b2:	464b      	mov	r3, r9
900116b4:	47c0      	blx	r8
900116b6:	b007      	add	sp, #28
900116b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

900116bc <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
900116bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
900116be:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900116c2:	460d      	mov	r5, r1
900116c4:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
900116c8:	2100      	movs	r1, #0
900116ca:	f8ad 3006 	strh.w	r3, [sp, #6]
900116ce:	4604      	mov	r4, r0
900116d0:	6803      	ldr	r3, [r0, #0]
900116d2:	f8ad 2004 	strh.w	r2, [sp, #4]
900116d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900116d8:	9100      	str	r1, [sp, #0]
900116da:	4669      	mov	r1, sp
900116dc:	4798      	blx	r3
900116de:	4621      	mov	r1, r4
900116e0:	a802      	add	r0, sp, #8
900116e2:	f004 fd2d 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900116e6:	f7fe ffdb 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
900116ea:	6803      	ldr	r3, [r0, #0]
900116ec:	aa02      	add	r2, sp, #8
900116ee:	4669      	mov	r1, sp
900116f0:	695e      	ldr	r6, [r3, #20]
900116f2:	462b      	mov	r3, r5
900116f4:	47b0      	blx	r6
900116f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
900116fa:	2800      	cmp	r0, #0
900116fc:	bf08      	it	eq
900116fe:	461d      	moveq	r5, r3
90011700:	84e5      	strh	r5, [r4, #38]	; 0x26
90011702:	b004      	add	sp, #16
90011704:	bd70      	pop	{r4, r5, r6, pc}
	...

90011708 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
90011708:	2200      	movs	r2, #0
9001170a:	8082      	strh	r2, [r0, #4]
9001170c:	80c2      	strh	r2, [r0, #6]
9001170e:	8102      	strh	r2, [r0, #8]
90011710:	8142      	strh	r2, [r0, #10]
90011712:	8182      	strh	r2, [r0, #12]
90011714:	81c2      	strh	r2, [r0, #14]
90011716:	8202      	strh	r2, [r0, #16]
90011718:	8242      	strh	r2, [r0, #18]
9001171a:	61c2      	str	r2, [r0, #28]
9001171c:	8402      	strh	r2, [r0, #32]
9001171e:	8442      	strh	r2, [r0, #34]	; 0x22
90011720:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
90011724:	e9c0 2205 	strd	r2, r2, [r0, #20]
90011728:	2201      	movs	r2, #1
9001172a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
9001172e:	4a04      	ldr	r2, [pc, #16]	; (90011740 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
90011730:	6002      	str	r2, [r0, #0]
90011732:	f64f 72ff 	movw	r2, #65535	; 0xffff
90011736:	84c2      	strh	r2, [r0, #38]	; 0x26
90011738:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
9001173c:	4770      	bx	lr
9001173e:	bf00      	nop
90011740:	9002a458 	.word	0x9002a458

90011744 <_ZNK8touchgfx5Image17invalidateContentEv>:
90011744:	b508      	push	{r3, lr}
90011746:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
9001174a:	b10b      	cbz	r3, 90011750 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
9001174c:	f7f0 fe4c 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90011750:	bd08      	pop	{r3, pc}

90011752 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
90011752:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
90011756:	4770      	bx	lr

90011758 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
90011758:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
9001175c:	4770      	bx	lr

9001175e <_ZN8touchgfx13ScalableImageD1Ev>:
9001175e:	4770      	bx	lr

90011760 <_ZN8touchgfx13ScalableImageD0Ev>:
90011760:	b510      	push	{r4, lr}
90011762:	4604      	mov	r4, r0
90011764:	212c      	movs	r1, #44	; 0x2c
90011766:	f014 fd24 	bl	900261b2 <_ZdlPvj>
9001176a:	4620      	mov	r0, r4
9001176c:	bd10      	pop	{r4, pc}

9001176e <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
9001176e:	b5f0      	push	{r4, r5, r6, r7, lr}
90011770:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
90011774:	b085      	sub	sp, #20
90011776:	4604      	mov	r4, r0
90011778:	460d      	mov	r5, r1
9001177a:	2bff      	cmp	r3, #255	; 0xff
9001177c:	d128      	bne.n	900117d0 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
9001177e:	f101 0626 	add.w	r6, r1, #38	; 0x26
90011782:	4668      	mov	r0, sp
90011784:	4631      	mov	r1, r6
90011786:	f006 fd6f 	bl	90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001178a:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
9001178e:	4630      	mov	r0, r6
90011790:	f006 fd02 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011794:	4287      	cmp	r7, r0
90011796:	d11b      	bne.n	900117d0 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
90011798:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
9001179c:	4630      	mov	r0, r6
9001179e:	f006 fd2f 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
900117a2:	4287      	cmp	r7, r0
900117a4:	d114      	bne.n	900117d0 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
900117a6:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
900117aa:	2100      	movs	r1, #0
900117ac:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
900117b0:	f8ad 300e 	strh.w	r3, [sp, #14]
900117b4:	466b      	mov	r3, sp
900117b6:	9102      	str	r1, [sp, #8]
900117b8:	f8ad 200c 	strh.w	r2, [sp, #12]
900117bc:	cb03      	ldmia	r3!, {r0, r1}
900117be:	6020      	str	r0, [r4, #0]
900117c0:	4620      	mov	r0, r4
900117c2:	6061      	str	r1, [r4, #4]
900117c4:	4619      	mov	r1, r3
900117c6:	f7fe fc87 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900117ca:	4620      	mov	r0, r4
900117cc:	b005      	add	sp, #20
900117ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
900117d0:	2300      	movs	r3, #0
900117d2:	8023      	strh	r3, [r4, #0]
900117d4:	8063      	strh	r3, [r4, #2]
900117d6:	80a3      	strh	r3, [r4, #4]
900117d8:	80e3      	strh	r3, [r4, #6]
900117da:	e7f6      	b.n	900117ca <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>

900117dc <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
900117dc:	b538      	push	{r3, r4, r5, lr}
900117de:	2300      	movs	r3, #0
900117e0:	2501      	movs	r5, #1
900117e2:	4604      	mov	r4, r0
900117e4:	8083      	strh	r3, [r0, #4]
900117e6:	80c3      	strh	r3, [r0, #6]
900117e8:	8103      	strh	r3, [r0, #8]
900117ea:	8143      	strh	r3, [r0, #10]
900117ec:	8183      	strh	r3, [r0, #12]
900117ee:	81c3      	strh	r3, [r0, #14]
900117f0:	8203      	strh	r3, [r0, #16]
900117f2:	8243      	strh	r3, [r0, #18]
900117f4:	61c3      	str	r3, [r0, #28]
900117f6:	8403      	strh	r3, [r0, #32]
900117f8:	8443      	strh	r3, [r0, #34]	; 0x22
900117fa:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
900117fe:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
90011802:	e9c0 3305 	strd	r3, r3, [r0, #20]
90011806:	4b07      	ldr	r3, [pc, #28]	; (90011824 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
90011808:	6003      	str	r3, [r0, #0]
9001180a:	880b      	ldrh	r3, [r1, #0]
9001180c:	84c3      	strh	r3, [r0, #38]	; 0x26
9001180e:	23ff      	movs	r3, #255	; 0xff
90011810:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
90011814:	f000 ff6f 	bl	900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90011818:	4b03      	ldr	r3, [pc, #12]	; (90011828 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
9001181a:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
9001181e:	4620      	mov	r0, r4
90011820:	6023      	str	r3, [r4, #0]
90011822:	bd38      	pop	{r3, r4, r5, pc}
90011824:	9002a714 	.word	0x9002a714
90011828:	9002a4c8 	.word	0x9002a4c8

9001182c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
9001182c:	4603      	mov	r3, r0
9001182e:	3026      	adds	r0, #38	; 0x26
90011830:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
90011834:	b90b      	cbnz	r3, 9001183a <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
90011836:	f004 bd27 	b.w	90016288 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
9001183a:	f004 bd35 	b.w	900162a8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

90011840 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
90011840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011844:	4604      	mov	r4, r0
90011846:	b0b3      	sub	sp, #204	; 0xcc
90011848:	469b      	mov	fp, r3
9001184a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
9001184e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011852:	2500      	movs	r5, #0
90011854:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
90011858:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
9001185c:	ab11      	add	r3, sp, #68	; 0x44
9001185e:	9206      	str	r2, [sp, #24]
90011860:	4618      	mov	r0, r3
90011862:	9511      	str	r5, [sp, #68]	; 0x44
90011864:	9307      	str	r3, [sp, #28]
90011866:	ad13      	add	r5, sp, #76	; 0x4c
90011868:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
9001186c:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
90011870:	f7fe fc32 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90011874:	9b07      	ldr	r3, [sp, #28]
90011876:	e893 0003 	ldmia.w	r3, {r0, r1}
9001187a:	e885 0003 	stmia.w	r5, {r0, r1}
9001187e:	6821      	ldr	r1, [r4, #0]
90011880:	4620      	mov	r0, r4
90011882:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90011884:	4629      	mov	r1, r5
90011886:	47b0      	blx	r6
90011888:	4621      	mov	r1, r4
9001188a:	a815      	add	r0, sp, #84	; 0x54
9001188c:	1d26      	adds	r6, r4, #4
9001188e:	f004 fc57 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90011892:	a815      	add	r0, sp, #84	; 0x54
90011894:	f003 f98a 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90011898:	9b07      	ldr	r3, [sp, #28]
9001189a:	4631      	mov	r1, r6
9001189c:	4618      	mov	r0, r3
9001189e:	f003 f9c9 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900118a2:	4628      	mov	r0, r5
900118a4:	f104 0526 	add.w	r5, r4, #38	; 0x26
900118a8:	f003 f980 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900118ac:	4628      	mov	r0, r5
900118ae:	f006 fd5f 	bl	90018370 <_ZNK8touchgfx6Bitmap7getDataEv>
900118b2:	9007      	str	r0, [sp, #28]
900118b4:	2800      	cmp	r0, #0
900118b6:	f000 80ce 	beq.w	90011a56 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
900118ba:	f8db 200c 	ldr.w	r2, [fp, #12]
900118be:	a809      	add	r0, sp, #36	; 0x24
900118c0:	f8db 1000 	ldr.w	r1, [fp]
900118c4:	920c      	str	r2, [sp, #48]	; 0x30
900118c6:	f8da 2000 	ldr.w	r2, [sl]
900118ca:	9109      	str	r1, [sp, #36]	; 0x24
900118cc:	920d      	str	r2, [sp, #52]	; 0x34
900118ce:	f8da 2004 	ldr.w	r2, [sl, #4]
900118d2:	f8db 1004 	ldr.w	r1, [fp, #4]
900118d6:	920e      	str	r2, [sp, #56]	; 0x38
900118d8:	f8da 2008 	ldr.w	r2, [sl, #8]
900118dc:	910a      	str	r1, [sp, #40]	; 0x28
900118de:	920f      	str	r2, [sp, #60]	; 0x3c
900118e0:	f8db 1008 	ldr.w	r1, [fp, #8]
900118e4:	f8da 200c 	ldr.w	r2, [sl, #12]
900118e8:	910b      	str	r1, [sp, #44]	; 0x2c
900118ea:	a90d      	add	r1, sp, #52	; 0x34
900118ec:	9210      	str	r2, [sp, #64]	; 0x40
900118ee:	4632      	mov	r2, r6
900118f0:	f003 f984 	bl	90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900118f4:	4632      	mov	r2, r6
900118f6:	a90e      	add	r1, sp, #56	; 0x38
900118f8:	a80a      	add	r0, sp, #40	; 0x28
900118fa:	f003 f97f 	bl	90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
900118fe:	4632      	mov	r2, r6
90011900:	a90f      	add	r1, sp, #60	; 0x3c
90011902:	a80b      	add	r0, sp, #44	; 0x2c
90011904:	f003 f97a 	bl	90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011908:	4632      	mov	r2, r6
9001190a:	a910      	add	r1, sp, #64	; 0x40
9001190c:	a80c      	add	r0, sp, #48	; 0x30
9001190e:	f003 f975 	bl	90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
90011912:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
90011916:	ed97 3a00 	vldr	s6, [r7]
9001191a:	eef0 6a67 	vmov.f32	s13, s15
9001191e:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
90011922:	edd7 4a01 	vldr	s9, [r7, #4]
90011926:	eeb0 7a67 	vmov.f32	s14, s15
9001192a:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
9001192e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
90011932:	ed99 2a00 	vldr	s4, [r9]
90011936:	eeb0 6a67 	vmov.f32	s12, s15
9001193a:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
9001193e:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
90011942:	edd8 2a00 	vldr	s5, [r8]
90011946:	edd9 3a01 	vldr	s7, [r9, #4]
9001194a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001194e:	ed98 4a01 	vldr	s8, [r8, #4]
90011952:	ed99 5a02 	vldr	s10, [r9, #8]
90011956:	edd8 5a02 	vldr	s11, [r8, #8]
9001195a:	ee16 6a10 	vmov	r6, s12
9001195e:	eeb0 6a67 	vmov.f32	s12, s15
90011962:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
90011966:	f8d9 e00c 	ldr.w	lr, [r9, #12]
9001196a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001196e:	f8d8 c00c 	ldr.w	ip, [r8, #12]
90011972:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
90011976:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
9001197a:	ee16 0a10 	vmov	r0, s12
9001197e:	eeb0 6a67 	vmov.f32	s12, s15
90011982:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
90011986:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
9001198a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
9001198e:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
90011992:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
90011996:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
9001199a:	ee16 1a10 	vmov	r1, s12
9001199e:	eeb0 6a67 	vmov.f32	s12, s15
900119a2:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
900119a6:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
900119aa:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900119ae:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
900119b2:	f8d7 a008 	ldr.w	sl, [r7, #8]
900119b6:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
900119ba:	68ff      	ldr	r7, [r7, #12]
900119bc:	ee16 2a10 	vmov	r2, s12
900119c0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
900119c4:	9624      	str	r6, [sp, #144]	; 0x90
900119c6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
900119ca:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
900119ce:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
900119d2:	4628      	mov	r0, r5
900119d4:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
900119d8:	9b06      	ldr	r3, [sp, #24]
900119da:	922d      	str	r2, [sp, #180]	; 0xb4
900119dc:	4a1f      	ldr	r2, [pc, #124]	; (90011a5c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
900119de:	9317      	str	r3, [sp, #92]	; 0x5c
900119e0:	8812      	ldrh	r2, [r2, #0]
900119e2:	9b07      	ldr	r3, [sp, #28]
900119e4:	9218      	str	r2, [sp, #96]	; 0x60
900119e6:	9319      	str	r3, [sp, #100]	; 0x64
900119e8:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
900119ec:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
900119f0:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
900119f4:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
900119f8:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
900119fc:	9731      	str	r7, [sp, #196]	; 0xc4
900119fe:	f006 fce7 	bl	900183d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
90011a02:	901a      	str	r0, [sp, #104]	; 0x68
90011a04:	4628      	mov	r0, r5
90011a06:	f006 fbc7 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011a0a:	901b      	str	r0, [sp, #108]	; 0x6c
90011a0c:	4628      	mov	r0, r5
90011a0e:	f006 fbf7 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011a12:	901c      	str	r0, [sp, #112]	; 0x70
90011a14:	4628      	mov	r0, r5
90011a16:	f006 fbbf 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011a1a:	4b11      	ldr	r3, [pc, #68]	; (90011a60 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
90011a1c:	901d      	str	r0, [sp, #116]	; 0x74
90011a1e:	681b      	ldr	r3, [r3, #0]
90011a20:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
90011a24:	b10a      	cbz	r2, 90011a2a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
90011a26:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
90011a28:	b905      	cbnz	r5, 90011a2c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
90011a2a:	689d      	ldr	r5, [r3, #8]
90011a2c:	682b      	ldr	r3, [r5, #0]
90011a2e:	4620      	mov	r0, r4
90011a30:	6c1e      	ldr	r6, [r3, #64]	; 0x40
90011a32:	f7ff fefb 	bl	9001182c <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
90011a36:	f64f 73ff 	movw	r3, #65535	; 0xffff
90011a3a:	aa1e      	add	r2, sp, #120	; 0x78
90011a3c:	a917      	add	r1, sp, #92	; 0x5c
90011a3e:	9304      	str	r3, [sp, #16]
90011a40:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
90011a44:	e9cd 0302 	strd	r0, r3, [sp, #8]
90011a48:	ab13      	add	r3, sp, #76	; 0x4c
90011a4a:	4628      	mov	r0, r5
90011a4c:	9301      	str	r3, [sp, #4]
90011a4e:	ab15      	add	r3, sp, #84	; 0x54
90011a50:	9300      	str	r3, [sp, #0]
90011a52:	ab19      	add	r3, sp, #100	; 0x64
90011a54:	47b0      	blx	r6
90011a56:	b033      	add	sp, #204	; 0xcc
90011a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011a5c:	24023576 	.word	0x24023576
90011a60:	2402357c 	.word	0x2402357c

90011a64 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
90011a64:	b570      	push	{r4, r5, r6, lr}
90011a66:	ed2d 8b04 	vpush	{d8-d9}
90011a6a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
90011a6e:	b098      	sub	sp, #96	; 0x60
90011a70:	4604      	mov	r4, r0
90011a72:	460e      	mov	r6, r1
90011a74:	2b00      	cmp	r3, #0
90011a76:	d065      	beq.n	90011b44 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
90011a78:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
90011a7c:	f100 0526 	add.w	r5, r0, #38	; 0x26
90011a80:	ed9f 8a37 	vldr	s16, [pc, #220]	; 90011b60 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
90011a84:	ee09 3a10 	vmov	s18, r3
90011a88:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90011a8c:	4628      	mov	r0, r5
90011a8e:	ee08 3a90 	vmov	s17, r3
90011a92:	4b34      	ldr	r3, [pc, #208]	; (90011b64 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
90011a94:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
90011a98:	930c      	str	r3, [sp, #48]	; 0x30
90011a9a:	eef8 8ae8 	vcvt.f32.s32	s17, s17
90011a9e:	930d      	str	r3, [sp, #52]	; 0x34
90011aa0:	930e      	str	r3, [sp, #56]	; 0x38
90011aa2:	ee39 9a08 	vadd.f32	s18, s18, s16
90011aa6:	930f      	str	r3, [sp, #60]	; 0x3c
90011aa8:	f006 fb76 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90011aac:	ee07 0a90 	vmov	s15, r0
90011ab0:	4628      	mov	r0, r5
90011ab2:	ee78 8a88 	vadd.f32	s17, s17, s16
90011ab6:	eef8 9ae7 	vcvt.f32.s32	s19, s15
90011aba:	f006 fba1 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
90011abe:	4b2a      	ldr	r3, [pc, #168]	; (90011b68 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
90011ac0:	ee07 0a90 	vmov	s15, r0
90011ac4:	781b      	ldrb	r3, [r3, #0]
90011ac6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
90011aca:	eef0 7a48 	vmov.f32	s15, s16
90011ace:	2b01      	cmp	r3, #1
90011ad0:	d13c      	bne.n	90011b4c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
90011ad2:	eef0 6a69 	vmov.f32	s13, s19
90011ad6:	ee19 3a90 	vmov	r3, s19
90011ada:	eeb0 6a47 	vmov.f32	s12, s14
90011ade:	eef0 5a47 	vmov.f32	s11, s14
90011ae2:	eef0 9a48 	vmov.f32	s19, s16
90011ae6:	eeb0 7a48 	vmov.f32	s14, s16
90011aea:	9314      	str	r3, [sp, #80]	; 0x50
90011aec:	ab14      	add	r3, sp, #80	; 0x50
90011aee:	2200      	movs	r2, #0
90011af0:	4631      	mov	r1, r6
90011af2:	9303      	str	r3, [sp, #12]
90011af4:	ab10      	add	r3, sp, #64	; 0x40
90011af6:	4620      	mov	r0, r4
90011af8:	edcd 7a04 	vstr	s15, [sp, #16]
90011afc:	9302      	str	r3, [sp, #8]
90011afe:	ab0c      	add	r3, sp, #48	; 0x30
90011b00:	ed8d 9a05 	vstr	s18, [sp, #20]
90011b04:	9301      	str	r3, [sp, #4]
90011b06:	ab08      	add	r3, sp, #32
90011b08:	ed8d 9a06 	vstr	s18, [sp, #24]
90011b0c:	9300      	str	r3, [sp, #0]
90011b0e:	ab04      	add	r3, sp, #16
90011b10:	edcd 7a07 	vstr	s15, [sp, #28]
90011b14:	edcd 7a08 	vstr	s15, [sp, #32]
90011b18:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
90011b1c:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
90011b20:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
90011b24:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
90011b28:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
90011b2c:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
90011b30:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
90011b34:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
90011b38:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
90011b3c:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
90011b40:	f7ff fe7e 	bl	90011840 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
90011b44:	b018      	add	sp, #96	; 0x60
90011b46:	ecbd 8b04 	vpop	{d8-d9}
90011b4a:	bd70      	pop	{r4, r5, r6, pc}
90011b4c:	eef0 6a47 	vmov.f32	s13, s14
90011b50:	ee18 3a10 	vmov	r3, s16
90011b54:	eef0 5a69 	vmov.f32	s11, s19
90011b58:	eeb0 6a48 	vmov.f32	s12, s16
90011b5c:	e7c5      	b.n	90011aea <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
90011b5e:	bf00      	nop
90011b60:	00000000 	.word	0x00000000
90011b64:	42c80000 	.word	0x42c80000
90011b68:	24023574 	.word	0x24023574

90011b6c <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90011b6c:	2000      	movs	r0, #0
90011b6e:	4770      	bx	lr

90011b70 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90011b70:	4b07      	ldr	r3, [pc, #28]	; (90011b90 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90011b72:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90011b74:	881b      	ldrh	r3, [r3, #0]
90011b76:	4293      	cmp	r3, r2
90011b78:	bf81      	itttt	hi
90011b7a:	4b06      	ldrhi	r3, [pc, #24]	; (90011b94 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90011b7c:	681b      	ldrhi	r3, [r3, #0]
90011b7e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90011b82:	7858      	ldrbhi	r0, [r3, #1]
90011b84:	bf8c      	ite	hi
90011b86:	f000 0003 	andhi.w	r0, r0, #3
90011b8a:	2000      	movls	r0, #0
90011b8c:	4770      	bx	lr
90011b8e:	bf00      	nop
90011b90:	240235d8 	.word	0x240235d8
90011b94:	240235d4 	.word	0x240235d4

90011b98 <_ZN8touchgfx8TextAreaD1Ev>:
90011b98:	4770      	bx	lr
	...

90011b9c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90011b9c:	4b11      	ldr	r3, [pc, #68]	; (90011be4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90011b9e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90011ba2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011ba4:	4604      	mov	r4, r0
90011ba6:	881b      	ldrh	r3, [r3, #0]
90011ba8:	428b      	cmp	r3, r1
90011baa:	d918      	bls.n	90011bde <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90011bac:	6803      	ldr	r3, [r0, #0]
90011bae:	6f9d      	ldr	r5, [r3, #120]	; 0x78
90011bb0:	4b0d      	ldr	r3, [pc, #52]	; (90011be8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90011bb2:	6818      	ldr	r0, [r3, #0]
90011bb4:	f7f2 fdae 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
90011bb8:	6823      	ldr	r3, [r4, #0]
90011bba:	4606      	mov	r6, r0
90011bbc:	4620      	mov	r0, r4
90011bbe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011bc0:	4798      	blx	r3
90011bc2:	6823      	ldr	r3, [r4, #0]
90011bc4:	4607      	mov	r7, r0
90011bc6:	4620      	mov	r0, r4
90011bc8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011bcc:	4798      	blx	r3
90011bce:	463a      	mov	r2, r7
90011bd0:	4603      	mov	r3, r0
90011bd2:	4631      	mov	r1, r6
90011bd4:	4620      	mov	r0, r4
90011bd6:	46ac      	mov	ip, r5
90011bd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90011bdc:	4760      	bx	ip
90011bde:	2000      	movs	r0, #0
90011be0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90011be4:	240235d8 	.word	0x240235d8
90011be8:	240235e0 	.word	0x240235e0

90011bec <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90011bec:	4b18      	ldr	r3, [pc, #96]	; (90011c50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90011bee:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90011bf2:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
90011bf4:	4604      	mov	r4, r0
90011bf6:	881b      	ldrh	r3, [r3, #0]
90011bf8:	428b      	cmp	r3, r1
90011bfa:	d926      	bls.n	90011c4a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90011bfc:	4b15      	ldr	r3, [pc, #84]	; (90011c54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90011bfe:	681b      	ldr	r3, [r3, #0]
90011c00:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90011c04:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90011c08:	4b13      	ldr	r3, [pc, #76]	; (90011c58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90011c0a:	7855      	ldrb	r5, [r2, #1]
90011c0c:	681b      	ldr	r3, [r3, #0]
90011c0e:	f3c5 0581 	ubfx	r5, r5, #2, #2
90011c12:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90011c16:	6833      	ldr	r3, [r6, #0]
90011c18:	69df      	ldr	r7, [r3, #28]
90011c1a:	4b10      	ldr	r3, [pc, #64]	; (90011c5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90011c1c:	6818      	ldr	r0, [r3, #0]
90011c1e:	f7f2 fd79 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
90011c22:	6823      	ldr	r3, [r4, #0]
90011c24:	4680      	mov	r8, r0
90011c26:	4620      	mov	r0, r4
90011c28:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011c2a:	4798      	blx	r3
90011c2c:	6823      	ldr	r3, [r4, #0]
90011c2e:	4681      	mov	r9, r0
90011c30:	4620      	mov	r0, r4
90011c32:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011c36:	4798      	blx	r3
90011c38:	464b      	mov	r3, r9
90011c3a:	9000      	str	r0, [sp, #0]
90011c3c:	4642      	mov	r2, r8
90011c3e:	4629      	mov	r1, r5
90011c40:	4630      	mov	r0, r6
90011c42:	47b8      	blx	r7
90011c44:	b003      	add	sp, #12
90011c46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011c4a:	2000      	movs	r0, #0
90011c4c:	e7fa      	b.n	90011c44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90011c4e:	bf00      	nop
90011c50:	240235d8 	.word	0x240235d8
90011c54:	240235d4 	.word	0x240235d4
90011c58:	240235dc 	.word	0x240235dc
90011c5c:	240235e0 	.word	0x240235e0

90011c60 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90011c60:	b40e      	push	{r1, r2, r3}
90011c62:	4b30      	ldr	r3, [pc, #192]	; (90011d24 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90011c64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011c68:	881a      	ldrh	r2, [r3, #0]
90011c6a:	b09d      	sub	sp, #116	; 0x74
90011c6c:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
90011c6e:	4604      	mov	r4, r0
90011c70:	429a      	cmp	r2, r3
90011c72:	d954      	bls.n	90011d1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90011c74:	aa26      	add	r2, sp, #152	; 0x98
90011c76:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 90011d28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90011c7a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90011d2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90011c7e:	9202      	str	r2, [sp, #8]
90011c80:	f8d9 2000 	ldr.w	r2, [r9]
90011c84:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90011c88:	f8d8 3000 	ldr.w	r3, [r8]
90011c8c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011c90:	682b      	ldr	r3, [r5, #0]
90011c92:	4628      	mov	r0, r5
90011c94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011c96:	4798      	blx	r3
90011c98:	4606      	mov	r6, r0
90011c9a:	b207      	sxth	r7, r0
90011c9c:	a803      	add	r0, sp, #12
90011c9e:	f004 feee 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90011ca2:	682b      	ldr	r3, [r5, #0]
90011ca4:	4628      	mov	r0, r5
90011ca6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011ca8:	4798      	blx	r3
90011caa:	682b      	ldr	r3, [r5, #0]
90011cac:	4682      	mov	sl, r0
90011cae:	4628      	mov	r0, r5
90011cb0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011cb2:	4798      	blx	r3
90011cb4:	4653      	mov	r3, sl
90011cb6:	9000      	str	r0, [sp, #0]
90011cb8:	a803      	add	r0, sp, #12
90011cba:	9a02      	ldr	r2, [sp, #8]
90011cbc:	9925      	ldr	r1, [sp, #148]	; 0x94
90011cbe:	f004 ff39 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90011cc2:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011cc4:	f8d9 3000 	ldr.w	r3, [r9]
90011cc8:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
90011ccc:	8925      	ldrh	r5, [r4, #8]
90011cce:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90011cd2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90011cd6:	eba5 050c 	sub.w	r5, r5, ip
90011cda:	784a      	ldrb	r2, [r1, #1]
90011cdc:	f8d8 3000 	ldr.w	r3, [r8]
90011ce0:	b22d      	sxth	r5, r5
90011ce2:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
90011ce6:	f3c2 0281 	ubfx	r2, r2, #2, #2
90011cea:	9500      	str	r5, [sp, #0]
90011cec:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90011cf0:	a803      	add	r0, sp, #12
90011cf2:	f002 fc61 	bl	900145b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90011cf6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
90011cfa:	b203      	sxth	r3, r0
90011cfc:	18b9      	adds	r1, r7, r2
90011cfe:	2900      	cmp	r1, #0
90011d00:	dd0b      	ble.n	90011d1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90011d02:	3b01      	subs	r3, #1
90011d04:	fb13 f302 	smulbb	r3, r3, r2
90011d08:	fb16 3300 	smlabb	r3, r6, r0, r3
90011d0c:	b21f      	sxth	r7, r3
90011d0e:	4638      	mov	r0, r7
90011d10:	b01d      	add	sp, #116	; 0x74
90011d12:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90011d16:	b003      	add	sp, #12
90011d18:	4770      	bx	lr
90011d1a:	2b00      	cmp	r3, #0
90011d1c:	dcf7      	bgt.n	90011d0e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011d1e:	2700      	movs	r7, #0
90011d20:	e7f5      	b.n	90011d0e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90011d22:	bf00      	nop
90011d24:	240235d8 	.word	0x240235d8
90011d28:	240235d4 	.word	0x240235d4
90011d2c:	240235dc 	.word	0x240235dc

90011d30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90011d30:	4bbd      	ldr	r3, [pc, #756]	; (90012028 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90011d32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011d36:	460c      	mov	r4, r1
90011d38:	881b      	ldrh	r3, [r3, #0]
90011d3a:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
90011d3c:	b0a9      	sub	sp, #164	; 0xa4
90011d3e:	4680      	mov	r8, r0
90011d40:	428b      	cmp	r3, r1
90011d42:	d809      	bhi.n	90011d58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90011d44:	2300      	movs	r3, #0
90011d46:	f04f 32ff 	mov.w	r2, #4294967295
90011d4a:	6083      	str	r3, [r0, #8]
90011d4c:	e9c0 3200 	strd	r3, r2, [r0]
90011d50:	4640      	mov	r0, r8
90011d52:	b029      	add	sp, #164	; 0xa4
90011d54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90011d58:	4eb4      	ldr	r6, [pc, #720]	; (9001202c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90011d5a:	6833      	ldr	r3, [r6, #0]
90011d5c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90011d60:	4bb3      	ldr	r3, [pc, #716]	; (90012030 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90011d62:	681b      	ldr	r3, [r3, #0]
90011d64:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90011d68:	4bb2      	ldr	r3, [pc, #712]	; (90012034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011d6a:	6818      	ldr	r0, [r3, #0]
90011d6c:	f7f2 fcd2 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
90011d70:	682b      	ldr	r3, [r5, #0]
90011d72:	4681      	mov	r9, r0
90011d74:	4628      	mov	r0, r5
90011d76:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90011d78:	4798      	blx	r3
90011d7a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
90011d7c:	b203      	sxth	r3, r0
90011d7e:	4682      	mov	sl, r0
90011d80:	4407      	add	r7, r0
90011d82:	a80f      	add	r0, sp, #60	; 0x3c
90011d84:	9304      	str	r3, [sp, #16]
90011d86:	b2bb      	uxth	r3, r7
90011d88:	9303      	str	r3, [sp, #12]
90011d8a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90011d8e:	2b00      	cmp	r3, #0
90011d90:	f040 80a5 	bne.w	90011ede <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90011d94:	f004 fe73 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90011d98:	682b      	ldr	r3, [r5, #0]
90011d9a:	4628      	mov	r0, r5
90011d9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011d9e:	4798      	blx	r3
90011da0:	682b      	ldr	r3, [r5, #0]
90011da2:	4606      	mov	r6, r0
90011da4:	4628      	mov	r0, r5
90011da6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011da8:	4798      	blx	r3
90011daa:	6823      	ldr	r3, [r4, #0]
90011dac:	4607      	mov	r7, r0
90011dae:	4620      	mov	r0, r4
90011db0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011db2:	4798      	blx	r3
90011db4:	6823      	ldr	r3, [r4, #0]
90011db6:	4683      	mov	fp, r0
90011db8:	4620      	mov	r0, r4
90011dba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
90011dbe:	4798      	blx	r3
90011dc0:	463b      	mov	r3, r7
90011dc2:	4649      	mov	r1, r9
90011dc4:	4632      	mov	r2, r6
90011dc6:	2600      	movs	r6, #0
90011dc8:	e9cd b000 	strd	fp, r0, [sp]
90011dcc:	a80f      	add	r0, sp, #60	; 0x3c
90011dce:	4637      	mov	r7, r6
90011dd0:	f004 fec5 	bl	90016b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011dd4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011dd8:	f8df b250 	ldr.w	fp, [pc, #592]	; 9001202c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90011ddc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011de0:	bf0c      	ite	eq
90011de2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
90011de6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90011dea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
90011dec:	4629      	mov	r1, r5
90011dee:	f8db 3000 	ldr.w	r3, [fp]
90011df2:	a80f      	add	r0, sp, #60	; 0x3c
90011df4:	3701      	adds	r7, #1
90011df6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90011dfa:	f647 72ff 	movw	r2, #32767	; 0x7fff
90011dfe:	b2bf      	uxth	r7, r7
90011e00:	785b      	ldrb	r3, [r3, #1]
90011e02:	f3c3 0381 	ubfx	r3, r3, #2, #2
90011e06:	f002 f8de 	bl	90013fc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90011e0a:	9b03      	ldr	r3, [sp, #12]
90011e0c:	4286      	cmp	r6, r0
90011e0e:	eba9 0903 	sub.w	r9, r9, r3
90011e12:	bfb8      	it	lt
90011e14:	4606      	movlt	r6, r0
90011e16:	a80f      	add	r0, sp, #60	; 0x3c
90011e18:	fa0f f989 	sxth.w	r9, r9
90011e1c:	b236      	sxth	r6, r6
90011e1e:	f004 fe55 	bl	90016acc <_ZN8touchgfx12TextProvider11endOfStringEv>
90011e22:	b918      	cbnz	r0, 90011e2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90011e24:	7a2b      	ldrb	r3, [r5, #8]
90011e26:	444b      	add	r3, r9
90011e28:	2b00      	cmp	r3, #0
90011e2a:	dcde      	bgt.n	90011dea <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90011e2c:	9b03      	ldr	r3, [sp, #12]
90011e2e:	4620      	mov	r0, r4
90011e30:	9a04      	ldr	r2, [sp, #16]
90011e32:	fb13 f707 	smulbb	r7, r3, r7
90011e36:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
90011e38:	f895 9009 	ldrb.w	r9, [r5, #9]
90011e3c:	1aff      	subs	r7, r7, r3
90011e3e:	b2bf      	uxth	r7, r7
90011e40:	b23b      	sxth	r3, r7
90011e42:	429a      	cmp	r2, r3
90011e44:	bfa8      	it	ge
90011e46:	4657      	movge	r7, sl
90011e48:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011e4c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011e50:	6823      	ldr	r3, [r4, #0]
90011e52:	444f      	add	r7, r9
90011e54:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90011e56:	bf08      	it	eq
90011e58:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
90011e5c:	fa1f f987 	uxth.w	r9, r7
90011e60:	bf18      	it	ne
90011e62:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
90011e66:	4798      	blx	r3
90011e68:	2801      	cmp	r0, #1
90011e6a:	fa0f f789 	sxth.w	r7, r9
90011e6e:	b2b3      	uxth	r3, r6
90011e70:	f000 80e2 	beq.w	90012038 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
90011e74:	2802      	cmp	r0, #2
90011e76:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
90011e7a:	f000 80e3 	beq.w	90012044 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
90011e7e:	7aea      	ldrb	r2, [r5, #11]
90011e80:	b236      	sxth	r6, r6
90011e82:	7b2d      	ldrb	r5, [r5, #12]
90011e84:	1ab6      	subs	r6, r6, r2
90011e86:	442a      	add	r2, r5
90011e88:	fa1f fa86 	uxth.w	sl, r6
90011e8c:	4413      	add	r3, r2
90011e8e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
90011e92:	fa0f fb8a 	sxth.w	fp, sl
90011e96:	b29b      	uxth	r3, r3
90011e98:	2a02      	cmp	r2, #2
90011e9a:	b21e      	sxth	r6, r3
90011e9c:	f000 80d6 	beq.w	9001204c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
90011ea0:	2a03      	cmp	r2, #3
90011ea2:	f000 80de 	beq.w	90012062 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
90011ea6:	2a01      	cmp	r2, #1
90011ea8:	f040 80e6 	bne.w	90012078 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90011eac:	8925      	ldrh	r5, [r4, #8]
90011eae:	4633      	mov	r3, r6
90011eb0:	463e      	mov	r6, r7
90011eb2:	eba5 0909 	sub.w	r9, r5, r9
90011eb6:	461f      	mov	r7, r3
90011eb8:	465d      	mov	r5, fp
90011eba:	fa0f fb89 	sxth.w	fp, r9
90011ebe:	4b5d      	ldr	r3, [pc, #372]	; (90012034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90011ec0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011ec2:	6818      	ldr	r0, [r3, #0]
90011ec4:	f7f2 fc26 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
90011ec8:	f8a8 b000 	strh.w	fp, [r8]
90011ecc:	f8a8 5002 	strh.w	r5, [r8, #2]
90011ed0:	f8a8 6004 	strh.w	r6, [r8, #4]
90011ed4:	f8a8 7006 	strh.w	r7, [r8, #6]
90011ed8:	f8c8 0008 	str.w	r0, [r8, #8]
90011edc:	e738      	b.n	90011d50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90011ede:	f004 fdce 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90011ee2:	682b      	ldr	r3, [r5, #0]
90011ee4:	4628      	mov	r0, r5
90011ee6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90011ee8:	4798      	blx	r3
90011eea:	682b      	ldr	r3, [r5, #0]
90011eec:	4607      	mov	r7, r0
90011eee:	4628      	mov	r0, r5
90011ef0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90011ef2:	4798      	blx	r3
90011ef4:	6823      	ldr	r3, [r4, #0]
90011ef6:	4683      	mov	fp, r0
90011ef8:	4620      	mov	r0, r4
90011efa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
90011efc:	4798      	blx	r3
90011efe:	6822      	ldr	r2, [r4, #0]
90011f00:	9005      	str	r0, [sp, #20]
90011f02:	4620      	mov	r0, r4
90011f04:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
90011f08:	4790      	blx	r2
90011f0a:	9b05      	ldr	r3, [sp, #20]
90011f0c:	463a      	mov	r2, r7
90011f0e:	4649      	mov	r1, r9
90011f10:	9001      	str	r0, [sp, #4]
90011f12:	a80f      	add	r0, sp, #60	; 0x3c
90011f14:	9300      	str	r3, [sp, #0]
90011f16:	465b      	mov	r3, fp
90011f18:	f004 fe21 	bl	90016b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90011f1c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90011f20:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
90011f24:	af0f      	add	r7, sp, #60	; 0x3c
90011f26:	f013 0ffd 	tst.w	r3, #253	; 0xfd
90011f2a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011f2e:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
90011f30:	bf0a      	itet	eq
90011f32:	464a      	moveq	r2, r9
90011f34:	461a      	movne	r2, r3
90011f36:	4699      	moveq	r9, r3
90011f38:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
90011f3c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
90011f40:	1ad2      	subs	r2, r2, r3
90011f42:	6833      	ldr	r3, [r6, #0]
90011f44:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
90011f48:	eb03 0341 	add.w	r3, r3, r1, lsl #1
90011f4c:	7859      	ldrb	r1, [r3, #1]
90011f4e:	2300      	movs	r3, #0
90011f50:	9707      	str	r7, [sp, #28]
90011f52:	f3c1 0181 	ubfx	r1, r1, #2, #2
90011f56:	f8ad 3018 	strh.w	r3, [sp, #24]
90011f5a:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
90011f5e:	f88d 1020 	strb.w	r1, [sp, #32]
90011f62:	9509      	str	r5, [sp, #36]	; 0x24
90011f64:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90011f68:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
90011f6c:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
90011f70:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
90011f74:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
90011f78:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90011f7c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
90011f80:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90011f84:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011f88:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
90011f8c:	b350      	cbz	r0, 90011fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011f8e:	682b      	ldr	r3, [r5, #0]
90011f90:	4628      	mov	r0, r5
90011f92:	695b      	ldr	r3, [r3, #20]
90011f94:	4798      	blx	r3
90011f96:	4607      	mov	r7, r0
90011f98:	b320      	cbz	r0, 90011fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011f9a:	9809      	ldr	r0, [sp, #36]	; 0x24
90011f9c:	4639      	mov	r1, r7
90011f9e:	6803      	ldr	r3, [r0, #0]
90011fa0:	68db      	ldr	r3, [r3, #12]
90011fa2:	4798      	blx	r3
90011fa4:	4606      	mov	r6, r0
90011fa6:	b1e8      	cbz	r0, 90011fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011fa8:	7b43      	ldrb	r3, [r0, #13]
90011faa:	7a82      	ldrb	r2, [r0, #10]
90011fac:	005b      	lsls	r3, r3, #1
90011fae:	f403 7380 	and.w	r3, r3, #256	; 0x100
90011fb2:	4313      	orrs	r3, r2
90011fb4:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
90011fb8:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
90011fbc:	2b06      	cmp	r3, #6
90011fbe:	d111      	bne.n	90011fe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90011fc0:	9809      	ldr	r0, [sp, #36]	; 0x24
90011fc2:	4632      	mov	r2, r6
90011fc4:	4639      	mov	r1, r7
90011fc6:	6803      	ldr	r3, [r0, #0]
90011fc8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90011fca:	4798      	blx	r3
90011fcc:	7b73      	ldrb	r3, [r6, #13]
90011fce:	005b      	lsls	r3, r3, #1
90011fd0:	f403 7280 	and.w	r2, r3, #256	; 0x100
90011fd4:	7ab3      	ldrb	r3, [r6, #10]
90011fd6:	4313      	orrs	r3, r2
90011fd8:	4418      	add	r0, r3
90011fda:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90011fde:	4418      	add	r0, r3
90011fe0:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
90011fe4:	2600      	movs	r6, #0
90011fe6:	4637      	mov	r7, r6
90011fe8:	a806      	add	r0, sp, #24
90011fea:	3701      	adds	r7, #1
90011fec:	f002 f9e1 	bl	900143b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90011ff0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
90011ff4:	9b03      	ldr	r3, [sp, #12]
90011ff6:	b2bf      	uxth	r7, r7
90011ff8:	4286      	cmp	r6, r0
90011ffa:	eba9 0903 	sub.w	r9, r9, r3
90011ffe:	f8bd 3018 	ldrh.w	r3, [sp, #24]
90012002:	bfb8      	it	lt
90012004:	4606      	movlt	r6, r0
90012006:	fa0f f989 	sxth.w	r9, r9
9001200a:	b236      	sxth	r6, r6
9001200c:	2b00      	cmp	r3, #0
9001200e:	f43f af0d 	beq.w	90011e2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90012012:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
90012016:	2b00      	cmp	r3, #0
90012018:	f47f af08 	bne.w	90011e2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001201c:	7a2b      	ldrb	r3, [r5, #8]
9001201e:	444b      	add	r3, r9
90012020:	2b00      	cmp	r3, #0
90012022:	dce1      	bgt.n	90011fe8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
90012024:	e702      	b.n	90011e2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90012026:	bf00      	nop
90012028:	240235d8 	.word	0x240235d8
9001202c:	240235d4 	.word	0x240235d4
90012030:	240235dc 	.word	0x240235dc
90012034:	240235e0 	.word	0x240235e0
90012038:	ebaa 0606 	sub.w	r6, sl, r6
9001203c:	2002      	movs	r0, #2
9001203e:	fb96 f6f0 	sdiv	r6, r6, r0
90012042:	e71c      	b.n	90011e7e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
90012044:	441e      	add	r6, r3
90012046:	ebaa 0606 	sub.w	r6, sl, r6
9001204a:	e718      	b.n	90011e7e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001204c:	8925      	ldrh	r5, [r4, #8]
9001204e:	1aed      	subs	r5, r5, r3
90012050:	eba5 050a 	sub.w	r5, r5, sl
90012054:	fa0f fb85 	sxth.w	fp, r5
90012058:	8965      	ldrh	r5, [r4, #10]
9001205a:	eba5 0509 	sub.w	r5, r5, r9
9001205e:	b22d      	sxth	r5, r5
90012060:	e72d      	b.n	90011ebe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90012062:	8965      	ldrh	r5, [r4, #10]
90012064:	f04f 0b00 	mov.w	fp, #0
90012068:	1aed      	subs	r5, r5, r3
9001206a:	4633      	mov	r3, r6
9001206c:	463e      	mov	r6, r7
9001206e:	eba5 050a 	sub.w	r5, r5, sl
90012072:	461f      	mov	r7, r3
90012074:	b22d      	sxth	r5, r5
90012076:	e722      	b.n	90011ebe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
90012078:	2500      	movs	r5, #0
9001207a:	e720      	b.n	90011ebe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

9001207c <_ZN8touchgfx8TextAreaD0Ev>:
9001207c:	b510      	push	{r4, lr}
9001207e:	4604      	mov	r4, r0
90012080:	2148      	movs	r1, #72	; 0x48
90012082:	f014 f896 	bl	900261b2 <_ZdlPvj>
90012086:	4620      	mov	r0, r4
90012088:	bd10      	pop	{r4, pc}
	...

9001208c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
9001208c:	b513      	push	{r0, r1, r4, lr}
9001208e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
90012092:	4604      	mov	r4, r0
90012094:	b1fb      	cbz	r3, 900120d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90012096:	4b16      	ldr	r3, [pc, #88]	; (900120f0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
90012098:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
9001209a:	881b      	ldrh	r3, [r3, #0]
9001209c:	428b      	cmp	r3, r1
9001209e:	d91a      	bls.n	900120d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900120a0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900120a4:	2b00      	cmp	r3, #0
900120a6:	dd16      	ble.n	900120d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900120a8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900120ac:	2b00      	cmp	r3, #0
900120ae:	dd12      	ble.n	900120d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900120b0:	4b10      	ldr	r3, [pc, #64]	; (900120f4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
900120b2:	6818      	ldr	r0, [r3, #0]
900120b4:	f7f2 fb2e 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
900120b8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
900120bc:	6822      	ldr	r2, [r4, #0]
900120be:	2b00      	cmp	r3, #0
900120c0:	db06      	blt.n	900120d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900120c2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
900120c6:	2b00      	cmp	r3, #0
900120c8:	db02      	blt.n	900120d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
900120ca:	6c63      	ldr	r3, [r4, #68]	; 0x44
900120cc:	4298      	cmp	r0, r3
900120ce:	d004      	beq.n	900120da <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
900120d0:	6953      	ldr	r3, [r2, #20]
900120d2:	4620      	mov	r0, r4
900120d4:	4798      	blx	r3
900120d6:	b002      	add	sp, #8
900120d8:	bd10      	pop	{r4, pc}
900120da:	f104 013c 	add.w	r1, r4, #60	; 0x3c
900120de:	466b      	mov	r3, sp
900120e0:	6912      	ldr	r2, [r2, #16]
900120e2:	c903      	ldmia	r1, {r0, r1}
900120e4:	e883 0003 	stmia.w	r3, {r0, r1}
900120e8:	4619      	mov	r1, r3
900120ea:	4620      	mov	r0, r4
900120ec:	4790      	blx	r2
900120ee:	e7f2      	b.n	900120d6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900120f0:	240235d8 	.word	0x240235d8
900120f4:	240235e0 	.word	0x240235e0

900120f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
900120f8:	4b45      	ldr	r3, [pc, #276]	; (90012210 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
900120fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900120fe:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90012100:	b08e      	sub	sp, #56	; 0x38
90012102:	881b      	ldrh	r3, [r3, #0]
90012104:	4604      	mov	r4, r0
90012106:	4293      	cmp	r3, r2
90012108:	d97e      	bls.n	90012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001210a:	6808      	ldr	r0, [r1, #0]
9001210c:	ab05      	add	r3, sp, #20
9001210e:	6849      	ldr	r1, [r1, #4]
90012110:	4d40      	ldr	r5, [pc, #256]	; (90012214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
90012112:	c303      	stmia	r3!, {r0, r1}
90012114:	4611      	mov	r1, r2
90012116:	6828      	ldr	r0, [r5, #0]
90012118:	f7f2 fafc 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
9001211c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
90012120:	2b00      	cmp	r3, #0
90012122:	db11      	blt.n	90012148 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90012124:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
90012128:	2b00      	cmp	r3, #0
9001212a:	db0d      	blt.n	90012148 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001212c:	6c63      	ldr	r3, [r4, #68]	; 0x44
9001212e:	4298      	cmp	r0, r3
90012130:	d10a      	bne.n	90012148 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90012132:	f104 023c 	add.w	r2, r4, #60	; 0x3c
90012136:	ab09      	add	r3, sp, #36	; 0x24
90012138:	e892 0003 	ldmia.w	r2, {r0, r1}
9001213c:	e883 0003 	stmia.w	r3, {r0, r1}
90012140:	4619      	mov	r1, r3
90012142:	a805      	add	r0, sp, #20
90012144:	f7fd ffc8 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90012148:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001214c:	2b00      	cmp	r3, #0
9001214e:	dd5b      	ble.n	90012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90012150:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90012154:	2b00      	cmp	r3, #0
90012156:	dd57      	ble.n	90012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90012158:	4f2f      	ldr	r7, [pc, #188]	; (90012218 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
9001215a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001215c:	683b      	ldr	r3, [r7, #0]
9001215e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90012162:	4b2e      	ldr	r3, [pc, #184]	; (9001221c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
90012164:	681b      	ldr	r3, [r3, #0]
90012166:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
9001216a:	2e00      	cmp	r6, #0
9001216c:	d04c      	beq.n	90012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
9001216e:	6823      	ldr	r3, [r4, #0]
90012170:	4620      	mov	r0, r4
90012172:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
90012176:	6edb      	ldr	r3, [r3, #108]	; 0x6c
90012178:	4798      	blx	r3
9001217a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
9001217c:	683b      	ldr	r3, [r7, #0]
9001217e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
90012182:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90012186:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
9001218a:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
9001218e:	785b      	ldrb	r3, [r3, #1]
90012190:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
90012194:	f3c3 0381 	ubfx	r3, r3, #2, #2
90012198:	6b21      	ldr	r1, [r4, #48]	; 0x30
9001219a:	9609      	str	r6, [sp, #36]	; 0x24
9001219c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
900121a0:	4b1f      	ldr	r3, [pc, #124]	; (90012220 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900121a2:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
900121a6:	681b      	ldr	r3, [r3, #0]
900121a8:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
900121ac:	910b      	str	r1, [sp, #44]	; 0x2c
900121ae:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
900121b2:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
900121b6:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
900121ba:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
900121be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900121c2:	b10a      	cbz	r2, 900121c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
900121c4:	6cde      	ldr	r6, [r3, #76]	; 0x4c
900121c6:	b906      	cbnz	r6, 900121ca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
900121c8:	689e      	ldr	r6, [r3, #8]
900121ca:	af07      	add	r7, sp, #28
900121cc:	4621      	mov	r1, r4
900121ce:	4638      	mov	r0, r7
900121d0:	f003 ffb6 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900121d4:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900121d6:	6828      	ldr	r0, [r5, #0]
900121d8:	f7f2 fa9c 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
900121dc:	6823      	ldr	r3, [r4, #0]
900121de:	4605      	mov	r5, r0
900121e0:	4620      	mov	r0, r4
900121e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900121e4:	4798      	blx	r3
900121e6:	6823      	ldr	r3, [r4, #0]
900121e8:	4680      	mov	r8, r0
900121ea:	4620      	mov	r0, r4
900121ec:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900121f0:	4798      	blx	r3
900121f2:	ab09      	add	r3, sp, #36	; 0x24
900121f4:	9501      	str	r5, [sp, #4]
900121f6:	9300      	str	r3, [sp, #0]
900121f8:	ab05      	add	r3, sp, #20
900121fa:	e9cd 8002 	strd	r8, r0, [sp, #8]
900121fe:	4630      	mov	r0, r6
90012200:	e897 0006 	ldmia.w	r7, {r1, r2}
90012204:	f7f2 fa36 	bl	90004674 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90012208:	b00e      	add	sp, #56	; 0x38
9001220a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001220e:	bf00      	nop
90012210:	240235d8 	.word	0x240235d8
90012214:	240235e0 	.word	0x240235e0
90012218:	240235d4 	.word	0x240235d4
9001221c:	240235dc 	.word	0x240235dc
90012220:	2402357c 	.word	0x2402357c

90012224 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
90012224:	b570      	push	{r4, r5, r6, lr}
90012226:	6803      	ldr	r3, [r0, #0]
90012228:	4604      	mov	r4, r0
9001222a:	4615      	mov	r5, r2
9001222c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001222e:	4798      	blx	r3
90012230:	6823      	ldr	r3, [r4, #0]
90012232:	4629      	mov	r1, r5
90012234:	4620      	mov	r0, r4
90012236:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012238:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001223c:	4718      	bx	r3
	...

90012240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90012240:	b538      	push	{r3, r4, r5, lr}
90012242:	4b0e      	ldr	r3, [pc, #56]	; (9001227c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
90012244:	4604      	mov	r4, r0
90012246:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
90012248:	881b      	ldrh	r3, [r3, #0]
9001224a:	429a      	cmp	r2, r3
9001224c:	d214      	bcs.n	90012278 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
9001224e:	6803      	ldr	r3, [r0, #0]
90012250:	6f5b      	ldr	r3, [r3, #116]	; 0x74
90012252:	4798      	blx	r3
90012254:	6823      	ldr	r3, [r4, #0]
90012256:	4605      	mov	r5, r0
90012258:	4620      	mov	r0, r4
9001225a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
9001225c:	4798      	blx	r3
9001225e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
90012262:	b22d      	sxth	r5, r5
90012264:	4601      	mov	r1, r0
90012266:	f013 0ffd 	tst.w	r3, #253	; 0xfd
9001226a:	bf06      	itte	eq
9001226c:	4602      	moveq	r2, r0
9001226e:	4629      	moveq	r1, r5
90012270:	462a      	movne	r2, r5
90012272:	4620      	mov	r0, r4
90012274:	f7ff ffd6 	bl	90012224 <_ZN8touchgfx8Drawable14setWidthHeightEss>
90012278:	bd38      	pop	{r3, r4, r5, pc}
9001227a:	bf00      	nop
9001227c:	240235d8 	.word	0x240235d8

90012280 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
90012280:	b530      	push	{r4, r5, lr}
90012282:	888b      	ldrh	r3, [r1, #4]
90012284:	b085      	sub	sp, #20
90012286:	4604      	mov	r4, r0
90012288:	8583      	strh	r3, [r0, #44]	; 0x2c
9001228a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
9001228e:	b923      	cbnz	r3, 9001229a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012290:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90012294:	b90b      	cbnz	r3, 9001229a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
90012296:	f7ff ffd3 	bl	90012240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
9001229a:	6823      	ldr	r3, [r4, #0]
9001229c:	466d      	mov	r5, sp
9001229e:	4621      	mov	r1, r4
900122a0:	343c      	adds	r4, #60	; 0x3c
900122a2:	4628      	mov	r0, r5
900122a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
900122a8:	4798      	blx	r3
900122aa:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900122ae:	e884 0007 	stmia.w	r4, {r0, r1, r2}
900122b2:	b005      	add	sp, #20
900122b4:	bd30      	pop	{r4, r5, pc}

900122b6 <_ZNK8touchgfx3Box12getSolidRectEv>:
900122b6:	2300      	movs	r3, #0
900122b8:	8083      	strh	r3, [r0, #4]
900122ba:	80c3      	strh	r3, [r0, #6]
900122bc:	8003      	strh	r3, [r0, #0]
900122be:	8043      	strh	r3, [r0, #2]
900122c0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
900122c4:	2bff      	cmp	r3, #255	; 0xff
900122c6:	bf01      	itttt	eq
900122c8:	890b      	ldrheq	r3, [r1, #8]
900122ca:	8083      	strheq	r3, [r0, #4]
900122cc:	894b      	ldrheq	r3, [r1, #10]
900122ce:	80c3      	strheq	r3, [r0, #6]
900122d0:	4770      	bx	lr
	...

900122d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
900122d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
900122d6:	4604      	mov	r4, r0
900122d8:	466b      	mov	r3, sp
900122da:	6808      	ldr	r0, [r1, #0]
900122dc:	6849      	ldr	r1, [r1, #4]
900122de:	c303      	stmia	r3!, {r0, r1}
900122e0:	6823      	ldr	r3, [r4, #0]
900122e2:	4669      	mov	r1, sp
900122e4:	4620      	mov	r0, r4
900122e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900122e8:	4798      	blx	r3
900122ea:	4b08      	ldr	r3, [pc, #32]	; (9001230c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
900122ec:	681b      	ldr	r3, [r3, #0]
900122ee:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900122f2:	b10a      	cbz	r2, 900122f8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
900122f4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900122f6:	b900      	cbnz	r0, 900122fa <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
900122f8:	6898      	ldr	r0, [r3, #8]
900122fa:	6803      	ldr	r3, [r0, #0]
900122fc:	4669      	mov	r1, sp
900122fe:	6aa2      	ldr	r2, [r4, #40]	; 0x28
90012300:	6a1d      	ldr	r5, [r3, #32]
90012302:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012306:	47a8      	blx	r5
90012308:	b003      	add	sp, #12
9001230a:	bd30      	pop	{r4, r5, pc}
9001230c:	2402357c 	.word	0x2402357c

90012310 <_ZN8touchgfx3BoxD1Ev>:
90012310:	4770      	bx	lr

90012312 <_ZN8touchgfx3BoxD0Ev>:
90012312:	b510      	push	{r4, lr}
90012314:	4604      	mov	r4, r0
90012316:	212c      	movs	r1, #44	; 0x2c
90012318:	f013 ff4b 	bl	900261b2 <_ZdlPvj>
9001231c:	4620      	mov	r0, r4
9001231e:	bd10      	pop	{r4, pc}

90012320 <_ZNK8touchgfx3Box17invalidateContentEv>:
90012320:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
90012324:	b12a      	cbz	r2, 90012332 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90012326:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
9001232a:	b112      	cbz	r2, 90012332 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001232c:	6803      	ldr	r3, [r0, #0]
9001232e:	695b      	ldr	r3, [r3, #20]
90012330:	4718      	bx	r3
90012332:	4770      	bx	lr

90012334 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
90012334:	4b30      	ldr	r3, [pc, #192]	; (900123f8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
90012336:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001233a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
9001233c:	b08d      	sub	sp, #52	; 0x34
9001233e:	881b      	ldrh	r3, [r3, #0]
90012340:	4604      	mov	r4, r0
90012342:	460f      	mov	r7, r1
90012344:	4293      	cmp	r3, r2
90012346:	d954      	bls.n	900123f2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012348:	4b2c      	ldr	r3, [pc, #176]	; (900123fc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
9001234a:	6819      	ldr	r1, [r3, #0]
9001234c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90012350:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
90012354:	4a2a      	ldr	r2, [pc, #168]	; (90012400 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
90012356:	6812      	ldr	r2, [r2, #0]
90012358:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
9001235c:	2900      	cmp	r1, #0
9001235e:	d048      	beq.n	900123f2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90012360:	785a      	ldrb	r2, [r3, #1]
90012362:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
90012366:	f3c2 0801 	ubfx	r8, r2, #0, #2
9001236a:	f3c2 0281 	ubfx	r2, r2, #2, #2
9001236e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
90012372:	4b24      	ldr	r3, [pc, #144]	; (90012404 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
90012374:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
90012378:	681a      	ldr	r2, [r3, #0]
9001237a:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
9001237e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
90012382:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
90012386:	6b26      	ldr	r6, [r4, #48]	; 0x30
90012388:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
9001238c:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
90012390:	9107      	str	r1, [sp, #28]
90012392:	f88d 8020 	strb.w	r8, [sp, #32]
90012396:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
9001239a:	9609      	str	r6, [sp, #36]	; 0x24
9001239c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
900123a0:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
900123a4:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
900123a8:	b10b      	cbz	r3, 900123ae <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
900123aa:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
900123ac:	b905      	cbnz	r5, 900123b0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
900123ae:	6895      	ldr	r5, [r2, #8]
900123b0:	ae05      	add	r6, sp, #20
900123b2:	4621      	mov	r1, r4
900123b4:	4630      	mov	r0, r6
900123b6:	f003 fec3 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900123ba:	4b13      	ldr	r3, [pc, #76]	; (90012408 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900123bc:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
900123be:	6818      	ldr	r0, [r3, #0]
900123c0:	f7f2 f9a8 	bl	90004714 <_ZNK8touchgfx5Texts7getTextEt>
900123c4:	6823      	ldr	r3, [r4, #0]
900123c6:	4680      	mov	r8, r0
900123c8:	4620      	mov	r0, r4
900123ca:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
900123cc:	4798      	blx	r3
900123ce:	6823      	ldr	r3, [r4, #0]
900123d0:	4681      	mov	r9, r0
900123d2:	4620      	mov	r0, r4
900123d4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
900123d8:	4798      	blx	r3
900123da:	ab07      	add	r3, sp, #28
900123dc:	f8cd 8004 	str.w	r8, [sp, #4]
900123e0:	9300      	str	r3, [sp, #0]
900123e2:	463b      	mov	r3, r7
900123e4:	e9cd 9002 	strd	r9, r0, [sp, #8]
900123e8:	4628      	mov	r0, r5
900123ea:	e896 0006 	ldmia.w	r6, {r1, r2}
900123ee:	f7f2 f941 	bl	90004674 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900123f2:	b00d      	add	sp, #52	; 0x34
900123f4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900123f8:	240235d8 	.word	0x240235d8
900123fc:	240235d4 	.word	0x240235d4
90012400:	240235dc 	.word	0x240235dc
90012404:	2402357c 	.word	0x2402357c
90012408:	240235e0 	.word	0x240235e0

9001240c <_ZN8touchgfx13BoxWithBorderD1Ev>:
9001240c:	4770      	bx	lr

9001240e <_ZN8touchgfx13BoxWithBorderD0Ev>:
9001240e:	b510      	push	{r4, lr}
90012410:	4604      	mov	r4, r0
90012412:	2134      	movs	r1, #52	; 0x34
90012414:	f013 fecd 	bl	900261b2 <_ZdlPvj>
90012418:	4620      	mov	r0, r4
9001241a:	bd10      	pop	{r4, pc}

9001241c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
9001241c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012420:	8e03      	ldrh	r3, [r0, #48]	; 0x30
90012422:	4604      	mov	r4, r0
90012424:	460e      	mov	r6, r1
90012426:	b08e      	sub	sp, #56	; 0x38
90012428:	b218      	sxth	r0, r3
9001242a:	8921      	ldrh	r1, [r4, #8]
9001242c:	005b      	lsls	r3, r3, #1
9001242e:	8962      	ldrh	r2, [r4, #10]
90012430:	f8ad 0000 	strh.w	r0, [sp]
90012434:	b29b      	uxth	r3, r3
90012436:	f8ad 0002 	strh.w	r0, [sp, #2]
9001243a:	1ac9      	subs	r1, r1, r3
9001243c:	1ad3      	subs	r3, r2, r3
9001243e:	b209      	sxth	r1, r1
90012440:	b21b      	sxth	r3, r3
90012442:	2900      	cmp	r1, #0
90012444:	f8ad 1004 	strh.w	r1, [sp, #4]
90012448:	f8ad 3006 	strh.w	r3, [sp, #6]
9001244c:	dd5e      	ble.n	9001250c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
9001244e:	2b00      	cmp	r3, #0
90012450:	dd5c      	ble.n	9001250c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
90012452:	6830      	ldr	r0, [r6, #0]
90012454:	ab02      	add	r3, sp, #8
90012456:	6871      	ldr	r1, [r6, #4]
90012458:	c303      	stmia	r3!, {r0, r1}
9001245a:	4669      	mov	r1, sp
9001245c:	a802      	add	r0, sp, #8
9001245e:	f7fd fe3b 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90012462:	4620      	mov	r0, r4
90012464:	a902      	add	r1, sp, #8
90012466:	f7ff ff35 	bl	900122d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
9001246a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
9001246c:	2800      	cmp	r0, #0
9001246e:	d05f      	beq.n	90012530 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
90012470:	8963      	ldrh	r3, [r4, #10]
90012472:	b202      	sxth	r2, r0
90012474:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90012478:	2500      	movs	r5, #0
9001247a:	1a1f      	subs	r7, r3, r0
9001247c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
90012480:	f8ad 101c 	strh.w	r1, [sp, #28]
90012484:	b21b      	sxth	r3, r3
90012486:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
9001248a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
9001248e:	af04      	add	r7, sp, #16
90012490:	1a09      	subs	r1, r1, r0
90012492:	9506      	str	r5, [sp, #24]
90012494:	f8ad 201e 	strh.w	r2, [sp, #30]
90012498:	f8ad 5020 	strh.w	r5, [sp, #32]
9001249c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
900124a0:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
900124a4:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
900124a8:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900124ac:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900124b0:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
900124b4:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
900124b8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
900124bc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
900124c0:	ab06      	add	r3, sp, #24
900124c2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
900124c6:	e893 0003 	ldmia.w	r3, {r0, r1}
900124ca:	e887 0003 	stmia.w	r7, {r0, r1}
900124ce:	4631      	mov	r1, r6
900124d0:	4638      	mov	r0, r7
900124d2:	f7fd fe01 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900124d6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900124da:	2b00      	cmp	r3, #0
900124dc:	dd12      	ble.n	90012504 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900124de:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900124e2:	2b00      	cmp	r3, #0
900124e4:	dd0e      	ble.n	90012504 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
900124e6:	6823      	ldr	r3, [r4, #0]
900124e8:	4639      	mov	r1, r7
900124ea:	4620      	mov	r0, r4
900124ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900124ee:	4798      	blx	r3
900124f0:	f7fe f8d6 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
900124f4:	6803      	ldr	r3, [r0, #0]
900124f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
900124f8:	4639      	mov	r1, r7
900124fa:	f8d3 8020 	ldr.w	r8, [r3, #32]
900124fe:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
90012502:	47c0      	blx	r8
90012504:	3501      	adds	r5, #1
90012506:	2d04      	cmp	r5, #4
90012508:	d1da      	bne.n	900124c0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
9001250a:	e011      	b.n	90012530 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
9001250c:	6830      	ldr	r0, [r6, #0]
9001250e:	ab06      	add	r3, sp, #24
90012510:	6871      	ldr	r1, [r6, #4]
90012512:	c303      	stmia	r3!, {r0, r1}
90012514:	6823      	ldr	r3, [r4, #0]
90012516:	a906      	add	r1, sp, #24
90012518:	4620      	mov	r0, r4
9001251a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001251c:	4798      	blx	r3
9001251e:	f7fe f8bf 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90012522:	6803      	ldr	r3, [r0, #0]
90012524:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
90012526:	a906      	add	r1, sp, #24
90012528:	6a1d      	ldr	r5, [r3, #32]
9001252a:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
9001252e:	47a8      	blx	r5
90012530:	b00e      	add	sp, #56	; 0x38
90012532:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90012536 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
90012536:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
9001253a:	4770      	bx	lr

9001253c <_ZNK8touchgfx6Button17invalidateContentEv>:
9001253c:	b508      	push	{r3, lr}
9001253e:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
90012542:	b10b      	cbz	r3, 90012548 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
90012544:	f7ef ff50 	bl	900023e8 <_ZNK8touchgfx8Drawable17invalidateContentEv>
90012548:	bd08      	pop	{r3, pc}

9001254a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
9001254a:	4770      	bx	lr

9001254c <_ZN8touchgfx14ButtonWithIconD1Ev>:
9001254c:	4770      	bx	lr

9001254e <_ZN8touchgfx14ButtonWithIconD0Ev>:
9001254e:	b510      	push	{r4, lr}
90012550:	4604      	mov	r4, r0
90012552:	213c      	movs	r1, #60	; 0x3c
90012554:	f013 fe2d 	bl	900261b2 <_ZdlPvj>
90012558:	4620      	mov	r0, r4
9001255a:	bd10      	pop	{r4, pc}

9001255c <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
9001255c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012560:	461c      	mov	r4, r3
90012562:	4606      	mov	r6, r0
90012564:	9f06      	ldr	r7, [sp, #24]
90012566:	f013 fd74 	bl	90026052 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
9001256a:	8823      	ldrh	r3, [r4, #0]
9001256c:	f04f 0802 	mov.w	r8, #2
90012570:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
90012574:	4638      	mov	r0, r7
90012576:	86b3      	strh	r3, [r6, #52]	; 0x34
90012578:	883b      	ldrh	r3, [r7, #0]
9001257a:	fb95 f5f8 	sdiv	r5, r5, r8
9001257e:	86f3      	strh	r3, [r6, #54]	; 0x36
90012580:	b2ad      	uxth	r5, r5
90012582:	f005 fe09 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012586:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
9001258a:	fb90 f0f8 	sdiv	r0, r0, r8
9001258e:	1a2d      	subs	r5, r5, r0
90012590:	4638      	mov	r0, r7
90012592:	fb94 f4f8 	sdiv	r4, r4, r8
90012596:	8735      	strh	r5, [r6, #56]	; 0x38
90012598:	b2a4      	uxth	r4, r4
9001259a:	f005 fe31 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001259e:	fb90 f0f8 	sdiv	r0, r0, r8
900125a2:	1a24      	subs	r4, r4, r0
900125a4:	8774      	strh	r4, [r6, #58]	; 0x3a
900125a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900125aa <_ZN8touchgfx14AbstractButton13executeActionEv>:
900125aa:	b510      	push	{r4, lr}
900125ac:	4604      	mov	r4, r0
900125ae:	6a80      	ldr	r0, [r0, #40]	; 0x28
900125b0:	b150      	cbz	r0, 900125c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900125b2:	6803      	ldr	r3, [r0, #0]
900125b4:	68db      	ldr	r3, [r3, #12]
900125b6:	4798      	blx	r3
900125b8:	b130      	cbz	r0, 900125c8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900125ba:	6aa0      	ldr	r0, [r4, #40]	; 0x28
900125bc:	4621      	mov	r1, r4
900125be:	6803      	ldr	r3, [r0, #0]
900125c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900125c4:	689b      	ldr	r3, [r3, #8]
900125c6:	4718      	bx	r3
900125c8:	bd10      	pop	{r4, pc}
	...

900125cc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
900125cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900125d0:	4604      	mov	r4, r0
900125d2:	b08c      	sub	sp, #48	; 0x30
900125d4:	460d      	mov	r5, r1
900125d6:	f013 fd6f 	bl	900260b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900125da:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
900125de:	2b00      	cmp	r3, #0
900125e0:	d05d      	beq.n	9001269e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
900125e2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900125e4:	a805      	add	r0, sp, #20
900125e6:	f8ad 3014 	strh.w	r3, [sp, #20]
900125ea:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
900125ee:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
900125f2:	f005 fdd1 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
900125f6:	4606      	mov	r6, r0
900125f8:	a805      	add	r0, sp, #20
900125fa:	f005 fe01 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
900125fe:	6869      	ldr	r1, [r5, #4]
90012600:	f8ad 001e 	strh.w	r0, [sp, #30]
90012604:	ab08      	add	r3, sp, #32
90012606:	6828      	ldr	r0, [r5, #0]
90012608:	ad08      	add	r5, sp, #32
9001260a:	f8ad 8018 	strh.w	r8, [sp, #24]
9001260e:	f8ad 701a 	strh.w	r7, [sp, #26]
90012612:	f8ad 601c 	strh.w	r6, [sp, #28]
90012616:	c303      	stmia	r3!, {r0, r1}
90012618:	a906      	add	r1, sp, #24
9001261a:	4628      	mov	r0, r5
9001261c:	f7fd fd5c 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90012620:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90012624:	f64f 73ff 	movw	r3, #65535	; 0xffff
90012628:	429a      	cmp	r2, r3
9001262a:	d035      	beq.n	90012698 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001262c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
90012630:	2b00      	cmp	r3, #0
90012632:	dd31      	ble.n	90012698 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
90012634:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
90012638:	2b00      	cmp	r3, #0
9001263a:	dd2d      	ble.n	90012698 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
9001263c:	2300      	movs	r3, #0
9001263e:	a90a      	add	r1, sp, #40	; 0x28
90012640:	4620      	mov	r0, r4
90012642:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
90012646:	6823      	ldr	r3, [r4, #0]
90012648:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001264a:	4798      	blx	r3
9001264c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90012650:	8f22      	ldrh	r2, [r4, #56]	; 0x38
90012652:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90012656:	1a9b      	subs	r3, r3, r2
90012658:	f8ad 3020 	strh.w	r3, [sp, #32]
9001265c:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
9001265e:	1ac9      	subs	r1, r1, r3
90012660:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
90012664:	490f      	ldr	r1, [pc, #60]	; (900126a4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
90012666:	6809      	ldr	r1, [r1, #0]
90012668:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
9001266c:	b108      	cbz	r0, 90012672 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
9001266e:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
90012670:	b900      	cbnz	r0, 90012674 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
90012672:	6888      	ldr	r0, [r1, #8]
90012674:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
90012678:	2601      	movs	r6, #1
9001267a:	440b      	add	r3, r1
9001267c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
90012680:	440a      	add	r2, r1
90012682:	6801      	ldr	r1, [r0, #0]
90012684:	9602      	str	r6, [sp, #8]
90012686:	b21b      	sxth	r3, r3
90012688:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
9001268c:	b212      	sxth	r2, r2
9001268e:	e9cd 5400 	strd	r5, r4, [sp]
90012692:	688c      	ldr	r4, [r1, #8]
90012694:	a905      	add	r1, sp, #20
90012696:	47a0      	blx	r4
90012698:	b00c      	add	sp, #48	; 0x30
9001269a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001269e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
900126a0:	e7a0      	b.n	900125e4 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
900126a2:	bf00      	nop
900126a4:	2402357c 	.word	0x2402357c

900126a8 <_ZN8touchgfx14ButtonWithIconC1Ev>:
900126a8:	2101      	movs	r1, #1
900126aa:	2200      	movs	r2, #0
900126ac:	b510      	push	{r4, lr}
900126ae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
900126b2:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
900126b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
900126ba:	4c0d      	ldr	r4, [pc, #52]	; (900126f0 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
900126bc:	8082      	strh	r2, [r0, #4]
900126be:	80c2      	strh	r2, [r0, #6]
900126c0:	8102      	strh	r2, [r0, #8]
900126c2:	8142      	strh	r2, [r0, #10]
900126c4:	8182      	strh	r2, [r0, #12]
900126c6:	81c2      	strh	r2, [r0, #14]
900126c8:	8202      	strh	r2, [r0, #16]
900126ca:	8242      	strh	r2, [r0, #18]
900126cc:	61c2      	str	r2, [r0, #28]
900126ce:	8402      	strh	r2, [r0, #32]
900126d0:	8442      	strh	r2, [r0, #34]	; 0x22
900126d2:	6282      	str	r2, [r0, #40]	; 0x28
900126d4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
900126d8:	85c1      	strh	r1, [r0, #46]	; 0x2e
900126da:	8601      	strh	r1, [r0, #48]	; 0x30
900126dc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
900126e0:	6004      	str	r4, [r0, #0]
900126e2:	8681      	strh	r1, [r0, #52]	; 0x34
900126e4:	86c1      	strh	r1, [r0, #54]	; 0x36
900126e6:	8702      	strh	r2, [r0, #56]	; 0x38
900126e8:	8742      	strh	r2, [r0, #58]	; 0x3a
900126ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
900126ee:	bd10      	pop	{r4, pc}
900126f0:	9002a69c 	.word	0x9002a69c

900126f4 <_ZN8touchgfx5ImageD1Ev>:
900126f4:	4770      	bx	lr

900126f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900126f6:	b570      	push	{r4, r5, r6, lr}
900126f8:	880b      	ldrh	r3, [r1, #0]
900126fa:	460d      	mov	r5, r1
900126fc:	4604      	mov	r4, r0
900126fe:	84c3      	strh	r3, [r0, #38]	; 0x26
90012700:	4608      	mov	r0, r1
90012702:	f005 fd49 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90012706:	4606      	mov	r6, r0
90012708:	4628      	mov	r0, r5
9001270a:	f005 fd79 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001270e:	6823      	ldr	r3, [r4, #0]
90012710:	4605      	mov	r5, r0
90012712:	4631      	mov	r1, r6
90012714:	4620      	mov	r0, r4
90012716:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90012718:	4798      	blx	r3
9001271a:	6823      	ldr	r3, [r4, #0]
9001271c:	4629      	mov	r1, r5
9001271e:	4620      	mov	r0, r4
90012720:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90012722:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90012726:	4718      	bx	r3

90012728 <_ZN8touchgfx5ImageD0Ev>:
90012728:	b510      	push	{r4, lr}
9001272a:	4604      	mov	r4, r0
9001272c:	212c      	movs	r1, #44	; 0x2c
9001272e:	f013 fd40 	bl	900261b2 <_ZdlPvj>
90012732:	4620      	mov	r0, r4
90012734:	bd10      	pop	{r4, pc}

90012736 <_ZNK8touchgfx5Image12getSolidRectEv>:
90012736:	b510      	push	{r4, lr}
90012738:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
9001273c:	4604      	mov	r4, r0
9001273e:	2bff      	cmp	r3, #255	; 0xff
90012740:	d006      	beq.n	90012750 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90012742:	2300      	movs	r3, #0
90012744:	8003      	strh	r3, [r0, #0]
90012746:	8043      	strh	r3, [r0, #2]
90012748:	8083      	strh	r3, [r0, #4]
9001274a:	80c3      	strh	r3, [r0, #6]
9001274c:	4620      	mov	r0, r4
9001274e:	bd10      	pop	{r4, pc}
90012750:	3126      	adds	r1, #38	; 0x26
90012752:	f005 fd89 	bl	90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90012756:	e7f9      	b.n	9001274c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90012758 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90012758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001275c:	4604      	mov	r4, r0
9001275e:	b088      	sub	sp, #32
90012760:	2500      	movs	r5, #0
90012762:	460f      	mov	r7, r1
90012764:	f854 3b26 	ldr.w	r3, [r4], #38
90012768:	a904      	add	r1, sp, #16
9001276a:	4606      	mov	r6, r0
9001276c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001276e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90012772:	4798      	blx	r3
90012774:	4620      	mov	r0, r4
90012776:	f005 fd0f 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001277a:	4680      	mov	r8, r0
9001277c:	4620      	mov	r0, r4
9001277e:	f005 fd3f 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
90012782:	9506      	str	r5, [sp, #24]
90012784:	ad06      	add	r5, sp, #24
90012786:	f8ad 001e 	strh.w	r0, [sp, #30]
9001278a:	4639      	mov	r1, r7
9001278c:	f8ad 801c 	strh.w	r8, [sp, #28]
90012790:	4628      	mov	r0, r5
90012792:	f7fd fca1 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90012796:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001279a:	2b00      	cmp	r3, #0
9001279c:	dd19      	ble.n	900127d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001279e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900127a2:	2b00      	cmp	r3, #0
900127a4:	dd15      	ble.n	900127d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900127a6:	4b0c      	ldr	r3, [pc, #48]	; (900127d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900127a8:	681b      	ldr	r3, [r3, #0]
900127aa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
900127ae:	b10a      	cbz	r2, 900127b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900127b0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
900127b2:	b900      	cbnz	r0, 900127b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900127b4:	6898      	ldr	r0, [r3, #8]
900127b6:	2701      	movs	r7, #1
900127b8:	6801      	ldr	r1, [r0, #0]
900127ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900127be:	9702      	str	r7, [sp, #8]
900127c0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
900127c4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900127c8:	e9cd 5600 	strd	r5, r6, [sp]
900127cc:	688d      	ldr	r5, [r1, #8]
900127ce:	4621      	mov	r1, r4
900127d0:	47a8      	blx	r5
900127d2:	b008      	add	sp, #32
900127d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900127d8:	2402357c 	.word	0x2402357c

900127dc <_ZN8touchgfx7OutlineD1Ev>:
900127dc:	4770      	bx	lr

900127de <_ZN8touchgfx7OutlineD0Ev>:
900127de:	b510      	push	{r4, lr}
900127e0:	4604      	mov	r4, r0
900127e2:	2130      	movs	r1, #48	; 0x30
900127e4:	f013 fce5 	bl	900261b2 <_ZdlPvj>
900127e8:	4620      	mov	r0, r4
900127ea:	bd10      	pop	{r4, pc}

900127ec <_ZN8touchgfx7Outline5resetEv>:
900127ec:	b510      	push	{r4, lr}
900127ee:	4604      	mov	r4, r0
900127f0:	f000 fe86 	bl	90013500 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
900127f4:	60e0      	str	r0, [r4, #12]
900127f6:	f000 fe89 	bl	9001350c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
900127fa:	68e3      	ldr	r3, [r4, #12]
900127fc:	08c0      	lsrs	r0, r0, #3
900127fe:	2200      	movs	r2, #0
90012800:	f647 71ff 	movw	r1, #32767	; 0x7fff
90012804:	6123      	str	r3, [r4, #16]
90012806:	3801      	subs	r0, #1
90012808:	60a2      	str	r2, [r4, #8]
9001280a:	6060      	str	r0, [r4, #4]
9001280c:	8019      	strh	r1, [r3, #0]
9001280e:	8059      	strh	r1, [r3, #2]
90012810:	809a      	strh	r2, [r3, #4]
90012812:	80da      	strh	r2, [r3, #6]
90012814:	6a63      	ldr	r3, [r4, #36]	; 0x24
90012816:	f023 0301 	bic.w	r3, r3, #1
9001281a:	f043 0302 	orr.w	r3, r3, #2
9001281e:	6263      	str	r3, [r4, #36]	; 0x24
90012820:	bd10      	pop	{r4, pc}
	...

90012824 <_ZN8touchgfx7OutlineC1Ev>:
90012824:	4b0a      	ldr	r3, [pc, #40]	; (90012850 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90012826:	b510      	push	{r4, lr}
90012828:	6003      	str	r3, [r0, #0]
9001282a:	2300      	movs	r3, #0
9001282c:	4604      	mov	r4, r0
9001282e:	6243      	str	r3, [r0, #36]	; 0x24
90012830:	e9c0 3301 	strd	r3, r3, [r0, #4]
90012834:	e9c0 3303 	strd	r3, r3, [r0, #12]
90012838:	e9c0 3305 	strd	r3, r3, [r0, #20]
9001283c:	e9c0 3307 	strd	r3, r3, [r0, #28]
90012840:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
90012844:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
90012848:	f7ff ffd0 	bl	900127ec <_ZN8touchgfx7Outline5resetEv>
9001284c:	4620      	mov	r0, r4
9001284e:	bd10      	pop	{r4, pc}
90012850:	9002a780 	.word	0x9002a780

90012854 <_ZN8touchgfx7Outline10renderLineEiiii>:
90012854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012858:	b093      	sub	sp, #76	; 0x4c
9001285a:	1156      	asrs	r6, r2, #5
9001285c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
9001285e:	9305      	str	r3, [sp, #20]
90012860:	1153      	asrs	r3, r2, #5
90012862:	f004 051f 	and.w	r5, r4, #31
90012866:	9303      	str	r3, [sp, #12]
90012868:	1163      	asrs	r3, r4, #5
9001286a:	9504      	str	r5, [sp, #16]
9001286c:	1165      	asrs	r5, r4, #5
9001286e:	9306      	str	r3, [sp, #24]
90012870:	f002 031f 	and.w	r3, r2, #31
90012874:	42ae      	cmp	r6, r5
90012876:	f040 80f4 	bne.w	90012a62 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
9001287a:	9c04      	ldr	r4, [sp, #16]
9001287c:	9a05      	ldr	r2, [sp, #20]
9001287e:	42a3      	cmp	r3, r4
90012880:	ea4f 1e62 	mov.w	lr, r2, asr #5
90012884:	6902      	ldr	r2, [r0, #16]
90012886:	d125      	bne.n	900128d4 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90012888:	f9b2 3000 	ldrsh.w	r3, [r2]
9001288c:	459e      	cmp	lr, r3
9001288e:	d103      	bne.n	90012898 <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90012890:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90012894:	429e      	cmp	r6, r3
90012896:	d035      	beq.n	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012898:	88d1      	ldrh	r1, [r2, #6]
9001289a:	8893      	ldrh	r3, [r2, #4]
9001289c:	430b      	orrs	r3, r1
9001289e:	d010      	beq.n	900128c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900128a0:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
900128a4:	2b00      	cmp	r3, #0
900128a6:	db0c      	blt.n	900128c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900128a8:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
900128aa:	428b      	cmp	r3, r1
900128ac:	da09      	bge.n	900128c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
900128ae:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
900128b2:	428b      	cmp	r3, r1
900128b4:	f103 0301 	add.w	r3, r3, #1
900128b8:	bf38      	it	cc
900128ba:	3208      	addcc	r2, #8
900128bc:	6083      	str	r3, [r0, #8]
900128be:	bf38      	it	cc
900128c0:	6102      	strcc	r2, [r0, #16]
900128c2:	6903      	ldr	r3, [r0, #16]
900128c4:	9a03      	ldr	r2, [sp, #12]
900128c6:	f8a3 e000 	strh.w	lr, [r3]
900128ca:	805a      	strh	r2, [r3, #2]
900128cc:	2200      	movs	r2, #0
900128ce:	809a      	strh	r2, [r3, #4]
900128d0:	80da      	strh	r2, [r3, #6]
900128d2:	e017      	b.n	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
900128d4:	9c05      	ldr	r4, [sp, #20]
900128d6:	114e      	asrs	r6, r1, #5
900128d8:	f001 0c1f 	and.w	ip, r1, #31
900128dc:	f8b2 8004 	ldrh.w	r8, [r2, #4]
900128e0:	f004 041f 	and.w	r4, r4, #31
900128e4:	4576      	cmp	r6, lr
900128e6:	f8b2 a006 	ldrh.w	sl, [r2, #6]
900128ea:	9402      	str	r4, [sp, #8]
900128ec:	9c04      	ldr	r4, [sp, #16]
900128ee:	eba4 0403 	sub.w	r4, r4, r3
900128f2:	d10a      	bne.n	9001290a <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
900128f4:	9b02      	ldr	r3, [sp, #8]
900128f6:	44a0      	add	r8, r4
900128f8:	449c      	add	ip, r3
900128fa:	f8a2 8004 	strh.w	r8, [r2, #4]
900128fe:	fb04 a40c 	mla	r4, r4, ip, sl
90012902:	80d4      	strh	r4, [r2, #6]
90012904:	b013      	add	sp, #76	; 0x4c
90012906:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001290a:	9d05      	ldr	r5, [sp, #20]
9001290c:	1a69      	subs	r1, r5, r1
9001290e:	bf51      	iteee	pl
90012910:	f1cc 0520 	rsbpl	r5, ip, #32
90012914:	fb04 f40c 	mulmi.w	r4, r4, ip
90012918:	4249      	negmi	r1, r1
9001291a:	2500      	movmi	r5, #0
9001291c:	bf5d      	ittte	pl
9001291e:	436c      	mulpl	r4, r5
90012920:	2520      	movpl	r5, #32
90012922:	f04f 0901 	movpl.w	r9, #1
90012926:	f04f 39ff 	movmi.w	r9, #4294967295
9001292a:	9501      	str	r5, [sp, #4]
9001292c:	9f01      	ldr	r7, [sp, #4]
9001292e:	444e      	add	r6, r9
90012930:	fb94 f5f1 	sdiv	r5, r4, r1
90012934:	fb01 4415 	mls	r4, r1, r5, r4
90012938:	44bc      	add	ip, r7
9001293a:	2c00      	cmp	r4, #0
9001293c:	bfbc      	itt	lt
9001293e:	f105 35ff 	addlt.w	r5, r5, #4294967295
90012942:	1864      	addlt	r4, r4, r1
90012944:	44a8      	add	r8, r5
90012946:	fb05 ac0c 	mla	ip, r5, ip, sl
9001294a:	f8a2 8004 	strh.w	r8, [r2, #4]
9001294e:	f8a2 c006 	strh.w	ip, [r2, #6]
90012952:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012956:	f8bc 8006 	ldrh.w	r8, [ip, #6]
9001295a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
9001295e:	ea58 0202 	orrs.w	r2, r8, r2
90012962:	d011      	beq.n	90012988 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012964:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90012968:	f1b8 0f00 	cmp.w	r8, #0
9001296c:	db0c      	blt.n	90012988 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
9001296e:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012970:	4590      	cmp	r8, r2
90012972:	da09      	bge.n	90012988 <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90012974:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90012978:	4590      	cmp	r8, r2
9001297a:	bf3c      	itt	cc
9001297c:	f10c 0208 	addcc.w	r2, ip, #8
90012980:	6102      	strcc	r2, [r0, #16]
90012982:	f108 0201 	add.w	r2, r8, #1
90012986:	6082      	str	r2, [r0, #8]
90012988:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001298c:	2700      	movs	r7, #0
9001298e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90012992:	45b6      	cmp	lr, r6
90012994:	f8ac 6000 	strh.w	r6, [ip]
90012998:	442b      	add	r3, r5
9001299a:	f8ac 2002 	strh.w	r2, [ip, #2]
9001299e:	f8ac 7004 	strh.w	r7, [ip, #4]
900129a2:	f8ac 7006 	strh.w	r7, [ip, #6]
900129a6:	d04b      	beq.n	90012a40 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
900129a8:	9f04      	ldr	r7, [sp, #16]
900129aa:	1a64      	subs	r4, r4, r1
900129ac:	f04f 0a00 	mov.w	sl, #0
900129b0:	1aff      	subs	r7, r7, r3
900129b2:	443d      	add	r5, r7
900129b4:	016d      	lsls	r5, r5, #5
900129b6:	fb95 f8f1 	sdiv	r8, r5, r1
900129ba:	fb01 5518 	mls	r5, r1, r8, r5
900129be:	2d00      	cmp	r5, #0
900129c0:	bfbc      	itt	lt
900129c2:	f108 38ff 	addlt.w	r8, r8, #4294967295
900129c6:	186d      	addlt	r5, r5, r1
900129c8:	f108 0701 	add.w	r7, r8, #1
900129cc:	9703      	str	r7, [sp, #12]
900129ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
900129d2:	1964      	adds	r4, r4, r5
900129d4:	444e      	add	r6, r9
900129d6:	bf54      	ite	pl
900129d8:	9f03      	ldrpl	r7, [sp, #12]
900129da:	4647      	movmi	r7, r8
900129dc:	f8bc b004 	ldrh.w	fp, [ip, #4]
900129e0:	bf58      	it	pl
900129e2:	1a64      	subpl	r4, r4, r1
900129e4:	443b      	add	r3, r7
900129e6:	44bb      	add	fp, r7
900129e8:	f8ac b004 	strh.w	fp, [ip, #4]
900129ec:	f8bc b006 	ldrh.w	fp, [ip, #6]
900129f0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
900129f4:	f8ac b006 	strh.w	fp, [ip, #6]
900129f8:	f8d0 c010 	ldr.w	ip, [r0, #16]
900129fc:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012a00:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012a04:	ea5b 0707 	orrs.w	r7, fp, r7
90012a08:	d011      	beq.n	90012a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012a0a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90012a0e:	f1bb 0f00 	cmp.w	fp, #0
90012a12:	db0c      	blt.n	90012a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012a14:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012a16:	45bb      	cmp	fp, r7
90012a18:	da09      	bge.n	90012a2e <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90012a1a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012a1e:	45bb      	cmp	fp, r7
90012a20:	bf3c      	itt	cc
90012a22:	f10c 0708 	addcc.w	r7, ip, #8
90012a26:	6107      	strcc	r7, [r0, #16]
90012a28:	f10b 0701 	add.w	r7, fp, #1
90012a2c:	6087      	str	r7, [r0, #8]
90012a2e:	6907      	ldr	r7, [r0, #16]
90012a30:	45b6      	cmp	lr, r6
90012a32:	803e      	strh	r6, [r7, #0]
90012a34:	807a      	strh	r2, [r7, #2]
90012a36:	f8a7 a004 	strh.w	sl, [r7, #4]
90012a3a:	f8a7 a006 	strh.w	sl, [r7, #6]
90012a3e:	d1c6      	bne.n	900129ce <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90012a40:	9a04      	ldr	r2, [sp, #16]
90012a42:	1ad3      	subs	r3, r2, r3
90012a44:	6902      	ldr	r2, [r0, #16]
90012a46:	8891      	ldrh	r1, [r2, #4]
90012a48:	88d6      	ldrh	r6, [r2, #6]
90012a4a:	4419      	add	r1, r3
90012a4c:	8091      	strh	r1, [r2, #4]
90012a4e:	9902      	ldr	r1, [sp, #8]
90012a50:	f101 0c20 	add.w	ip, r1, #32
90012a54:	9901      	ldr	r1, [sp, #4]
90012a56:	ebac 0c01 	sub.w	ip, ip, r1
90012a5a:	fb03 630c 	mla	r3, r3, ip, r6
90012a5e:	80d3      	strh	r3, [r2, #6]
90012a60:	e750      	b.n	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012a62:	9d05      	ldr	r5, [sp, #20]
90012a64:	1aa2      	subs	r2, r4, r2
90012a66:	eba5 0501 	sub.w	r5, r5, r1
90012a6a:	9202      	str	r2, [sp, #8]
90012a6c:	9508      	str	r5, [sp, #32]
90012a6e:	f140 8128 	bpl.w	90012cc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90012a72:	9a03      	ldr	r2, [sp, #12]
90012a74:	2a00      	cmp	r2, #0
90012a76:	f6ff af45 	blt.w	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012a7a:	9a02      	ldr	r2, [sp, #8]
90012a7c:	f04f 34ff 	mov.w	r4, #4294967295
90012a80:	4252      	negs	r2, r2
90012a82:	940b      	str	r4, [sp, #44]	; 0x2c
90012a84:	2400      	movs	r4, #0
90012a86:	9202      	str	r2, [sp, #8]
90012a88:	9a06      	ldr	r2, [sp, #24]
90012a8a:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90012a8e:	9206      	str	r2, [sp, #24]
90012a90:	462a      	mov	r2, r5
90012a92:	435a      	muls	r2, r3
90012a94:	9401      	str	r4, [sp, #4]
90012a96:	9c02      	ldr	r4, [sp, #8]
90012a98:	9d02      	ldr	r5, [sp, #8]
90012a9a:	fb92 f4f4 	sdiv	r4, r2, r4
90012a9e:	fb05 2214 	mls	r2, r5, r4, r2
90012aa2:	2a00      	cmp	r2, #0
90012aa4:	9207      	str	r2, [sp, #28]
90012aa6:	bfbc      	itt	lt
90012aa8:	1952      	addlt	r2, r2, r5
90012aaa:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012aae:	6905      	ldr	r5, [r0, #16]
90012ab0:	bfb8      	it	lt
90012ab2:	9207      	strlt	r2, [sp, #28]
90012ab4:	eb04 0901 	add.w	r9, r4, r1
90012ab8:	9a01      	ldr	r2, [sp, #4]
90012aba:	ea4f 1669 	mov.w	r6, r9, asr #5
90012abe:	429a      	cmp	r2, r3
90012ac0:	f040 8111 	bne.w	90012ce6 <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90012ac4:	f9b5 3000 	ldrsh.w	r3, [r5]
90012ac8:	429e      	cmp	r6, r3
90012aca:	d104      	bne.n	90012ad6 <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90012acc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90012ad0:	9a03      	ldr	r2, [sp, #12]
90012ad2:	429a      	cmp	r2, r3
90012ad4:	d01b      	beq.n	90012b0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012ad6:	88ea      	ldrh	r2, [r5, #6]
90012ad8:	88ab      	ldrh	r3, [r5, #4]
90012ada:	4313      	orrs	r3, r2
90012adc:	d010      	beq.n	90012b00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012ade:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90012ae2:	2a00      	cmp	r2, #0
90012ae4:	db0c      	blt.n	90012b00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012ae6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012ae8:	429a      	cmp	r2, r3
90012aea:	da09      	bge.n	90012b00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90012aec:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90012af0:	429a      	cmp	r2, r3
90012af2:	f102 0201 	add.w	r2, r2, #1
90012af6:	bf38      	it	cc
90012af8:	3508      	addcc	r5, #8
90012afa:	6082      	str	r2, [r0, #8]
90012afc:	bf38      	it	cc
90012afe:	6105      	strcc	r5, [r0, #16]
90012b00:	6903      	ldr	r3, [r0, #16]
90012b02:	9a03      	ldr	r2, [sp, #12]
90012b04:	801e      	strh	r6, [r3, #0]
90012b06:	805a      	strh	r2, [r3, #2]
90012b08:	2200      	movs	r2, #0
90012b0a:	809a      	strh	r2, [r3, #4]
90012b0c:	80da      	strh	r2, [r3, #6]
90012b0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012b10:	9a03      	ldr	r2, [sp, #12]
90012b12:	6901      	ldr	r1, [r0, #16]
90012b14:	441a      	add	r2, r3
90012b16:	f9b1 3000 	ldrsh.w	r3, [r1]
90012b1a:	42b3      	cmp	r3, r6
90012b1c:	d103      	bne.n	90012b26 <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90012b1e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90012b22:	429a      	cmp	r2, r3
90012b24:	d01a      	beq.n	90012b5c <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90012b26:	88cc      	ldrh	r4, [r1, #6]
90012b28:	888b      	ldrh	r3, [r1, #4]
90012b2a:	4323      	orrs	r3, r4
90012b2c:	d010      	beq.n	90012b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012b2e:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012b32:	2c00      	cmp	r4, #0
90012b34:	db0c      	blt.n	90012b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012b36:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012b38:	429c      	cmp	r4, r3
90012b3a:	da09      	bge.n	90012b50 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90012b3c:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012b40:	429c      	cmp	r4, r3
90012b42:	f104 0401 	add.w	r4, r4, #1
90012b46:	bf38      	it	cc
90012b48:	3108      	addcc	r1, #8
90012b4a:	6084      	str	r4, [r0, #8]
90012b4c:	bf38      	it	cc
90012b4e:	6101      	strcc	r1, [r0, #16]
90012b50:	6903      	ldr	r3, [r0, #16]
90012b52:	2100      	movs	r1, #0
90012b54:	801e      	strh	r6, [r3, #0]
90012b56:	805a      	strh	r2, [r3, #2]
90012b58:	8099      	strh	r1, [r3, #4]
90012b5a:	80d9      	strh	r1, [r3, #6]
90012b5c:	9b06      	ldr	r3, [sp, #24]
90012b5e:	4293      	cmp	r3, r2
90012b60:	f000 8082 	beq.w	90012c68 <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90012b64:	9b08      	ldr	r3, [sp, #32]
90012b66:	9902      	ldr	r1, [sp, #8]
90012b68:	015b      	lsls	r3, r3, #5
90012b6a:	9c02      	ldr	r4, [sp, #8]
90012b6c:	fb93 f1f1 	sdiv	r1, r3, r1
90012b70:	fb04 3311 	mls	r3, r4, r1, r3
90012b74:	9103      	str	r1, [sp, #12]
90012b76:	2b00      	cmp	r3, #0
90012b78:	9308      	str	r3, [sp, #32]
90012b7a:	da04      	bge.n	90012b86 <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90012b7c:	1e4b      	subs	r3, r1, #1
90012b7e:	9303      	str	r3, [sp, #12]
90012b80:	9b08      	ldr	r3, [sp, #32]
90012b82:	4423      	add	r3, r4
90012b84:	9308      	str	r3, [sp, #32]
90012b86:	9b07      	ldr	r3, [sp, #28]
90012b88:	464f      	mov	r7, r9
90012b8a:	9902      	ldr	r1, [sp, #8]
90012b8c:	2600      	movs	r6, #0
90012b8e:	1a5b      	subs	r3, r3, r1
90012b90:	9307      	str	r3, [sp, #28]
90012b92:	9b01      	ldr	r3, [sp, #4]
90012b94:	f1c3 0320 	rsb	r3, r3, #32
90012b98:	930e      	str	r3, [sp, #56]	; 0x38
90012b9a:	990e      	ldr	r1, [sp, #56]	; 0x38
90012b9c:	9b01      	ldr	r3, [sp, #4]
90012b9e:	1a5b      	subs	r3, r3, r1
90012ba0:	930a      	str	r3, [sp, #40]	; 0x28
90012ba2:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90012ba6:	185b      	adds	r3, r3, r1
90012ba8:	bf58      	it	pl
90012baa:	9902      	ldrpl	r1, [sp, #8]
90012bac:	9307      	str	r3, [sp, #28]
90012bae:	bf57      	itett	pl
90012bb0:	1a5b      	subpl	r3, r3, r1
90012bb2:	9903      	ldrmi	r1, [sp, #12]
90012bb4:	9307      	strpl	r3, [sp, #28]
90012bb6:	9b03      	ldrpl	r3, [sp, #12]
90012bb8:	bf58      	it	pl
90012bba:	1c59      	addpl	r1, r3, #1
90012bbc:	2a00      	cmp	r2, #0
90012bbe:	4489      	add	r9, r1
90012bc0:	ea4f 1a69 	mov.w	sl, r9, asr #5
90012bc4:	db2e      	blt.n	90012c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012bc6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012bc8:	4293      	cmp	r3, r2
90012bca:	dd2b      	ble.n	90012c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012bcc:	9c01      	ldr	r4, [sp, #4]
90012bce:	6905      	ldr	r5, [r0, #16]
90012bd0:	46a0      	mov	r8, r4
90012bd2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90012bd4:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90012bd8:	45a0      	cmp	r8, r4
90012bda:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90012bde:	f040 814c 	bne.w	90012e7a <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90012be2:	f9b5 1000 	ldrsh.w	r1, [r5]
90012be6:	4551      	cmp	r1, sl
90012be8:	d103      	bne.n	90012bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90012bea:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012bee:	4291      	cmp	r1, r2
90012bf0:	d018      	beq.n	90012c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012bf2:	ea5c 010e 	orrs.w	r1, ip, lr
90012bf6:	d00f      	beq.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012bf8:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90012bfc:	2900      	cmp	r1, #0
90012bfe:	db0b      	blt.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012c00:	428b      	cmp	r3, r1
90012c02:	dd09      	ble.n	90012c18 <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90012c04:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90012c08:	4299      	cmp	r1, r3
90012c0a:	f101 0101 	add.w	r1, r1, #1
90012c0e:	bf38      	it	cc
90012c10:	3508      	addcc	r5, #8
90012c12:	6081      	str	r1, [r0, #8]
90012c14:	bf38      	it	cc
90012c16:	6105      	strcc	r5, [r0, #16]
90012c18:	6903      	ldr	r3, [r0, #16]
90012c1a:	f8a3 a000 	strh.w	sl, [r3]
90012c1e:	805a      	strh	r2, [r3, #2]
90012c20:	809e      	strh	r6, [r3, #4]
90012c22:	80de      	strh	r6, [r3, #6]
90012c24:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90012c26:	6901      	ldr	r1, [r0, #16]
90012c28:	441a      	add	r2, r3
90012c2a:	88cc      	ldrh	r4, [r1, #6]
90012c2c:	888b      	ldrh	r3, [r1, #4]
90012c2e:	4323      	orrs	r3, r4
90012c30:	d010      	beq.n	90012c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012c32:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90012c36:	2c00      	cmp	r4, #0
90012c38:	db0c      	blt.n	90012c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012c3a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
90012c3c:	429c      	cmp	r4, r3
90012c3e:	da09      	bge.n	90012c54 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90012c40:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90012c44:	429c      	cmp	r4, r3
90012c46:	f104 0401 	add.w	r4, r4, #1
90012c4a:	bf38      	it	cc
90012c4c:	3108      	addcc	r1, #8
90012c4e:	6084      	str	r4, [r0, #8]
90012c50:	bf38      	it	cc
90012c52:	6101      	strcc	r1, [r0, #16]
90012c54:	6903      	ldr	r3, [r0, #16]
90012c56:	464f      	mov	r7, r9
90012c58:	f8a3 a000 	strh.w	sl, [r3]
90012c5c:	805a      	strh	r2, [r3, #2]
90012c5e:	809e      	strh	r6, [r3, #4]
90012c60:	80de      	strh	r6, [r3, #6]
90012c62:	9b06      	ldr	r3, [sp, #24]
90012c64:	4293      	cmp	r3, r2
90012c66:	d19c      	bne.n	90012ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90012c68:	9b01      	ldr	r3, [sp, #4]
90012c6a:	6907      	ldr	r7, [r0, #16]
90012c6c:	f1c3 0620 	rsb	r6, r3, #32
90012c70:	9b05      	ldr	r3, [sp, #20]
90012c72:	ea4f 1e63 	mov.w	lr, r3, asr #5
90012c76:	9b04      	ldr	r3, [sp, #16]
90012c78:	429e      	cmp	r6, r3
90012c7a:	f040 81c7 	bne.w	9001300c <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90012c7e:	f9b7 3000 	ldrsh.w	r3, [r7]
90012c82:	459e      	cmp	lr, r3
90012c84:	d104      	bne.n	90012c90 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90012c86:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012c8a:	429a      	cmp	r2, r3
90012c8c:	f43f ae3a 	beq.w	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012c90:	88f9      	ldrh	r1, [r7, #6]
90012c92:	88bb      	ldrh	r3, [r7, #4]
90012c94:	430b      	orrs	r3, r1
90012c96:	d010      	beq.n	90012cba <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012c98:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90012c9c:	2b00      	cmp	r3, #0
90012c9e:	db0c      	blt.n	90012cba <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012ca0:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
90012ca2:	428b      	cmp	r3, r1
90012ca4:	da09      	bge.n	90012cba <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90012ca6:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90012caa:	428b      	cmp	r3, r1
90012cac:	f103 0301 	add.w	r3, r3, #1
90012cb0:	bf38      	it	cc
90012cb2:	3708      	addcc	r7, #8
90012cb4:	6083      	str	r3, [r0, #8]
90012cb6:	bf38      	it	cc
90012cb8:	6107      	strcc	r7, [r0, #16]
90012cba:	6903      	ldr	r3, [r0, #16]
90012cbc:	f8a3 e000 	strh.w	lr, [r3]
90012cc0:	e603      	b.n	900128ca <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90012cc2:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
90012cc4:	9c03      	ldr	r4, [sp, #12]
90012cc6:	42a2      	cmp	r2, r4
90012cc8:	f6ff ae1c 	blt.w	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90012ccc:	9c06      	ldr	r4, [sp, #24]
90012cce:	42a2      	cmp	r2, r4
90012cd0:	9c08      	ldr	r4, [sp, #32]
90012cd2:	bfbc      	itt	lt
90012cd4:	3201      	addlt	r2, #1
90012cd6:	9206      	strlt	r2, [sp, #24]
90012cd8:	f1c3 0220 	rsb	r2, r3, #32
90012cdc:	4362      	muls	r2, r4
90012cde:	2401      	movs	r4, #1
90012ce0:	940b      	str	r4, [sp, #44]	; 0x2c
90012ce2:	2420      	movs	r4, #32
90012ce4:	e6d6      	b.n	90012a94 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90012ce6:	ea4f 1861 	mov.w	r8, r1, asr #5
90012cea:	f009 021f 	and.w	r2, r9, #31
90012cee:	f001 011f 	and.w	r1, r1, #31
90012cf2:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90012cf6:	920c      	str	r2, [sp, #48]	; 0x30
90012cf8:	45b0      	cmp	r8, r6
90012cfa:	9a01      	ldr	r2, [sp, #4]
90012cfc:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90012d00:	eba2 0203 	sub.w	r2, r2, r3
90012d04:	d108      	bne.n	90012d18 <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90012d06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012d08:	4496      	add	lr, r2
90012d0a:	4419      	add	r1, r3
90012d0c:	f8a5 e004 	strh.w	lr, [r5, #4]
90012d10:	fb02 a101 	mla	r1, r2, r1, sl
90012d14:	80e9      	strh	r1, [r5, #6]
90012d16:	e6fa      	b.n	90012b0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012d18:	2c00      	cmp	r4, #0
90012d1a:	f2c0 80a7 	blt.w	90012e6c <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90012d1e:	2701      	movs	r7, #1
90012d20:	f1c1 0c20 	rsb	ip, r1, #32
90012d24:	970a      	str	r7, [sp, #40]	; 0x28
90012d26:	2720      	movs	r7, #32
90012d28:	fb02 f20c 	mul.w	r2, r2, ip
90012d2c:	9709      	str	r7, [sp, #36]	; 0x24
90012d2e:	9f09      	ldr	r7, [sp, #36]	; 0x24
90012d30:	fb92 fcf4 	sdiv	ip, r2, r4
90012d34:	fb04 221c 	mls	r2, r4, ip, r2
90012d38:	4439      	add	r1, r7
90012d3a:	2a00      	cmp	r2, #0
90012d3c:	bfbc      	itt	lt
90012d3e:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90012d42:	1912      	addlt	r2, r2, r4
90012d44:	fb0c a101 	mla	r1, ip, r1, sl
90012d48:	44e6      	add	lr, ip
90012d4a:	80e9      	strh	r1, [r5, #6]
90012d4c:	990a      	ldr	r1, [sp, #40]	; 0x28
90012d4e:	f8a5 e004 	strh.w	lr, [r5, #4]
90012d52:	eb08 0501 	add.w	r5, r8, r1
90012d56:	6901      	ldr	r1, [r0, #16]
90012d58:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90012d5c:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90012d60:	ea58 070e 	orrs.w	r7, r8, lr
90012d64:	d010      	beq.n	90012d88 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012d66:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
90012d6a:	f1be 0f00 	cmp.w	lr, #0
90012d6e:	db0b      	blt.n	90012d88 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012d70:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012d72:	45be      	cmp	lr, r7
90012d74:	da08      	bge.n	90012d88 <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90012d76:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012d7a:	45be      	cmp	lr, r7
90012d7c:	bf3c      	itt	cc
90012d7e:	3108      	addcc	r1, #8
90012d80:	6101      	strcc	r1, [r0, #16]
90012d82:	f10e 0101 	add.w	r1, lr, #1
90012d86:	6081      	str	r1, [r0, #8]
90012d88:	6901      	ldr	r1, [r0, #16]
90012d8a:	f04f 0e00 	mov.w	lr, #0
90012d8e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90012d92:	42ae      	cmp	r6, r5
90012d94:	800d      	strh	r5, [r1, #0]
90012d96:	4463      	add	r3, ip
90012d98:	f8a1 8002 	strh.w	r8, [r1, #2]
90012d9c:	f8a1 e004 	strh.w	lr, [r1, #4]
90012da0:	f8a1 e006 	strh.w	lr, [r1, #6]
90012da4:	d053      	beq.n	90012e4e <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
90012da6:	9901      	ldr	r1, [sp, #4]
90012da8:	1b12      	subs	r2, r2, r4
90012daa:	1ac9      	subs	r1, r1, r3
90012dac:	4461      	add	r1, ip
90012dae:	0149      	lsls	r1, r1, #5
90012db0:	fb91 fef4 	sdiv	lr, r1, r4
90012db4:	fb04 111e 	mls	r1, r4, lr, r1
90012db8:	2900      	cmp	r1, #0
90012dba:	bfbc      	itt	lt
90012dbc:	f10e 3eff 	addlt.w	lr, lr, #4294967295
90012dc0:	1909      	addlt	r1, r1, r4
90012dc2:	f10e 0701 	add.w	r7, lr, #1
90012dc6:	970d      	str	r7, [sp, #52]	; 0x34
90012dc8:	f8d0 a010 	ldr.w	sl, [r0, #16]
90012dcc:	1852      	adds	r2, r2, r1
90012dce:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90012dd0:	bf54      	ite	pl
90012dd2:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
90012dd6:	46f4      	movmi	ip, lr
90012dd8:	f8ba b004 	ldrh.w	fp, [sl, #4]
90012ddc:	bf58      	it	pl
90012dde:	1b12      	subpl	r2, r2, r4
90012de0:	4463      	add	r3, ip
90012de2:	443d      	add	r5, r7
90012de4:	44e3      	add	fp, ip
90012de6:	f8aa b004 	strh.w	fp, [sl, #4]
90012dea:	f8ba b006 	ldrh.w	fp, [sl, #6]
90012dee:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
90012df2:	f8aa b006 	strh.w	fp, [sl, #6]
90012df6:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012dfa:	f8bc b006 	ldrh.w	fp, [ip, #6]
90012dfe:	f8bc a004 	ldrh.w	sl, [ip, #4]
90012e02:	ea5b 070a 	orrs.w	r7, fp, sl
90012e06:	d014      	beq.n	90012e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012e08:	f9bc a002 	ldrsh.w	sl, [ip, #2]
90012e0c:	f1ba 0f00 	cmp.w	sl, #0
90012e10:	db0f      	blt.n	90012e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012e12:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012e14:	45ba      	cmp	sl, r7
90012e16:	da0c      	bge.n	90012e32 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
90012e18:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90012e1c:	45ba      	cmp	sl, r7
90012e1e:	f10a 0a01 	add.w	sl, sl, #1
90012e22:	bf38      	it	cc
90012e24:	f10c 0c08 	addcc.w	ip, ip, #8
90012e28:	f8c0 a008 	str.w	sl, [r0, #8]
90012e2c:	bf38      	it	cc
90012e2e:	f8c0 c010 	strcc.w	ip, [r0, #16]
90012e32:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012e36:	f04f 0700 	mov.w	r7, #0
90012e3a:	42ae      	cmp	r6, r5
90012e3c:	f8ac 5000 	strh.w	r5, [ip]
90012e40:	f8ac 8002 	strh.w	r8, [ip, #2]
90012e44:	f8ac 7004 	strh.w	r7, [ip, #4]
90012e48:	f8ac 7006 	strh.w	r7, [ip, #6]
90012e4c:	d1bc      	bne.n	90012dc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90012e4e:	6904      	ldr	r4, [r0, #16]
90012e50:	9a01      	ldr	r2, [sp, #4]
90012e52:	990c      	ldr	r1, [sp, #48]	; 0x30
90012e54:	1ad3      	subs	r3, r2, r3
90012e56:	88a2      	ldrh	r2, [r4, #4]
90012e58:	3120      	adds	r1, #32
90012e5a:	441a      	add	r2, r3
90012e5c:	80a2      	strh	r2, [r4, #4]
90012e5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
90012e60:	1a89      	subs	r1, r1, r2
90012e62:	88e2      	ldrh	r2, [r4, #6]
90012e64:	fb03 2301 	mla	r3, r3, r1, r2
90012e68:	80e3      	strh	r3, [r4, #6]
90012e6a:	e650      	b.n	90012b0e <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90012e6c:	f04f 37ff 	mov.w	r7, #4294967295
90012e70:	434a      	muls	r2, r1
90012e72:	4264      	negs	r4, r4
90012e74:	970a      	str	r7, [sp, #40]	; 0x28
90012e76:	2700      	movs	r7, #0
90012e78:	e758      	b.n	90012d2c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
90012e7a:	ea4f 1867 	mov.w	r8, r7, asr #5
90012e7e:	f009 031f 	and.w	r3, r9, #31
90012e82:	f007 071f 	and.w	r7, r7, #31
90012e86:	fa1f fc8c 	uxth.w	ip, ip
90012e8a:	45d0      	cmp	r8, sl
90012e8c:	930f      	str	r3, [sp, #60]	; 0x3c
90012e8e:	fa1f fe8e 	uxth.w	lr, lr
90012e92:	d10a      	bne.n	90012eaa <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90012e94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012e96:	449c      	add	ip, r3
90012e98:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90012e9a:	441f      	add	r7, r3
90012e9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90012e9e:	f8a5 c004 	strh.w	ip, [r5, #4]
90012ea2:	fb03 e707 	mla	r7, r3, r7, lr
90012ea6:	80ef      	strh	r7, [r5, #6]
90012ea8:	e6bc      	b.n	90012c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012eaa:	2900      	cmp	r1, #0
90012eac:	f2c0 80a6 	blt.w	90012ffc <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90012eb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90012eb2:	f1c7 0320 	rsb	r3, r7, #32
90012eb6:	4363      	muls	r3, r4
90012eb8:	2401      	movs	r4, #1
90012eba:	940d      	str	r4, [sp, #52]	; 0x34
90012ebc:	2420      	movs	r4, #32
90012ebe:	940c      	str	r4, [sp, #48]	; 0x30
90012ec0:	fb93 f4f1 	sdiv	r4, r3, r1
90012ec4:	fb01 3b14 	mls	fp, r1, r4, r3
90012ec8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90012eca:	f1bb 0f00 	cmp.w	fp, #0
90012ece:	441f      	add	r7, r3
90012ed0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90012ed2:	bfbc      	itt	lt
90012ed4:	f104 34ff 	addlt.w	r4, r4, #4294967295
90012ed8:	448b      	addlt	fp, r1
90012eda:	fb04 e707 	mla	r7, r4, r7, lr
90012ede:	44a4      	add	ip, r4
90012ee0:	80ef      	strh	r7, [r5, #6]
90012ee2:	f8a5 c004 	strh.w	ip, [r5, #4]
90012ee6:	eb08 0503 	add.w	r5, r8, r3
90012eea:	f8d0 c010 	ldr.w	ip, [r0, #16]
90012eee:	f8bc e006 	ldrh.w	lr, [ip, #6]
90012ef2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90012ef6:	ea5e 0307 	orrs.w	r3, lr, r7
90012efa:	d011      	beq.n	90012f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012efc:	f9bc e002 	ldrsh.w	lr, [ip, #2]
90012f00:	f1be 0f00 	cmp.w	lr, #0
90012f04:	db0c      	blt.n	90012f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012f06:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012f08:	45be      	cmp	lr, r7
90012f0a:	da09      	bge.n	90012f20 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
90012f0c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
90012f10:	45be      	cmp	lr, r7
90012f12:	bf3c      	itt	cc
90012f14:	f10c 0708 	addcc.w	r7, ip, #8
90012f18:	6107      	strcc	r7, [r0, #16]
90012f1a:	f10e 0701 	add.w	r7, lr, #1
90012f1e:	6087      	str	r7, [r0, #8]
90012f20:	6907      	ldr	r7, [r0, #16]
90012f22:	b213      	sxth	r3, r2
90012f24:	4555      	cmp	r5, sl
90012f26:	9310      	str	r3, [sp, #64]	; 0x40
90012f28:	807b      	strh	r3, [r7, #2]
90012f2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90012f2c:	803d      	strh	r5, [r7, #0]
90012f2e:	80be      	strh	r6, [r7, #4]
90012f30:	eb04 0c03 	add.w	ip, r4, r3
90012f34:	80fe      	strh	r6, [r7, #6]
90012f36:	d050      	beq.n	90012fda <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
90012f38:	9b01      	ldr	r3, [sp, #4]
90012f3a:	eba3 070c 	sub.w	r7, r3, ip
90012f3e:	ebab 0301 	sub.w	r3, fp, r1
90012f42:	443c      	add	r4, r7
90012f44:	9309      	str	r3, [sp, #36]	; 0x24
90012f46:	0164      	lsls	r4, r4, #5
90012f48:	fb94 f8f1 	sdiv	r8, r4, r1
90012f4c:	fb01 4418 	mls	r4, r1, r8, r4
90012f50:	2c00      	cmp	r4, #0
90012f52:	bfbc      	itt	lt
90012f54:	f108 38ff 	addlt.w	r8, r8, #4294967295
90012f58:	1864      	addlt	r4, r4, r1
90012f5a:	f108 0701 	add.w	r7, r8, #1
90012f5e:	9711      	str	r7, [sp, #68]	; 0x44
90012f60:	9b09      	ldr	r3, [sp, #36]	; 0x24
90012f62:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012f66:	191b      	adds	r3, r3, r4
90012f68:	f8be b004 	ldrh.w	fp, [lr, #4]
90012f6c:	bf54      	ite	pl
90012f6e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
90012f70:	4647      	movmi	r7, r8
90012f72:	9309      	str	r3, [sp, #36]	; 0x24
90012f74:	bf58      	it	pl
90012f76:	1a5b      	subpl	r3, r3, r1
90012f78:	44bb      	add	fp, r7
90012f7a:	44bc      	add	ip, r7
90012f7c:	bf58      	it	pl
90012f7e:	9309      	strpl	r3, [sp, #36]	; 0x24
90012f80:	f8ae b004 	strh.w	fp, [lr, #4]
90012f84:	f8be b006 	ldrh.w	fp, [lr, #6]
90012f88:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90012f8c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
90012f8e:	f8ae b006 	strh.w	fp, [lr, #6]
90012f92:	443d      	add	r5, r7
90012f94:	f8d0 e010 	ldr.w	lr, [r0, #16]
90012f98:	f8be b006 	ldrh.w	fp, [lr, #6]
90012f9c:	f8be 7004 	ldrh.w	r7, [lr, #4]
90012fa0:	ea5b 0307 	orrs.w	r3, fp, r7
90012fa4:	d011      	beq.n	90012fca <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012fa6:	f9be b002 	ldrsh.w	fp, [lr, #2]
90012faa:	f1bb 0f00 	cmp.w	fp, #0
90012fae:	db0c      	blt.n	90012fca <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012fb0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
90012fb2:	45bb      	cmp	fp, r7
90012fb4:	da09      	bge.n	90012fca <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90012fb6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90012fba:	45bb      	cmp	fp, r7
90012fbc:	bf3c      	itt	cc
90012fbe:	f10e 0708 	addcc.w	r7, lr, #8
90012fc2:	6107      	strcc	r7, [r0, #16]
90012fc4:	f10b 0701 	add.w	r7, fp, #1
90012fc8:	6087      	str	r7, [r0, #8]
90012fca:	6907      	ldr	r7, [r0, #16]
90012fcc:	4555      	cmp	r5, sl
90012fce:	9b10      	ldr	r3, [sp, #64]	; 0x40
90012fd0:	803d      	strh	r5, [r7, #0]
90012fd2:	807b      	strh	r3, [r7, #2]
90012fd4:	80be      	strh	r6, [r7, #4]
90012fd6:	80fe      	strh	r6, [r7, #6]
90012fd8:	d1c2      	bne.n	90012f60 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
90012fda:	9b01      	ldr	r3, [sp, #4]
90012fdc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90012fde:	eba3 0c0c 	sub.w	ip, r3, ip
90012fe2:	6903      	ldr	r3, [r0, #16]
90012fe4:	3720      	adds	r7, #32
90012fe6:	8899      	ldrh	r1, [r3, #4]
90012fe8:	4461      	add	r1, ip
90012fea:	8099      	strh	r1, [r3, #4]
90012fec:	990c      	ldr	r1, [sp, #48]	; 0x30
90012fee:	1a7f      	subs	r7, r7, r1
90012ff0:	88d9      	ldrh	r1, [r3, #6]
90012ff2:	fb0c 1c07 	mla	ip, ip, r7, r1
90012ff6:	f8a3 c006 	strh.w	ip, [r3, #6]
90012ffa:	e613      	b.n	90012c24 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90012ffc:	f04f 34ff 	mov.w	r4, #4294967295
90013000:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90013002:	4249      	negs	r1, r1
90013004:	940d      	str	r4, [sp, #52]	; 0x34
90013006:	2400      	movs	r4, #0
90013008:	437b      	muls	r3, r7
9001300a:	e758      	b.n	90012ebe <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
9001300c:	9905      	ldr	r1, [sp, #20]
9001300e:	ea4f 1b69 	mov.w	fp, r9, asr #5
90013012:	f009 0c1f 	and.w	ip, r9, #31
90013016:	f8b7 8004 	ldrh.w	r8, [r7, #4]
9001301a:	f001 011f 	and.w	r1, r1, #31
9001301e:	45f3      	cmp	fp, lr
90013020:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90013024:	9102      	str	r1, [sp, #8]
90013026:	9904      	ldr	r1, [sp, #16]
90013028:	eba1 0406 	sub.w	r4, r1, r6
9001302c:	d108      	bne.n	90013040 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
9001302e:	9b02      	ldr	r3, [sp, #8]
90013030:	44a0      	add	r8, r4
90013032:	449c      	add	ip, r3
90013034:	f8a7 8004 	strh.w	r8, [r7, #4]
90013038:	fb04 a40c 	mla	r4, r4, ip, sl
9001303c:	80fc      	strh	r4, [r7, #6]
9001303e:	e461      	b.n	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013040:	9905      	ldr	r1, [sp, #20]
90013042:	ebb1 0109 	subs.w	r1, r1, r9
90013046:	bf51      	iteee	pl
90013048:	f1cc 0520 	rsbpl	r5, ip, #32
9001304c:	fb04 f40c 	mulmi.w	r4, r4, ip
90013050:	4249      	negmi	r1, r1
90013052:	2500      	movmi	r5, #0
90013054:	bf5d      	ittte	pl
90013056:	436c      	mulpl	r4, r5
90013058:	2520      	movpl	r5, #32
9001305a:	f04f 0901 	movpl.w	r9, #1
9001305e:	f04f 39ff 	movmi.w	r9, #4294967295
90013062:	9501      	str	r5, [sp, #4]
90013064:	9b01      	ldr	r3, [sp, #4]
90013066:	fb94 f5f1 	sdiv	r5, r4, r1
9001306a:	fb01 4415 	mls	r4, r1, r5, r4
9001306e:	449c      	add	ip, r3
90013070:	eb0b 0309 	add.w	r3, fp, r9
90013074:	2c00      	cmp	r4, #0
90013076:	bfbc      	itt	lt
90013078:	f105 35ff 	addlt.w	r5, r5, #4294967295
9001307c:	1864      	addlt	r4, r4, r1
9001307e:	44a8      	add	r8, r5
90013080:	fb05 ac0c 	mla	ip, r5, ip, sl
90013084:	f8a7 8004 	strh.w	r8, [r7, #4]
90013088:	f8a7 c006 	strh.w	ip, [r7, #6]
9001308c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013090:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013094:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013098:	ea58 0707 	orrs.w	r7, r8, r7
9001309c:	d011      	beq.n	900130c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001309e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
900130a2:	f1b8 0f00 	cmp.w	r8, #0
900130a6:	db0c      	blt.n	900130c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900130a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
900130aa:	45b8      	cmp	r8, r7
900130ac:	da09      	bge.n	900130c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
900130ae:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
900130b2:	45b8      	cmp	r8, r7
900130b4:	bf3c      	itt	cc
900130b6:	f10c 0708 	addcc.w	r7, ip, #8
900130ba:	6107      	strcc	r7, [r0, #16]
900130bc:	f108 0701 	add.w	r7, r8, #1
900130c0:	6087      	str	r7, [r0, #8]
900130c2:	6907      	ldr	r7, [r0, #16]
900130c4:	f04f 0c00 	mov.w	ip, #0
900130c8:	b212      	sxth	r2, r2
900130ca:	459e      	cmp	lr, r3
900130cc:	803b      	strh	r3, [r7, #0]
900130ce:	442e      	add	r6, r5
900130d0:	807a      	strh	r2, [r7, #2]
900130d2:	f8a7 c004 	strh.w	ip, [r7, #4]
900130d6:	f8a7 c006 	strh.w	ip, [r7, #6]
900130da:	d04b      	beq.n	90013174 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900130dc:	9f04      	ldr	r7, [sp, #16]
900130de:	1a64      	subs	r4, r4, r1
900130e0:	f04f 0a00 	mov.w	sl, #0
900130e4:	1bbf      	subs	r7, r7, r6
900130e6:	443d      	add	r5, r7
900130e8:	016d      	lsls	r5, r5, #5
900130ea:	fb95 f8f1 	sdiv	r8, r5, r1
900130ee:	fb01 5518 	mls	r5, r1, r8, r5
900130f2:	4565      	cmp	r5, ip
900130f4:	bfbc      	itt	lt
900130f6:	f108 38ff 	addlt.w	r8, r8, #4294967295
900130fa:	186d      	addlt	r5, r5, r1
900130fc:	f108 0701 	add.w	r7, r8, #1
90013100:	9703      	str	r7, [sp, #12]
90013102:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013106:	1964      	adds	r4, r4, r5
90013108:	444b      	add	r3, r9
9001310a:	bf54      	ite	pl
9001310c:	9f03      	ldrpl	r7, [sp, #12]
9001310e:	4647      	movmi	r7, r8
90013110:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013114:	bf58      	it	pl
90013116:	1a64      	subpl	r4, r4, r1
90013118:	443e      	add	r6, r7
9001311a:	44bb      	add	fp, r7
9001311c:	f8ac b004 	strh.w	fp, [ip, #4]
90013120:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013124:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013128:	f8ac b006 	strh.w	fp, [ip, #6]
9001312c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013130:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013134:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013138:	ea5b 0707 	orrs.w	r7, fp, r7
9001313c:	d011      	beq.n	90013162 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001313e:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013142:	f1bb 0f00 	cmp.w	fp, #0
90013146:	db0c      	blt.n	90013162 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90013148:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
9001314a:	45bb      	cmp	fp, r7
9001314c:	da09      	bge.n	90013162 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001314e:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013152:	45bb      	cmp	fp, r7
90013154:	bf3c      	itt	cc
90013156:	f10c 0708 	addcc.w	r7, ip, #8
9001315a:	6107      	strcc	r7, [r0, #16]
9001315c:	f10b 0701 	add.w	r7, fp, #1
90013160:	6087      	str	r7, [r0, #8]
90013162:	6907      	ldr	r7, [r0, #16]
90013164:	459e      	cmp	lr, r3
90013166:	803b      	strh	r3, [r7, #0]
90013168:	807a      	strh	r2, [r7, #2]
9001316a:	f8a7 a004 	strh.w	sl, [r7, #4]
9001316e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013172:	d1c6      	bne.n	90013102 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90013174:	9b04      	ldr	r3, [sp, #16]
90013176:	1b9e      	subs	r6, r3, r6
90013178:	6903      	ldr	r3, [r0, #16]
9001317a:	889a      	ldrh	r2, [r3, #4]
9001317c:	4432      	add	r2, r6
9001317e:	809a      	strh	r2, [r3, #4]
90013180:	9a02      	ldr	r2, [sp, #8]
90013182:	f102 0c20 	add.w	ip, r2, #32
90013186:	9a01      	ldr	r2, [sp, #4]
90013188:	ebac 0c02 	sub.w	ip, ip, r2
9001318c:	88da      	ldrh	r2, [r3, #6]
9001318e:	fb06 260c 	mla	r6, r6, ip, r2
90013192:	80de      	strh	r6, [r3, #6]
90013194:	f7ff bbb6 	b.w	90012904 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

90013198 <_ZN8touchgfx7Outline6lineToEii>:
90013198:	6a43      	ldr	r3, [r0, #36]	; 0x24
9001319a:	079b      	lsls	r3, r3, #30
9001319c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9001319e:	460e      	mov	r6, r1
900131a0:	4615      	mov	r5, r2
900131a2:	d511      	bpl.n	900131c8 <_ZN8touchgfx7Outline6lineToEii+0x30>
900131a4:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
900131a8:	ea86 0701 	eor.w	r7, r6, r1
900131ac:	ea85 0302 	eor.w	r3, r5, r2
900131b0:	433b      	orrs	r3, r7
900131b2:	d009      	beq.n	900131c8 <_ZN8touchgfx7Outline6lineToEii+0x30>
900131b4:	4633      	mov	r3, r6
900131b6:	9500      	str	r5, [sp, #0]
900131b8:	f7ff fb4c 	bl	90012854 <_ZN8touchgfx7Outline10renderLineEiiii>
900131bc:	6a43      	ldr	r3, [r0, #36]	; 0x24
900131be:	f043 0301 	orr.w	r3, r3, #1
900131c2:	e9c0 6505 	strd	r6, r5, [r0, #20]
900131c6:	6243      	str	r3, [r0, #36]	; 0x24
900131c8:	b003      	add	sp, #12
900131ca:	bdf0      	pop	{r4, r5, r6, r7, pc}

900131cc <_ZN8touchgfx7Outline6moveToEii>:
900131cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900131ce:	6a43      	ldr	r3, [r0, #36]	; 0x24
900131d0:	4615      	mov	r5, r2
900131d2:	4604      	mov	r4, r0
900131d4:	460e      	mov	r6, r1
900131d6:	079a      	lsls	r2, r3, #30
900131d8:	d401      	bmi.n	900131de <_ZN8touchgfx7Outline6moveToEii+0x12>
900131da:	f7ff fb07 	bl	900127ec <_ZN8touchgfx7Outline5resetEv>
900131de:	6a63      	ldr	r3, [r4, #36]	; 0x24
900131e0:	07db      	lsls	r3, r3, #31
900131e2:	d504      	bpl.n	900131ee <_ZN8touchgfx7Outline6moveToEii+0x22>
900131e4:	4620      	mov	r0, r4
900131e6:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900131ea:	f7ff ffd5 	bl	90013198 <_ZN8touchgfx7Outline6lineToEii>
900131ee:	6923      	ldr	r3, [r4, #16]
900131f0:	1170      	asrs	r0, r6, #5
900131f2:	1169      	asrs	r1, r5, #5
900131f4:	f9b3 2000 	ldrsh.w	r2, [r3]
900131f8:	4290      	cmp	r0, r2
900131fa:	d103      	bne.n	90013204 <_ZN8touchgfx7Outline6moveToEii+0x38>
900131fc:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013200:	4291      	cmp	r1, r2
90013202:	d01a      	beq.n	9001323a <_ZN8touchgfx7Outline6moveToEii+0x6e>
90013204:	88df      	ldrh	r7, [r3, #6]
90013206:	889a      	ldrh	r2, [r3, #4]
90013208:	433a      	orrs	r2, r7
9001320a:	d010      	beq.n	9001322e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001320c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90013210:	2a00      	cmp	r2, #0
90013212:	db0c      	blt.n	9001322e <_ZN8touchgfx7Outline6moveToEii+0x62>
90013214:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
90013216:	42ba      	cmp	r2, r7
90013218:	da09      	bge.n	9001322e <_ZN8touchgfx7Outline6moveToEii+0x62>
9001321a:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
9001321e:	42ba      	cmp	r2, r7
90013220:	f102 0201 	add.w	r2, r2, #1
90013224:	bf38      	it	cc
90013226:	3308      	addcc	r3, #8
90013228:	60a2      	str	r2, [r4, #8]
9001322a:	bf38      	it	cc
9001322c:	6123      	strcc	r3, [r4, #16]
9001322e:	6923      	ldr	r3, [r4, #16]
90013230:	2200      	movs	r2, #0
90013232:	8018      	strh	r0, [r3, #0]
90013234:	8059      	strh	r1, [r3, #2]
90013236:	809a      	strh	r2, [r3, #4]
90013238:	80da      	strh	r2, [r3, #6]
9001323a:	6166      	str	r6, [r4, #20]
9001323c:	6225      	str	r5, [r4, #32]
9001323e:	e9c4 5606 	strd	r5, r6, [r4, #24]
90013242:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90013244 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90013244:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90013248:	b0d0      	sub	sp, #320	; 0x140
9001324a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
9001324e:	466c      	mov	r4, sp
90013250:	4627      	mov	r7, r4
90013252:	1a0d      	subs	r5, r1, r0
90013254:	f100 0308 	add.w	r3, r0, #8
90013258:	2d48      	cmp	r5, #72	; 0x48
9001325a:	f340 80d5 	ble.w	90013408 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001325e:	112d      	asrs	r5, r5, #4
90013260:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90013264:	f9b0 9000 	ldrsh.w	r9, [r0]
90013268:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
9001326c:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90013270:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90013274:	6816      	ldr	r6, [r2, #0]
90013276:	6006      	str	r6, [r0, #0]
90013278:	6856      	ldr	r6, [r2, #4]
9001327a:	6046      	str	r6, [r0, #4]
9001327c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90013280:	f8a2 8002 	strh.w	r8, [r2, #2]
90013284:	f8a2 e004 	strh.w	lr, [r2, #4]
90013288:	f8a2 c006 	strh.w	ip, [r2, #6]
9001328c:	f1a1 0208 	sub.w	r2, r1, #8
90013290:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013294:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
90013298:	4565      	cmp	r5, ip
9001329a:	db06      	blt.n	900132aa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
9001329c:	d119      	bne.n	900132d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001329e:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
900132a2:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
900132a6:	42ae      	cmp	r6, r5
900132a8:	dd13      	ble.n	900132d2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
900132aa:	460e      	mov	r6, r1
900132ac:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
900132b0:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
900132b4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
900132b8:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900132bc:	601d      	str	r5, [r3, #0]
900132be:	6875      	ldr	r5, [r6, #4]
900132c0:	605d      	str	r5, [r3, #4]
900132c2:	f821 9c08 	strh.w	r9, [r1, #-8]
900132c6:	f821 cc06 	strh.w	ip, [r1, #-6]
900132ca:	f821 8c04 	strh.w	r8, [r1, #-4]
900132ce:	f821 ec02 	strh.w	lr, [r1, #-2]
900132d2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900132d6:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900132da:	42ae      	cmp	r6, r5
900132dc:	db06      	blt.n	900132ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900132de:	d116      	bne.n	9001330e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900132e0:	f9b0 c000 	ldrsh.w	ip, [r0]
900132e4:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900132e8:	45ac      	cmp	ip, r5
900132ea:	da10      	bge.n	9001330e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900132ec:	681d      	ldr	r5, [r3, #0]
900132ee:	f9b0 8000 	ldrsh.w	r8, [r0]
900132f2:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900132f6:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900132fa:	6005      	str	r5, [r0, #0]
900132fc:	685d      	ldr	r5, [r3, #4]
900132fe:	f8a0 8008 	strh.w	r8, [r0, #8]
90013302:	6045      	str	r5, [r0, #4]
90013304:	8146      	strh	r6, [r0, #10]
90013306:	f8a0 e00c 	strh.w	lr, [r0, #12]
9001330a:	f8a0 c00e 	strh.w	ip, [r0, #14]
9001330e:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90013312:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013316:	4565      	cmp	r5, ip
90013318:	db06      	blt.n	90013328 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
9001331a:	d119      	bne.n	90013350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001331c:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90013320:	f9b0 5000 	ldrsh.w	r5, [r0]
90013324:	42ae      	cmp	r6, r5
90013326:	da13      	bge.n	90013350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90013328:	460e      	mov	r6, r1
9001332a:	f9b0 9000 	ldrsh.w	r9, [r0]
9001332e:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90013332:	f856 5d08 	ldr.w	r5, [r6, #-8]!
90013336:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001333a:	6005      	str	r5, [r0, #0]
9001333c:	6875      	ldr	r5, [r6, #4]
9001333e:	6045      	str	r5, [r0, #4]
90013340:	f821 9c08 	strh.w	r9, [r1, #-8]
90013344:	f821 cc06 	strh.w	ip, [r1, #-6]
90013348:	f821 8c04 	strh.w	r8, [r1, #-4]
9001334c:	f821 ec02 	strh.w	lr, [r1, #-2]
90013350:	3308      	adds	r3, #8
90013352:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
90013356:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001335a:	45e6      	cmp	lr, ip
9001335c:	dbf8      	blt.n	90013350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001335e:	d105      	bne.n	9001336c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013360:	f9b3 6000 	ldrsh.w	r6, [r3]
90013364:	f9b0 5000 	ldrsh.w	r5, [r0]
90013368:	42ae      	cmp	r6, r5
9001336a:	dbf1      	blt.n	90013350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001336c:	4615      	mov	r5, r2
9001336e:	3a08      	subs	r2, #8
90013370:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90013374:	45b4      	cmp	ip, r6
90013376:	dbf9      	blt.n	9001336c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013378:	d105      	bne.n	90013386 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001337a:	f9b0 8000 	ldrsh.w	r8, [r0]
9001337e:	f9b2 6000 	ldrsh.w	r6, [r2]
90013382:	45b0      	cmp	r8, r6
90013384:	dbf2      	blt.n	9001336c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90013386:	4293      	cmp	r3, r2
90013388:	f1a5 0608 	sub.w	r6, r5, #8
9001338c:	d816      	bhi.n	900133bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
9001338e:	f8d6 c000 	ldr.w	ip, [r6]
90013392:	f9b3 a000 	ldrsh.w	sl, [r3]
90013396:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001339a:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
9001339e:	f8c3 c000 	str.w	ip, [r3]
900133a2:	f8d6 c004 	ldr.w	ip, [r6, #4]
900133a6:	f8c3 c004 	str.w	ip, [r3, #4]
900133aa:	f825 ac08 	strh.w	sl, [r5, #-8]
900133ae:	f825 ec06 	strh.w	lr, [r5, #-6]
900133b2:	f825 9c04 	strh.w	r9, [r5, #-4]
900133b6:	f825 8c02 	strh.w	r8, [r5, #-2]
900133ba:	e7c9      	b.n	90013350 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900133bc:	f8d6 e000 	ldr.w	lr, [r6]
900133c0:	f9b0 a000 	ldrsh.w	sl, [r0]
900133c4:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900133c8:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900133cc:	f8c0 e000 	str.w	lr, [r0]
900133d0:	f8d6 e004 	ldr.w	lr, [r6, #4]
900133d4:	1a16      	subs	r6, r2, r0
900133d6:	f8c0 e004 	str.w	lr, [r0, #4]
900133da:	f825 ac08 	strh.w	sl, [r5, #-8]
900133de:	f825 cc06 	strh.w	ip, [r5, #-6]
900133e2:	f825 9c04 	strh.w	r9, [r5, #-4]
900133e6:	f825 8c02 	strh.w	r8, [r5, #-2]
900133ea:	1acd      	subs	r5, r1, r3
900133ec:	10ed      	asrs	r5, r5, #3
900133ee:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900133f2:	bfb5      	itete	lt
900133f4:	e9c4 0200 	strdlt	r0, r2, [r4]
900133f8:	e9c4 3100 	strdge	r3, r1, [r4]
900133fc:	460a      	movlt	r2, r1
900133fe:	4603      	movge	r3, r0
90013400:	3408      	adds	r4, #8
90013402:	4618      	mov	r0, r3
90013404:	4611      	mov	r1, r2
90013406:	e724      	b.n	90013252 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013408:	4299      	cmp	r1, r3
9001340a:	d927      	bls.n	9001345c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
9001340c:	f1a3 0210 	sub.w	r2, r3, #16
90013410:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
90013414:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
90013418:	45ac      	cmp	ip, r5
9001341a:	db06      	blt.n	9001342a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
9001341c:	d11c      	bne.n	90013458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001341e:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90013422:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
90013426:	42ae      	cmp	r6, r5
90013428:	da16      	bge.n	90013458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001342a:	4615      	mov	r5, r2
9001342c:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90013430:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90013434:	3a08      	subs	r2, #8
90013436:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001343a:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
9001343e:	6196      	str	r6, [r2, #24]
90013440:	42a8      	cmp	r0, r5
90013442:	686e      	ldr	r6, [r5, #4]
90013444:	f8a2 9010 	strh.w	r9, [r2, #16]
90013448:	61d6      	str	r6, [r2, #28]
9001344a:	f8a2 c012 	strh.w	ip, [r2, #18]
9001344e:	f8a2 8014 	strh.w	r8, [r2, #20]
90013452:	f8a2 e016 	strh.w	lr, [r2, #22]
90013456:	d1db      	bne.n	90013410 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
90013458:	3308      	adds	r3, #8
9001345a:	e7d5      	b.n	90013408 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
9001345c:	42bc      	cmp	r4, r7
9001345e:	d903      	bls.n	90013468 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90013460:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90013464:	3c08      	subs	r4, #8
90013466:	e6f4      	b.n	90013252 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
90013468:	b050      	add	sp, #320	; 0x140
9001346a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001346e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
9001346e:	b510      	push	{r4, lr}
90013470:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013472:	4604      	mov	r4, r0
90013474:	07da      	lsls	r2, r3, #31
90013476:	d507      	bpl.n	90013488 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
90013478:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
9001347c:	f7ff fe8c 	bl	90013198 <_ZN8touchgfx7Outline6lineToEii>
90013480:	6a43      	ldr	r3, [r0, #36]	; 0x24
90013482:	f023 0301 	bic.w	r3, r3, #1
90013486:	6243      	str	r3, [r0, #36]	; 0x24
90013488:	6a63      	ldr	r3, [r4, #36]	; 0x24
9001348a:	079b      	lsls	r3, r3, #30
9001348c:	d521      	bpl.n	900134d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
9001348e:	6923      	ldr	r3, [r4, #16]
90013490:	88d9      	ldrh	r1, [r3, #6]
90013492:	889a      	ldrh	r2, [r3, #4]
90013494:	430a      	orrs	r2, r1
90013496:	d010      	beq.n	900134ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90013498:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
9001349c:	2a00      	cmp	r2, #0
9001349e:	db0c      	blt.n	900134ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900134a0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
900134a2:	428a      	cmp	r2, r1
900134a4:	da09      	bge.n	900134ba <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
900134a6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
900134aa:	4291      	cmp	r1, r2
900134ac:	f102 0201 	add.w	r2, r2, #1
900134b0:	bf88      	it	hi
900134b2:	3308      	addhi	r3, #8
900134b4:	60a2      	str	r2, [r4, #8]
900134b6:	bf88      	it	hi
900134b8:	6123      	strhi	r3, [r4, #16]
900134ba:	68a1      	ldr	r1, [r4, #8]
900134bc:	b129      	cbz	r1, 900134ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900134be:	6863      	ldr	r3, [r4, #4]
900134c0:	4299      	cmp	r1, r3
900134c2:	d802      	bhi.n	900134ca <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900134c4:	68e0      	ldr	r0, [r4, #12]
900134c6:	f7ff febd 	bl	90013244 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900134ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
900134cc:	f023 0302 	bic.w	r3, r3, #2
900134d0:	6263      	str	r3, [r4, #36]	; 0x24
900134d2:	68e0      	ldr	r0, [r4, #12]
900134d4:	bd10      	pop	{r4, pc}
	...

900134d8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
900134d8:	4b02      	ldr	r3, [pc, #8]	; (900134e4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
900134da:	6018      	str	r0, [r3, #0]
900134dc:	4b02      	ldr	r3, [pc, #8]	; (900134e8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
900134de:	6019      	str	r1, [r3, #0]
900134e0:	4770      	bx	lr
900134e2:	bf00      	nop
900134e4:	24023584 	.word	0x24023584
900134e8:	24023588 	.word	0x24023588

900134ec <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
900134ec:	2300      	movs	r3, #0
900134ee:	4a02      	ldr	r2, [pc, #8]	; (900134f8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
900134f0:	6013      	str	r3, [r2, #0]
900134f2:	4a02      	ldr	r2, [pc, #8]	; (900134fc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
900134f4:	6013      	str	r3, [r2, #0]
900134f6:	4770      	bx	lr
900134f8:	24023584 	.word	0x24023584
900134fc:	24023588 	.word	0x24023588

90013500 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
90013500:	4b01      	ldr	r3, [pc, #4]	; (90013508 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
90013502:	6818      	ldr	r0, [r3, #0]
90013504:	4770      	bx	lr
90013506:	bf00      	nop
90013508:	24023584 	.word	0x24023584

9001350c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
9001350c:	4b01      	ldr	r3, [pc, #4]	; (90013514 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
9001350e:	6818      	ldr	r0, [r3, #0]
90013510:	4770      	bx	lr
90013512:	bf00      	nop
90013514:	24023588 	.word	0x24023588

90013518 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
90013518:	b510      	push	{r4, lr}
9001351a:	6803      	ldr	r3, [r0, #0]
9001351c:	460c      	mov	r4, r1
9001351e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013520:	4798      	blx	r3
90013522:	1b03      	subs	r3, r0, r4
90013524:	4258      	negs	r0, r3
90013526:	4158      	adcs	r0, r3
90013528:	bd10      	pop	{r4, pc}
	...

9001352c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
9001352c:	4b01      	ldr	r3, [pc, #4]	; (90013534 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
9001352e:	6019      	str	r1, [r3, #0]
90013530:	4770      	bx	lr
90013532:	bf00      	nop
90013534:	2402358c 	.word	0x2402358c

90013538 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90013538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001353c:	4696      	mov	lr, r2
9001353e:	b097      	sub	sp, #92	; 0x5c
90013540:	4605      	mov	r5, r0
90013542:	4614      	mov	r4, r2
90013544:	460e      	mov	r6, r1
90013546:	461f      	mov	r7, r3
90013548:	f10d 0c1c 	add.w	ip, sp, #28
9001354c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
90013550:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
90013554:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
90013558:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001355c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013560:	f8de 3000 	ldr.w	r3, [lr]
90013564:	f104 0e14 	add.w	lr, r4, #20
90013568:	f8cc 3000 	str.w	r3, [ip]
9001356c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
90013570:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90013574:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013578:	f8de 3000 	ldr.w	r3, [lr]
9001357c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
90013580:	f8cc 3000 	str.w	r3, [ip]
90013584:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
90013588:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001358c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90013590:	f8de 3000 	ldr.w	r3, [lr]
90013594:	4631      	mov	r1, r6
90013596:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013598:	4628      	mov	r0, r5
9001359a:	f8cc 3000 	str.w	r3, [ip]
9001359e:	682b      	ldr	r3, [r5, #0]
900135a0:	9201      	str	r2, [sp, #4]
900135a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
900135a4:	f8cd 8008 	str.w	r8, [sp, #8]
900135a8:	9200      	str	r2, [sp, #0]
900135aa:	aa07      	add	r2, sp, #28
900135ac:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900135b0:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
900135b4:	463b      	mov	r3, r7
900135b6:	47d8      	blx	fp
900135b8:	46a6      	mov	lr, r4
900135ba:	f10d 0c1c 	add.w	ip, sp, #28
900135be:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900135c2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900135c6:	f8de 3000 	ldr.w	r3, [lr]
900135ca:	f104 0e28 	add.w	lr, r4, #40	; 0x28
900135ce:	343c      	adds	r4, #60	; 0x3c
900135d0:	f8cc 3000 	str.w	r3, [ip]
900135d4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
900135d8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
900135dc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900135e0:	f8de 3000 	ldr.w	r3, [lr]
900135e4:	f8cc 3000 	str.w	r3, [ip]
900135e8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
900135ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900135ee:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900135f2:	6823      	ldr	r3, [r4, #0]
900135f4:	4631      	mov	r1, r6
900135f6:	4628      	mov	r0, r5
900135f8:	f8cc 3000 	str.w	r3, [ip]
900135fc:	682b      	ldr	r3, [r5, #0]
900135fe:	e9cd 9a03 	strd	r9, sl, [sp, #12]
90013602:	9a21      	ldr	r2, [sp, #132]	; 0x84
90013604:	f8cd 8008 	str.w	r8, [sp, #8]
90013608:	9201      	str	r2, [sp, #4]
9001360a:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001360c:	9200      	str	r2, [sp, #0]
9001360e:	aa07      	add	r2, sp, #28
90013610:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
90013612:	463b      	mov	r3, r7
90013614:	47a0      	blx	r4
90013616:	b017      	add	sp, #92	; 0x5c
90013618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001361c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
9001361c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013620:	b08d      	sub	sp, #52	; 0x34
90013622:	4688      	mov	r8, r1
90013624:	f8d3 c000 	ldr.w	ip, [r3]
90013628:	9916      	ldr	r1, [sp, #88]	; 0x58
9001362a:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
9001362e:	680f      	ldr	r7, [r1, #0]
90013630:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
90013634:	eba7 070c 	sub.w	r7, r7, ip
90013638:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
9001363c:	edd3 6a07 	vldr	s13, [r3, #28]
90013640:	42bc      	cmp	r4, r7
90013642:	9918      	ldr	r1, [sp, #96]	; 0x60
90013644:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
90013648:	bfa8      	it	ge
9001364a:	463c      	movge	r4, r7
9001364c:	f9b1 9000 	ldrsh.w	r9, [r1]
90013650:	f9ba 1000 	ldrsh.w	r1, [sl]
90013654:	ee07 4a90 	vmov	s15, r4
90013658:	eb09 0e0c 	add.w	lr, r9, ip
9001365c:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
90013660:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90013664:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
90013668:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
9001366c:	4571      	cmp	r1, lr
9001366e:	ee25 4a04 	vmul.f32	s8, s10, s8
90013672:	ee65 4a24 	vmul.f32	s9, s10, s9
90013676:	ee25 5a27 	vmul.f32	s10, s10, s15
9001367a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
9001367e:	ee71 0aa4 	vadd.f32	s1, s3, s9
90013682:	ee32 1a05 	vadd.f32	s2, s4, s10
90013686:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9001368a:	ee36 0a84 	vadd.f32	s0, s13, s8
9001368e:	ee61 1a87 	vmul.f32	s3, s3, s14
90013692:	ee22 2a07 	vmul.f32	s4, s4, s14
90013696:	f340 808c 	ble.w	900137b2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
9001369a:	eba1 060e 	sub.w	r6, r1, lr
9001369e:	fb96 f5f4 	sdiv	r5, r6, r4
900136a2:	ee07 5a10 	vmov	s14, r5
900136a6:	2d00      	cmp	r5, #0
900136a8:	fb04 6615 	mls	r6, r4, r5, r6
900136ac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900136b0:	eea7 0a04 	vfma.f32	s0, s14, s8
900136b4:	eee7 0a24 	vfma.f32	s1, s14, s9
900136b8:	eea7 1a05 	vfma.f32	s2, s14, s10
900136bc:	dd12      	ble.n	900136e4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
900136be:	ee70 6a44 	vsub.f32	s13, s0, s8
900136c2:	ee70 1ae4 	vsub.f32	s3, s1, s9
900136c6:	ee31 2a45 	vsub.f32	s4, s2, s10
900136ca:	eef5 6a40 	vcmp.f32	s13, #0.0
900136ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900136d2:	bf14      	ite	ne
900136d4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
900136d8:	eeb0 7a67 	vmoveq.f32	s14, s15
900136dc:	ee61 1a87 	vmul.f32	s3, s3, s14
900136e0:	ee22 2a07 	vmul.f32	s4, s4, s14
900136e4:	fb05 f204 	mul.w	r2, r5, r4
900136e8:	1abf      	subs	r7, r7, r2
900136ea:	4494      	add	ip, r2
900136ec:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900136f0:	4411      	add	r1, r2
900136f2:	eb09 020c 	add.w	r2, r9, ip
900136f6:	b209      	sxth	r1, r1
900136f8:	443a      	add	r2, r7
900136fa:	428a      	cmp	r2, r1
900136fc:	bfc4      	itt	gt
900136fe:	eba1 0209 	subgt.w	r2, r1, r9
90013702:	eba2 070c 	subgt.w	r7, r2, ip
90013706:	2f00      	cmp	r7, #0
90013708:	dd50      	ble.n	900137ac <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
9001370a:	fb97 f1f4 	sdiv	r1, r7, r4
9001370e:	fb04 7211 	mls	r2, r4, r1, r7
90013712:	b90a      	cbnz	r2, 90013718 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
90013714:	3901      	subs	r1, #1
90013716:	4622      	mov	r2, r4
90013718:	eec7 3a80 	vdiv.f32	s7, s15, s0
9001371c:	6840      	ldr	r0, [r0, #4]
9001371e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
90013722:	44b6      	add	lr, r6
90013724:	f8d0 a000 	ldr.w	sl, [r0]
90013728:	2900      	cmp	r1, #0
9001372a:	bfcc      	ite	gt
9001372c:	46a1      	movgt	r9, r4
9001372e:	4691      	movle	r9, r2
90013730:	900b      	str	r0, [sp, #44]	; 0x2c
90013732:	9817      	ldr	r0, [sp, #92]	; 0x5c
90013734:	fb04 e505 	mla	r5, r4, r5, lr
90013738:	eef0 6a42 	vmov.f32	s13, s4
9001373c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
90013740:	9008      	str	r0, [sp, #32]
90013742:	eeb0 7a61 	vmov.f32	s14, s3
90013746:	9818      	ldr	r0, [sp, #96]	; 0x60
90013748:	695b      	ldr	r3, [r3, #20]
9001374a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001374e:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90013752:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90013756:	980b      	ldr	r0, [sp, #44]	; 0x2c
90013758:	445b      	add	r3, fp
9001375a:	9307      	str	r3, [sp, #28]
9001375c:	ee16 3a90 	vmov	r3, s13
90013760:	e9cd 8505 	strd	r8, r5, [sp, #20]
90013764:	ee60 2aa3 	vmul.f32	s5, s1, s7
90013768:	ee21 3a23 	vmul.f32	s6, s2, s7
9001376c:	ee72 7ae1 	vsub.f32	s15, s5, s3
90013770:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013774:	ee17 7a90 	vmov	r7, s15
90013778:	ee73 7a42 	vsub.f32	s15, s6, s4
9001377c:	fb97 f7f4 	sdiv	r7, r7, r4
90013780:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90013784:	ee17 ca90 	vmov	ip, s15
90013788:	fb9c fcf4 	sdiv	ip, ip, r4
9001378c:	fb0c 3306 	mla	r3, ip, r6, r3
90013790:	9302      	str	r3, [sp, #8]
90013792:	ee17 3a10 	vmov	r3, s14
90013796:	e9cd 7c03 	strd	r7, ip, [sp, #12]
9001379a:	fb07 3706 	mla	r7, r7, r6, r3
9001379e:	eba9 0306 	sub.w	r3, r9, r6
900137a2:	e9cd 4700 	strd	r4, r7, [sp]
900137a6:	f8da 4008 	ldr.w	r4, [sl, #8]
900137aa:	47a0      	blx	r4
900137ac:	b00d      	add	sp, #52	; 0x34
900137ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900137b2:	2500      	movs	r5, #0
900137b4:	462e      	mov	r6, r5
900137b6:	e799      	b.n	900136ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

900137b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900137b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900137bc:	b0db      	sub	sp, #364	; 0x16c
900137be:	461d      	mov	r5, r3
900137c0:	4614      	mov	r4, r2
900137c2:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
900137c6:	910f      	str	r1, [sp, #60]	; 0x3c
900137c8:	4629      	mov	r1, r5
900137ca:	930a      	str	r3, [sp, #40]	; 0x28
900137cc:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
900137d0:	9009      	str	r0, [sp, #36]	; 0x24
900137d2:	930b      	str	r3, [sp, #44]	; 0x2c
900137d4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
900137d8:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
900137dc:	9310      	str	r3, [sp, #64]	; 0x40
900137de:	6803      	ldr	r3, [r0, #0]
900137e0:	6c5f      	ldr	r7, [r3, #68]	; 0x44
900137e2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
900137e6:	47b8      	blx	r7
900137e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900137ea:	6058      	str	r0, [r3, #4]
900137ec:	2800      	cmp	r0, #0
900137ee:	f000 83a1 	beq.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900137f2:	682b      	ldr	r3, [r5, #0]
900137f4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
900137f8:	ed94 7a02 	vldr	s14, [r4, #8]
900137fc:	9314      	str	r3, [sp, #80]	; 0x50
900137fe:	686b      	ldr	r3, [r5, #4]
90013800:	eeb4 7ae7 	vcmpe.f32	s14, s15
90013804:	9315      	str	r3, [sp, #84]	; 0x54
90013806:	4bc1      	ldr	r3, [pc, #772]	; (90013b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90013808:	7819      	ldrb	r1, [r3, #0]
9001380a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
9001380e:	2900      	cmp	r1, #0
90013810:	bf16      	itet	ne
90013812:	4619      	movne	r1, r3
90013814:	4611      	moveq	r1, r2
90013816:	4613      	movne	r3, r2
90013818:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001381c:	9116      	str	r1, [sp, #88]	; 0x58
9001381e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
90013822:	f240 8387 	bls.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013826:	ed94 7a07 	vldr	s14, [r4, #28]
9001382a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001382e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013832:	f240 837f 	bls.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013836:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
9001383a:	eeb4 7ae7 	vcmpe.f32	s14, s15
9001383e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90013842:	f240 8377 	bls.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013846:	6822      	ldr	r2, [r4, #0]
90013848:	4bb1      	ldr	r3, [pc, #708]	; (90013b10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
9001384a:	429a      	cmp	r2, r3
9001384c:	f2c0 8372 	blt.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013850:	49b0      	ldr	r1, [pc, #704]	; (90013b14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90013852:	6963      	ldr	r3, [r4, #20]
90013854:	428a      	cmp	r2, r1
90013856:	f300 836d 	bgt.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
9001385a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
9001385e:	48ae      	ldr	r0, [pc, #696]	; (90013b18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90013860:	33ff      	adds	r3, #255	; 0xff
90013862:	4283      	cmp	r3, r0
90013864:	f200 8366 	bhi.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013868:	6aa3      	ldr	r3, [r4, #40]	; 0x28
9001386a:	4dac      	ldr	r5, [pc, #688]	; (90013b1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
9001386c:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
90013870:	33ff      	adds	r3, #255	; 0xff
90013872:	42ab      	cmp	r3, r5
90013874:	f200 835e 	bhi.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013878:	6862      	ldr	r2, [r4, #4]
9001387a:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
9001387e:	33ff      	adds	r3, #255	; 0xff
90013880:	4283      	cmp	r3, r0
90013882:	f200 8357 	bhi.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013886:	69a1      	ldr	r1, [r4, #24]
90013888:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
9001388c:	33ff      	adds	r3, #255	; 0xff
9001388e:	4283      	cmp	r3, r0
90013890:	f200 8350 	bhi.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013894:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
90013896:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
9001389a:	30ff      	adds	r0, #255	; 0xff
9001389c:	42a8      	cmp	r0, r5
9001389e:	f200 8349 	bhi.w	90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900138a2:	428a      	cmp	r2, r1
900138a4:	f280 8110 	bge.w	90013ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
900138a8:	429a      	cmp	r2, r3
900138aa:	f300 8119 	bgt.w	90013ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
900138ae:	4299      	cmp	r1, r3
900138b0:	f280 811d 	bge.w	90013aee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
900138b4:	2502      	movs	r5, #2
900138b6:	2701      	movs	r7, #1
900138b8:	46a9      	mov	r9, r5
900138ba:	46b8      	mov	r8, r7
900138bc:	f04f 0a00 	mov.w	sl, #0
900138c0:	4621      	mov	r1, r4
900138c2:	a849      	add	r0, sp, #292	; 0x124
900138c4:	f003 fe26 	bl	90017514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
900138c8:	4622      	mov	r2, r4
900138ca:	4653      	mov	r3, sl
900138cc:	a949      	add	r1, sp, #292	; 0x124
900138ce:	f8cd 9000 	str.w	r9, [sp]
900138d2:	a819      	add	r0, sp, #100	; 0x64
900138d4:	f003 ff4e 	bl	90017774 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900138d8:	4622      	mov	r2, r4
900138da:	4653      	mov	r3, sl
900138dc:	a949      	add	r1, sp, #292	; 0x124
900138de:	f8cd 8000 	str.w	r8, [sp]
900138e2:	a829      	add	r0, sp, #164	; 0xa4
900138e4:	f003 ff46 	bl	90017774 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900138e8:	4643      	mov	r3, r8
900138ea:	4622      	mov	r2, r4
900138ec:	a949      	add	r1, sp, #292	; 0x124
900138ee:	f8cd 9000 	str.w	r9, [sp]
900138f2:	a839      	add	r0, sp, #228	; 0xe4
900138f4:	f003 ff3e 	bl	90017774 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
900138f8:	42af      	cmp	r7, r5
900138fa:	af12      	add	r7, sp, #72	; 0x48
900138fc:	bfb7      	itett	lt
900138fe:	2300      	movlt	r3, #0
90013900:	2301      	movge	r3, #1
90013902:	ad29      	addlt	r5, sp, #164	; 0xa4
90013904:	ac19      	addlt	r4, sp, #100	; 0x64
90013906:	bfb1      	iteee	lt
90013908:	930e      	strlt	r3, [sp, #56]	; 0x38
9001390a:	ad19      	addge	r5, sp, #100	; 0x64
9001390c:	930e      	strge	r3, [sp, #56]	; 0x38
9001390e:	ac29      	addge	r4, sp, #164	; 0xa4
90013910:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013912:	e893 0003 	ldmia.w	r3, {r0, r1}
90013916:	e887 0003 	stmia.w	r7, {r0, r1}
9001391a:	b928      	cbnz	r0, 90013928 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
9001391c:	4b80      	ldr	r3, [pc, #512]	; (90013b20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
9001391e:	6818      	ldr	r0, [r3, #0]
90013920:	6803      	ldr	r3, [r0, #0]
90013922:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90013924:	4798      	blx	r3
90013926:	6038      	str	r0, [r7, #0]
90013928:	9b64      	ldr	r3, [sp, #400]	; 0x190
9001392a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
9001392e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013932:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
90013934:	930c      	str	r3, [sp, #48]	; 0x30
90013936:	990c      	ldr	r1, [sp, #48]	; 0x30
90013938:	6963      	ldr	r3, [r4, #20]
9001393a:	440b      	add	r3, r1
9001393c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013940:	4408      	add	r0, r1
90013942:	b200      	sxth	r0, r0
90013944:	4283      	cmp	r3, r0
90013946:	900d      	str	r0, [sp, #52]	; 0x34
90013948:	f280 80dd 	bge.w	90013b06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
9001394c:	428b      	cmp	r3, r1
9001394e:	da08      	bge.n	90013962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013950:	2a00      	cmp	r2, #0
90013952:	dd06      	ble.n	90013962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013954:	1acb      	subs	r3, r1, r3
90013956:	429a      	cmp	r2, r3
90013958:	f2c0 80e4 	blt.w	90013b24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
9001395c:	2b00      	cmp	r3, #0
9001395e:	f300 80e2 	bgt.w	90013b26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90013962:	6967      	ldr	r7, [r4, #20]
90013964:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90013968:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001396a:	443b      	add	r3, r7
9001396c:	461f      	mov	r7, r3
9001396e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013970:	1bdf      	subs	r7, r3, r7
90013972:	4297      	cmp	r7, r2
90013974:	bfa8      	it	ge
90013976:	4617      	movge	r7, r2
90013978:	2f00      	cmp	r7, #0
9001397a:	f340 8166 	ble.w	90013c4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
9001397e:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013980:	6829      	ldr	r1, [r5, #0]
90013982:	f9b3 2000 	ldrsh.w	r2, [r3]
90013986:	f9bb 3000 	ldrsh.w	r3, [fp]
9001398a:	4411      	add	r1, r2
9001398c:	6820      	ldr	r0, [r4, #0]
9001398e:	4299      	cmp	r1, r3
90013990:	dd1a      	ble.n	900139c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90013992:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013996:	4402      	add	r2, r0
90013998:	440b      	add	r3, r1
9001399a:	b21b      	sxth	r3, r3
9001399c:	429a      	cmp	r2, r3
9001399e:	dc13      	bgt.n	900139c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
900139a0:	9a10      	ldr	r2, [sp, #64]	; 0x40
900139a2:	a912      	add	r1, sp, #72	; 0x48
900139a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
900139a6:	9809      	ldr	r0, [sp, #36]	; 0x24
900139a8:	681b      	ldr	r3, [r3, #0]
900139aa:	9206      	str	r2, [sp, #24]
900139ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900139ae:	9500      	str	r5, [sp, #0]
900139b0:	9205      	str	r2, [sp, #20]
900139b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900139b4:	e9cd b203 	strd	fp, r2, [sp, #12]
900139b8:	9a64      	ldr	r2, [sp, #400]	; 0x190
900139ba:	e9cd 8201 	strd	r8, r2, [sp, #4]
900139be:	aa49      	add	r2, sp, #292	; 0x124
900139c0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
900139c4:	4623      	mov	r3, r4
900139c6:	47c8      	blx	r9
900139c8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
900139cc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
900139d0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
900139d4:	ee37 7a27 	vadd.f32	s14, s14, s15
900139d8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
900139dc:	68a1      	ldr	r1, [r4, #8]
900139de:	ee77 7aa6 	vadd.f32	s15, s15, s13
900139e2:	ed94 6a08 	vldr	s12, [r4, #32]
900139e6:	edd4 6a07 	vldr	s13, [r4, #28]
900139ea:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
900139ee:	ee76 6a86 	vadd.f32	s13, s13, s12
900139f2:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
900139f6:	e9d4 2300 	ldrd	r2, r3, [r4]
900139fa:	edc4 6a07 	vstr	s13, [r4, #28]
900139fe:	441a      	add	r2, r3
90013a00:	6963      	ldr	r3, [r4, #20]
90013a02:	3301      	adds	r3, #1
90013a04:	6022      	str	r2, [r4, #0]
90013a06:	6163      	str	r3, [r4, #20]
90013a08:	69a3      	ldr	r3, [r4, #24]
90013a0a:	3b01      	subs	r3, #1
90013a0c:	61a3      	str	r3, [r4, #24]
90013a0e:	6923      	ldr	r3, [r4, #16]
90013a10:	440b      	add	r3, r1
90013a12:	68e1      	ldr	r1, [r4, #12]
90013a14:	428b      	cmp	r3, r1
90013a16:	6123      	str	r3, [r4, #16]
90013a18:	db15      	blt.n	90013a46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90013a1a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013a1e:	3201      	adds	r2, #1
90013a20:	1a5b      	subs	r3, r3, r1
90013a22:	ee76 6a26 	vadd.f32	s13, s12, s13
90013a26:	6022      	str	r2, [r4, #0]
90013a28:	6123      	str	r3, [r4, #16]
90013a2a:	edc4 6a07 	vstr	s13, [r4, #28]
90013a2e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013a32:	ee36 7a87 	vadd.f32	s14, s13, s14
90013a36:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013a3a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013a3e:	ee77 7a27 	vadd.f32	s15, s14, s15
90013a42:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013a46:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013a4a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013a4e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013a52:	ee37 7a27 	vadd.f32	s14, s14, s15
90013a56:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013a5a:	68a9      	ldr	r1, [r5, #8]
90013a5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013a60:	ed95 6a08 	vldr	s12, [r5, #32]
90013a64:	edd5 6a07 	vldr	s13, [r5, #28]
90013a68:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013a6c:	ee76 6a86 	vadd.f32	s13, s13, s12
90013a70:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013a74:	e9d5 2300 	ldrd	r2, r3, [r5]
90013a78:	edc5 6a07 	vstr	s13, [r5, #28]
90013a7c:	441a      	add	r2, r3
90013a7e:	696b      	ldr	r3, [r5, #20]
90013a80:	3301      	adds	r3, #1
90013a82:	602a      	str	r2, [r5, #0]
90013a84:	616b      	str	r3, [r5, #20]
90013a86:	69ab      	ldr	r3, [r5, #24]
90013a88:	3b01      	subs	r3, #1
90013a8a:	61ab      	str	r3, [r5, #24]
90013a8c:	692b      	ldr	r3, [r5, #16]
90013a8e:	440b      	add	r3, r1
90013a90:	68e9      	ldr	r1, [r5, #12]
90013a92:	428b      	cmp	r3, r1
90013a94:	612b      	str	r3, [r5, #16]
90013a96:	db15      	blt.n	90013ac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90013a98:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013a9c:	3201      	adds	r2, #1
90013a9e:	1a5b      	subs	r3, r3, r1
90013aa0:	ee76 6a26 	vadd.f32	s13, s12, s13
90013aa4:	602a      	str	r2, [r5, #0]
90013aa6:	612b      	str	r3, [r5, #16]
90013aa8:	edc5 6a07 	vstr	s13, [r5, #28]
90013aac:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013ab0:	ee36 7a87 	vadd.f32	s14, s13, s14
90013ab4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013ab8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013abc:	ee77 7a27 	vadd.f32	s15, s14, s15
90013ac0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013ac4:	3f01      	subs	r7, #1
90013ac6:	e757      	b.n	90013978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90013ac8:	4299      	cmp	r1, r3
90013aca:	dc13      	bgt.n	90013af4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90013acc:	429a      	cmp	r2, r3
90013ace:	da14      	bge.n	90013afa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90013ad0:	2502      	movs	r5, #2
90013ad2:	2703      	movs	r7, #3
90013ad4:	f04f 0800 	mov.w	r8, #0
90013ad8:	46a9      	mov	r9, r5
90013ada:	f04f 0a01 	mov.w	sl, #1
90013ade:	e6ef      	b.n	900138c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013ae0:	2501      	movs	r5, #1
90013ae2:	2700      	movs	r7, #0
90013ae4:	46a9      	mov	r9, r5
90013ae6:	46b8      	mov	r8, r7
90013ae8:	f04f 0a02 	mov.w	sl, #2
90013aec:	e6e8      	b.n	900138c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90013aee:	2501      	movs	r5, #1
90013af0:	2702      	movs	r7, #2
90013af2:	e6e1      	b.n	900138b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90013af4:	2500      	movs	r5, #0
90013af6:	2701      	movs	r7, #1
90013af8:	e7f4      	b.n	90013ae4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90013afa:	2702      	movs	r7, #2
90013afc:	2503      	movs	r5, #3
90013afe:	f04f 0900 	mov.w	r9, #0
90013b02:	46b8      	mov	r8, r7
90013b04:	e7e9      	b.n	90013ada <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90013b06:	4613      	mov	r3, r2
90013b08:	e728      	b.n	9001395c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90013b0a:	bf00      	nop
90013b0c:	24023574 	.word	0x24023574
90013b10:	fffd8f01 	.word	0xfffd8f01
90013b14:	00027100 	.word	0x00027100
90013b18:	0004e1ff 	.word	0x0004e1ff
90013b1c:	0004e1fe 	.word	0x0004e1fe
90013b20:	2402357c 	.word	0x2402357c
90013b24:	4613      	mov	r3, r2
90013b26:	992b      	ldr	r1, [sp, #172]	; 0xac
90013b28:	469e      	mov	lr, r3
90013b2a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
90013b2c:	469c      	mov	ip, r3
90013b2e:	9111      	str	r1, [sp, #68]	; 0x44
90013b30:	f04f 0900 	mov.w	r9, #0
90013b34:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
90013b38:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
90013b3c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
90013b40:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
90013b44:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
90013b48:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
90013b4c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
90013b50:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
90013b54:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
90013b58:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
90013b5c:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
90013b60:	f1bc 0f00 	cmp.w	ip, #0
90013b64:	d147      	bne.n	90013bf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90013b66:	eb03 0c07 	add.w	ip, r3, r7
90013b6a:	1ad7      	subs	r7, r2, r3
90013b6c:	f1b9 0f00 	cmp.w	r9, #0
90013b70:	d009      	beq.n	90013b86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90013b72:	9029      	str	r0, [sp, #164]	; 0xa4
90013b74:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
90013b78:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
90013b7c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
90013b80:	912d      	str	r1, [sp, #180]	; 0xb4
90013b82:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
90013b86:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013b88:	f04f 0800 	mov.w	r8, #0
90013b8c:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013b90:	9111      	str	r1, [sp, #68]	; 0x44
90013b92:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013b96:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013b9a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013b9e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013ba2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013ba6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013baa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013bae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013bb2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013bb6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013bba:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013bbe:	f1be 0f00 	cmp.w	lr, #0
90013bc2:	d031      	beq.n	90013c28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90013bc4:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013bc6:	4450      	add	r0, sl
90013bc8:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013bcc:	4431      	add	r1, r6
90013bce:	ee37 7a04 	vadd.f32	s14, s14, s8
90013bd2:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013bd6:	4549      	cmp	r1, r9
90013bd8:	db08      	blt.n	90013bec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90013bda:	ee77 7a85 	vadd.f32	s15, s15, s10
90013bde:	3001      	adds	r0, #1
90013be0:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013be4:	eba1 0109 	sub.w	r1, r1, r9
90013be8:	ee37 7a06 	vadd.f32	s14, s14, s12
90013bec:	f10e 3eff 	add.w	lr, lr, #4294967295
90013bf0:	f04f 0801 	mov.w	r8, #1
90013bf4:	e7e3      	b.n	90013bbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90013bf6:	9e11      	ldr	r6, [sp, #68]	; 0x44
90013bf8:	4450      	add	r0, sl
90013bfa:	ee37 7a24 	vadd.f32	s14, s14, s9
90013bfe:	4431      	add	r1, r6
90013c00:	ee77 7a84 	vadd.f32	s15, s15, s8
90013c04:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013c08:	4541      	cmp	r1, r8
90013c0a:	db08      	blt.n	90013c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90013c0c:	ee76 6a85 	vadd.f32	s13, s13, s10
90013c10:	3001      	adds	r0, #1
90013c12:	ee37 7a25 	vadd.f32	s14, s14, s11
90013c16:	eba1 0108 	sub.w	r1, r1, r8
90013c1a:	ee77 7a86 	vadd.f32	s15, s15, s12
90013c1e:	f10c 3cff 	add.w	ip, ip, #4294967295
90013c22:	f04f 0901 	mov.w	r9, #1
90013c26:	e79b      	b.n	90013b60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90013c28:	449c      	add	ip, r3
90013c2a:	1aff      	subs	r7, r7, r3
90013c2c:	f1b8 0f00 	cmp.w	r8, #0
90013c30:	d009      	beq.n	90013c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90013c32:	9019      	str	r0, [sp, #100]	; 0x64
90013c34:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013c38:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013c3c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013c40:	911d      	str	r1, [sp, #116]	; 0x74
90013c42:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013c46:	1ad2      	subs	r2, r2, r3
90013c48:	e68b      	b.n	90013962 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90013c4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90013c4c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
90013c4e:	2b00      	cmp	r3, #0
90013c50:	f000 80d1 	beq.w	90013df6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90013c54:	ad19      	add	r5, sp, #100	; 0x64
90013c56:	ac39      	add	r4, sp, #228	; 0xe4
90013c58:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013c5a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90013c5e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90013c62:	930c      	str	r3, [sp, #48]	; 0x30
90013c64:	990c      	ldr	r1, [sp, #48]	; 0x30
90013c66:	6963      	ldr	r3, [r4, #20]
90013c68:	440b      	add	r3, r1
90013c6a:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90013c6e:	4408      	add	r0, r1
90013c70:	b200      	sxth	r0, r0
90013c72:	4283      	cmp	r3, r0
90013c74:	900d      	str	r0, [sp, #52]	; 0x34
90013c76:	f280 80c1 	bge.w	90013dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90013c7a:	428b      	cmp	r3, r1
90013c7c:	da08      	bge.n	90013c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013c7e:	2a00      	cmp	r2, #0
90013c80:	dd06      	ble.n	90013c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013c82:	1acb      	subs	r3, r1, r3
90013c84:	429a      	cmp	r2, r3
90013c86:	f2c0 80bb 	blt.w	90013e00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90013c8a:	2b00      	cmp	r3, #0
90013c8c:	f300 80b9 	bgt.w	90013e02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90013c90:	6967      	ldr	r7, [r4, #20]
90013c92:	f10d 0850 	add.w	r8, sp, #80	; 0x50
90013c96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90013c98:	443b      	add	r3, r7
90013c9a:	461f      	mov	r7, r3
90013c9c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90013c9e:	1bdf      	subs	r7, r3, r7
90013ca0:	4297      	cmp	r7, r2
90013ca2:	bfa8      	it	ge
90013ca4:	4617      	movge	r7, r2
90013ca6:	2f00      	cmp	r7, #0
90013ca8:	f340 813c 	ble.w	90013f24 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90013cac:	9b64      	ldr	r3, [sp, #400]	; 0x190
90013cae:	6829      	ldr	r1, [r5, #0]
90013cb0:	f9b3 2000 	ldrsh.w	r2, [r3]
90013cb4:	f9bb 3000 	ldrsh.w	r3, [fp]
90013cb8:	4411      	add	r1, r2
90013cba:	6820      	ldr	r0, [r4, #0]
90013cbc:	4299      	cmp	r1, r3
90013cbe:	dd1a      	ble.n	90013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013cc0:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90013cc4:	4402      	add	r2, r0
90013cc6:	440b      	add	r3, r1
90013cc8:	b21b      	sxth	r3, r3
90013cca:	429a      	cmp	r2, r3
90013ccc:	dc13      	bgt.n	90013cf6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90013cce:	9a10      	ldr	r2, [sp, #64]	; 0x40
90013cd0:	a912      	add	r1, sp, #72	; 0x48
90013cd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90013cd4:	9809      	ldr	r0, [sp, #36]	; 0x24
90013cd6:	681b      	ldr	r3, [r3, #0]
90013cd8:	9206      	str	r2, [sp, #24]
90013cda:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90013cdc:	9500      	str	r5, [sp, #0]
90013cde:	9205      	str	r2, [sp, #20]
90013ce0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90013ce2:	e9cd b203 	strd	fp, r2, [sp, #12]
90013ce6:	9a64      	ldr	r2, [sp, #400]	; 0x190
90013ce8:	e9cd 8201 	strd	r8, r2, [sp, #4]
90013cec:	aa49      	add	r2, sp, #292	; 0x124
90013cee:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
90013cf2:	4623      	mov	r3, r4
90013cf4:	47c8      	blx	r9
90013cf6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
90013cfa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
90013cfe:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
90013d02:	ee37 7a27 	vadd.f32	s14, s14, s15
90013d06:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
90013d0a:	68a1      	ldr	r1, [r4, #8]
90013d0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013d10:	ed94 6a08 	vldr	s12, [r4, #32]
90013d14:	edd4 6a07 	vldr	s13, [r4, #28]
90013d18:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013d1c:	ee76 6a86 	vadd.f32	s13, s13, s12
90013d20:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013d24:	e9d4 2300 	ldrd	r2, r3, [r4]
90013d28:	edc4 6a07 	vstr	s13, [r4, #28]
90013d2c:	441a      	add	r2, r3
90013d2e:	6963      	ldr	r3, [r4, #20]
90013d30:	3301      	adds	r3, #1
90013d32:	6022      	str	r2, [r4, #0]
90013d34:	6163      	str	r3, [r4, #20]
90013d36:	69a3      	ldr	r3, [r4, #24]
90013d38:	3b01      	subs	r3, #1
90013d3a:	61a3      	str	r3, [r4, #24]
90013d3c:	6923      	ldr	r3, [r4, #16]
90013d3e:	440b      	add	r3, r1
90013d40:	68e1      	ldr	r1, [r4, #12]
90013d42:	428b      	cmp	r3, r1
90013d44:	6123      	str	r3, [r4, #16]
90013d46:	db15      	blt.n	90013d74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90013d48:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
90013d4c:	3201      	adds	r2, #1
90013d4e:	1a5b      	subs	r3, r3, r1
90013d50:	ee76 6a26 	vadd.f32	s13, s12, s13
90013d54:	6022      	str	r2, [r4, #0]
90013d56:	6123      	str	r3, [r4, #16]
90013d58:	edc4 6a07 	vstr	s13, [r4, #28]
90013d5c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
90013d60:	ee36 7a87 	vadd.f32	s14, s13, s14
90013d64:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
90013d68:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
90013d6c:	ee77 7a27 	vadd.f32	s15, s14, s15
90013d70:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
90013d74:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
90013d78:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
90013d7c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
90013d80:	ee37 7a27 	vadd.f32	s14, s14, s15
90013d84:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
90013d88:	68a9      	ldr	r1, [r5, #8]
90013d8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90013d8e:	ed95 6a08 	vldr	s12, [r5, #32]
90013d92:	edd5 6a07 	vldr	s13, [r5, #28]
90013d96:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013d9a:	ee76 6a86 	vadd.f32	s13, s13, s12
90013d9e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013da2:	e9d5 2300 	ldrd	r2, r3, [r5]
90013da6:	edc5 6a07 	vstr	s13, [r5, #28]
90013daa:	441a      	add	r2, r3
90013dac:	696b      	ldr	r3, [r5, #20]
90013dae:	3301      	adds	r3, #1
90013db0:	602a      	str	r2, [r5, #0]
90013db2:	616b      	str	r3, [r5, #20]
90013db4:	69ab      	ldr	r3, [r5, #24]
90013db6:	3b01      	subs	r3, #1
90013db8:	61ab      	str	r3, [r5, #24]
90013dba:	692b      	ldr	r3, [r5, #16]
90013dbc:	440b      	add	r3, r1
90013dbe:	68e9      	ldr	r1, [r5, #12]
90013dc0:	428b      	cmp	r3, r1
90013dc2:	612b      	str	r3, [r5, #16]
90013dc4:	db15      	blt.n	90013df2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90013dc6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
90013dca:	3201      	adds	r2, #1
90013dcc:	1a5b      	subs	r3, r3, r1
90013dce:	ee76 6a26 	vadd.f32	s13, s12, s13
90013dd2:	602a      	str	r2, [r5, #0]
90013dd4:	612b      	str	r3, [r5, #16]
90013dd6:	edc5 6a07 	vstr	s13, [r5, #28]
90013dda:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
90013dde:	ee36 7a87 	vadd.f32	s14, s13, s14
90013de2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
90013de6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
90013dea:	ee77 7a27 	vadd.f32	s15, s14, s15
90013dee:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
90013df2:	3f01      	subs	r7, #1
90013df4:	e757      	b.n	90013ca6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
90013df6:	ad39      	add	r5, sp, #228	; 0xe4
90013df8:	ac19      	add	r4, sp, #100	; 0x64
90013dfa:	e72d      	b.n	90013c58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
90013dfc:	4613      	mov	r3, r2
90013dfe:	e744      	b.n	90013c8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
90013e00:	4613      	mov	r3, r2
90013e02:	9e3b      	ldr	r6, [sp, #236]	; 0xec
90013e04:	469e      	mov	lr, r3
90013e06:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
90013e0a:	461f      	mov	r7, r3
90013e0c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
90013e10:	f04f 0900 	mov.w	r9, #0
90013e14:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
90013e18:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
90013e1c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
90013e20:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
90013e24:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
90013e28:	993d      	ldr	r1, [sp, #244]	; 0xf4
90013e2a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
90013e2e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
90013e32:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
90013e36:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
90013e3a:	960e      	str	r6, [sp, #56]	; 0x38
90013e3c:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
90013e40:	2f00      	cmp	r7, #0
90013e42:	d146      	bne.n	90013ed2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90013e44:	449c      	add	ip, r3
90013e46:	1ad7      	subs	r7, r2, r3
90013e48:	f1b9 0f00 	cmp.w	r9, #0
90013e4c:	d009      	beq.n	90013e62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
90013e4e:	9039      	str	r0, [sp, #228]	; 0xe4
90013e50:	913d      	str	r1, [sp, #244]	; 0xf4
90013e52:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
90013e56:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
90013e5a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
90013e5e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
90013e62:	991b      	ldr	r1, [sp, #108]	; 0x6c
90013e64:	f04f 0800 	mov.w	r8, #0
90013e68:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
90013e6c:	910e      	str	r1, [sp, #56]	; 0x38
90013e6e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
90013e72:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
90013e76:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
90013e7a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
90013e7e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
90013e82:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
90013e86:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
90013e8a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
90013e8e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
90013e92:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
90013e96:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
90013e9a:	f1be 0f00 	cmp.w	lr, #0
90013e9e:	d030      	beq.n	90013f02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
90013ea0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013ea2:	4450      	add	r0, sl
90013ea4:	ee76 6aa4 	vadd.f32	s13, s13, s9
90013ea8:	4431      	add	r1, r6
90013eaa:	ee37 7a04 	vadd.f32	s14, s14, s8
90013eae:	ee77 7aa3 	vadd.f32	s15, s15, s7
90013eb2:	4549      	cmp	r1, r9
90013eb4:	db08      	blt.n	90013ec8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90013eb6:	ee77 7a85 	vadd.f32	s15, s15, s10
90013eba:	3001      	adds	r0, #1
90013ebc:	ee76 6aa5 	vadd.f32	s13, s13, s11
90013ec0:	eba1 0109 	sub.w	r1, r1, r9
90013ec4:	ee37 7a06 	vadd.f32	s14, s14, s12
90013ec8:	f10e 3eff 	add.w	lr, lr, #4294967295
90013ecc:	f04f 0801 	mov.w	r8, #1
90013ed0:	e7e3      	b.n	90013e9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
90013ed2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
90013ed4:	4450      	add	r0, sl
90013ed6:	ee37 7a24 	vadd.f32	s14, s14, s9
90013eda:	4431      	add	r1, r6
90013edc:	ee77 7a84 	vadd.f32	s15, s15, s8
90013ee0:	ee76 6aa3 	vadd.f32	s13, s13, s7
90013ee4:	4541      	cmp	r1, r8
90013ee6:	db08      	blt.n	90013efa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
90013ee8:	ee76 6a85 	vadd.f32	s13, s13, s10
90013eec:	3001      	adds	r0, #1
90013eee:	ee37 7a25 	vadd.f32	s14, s14, s11
90013ef2:	eba1 0108 	sub.w	r1, r1, r8
90013ef6:	ee77 7a86 	vadd.f32	s15, s15, s12
90013efa:	3f01      	subs	r7, #1
90013efc:	f04f 0901 	mov.w	r9, #1
90013f00:	e79e      	b.n	90013e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
90013f02:	449c      	add	ip, r3
90013f04:	1aff      	subs	r7, r7, r3
90013f06:	f1b8 0f00 	cmp.w	r8, #0
90013f0a:	d009      	beq.n	90013f20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
90013f0c:	9019      	str	r0, [sp, #100]	; 0x64
90013f0e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
90013f12:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
90013f16:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
90013f1a:	911d      	str	r1, [sp, #116]	; 0x74
90013f1c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
90013f20:	1ad2      	subs	r2, r2, r3
90013f22:	e6b5      	b.n	90013c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90013f24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90013f26:	681b      	ldr	r3, [r3, #0]
90013f28:	b923      	cbnz	r3, 90013f34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90013f2a:	4b04      	ldr	r3, [pc, #16]	; (90013f3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
90013f2c:	6818      	ldr	r0, [r3, #0]
90013f2e:	6803      	ldr	r3, [r0, #0]
90013f30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90013f32:	4798      	blx	r3
90013f34:	b05b      	add	sp, #364	; 0x16c
90013f36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013f3a:	bf00      	nop
90013f3c:	2402357c 	.word	0x2402357c

90013f40 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
90013f40:	b570      	push	{r4, r5, r6, lr}
90013f42:	4604      	mov	r4, r0
90013f44:	2500      	movs	r5, #0
90013f46:	9805      	ldr	r0, [sp, #20]
90013f48:	f89d 601c 	ldrb.w	r6, [sp, #28]
90013f4c:	6061      	str	r1, [r4, #4]
90013f4e:	8263      	strh	r3, [r4, #18]
90013f50:	f89d 1010 	ldrb.w	r1, [sp, #16]
90013f54:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013f58:	8025      	strh	r5, [r4, #0]
90013f5a:	7221      	strb	r1, [r4, #8]
90013f5c:	7266      	strb	r6, [r4, #9]
90013f5e:	60e0      	str	r0, [r4, #12]
90013f60:	8222      	strh	r2, [r4, #16]
90013f62:	82a3      	strh	r3, [r4, #20]
90013f64:	82e5      	strh	r5, [r4, #22]
90013f66:	8325      	strh	r5, [r4, #24]
90013f68:	8365      	strh	r5, [r4, #26]
90013f6a:	83a5      	strh	r5, [r4, #28]
90013f6c:	83e5      	strh	r5, [r4, #30]
90013f6e:	8425      	strh	r5, [r4, #32]
90013f70:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
90013f74:	b32e      	cbz	r6, 90013fc2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013f76:	6803      	ldr	r3, [r0, #0]
90013f78:	695b      	ldr	r3, [r3, #20]
90013f7a:	4798      	blx	r3
90013f7c:	4606      	mov	r6, r0
90013f7e:	b300      	cbz	r0, 90013fc2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013f80:	68e0      	ldr	r0, [r4, #12]
90013f82:	4631      	mov	r1, r6
90013f84:	6803      	ldr	r3, [r0, #0]
90013f86:	68db      	ldr	r3, [r3, #12]
90013f88:	4798      	blx	r3
90013f8a:	4605      	mov	r5, r0
90013f8c:	b1c8      	cbz	r0, 90013fc2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013f8e:	7b43      	ldrb	r3, [r0, #13]
90013f90:	7a82      	ldrb	r2, [r0, #10]
90013f92:	005b      	lsls	r3, r3, #1
90013f94:	f403 7380 	and.w	r3, r3, #256	; 0x100
90013f98:	4313      	orrs	r3, r2
90013f9a:	8423      	strh	r3, [r4, #32]
90013f9c:	7a63      	ldrb	r3, [r4, #9]
90013f9e:	2b06      	cmp	r3, #6
90013fa0:	d10f      	bne.n	90013fc2 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90013fa2:	68e0      	ldr	r0, [r4, #12]
90013fa4:	462a      	mov	r2, r5
90013fa6:	4631      	mov	r1, r6
90013fa8:	6803      	ldr	r3, [r0, #0]
90013faa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90013fac:	4798      	blx	r3
90013fae:	7b6b      	ldrb	r3, [r5, #13]
90013fb0:	005b      	lsls	r3, r3, #1
90013fb2:	f403 7280 	and.w	r2, r3, #256	; 0x100
90013fb6:	7aab      	ldrb	r3, [r5, #10]
90013fb8:	4313      	orrs	r3, r2
90013fba:	4418      	add	r0, r3
90013fbc:	8c23      	ldrh	r3, [r4, #32]
90013fbe:	4418      	add	r0, r3
90013fc0:	8420      	strh	r0, [r4, #32]
90013fc2:	4620      	mov	r0, r4
90013fc4:	bd70      	pop	{r4, r5, r6, pc}

90013fc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90013fc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013fca:	2400      	movs	r4, #0
90013fcc:	b085      	sub	sp, #20
90013fce:	4681      	mov	r9, r0
90013fd0:	4688      	mov	r8, r1
90013fd2:	4692      	mov	sl, r2
90013fd4:	469b      	mov	fp, r3
90013fd6:	4627      	mov	r7, r4
90013fd8:	4625      	mov	r5, r4
90013fda:	4626      	mov	r6, r4
90013fdc:	4554      	cmp	r4, sl
90013fde:	da2a      	bge.n	90014036 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90013fe0:	2300      	movs	r3, #0
90013fe2:	9303      	str	r3, [sp, #12]
90013fe4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90013fe8:	429d      	cmp	r5, r3
90013fea:	d004      	beq.n	90013ff6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
90013fec:	f242 030b 	movw	r3, #8203	; 0x200b
90013ff0:	429d      	cmp	r5, r3
90013ff2:	bf18      	it	ne
90013ff4:	462f      	movne	r7, r5
90013ff6:	ab03      	add	r3, sp, #12
90013ff8:	4642      	mov	r2, r8
90013ffa:	4659      	mov	r1, fp
90013ffc:	4648      	mov	r0, r9
90013ffe:	f003 f89f 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014002:	4605      	mov	r5, r0
90014004:	b1b8      	cbz	r0, 90014036 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
90014006:	280a      	cmp	r0, #10
90014008:	d015      	beq.n	90014036 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001400a:	9a03      	ldr	r2, [sp, #12]
9001400c:	b18a      	cbz	r2, 90014032 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
9001400e:	7b50      	ldrb	r0, [r2, #13]
90014010:	4639      	mov	r1, r7
90014012:	7a93      	ldrb	r3, [r2, #10]
90014014:	0040      	lsls	r0, r0, #1
90014016:	8895      	ldrh	r5, [r2, #4]
90014018:	f400 7080 	and.w	r0, r0, #256	; 0x100
9001401c:	4303      	orrs	r3, r0
9001401e:	4640      	mov	r0, r8
90014020:	9301      	str	r3, [sp, #4]
90014022:	f8d8 3000 	ldr.w	r3, [r8]
90014026:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014028:	4798      	blx	r3
9001402a:	9b01      	ldr	r3, [sp, #4]
9001402c:	4418      	add	r0, r3
9001402e:	4406      	add	r6, r0
90014030:	b2b6      	uxth	r6, r6
90014032:	3401      	adds	r4, #1
90014034:	e7d2      	b.n	90013fdc <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
90014036:	4630      	mov	r0, r6
90014038:	b005      	add	sp, #20
9001403a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001403e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
9001403e:	2a02      	cmp	r2, #2
90014040:	b530      	push	{r4, r5, lr}
90014042:	d011      	beq.n	90014068 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90014044:	2a03      	cmp	r2, #3
90014046:	d01c      	beq.n	90014082 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90014048:	2a01      	cmp	r2, #1
9001404a:	d10c      	bne.n	90014066 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001404c:	888b      	ldrh	r3, [r1, #4]
9001404e:	8801      	ldrh	r1, [r0, #0]
90014050:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90014054:	1a5b      	subs	r3, r3, r1
90014056:	8844      	ldrh	r4, [r0, #2]
90014058:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
9001405c:	1a9b      	subs	r3, r3, r2
9001405e:	8004      	strh	r4, [r0, #0]
90014060:	8081      	strh	r1, [r0, #4]
90014062:	8043      	strh	r3, [r0, #2]
90014064:	80c2      	strh	r2, [r0, #6]
90014066:	bd30      	pop	{r4, r5, pc}
90014068:	88cb      	ldrh	r3, [r1, #6]
9001406a:	8842      	ldrh	r2, [r0, #2]
9001406c:	1a9b      	subs	r3, r3, r2
9001406e:	88c2      	ldrh	r2, [r0, #6]
90014070:	1a9b      	subs	r3, r3, r2
90014072:	888a      	ldrh	r2, [r1, #4]
90014074:	8801      	ldrh	r1, [r0, #0]
90014076:	8043      	strh	r3, [r0, #2]
90014078:	1a52      	subs	r2, r2, r1
9001407a:	8881      	ldrh	r1, [r0, #4]
9001407c:	1a52      	subs	r2, r2, r1
9001407e:	8002      	strh	r2, [r0, #0]
90014080:	e7f1      	b.n	90014066 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90014082:	88cb      	ldrh	r3, [r1, #6]
90014084:	8841      	ldrh	r1, [r0, #2]
90014086:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
9001408a:	1a5b      	subs	r3, r3, r1
9001408c:	f9b0 5000 	ldrsh.w	r5, [r0]
90014090:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90014094:	1a9b      	subs	r3, r3, r2
90014096:	8045      	strh	r5, [r0, #2]
90014098:	8082      	strh	r2, [r0, #4]
9001409a:	8003      	strh	r3, [r0, #0]
9001409c:	80c4      	strh	r4, [r0, #6]
9001409e:	e7e2      	b.n	90014066 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

900140a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
900140a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900140a4:	b09f      	sub	sp, #124	; 0x7c
900140a6:	920f      	str	r2, [sp, #60]	; 0x3c
900140a8:	9312      	str	r3, [sp, #72]	; 0x48
900140aa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900140ac:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900140ae:	8812      	ldrh	r2, [r2, #0]
900140b0:	889b      	ldrh	r3, [r3, #4]
900140b2:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
900140b4:	4413      	add	r3, r2
900140b6:	900e      	str	r0, [sp, #56]	; 0x38
900140b8:	6828      	ldr	r0, [r5, #0]
900140ba:	b21b      	sxth	r3, r3
900140bc:	9117      	str	r1, [sp, #92]	; 0x5c
900140be:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
900140c2:	9311      	str	r3, [sp, #68]	; 0x44
900140c4:	6803      	ldr	r3, [r0, #0]
900140c6:	f89d 40b8 	ldrb.w	r4, [sp, #184]	; 0xb8
900140ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
900140cc:	4798      	blx	r3
900140ce:	682b      	ldr	r3, [r5, #0]
900140d0:	9013      	str	r0, [sp, #76]	; 0x4c
900140d2:	7b1a      	ldrb	r2, [r3, #12]
900140d4:	7adb      	ldrb	r3, [r3, #11]
900140d6:	9215      	str	r2, [sp, #84]	; 0x54
900140d8:	9316      	str	r3, [sp, #88]	; 0x58
900140da:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
900140de:	2c00      	cmp	r4, #0
900140e0:	d067      	beq.n	900141b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
900140e2:	7c2b      	ldrb	r3, [r5, #16]
900140e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
900140e6:	2b06      	cmp	r3, #6
900140e8:	bf14      	ite	ne
900140ea:	2301      	movne	r3, #1
900140ec:	2302      	moveq	r3, #2
900140ee:	4413      	add	r3, r2
900140f0:	f04f 0900 	mov.w	r9, #0
900140f4:	9310      	str	r3, [sp, #64]	; 0x40
900140f6:	464c      	mov	r4, r9
900140f8:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
900140fc:	f8cd 9030 	str.w	r9, [sp, #48]	; 0x30
90014100:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014102:	9a10      	ldr	r2, [sp, #64]	; 0x40
90014104:	4293      	cmp	r3, r2
90014106:	f280 808b 	bge.w	90014220 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001410a:	2300      	movs	r3, #0
9001410c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
90014110:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
90014114:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014118:	429c      	cmp	r4, r3
9001411a:	d006      	beq.n	9001412a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
9001411c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001411e:	f242 020b 	movw	r2, #8203	; 0x200b
90014122:	4294      	cmp	r4, r2
90014124:	bf18      	it	ne
90014126:	4623      	movne	r3, r4
90014128:	930c      	str	r3, [sp, #48]	; 0x30
9001412a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001412c:	992d      	ldr	r1, [sp, #180]	; 0xb4
9001412e:	682a      	ldr	r2, [r5, #0]
90014130:	428b      	cmp	r3, r1
90014132:	db40      	blt.n	900141b6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
90014134:	6813      	ldr	r3, [r2, #0]
90014136:	4610      	mov	r0, r2
90014138:	695b      	ldr	r3, [r3, #20]
9001413a:	4798      	blx	r3
9001413c:	4604      	mov	r4, r0
9001413e:	6828      	ldr	r0, [r5, #0]
90014140:	aa1d      	add	r2, sp, #116	; 0x74
90014142:	4621      	mov	r1, r4
90014144:	6803      	ldr	r3, [r0, #0]
90014146:	689f      	ldr	r7, [r3, #8]
90014148:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
9001414c:	47b8      	blx	r7
9001414e:	901c      	str	r0, [sp, #112]	; 0x70
90014150:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90014154:	429c      	cmp	r4, r3
90014156:	f000 80eb 	beq.w	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001415a:	f242 030b 	movw	r3, #8203	; 0x200b
9001415e:	429c      	cmp	r4, r3
90014160:	f000 80e6 	beq.w	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014164:	2c00      	cmp	r4, #0
90014166:	f000 810d 	beq.w	90014384 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001416a:	2c0a      	cmp	r4, #10
9001416c:	d05e      	beq.n	9001422c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001416e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014170:	b36a      	cbz	r2, 900141ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
90014172:	8894      	ldrh	r4, [r2, #4]
90014174:	f1bb 0f00 	cmp.w	fp, #0
90014178:	d03a      	beq.n	900141f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
9001417a:	f892 900d 	ldrb.w	r9, [r2, #13]
9001417e:	f1bb 0f01 	cmp.w	fp, #1
90014182:	ea4f 0949 	mov.w	r9, r9, lsl #1
90014186:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001418a:	f892 900a 	ldrb.w	r9, [r2, #10]
9001418e:	ea49 0903 	orr.w	r9, r9, r3
90014192:	d133      	bne.n	900141fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90014194:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90014196:	eba6 0609 	sub.w	r6, r6, r9
9001419a:	2b00      	cmp	r3, #0
9001419c:	d14d      	bne.n	9001423a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001419e:	9a15      	ldr	r2, [sp, #84]	; 0x54
900141a0:	eb09 0306 	add.w	r3, r9, r6
900141a4:	4413      	add	r3, r2
900141a6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
900141a8:	f9b2 2000 	ldrsh.w	r2, [r2]
900141ac:	4293      	cmp	r3, r2
900141ae:	da4e      	bge.n	9001424e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900141b0:	e036      	b.n	90014220 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900141b2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
900141b4:	e79c      	b.n	900140f0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
900141b6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
900141ba:	4659      	mov	r1, fp
900141bc:	982c      	ldr	r0, [sp, #176]	; 0xb0
900141be:	9301      	str	r3, [sp, #4]
900141c0:	ab1d      	add	r3, sp, #116	; 0x74
900141c2:	9300      	str	r3, [sp, #0]
900141c4:	ab1c      	add	r3, sp, #112	; 0x70
900141c6:	f003 f804 	bl	900171d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
900141ca:	4604      	mov	r4, r0
900141cc:	e7c0      	b.n	90014150 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
900141ce:	6828      	ldr	r0, [r5, #0]
900141d0:	6803      	ldr	r3, [r0, #0]
900141d2:	691b      	ldr	r3, [r3, #16]
900141d4:	4798      	blx	r3
900141d6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900141da:	4298      	cmp	r0, r3
900141dc:	f000 80a8 	beq.w	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900141e0:	f242 030b 	movw	r3, #8203	; 0x200b
900141e4:	4298      	cmp	r0, r3
900141e6:	f000 80a3 	beq.w	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900141ea:	f1bb 0f00 	cmp.w	fp, #0
900141ee:	d100      	bne.n	900141f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900141f0:	444e      	add	r6, r9
900141f2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
900141f4:	2a00      	cmp	r2, #0
900141f6:	d1c0      	bne.n	9001417a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900141f8:	4691      	mov	r9, r2
900141fa:	e099      	b.n	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900141fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900141fe:	2b00      	cmp	r3, #0
90014200:	f000 80c2 	beq.w	90014388 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
90014204:	f1bb 0f00 	cmp.w	fp, #0
90014208:	d117      	bne.n	9001423a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001420a:	6828      	ldr	r0, [r5, #0]
9001420c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001420e:	6803      	ldr	r3, [r0, #0]
90014210:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014212:	4798      	blx	r3
90014214:	4406      	add	r6, r0
90014216:	9b16      	ldr	r3, [sp, #88]	; 0x58
90014218:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001421a:	1af3      	subs	r3, r6, r3
9001421c:	4293      	cmp	r3, r2
9001421e:	dd16      	ble.n	9001424e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
90014220:	2c00      	cmp	r4, #0
90014222:	f000 80af 	beq.w	90014384 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90014226:	2c0a      	cmp	r4, #10
90014228:	f040 809d 	bne.w	90014366 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
9001422c:	240a      	movs	r4, #10
9001422e:	fab4 f084 	clz	r0, r4
90014232:	0940      	lsrs	r0, r0, #5
90014234:	b01f      	add	sp, #124	; 0x7c
90014236:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001423a:	6828      	ldr	r0, [r5, #0]
9001423c:	990c      	ldr	r1, [sp, #48]	; 0x30
9001423e:	6803      	ldr	r3, [r0, #0]
90014240:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014242:	4798      	blx	r3
90014244:	f1bb 0f01 	cmp.w	fp, #1
90014248:	eba6 0600 	sub.w	r6, r6, r0
9001424c:	d0a7      	beq.n	9001419e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001424e:	981c      	ldr	r0, [sp, #112]	; 0x70
90014250:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90014252:	f990 1009 	ldrsb.w	r1, [r0, #9]
90014256:	f9b3 8000 	ldrsh.w	r8, [r3]
9001425a:	7b43      	ldrb	r3, [r0, #13]
9001425c:	4431      	add	r1, r6
9001425e:	015b      	lsls	r3, r3, #5
90014260:	f403 7280 	and.w	r2, r3, #256	; 0x100
90014264:	7983      	ldrb	r3, [r0, #6]
90014266:	4313      	orrs	r3, r2
90014268:	440b      	add	r3, r1
9001426a:	4543      	cmp	r3, r8
9001426c:	db60      	blt.n	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001426e:	9b11      	ldr	r3, [sp, #68]	; 0x44
90014270:	4299      	cmp	r1, r3
90014272:	da5d      	bge.n	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014274:	6828      	ldr	r0, [r5, #0]
90014276:	45b0      	cmp	r8, r6
90014278:	6803      	ldr	r3, [r0, #0]
9001427a:	bfcc      	ite	gt
9001427c:	eba8 0806 	subgt.w	r8, r8, r6
90014280:	f04f 0800 	movle.w	r8, #0
90014284:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90014286:	bfc8      	it	gt
90014288:	fa1f f888 	uxthgt.w	r8, r8
9001428c:	4798      	blx	r3
9001428e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
90014290:	7b53      	ldrb	r3, [r2, #13]
90014292:	00d9      	lsls	r1, r3, #3
90014294:	f401 7780 	and.w	r7, r1, #256	; 0x100
90014298:	7a11      	ldrb	r1, [r2, #8]
9001429a:	4339      	orrs	r1, r7
9001429c:	065f      	lsls	r7, r3, #25
9001429e:	9f12      	ldr	r7, [sp, #72]	; 0x48
900142a0:	bf48      	it	mi
900142a2:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
900142a6:	4407      	add	r7, r0
900142a8:	bf48      	it	mi
900142aa:	b209      	sxthmi	r1, r1
900142ac:	1a7f      	subs	r7, r7, r1
900142ae:	9929      	ldr	r1, [sp, #164]	; 0xa4
900142b0:	b2bf      	uxth	r7, r7
900142b2:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
900142b6:	fa0f fa87 	sxth.w	sl, r7
900142ba:	4551      	cmp	r1, sl
900142bc:	dd3c      	ble.n	90014338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
900142be:	011b      	lsls	r3, r3, #4
900142c0:	79d0      	ldrb	r0, [r2, #7]
900142c2:	f403 7380 	and.w	r3, r3, #256	; 0x100
900142c6:	4303      	orrs	r3, r0
900142c8:	449a      	add	sl, r3
900142ca:	4551      	cmp	r1, sl
900142cc:	dc30      	bgt.n	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900142ce:	1bcf      	subs	r7, r1, r7
900142d0:	468a      	mov	sl, r1
900142d2:	b23f      	sxth	r7, r7
900142d4:	9219      	str	r2, [sp, #100]	; 0x64
900142d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900142d8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900142da:	6828      	ldr	r0, [r5, #0]
900142dc:	2a00      	cmp	r2, #0
900142de:	d12d      	bne.n	9001433c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
900142e0:	9318      	str	r3, [sp, #96]	; 0x60
900142e2:	b2bf      	uxth	r7, r7
900142e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900142e6:	6819      	ldr	r1, [r3, #0]
900142e8:	6ccb      	ldr	r3, [r1, #76]	; 0x4c
900142ea:	6801      	ldr	r1, [r0, #0]
900142ec:	9314      	str	r3, [sp, #80]	; 0x50
900142ee:	6c09      	ldr	r1, [r1, #64]	; 0x40
900142f0:	4788      	blx	r1
900142f2:	79a9      	ldrb	r1, [r5, #6]
900142f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
900142f6:	910b      	str	r1, [sp, #44]	; 0x2c
900142f8:	7ba9      	ldrb	r1, [r5, #14]
900142fa:	9a19      	ldr	r2, [sp, #100]	; 0x64
900142fc:	910a      	str	r1, [sp, #40]	; 0x28
900142fe:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
90014302:	9109      	str	r1, [sp, #36]	; 0x24
90014304:	68a9      	ldr	r1, [r5, #8]
90014306:	9306      	str	r3, [sp, #24]
90014308:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001430a:	9205      	str	r2, [sp, #20]
9001430c:	9304      	str	r3, [sp, #16]
9001430e:	f8cd a004 	str.w	sl, [sp, #4]
90014312:	e9cd 8702 	strd	r8, r7, [sp, #8]
90014316:	44b0      	add	r8, r6
90014318:	9f14      	ldr	r7, [sp, #80]	; 0x50
9001431a:	fa0f f388 	sxth.w	r3, r8
9001431e:	9300      	str	r3, [sp, #0]
90014320:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90014322:	e9cd 0107 	strd	r0, r1, [sp, #28]
90014326:	9917      	ldr	r1, [sp, #92]	; 0x5c
90014328:	681a      	ldr	r2, [r3, #0]
9001432a:	980e      	ldr	r0, [sp, #56]	; 0x38
9001432c:	685b      	ldr	r3, [r3, #4]
9001432e:	47b8      	blx	r7
90014330:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90014332:	3301      	adds	r3, #1
90014334:	930d      	str	r3, [sp, #52]	; 0x34
90014336:	e6e3      	b.n	90014100 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
90014338:	2700      	movs	r7, #0
9001433a:	e7cb      	b.n	900142d4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
9001433c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001433e:	f8d2 c008 	ldr.w	ip, [r2, #8]
90014342:	9a12      	ldr	r2, [sp, #72]	; 0x48
90014344:	f8dc 1000 	ldr.w	r1, [ip]
90014348:	e9cd 6204 	strd	r6, r2, [sp, #16]
9001434c:	79aa      	ldrb	r2, [r5, #6]
9001434e:	9203      	str	r2, [sp, #12]
90014350:	7baa      	ldrb	r2, [r5, #14]
90014352:	9202      	str	r2, [sp, #8]
90014354:	68aa      	ldr	r2, [r5, #8]
90014356:	e9cd 0200 	strd	r0, r2, [sp]
9001435a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9001435c:	4660      	mov	r0, ip
9001435e:	688f      	ldr	r7, [r1, #8]
90014360:	990f      	ldr	r1, [sp, #60]	; 0x3c
90014362:	47b8      	blx	r7
90014364:	e7e4      	b.n	90014330 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90014366:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90014368:	3501      	adds	r5, #1
9001436a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
9001436c:	429d      	cmp	r5, r3
9001436e:	f6bf af5e 	bge.w	9001422e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014372:	4659      	mov	r1, fp
90014374:	982c      	ldr	r0, [sp, #176]	; 0xb0
90014376:	f7f0 f92b 	bl	900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
9001437a:	4604      	mov	r4, r0
9001437c:	b110      	cbz	r0, 90014384 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001437e:	280a      	cmp	r0, #10
90014380:	d1f2      	bne.n	90014368 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
90014382:	e753      	b.n	9001422c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90014384:	2400      	movs	r4, #0
90014386:	e752      	b.n	9001422e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90014388:	f1bb 0f00 	cmp.w	fp, #0
9001438c:	f43f af43 	beq.w	90014216 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
90014390:	e75d      	b.n	9001424e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

90014392 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
90014392:	b530      	push	{r4, r5, lr}
90014394:	8ac4      	ldrh	r4, [r0, #22]
90014396:	8b45      	ldrh	r5, [r0, #26]
90014398:	8343      	strh	r3, [r0, #26]
9001439a:	442c      	add	r4, r5
9001439c:	1ae4      	subs	r4, r4, r3
9001439e:	8b83      	ldrh	r3, [r0, #28]
900143a0:	82c4      	strh	r4, [r0, #22]
900143a2:	8b04      	ldrh	r4, [r0, #24]
900143a4:	4422      	add	r2, r4
900143a6:	440c      	add	r4, r1
900143a8:	1a59      	subs	r1, r3, r1
900143aa:	83c2      	strh	r2, [r0, #30]
900143ac:	8304      	strh	r4, [r0, #24]
900143ae:	8381      	strh	r1, [r0, #28]
900143b0:	bd30      	pop	{r4, r5, pc}

900143b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
900143b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900143b6:	4604      	mov	r4, r0
900143b8:	8a47      	ldrh	r7, [r0, #18]
900143ba:	68c0      	ldr	r0, [r0, #12]
900143bc:	b085      	sub	sp, #20
900143be:	6803      	ldr	r3, [r0, #0]
900143c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900143c2:	4798      	blx	r3
900143c4:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
900143c8:	7a63      	ldrb	r3, [r4, #9]
900143ca:	eb06 0640 	add.w	r6, r6, r0, lsl #1
900143ce:	3b01      	subs	r3, #1
900143d0:	42b7      	cmp	r7, r6
900143d2:	bfac      	ite	ge
900143d4:	f04f 0900 	movge.w	r9, #0
900143d8:	f04f 0901 	movlt.w	r9, #1
900143dc:	2b05      	cmp	r3, #5
900143de:	d804      	bhi.n	900143ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
900143e0:	e8df f003 	tbb	[pc, r3]
900143e4:	470f0854 	.word	0x470f0854
900143e8:	4c4c      	.short	0x4c4c
900143ea:	2500      	movs	r5, #0
900143ec:	46a9      	mov	r9, r5
900143ee:	462e      	mov	r6, r5
900143f0:	462f      	mov	r7, r5
900143f2:	e00e      	b.n	90014412 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900143f4:	42b7      	cmp	r7, r6
900143f6:	f04f 0500 	mov.w	r5, #0
900143fa:	bfb4      	ite	lt
900143fc:	2600      	movlt	r6, #0
900143fe:	2601      	movge	r6, #1
90014400:	e7f6      	b.n	900143f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014402:	42b7      	cmp	r7, r6
90014404:	464d      	mov	r5, r9
90014406:	f04f 0900 	mov.w	r9, #0
9001440a:	bfb4      	ite	lt
9001440c:	2600      	movlt	r6, #0
9001440e:	2601      	movge	r6, #1
90014410:	464f      	mov	r7, r9
90014412:	f04f 0800 	mov.w	r8, #0
90014416:	f8a4 8016 	strh.w	r8, [r4, #22]
9001441a:	f8a4 8018 	strh.w	r8, [r4, #24]
9001441e:	f8cd 8004 	str.w	r8, [sp, #4]
90014422:	2300      	movs	r3, #0
90014424:	9303      	str	r3, [sp, #12]
90014426:	8823      	ldrh	r3, [r4, #0]
90014428:	2b20      	cmp	r3, #32
9001442a:	d033      	beq.n	90014494 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
9001442c:	f242 010b 	movw	r1, #8203	; 0x200b
90014430:	1a5a      	subs	r2, r3, r1
90014432:	f1d2 0a00 	rsbs	sl, r2, #0
90014436:	eb4a 0a02 	adc.w	sl, sl, r2
9001443a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
9001443e:	4293      	cmp	r3, r2
90014440:	d008      	beq.n	90014454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90014442:	428b      	cmp	r3, r1
90014444:	9a01      	ldr	r2, [sp, #4]
90014446:	bf0e      	itee	eq
90014448:	f04f 0a01 	moveq.w	sl, #1
9001444c:	461a      	movne	r2, r3
9001444e:	f04f 0a00 	movne.w	sl, #0
90014452:	9201      	str	r2, [sp, #4]
90014454:	ab03      	add	r3, sp, #12
90014456:	68e2      	ldr	r2, [r4, #12]
90014458:	7a21      	ldrb	r1, [r4, #8]
9001445a:	6860      	ldr	r0, [r4, #4]
9001445c:	f002 fe70 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90014460:	8020      	strh	r0, [r4, #0]
90014462:	b9d8      	cbnz	r0, 9001449c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90014464:	8ba2      	ldrh	r2, [r4, #28]
90014466:	2300      	movs	r3, #0
90014468:	4611      	mov	r1, r2
9001446a:	4620      	mov	r0, r4
9001446c:	f7ff ff91 	bl	90014392 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014470:	e06e      	b.n	90014550 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90014472:	2500      	movs	r5, #0
90014474:	2701      	movs	r7, #1
90014476:	46a9      	mov	r9, r5
90014478:	462e      	mov	r6, r5
9001447a:	e7ca      	b.n	90014412 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001447c:	42b7      	cmp	r7, r6
9001447e:	f04f 0500 	mov.w	r5, #0
90014482:	bfb4      	ite	lt
90014484:	2700      	movlt	r7, #0
90014486:	2701      	movge	r7, #1
90014488:	462e      	mov	r6, r5
9001448a:	e7c2      	b.n	90014412 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
9001448c:	2500      	movs	r5, #0
9001448e:	2601      	movs	r6, #1
90014490:	46a9      	mov	r9, r5
90014492:	e7ad      	b.n	900143f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90014494:	9301      	str	r3, [sp, #4]
90014496:	f04f 0a01 	mov.w	sl, #1
9001449a:	e7db      	b.n	90014454 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
9001449c:	8b63      	ldrh	r3, [r4, #26]
9001449e:	280a      	cmp	r0, #10
900144a0:	f103 0301 	add.w	r3, r3, #1
900144a4:	8363      	strh	r3, [r4, #26]
900144a6:	d0dd      	beq.n	90014464 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
900144a8:	9a03      	ldr	r2, [sp, #12]
900144aa:	bb62      	cbnz	r2, 90014506 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
900144ac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
900144b0:	4298      	cmp	r0, r3
900144b2:	d003      	beq.n	900144bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900144b4:	f242 030b 	movw	r3, #8203	; 0x200b
900144b8:	4298      	cmp	r0, r3
900144ba:	d1b2      	bne.n	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900144bc:	8823      	ldrh	r3, [r4, #0]
900144be:	8ba1      	ldrh	r1, [r4, #28]
900144c0:	2b20      	cmp	r3, #32
900144c2:	d003      	beq.n	900144cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
900144c4:	f242 000b 	movw	r0, #8203	; 0x200b
900144c8:	4283      	cmp	r3, r0
900144ca:	d131      	bne.n	90014530 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
900144cc:	f1ba 0f00 	cmp.w	sl, #0
900144d0:	bf0a      	itet	eq
900144d2:	4688      	moveq	r8, r1
900144d4:	4650      	movne	r0, sl
900144d6:	2001      	moveq	r0, #1
900144d8:	440a      	add	r2, r1
900144da:	8b23      	ldrh	r3, [r4, #24]
900144dc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
900144e0:	b292      	uxth	r2, r2
900144e2:	83a2      	strh	r2, [r4, #28]
900144e4:	4413      	add	r3, r2
900144e6:	f1b9 0f00 	cmp.w	r9, #0
900144ea:	d102      	bne.n	900144f2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900144ec:	2d00      	cmp	r5, #0
900144ee:	d042      	beq.n	90014576 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900144f0:	b300      	cbz	r0, 90014534 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900144f2:	8c21      	ldrh	r1, [r4, #32]
900144f4:	4419      	add	r1, r3
900144f6:	458c      	cmp	ip, r1
900144f8:	da37      	bge.n	9001456a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900144fa:	8ae1      	ldrh	r1, [r4, #22]
900144fc:	2900      	cmp	r1, #0
900144fe:	d034      	beq.n	9001456a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
90014500:	4563      	cmp	r3, ip
90014502:	dd8e      	ble.n	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014504:	e01d      	b.n	90014542 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
90014506:	8893      	ldrh	r3, [r2, #4]
90014508:	9901      	ldr	r1, [sp, #4]
9001450a:	8023      	strh	r3, [r4, #0]
9001450c:	f892 b00d 	ldrb.w	fp, [r2, #13]
90014510:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
90014514:	f40b 7080 	and.w	r0, fp, #256	; 0x100
90014518:	f892 b00a 	ldrb.w	fp, [r2, #10]
9001451c:	ea4b 0b00 	orr.w	fp, fp, r0
90014520:	68e0      	ldr	r0, [r4, #12]
90014522:	6803      	ldr	r3, [r0, #0]
90014524:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014526:	4798      	blx	r3
90014528:	eb0b 0200 	add.w	r2, fp, r0
9001452c:	b292      	uxth	r2, r2
9001452e:	e7c5      	b.n	900144bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90014530:	2000      	movs	r0, #0
90014532:	e7d1      	b.n	900144d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
90014534:	4563      	cmp	r3, ip
90014536:	f77f af74 	ble.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001453a:	8ae3      	ldrh	r3, [r4, #22]
9001453c:	2b00      	cmp	r3, #0
9001453e:	f43f af70 	beq.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014542:	2301      	movs	r3, #1
90014544:	8c22      	ldrh	r2, [r4, #32]
90014546:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
9001454a:	8be3      	ldrh	r3, [r4, #30]
9001454c:	4413      	add	r3, r2
9001454e:	83e3      	strh	r3, [r4, #30]
90014550:	68e0      	ldr	r0, [r4, #12]
90014552:	6803      	ldr	r3, [r0, #0]
90014554:	6b9b      	ldr	r3, [r3, #56]	; 0x38
90014556:	4798      	blx	r3
90014558:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
9001455c:	4418      	add	r0, r3
9001455e:	8a63      	ldrh	r3, [r4, #18]
90014560:	1a18      	subs	r0, r3, r0
90014562:	8260      	strh	r0, [r4, #18]
90014564:	b005      	add	sp, #20
90014566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001456a:	2300      	movs	r3, #0
9001456c:	4611      	mov	r1, r2
9001456e:	4620      	mov	r0, r4
90014570:	f7ff ff0f 	bl	90014392 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90014574:	e755      	b.n	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014576:	4563      	cmp	r3, ip
90014578:	dd14      	ble.n	900145a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
9001457a:	b117      	cbz	r7, 90014582 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
9001457c:	2301      	movs	r3, #1
9001457e:	460a      	mov	r2, r1
90014580:	e772      	b.n	90014468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
90014582:	2e00      	cmp	r6, #0
90014584:	f43f af4d 	beq.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90014588:	2800      	cmp	r0, #0
9001458a:	f47f af4a 	bne.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001458e:	f1ba 0f00 	cmp.w	sl, #0
90014592:	d002      	beq.n	9001459a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90014594:	2301      	movs	r3, #1
90014596:	4642      	mov	r2, r8
90014598:	e767      	b.n	9001446a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
9001459a:	8ae3      	ldrh	r3, [r4, #22]
9001459c:	2b00      	cmp	r3, #0
9001459e:	f43f af40 	beq.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145a2:	e7d5      	b.n	90014550 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
900145a4:	2800      	cmp	r0, #0
900145a6:	f47f af3c 	bne.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145aa:	f1ba 0f00 	cmp.w	sl, #0
900145ae:	f43f af38 	beq.w	90014422 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900145b2:	2301      	movs	r3, #1
900145b4:	4642      	mov	r2, r8
900145b6:	e7da      	b.n	9001456e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

900145b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
900145b8:	b5f0      	push	{r4, r5, r6, r7, lr}
900145ba:	4605      	mov	r5, r0
900145bc:	b08f      	sub	sp, #60	; 0x3c
900145be:	4617      	mov	r7, r2
900145c0:	461c      	mov	r4, r3
900145c2:	460e      	mov	r6, r1
900145c4:	b1d1      	cbz	r1, 900145fc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
900145c6:	681b      	ldr	r3, [r3, #0]
900145c8:	4620      	mov	r0, r4
900145ca:	6b9b      	ldr	r3, [r3, #56]	; 0x38
900145cc:	4798      	blx	r3
900145ce:	4240      	negs	r0, r0
900145d0:	9603      	str	r6, [sp, #12]
900145d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
900145d6:	b200      	sxth	r0, r0
900145d8:	9700      	str	r7, [sp, #0]
900145da:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
900145de:	4629      	mov	r1, r5
900145e0:	e9cd 4001 	strd	r4, r0, [sp, #4]
900145e4:	2401      	movs	r4, #1
900145e6:	a805      	add	r0, sp, #20
900145e8:	f7ff fcaa 	bl	90013f40 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900145ec:	a805      	add	r0, sp, #20
900145ee:	f7ff fee0 	bl	900143b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900145f2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900145f6:	b163      	cbz	r3, 90014612 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900145f8:	3401      	adds	r4, #1
900145fa:	e7f7      	b.n	900145ec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900145fc:	2401      	movs	r4, #1
900145fe:	f002 fe6b 	bl	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90014602:	280a      	cmp	r0, #10
90014604:	4628      	mov	r0, r5
90014606:	bf08      	it	eq
90014608:	3401      	addeq	r4, #1
9001460a:	f002 fe65 	bl	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001460e:	2800      	cmp	r0, #0
90014610:	d1f7      	bne.n	90014602 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
90014612:	b2a0      	uxth	r0, r4
90014614:	b00f      	add	sp, #60	; 0x3c
90014616:	bdf0      	pop	{r4, r5, r6, r7, pc}

90014618 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
90014618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001461c:	b0e3      	sub	sp, #396	; 0x18c
9001461e:	461c      	mov	r4, r3
90014620:	4683      	mov	fp, r0
90014622:	4688      	mov	r8, r1
90014624:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
90014626:	2b00      	cmp	r3, #0
90014628:	f000 8112 	beq.w	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001462c:	6823      	ldr	r3, [r4, #0]
9001462e:	2b00      	cmp	r3, #0
90014630:	f000 810e 	beq.w	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014634:	7ba3      	ldrb	r3, [r4, #14]
90014636:	2b00      	cmp	r3, #0
90014638:	f000 810a 	beq.w	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
9001463c:	ad0a      	add	r5, sp, #40	; 0x28
9001463e:	6810      	ldr	r0, [r2, #0]
90014640:	6851      	ldr	r1, [r2, #4]
90014642:	462b      	mov	r3, r5
90014644:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90014648:	c303      	stmia	r3!, {r0, r1}
9001464a:	2100      	movs	r1, #0
9001464c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90014650:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
90014654:	4628      	mov	r0, r5
90014656:	910c      	str	r1, [sp, #48]	; 0x30
90014658:	a90c      	add	r1, sp, #48	; 0x30
9001465a:	79a2      	ldrb	r2, [r4, #6]
9001465c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014660:	f7ff fced 	bl	9001403e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90014664:	a90c      	add	r1, sp, #48	; 0x30
90014666:	79a2      	ldrb	r2, [r4, #6]
90014668:	4608      	mov	r0, r1
9001466a:	f7ff fce8 	bl	9001403e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001466e:	a817      	add	r0, sp, #92	; 0x5c
90014670:	f002 fa05 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90014674:	6820      	ldr	r0, [r4, #0]
90014676:	6803      	ldr	r3, [r0, #0]
90014678:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001467a:	4798      	blx	r3
9001467c:	4606      	mov	r6, r0
9001467e:	6820      	ldr	r0, [r4, #0]
90014680:	6803      	ldr	r3, [r0, #0]
90014682:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014684:	4798      	blx	r3
90014686:	4633      	mov	r3, r6
90014688:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
9001468a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
9001468c:	9000      	str	r0, [sp, #0]
9001468e:	a817      	add	r0, sp, #92	; 0x5c
90014690:	f002 fa50 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90014694:	6820      	ldr	r0, [r4, #0]
90014696:	f894 a004 	ldrb.w	sl, [r4, #4]
9001469a:	6803      	ldr	r3, [r0, #0]
9001469c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001469e:	4798      	blx	r3
900146a0:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
900146a4:	6823      	ldr	r3, [r4, #0]
900146a6:	4607      	mov	r7, r0
900146a8:	4406      	add	r6, r0
900146aa:	a830      	add	r0, sp, #192	; 0xc0
900146ac:	f893 9009 	ldrb.w	r9, [r3, #9]
900146b0:	f002 f9e5 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
900146b4:	7c23      	ldrb	r3, [r4, #16]
900146b6:	b17b      	cbz	r3, 900146d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
900146b8:	6820      	ldr	r0, [r4, #0]
900146ba:	6803      	ldr	r3, [r0, #0]
900146bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
900146be:	4798      	blx	r3
900146c0:	9009      	str	r0, [sp, #36]	; 0x24
900146c2:	6820      	ldr	r0, [r4, #0]
900146c4:	6802      	ldr	r2, [r0, #0]
900146c6:	6d12      	ldr	r2, [r2, #80]	; 0x50
900146c8:	4790      	blx	r2
900146ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
900146cc:	9000      	str	r0, [sp, #0]
900146ce:	a830      	add	r0, sp, #192	; 0xc0
900146d0:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
900146d2:	996c      	ldr	r1, [sp, #432]	; 0x1b0
900146d4:	f002 fa2e 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900146d8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
900146dc:	a80e      	add	r0, sp, #56	; 0x38
900146de:	7be2      	ldrb	r2, [r4, #15]
900146e0:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
900146e4:	1a8a      	subs	r2, r1, r2
900146e6:	7c21      	ldrb	r1, [r4, #16]
900146e8:	9103      	str	r1, [sp, #12]
900146ea:	b292      	uxth	r2, r2
900146ec:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900146f0:	9102      	str	r1, [sp, #8]
900146f2:	6821      	ldr	r1, [r4, #0]
900146f4:	9101      	str	r1, [sp, #4]
900146f6:	7961      	ldrb	r1, [r4, #5]
900146f8:	9100      	str	r1, [sp, #0]
900146fa:	a930      	add	r1, sp, #192	; 0xc0
900146fc:	f7ff fc20 	bl	90013f40 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
90014700:	2e00      	cmp	r6, #0
90014702:	dc5b      	bgt.n	900147bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
90014704:	af17      	add	r7, sp, #92	; 0x5c
90014706:	f04f 0900 	mov.w	r9, #0
9001470a:	7c23      	ldrb	r3, [r4, #16]
9001470c:	2b00      	cmp	r3, #0
9001470e:	f000 80b1 	beq.w	90014874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
90014712:	a80e      	add	r0, sp, #56	; 0x38
90014714:	f7ff fe4d 	bl	900143b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90014718:	f1ba 0f00 	cmp.w	sl, #0
9001471c:	f000 80a5 	beq.w	9001486a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90014720:	7c23      	ldrb	r3, [r4, #16]
90014722:	2264      	movs	r2, #100	; 0x64
90014724:	4639      	mov	r1, r7
90014726:	a849      	add	r0, sp, #292	; 0x124
90014728:	9309      	str	r3, [sp, #36]	; 0x24
9001472a:	f012 f92a 	bl	90026982 <memcpy>
9001472e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90014730:	2b00      	cmp	r3, #0
90014732:	f000 80a7 	beq.w	90014884 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
90014736:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
9001473a:	7922      	ldrb	r2, [r4, #4]
9001473c:	2a01      	cmp	r2, #1
9001473e:	f040 808a 	bne.w	90014856 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
90014742:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
90014746:	1ac0      	subs	r0, r0, r3
90014748:	2302      	movs	r3, #2
9001474a:	fb90 f0f3 	sdiv	r0, r0, r3
9001474e:	b200      	sxth	r0, r0
90014750:	7c23      	ldrb	r3, [r4, #16]
90014752:	2b00      	cmp	r3, #0
90014754:	f000 808b 	beq.w	9001486e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90014758:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
9001475c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
90014760:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
90014764:	e9cd 2105 	strd	r2, r1, [sp, #20]
90014768:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001476c:	2100      	movs	r1, #0
9001476e:	4410      	add	r0, r2
90014770:	4642      	mov	r2, r8
90014772:	b200      	sxth	r0, r0
90014774:	e9cd 9703 	strd	r9, r7, [sp, #12]
90014778:	9000      	str	r0, [sp, #0]
9001477a:	4658      	mov	r0, fp
9001477c:	e9cd 5401 	strd	r5, r4, [sp, #4]
90014780:	f7ff fc8e 	bl	900140a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90014784:	2800      	cmp	r0, #0
90014786:	d163      	bne.n	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014788:	b2b2      	uxth	r2, r6
9001478a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001478e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
90014792:	4413      	add	r3, r2
90014794:	1a8a      	subs	r2, r1, r2
90014796:	b21b      	sxth	r3, r3
90014798:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
9001479c:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
900147a0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
900147a4:	2a00      	cmp	r2, #0
900147a6:	d153      	bne.n	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900147a8:	6822      	ldr	r2, [r4, #0]
900147aa:	8869      	ldrh	r1, [r5, #2]
900147ac:	7a12      	ldrb	r2, [r2, #8]
900147ae:	1a9b      	subs	r3, r3, r2
900147b0:	88ea      	ldrh	r2, [r5, #6]
900147b2:	440a      	add	r2, r1
900147b4:	b212      	sxth	r2, r2
900147b6:	4293      	cmp	r3, r2
900147b8:	dda7      	ble.n	9001470a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
900147ba:	e049      	b.n	90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900147bc:	7c23      	ldrb	r3, [r4, #16]
900147be:	444f      	add	r7, r9
900147c0:	b1c3      	cbz	r3, 900147f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
900147c2:	f64f 79ff 	movw	r9, #65535	; 0xffff
900147c6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900147ca:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
900147ce:	443b      	add	r3, r7
900147d0:	4293      	cmp	r3, r2
900147d2:	da97      	bge.n	90014704 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
900147d4:	a80e      	add	r0, sp, #56	; 0x38
900147d6:	f7ff fdec 	bl	900143b2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900147da:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
900147de:	3b01      	subs	r3, #1
900147e0:	b29b      	uxth	r3, r3
900147e2:	454b      	cmp	r3, r9
900147e4:	9309      	str	r3, [sp, #36]	; 0x24
900147e6:	d021      	beq.n	9001482c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
900147e8:	7961      	ldrb	r1, [r4, #5]
900147ea:	a817      	add	r0, sp, #92	; 0x5c
900147ec:	f7ef fef0 	bl	900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900147f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
900147f2:	e7f4      	b.n	900147de <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
900147f4:	fa1f f986 	uxth.w	r9, r6
900147f8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
900147fc:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014800:	443b      	add	r3, r7
90014802:	4293      	cmp	r3, r2
90014804:	f6bf af7e 	bge.w	90014704 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90014808:	a817      	add	r0, sp, #92	; 0x5c
9001480a:	f002 fd65 	bl	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
9001480e:	b1f8      	cbz	r0, 90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014810:	280a      	cmp	r0, #10
90014812:	d1f1      	bne.n	900147f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90014814:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
90014818:	444b      	add	r3, r9
9001481a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001481e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
90014822:	eba3 0309 	sub.w	r3, r3, r9
90014826:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001482a:	e7e5      	b.n	900147f8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
9001482c:	b2b3      	uxth	r3, r6
9001482e:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
90014832:	441a      	add	r2, r3
90014834:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
90014838:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
9001483c:	1ad3      	subs	r3, r2, r3
9001483e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
90014842:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
90014846:	b11b      	cbz	r3, 90014850 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90014848:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
9001484c:	2b00      	cmp	r3, #0
9001484e:	d0ba      	beq.n	900147c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90014850:	b063      	add	sp, #396	; 0x18c
90014852:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014856:	2a02      	cmp	r2, #2
90014858:	d105      	bne.n	90014866 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
9001485a:	7be2      	ldrb	r2, [r4, #15]
9001485c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
90014860:	1a80      	subs	r0, r0, r2
90014862:	1ac0      	subs	r0, r0, r3
90014864:	e773      	b.n	9001474e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90014866:	2000      	movs	r0, #0
90014868:	e772      	b.n	90014750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001486a:	7be0      	ldrb	r0, [r4, #15]
9001486c:	e770      	b.n	90014750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
9001486e:	f647 72ff 	movw	r2, #32767	; 0x7fff
90014872:	e773      	b.n	9001475c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90014874:	f1ba 0f00 	cmp.w	sl, #0
90014878:	d0f7      	beq.n	9001486a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
9001487a:	2264      	movs	r2, #100	; 0x64
9001487c:	4639      	mov	r1, r7
9001487e:	a849      	add	r0, sp, #292	; 0x124
90014880:	f012 f87f 	bl	90026982 <memcpy>
90014884:	2300      	movs	r3, #0
90014886:	f647 72ff 	movw	r2, #32767	; 0x7fff
9001488a:	6821      	ldr	r1, [r4, #0]
9001488c:	a849      	add	r0, sp, #292	; 0x124
9001488e:	f7ff fb9a 	bl	90013fc6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90014892:	b203      	sxth	r3, r0
90014894:	e751      	b.n	9001473a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90014896 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90014896:	2b03      	cmp	r3, #3
90014898:	d818      	bhi.n	900148cc <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
9001489a:	e8df f003 	tbb	[pc, r3]
9001489e:	0602      	.short	0x0602
900148a0:	130d      	.short	0x130d
900148a2:	f9b0 2000 	ldrsh.w	r2, [r0]
900148a6:	1850      	adds	r0, r2, r1
900148a8:	4770      	bx	lr
900148aa:	8803      	ldrh	r3, [r0, #0]
900148ac:	8880      	ldrh	r0, [r0, #4]
900148ae:	4418      	add	r0, r3
900148b0:	b200      	sxth	r0, r0
900148b2:	1a80      	subs	r0, r0, r2
900148b4:	3801      	subs	r0, #1
900148b6:	4770      	bx	lr
900148b8:	8803      	ldrh	r3, [r0, #0]
900148ba:	8880      	ldrh	r0, [r0, #4]
900148bc:	4418      	add	r0, r3
900148be:	b200      	sxth	r0, r0
900148c0:	1a40      	subs	r0, r0, r1
900148c2:	e7f7      	b.n	900148b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
900148c4:	f9b0 0000 	ldrsh.w	r0, [r0]
900148c8:	4410      	add	r0, r2
900148ca:	4770      	bx	lr
900148cc:	2000      	movs	r0, #0
900148ce:	4770      	bx	lr

900148d0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
900148d0:	2b03      	cmp	r3, #3
900148d2:	d817      	bhi.n	90014904 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
900148d4:	e8df f003 	tbb	[pc, r3]
900148d8:	10090602 	.word	0x10090602
900148dc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
900148e0:	1850      	adds	r0, r2, r1
900148e2:	4770      	bx	lr
900148e4:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
900148e8:	e7fa      	b.n	900148e0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
900148ea:	8843      	ldrh	r3, [r0, #2]
900148ec:	88c0      	ldrh	r0, [r0, #6]
900148ee:	4418      	add	r0, r3
900148f0:	b200      	sxth	r0, r0
900148f2:	1a80      	subs	r0, r0, r2
900148f4:	3801      	subs	r0, #1
900148f6:	4770      	bx	lr
900148f8:	8843      	ldrh	r3, [r0, #2]
900148fa:	88c0      	ldrh	r0, [r0, #6]
900148fc:	4418      	add	r0, r3
900148fe:	b200      	sxth	r0, r0
90014900:	1a40      	subs	r0, r0, r1
90014902:	e7f7      	b.n	900148f4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90014904:	2000      	movs	r0, #0
90014906:	4770      	bx	lr

90014908 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90014908:	4b01      	ldr	r3, [pc, #4]	; (90014910 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
9001490a:	2200      	movs	r2, #0
9001490c:	601a      	str	r2, [r3, #0]
9001490e:	4770      	bx	lr
90014910:	2402358c 	.word	0x2402358c

90014914 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90014914:	4603      	mov	r3, r0
90014916:	b1c8      	cbz	r0, 9001494c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90014918:	0c02      	lsrs	r2, r0, #16
9001491a:	0412      	lsls	r2, r2, #16
9001491c:	b9a2      	cbnz	r2, 90014948 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
9001491e:	0403      	lsls	r3, r0, #16
90014920:	2010      	movs	r0, #16
90014922:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
90014926:	bf04      	itt	eq
90014928:	021b      	lsleq	r3, r3, #8
9001492a:	3008      	addeq	r0, #8
9001492c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
90014930:	bf04      	itt	eq
90014932:	011b      	lsleq	r3, r3, #4
90014934:	3004      	addeq	r0, #4
90014936:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
9001493a:	bf04      	itt	eq
9001493c:	009b      	lsleq	r3, r3, #2
9001493e:	3002      	addeq	r0, #2
90014940:	2b00      	cmp	r3, #0
90014942:	db04      	blt.n	9001494e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90014944:	3001      	adds	r0, #1
90014946:	4770      	bx	lr
90014948:	2000      	movs	r0, #0
9001494a:	e7ea      	b.n	90014922 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
9001494c:	2020      	movs	r0, #32
9001494e:	4770      	bx	lr

90014950 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90014950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014954:	b087      	sub	sp, #28
90014956:	460d      	mov	r5, r1
90014958:	4616      	mov	r6, r2
9001495a:	4698      	mov	r8, r3
9001495c:	4601      	mov	r1, r0
9001495e:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
90014962:	b120      	cbz	r0, 9001496e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014964:	b11a      	cbz	r2, 9001496e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90014966:	2d1f      	cmp	r5, #31
90014968:	d801      	bhi.n	9001496e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
9001496a:	2b1f      	cmp	r3, #31
9001496c:	d904      	bls.n	90014978 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
9001496e:	2000      	movs	r0, #0
90014970:	6038      	str	r0, [r7, #0]
90014972:	b007      	add	sp, #28
90014974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014978:	b97d      	cbnz	r5, 9001499a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
9001497a:	b143      	cbz	r3, 9001498e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
9001497c:	4602      	mov	r2, r0
9001497e:	462b      	mov	r3, r5
90014980:	4641      	mov	r1, r8
90014982:	4630      	mov	r0, r6
90014984:	e9cd 4700 	strd	r4, r7, [sp]
90014988:	f7ff ffe2 	bl	90014950 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
9001498c:	e7f1      	b.n	90014972 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001498e:	f04f 33ff 	mov.w	r3, #4294967295
90014992:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90014996:	603b      	str	r3, [r7, #0]
90014998:	e7eb      	b.n	90014972 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
9001499a:	fa32 fa05 	lsrs.w	sl, r2, r5
9001499e:	d106      	bne.n	900149ae <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
900149a0:	4346      	muls	r6, r0
900149a2:	fbb6 f0f4 	udiv	r0, r6, r4
900149a6:	fb04 6610 	mls	r6, r4, r0, r6
900149aa:	603e      	str	r6, [r7, #0]
900149ac:	e7e1      	b.n	90014972 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
900149ae:	2201      	movs	r2, #1
900149b0:	fa00 fb05 	lsl.w	fp, r0, r5
900149b4:	40aa      	lsls	r2, r5
900149b6:	fbbb f9f4 	udiv	r9, fp, r4
900149ba:	3a01      	subs	r2, #1
900149bc:	fb0a f309 	mul.w	r3, sl, r9
900149c0:	fb04 b919 	mls	r9, r4, r9, fp
900149c4:	4016      	ands	r6, r2
900149c6:	9303      	str	r3, [sp, #12]
900149c8:	4630      	mov	r0, r6
900149ca:	f7ff ffa3 	bl	90014914 <_ZN8touchgfx16TouchCalibration4clzuEm>
900149ce:	462b      	mov	r3, r5
900149d0:	460a      	mov	r2, r1
900149d2:	4601      	mov	r1, r0
900149d4:	4630      	mov	r0, r6
900149d6:	e9cd 4700 	strd	r4, r7, [sp]
900149da:	f7ff ffb9 	bl	90014950 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900149de:	4606      	mov	r6, r0
900149e0:	4648      	mov	r0, r9
900149e2:	eb05 0108 	add.w	r1, r5, r8
900149e6:	f7ff ff95 	bl	90014914 <_ZN8touchgfx16TouchCalibration4clzuEm>
900149ea:	ab05      	add	r3, sp, #20
900149ec:	464a      	mov	r2, r9
900149ee:	e9cd 4300 	strd	r4, r3, [sp]
900149f2:	4603      	mov	r3, r0
900149f4:	4650      	mov	r0, sl
900149f6:	f7ff ffab 	bl	90014950 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
900149fa:	6839      	ldr	r1, [r7, #0]
900149fc:	9a05      	ldr	r2, [sp, #20]
900149fe:	9b03      	ldr	r3, [sp, #12]
90014a00:	4411      	add	r1, r2
90014a02:	fbb1 f2f4 	udiv	r2, r1, r4
90014a06:	18d3      	adds	r3, r2, r3
90014a08:	fb04 1412 	mls	r4, r4, r2, r1
90014a0c:	441e      	add	r6, r3
90014a0e:	603c      	str	r4, [r7, #0]
90014a10:	4430      	add	r0, r6
90014a12:	e7ae      	b.n	90014972 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90014a14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90014a14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90014a18:	b085      	sub	sp, #20
90014a1a:	f1b0 0900 	subs.w	r9, r0, #0
90014a1e:	461d      	mov	r5, r3
90014a20:	4617      	mov	r7, r2
90014a22:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90014a24:	bfbb      	ittet	lt
90014a26:	f1c9 0900 	rsblt	r9, r9, #0
90014a2a:	f04f 36ff 	movlt.w	r6, #4294967295
90014a2e:	2601      	movge	r6, #1
90014a30:	6823      	ldrlt	r3, [r4, #0]
90014a32:	bfbc      	itt	lt
90014a34:	425b      	neglt	r3, r3
90014a36:	6023      	strlt	r3, [r4, #0]
90014a38:	2a00      	cmp	r2, #0
90014a3a:	da04      	bge.n	90014a46 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90014a3c:	6823      	ldr	r3, [r4, #0]
90014a3e:	4257      	negs	r7, r2
90014a40:	4276      	negs	r6, r6
90014a42:	425b      	negs	r3, r3
90014a44:	6023      	str	r3, [r4, #0]
90014a46:	2d00      	cmp	r5, #0
90014a48:	4638      	mov	r0, r7
90014a4a:	bfba      	itte	lt
90014a4c:	426d      	neglt	r5, r5
90014a4e:	f04f 38ff 	movlt.w	r8, #4294967295
90014a52:	f04f 0801 	movge.w	r8, #1
90014a56:	f7ff ff5d 	bl	90014914 <_ZN8touchgfx16TouchCalibration4clzuEm>
90014a5a:	ab03      	add	r3, sp, #12
90014a5c:	463a      	mov	r2, r7
90014a5e:	e9cd 5300 	strd	r5, r3, [sp]
90014a62:	4603      	mov	r3, r0
90014a64:	4648      	mov	r0, r9
90014a66:	f7ff ff73 	bl	90014950 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90014a6a:	6823      	ldr	r3, [r4, #0]
90014a6c:	9a03      	ldr	r2, [sp, #12]
90014a6e:	4546      	cmp	r6, r8
90014a70:	441a      	add	r2, r3
90014a72:	fb92 f3f5 	sdiv	r3, r2, r5
90014a76:	4418      	add	r0, r3
90014a78:	fb05 2313 	mls	r3, r5, r3, r2
90014a7c:	bf18      	it	ne
90014a7e:	4240      	negne	r0, r0
90014a80:	1c72      	adds	r2, r6, #1
90014a82:	6023      	str	r3, [r4, #0]
90014a84:	d105      	bne.n	90014a92 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90014a86:	2b00      	cmp	r3, #0
90014a88:	f1c3 0200 	rsb	r2, r3, #0
90014a8c:	db0b      	blt.n	90014aa6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90014a8e:	6022      	str	r2, [r4, #0]
90014a90:	e006      	b.n	90014aa0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014a92:	2e01      	cmp	r6, #1
90014a94:	d104      	bne.n	90014aa0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014a96:	2b00      	cmp	r3, #0
90014a98:	da02      	bge.n	90014aa0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90014a9a:	442b      	add	r3, r5
90014a9c:	3801      	subs	r0, #1
90014a9e:	6023      	str	r3, [r4, #0]
90014aa0:	b005      	add	sp, #20
90014aa2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90014aa6:	3801      	subs	r0, #1
90014aa8:	1b52      	subs	r2, r2, r5
90014aaa:	e7f0      	b.n	90014a8e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90014aac <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90014aac:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90014ab0:	4c1c      	ldr	r4, [pc, #112]	; (90014b24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90014ab2:	4605      	mov	r5, r0
90014ab4:	6807      	ldr	r7, [r0, #0]
90014ab6:	69a3      	ldr	r3, [r4, #24]
90014ab8:	b92b      	cbnz	r3, 90014ac6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90014aba:	6840      	ldr	r0, [r0, #4]
90014abc:	e9c5 7000 	strd	r7, r0, [r5]
90014ac0:	b004      	add	sp, #16
90014ac2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90014ac6:	f04f 0802 	mov.w	r8, #2
90014aca:	68a2      	ldr	r2, [r4, #8]
90014acc:	ae04      	add	r6, sp, #16
90014ace:	6820      	ldr	r0, [r4, #0]
90014ad0:	fb93 f1f8 	sdiv	r1, r3, r8
90014ad4:	440a      	add	r2, r1
90014ad6:	69e1      	ldr	r1, [r4, #28]
90014ad8:	f846 2d04 	str.w	r2, [r6, #-4]!
90014adc:	463a      	mov	r2, r7
90014ade:	9600      	str	r6, [sp, #0]
90014ae0:	f7ff ff98 	bl	90014a14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014ae4:	69a3      	ldr	r3, [r4, #24]
90014ae6:	4607      	mov	r7, r0
90014ae8:	686a      	ldr	r2, [r5, #4]
90014aea:	6a21      	ldr	r1, [r4, #32]
90014aec:	9600      	str	r6, [sp, #0]
90014aee:	6860      	ldr	r0, [r4, #4]
90014af0:	f7ff ff90 	bl	90014a14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014af4:	69a3      	ldr	r3, [r4, #24]
90014af6:	6962      	ldr	r2, [r4, #20]
90014af8:	4407      	add	r7, r0
90014afa:	6a61      	ldr	r1, [r4, #36]	; 0x24
90014afc:	9600      	str	r6, [sp, #0]
90014afe:	68e0      	ldr	r0, [r4, #12]
90014b00:	fb93 f8f8 	sdiv	r8, r3, r8
90014b04:	4442      	add	r2, r8
90014b06:	9203      	str	r2, [sp, #12]
90014b08:	682a      	ldr	r2, [r5, #0]
90014b0a:	f7ff ff83 	bl	90014a14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014b0e:	4680      	mov	r8, r0
90014b10:	9600      	str	r6, [sp, #0]
90014b12:	69a3      	ldr	r3, [r4, #24]
90014b14:	686a      	ldr	r2, [r5, #4]
90014b16:	6aa1      	ldr	r1, [r4, #40]	; 0x28
90014b18:	6920      	ldr	r0, [r4, #16]
90014b1a:	f7ff ff7b 	bl	90014a14 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90014b1e:	4440      	add	r0, r8
90014b20:	e7cc      	b.n	90014abc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90014b22:	bf00      	nop
90014b24:	24023590 	.word	0x24023590

90014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90014b28:	4b07      	ldr	r3, [pc, #28]	; (90014b48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90014b2a:	781b      	ldrb	r3, [r3, #0]
90014b2c:	2b01      	cmp	r3, #1
90014b2e:	d109      	bne.n	90014b44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90014b30:	f9b1 3000 	ldrsh.w	r3, [r1]
90014b34:	f9b0 2000 	ldrsh.w	r2, [r0]
90014b38:	8003      	strh	r3, [r0, #0]
90014b3a:	4b04      	ldr	r3, [pc, #16]	; (90014b4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90014b3c:	881b      	ldrh	r3, [r3, #0]
90014b3e:	3b01      	subs	r3, #1
90014b40:	1a9b      	subs	r3, r3, r2
90014b42:	800b      	strh	r3, [r1, #0]
90014b44:	4770      	bx	lr
90014b46:	bf00      	nop
90014b48:	24023574 	.word	0x24023574
90014b4c:	24023570 	.word	0x24023570

90014b50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90014b50:	4b07      	ldr	r3, [pc, #28]	; (90014b70 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90014b52:	b510      	push	{r4, lr}
90014b54:	781b      	ldrb	r3, [r3, #0]
90014b56:	2b01      	cmp	r3, #1
90014b58:	d108      	bne.n	90014b6c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90014b5a:	4b06      	ldr	r3, [pc, #24]	; (90014b74 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90014b5c:	880c      	ldrh	r4, [r1, #0]
90014b5e:	881b      	ldrh	r3, [r3, #0]
90014b60:	f9b0 2000 	ldrsh.w	r2, [r0]
90014b64:	3b01      	subs	r3, #1
90014b66:	1b1b      	subs	r3, r3, r4
90014b68:	8003      	strh	r3, [r0, #0]
90014b6a:	800a      	strh	r2, [r1, #0]
90014b6c:	bd10      	pop	{r4, pc}
90014b6e:	bf00      	nop
90014b70:	24023574 	.word	0x24023574
90014b74:	24023570 	.word	0x24023570

90014b78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90014b78:	4b0a      	ldr	r3, [pc, #40]	; (90014ba4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90014b7a:	b510      	push	{r4, lr}
90014b7c:	781b      	ldrb	r3, [r3, #0]
90014b7e:	2b01      	cmp	r3, #1
90014b80:	d10e      	bne.n	90014ba0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90014b82:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90014b86:	8843      	ldrh	r3, [r0, #2]
90014b88:	f9b0 4000 	ldrsh.w	r4, [r0]
90014b8c:	18ca      	adds	r2, r1, r3
90014b8e:	4b06      	ldr	r3, [pc, #24]	; (90014ba8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90014b90:	8044      	strh	r4, [r0, #2]
90014b92:	881b      	ldrh	r3, [r3, #0]
90014b94:	1a9b      	subs	r3, r3, r2
90014b96:	8003      	strh	r3, [r0, #0]
90014b98:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014b9c:	8081      	strh	r1, [r0, #4]
90014b9e:	80c3      	strh	r3, [r0, #6]
90014ba0:	bd10      	pop	{r4, pc}
90014ba2:	bf00      	nop
90014ba4:	24023574 	.word	0x24023574
90014ba8:	24023570 	.word	0x24023570

90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90014bac:	4b08      	ldr	r3, [pc, #32]	; (90014bd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90014bae:	781b      	ldrb	r3, [r3, #0]
90014bb0:	2b01      	cmp	r3, #1
90014bb2:	d10c      	bne.n	90014bce <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90014bb4:	8803      	ldrh	r3, [r0, #0]
90014bb6:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90014bba:	8842      	ldrh	r2, [r0, #2]
90014bbc:	8002      	strh	r2, [r0, #0]
90014bbe:	185a      	adds	r2, r3, r1
90014bc0:	4b04      	ldr	r3, [pc, #16]	; (90014bd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90014bc2:	881b      	ldrh	r3, [r3, #0]
90014bc4:	1a9b      	subs	r3, r3, r2
90014bc6:	8043      	strh	r3, [r0, #2]
90014bc8:	88c3      	ldrh	r3, [r0, #6]
90014bca:	80c1      	strh	r1, [r0, #6]
90014bcc:	8083      	strh	r3, [r0, #4]
90014bce:	4770      	bx	lr
90014bd0:	24023574 	.word	0x24023574
90014bd4:	24023570 	.word	0x24023570

90014bd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90014bd8:	4b07      	ldr	r3, [pc, #28]	; (90014bf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90014bda:	b510      	push	{r4, lr}
90014bdc:	781b      	ldrb	r3, [r3, #0]
90014bde:	2b01      	cmp	r3, #1
90014be0:	d108      	bne.n	90014bf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90014be2:	f9b1 3000 	ldrsh.w	r3, [r1]
90014be6:	f9b0 4000 	ldrsh.w	r4, [r0]
90014bea:	8003      	strh	r3, [r0, #0]
90014bec:	8893      	ldrh	r3, [r2, #4]
90014bee:	3b01      	subs	r3, #1
90014bf0:	1b1b      	subs	r3, r3, r4
90014bf2:	800b      	strh	r3, [r1, #0]
90014bf4:	bd10      	pop	{r4, pc}
90014bf6:	bf00      	nop
90014bf8:	24023574 	.word	0x24023574

90014bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
90014bfc:	4b0b      	ldr	r3, [pc, #44]	; (90014c2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
90014bfe:	781b      	ldrb	r3, [r3, #0]
90014c00:	2b01      	cmp	r3, #1
90014c02:	d111      	bne.n	90014c28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
90014c04:	680b      	ldr	r3, [r1, #0]
90014c06:	ed90 7a00 	vldr	s14, [r0]
90014c0a:	6003      	str	r3, [r0, #0]
90014c0c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90014c10:	eddf 6a07 	vldr	s13, [pc, #28]	; 90014c30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
90014c14:	ee07 3a90 	vmov	s15, r3
90014c18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90014c1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
90014c20:	ee77 7ac7 	vsub.f32	s15, s15, s14
90014c24:	edc1 7a00 	vstr	s15, [r1]
90014c28:	4770      	bx	lr
90014c2a:	bf00      	nop
90014c2c:	24023574 	.word	0x24023574
90014c30:	38d1b717 	.word	0x38d1b717

90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90014c34:	4b0a      	ldr	r3, [pc, #40]	; (90014c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90014c36:	460a      	mov	r2, r1
90014c38:	b510      	push	{r4, lr}
90014c3a:	781b      	ldrb	r3, [r3, #0]
90014c3c:	2b01      	cmp	r3, #1
90014c3e:	d10d      	bne.n	90014c5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90014c40:	8881      	ldrh	r1, [r0, #4]
90014c42:	8803      	ldrh	r3, [r0, #0]
90014c44:	440b      	add	r3, r1
90014c46:	4601      	mov	r1, r0
90014c48:	3b01      	subs	r3, #1
90014c4a:	f821 3b02 	strh.w	r3, [r1], #2
90014c4e:	f7ff ffc3 	bl	90014bd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90014c52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014c56:	88c2      	ldrh	r2, [r0, #6]
90014c58:	80c3      	strh	r3, [r0, #6]
90014c5a:	8082      	strh	r2, [r0, #4]
90014c5c:	bd10      	pop	{r4, pc}
90014c5e:	bf00      	nop
90014c60:	24023574 	.word	0x24023574

90014c64 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90014c64:	4770      	bx	lr
	...

90014c68 <_ZN8touchgfx11Application13requestRedrawEv>:
90014c68:	4b06      	ldr	r3, [pc, #24]	; (90014c84 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90014c6a:	2100      	movs	r1, #0
90014c6c:	f9b3 2000 	ldrsh.w	r2, [r3]
90014c70:	4b05      	ldr	r3, [pc, #20]	; (90014c88 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90014c72:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
90014c76:	f9b3 3000 	ldrsh.w	r3, [r3]
90014c7a:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
90014c7e:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
90014c82:	4770      	bx	lr
90014c84:	24023570 	.word	0x24023570
90014c88:	24023572 	.word	0x24023572

90014c8c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90014c8c:	4b03      	ldr	r3, [pc, #12]	; (90014c9c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90014c8e:	6818      	ldr	r0, [r3, #0]
90014c90:	b110      	cbz	r0, 90014c98 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90014c92:	6803      	ldr	r3, [r0, #0]
90014c94:	699b      	ldr	r3, [r3, #24]
90014c96:	4718      	bx	r3
90014c98:	4770      	bx	lr
90014c9a:	bf00      	nop
90014c9c:	240235c0 	.word	0x240235c0

90014ca0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90014ca0:	4770      	bx	lr
	...

90014ca4 <_ZN8touchgfx11Application4drawEv>:
90014ca4:	4b09      	ldr	r3, [pc, #36]	; (90014ccc <_ZN8touchgfx11Application4drawEv+0x28>)
90014ca6:	b507      	push	{r0, r1, r2, lr}
90014ca8:	f9b3 2000 	ldrsh.w	r2, [r3]
90014cac:	2100      	movs	r1, #0
90014cae:	4b08      	ldr	r3, [pc, #32]	; (90014cd0 <_ZN8touchgfx11Application4drawEv+0x2c>)
90014cb0:	9100      	str	r1, [sp, #0]
90014cb2:	4669      	mov	r1, sp
90014cb4:	f9b3 3000 	ldrsh.w	r3, [r3]
90014cb8:	f8ad 2004 	strh.w	r2, [sp, #4]
90014cbc:	f8ad 3006 	strh.w	r3, [sp, #6]
90014cc0:	6803      	ldr	r3, [r0, #0]
90014cc2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90014cc4:	4798      	blx	r3
90014cc6:	b003      	add	sp, #12
90014cc8:	f85d fb04 	ldr.w	pc, [sp], #4
90014ccc:	24023570 	.word	0x24023570
90014cd0:	24023572 	.word	0x24023572

90014cd4 <_ZN8touchgfx11Application10invalidateEv>:
90014cd4:	4b09      	ldr	r3, [pc, #36]	; (90014cfc <_ZN8touchgfx11Application10invalidateEv+0x28>)
90014cd6:	b082      	sub	sp, #8
90014cd8:	2100      	movs	r1, #0
90014cda:	f9b3 2000 	ldrsh.w	r2, [r3]
90014cde:	4b08      	ldr	r3, [pc, #32]	; (90014d00 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90014ce0:	f8ad 2004 	strh.w	r2, [sp, #4]
90014ce4:	aa02      	add	r2, sp, #8
90014ce6:	f9b3 3000 	ldrsh.w	r3, [r3]
90014cea:	9100      	str	r1, [sp, #0]
90014cec:	f8ad 3006 	strh.w	r3, [sp, #6]
90014cf0:	6803      	ldr	r3, [r0, #0]
90014cf2:	e912 0006 	ldmdb	r2, {r1, r2}
90014cf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90014cf8:	b002      	add	sp, #8
90014cfa:	4718      	bx	r3
90014cfc:	24023570 	.word	0x24023570
90014d00:	24023572 	.word	0x24023572

90014d04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90014d04:	4b03      	ldr	r3, [pc, #12]	; (90014d14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90014d06:	6818      	ldr	r0, [r3, #0]
90014d08:	b110      	cbz	r0, 90014d10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90014d0a:	6803      	ldr	r3, [r0, #0]
90014d0c:	69db      	ldr	r3, [r3, #28]
90014d0e:	4718      	bx	r3
90014d10:	4770      	bx	lr
90014d12:	bf00      	nop
90014d14:	240235c0 	.word	0x240235c0

90014d18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90014d18:	4b03      	ldr	r3, [pc, #12]	; (90014d28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90014d1a:	6818      	ldr	r0, [r3, #0]
90014d1c:	b110      	cbz	r0, 90014d24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90014d1e:	6803      	ldr	r3, [r0, #0]
90014d20:	6a1b      	ldr	r3, [r3, #32]
90014d22:	4718      	bx	r3
90014d24:	4770      	bx	lr
90014d26:	bf00      	nop
90014d28:	240235c0 	.word	0x240235c0

90014d2c <_ZN8touchgfx11Application16clearCachedAreasEv>:
90014d2c:	2300      	movs	r3, #0
90014d2e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
90014d32:	4770      	bx	lr

90014d34 <_ZN8touchgfx11Application14handleKeyEventEh>:
90014d34:	4b03      	ldr	r3, [pc, #12]	; (90014d44 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90014d36:	6818      	ldr	r0, [r3, #0]
90014d38:	b110      	cbz	r0, 90014d40 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90014d3a:	6803      	ldr	r3, [r0, #0]
90014d3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90014d3e:	4718      	bx	r3
90014d40:	4770      	bx	lr
90014d42:	bf00      	nop
90014d44:	240235c0 	.word	0x240235c0

90014d48 <_ZN8touchgfx11ApplicationD1Ev>:
90014d48:	4770      	bx	lr

90014d4a <_ZN8touchgfx11ApplicationD0Ev>:
90014d4a:	b510      	push	{r4, lr}
90014d4c:	4604      	mov	r4, r0
90014d4e:	f44f 719e 	mov.w	r1, #316	; 0x13c
90014d52:	f011 fa2e 	bl	900261b2 <_ZdlPvj>
90014d56:	4620      	mov	r0, r4
90014d58:	bd10      	pop	{r4, pc}

90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>:
90014d5a:	b510      	push	{r4, lr}
90014d5c:	f9b1 4000 	ldrsh.w	r4, [r1]
90014d60:	888a      	ldrh	r2, [r1, #4]
90014d62:	f9b0 3000 	ldrsh.w	r3, [r0]
90014d66:	4422      	add	r2, r4
90014d68:	b212      	sxth	r2, r2
90014d6a:	4293      	cmp	r3, r2
90014d6c:	da15      	bge.n	90014d9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014d6e:	8882      	ldrh	r2, [r0, #4]
90014d70:	4413      	add	r3, r2
90014d72:	b21b      	sxth	r3, r3
90014d74:	429c      	cmp	r4, r3
90014d76:	da10      	bge.n	90014d9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014d78:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90014d7c:	88c9      	ldrh	r1, [r1, #6]
90014d7e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90014d82:	4419      	add	r1, r3
90014d84:	b209      	sxth	r1, r1
90014d86:	428a      	cmp	r2, r1
90014d88:	da07      	bge.n	90014d9a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90014d8a:	88c0      	ldrh	r0, [r0, #6]
90014d8c:	4410      	add	r0, r2
90014d8e:	b200      	sxth	r0, r0
90014d90:	4283      	cmp	r3, r0
90014d92:	bfac      	ite	ge
90014d94:	2000      	movge	r0, #0
90014d96:	2001      	movlt	r0, #1
90014d98:	bd10      	pop	{r4, pc}
90014d9a:	2000      	movs	r0, #0
90014d9c:	e7fc      	b.n	90014d98 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90014d9e <_ZN8touchgfx4Rect10restrictToEss>:
90014d9e:	f9b0 3000 	ldrsh.w	r3, [r0]
90014da2:	2b00      	cmp	r3, #0
90014da4:	b510      	push	{r4, lr}
90014da6:	da04      	bge.n	90014db2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
90014da8:	8884      	ldrh	r4, [r0, #4]
90014daa:	4423      	add	r3, r4
90014dac:	8083      	strh	r3, [r0, #4]
90014dae:	2300      	movs	r3, #0
90014db0:	8003      	strh	r3, [r0, #0]
90014db2:	f9b0 4000 	ldrsh.w	r4, [r0]
90014db6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90014dba:	1b09      	subs	r1, r1, r4
90014dbc:	428b      	cmp	r3, r1
90014dbe:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90014dc2:	bfc8      	it	gt
90014dc4:	8081      	strhgt	r1, [r0, #4]
90014dc6:	2b00      	cmp	r3, #0
90014dc8:	da04      	bge.n	90014dd4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
90014dca:	88c1      	ldrh	r1, [r0, #6]
90014dcc:	440b      	add	r3, r1
90014dce:	80c3      	strh	r3, [r0, #6]
90014dd0:	2300      	movs	r3, #0
90014dd2:	8043      	strh	r3, [r0, #2]
90014dd4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90014dd8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90014ddc:	1a52      	subs	r2, r2, r1
90014dde:	4293      	cmp	r3, r2
90014de0:	bfc8      	it	gt
90014de2:	80c2      	strhgt	r2, [r0, #6]
90014de4:	bd10      	pop	{r4, pc}
	...

90014de8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
90014de8:	4b10      	ldr	r3, [pc, #64]	; (90014e2c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
90014dea:	b510      	push	{r4, lr}
90014dec:	460c      	mov	r4, r1
90014dee:	f9b3 2000 	ldrsh.w	r2, [r3]
90014df2:	4b0f      	ldr	r3, [pc, #60]	; (90014e30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90014df4:	4620      	mov	r0, r4
90014df6:	f9b3 1000 	ldrsh.w	r1, [r3]
90014dfa:	f7ff ffd0 	bl	90014d9e <_ZN8touchgfx4Rect10restrictToEss>
90014dfe:	4b0d      	ldr	r3, [pc, #52]	; (90014e34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90014e00:	6818      	ldr	r0, [r3, #0]
90014e02:	b190      	cbz	r0, 90014e2a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90014e04:	6803      	ldr	r3, [r0, #0]
90014e06:	4621      	mov	r1, r4
90014e08:	689b      	ldr	r3, [r3, #8]
90014e0a:	4798      	blx	r3
90014e0c:	4b0a      	ldr	r3, [pc, #40]	; (90014e38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90014e0e:	6818      	ldr	r0, [r3, #0]
90014e10:	b118      	cbz	r0, 90014e1a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90014e12:	6803      	ldr	r3, [r0, #0]
90014e14:	4621      	mov	r1, r4
90014e16:	689b      	ldr	r3, [r3, #8]
90014e18:	4798      	blx	r3
90014e1a:	4b08      	ldr	r3, [pc, #32]	; (90014e3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
90014e1c:	4621      	mov	r1, r4
90014e1e:	6818      	ldr	r0, [r3, #0]
90014e20:	6803      	ldr	r3, [r0, #0]
90014e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90014e26:	69db      	ldr	r3, [r3, #28]
90014e28:	4718      	bx	r3
90014e2a:	bd10      	pop	{r4, pc}
90014e2c:	24023572 	.word	0x24023572
90014e30:	24023570 	.word	0x24023570
90014e34:	240235c0 	.word	0x240235c0
90014e38:	240235bc 	.word	0x240235bc
90014e3c:	2402357c 	.word	0x2402357c

90014e40 <_ZNK8touchgfx4Rect8includesERKS0_>:
90014e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014e42:	4606      	mov	r6, r0
90014e44:	4608      	mov	r0, r1
90014e46:	460f      	mov	r7, r1
90014e48:	f7fb f989 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90014e4c:	b9e8      	cbnz	r0, 90014e8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014e4e:	f9b7 5000 	ldrsh.w	r5, [r7]
90014e52:	f9b6 4000 	ldrsh.w	r4, [r6]
90014e56:	42a5      	cmp	r5, r4
90014e58:	db17      	blt.n	90014e8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014e5a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
90014e5e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
90014e62:	429a      	cmp	r2, r3
90014e64:	db11      	blt.n	90014e8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014e66:	88b9      	ldrh	r1, [r7, #4]
90014e68:	440d      	add	r5, r1
90014e6a:	88b1      	ldrh	r1, [r6, #4]
90014e6c:	440c      	add	r4, r1
90014e6e:	b22d      	sxth	r5, r5
90014e70:	b224      	sxth	r4, r4
90014e72:	42a5      	cmp	r5, r4
90014e74:	dc09      	bgt.n	90014e8a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
90014e76:	88f8      	ldrh	r0, [r7, #6]
90014e78:	4410      	add	r0, r2
90014e7a:	88f2      	ldrh	r2, [r6, #6]
90014e7c:	4413      	add	r3, r2
90014e7e:	b200      	sxth	r0, r0
90014e80:	b21b      	sxth	r3, r3
90014e82:	4298      	cmp	r0, r3
90014e84:	bfcc      	ite	gt
90014e86:	2000      	movgt	r0, #0
90014e88:	2001      	movle	r0, #1
90014e8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014e8c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90014e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90014e8e:	4604      	mov	r4, r0
90014e90:	4608      	mov	r0, r1
90014e92:	460d      	mov	r5, r1
90014e94:	f7fb f963 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90014e98:	b978      	cbnz	r0, 90014eba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
90014e9a:	4620      	mov	r0, r4
90014e9c:	f7fb f95f 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90014ea0:	f9b5 6000 	ldrsh.w	r6, [r5]
90014ea4:	b150      	cbz	r0, 90014ebc <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
90014ea6:	8026      	strh	r6, [r4, #0]
90014ea8:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90014eac:	8063      	strh	r3, [r4, #2]
90014eae:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90014eb2:	80a3      	strh	r3, [r4, #4]
90014eb4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90014eb8:	80e3      	strh	r3, [r4, #6]
90014eba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90014ebc:	f9b4 1000 	ldrsh.w	r1, [r4]
90014ec0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90014ec4:	42b1      	cmp	r1, r6
90014ec6:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
90014eca:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90014ece:	460f      	mov	r7, r1
90014ed0:	88ed      	ldrh	r5, [r5, #6]
90014ed2:	bfa8      	it	ge
90014ed4:	4637      	movge	r7, r6
90014ed6:	4293      	cmp	r3, r2
90014ed8:	4618      	mov	r0, r3
90014eda:	4466      	add	r6, ip
90014edc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90014ee0:	bfa8      	it	ge
90014ee2:	4610      	movge	r0, r2
90014ee4:	442a      	add	r2, r5
90014ee6:	88e5      	ldrh	r5, [r4, #6]
90014ee8:	4461      	add	r1, ip
90014eea:	b236      	sxth	r6, r6
90014eec:	8027      	strh	r7, [r4, #0]
90014eee:	442b      	add	r3, r5
90014ef0:	b209      	sxth	r1, r1
90014ef2:	b212      	sxth	r2, r2
90014ef4:	8060      	strh	r0, [r4, #2]
90014ef6:	b21b      	sxth	r3, r3
90014ef8:	428e      	cmp	r6, r1
90014efa:	bfac      	ite	ge
90014efc:	ebc7 0106 	rsbge	r1, r7, r6
90014f00:	ebc7 0101 	rsblt	r1, r7, r1
90014f04:	429a      	cmp	r2, r3
90014f06:	bfac      	ite	ge
90014f08:	ebc0 0202 	rsbge	r2, r0, r2
90014f0c:	ebc0 0203 	rsblt	r2, r0, r3
90014f10:	80a1      	strh	r1, [r4, #4]
90014f12:	80e2      	strh	r2, [r4, #6]
90014f14:	e7d1      	b.n	90014eba <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

90014f18 <_ZN8touchgfx11Application11getInstanceEv>:
90014f18:	4b01      	ldr	r3, [pc, #4]	; (90014f20 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
90014f1a:	6818      	ldr	r0, [r3, #0]
90014f1c:	4770      	bx	lr
90014f1e:	bf00      	nop
90014f20:	240235d0 	.word	0x240235d0

90014f24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
90014f24:	2300      	movs	r3, #0
90014f26:	b510      	push	{r4, lr}
90014f28:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
90014f2c:	4604      	mov	r4, r0
90014f2e:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
90014f32:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90014f36:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014f3a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
90014f3e:	429a      	cmp	r2, r3
90014f40:	d90e      	bls.n	90014f60 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
90014f42:	18e2      	adds	r2, r4, r3
90014f44:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
90014f48:	b122      	cbz	r2, 90014f54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
90014f4a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
90014f4e:	6803      	ldr	r3, [r0, #0]
90014f50:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90014f52:	4798      	blx	r3
90014f54:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
90014f58:	3301      	adds	r3, #1
90014f5a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90014f5e:	e7ea      	b.n	90014f36 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
90014f60:	bd10      	pop	{r4, pc}

90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90014f62:	2300      	movs	r3, #0
90014f64:	f100 0284 	add.w	r2, r0, #132	; 0x84
90014f68:	30a4      	adds	r0, #164	; 0xa4
90014f6a:	f820 3c24 	strh.w	r3, [r0, #-36]
90014f6e:	f802 3b01 	strb.w	r3, [r2], #1
90014f72:	4282      	cmp	r2, r0
90014f74:	d1fb      	bne.n	90014f6e <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
90014f76:	4770      	bx	lr

90014f78 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90014f78:	b570      	push	{r4, r5, r6, lr}
90014f7a:	4c0b      	ldr	r4, [pc, #44]	; (90014fa8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90014f7c:	4605      	mov	r5, r0
90014f7e:	460e      	mov	r6, r1
90014f80:	6820      	ldr	r0, [r4, #0]
90014f82:	b110      	cbz	r0, 90014f8a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
90014f84:	6803      	ldr	r3, [r0, #0]
90014f86:	695b      	ldr	r3, [r3, #20]
90014f88:	4798      	blx	r3
90014f8a:	1d28      	adds	r0, r5, #4
90014f8c:	f7ff ffe9 	bl	90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90014f90:	6026      	str	r6, [r4, #0]
90014f92:	6833      	ldr	r3, [r6, #0]
90014f94:	4630      	mov	r0, r6
90014f96:	68db      	ldr	r3, [r3, #12]
90014f98:	4798      	blx	r3
90014f9a:	682b      	ldr	r3, [r5, #0]
90014f9c:	4628      	mov	r0, r5
90014f9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90014fa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90014fa4:	4718      	bx	r3
90014fa6:	bf00      	nop
90014fa8:	240235c0 	.word	0x240235c0

90014fac <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90014fac:	2300      	movs	r3, #0
90014fae:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
90014fb2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
90014fb6:	461a      	mov	r2, r3
90014fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
90014fba:	461c      	mov	r4, r3
90014fbc:	461d      	mov	r5, r3
90014fbe:	459c      	cmp	ip, r3
90014fc0:	dd1a      	ble.n	90014ff8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
90014fc2:	18c6      	adds	r6, r0, r3
90014fc4:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
90014fc8:	b16e      	cbz	r6, 90014fe6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90014fca:	429a      	cmp	r2, r3
90014fcc:	d008      	beq.n	90014fe0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90014fce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
90014fd2:	fa1f fe82 	uxth.w	lr, r2
90014fd6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90014fda:	1887      	adds	r7, r0, r2
90014fdc:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
90014fe0:	3201      	adds	r2, #1
90014fe2:	3301      	adds	r3, #1
90014fe4:	e7eb      	b.n	90014fbe <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
90014fe6:	4299      	cmp	r1, r3
90014fe8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
90014fec:	bfa8      	it	ge
90014fee:	3501      	addge	r5, #1
90014ff0:	429e      	cmp	r6, r3
90014ff2:	bfc8      	it	gt
90014ff4:	3401      	addgt	r4, #1
90014ff6:	e7f4      	b.n	90014fe2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
90014ff8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
90014ffc:	1b49      	subs	r1, r1, r5
90014ffe:	1b1b      	subs	r3, r3, r4
90015000:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
90015004:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
90015008:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
9001500c:	4293      	cmp	r3, r2
9001500e:	dd03      	ble.n	90015018 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
90015010:	3b01      	subs	r3, #1
90015012:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
90015016:	e7f7      	b.n	90015008 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
90015018:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

9001501c <_ZN8touchgfx11Application15handleTickEventEv>:
9001501c:	b570      	push	{r4, r5, r6, lr}
9001501e:	4d16      	ldr	r5, [pc, #88]	; (90015078 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
90015020:	4604      	mov	r4, r0
90015022:	6828      	ldr	r0, [r5, #0]
90015024:	b140      	cbz	r0, 90015038 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
90015026:	7a03      	ldrb	r3, [r0, #8]
90015028:	b933      	cbnz	r3, 90015038 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
9001502a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001502e:	6803      	ldr	r3, [r0, #0]
90015030:	689b      	ldr	r3, [r3, #8]
90015032:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015036:	4718      	bx	r3
90015038:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
9001503c:	4e0f      	ldr	r6, [pc, #60]	; (9001507c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
9001503e:	b973      	cbnz	r3, 9001505e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015040:	b168      	cbz	r0, 9001505e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015042:	7a03      	ldrb	r3, [r0, #8]
90015044:	b15b      	cbz	r3, 9001505e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
90015046:	6830      	ldr	r0, [r6, #0]
90015048:	b110      	cbz	r0, 90015050 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
9001504a:	6803      	ldr	r3, [r0, #0]
9001504c:	691b      	ldr	r3, [r3, #16]
9001504e:	4798      	blx	r3
90015050:	6828      	ldr	r0, [r5, #0]
90015052:	6803      	ldr	r3, [r0, #0]
90015054:	68db      	ldr	r3, [r3, #12]
90015056:	4798      	blx	r3
90015058:	2301      	movs	r3, #1
9001505a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
9001505e:	3404      	adds	r4, #4
90015060:	4620      	mov	r0, r4
90015062:	f7ff ff5f 	bl	90014f24 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
90015066:	4620      	mov	r0, r4
90015068:	f7ff ffa0 	bl	90014fac <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001506c:	6830      	ldr	r0, [r6, #0]
9001506e:	b110      	cbz	r0, 90015076 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90015070:	6803      	ldr	r3, [r0, #0]
90015072:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90015074:	e7dd      	b.n	90015032 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
90015076:	bd70      	pop	{r4, r5, r6, pc}
90015078:	240235c4 	.word	0x240235c4
9001507c:	240235c0 	.word	0x240235c0

90015080 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
90015080:	4603      	mov	r3, r0
90015082:	f100 0140 	add.w	r1, r0, #64	; 0x40
90015086:	2200      	movs	r2, #0
90015088:	801a      	strh	r2, [r3, #0]
9001508a:	3308      	adds	r3, #8
9001508c:	f823 2c06 	strh.w	r2, [r3, #-6]
90015090:	f823 2c04 	strh.w	r2, [r3, #-4]
90015094:	f823 2c02 	strh.w	r2, [r3, #-2]
90015098:	428b      	cmp	r3, r1
9001509a:	d1f5      	bne.n	90015088 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
9001509c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
900150a0:	4770      	bx	lr
	...

900150a4 <_ZN8touchgfx11ApplicationC1Ev>:
900150a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900150a6:	4b1d      	ldr	r3, [pc, #116]	; (9001511c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900150a8:	4606      	mov	r6, r0
900150aa:	4604      	mov	r4, r0
900150ac:	2500      	movs	r5, #0
900150ae:	f846 3b04 	str.w	r3, [r6], #4
900150b2:	22a8      	movs	r2, #168	; 0xa8
900150b4:	2100      	movs	r1, #0
900150b6:	4630      	mov	r0, r6
900150b8:	f011 fb82 	bl	900267c0 <memset>
900150bc:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
900150c0:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900150c4:	4f16      	ldr	r7, [pc, #88]	; (90015120 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900150c6:	f7ff ffdb 	bl	90015080 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900150ca:	f104 00ee 	add.w	r0, r4, #238	; 0xee
900150ce:	f7ff ffd7 	bl	90015080 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900150d2:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
900150d6:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
900150da:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
900150de:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
900150e2:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
900150e6:	490f      	ldr	r1, [pc, #60]	; (90015124 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
900150e8:	480f      	ldr	r0, [pc, #60]	; (90015128 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
900150ea:	f010 fb9b 	bl	90025824 <CRC_Lock>
900150ee:	4b0f      	ldr	r3, [pc, #60]	; (9001512c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
900150f0:	b158      	cbz	r0, 9001510a <_ZN8touchgfx11ApplicationC1Ev+0x66>
900150f2:	801d      	strh	r5, [r3, #0]
900150f4:	2300      	movs	r3, #0
900150f6:	4a0e      	ldr	r2, [pc, #56]	; (90015130 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
900150f8:	4630      	mov	r0, r6
900150fa:	6013      	str	r3, [r2, #0]
900150fc:	4a0d      	ldr	r2, [pc, #52]	; (90015134 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
900150fe:	603b      	str	r3, [r7, #0]
90015100:	6013      	str	r3, [r2, #0]
90015102:	f7ff ff2e 	bl	90014f62 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90015106:	4620      	mov	r0, r4
90015108:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001510a:	f44f 6280 	mov.w	r2, #1024	; 0x400
9001510e:	2002      	movs	r0, #2
90015110:	801a      	strh	r2, [r3, #0]
90015112:	6038      	str	r0, [r7, #0]
90015114:	f001 fb06 	bl	90016724 <_ZN8touchgfx6Screen4drawEv>
90015118:	e7ec      	b.n	900150f4 <_ZN8touchgfx11ApplicationC1Ev+0x50>
9001511a:	bf00      	nop
9001511c:	9002a790 	.word	0x9002a790
90015120:	240235c0 	.word	0x240235c0
90015124:	b5e8b5cd 	.word	0xb5e8b5cd
90015128:	f407a5c2 	.word	0xf407a5c2
9001512c:	24000074 	.word	0x24000074
90015130:	240235d0 	.word	0x240235d0
90015134:	240235c4 	.word	0x240235c4

90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90015138:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
9001513c:	3b01      	subs	r3, #1
9001513e:	b29b      	uxth	r3, r3
90015140:	428b      	cmp	r3, r1
90015142:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
90015146:	b510      	push	{r4, lr}
90015148:	d908      	bls.n	9001515c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
9001514a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001514e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
90015152:	681a      	ldr	r2, [r3, #0]
90015154:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90015158:	685a      	ldr	r2, [r3, #4]
9001515a:	6062      	str	r2, [r4, #4]
9001515c:	bd10      	pop	{r4, pc}
	...

90015160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90015160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015164:	b08f      	sub	sp, #60	; 0x3c
90015166:	4b8f      	ldr	r3, [pc, #572]	; (900153a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
90015168:	4683      	mov	fp, r0
9001516a:	ac0a      	add	r4, sp, #40	; 0x28
9001516c:	e884 0006 	stmia.w	r4, {r1, r2}
90015170:	f9b3 2000 	ldrsh.w	r2, [r3]
90015174:	4620      	mov	r0, r4
90015176:	4b8c      	ldr	r3, [pc, #560]	; (900153a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
90015178:	f9b3 1000 	ldrsh.w	r1, [r3]
9001517c:	f7ff fe0f 	bl	90014d9e <_ZN8touchgfx4Rect10restrictToEss>
90015180:	4620      	mov	r0, r4
90015182:	f7fa ffec 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015186:	2800      	cmp	r0, #0
90015188:	d16a      	bne.n	90015260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001518a:	9403      	str	r4, [sp, #12]
9001518c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015190:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90015194:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
90015198:	9301      	str	r3, [sp, #4]
9001519a:	35a4      	adds	r5, #164	; 0xa4
9001519c:	b15c      	cbz	r4, 900151b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
9001519e:	4629      	mov	r1, r5
900151a0:	9803      	ldr	r0, [sp, #12]
900151a2:	f7ff fe4d 	bl	90014e40 <_ZNK8touchgfx4Rect8includesERKS0_>
900151a6:	3c01      	subs	r4, #1
900151a8:	b118      	cbz	r0, 900151b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
900151aa:	b2a1      	uxth	r1, r4
900151ac:	9801      	ldr	r0, [sp, #4]
900151ae:	f7ff ffc3 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900151b2:	3d08      	subs	r5, #8
900151b4:	e7f2      	b.n	9001519c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
900151b6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
900151ba:	f10a 33ff 	add.w	r3, sl, #4294967295
900151be:	f8cd a010 	str.w	sl, [sp, #16]
900151c2:	9302      	str	r3, [sp, #8]
900151c4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900151c8:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
900151cc:	9306      	str	r3, [sp, #24]
900151ce:	445c      	add	r4, fp
900151d0:	2500      	movs	r5, #0
900151d2:	4626      	mov	r6, r4
900151d4:	f8cd a014 	str.w	sl, [sp, #20]
900151d8:	462f      	mov	r7, r5
900151da:	9b05      	ldr	r3, [sp, #20]
900151dc:	2b00      	cmp	r3, #0
900151de:	d073      	beq.n	900152c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
900151e0:	9903      	ldr	r1, [sp, #12]
900151e2:	4630      	mov	r0, r6
900151e4:	f7ff fdb9 	bl	90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>
900151e8:	b350      	cbz	r0, 90015240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900151ea:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
900151ee:	f9b6 c000 	ldrsh.w	ip, [r6]
900151f2:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
900151f6:	45e6      	cmp	lr, ip
900151f8:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
900151fc:	db33      	blt.n	90015266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
900151fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
90015202:	88b3      	ldrh	r3, [r6, #4]
90015204:	4472      	add	r2, lr
90015206:	4463      	add	r3, ip
90015208:	b212      	sxth	r2, r2
9001520a:	b21b      	sxth	r3, r3
9001520c:	429a      	cmp	r2, r3
9001520e:	dc2a      	bgt.n	90015266 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
90015210:	fa1f f289 	uxth.w	r2, r9
90015214:	88f3      	ldrh	r3, [r6, #6]
90015216:	45c8      	cmp	r8, r9
90015218:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001521c:	4413      	add	r3, r2
9001521e:	fa1f fc88 	uxth.w	ip, r8
90015222:	b29b      	uxth	r3, r3
90015224:	fa0f fe83 	sxth.w	lr, r3
90015228:	db0f      	blt.n	9001524a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
9001522a:	eba3 030c 	sub.w	r3, r3, ip
9001522e:	1ac9      	subs	r1, r1, r3
90015230:	b209      	sxth	r1, r1
90015232:	2900      	cmp	r1, #0
90015234:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
90015238:	dd12      	ble.n	90015260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001523a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
9001523e:	4605      	mov	r5, r0
90015240:	9b05      	ldr	r3, [sp, #20]
90015242:	3e08      	subs	r6, #8
90015244:	3b01      	subs	r3, #1
90015246:	9305      	str	r3, [sp, #20]
90015248:	e7c7      	b.n	900151da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
9001524a:	4461      	add	r1, ip
9001524c:	b209      	sxth	r1, r1
9001524e:	4571      	cmp	r1, lr
90015250:	dc38      	bgt.n	900152c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015252:	eba2 020c 	sub.w	r2, r2, ip
90015256:	b212      	sxth	r2, r2
90015258:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001525c:	2a00      	cmp	r2, #0
9001525e:	dcee      	bgt.n	9001523e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
90015260:	b00f      	add	sp, #60	; 0x3c
90015262:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015266:	45c8      	cmp	r8, r9
90015268:	db2c      	blt.n	900152c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
9001526a:	88f3      	ldrh	r3, [r6, #6]
9001526c:	4499      	add	r9, r3
9001526e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
90015272:	4498      	add	r8, r3
90015274:	fa0f f989 	sxth.w	r9, r9
90015278:	fa0f f888 	sxth.w	r8, r8
9001527c:	45c1      	cmp	r9, r8
9001527e:	db21      	blt.n	900152c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
90015280:	fa1f f28c 	uxth.w	r2, ip
90015284:	88b3      	ldrh	r3, [r6, #4]
90015286:	45e6      	cmp	lr, ip
90015288:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001528c:	4413      	add	r3, r2
9001528e:	fa1f f88e 	uxth.w	r8, lr
90015292:	b29b      	uxth	r3, r3
90015294:	fa0f f983 	sxth.w	r9, r3
90015298:	db0a      	blt.n	900152b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
9001529a:	eba3 0308 	sub.w	r3, r3, r8
9001529e:	1ac9      	subs	r1, r1, r3
900152a0:	b209      	sxth	r1, r1
900152a2:	2900      	cmp	r1, #0
900152a4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
900152a8:	ddda      	ble.n	90015260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
900152aa:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
900152ae:	e7c6      	b.n	9001523e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
900152b0:	4441      	add	r1, r8
900152b2:	b209      	sxth	r1, r1
900152b4:	4549      	cmp	r1, r9
900152b6:	dc05      	bgt.n	900152c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
900152b8:	eba2 0208 	sub.w	r2, r2, r8
900152bc:	b212      	sxth	r2, r2
900152be:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
900152c2:	e7cb      	b.n	9001525c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
900152c4:	4607      	mov	r7, r0
900152c6:	e7bb      	b.n	90015240 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
900152c8:	2d00      	cmp	r5, #0
900152ca:	d181      	bne.n	900151d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
900152cc:	2f00      	cmp	r7, #0
900152ce:	f000 81dd 	beq.w	9001568c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900152d2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
900152d6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
900152da:	b2b3      	uxth	r3, r6
900152dc:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
900152e0:	9305      	str	r3, [sp, #20]
900152e2:	9a05      	ldr	r2, [sp, #20]
900152e4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900152e8:	4413      	add	r3, r2
900152ea:	b2ba      	uxth	r2, r7
900152ec:	4492      	add	sl, r2
900152ee:	b29b      	uxth	r3, r3
900152f0:	fa1f fa8a 	uxth.w	sl, sl
900152f4:	fa0f f883 	sxth.w	r8, r3
900152f8:	fa0f f98a 	sxth.w	r9, sl
900152fc:	e9cd 2307 	strd	r2, r3, [sp, #28]
90015300:	9b04      	ldr	r3, [sp, #16]
90015302:	2b00      	cmp	r3, #0
90015304:	d052      	beq.n	900153ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
90015306:	9903      	ldr	r1, [sp, #12]
90015308:	4620      	mov	r0, r4
9001530a:	f7ff fd26 	bl	90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001530e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90015312:	b1c0      	cbz	r0, 90015346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015314:	f9b4 e000 	ldrsh.w	lr, [r4]
90015318:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
9001531c:	4576      	cmp	r6, lr
9001531e:	dc22      	bgt.n	90015366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
90015320:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90015324:	44f4      	add	ip, lr
90015326:	fa0f fc8c 	sxth.w	ip, ip
9001532a:	45e0      	cmp	r8, ip
9001532c:	db1b      	blt.n	90015366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
9001532e:	428f      	cmp	r7, r1
90015330:	fa1f fc81 	uxth.w	ip, r1
90015334:	88e1      	ldrh	r1, [r4, #6]
90015336:	dc0d      	bgt.n	90015354 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90015338:	ebaa 0c0c 	sub.w	ip, sl, ip
9001533c:	f8a4 9002 	strh.w	r9, [r4, #2]
90015340:	eba1 010c 	sub.w	r1, r1, ip
90015344:	80e1      	strh	r1, [r4, #6]
90015346:	4628      	mov	r0, r5
90015348:	9904      	ldr	r1, [sp, #16]
9001534a:	3c08      	subs	r4, #8
9001534c:	4605      	mov	r5, r0
9001534e:	3901      	subs	r1, #1
90015350:	9104      	str	r1, [sp, #16]
90015352:	e7d3      	b.n	900152fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
90015354:	4461      	add	r1, ip
90015356:	b209      	sxth	r1, r1
90015358:	4549      	cmp	r1, r9
9001535a:	dcf5      	bgt.n	90015348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001535c:	eba2 0c0c 	sub.w	ip, r2, ip
90015360:	f8a4 c006 	strh.w	ip, [r4, #6]
90015364:	e7ef      	b.n	90015346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015366:	428f      	cmp	r7, r1
90015368:	dcee      	bgt.n	90015348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
9001536a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
9001536e:	4461      	add	r1, ip
90015370:	b209      	sxth	r1, r1
90015372:	4589      	cmp	r9, r1
90015374:	dbe8      	blt.n	90015348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015376:	4576      	cmp	r6, lr
90015378:	fa1f fc8e 	uxth.w	ip, lr
9001537c:	88a1      	ldrh	r1, [r4, #4]
9001537e:	dc07      	bgt.n	90015390 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
90015380:	eba3 0c0c 	sub.w	ip, r3, ip
90015384:	f8a4 8000 	strh.w	r8, [r4]
90015388:	eba1 010c 	sub.w	r1, r1, ip
9001538c:	80a1      	strh	r1, [r4, #4]
9001538e:	e7da      	b.n	90015346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
90015390:	4461      	add	r1, ip
90015392:	b209      	sxth	r1, r1
90015394:	4588      	cmp	r8, r1
90015396:	dbd7      	blt.n	90015348 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
90015398:	9905      	ldr	r1, [sp, #20]
9001539a:	eba1 0c0c 	sub.w	ip, r1, ip
9001539e:	f8a4 c004 	strh.w	ip, [r4, #4]
900153a2:	e7d0      	b.n	90015346 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
900153a4:	24023572 	.word	0x24023572
900153a8:	24023570 	.word	0x24023570
900153ac:	2d00      	cmp	r5, #0
900153ae:	f000 816d 	beq.w	9001568c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900153b2:	9b06      	ldr	r3, [sp, #24]
900153b4:	445b      	add	r3, fp
900153b6:	461c      	mov	r4, r3
900153b8:	9b02      	ldr	r3, [sp, #8]
900153ba:	3301      	adds	r3, #1
900153bc:	f000 8166 	beq.w	9001568c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
900153c0:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
900153c4:	9803      	ldr	r0, [sp, #12]
900153c6:	4629      	mov	r1, r5
900153c8:	f7ff fd3a 	bl	90014e40 <_ZNK8touchgfx4Rect8includesERKS0_>
900153cc:	b120      	cbz	r0, 900153d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
900153ce:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900153d2:	9801      	ldr	r0, [sp, #4]
900153d4:	f7ff feb0 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900153d8:	9903      	ldr	r1, [sp, #12]
900153da:	4628      	mov	r0, r5
900153dc:	f7ff fcbd 	bl	90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>
900153e0:	2800      	cmp	r0, #0
900153e2:	f000 809c 	beq.w	9001551e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
900153e6:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
900153ea:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
900153ee:	fa1f f189 	uxth.w	r1, r9
900153f2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
900153f6:	9309      	str	r3, [sp, #36]	; 0x24
900153f8:	eb01 0c03 	add.w	ip, r1, r3
900153fc:	b283      	uxth	r3, r0
900153fe:	4548      	cmp	r0, r9
90015400:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
90015404:	fa1f fa8c 	uxth.w	sl, ip
90015408:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001540c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
90015410:	eb03 050c 	add.w	r5, r3, ip
90015414:	b2ad      	uxth	r5, r5
90015416:	9505      	str	r5, [sp, #20]
90015418:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
9001541c:	9504      	str	r5, [sp, #16]
9001541e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
90015422:	f340 8099 	ble.w	90015558 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
90015426:	1a5b      	subs	r3, r3, r1
90015428:	4596      	cmp	lr, r2
9001542a:	fa0f f08a 	sxth.w	r0, sl
9001542e:	b29b      	uxth	r3, r3
90015430:	b21e      	sxth	r6, r3
90015432:	dd2e      	ble.n	90015492 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
90015434:	9f02      	ldr	r7, [sp, #8]
90015436:	fa1f fe8e 	uxth.w	lr, lr
9001543a:	b292      	uxth	r2, r2
9001543c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
90015440:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
90015444:	9f04      	ldr	r7, [sp, #16]
90015446:	ebae 0102 	sub.w	r1, lr, r2
9001544a:	44a6      	add	lr, r4
9001544c:	1a3f      	subs	r7, r7, r0
9001544e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
90015452:	b289      	uxth	r1, r1
90015454:	4402      	add	r2, r0
90015456:	fa0f fe8e 	sxth.w	lr, lr
9001545a:	b20d      	sxth	r5, r1
9001545c:	b212      	sxth	r2, r2
9001545e:	436f      	muls	r7, r5
90015460:	ebae 0202 	sub.w	r2, lr, r2
90015464:	4372      	muls	r2, r6
90015466:	4297      	cmp	r7, r2
90015468:	db09      	blt.n	9001547e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
9001546a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
9001546e:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
90015472:	449c      	add	ip, r3
90015474:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90015478:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
9001547c:	e686      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001547e:	4421      	add	r1, r4
90015480:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
90015484:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
90015488:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001548c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90015490:	e67c      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015492:	9f04      	ldr	r7, [sp, #16]
90015494:	42b8      	cmp	r0, r7
90015496:	da27      	bge.n	900154e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
90015498:	9902      	ldr	r1, [sp, #8]
9001549a:	1a3f      	subs	r7, r7, r0
9001549c:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
900154a0:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900154a4:	eb05 010e 	add.w	r1, r5, lr
900154a8:	fa1f f881 	uxth.w	r8, r1
900154ac:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
900154b0:	4411      	add	r1, r2
900154b2:	fa0f f988 	sxth.w	r9, r8
900154b6:	eba2 020e 	sub.w	r2, r2, lr
900154ba:	eba1 0108 	sub.w	r1, r1, r8
900154be:	4372      	muls	r2, r6
900154c0:	b289      	uxth	r1, r1
900154c2:	fa0f f881 	sxth.w	r8, r1
900154c6:	fb08 f707 	mul.w	r7, r8, r7
900154ca:	42ba      	cmp	r2, r7
900154cc:	dc06      	bgt.n	900154dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
900154ce:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
900154d2:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
900154d6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
900154da:	e7ca      	b.n	90015472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
900154dc:	4429      	add	r1, r5
900154de:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
900154e2:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
900154e6:	e651      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900154e8:	9805      	ldr	r0, [sp, #20]
900154ea:	2d06      	cmp	r5, #6
900154ec:	ebaa 0000 	sub.w	r0, sl, r0
900154f0:	b280      	uxth	r0, r0
900154f2:	fa0f fe80 	sxth.w	lr, r0
900154f6:	d817      	bhi.n	90015528 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
900154f8:	9b04      	ldr	r3, [sp, #16]
900154fa:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
900154fe:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
90015502:	1c6b      	adds	r3, r5, #1
90015504:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
90015508:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
9001550c:	9b01      	ldr	r3, [sp, #4]
9001550e:	9801      	ldr	r0, [sp, #4]
90015510:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015514:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90015518:	805a      	strh	r2, [r3, #2]
9001551a:	809e      	strh	r6, [r3, #4]
9001551c:	80d9      	strh	r1, [r3, #6]
9001551e:	9b02      	ldr	r3, [sp, #8]
90015520:	3c08      	subs	r4, #8
90015522:	3b01      	subs	r3, #1
90015524:	9302      	str	r3, [sp, #8]
90015526:	e747      	b.n	900153b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
90015528:	9a02      	ldr	r2, [sp, #8]
9001552a:	45b6      	cmp	lr, r6
9001552c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90015530:	db0d      	blt.n	9001554e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
90015532:	449c      	add	ip, r3
90015534:	445a      	add	r2, fp
90015536:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
9001553a:	fa1f fc8c 	uxth.w	ip, ip
9001553e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
90015542:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
90015546:	448c      	add	ip, r1
90015548:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
9001554c:	e61e      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001554e:	445a      	add	r2, fp
90015550:	4484      	add	ip, r0
90015552:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
90015556:	e78f      	b.n	90015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015558:	fa1f f18e 	uxth.w	r1, lr
9001555c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
90015560:	b293      	uxth	r3, r2
90015562:	4596      	cmp	lr, r2
90015564:	eb01 0806 	add.w	r8, r1, r6
90015568:	9306      	str	r3, [sp, #24]
9001556a:	fa1f f888 	uxth.w	r8, r8
9001556e:	9f06      	ldr	r7, [sp, #24]
90015570:	fa0f f388 	sxth.w	r3, r8
90015574:	9307      	str	r3, [sp, #28]
90015576:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
9001557a:	443b      	add	r3, r7
9001557c:	b29b      	uxth	r3, r3
9001557e:	9308      	str	r3, [sp, #32]
90015580:	da24      	bge.n	900155cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
90015582:	9905      	ldr	r1, [sp, #20]
90015584:	eba3 0308 	sub.w	r3, r3, r8
90015588:	eba2 020e 	sub.w	r2, r2, lr
9001558c:	eba9 0000 	sub.w	r0, r9, r0
90015590:	ebaa 0401 	sub.w	r4, sl, r1
90015594:	b29b      	uxth	r3, r3
90015596:	b2a4      	uxth	r4, r4
90015598:	b219      	sxth	r1, r3
9001559a:	b225      	sxth	r5, r4
9001559c:	4348      	muls	r0, r1
9001559e:	436a      	muls	r2, r5
900155a0:	4282      	cmp	r2, r0
900155a2:	9a02      	ldr	r2, [sp, #8]
900155a4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900155a8:	445a      	add	r2, fp
900155aa:	dc06      	bgt.n	900155ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
900155ac:	9b07      	ldr	r3, [sp, #28]
900155ae:	44a4      	add	ip, r4
900155b0:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
900155b4:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
900155b8:	e75e      	b.n	90015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
900155ba:	9904      	ldr	r1, [sp, #16]
900155bc:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
900155c0:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
900155c4:	4433      	add	r3, r6
900155c6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
900155ca:	e5df      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
900155cc:	9f06      	ldr	r7, [sp, #24]
900155ce:	9b04      	ldr	r3, [sp, #16]
900155d0:	1bc9      	subs	r1, r1, r7
900155d2:	fa0f f78a 	sxth.w	r7, sl
900155d6:	b289      	uxth	r1, r1
900155d8:	429f      	cmp	r7, r3
900155da:	fa0f fe81 	sxth.w	lr, r1
900155de:	dd23      	ble.n	90015628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
900155e0:	9a05      	ldr	r2, [sp, #20]
900155e2:	eba9 0000 	sub.w	r0, r9, r0
900155e6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
900155ea:	ebaa 0202 	sub.w	r2, sl, r2
900155ee:	9d07      	ldr	r5, [sp, #28]
900155f0:	fb0e f000 	mul.w	r0, lr, r0
900155f4:	b292      	uxth	r2, r2
900155f6:	eba5 0a03 	sub.w	sl, r5, r3
900155fa:	9b02      	ldr	r3, [sp, #8]
900155fc:	b214      	sxth	r4, r2
900155fe:	00db      	lsls	r3, r3, #3
90015600:	fb04 fa0a 	mul.w	sl, r4, sl
90015604:	445b      	add	r3, fp
90015606:	4550      	cmp	r0, sl
90015608:	db03      	blt.n	90015612 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
9001560a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
9001560e:	4494      	add	ip, r2
90015610:	e732      	b.n	90015478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
90015612:	9a04      	ldr	r2, [sp, #16]
90015614:	4431      	add	r1, r6
90015616:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
9001561a:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
9001561e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
90015622:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
90015626:	e75c      	b.n	900154e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
90015628:	9b08      	ldr	r3, [sp, #32]
9001562a:	2d06      	cmp	r5, #6
9001562c:	eba3 0308 	sub.w	r3, r3, r8
90015630:	b29b      	uxth	r3, r3
90015632:	b218      	sxth	r0, r3
90015634:	d813      	bhi.n	9001565e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
90015636:	9b07      	ldr	r3, [sp, #28]
90015638:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
9001563c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
90015640:	1c6b      	adds	r3, r5, #1
90015642:	9901      	ldr	r1, [sp, #4]
90015644:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
90015648:	9b01      	ldr	r3, [sp, #4]
9001564a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
9001564e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
90015652:	805a      	strh	r2, [r3, #2]
90015654:	9a09      	ldr	r2, [sp, #36]	; 0x24
90015656:	f8a3 e006 	strh.w	lr, [r3, #6]
9001565a:	809a      	strh	r2, [r3, #4]
9001565c:	e75f      	b.n	9001551e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
9001565e:	9c02      	ldr	r4, [sp, #8]
90015660:	4570      	cmp	r0, lr
90015662:	ea4f 04c4 	mov.w	r4, r4, lsl #3
90015666:	db0d      	blt.n	90015684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
90015668:	4431      	add	r1, r6
9001566a:	9b06      	ldr	r3, [sp, #24]
9001566c:	445c      	add	r4, fp
9001566e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
90015672:	b289      	uxth	r1, r1
90015674:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
90015678:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
9001567c:	4419      	add	r1, r3
9001567e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
90015682:	e583      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
90015684:	445c      	add	r4, fp
90015686:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
9001568a:	e79b      	b.n	900155c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
9001568c:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
90015690:	f64f 76ff 	movw	r6, #65535	; 0xffff
90015694:	1e65      	subs	r5, r4, #1
90015696:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
9001569a:	b2ad      	uxth	r5, r5
9001569c:	42b5      	cmp	r5, r6
9001569e:	d044      	beq.n	9001572a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
900156a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
900156a4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
900156a8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
900156ac:	4282      	cmp	r2, r0
900156ae:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
900156b2:	d11f      	bne.n	900156f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900156b4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
900156b8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
900156bc:	459c      	cmp	ip, r3
900156be:	d119      	bne.n	900156f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900156c0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
900156c4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900156c8:	19d8      	adds	r0, r3, r7
900156ca:	b200      	sxth	r0, r0
900156cc:	4288      	cmp	r0, r1
900156ce:	d109      	bne.n	900156e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
900156d0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
900156d4:	4413      	add	r3, r2
900156d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
900156da:	4629      	mov	r1, r5
900156dc:	9801      	ldr	r0, [sp, #4]
900156de:	f7ff fd2b 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900156e2:	e003      	b.n	900156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900156e4:	4411      	add	r1, r2
900156e6:	b209      	sxth	r1, r1
900156e8:	42b9      	cmp	r1, r7
900156ea:	d0f3      	beq.n	900156d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
900156ec:	3d01      	subs	r5, #1
900156ee:	3c08      	subs	r4, #8
900156f0:	b2ad      	uxth	r5, r5
900156f2:	e7d3      	b.n	9001569c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900156f4:	42b9      	cmp	r1, r7
900156f6:	d1f9      	bne.n	900156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
900156f8:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
900156fc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015700:	4299      	cmp	r1, r3
90015702:	d1f3      	bne.n	900156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015704:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
90015708:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
9001570c:	181f      	adds	r7, r3, r0
9001570e:	b23f      	sxth	r7, r7
90015710:	42ba      	cmp	r2, r7
90015712:	d105      	bne.n	90015720 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
90015714:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
90015718:	440b      	add	r3, r1
9001571a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
9001571e:	e7dc      	b.n	900156da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
90015720:	440a      	add	r2, r1
90015722:	b212      	sxth	r2, r2
90015724:	4290      	cmp	r0, r2
90015726:	d1e1      	bne.n	900156ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
90015728:	e7f6      	b.n	90015718 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
9001572a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
9001572e:	2e07      	cmp	r6, #7
90015730:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90015734:	d812      	bhi.n	9001575c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
90015736:	1c75      	adds	r5, r6, #1
90015738:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
9001573c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
90015740:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
90015744:	9d01      	ldr	r5, [sp, #4]
90015746:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001574a:	442c      	add	r4, r5
9001574c:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
90015750:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90015754:	8061      	strh	r1, [r4, #2]
90015756:	80a2      	strh	r2, [r4, #4]
90015758:	80e3      	strh	r3, [r4, #6]
9001575a:	e581      	b.n	90015260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
9001575c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
90015760:	3e01      	subs	r6, #1
90015762:	445c      	add	r4, fp
90015764:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
90015768:	f04f 37ff 	mov.w	r7, #4294967295
9001576c:	2500      	movs	r5, #0
9001576e:	9305      	str	r3, [sp, #20]
90015770:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
90015774:	1e72      	subs	r2, r6, #1
90015776:	9302      	str	r3, [sp, #8]
90015778:	4691      	mov	r9, r2
9001577a:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
9001577e:	9304      	str	r3, [sp, #16]
90015780:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
90015784:	f1b9 3fff 	cmp.w	r9, #4294967295
90015788:	6818      	ldr	r0, [r3, #0]
9001578a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
9001578e:	9207      	str	r2, [sp, #28]
90015790:	bf16      	itet	ne
90015792:	9905      	ldrne	r1, [sp, #20]
90015794:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90015798:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
9001579c:	9306      	str	r3, [sp, #24]
9001579e:	f8be 1006 	ldrh.w	r1, [lr, #6]
900157a2:	f8be 8004 	ldrh.w	r8, [lr, #4]
900157a6:	fb18 f801 	smulbb	r8, r8, r1
900157aa:	6859      	ldr	r1, [r3, #4]
900157ac:	e8ac 0003 	stmia.w	ip!, {r0, r1}
900157b0:	4671      	mov	r1, lr
900157b2:	a80c      	add	r0, sp, #48	; 0x30
900157b4:	f7ff fb6a 	bl	90014e8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
900157b8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
900157bc:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
900157c0:	f04f 0c08 	mov.w	ip, #8
900157c4:	9b04      	ldr	r3, [sp, #16]
900157c6:	9a02      	ldr	r2, [sp, #8]
900157c8:	fb10 f001 	smulbb	r0, r0, r1
900157cc:	fb02 8803 	mla	r8, r2, r3, r8
900157d0:	eba0 0108 	sub.w	r1, r0, r8
900157d4:	fb90 f0fc 	sdiv	r0, r0, ip
900157d8:	4288      	cmp	r0, r1
900157da:	dc20      	bgt.n	9001581e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900157dc:	4551      	cmp	r1, sl
900157de:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
900157e2:	da03      	bge.n	900157ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
900157e4:	b1d9      	cbz	r1, 9001581e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
900157e6:	468a      	mov	sl, r1
900157e8:	464f      	mov	r7, r9
900157ea:	4635      	mov	r5, r6
900157ec:	f109 39ff 	add.w	r9, r9, #4294967295
900157f0:	f119 0f02 	cmn.w	r9, #2
900157f4:	d1c6      	bne.n	90015784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
900157f6:	4616      	mov	r6, r2
900157f8:	3201      	adds	r2, #1
900157fa:	f1a4 0408 	sub.w	r4, r4, #8
900157fe:	d1b7      	bne.n	90015770 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
90015800:	9b01      	ldr	r3, [sp, #4]
90015802:	b2ac      	uxth	r4, r5
90015804:	00ed      	lsls	r5, r5, #3
90015806:	1958      	adds	r0, r3, r5
90015808:	1c7b      	adds	r3, r7, #1
9001580a:	d10b      	bne.n	90015824 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
9001580c:	4601      	mov	r1, r0
9001580e:	9803      	ldr	r0, [sp, #12]
90015810:	f7ff fb3c 	bl	90014e8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015814:	4621      	mov	r1, r4
90015816:	9801      	ldr	r0, [sp, #4]
90015818:	f7ff fc8e 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
9001581c:	e4b6      	b.n	9001518c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
9001581e:	464f      	mov	r7, r9
90015820:	4635      	mov	r5, r6
90015822:	e7ed      	b.n	90015800 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
90015824:	9b01      	ldr	r3, [sp, #4]
90015826:	00ff      	lsls	r7, r7, #3
90015828:	445d      	add	r5, fp
9001582a:	19d9      	adds	r1, r3, r7
9001582c:	445f      	add	r7, fp
9001582e:	f7ff fb2d 	bl	90014e8c <_ZN8touchgfx4Rect11expandToFitERKS0_>
90015832:	9b03      	ldr	r3, [sp, #12]
90015834:	cb03      	ldmia	r3!, {r0, r1}
90015836:	9b03      	ldr	r3, [sp, #12]
90015838:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
9001583c:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
90015840:	f855 0fac 	ldr.w	r0, [r5, #172]!
90015844:	6869      	ldr	r1, [r5, #4]
90015846:	c303      	stmia	r3!, {r0, r1}
90015848:	e7e4      	b.n	90015814 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
9001584a:	bf00      	nop

9001584c <_ZN8touchgfx11Application15drawCachedAreasEv>:
9001584c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015850:	f500 7698 	add.w	r6, r0, #304	; 0x130
90015854:	b09b      	sub	sp, #108	; 0x6c
90015856:	4604      	mov	r4, r0
90015858:	4630      	mov	r0, r6
9001585a:	f7fa fc80 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001585e:	4605      	mov	r5, r0
90015860:	b948      	cbnz	r0, 90015876 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90015862:	6823      	ldr	r3, [r4, #0]
90015864:	4620      	mov	r0, r4
90015866:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90015868:	e896 0006 	ldmia.w	r6, {r1, r2}
9001586c:	4798      	blx	r3
9001586e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
90015872:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
90015876:	4bc5      	ldr	r3, [pc, #788]	; (90015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
90015878:	681b      	ldr	r3, [r3, #0]
9001587a:	2b00      	cmp	r3, #0
9001587c:	d03f      	beq.n	900158fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001587e:	4dc4      	ldr	r5, [pc, #784]	; (90015b90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
90015880:	4628      	mov	r0, r5
90015882:	f7fa fc6c 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015886:	4606      	mov	r6, r0
90015888:	2800      	cmp	r0, #0
9001588a:	d138      	bne.n	900158fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
9001588c:	4628      	mov	r0, r5
9001588e:	f7ff f973 	bl	90014b78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015892:	6823      	ldr	r3, [r4, #0]
90015894:	6829      	ldr	r1, [r5, #0]
90015896:	4620      	mov	r0, r4
90015898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
9001589a:	686a      	ldr	r2, [r5, #4]
9001589c:	4798      	blx	r3
9001589e:	802e      	strh	r6, [r5, #0]
900158a0:	806e      	strh	r6, [r5, #2]
900158a2:	80ae      	strh	r6, [r5, #4]
900158a4:	80ee      	strh	r6, [r5, #6]
900158a6:	f10d 0824 	add.w	r8, sp, #36	; 0x24
900158aa:	4dba      	ldr	r5, [pc, #744]	; (90015b94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
900158ac:	4640      	mov	r0, r8
900158ae:	f7ff fbe7 	bl	90015080 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900158b2:	882e      	ldrh	r6, [r5, #0]
900158b4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
900158b8:	f104 00ac 	add.w	r0, r4, #172	; 0xac
900158bc:	4633      	mov	r3, r6
900158be:	42bb      	cmp	r3, r7
900158c0:	d224      	bcs.n	9001590c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
900158c2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
900158c6:	2907      	cmp	r1, #7
900158c8:	d816      	bhi.n	900158f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
900158ca:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
900158ce:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
900158d2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
900158d6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
900158da:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
900158de:	1c4a      	adds	r2, r1, #1
900158e0:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
900158e4:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
900158e8:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
900158ec:	f8a2 a002 	strh.w	sl, [r2, #2]
900158f0:	f8a2 e004 	strh.w	lr, [r2, #4]
900158f4:	f8a2 c006 	strh.w	ip, [r2, #6]
900158f8:	3301      	adds	r3, #1
900158fa:	b29b      	uxth	r3, r3
900158fc:	e7df      	b.n	900158be <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
900158fe:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015902:	2b00      	cmp	r3, #0
90015904:	d1cf      	bne.n	900158a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
90015906:	b01b      	add	sp, #108	; 0x6c
90015908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001590c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
90015910:	42b3      	cmp	r3, r6
90015912:	d90c      	bls.n	9001592e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
90015914:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
90015918:	6822      	ldr	r2, [r4, #0]
9001591a:	3601      	adds	r6, #1
9001591c:	4620      	mov	r0, r4
9001591e:	6c17      	ldr	r7, [r2, #64]	; 0x40
90015920:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
90015924:	b2b6      	uxth	r6, r6
90015926:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
9001592a:	47b8      	blx	r7
9001592c:	e7ee      	b.n	9001590c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
9001592e:	4a9a      	ldr	r2, [pc, #616]	; (90015b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
90015930:	6813      	ldr	r3, [r2, #0]
90015932:	4691      	mov	r9, r2
90015934:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
90015938:	2b01      	cmp	r3, #1
9001593a:	f040 80e0 	bne.w	90015afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
9001593e:	8829      	ldrh	r1, [r5, #0]
90015940:	2600      	movs	r6, #0
90015942:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
90015946:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
9001594a:	33ae      	adds	r3, #174	; 0xae
9001594c:	428f      	cmp	r7, r1
9001594e:	f103 0308 	add.w	r3, r3, #8
90015952:	dd0a      	ble.n	9001596a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
90015954:	f833 2c04 	ldrh.w	r2, [r3, #-4]
90015958:	3101      	adds	r1, #1
9001595a:	f833 0c08 	ldrh.w	r0, [r3, #-8]
9001595e:	4402      	add	r2, r0
90015960:	b212      	sxth	r2, r2
90015962:	4296      	cmp	r6, r2
90015964:	bfb8      	it	lt
90015966:	4616      	movlt	r6, r2
90015968:	e7f0      	b.n	9001594c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
9001596a:	4b8c      	ldr	r3, [pc, #560]	; (90015b9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
9001596c:	f8df 9228 	ldr.w	r9, [pc, #552]	; 90015b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
90015970:	881b      	ldrh	r3, [r3, #0]
90015972:	2b0f      	cmp	r3, #15
90015974:	bf8c      	ite	hi
90015976:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
9001597a:	f04f 0b01 	movls.w	fp, #1
9001597e:	2300      	movs	r3, #0
90015980:	e9cd 3305 	strd	r3, r3, [sp, #20]
90015984:	f8bd 7016 	ldrh.w	r7, [sp, #22]
90015988:	f8bd 001a 	ldrh.w	r0, [sp, #26]
9001598c:	4b82      	ldr	r3, [pc, #520]	; (90015b98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
9001598e:	4438      	add	r0, r7
90015990:	b207      	sxth	r7, r0
90015992:	6818      	ldr	r0, [r3, #0]
90015994:	42b7      	cmp	r7, r6
90015996:	6803      	ldr	r3, [r0, #0]
90015998:	f280 8083 	bge.w	90015aa2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
9001599c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
900159a0:	4798      	blx	r3
900159a2:	eb07 030b 	add.w	r3, r7, fp
900159a6:	4298      	cmp	r0, r3
900159a8:	da07      	bge.n	900159ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
900159aa:	42b0      	cmp	r0, r6
900159ac:	da05      	bge.n	900159ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
900159ae:	4287      	cmp	r7, r0
900159b0:	dd6c      	ble.n	90015a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900159b2:	2f00      	cmp	r7, #0
900159b4:	dd6a      	ble.n	90015a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
900159b6:	4630      	mov	r0, r6
900159b8:	e004      	b.n	900159c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
900159ba:	4287      	cmp	r7, r0
900159bc:	dcfb      	bgt.n	900159b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
900159be:	42b0      	cmp	r0, r6
900159c0:	bfa8      	it	ge
900159c2:	4630      	movge	r0, r6
900159c4:	4b76      	ldr	r3, [pc, #472]	; (90015ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
900159c6:	1bc0      	subs	r0, r0, r7
900159c8:	2200      	movs	r2, #0
900159ca:	f8ad 7016 	strh.w	r7, [sp, #22]
900159ce:	f9b3 3000 	ldrsh.w	r3, [r3]
900159d2:	882f      	ldrh	r7, [r5, #0]
900159d4:	f8ad 2014 	strh.w	r2, [sp, #20]
900159d8:	f8ad 3018 	strh.w	r3, [sp, #24]
900159dc:	f8ad 001a 	strh.w	r0, [sp, #26]
900159e0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
900159e4:	42bb      	cmp	r3, r7
900159e6:	d9cd      	bls.n	90015984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
900159e8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
900159ec:	ab07      	add	r3, sp, #28
900159ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
900159f2:	6851      	ldr	r1, [r2, #4]
900159f4:	c303      	stmia	r3!, {r0, r1}
900159f6:	a905      	add	r1, sp, #20
900159f8:	a807      	add	r0, sp, #28
900159fa:	f7ff f9ae 	bl	90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>
900159fe:	2800      	cmp	r0, #0
90015a00:	d04c      	beq.n	90015a9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
90015a02:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
90015a06:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
90015a0a:	f8bd a020 	ldrh.w	sl, [sp, #32]
90015a0e:	4686      	mov	lr, r0
90015a10:	4290      	cmp	r0, r2
90015a12:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
90015a16:	4450      	add	r0, sl
90015a18:	f8bd a018 	ldrh.w	sl, [sp, #24]
90015a1c:	bfb8      	it	lt
90015a1e:	4696      	movlt	lr, r2
90015a20:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90015a24:	4452      	add	r2, sl
90015a26:	b280      	uxth	r0, r0
90015a28:	4299      	cmp	r1, r3
90015a2a:	468c      	mov	ip, r1
90015a2c:	b292      	uxth	r2, r2
90015a2e:	9302      	str	r3, [sp, #8]
90015a30:	bfb8      	it	lt
90015a32:	469c      	movlt	ip, r3
90015a34:	b203      	sxth	r3, r0
90015a36:	fa0f fa82 	sxth.w	sl, r2
90015a3a:	f8ad e01c 	strh.w	lr, [sp, #28]
90015a3e:	f8ad c01e 	strh.w	ip, [sp, #30]
90015a42:	4553      	cmp	r3, sl
90015a44:	bfb8      	it	lt
90015a46:	4602      	movlt	r2, r0
90015a48:	9b02      	ldr	r3, [sp, #8]
90015a4a:	eba2 020e 	sub.w	r2, r2, lr
90015a4e:	f8ad 2020 	strh.w	r2, [sp, #32]
90015a52:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
90015a56:	4411      	add	r1, r2
90015a58:	f8bd 201a 	ldrh.w	r2, [sp, #26]
90015a5c:	4413      	add	r3, r2
90015a5e:	b289      	uxth	r1, r1
90015a60:	b29b      	uxth	r3, r3
90015a62:	b208      	sxth	r0, r1
90015a64:	b21a      	sxth	r2, r3
90015a66:	4290      	cmp	r0, r2
90015a68:	bfb8      	it	lt
90015a6a:	460b      	movlt	r3, r1
90015a6c:	eba3 030c 	sub.w	r3, r3, ip
90015a70:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
90015a74:	a807      	add	r0, sp, #28
90015a76:	f7fa fb72 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015a7a:	b920      	cbnz	r0, 90015a86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
90015a7c:	6823      	ldr	r3, [r4, #0]
90015a7e:	a907      	add	r1, sp, #28
90015a80:	4620      	mov	r0, r4
90015a82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015a84:	4798      	blx	r3
90015a86:	3701      	adds	r7, #1
90015a88:	b2bf      	uxth	r7, r7
90015a8a:	e7a9      	b.n	900159e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
90015a8c:	f8d9 0000 	ldr.w	r0, [r9]
90015a90:	2101      	movs	r1, #1
90015a92:	6803      	ldr	r3, [r0, #0]
90015a94:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
90015a98:	4798      	blx	r3
90015a9a:	e773      	b.n	90015984 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
90015a9c:	e9cd 0007 	strd	r0, r0, [sp, #28]
90015aa0:	e7e8      	b.n	90015a74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
90015aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
90015aa4:	4798      	blx	r3
90015aa6:	4b3f      	ldr	r3, [pc, #252]	; (90015ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
90015aa8:	781b      	ldrb	r3, [r3, #0]
90015aaa:	2b00      	cmp	r3, #0
90015aac:	f43f af2b 	beq.w	90015906 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015ab0:	2300      	movs	r3, #0
90015ab2:	f104 00ee 	add.w	r0, r4, #238	; 0xee
90015ab6:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
90015aba:	882b      	ldrh	r3, [r5, #0]
90015abc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
90015ac0:	42ab      	cmp	r3, r5
90015ac2:	f4bf af20 	bcs.w	90015906 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
90015ac6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
90015aca:	2907      	cmp	r1, #7
90015acc:	d814      	bhi.n	90015af8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
90015ace:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
90015ad2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
90015ad6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
90015ada:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
90015ade:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
90015ae2:	1c4a      	adds	r2, r1, #1
90015ae4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
90015ae8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
90015aec:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
90015af0:	f8a2 c002 	strh.w	ip, [r2, #2]
90015af4:	8097      	strh	r7, [r2, #4]
90015af6:	80d6      	strh	r6, [r2, #6]
90015af8:	3301      	adds	r3, #1
90015afa:	b29b      	uxth	r3, r3
90015afc:	e7e0      	b.n	90015ac0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
90015afe:	2b02      	cmp	r3, #2
90015b00:	f040 8133 	bne.w	90015d6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
90015b04:	4b28      	ldr	r3, [pc, #160]	; (90015ba8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
90015b06:	f104 0aac 	add.w	sl, r4, #172	; 0xac
90015b0a:	781b      	ldrb	r3, [r3, #0]
90015b0c:	2b01      	cmp	r3, #1
90015b0e:	f000 8098 	beq.w	90015c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015b12:	882a      	ldrh	r2, [r5, #0]
90015b14:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
90015b18:	3201      	adds	r2, #1
90015b1a:	b292      	uxth	r2, r2
90015b1c:	2900      	cmp	r1, #0
90015b1e:	d0c2      	beq.n	90015aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015b20:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
90015b24:	4694      	mov	ip, r2
90015b26:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
90015b2a:	f04f 0900 	mov.w	r9, #0
90015b2e:	441e      	add	r6, r3
90015b30:	b236      	sxth	r6, r6
90015b32:	fa1f f38c 	uxth.w	r3, ip
90015b36:	ea4f 07c9 	mov.w	r7, r9, lsl #3
90015b3a:	4299      	cmp	r1, r3
90015b3c:	f240 80be 	bls.w	90015cbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
90015b40:	4427      	add	r7, r4
90015b42:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
90015b46:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
90015b4a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
90015b4e:	4283      	cmp	r3, r0
90015b50:	f340 80a0 	ble.w	90015c94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
90015b54:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
90015b58:	46e1      	mov	r9, ip
90015b5a:	4406      	add	r6, r0
90015b5c:	b236      	sxth	r6, r6
90015b5e:	429e      	cmp	r6, r3
90015b60:	bfa8      	it	ge
90015b62:	461e      	movge	r6, r3
90015b64:	f10c 0c01 	add.w	ip, ip, #1
90015b68:	e7e3      	b.n	90015b32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
90015b6a:	d10a      	bne.n	90015b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
90015b6c:	4562      	cmp	r2, ip
90015b6e:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
90015b72:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
90015b76:	bfb8      	it	lt
90015b78:	4662      	movlt	r2, ip
90015b7a:	4288      	cmp	r0, r1
90015b7c:	bfb8      	it	lt
90015b7e:	461f      	movlt	r7, r3
90015b80:	e086      	b.n	90015c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015b82:	428a      	cmp	r2, r1
90015b84:	bfb8      	it	lt
90015b86:	460a      	movlt	r2, r1
90015b88:	e082      	b.n	90015c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
90015b8a:	bf00      	nop
90015b8c:	240235bc 	.word	0x240235bc
90015b90:	240235c8 	.word	0x240235c8
90015b94:	24000074 	.word	0x24000074
90015b98:	2402357c 	.word	0x2402357c
90015b9c:	24023572 	.word	0x24023572
90015ba0:	24023570 	.word	0x24023570
90015ba4:	2402357a 	.word	0x2402357a
90015ba8:	24023574 	.word	0x24023574
90015bac:	19a1      	adds	r1, r4, r6
90015bae:	ab07      	add	r3, sp, #28
90015bb0:	f851 0fac 	ldr.w	r0, [r1, #172]!
90015bb4:	6849      	ldr	r1, [r1, #4]
90015bb6:	c303      	stmia	r3!, {r0, r1}
90015bb8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90015bbc:	a807      	add	r0, sp, #28
90015bbe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015bc2:	2b13      	cmp	r3, #19
90015bc4:	440b      	add	r3, r1
90015bc6:	bfd8      	it	le
90015bc8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
90015bcc:	1a9b      	subs	r3, r3, r2
90015bce:	f8ad 201c 	strh.w	r2, [sp, #28]
90015bd2:	f8ad 3020 	strh.w	r3, [sp, #32]
90015bd6:	f7fe ffe9 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90015bda:	a807      	add	r0, sp, #28
90015bdc:	f7fa fabf 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015be0:	bb78      	cbnz	r0, 90015c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015be2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
90015be6:	4426      	add	r6, r4
90015be8:	f8d9 0000 	ldr.w	r0, [r9]
90015bec:	f1bc 0f14 	cmp.w	ip, #20
90015bf0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90015bf4:	f8d0 e000 	ldr.w	lr, [r0]
90015bf8:	bfa8      	it	ge
90015bfa:	f04f 0c14 	movge.w	ip, #20
90015bfe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
90015c02:	f8bd 101c 	ldrh.w	r1, [sp, #28]
90015c06:	fa1f fc8c 	uxth.w	ip, ip
90015c0a:	f8cd c000 	str.w	ip, [sp]
90015c0e:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
90015c12:	47d8      	blx	fp
90015c14:	4683      	mov	fp, r0
90015c16:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015c1a:	a807      	add	r0, sp, #28
90015c1c:	f7fe ffac 	bl	90014b78 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90015c20:	6823      	ldr	r3, [r4, #0]
90015c22:	4620      	mov	r0, r4
90015c24:	a907      	add	r1, sp, #28
90015c26:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015c28:	4798      	blx	r3
90015c2a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015c2e:	eba0 000b 	sub.w	r0, r0, fp
90015c32:	b200      	sxth	r0, r0
90015c34:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
90015c38:	b918      	cbnz	r0, 90015c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
90015c3a:	b2b9      	uxth	r1, r7
90015c3c:	4650      	mov	r0, sl
90015c3e:	f7ff fa7b 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015c42:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
90015c46:	f1bb 0f00 	cmp.w	fp, #0
90015c4a:	f43f af2c 	beq.w	90015aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015c4e:	882b      	ldrh	r3, [r5, #0]
90015c50:	2700      	movs	r7, #0
90015c52:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
90015c56:	3301      	adds	r3, #1
90015c58:	b29b      	uxth	r3, r3
90015c5a:	b299      	uxth	r1, r3
90015c5c:	00fe      	lsls	r6, r7, #3
90015c5e:	458b      	cmp	fp, r1
90015c60:	d9a4      	bls.n	90015bac <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
90015c62:	4426      	add	r6, r4
90015c64:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90015c68:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
90015c6c:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
90015c70:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
90015c74:	4408      	add	r0, r1
90015c76:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
90015c7a:	4461      	add	r1, ip
90015c7c:	b200      	sxth	r0, r0
90015c7e:	b209      	sxth	r1, r1
90015c80:	4288      	cmp	r0, r1
90015c82:	f6bf af72 	bge.w	90015b6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90015c86:	4584      	cmp	ip, r0
90015c88:	4662      	mov	r2, ip
90015c8a:	461f      	mov	r7, r3
90015c8c:	bfb8      	it	lt
90015c8e:	4602      	movlt	r2, r0
90015c90:	3301      	adds	r3, #1
90015c92:	e7e2      	b.n	90015c5a <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
90015c94:	d10e      	bne.n	90015cb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
90015c96:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
90015c9a:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
90015c9e:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
90015ca2:	4473      	add	r3, lr
90015ca4:	b21b      	sxth	r3, r3
90015ca6:	429e      	cmp	r6, r3
90015ca8:	bfa8      	it	ge
90015caa:	461e      	movge	r6, r3
90015cac:	4287      	cmp	r7, r0
90015cae:	bfb8      	it	lt
90015cb0:	46e1      	movlt	r9, ip
90015cb2:	e757      	b.n	90015b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015cb4:	4286      	cmp	r6, r0
90015cb6:	bfa8      	it	ge
90015cb8:	4606      	movge	r6, r0
90015cba:	e753      	b.n	90015b64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90015cbc:	eb0a 0007 	add.w	r0, sl, r7
90015cc0:	4427      	add	r7, r4
90015cc2:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
90015cc6:	f1bb 0f13 	cmp.w	fp, #19
90015cca:	bfdc      	itt	le
90015ccc:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
90015cd0:	445e      	addle	r6, fp
90015cd2:	e9cd 2102 	strd	r2, r1, [sp, #8]
90015cd6:	bfd8      	it	le
90015cd8:	b236      	sxthle	r6, r6
90015cda:	f7fa fa40 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015cde:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90015ce2:	2800      	cmp	r0, #0
90015ce4:	f47f af1a 	bne.w	90015b1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
90015ce8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
90015cec:	fa1f fb8b 	uxth.w	fp, fp
90015cf0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015cf4:	1ab6      	subs	r6, r6, r2
90015cf6:	4829      	ldr	r0, [pc, #164]	; (90015d9c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
90015cf8:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
90015cfc:	2e14      	cmp	r6, #20
90015cfe:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
90015d02:	6800      	ldr	r0, [r0, #0]
90015d04:	bfa8      	it	ge
90015d06:	2614      	movge	r6, #20
90015d08:	f8ad 101c 	strh.w	r1, [sp, #28]
90015d0c:	f8ad 201e 	strh.w	r2, [sp, #30]
90015d10:	b289      	uxth	r1, r1
90015d12:	f8ad 3020 	strh.w	r3, [sp, #32]
90015d16:	b2b6      	uxth	r6, r6
90015d18:	f8d0 c000 	ldr.w	ip, [r0]
90015d1c:	b292      	uxth	r2, r2
90015d1e:	455e      	cmp	r6, fp
90015d20:	bf94      	ite	ls
90015d22:	9600      	strls	r6, [sp, #0]
90015d24:	f8cd b000 	strhi.w	fp, [sp]
90015d28:	b29b      	uxth	r3, r3
90015d2a:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
90015d2e:	47b0      	blx	r6
90015d30:	6823      	ldr	r3, [r4, #0]
90015d32:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
90015d36:	a907      	add	r1, sp, #28
90015d38:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015d3a:	4620      	mov	r0, r4
90015d3c:	4798      	blx	r3
90015d3e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
90015d42:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
90015d46:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
90015d4a:	1a5b      	subs	r3, r3, r1
90015d4c:	440a      	add	r2, r1
90015d4e:	b21b      	sxth	r3, r3
90015d50:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
90015d54:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
90015d58:	2b00      	cmp	r3, #0
90015d5a:	f47f aeda 	bne.w	90015b12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015d5e:	fa1f f189 	uxth.w	r1, r9
90015d62:	4650      	mov	r0, sl
90015d64:	f7ff f9e8 	bl	90015138 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90015d68:	e6d3      	b.n	90015b12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
90015d6a:	882e      	ldrh	r6, [r5, #0]
90015d6c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
90015d70:	42b3      	cmp	r3, r6
90015d72:	f67f ae98 	bls.w	90015aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
90015d76:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
90015d7a:	ab07      	add	r3, sp, #28
90015d7c:	f852 0fac 	ldr.w	r0, [r2, #172]!
90015d80:	6851      	ldr	r1, [r2, #4]
90015d82:	c303      	stmia	r3!, {r0, r1}
90015d84:	a807      	add	r0, sp, #28
90015d86:	f7fa f9ea 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
90015d8a:	b920      	cbnz	r0, 90015d96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
90015d8c:	6823      	ldr	r3, [r4, #0]
90015d8e:	a907      	add	r1, sp, #28
90015d90:	4620      	mov	r0, r4
90015d92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
90015d94:	4798      	blx	r3
90015d96:	3601      	adds	r6, #1
90015d98:	b2b6      	uxth	r6, r6
90015d9a:	e7e7      	b.n	90015d6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90015d9c:	2402357c 	.word	0x2402357c

90015da0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90015da0:	4b03      	ldr	r3, [pc, #12]	; (90015db0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
90015da2:	2200      	movs	r2, #0
90015da4:	801a      	strh	r2, [r3, #0]
90015da6:	805a      	strh	r2, [r3, #2]
90015da8:	809a      	strh	r2, [r3, #4]
90015daa:	80da      	strh	r2, [r3, #6]
90015dac:	4770      	bx	lr
90015dae:	bf00      	nop
90015db0:	240235c8 	.word	0x240235c8

90015db4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
90015db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015db8:	b09d      	sub	sp, #116	; 0x74
90015dba:	4606      	mov	r6, r0
90015dbc:	4614      	mov	r4, r2
90015dbe:	468a      	mov	sl, r1
90015dc0:	a803      	add	r0, sp, #12
90015dc2:	461d      	mov	r5, r3
90015dc4:	f000 fe5b 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90015dc8:	6833      	ldr	r3, [r6, #0]
90015dca:	4630      	mov	r0, r6
90015dcc:	f242 0b0b 	movw	fp, #8203	; 0x200b
90015dd0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015dd2:	4798      	blx	r3
90015dd4:	6833      	ldr	r3, [r6, #0]
90015dd6:	4607      	mov	r7, r0
90015dd8:	4630      	mov	r0, r6
90015dda:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015ddc:	4798      	blx	r3
90015dde:	462a      	mov	r2, r5
90015de0:	2500      	movs	r5, #0
90015de2:	4621      	mov	r1, r4
90015de4:	9000      	str	r0, [sp, #0]
90015de6:	463b      	mov	r3, r7
90015de8:	462c      	mov	r4, r5
90015dea:	46a9      	mov	r9, r5
90015dec:	46a8      	mov	r8, r5
90015dee:	a803      	add	r0, sp, #12
90015df0:	f000 fea0 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015df4:	2300      	movs	r3, #0
90015df6:	9302      	str	r3, [sp, #8]
90015df8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
90015dfc:	429c      	cmp	r4, r3
90015dfe:	d002      	beq.n	90015e06 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90015e00:	455c      	cmp	r4, fp
90015e02:	bf18      	it	ne
90015e04:	4625      	movne	r5, r4
90015e06:	ab02      	add	r3, sp, #8
90015e08:	4632      	mov	r2, r6
90015e0a:	4651      	mov	r1, sl
90015e0c:	a803      	add	r0, sp, #12
90015e0e:	f001 f997 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015e12:	4604      	mov	r4, r0
90015e14:	b108      	cbz	r0, 90015e1a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
90015e16:	280a      	cmp	r0, #10
90015e18:	d10a      	bne.n	90015e30 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
90015e1a:	45c1      	cmp	r9, r8
90015e1c:	bf38      	it	cc
90015e1e:	46c1      	movcc	r9, r8
90015e20:	f04f 0800 	mov.w	r8, #0
90015e24:	2c00      	cmp	r4, #0
90015e26:	d1e5      	bne.n	90015df4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015e28:	4648      	mov	r0, r9
90015e2a:	b01d      	add	sp, #116	; 0x74
90015e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015e30:	9a02      	ldr	r2, [sp, #8]
90015e32:	2a00      	cmp	r2, #0
90015e34:	d0de      	beq.n	90015df4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
90015e36:	7b57      	ldrb	r7, [r2, #13]
90015e38:	4629      	mov	r1, r5
90015e3a:	6833      	ldr	r3, [r6, #0]
90015e3c:	007f      	lsls	r7, r7, #1
90015e3e:	8894      	ldrh	r4, [r2, #4]
90015e40:	6c5b      	ldr	r3, [r3, #68]	; 0x44
90015e42:	f407 7080 	and.w	r0, r7, #256	; 0x100
90015e46:	7a97      	ldrb	r7, [r2, #10]
90015e48:	4307      	orrs	r7, r0
90015e4a:	4630      	mov	r0, r6
90015e4c:	4798      	blx	r3
90015e4e:	4438      	add	r0, r7
90015e50:	4480      	add	r8, r0
90015e52:	fa1f f888 	uxth.w	r8, r8
90015e56:	e7e5      	b.n	90015e24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

90015e58 <_ZNK8touchgfx4Font12getCharWidthEt>:
90015e58:	b508      	push	{r3, lr}
90015e5a:	6803      	ldr	r3, [r0, #0]
90015e5c:	68db      	ldr	r3, [r3, #12]
90015e5e:	4798      	blx	r3
90015e60:	b128      	cbz	r0, 90015e6e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
90015e62:	7b43      	ldrb	r3, [r0, #13]
90015e64:	7a80      	ldrb	r0, [r0, #10]
90015e66:	005b      	lsls	r3, r3, #1
90015e68:	f403 7380 	and.w	r3, r3, #256	; 0x100
90015e6c:	4318      	orrs	r0, r3
90015e6e:	bd08      	pop	{r3, pc}

90015e70 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90015e70:	b40e      	push	{r1, r2, r3}
90015e72:	b5f0      	push	{r4, r5, r6, r7, lr}
90015e74:	b09e      	sub	sp, #120	; 0x78
90015e76:	4605      	mov	r5, r0
90015e78:	ab23      	add	r3, sp, #140	; 0x8c
90015e7a:	a805      	add	r0, sp, #20
90015e7c:	f853 4b04 	ldr.w	r4, [r3], #4
90015e80:	9303      	str	r3, [sp, #12]
90015e82:	f000 fdfc 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90015e86:	682b      	ldr	r3, [r5, #0]
90015e88:	4628      	mov	r0, r5
90015e8a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015e8c:	4798      	blx	r3
90015e8e:	682b      	ldr	r3, [r5, #0]
90015e90:	4606      	mov	r6, r0
90015e92:	4628      	mov	r0, r5
90015e94:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015e96:	4798      	blx	r3
90015e98:	4633      	mov	r3, r6
90015e9a:	4621      	mov	r1, r4
90015e9c:	ae1e      	add	r6, sp, #120	; 0x78
90015e9e:	2400      	movs	r4, #0
90015ea0:	9000      	str	r0, [sp, #0]
90015ea2:	9a03      	ldr	r2, [sp, #12]
90015ea4:	a805      	add	r0, sp, #20
90015ea6:	f000 fe45 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015eaa:	f846 4d68 	str.w	r4, [r6, #-104]!
90015eae:	462a      	mov	r2, r5
90015eb0:	4633      	mov	r3, r6
90015eb2:	4621      	mov	r1, r4
90015eb4:	a805      	add	r0, sp, #20
90015eb6:	f001 f943 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015eba:	b300      	cbz	r0, 90015efe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90015ebc:	280a      	cmp	r0, #10
90015ebe:	d01a      	beq.n	90015ef6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015ec0:	9f04      	ldr	r7, [sp, #16]
90015ec2:	b1c7      	cbz	r7, 90015ef6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90015ec4:	7b78      	ldrb	r0, [r7, #13]
90015ec6:	7a3b      	ldrb	r3, [r7, #8]
90015ec8:	00c1      	lsls	r1, r0, #3
90015eca:	88ea      	ldrh	r2, [r5, #6]
90015ecc:	f401 7180 	and.w	r1, r1, #256	; 0x100
90015ed0:	4319      	orrs	r1, r3
90015ed2:	0643      	lsls	r3, r0, #25
90015ed4:	ea4f 1000 	mov.w	r0, r0, lsl #4
90015ed8:	bf48      	it	mi
90015eda:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
90015ede:	f400 7080 	and.w	r0, r0, #256	; 0x100
90015ee2:	bf48      	it	mi
90015ee4:	b219      	sxthmi	r1, r3
90015ee6:	79fb      	ldrb	r3, [r7, #7]
90015ee8:	4303      	orrs	r3, r0
90015eea:	4413      	add	r3, r2
90015eec:	1a5b      	subs	r3, r3, r1
90015eee:	b21b      	sxth	r3, r3
90015ef0:	429c      	cmp	r4, r3
90015ef2:	bfb8      	it	lt
90015ef4:	461c      	movlt	r4, r3
90015ef6:	4633      	mov	r3, r6
90015ef8:	462a      	mov	r2, r5
90015efa:	2100      	movs	r1, #0
90015efc:	e7da      	b.n	90015eb4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90015efe:	b2a0      	uxth	r0, r4
90015f00:	b01e      	add	sp, #120	; 0x78
90015f02:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90015f06:	b003      	add	sp, #12
90015f08:	4770      	bx	lr

90015f0a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
90015f0a:	7a43      	ldrb	r3, [r0, #9]
90015f0c:	8880      	ldrh	r0, [r0, #4]
90015f0e:	4418      	add	r0, r3
90015f10:	b280      	uxth	r0, r0
90015f12:	4770      	bx	lr

90015f14 <_ZNK8touchgfx4Font13getFontHeightEv>:
90015f14:	6803      	ldr	r3, [r0, #0]
90015f16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90015f18:	4718      	bx	r3

90015f1a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
90015f1a:	b40e      	push	{r1, r2, r3}
90015f1c:	b570      	push	{r4, r5, r6, lr}
90015f1e:	b09d      	sub	sp, #116	; 0x74
90015f20:	4604      	mov	r4, r0
90015f22:	ab21      	add	r3, sp, #132	; 0x84
90015f24:	a803      	add	r0, sp, #12
90015f26:	f853 5b04 	ldr.w	r5, [r3], #4
90015f2a:	9302      	str	r3, [sp, #8]
90015f2c:	f000 fda7 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90015f30:	6823      	ldr	r3, [r4, #0]
90015f32:	4620      	mov	r0, r4
90015f34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015f36:	4798      	blx	r3
90015f38:	6823      	ldr	r3, [r4, #0]
90015f3a:	4606      	mov	r6, r0
90015f3c:	4620      	mov	r0, r4
90015f3e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015f40:	2401      	movs	r4, #1
90015f42:	4798      	blx	r3
90015f44:	4633      	mov	r3, r6
90015f46:	9000      	str	r0, [sp, #0]
90015f48:	4629      	mov	r1, r5
90015f4a:	9a02      	ldr	r2, [sp, #8]
90015f4c:	a803      	add	r0, sp, #12
90015f4e:	f000 fdf1 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015f52:	a803      	add	r0, sp, #12
90015f54:	f001 f9c0 	bl	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015f58:	b2a3      	uxth	r3, r4
90015f5a:	b138      	cbz	r0, 90015f6c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
90015f5c:	280a      	cmp	r0, #10
90015f5e:	a803      	add	r0, sp, #12
90015f60:	bf04      	itt	eq
90015f62:	3301      	addeq	r3, #1
90015f64:	b21c      	sxtheq	r4, r3
90015f66:	f001 f9b7 	bl	900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015f6a:	e7f5      	b.n	90015f58 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90015f6c:	4618      	mov	r0, r3
90015f6e:	b01d      	add	sp, #116	; 0x74
90015f70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90015f74:	b003      	add	sp, #12
90015f76:	4770      	bx	lr

90015f78 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90015f78:	b40e      	push	{r1, r2, r3}
90015f7a:	b5f0      	push	{r4, r5, r6, r7, lr}
90015f7c:	b09e      	sub	sp, #120	; 0x78
90015f7e:	4604      	mov	r4, r0
90015f80:	ab23      	add	r3, sp, #140	; 0x8c
90015f82:	a805      	add	r0, sp, #20
90015f84:	f853 5b04 	ldr.w	r5, [r3], #4
90015f88:	9303      	str	r3, [sp, #12]
90015f8a:	f000 fd78 	bl	90016a7e <_ZN8touchgfx12TextProviderC1Ev>
90015f8e:	6823      	ldr	r3, [r4, #0]
90015f90:	4620      	mov	r0, r4
90015f92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
90015f94:	4798      	blx	r3
90015f96:	6823      	ldr	r3, [r4, #0]
90015f98:	4606      	mov	r6, r0
90015f9a:	4620      	mov	r0, r4
90015f9c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
90015f9e:	4798      	blx	r3
90015fa0:	4633      	mov	r3, r6
90015fa2:	4629      	mov	r1, r5
90015fa4:	9000      	str	r0, [sp, #0]
90015fa6:	9a03      	ldr	r2, [sp, #12]
90015fa8:	a805      	add	r0, sp, #20
90015faa:	f000 fdc3 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015fae:	ad1e      	add	r5, sp, #120	; 0x78
90015fb0:	2100      	movs	r1, #0
90015fb2:	f647 76ff 	movw	r6, #32767	; 0x7fff
90015fb6:	4622      	mov	r2, r4
90015fb8:	a805      	add	r0, sp, #20
90015fba:	f845 1d68 	str.w	r1, [r5, #-104]!
90015fbe:	462b      	mov	r3, r5
90015fc0:	f001 f8be 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015fc4:	b1d8      	cbz	r0, 90015ffe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
90015fc6:	280a      	cmp	r0, #10
90015fc8:	d012      	beq.n	90015ff0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015fca:	9804      	ldr	r0, [sp, #16]
90015fcc:	b180      	cbz	r0, 90015ff0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90015fce:	7b47      	ldrb	r7, [r0, #13]
90015fd0:	88e2      	ldrh	r2, [r4, #6]
90015fd2:	00fb      	lsls	r3, r7, #3
90015fd4:	f403 7180 	and.w	r1, r3, #256	; 0x100
90015fd8:	7a03      	ldrb	r3, [r0, #8]
90015fda:	430b      	orrs	r3, r1
90015fdc:	0679      	lsls	r1, r7, #25
90015fde:	bf44      	itt	mi
90015fe0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90015fe4:	b21b      	sxthmi	r3, r3
90015fe6:	1ad3      	subs	r3, r2, r3
90015fe8:	b21b      	sxth	r3, r3
90015fea:	429e      	cmp	r6, r3
90015fec:	bfa8      	it	ge
90015fee:	461e      	movge	r6, r3
90015ff0:	462b      	mov	r3, r5
90015ff2:	4622      	mov	r2, r4
90015ff4:	2100      	movs	r1, #0
90015ff6:	a805      	add	r0, sp, #20
90015ff8:	f001 f8a2 	bl	90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90015ffc:	e7e2      	b.n	90015fc4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90015ffe:	4630      	mov	r0, r6
90016000:	b01e      	add	sp, #120	; 0x78
90016002:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
90016006:	b003      	add	sp, #12
90016008:	4770      	bx	lr

9001600a <_ZNK8touchgfx8Drawable10invalidateEv>:
9001600a:	b513      	push	{r0, r1, r4, lr}
9001600c:	6803      	ldr	r3, [r0, #0]
9001600e:	2400      	movs	r4, #0
90016010:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
90016014:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016018:	f8ad 1004 	strh.w	r1, [sp, #4]
9001601c:	4669      	mov	r1, sp
9001601e:	691b      	ldr	r3, [r3, #16]
90016020:	9400      	str	r4, [sp, #0]
90016022:	f8ad 2006 	strh.w	r2, [sp, #6]
90016026:	4798      	blx	r3
90016028:	b002      	add	sp, #8
9001602a:	bd10      	pop	{r4, pc}

9001602c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
9001602c:	b538      	push	{r3, r4, r5, lr}
9001602e:	680b      	ldr	r3, [r1, #0]
90016030:	460c      	mov	r4, r1
90016032:	4605      	mov	r5, r0
90016034:	68db      	ldr	r3, [r3, #12]
90016036:	4798      	blx	r3
90016038:	6823      	ldr	r3, [r4, #0]
9001603a:	4620      	mov	r0, r4
9001603c:	4629      	mov	r1, r5
9001603e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016040:	4798      	blx	r3
90016042:	4628      	mov	r0, r5
90016044:	bd38      	pop	{r3, r4, r5, pc}

90016046 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
90016046:	b410      	push	{r4}
90016048:	880a      	ldrh	r2, [r1, #0]
9001604a:	8884      	ldrh	r4, [r0, #4]
9001604c:	4422      	add	r2, r4
9001604e:	800a      	strh	r2, [r1, #0]
90016050:	884a      	ldrh	r2, [r1, #2]
90016052:	88c4      	ldrh	r4, [r0, #6]
90016054:	4422      	add	r2, r4
90016056:	804a      	strh	r2, [r1, #2]
90016058:	6940      	ldr	r0, [r0, #20]
9001605a:	b120      	cbz	r0, 90016066 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
9001605c:	6803      	ldr	r3, [r0, #0]
9001605e:	f85d 4b04 	ldr.w	r4, [sp], #4
90016062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90016064:	4718      	bx	r3
90016066:	f85d 4b04 	ldr.w	r4, [sp], #4
9001606a:	4770      	bx	lr

9001606c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
9001606c:	b570      	push	{r4, r5, r6, lr}
9001606e:	8882      	ldrh	r2, [r0, #4]
90016070:	460c      	mov	r4, r1
90016072:	880b      	ldrh	r3, [r1, #0]
90016074:	4605      	mov	r5, r0
90016076:	4413      	add	r3, r2
90016078:	800b      	strh	r3, [r1, #0]
9001607a:	884b      	ldrh	r3, [r1, #2]
9001607c:	88c2      	ldrh	r2, [r0, #6]
9001607e:	4413      	add	r3, r2
90016080:	804b      	strh	r3, [r1, #2]
90016082:	1d01      	adds	r1, r0, #4
90016084:	4620      	mov	r0, r4
90016086:	f7fa f827 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001608a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
9001608e:	2b00      	cmp	r3, #0
90016090:	dd0b      	ble.n	900160aa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90016092:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90016096:	2b00      	cmp	r3, #0
90016098:	dd07      	ble.n	900160aa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001609a:	6968      	ldr	r0, [r5, #20]
9001609c:	b128      	cbz	r0, 900160aa <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001609e:	6803      	ldr	r3, [r0, #0]
900160a0:	4621      	mov	r1, r4
900160a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900160a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900160a8:	4718      	bx	r3
900160aa:	bd70      	pop	{r4, r5, r6, pc}

900160ac <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
900160ac:	b570      	push	{r4, r5, r6, lr}
900160ae:	8882      	ldrh	r2, [r0, #4]
900160b0:	460c      	mov	r4, r1
900160b2:	880b      	ldrh	r3, [r1, #0]
900160b4:	4605      	mov	r5, r0
900160b6:	4413      	add	r3, r2
900160b8:	800b      	strh	r3, [r1, #0]
900160ba:	884b      	ldrh	r3, [r1, #2]
900160bc:	88c2      	ldrh	r2, [r0, #6]
900160be:	4413      	add	r3, r2
900160c0:	804b      	strh	r3, [r1, #2]
900160c2:	1d01      	adds	r1, r0, #4
900160c4:	4620      	mov	r0, r4
900160c6:	f7fa f807 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900160ca:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
900160ce:	2b00      	cmp	r3, #0
900160d0:	dd19      	ble.n	90016106 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900160d2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900160d6:	2b00      	cmp	r3, #0
900160d8:	dd15      	ble.n	90016106 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900160da:	6968      	ldr	r0, [r5, #20]
900160dc:	b128      	cbz	r0, 900160ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
900160de:	6803      	ldr	r3, [r0, #0]
900160e0:	4621      	mov	r1, r4
900160e2:	691b      	ldr	r3, [r3, #16]
900160e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900160e8:	4718      	bx	r3
900160ea:	4b07      	ldr	r3, [pc, #28]	; (90016108 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
900160ec:	681b      	ldr	r3, [r3, #0]
900160ee:	3304      	adds	r3, #4
900160f0:	429d      	cmp	r5, r3
900160f2:	d108      	bne.n	90016106 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
900160f4:	f7fe ff10 	bl	90014f18 <_ZN8touchgfx11Application11getInstanceEv>
900160f8:	6803      	ldr	r3, [r0, #0]
900160fa:	6821      	ldr	r1, [r4, #0]
900160fc:	6862      	ldr	r2, [r4, #4]
900160fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
90016100:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90016104:	4718      	bx	r3
90016106:	bd70      	pop	{r4, r5, r6, pc}
90016108:	240235c0 	.word	0x240235c0

9001610c <_ZN8touchgfx8Drawable12moveRelativeEss>:
9001610c:	b570      	push	{r4, r5, r6, lr}
9001610e:	4604      	mov	r4, r0
90016110:	4616      	mov	r6, r2
90016112:	460d      	mov	r5, r1
90016114:	b901      	cbnz	r1, 90016118 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
90016116:	b192      	cbz	r2, 9001613e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
90016118:	6823      	ldr	r3, [r4, #0]
9001611a:	4620      	mov	r0, r4
9001611c:	699b      	ldr	r3, [r3, #24]
9001611e:	4798      	blx	r3
90016120:	88e2      	ldrh	r2, [r4, #6]
90016122:	88a1      	ldrh	r1, [r4, #4]
90016124:	4620      	mov	r0, r4
90016126:	4432      	add	r2, r6
90016128:	4429      	add	r1, r5
9001612a:	b212      	sxth	r2, r2
9001612c:	b209      	sxth	r1, r1
9001612e:	f7fa faa9 	bl	90010684 <_ZN8touchgfx8Drawable5setXYEss>
90016132:	6823      	ldr	r3, [r4, #0]
90016134:	4620      	mov	r0, r4
90016136:	699b      	ldr	r3, [r3, #24]
90016138:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001613c:	4718      	bx	r3
9001613e:	bd70      	pop	{r4, r5, r6, pc}

90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
90016140:	b510      	push	{r4, lr}
90016142:	2300      	movs	r3, #0
90016144:	4604      	mov	r4, r0
90016146:	4608      	mov	r0, r1
90016148:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
9001614c:	8023      	strh	r3, [r4, #0]
9001614e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016152:	8063      	strh	r3, [r4, #2]
90016154:	6803      	ldr	r3, [r0, #0]
90016156:	80a1      	strh	r1, [r4, #4]
90016158:	4621      	mov	r1, r4
9001615a:	80e2      	strh	r2, [r4, #6]
9001615c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001615e:	4798      	blx	r3
90016160:	4620      	mov	r0, r4
90016162:	bd10      	pop	{r4, pc}

90016164 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90016164:	b530      	push	{r4, r5, lr}
90016166:	8083      	strh	r3, [r0, #4]
90016168:	f8bd 300c 	ldrh.w	r3, [sp, #12]
9001616c:	f89d 5018 	ldrb.w	r5, [sp, #24]
90016170:	80c3      	strh	r3, [r0, #6]
90016172:	f89d 3010 	ldrb.w	r3, [sp, #16]
90016176:	6141      	str	r1, [r0, #20]
90016178:	7203      	strb	r3, [r0, #8]
9001617a:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001617e:	8302      	strh	r2, [r0, #24]
90016180:	7243      	strb	r3, [r0, #9]
90016182:	7a83      	ldrb	r3, [r0, #10]
90016184:	f365 0306 	bfi	r3, r5, #0, #7
90016188:	f89d 501c 	ldrb.w	r5, [sp, #28]
9001618c:	f365 13c7 	bfi	r3, r5, #7, #1
90016190:	7283      	strb	r3, [r0, #10]
90016192:	f89d 3020 	ldrb.w	r3, [sp, #32]
90016196:	72c3      	strb	r3, [r0, #11]
90016198:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
9001619c:	7303      	strb	r3, [r0, #12]
9001619e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900161a2:	81c3      	strh	r3, [r0, #14]
900161a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
900161a8:	8203      	strh	r3, [r0, #16]
900161aa:	4b01      	ldr	r3, [pc, #4]	; (900161b0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
900161ac:	6003      	str	r3, [r0, #0]
900161ae:	bd30      	pop	{r4, r5, pc}
900161b0:	9002a7e4 	.word	0x9002a7e4

900161b4 <_ZNK8touchgfx9ConstFont4findEt>:
900161b4:	b5f0      	push	{r4, r5, r6, r7, lr}
900161b6:	6944      	ldr	r4, [r0, #20]
900161b8:	b3bc      	cbz	r4, 9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900161ba:	88a3      	ldrh	r3, [r4, #4]
900161bc:	8b02      	ldrh	r2, [r0, #24]
900161be:	1acb      	subs	r3, r1, r3
900161c0:	f102 32ff 	add.w	r2, r2, #4294967295
900161c4:	d431      	bmi.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900161c6:	4293      	cmp	r3, r2
900161c8:	dd0c      	ble.n	900161e4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
900161ca:	230e      	movs	r3, #14
900161cc:	fb03 4302 	mla	r3, r3, r2, r4
900161d0:	889b      	ldrh	r3, [r3, #4]
900161d2:	1a5b      	subs	r3, r3, r1
900161d4:	1ad3      	subs	r3, r2, r3
900161d6:	429a      	cmp	r2, r3
900161d8:	db27      	blt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900161da:	2b00      	cmp	r3, #0
900161dc:	bfbc      	itt	lt
900161de:	2302      	movlt	r3, #2
900161e0:	fb92 f3f3 	sdivlt	r3, r2, r3
900161e4:	2500      	movs	r5, #0
900161e6:	260e      	movs	r6, #14
900161e8:	4295      	cmp	r5, r2
900161ea:	dc1e      	bgt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900161ec:	fb06 4003 	mla	r0, r6, r3, r4
900161f0:	8887      	ldrh	r7, [r0, #4]
900161f2:	42b9      	cmp	r1, r7
900161f4:	d01a      	beq.n	9001622c <_ZNK8touchgfx9ConstFont4findEt+0x78>
900161f6:	d20d      	bcs.n	90016214 <_ZNK8touchgfx9ConstFont4findEt+0x60>
900161f8:	1e5a      	subs	r2, r3, #1
900161fa:	4295      	cmp	r5, r2
900161fc:	dc15      	bgt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
900161fe:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90016202:	1a5b      	subs	r3, r3, r1
90016204:	1ad3      	subs	r3, r2, r3
90016206:	429a      	cmp	r2, r3
90016208:	db0f      	blt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001620a:	429d      	cmp	r5, r3
9001620c:	ddec      	ble.n	900161e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
9001620e:	1953      	adds	r3, r2, r5
90016210:	105b      	asrs	r3, r3, #1
90016212:	e7e9      	b.n	900161e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016214:	1c5d      	adds	r5, r3, #1
90016216:	42aa      	cmp	r2, r5
90016218:	db07      	blt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
9001621a:	8a43      	ldrh	r3, [r0, #18]
9001621c:	1acb      	subs	r3, r1, r3
9001621e:	442b      	add	r3, r5
90016220:	429d      	cmp	r5, r3
90016222:	dc02      	bgt.n	9001622a <_ZNK8touchgfx9ConstFont4findEt+0x76>
90016224:	429a      	cmp	r2, r3
90016226:	dadf      	bge.n	900161e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90016228:	e7f1      	b.n	9001620e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
9001622a:	2000      	movs	r0, #0
9001622c:	bdf0      	pop	{r4, r5, r6, r7, pc}

9001622e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
9001622e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016230:	4604      	mov	r4, r0
90016232:	4617      	mov	r7, r2
90016234:	461e      	mov	r6, r3
90016236:	b911      	cbnz	r1, 9001623e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90016238:	2500      	movs	r5, #0
9001623a:	4628      	mov	r0, r5
9001623c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001623e:	290a      	cmp	r1, #10
90016240:	d0fa      	beq.n	90016238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016242:	f64f 62ff 	movw	r2, #65279	; 0xfeff
90016246:	4291      	cmp	r1, r2
90016248:	d0f6      	beq.n	90016238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
9001624a:	f242 020b 	movw	r2, #8203	; 0x200b
9001624e:	4291      	cmp	r1, r2
90016250:	d0f2      	beq.n	90016238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016252:	f7ff ffaf 	bl	900161b4 <_ZNK8touchgfx9ConstFont4findEt>
90016256:	4605      	mov	r5, r0
90016258:	b950      	cbnz	r0, 90016270 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
9001625a:	6823      	ldr	r3, [r4, #0]
9001625c:	4620      	mov	r0, r4
9001625e:	691b      	ldr	r3, [r3, #16]
90016260:	4798      	blx	r3
90016262:	4601      	mov	r1, r0
90016264:	4620      	mov	r0, r4
90016266:	f7ff ffa5 	bl	900161b4 <_ZNK8touchgfx9ConstFont4findEt>
9001626a:	4605      	mov	r5, r0
9001626c:	2800      	cmp	r0, #0
9001626e:	d0e3      	beq.n	90016238 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90016270:	6823      	ldr	r3, [r4, #0]
90016272:	4629      	mov	r1, r5
90016274:	4620      	mov	r0, r4
90016276:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
90016278:	4798      	blx	r3
9001627a:	6038      	str	r0, [r7, #0]
9001627c:	6823      	ldr	r3, [r4, #0]
9001627e:	4620      	mov	r0, r4
90016280:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90016282:	4798      	blx	r3
90016284:	7030      	strb	r0, [r6, #0]
90016286:	e7d8      	b.n	9001623a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90016288 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
90016288:	b538      	push	{r3, r4, r5, lr}
9001628a:	4605      	mov	r5, r0
9001628c:	f002 f8f4 	bl	90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>
90016290:	4604      	mov	r4, r0
90016292:	4628      	mov	r0, r5
90016294:	f002 f834 	bl	90018300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
90016298:	2800      	cmp	r0, #0
9001629a:	bf14      	ite	ne
9001629c:	2002      	movne	r0, #2
9001629e:	2000      	moveq	r0, #0
900162a0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900162a4:	b280      	uxth	r0, r0
900162a6:	bd38      	pop	{r3, r4, r5, pc}

900162a8 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
900162a8:	b538      	push	{r3, r4, r5, lr}
900162aa:	4605      	mov	r5, r0
900162ac:	f002 f8e4 	bl	90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>
900162b0:	4604      	mov	r4, r0
900162b2:	4628      	mov	r0, r5
900162b4:	f002 f824 	bl	90018300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
900162b8:	2800      	cmp	r0, #0
900162ba:	bf14      	ite	ne
900162bc:	2002      	movne	r0, #2
900162be:	2000      	moveq	r0, #0
900162c0:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
900162c4:	f040 0001 	orr.w	r0, r0, #1
900162c8:	b280      	uxth	r0, r0
900162ca:	bd38      	pop	{r3, r4, r5, pc}

900162cc <_ZN8touchgfx4clzuEm>:
900162cc:	4603      	mov	r3, r0
900162ce:	b1c8      	cbz	r0, 90016304 <_ZN8touchgfx4clzuEm+0x38>
900162d0:	0c02      	lsrs	r2, r0, #16
900162d2:	0412      	lsls	r2, r2, #16
900162d4:	b9a2      	cbnz	r2, 90016300 <_ZN8touchgfx4clzuEm+0x34>
900162d6:	0403      	lsls	r3, r0, #16
900162d8:	2010      	movs	r0, #16
900162da:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
900162de:	bf04      	itt	eq
900162e0:	021b      	lsleq	r3, r3, #8
900162e2:	3008      	addeq	r0, #8
900162e4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
900162e8:	bf04      	itt	eq
900162ea:	011b      	lsleq	r3, r3, #4
900162ec:	3004      	addeq	r0, #4
900162ee:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
900162f2:	bf04      	itt	eq
900162f4:	009b      	lsleq	r3, r3, #2
900162f6:	3002      	addeq	r0, #2
900162f8:	2b00      	cmp	r3, #0
900162fa:	db04      	blt.n	90016306 <_ZN8touchgfx4clzuEm+0x3a>
900162fc:	3001      	adds	r0, #1
900162fe:	4770      	bx	lr
90016300:	2000      	movs	r0, #0
90016302:	e7ea      	b.n	900162da <_ZN8touchgfx4clzuEm+0xe>
90016304:	2020      	movs	r0, #32
90016306:	4770      	bx	lr

90016308 <_ZN8touchgfx7muldivuEmmmRm>:
90016308:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
9001630c:	460f      	mov	r7, r1
9001630e:	4615      	mov	r5, r2
90016310:	461e      	mov	r6, r3
90016312:	4601      	mov	r1, r0
90016314:	b100      	cbz	r0, 90016318 <_ZN8touchgfx7muldivuEmmmRm+0x10>
90016316:	b927      	cbnz	r7, 90016322 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
90016318:	2000      	movs	r0, #0
9001631a:	6030      	str	r0, [r6, #0]
9001631c:	b002      	add	sp, #8
9001631e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90016322:	f7ff ffd3 	bl	900162cc <_ZN8touchgfx4clzuEm>
90016326:	b980      	cbnz	r0, 9001634a <_ZN8touchgfx7muldivuEmmmRm+0x42>
90016328:	4638      	mov	r0, r7
9001632a:	f7ff ffcf 	bl	900162cc <_ZN8touchgfx4clzuEm>
9001632e:	2800      	cmp	r0, #0
90016330:	dd05      	ble.n	9001633e <_ZN8touchgfx7muldivuEmmmRm+0x36>
90016332:	4633      	mov	r3, r6
90016334:	462a      	mov	r2, r5
90016336:	4638      	mov	r0, r7
90016338:	f7ff ffe6 	bl	90016308 <_ZN8touchgfx7muldivuEmmmRm>
9001633c:	e7ee      	b.n	9001631c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001633e:	f04f 33ff 	mov.w	r3, #4294967295
90016342:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
90016346:	6033      	str	r3, [r6, #0]
90016348:	e7e8      	b.n	9001631c <_ZN8touchgfx7muldivuEmmmRm+0x14>
9001634a:	fa37 f800 	lsrs.w	r8, r7, r0
9001634e:	fb07 f301 	mul.w	r3, r7, r1
90016352:	d105      	bne.n	90016360 <_ZN8touchgfx7muldivuEmmmRm+0x58>
90016354:	fbb3 f0f5 	udiv	r0, r3, r5
90016358:	fb05 3510 	mls	r5, r5, r0, r3
9001635c:	6035      	str	r5, [r6, #0]
9001635e:	e7dd      	b.n	9001631c <_ZN8touchgfx7muldivuEmmmRm+0x14>
90016360:	2301      	movs	r3, #1
90016362:	fa01 fa00 	lsl.w	sl, r1, r0
90016366:	462a      	mov	r2, r5
90016368:	fa03 f000 	lsl.w	r0, r3, r0
9001636c:	4633      	mov	r3, r6
9001636e:	fbba f9f5 	udiv	r9, sl, r5
90016372:	3801      	subs	r0, #1
90016374:	fb08 f409 	mul.w	r4, r8, r9
90016378:	4038      	ands	r0, r7
9001637a:	f7ff ffc5 	bl	90016308 <_ZN8touchgfx7muldivuEmmmRm>
9001637e:	462a      	mov	r2, r5
90016380:	4607      	mov	r7, r0
90016382:	ab01      	add	r3, sp, #4
90016384:	fb05 a119 	mls	r1, r5, r9, sl
90016388:	4640      	mov	r0, r8
9001638a:	f7ff ffbd 	bl	90016308 <_ZN8touchgfx7muldivuEmmmRm>
9001638e:	9b01      	ldr	r3, [sp, #4]
90016390:	6832      	ldr	r2, [r6, #0]
90016392:	441a      	add	r2, r3
90016394:	fbb2 f3f5 	udiv	r3, r2, r5
90016398:	441c      	add	r4, r3
9001639a:	fb05 2513 	mls	r5, r5, r3, r2
9001639e:	443c      	add	r4, r7
900163a0:	4420      	add	r0, r4
900163a2:	e7db      	b.n	9001635c <_ZN8touchgfx7muldivuEmmmRm+0x54>

900163a4 <_ZN8touchgfx6muldivElllRl>:
900163a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
900163a6:	2800      	cmp	r0, #0
900163a8:	461e      	mov	r6, r3
900163aa:	bfba      	itte	lt
900163ac:	4240      	neglt	r0, r0
900163ae:	f04f 34ff 	movlt.w	r4, #4294967295
900163b2:	2401      	movge	r4, #1
900163b4:	2900      	cmp	r1, #0
900163b6:	bfbc      	itt	lt
900163b8:	4249      	neglt	r1, r1
900163ba:	4264      	neglt	r4, r4
900163bc:	2a00      	cmp	r2, #0
900163be:	bfb6      	itet	lt
900163c0:	4265      	neglt	r5, r4
900163c2:	4625      	movge	r5, r4
900163c4:	4252      	neglt	r2, r2
900163c6:	4288      	cmp	r0, r1
900163c8:	bfc2      	ittt	gt
900163ca:	4603      	movgt	r3, r0
900163cc:	4608      	movgt	r0, r1
900163ce:	4619      	movgt	r1, r3
900163d0:	ab01      	add	r3, sp, #4
900163d2:	f7ff ff99 	bl	90016308 <_ZN8touchgfx7muldivuEmmmRm>
900163d6:	9b01      	ldr	r3, [sp, #4]
900163d8:	4368      	muls	r0, r5
900163da:	435c      	muls	r4, r3
900163dc:	6034      	str	r4, [r6, #0]
900163de:	b002      	add	sp, #8
900163e0:	bd70      	pop	{r4, r5, r6, pc}

900163e2 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
900163e2:	2000      	movs	r0, #0
900163e4:	4770      	bx	lr

900163e6 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
900163e6:	2001      	movs	r0, #1
900163e8:	4770      	bx	lr

900163ea <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
900163ea:	2002      	movs	r0, #2
900163ec:	4770      	bx	lr

900163ee <_ZN8touchgfx6ScreenD1Ev>:
900163ee:	4770      	bx	lr

900163f0 <_ZN8touchgfx6Screen11setupScreenEv>:
900163f0:	4770      	bx	lr

900163f2 <_ZN8touchgfx12GestureEventD1Ev>:
900163f2:	4770      	bx	lr

900163f4 <_ZN8touchgfx9DragEventD1Ev>:
900163f4:	4770      	bx	lr

900163f6 <_ZN8touchgfx10ClickEventD1Ev>:
900163f6:	4770      	bx	lr

900163f8 <_ZN8touchgfx10ClickEventD0Ev>:
900163f8:	b510      	push	{r4, lr}
900163fa:	4604      	mov	r4, r0
900163fc:	210c      	movs	r1, #12
900163fe:	f00f fed8 	bl	900261b2 <_ZdlPvj>
90016402:	4620      	mov	r0, r4
90016404:	bd10      	pop	{r4, pc}

90016406 <_ZN8touchgfx9DragEventD0Ev>:
90016406:	b510      	push	{r4, lr}
90016408:	4604      	mov	r4, r0
9001640a:	2110      	movs	r1, #16
9001640c:	f00f fed1 	bl	900261b2 <_ZdlPvj>
90016410:	4620      	mov	r0, r4
90016412:	bd10      	pop	{r4, pc}

90016414 <_ZN8touchgfx12GestureEventD0Ev>:
90016414:	b510      	push	{r4, lr}
90016416:	4604      	mov	r4, r0
90016418:	210c      	movs	r1, #12
9001641a:	f00f feca 	bl	900261b2 <_ZdlPvj>
9001641e:	4620      	mov	r0, r4
90016420:	bd10      	pop	{r4, pc}

90016422 <_ZN8touchgfx6ScreenD0Ev>:
90016422:	b510      	push	{r4, lr}
90016424:	4604      	mov	r4, r0
90016426:	213c      	movs	r1, #60	; 0x3c
90016428:	f00f fec3 	bl	900261b2 <_ZdlPvj>
9001642c:	4620      	mov	r0, r4
9001642e:	bd10      	pop	{r4, pc}

90016430 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90016430:	b530      	push	{r4, r5, lr}
90016432:	460d      	mov	r5, r1
90016434:	6b01      	ldr	r1, [r0, #48]	; 0x30
90016436:	b087      	sub	sp, #28
90016438:	4604      	mov	r4, r0
9001643a:	b301      	cbz	r1, 9001647e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
9001643c:	a801      	add	r0, sp, #4
9001643e:	f7ff fe7f 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016442:	892a      	ldrh	r2, [r5, #8]
90016444:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90016448:	7928      	ldrb	r0, [r5, #4]
9001644a:	1ad2      	subs	r2, r2, r3
9001644c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
9001644e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90016452:	441a      	add	r2, r3
90016454:	896b      	ldrh	r3, [r5, #10]
90016456:	f8bd 5006 	ldrh.w	r5, [sp, #6]
9001645a:	f88d 0010 	strb.w	r0, [sp, #16]
9001645e:	1b5b      	subs	r3, r3, r5
90016460:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
90016462:	6b20      	ldr	r0, [r4, #48]	; 0x30
90016464:	442b      	add	r3, r5
90016466:	4d07      	ldr	r5, [pc, #28]	; (90016484 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90016468:	f8ad 1012 	strh.w	r1, [sp, #18]
9001646c:	a903      	add	r1, sp, #12
9001646e:	9503      	str	r5, [sp, #12]
90016470:	f8ad 2014 	strh.w	r2, [sp, #20]
90016474:	f8ad 3016 	strh.w	r3, [sp, #22]
90016478:	6803      	ldr	r3, [r0, #0]
9001647a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
9001647c:	4798      	blx	r3
9001647e:	b007      	add	sp, #28
90016480:	bd30      	pop	{r4, r5, pc}
90016482:	bf00      	nop
90016484:	9002a874 	.word	0x9002a874

90016488 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
90016488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001648c:	6b03      	ldr	r3, [r0, #48]	; 0x30
9001648e:	b08a      	sub	sp, #40	; 0x28
90016490:	4604      	mov	r4, r0
90016492:	460d      	mov	r5, r1
90016494:	b113      	cbz	r3, 9001649c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
90016496:	790b      	ldrb	r3, [r1, #4]
90016498:	2b00      	cmp	r3, #0
9001649a:	d044      	beq.n	90016526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001649c:	f104 0804 	add.w	r8, r4, #4
900164a0:	a803      	add	r0, sp, #12
900164a2:	4641      	mov	r1, r8
900164a4:	f7ff fe4c 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900164a8:	792b      	ldrb	r3, [r5, #4]
900164aa:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
900164ae:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
900164b2:	b983      	cbnz	r3, 900164d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
900164b4:	f104 0336 	add.w	r3, r4, #54	; 0x36
900164b8:	892a      	ldrh	r2, [r5, #8]
900164ba:	88e9      	ldrh	r1, [r5, #6]
900164bc:	4640      	mov	r0, r8
900164be:	1b92      	subs	r2, r2, r6
900164c0:	9301      	str	r3, [sp, #4]
900164c2:	1bc9      	subs	r1, r1, r7
900164c4:	f104 0334 	add.w	r3, r4, #52	; 0x34
900164c8:	b212      	sxth	r2, r2
900164ca:	9300      	str	r3, [sp, #0]
900164cc:	b209      	sxth	r1, r1
900164ce:	f104 0330 	add.w	r3, r4, #48	; 0x30
900164d2:	f7f9 fd1f 	bl	9000ff14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
900164d6:	6b21      	ldr	r1, [r4, #48]	; 0x30
900164d8:	b329      	cbz	r1, 90016526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900164da:	a805      	add	r0, sp, #20
900164dc:	f7ff fe30 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900164e0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
900164e4:	792b      	ldrb	r3, [r5, #4]
900164e6:	a907      	add	r1, sp, #28
900164e8:	1abf      	subs	r7, r7, r2
900164ea:	88ea      	ldrh	r2, [r5, #6]
900164ec:	6b20      	ldr	r0, [r4, #48]	; 0x30
900164ee:	4417      	add	r7, r2
900164f0:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
900164f2:	f88d 3020 	strb.w	r3, [sp, #32]
900164f6:	4417      	add	r7, r2
900164f8:	f8bd 2016 	ldrh.w	r2, [sp, #22]
900164fc:	1ab6      	subs	r6, r6, r2
900164fe:	892a      	ldrh	r2, [r5, #8]
90016500:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
90016504:	4416      	add	r6, r2
90016506:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
90016508:	4416      	add	r6, r2
9001650a:	4a08      	ldr	r2, [pc, #32]	; (9001652c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
9001650c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
90016510:	2600      	movs	r6, #0
90016512:	9207      	str	r2, [sp, #28]
90016514:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
90016518:	6803      	ldr	r3, [r0, #0]
9001651a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
9001651c:	4798      	blx	r3
9001651e:	792b      	ldrb	r3, [r5, #4]
90016520:	b10b      	cbz	r3, 90016526 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90016522:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
90016526:	b00a      	add	sp, #40	; 0x28
90016528:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001652c:	9002a84c 	.word	0x9002a84c

90016530 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
90016530:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90016534:	460c      	mov	r4, r1
90016536:	6b01      	ldr	r1, [r0, #48]	; 0x30
90016538:	b088      	sub	sp, #32
9001653a:	4605      	mov	r5, r0
9001653c:	2900      	cmp	r1, #0
9001653e:	d06d      	beq.n	9001661c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
90016540:	4668      	mov	r0, sp
90016542:	f7ff fdfd 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016546:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
90016548:	88e3      	ldrh	r3, [r4, #6]
9001654a:	f9bd 8000 	ldrsh.w	r8, [sp]
9001654e:	440b      	add	r3, r1
90016550:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
90016554:	b21b      	sxth	r3, r3
90016556:	4543      	cmp	r3, r8
90016558:	db31      	blt.n	900165be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001655a:	f8bd c004 	ldrh.w	ip, [sp, #4]
9001655e:	44c4      	add	ip, r8
90016560:	fa0f fc8c 	sxth.w	ip, ip
90016564:	4563      	cmp	r3, ip
90016566:	da2a      	bge.n	900165be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016568:	8eea      	ldrh	r2, [r5, #54]	; 0x36
9001656a:	8926      	ldrh	r6, [r4, #8]
9001656c:	4416      	add	r6, r2
9001656e:	b236      	sxth	r6, r6
90016570:	42be      	cmp	r6, r7
90016572:	db24      	blt.n	900165be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016574:	f8bd 0006 	ldrh.w	r0, [sp, #6]
90016578:	4438      	add	r0, r7
9001657a:	b200      	sxth	r0, r0
9001657c:	4286      	cmp	r6, r0
9001657e:	da1e      	bge.n	900165be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90016580:	8963      	ldrh	r3, [r4, #10]
90016582:	4419      	add	r1, r3
90016584:	b209      	sxth	r1, r1
90016586:	4541      	cmp	r1, r8
90016588:	db08      	blt.n	9001659c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001658a:	4561      	cmp	r1, ip
9001658c:	da06      	bge.n	9001659c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001658e:	89a3      	ldrh	r3, [r4, #12]
90016590:	441a      	add	r2, r3
90016592:	b212      	sxth	r2, r2
90016594:	42ba      	cmp	r2, r7
90016596:	db01      	blt.n	9001659c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90016598:	4282      	cmp	r2, r0
9001659a:	db10      	blt.n	900165be <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
9001659c:	4b21      	ldr	r3, [pc, #132]	; (90016624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
9001659e:	a904      	add	r1, sp, #16
900165a0:	6b28      	ldr	r0, [r5, #48]	; 0x30
900165a2:	9304      	str	r3, [sp, #16]
900165a4:	2302      	movs	r3, #2
900165a6:	f88d 3014 	strb.w	r3, [sp, #20]
900165aa:	2300      	movs	r3, #0
900165ac:	f8ad 3016 	strh.w	r3, [sp, #22]
900165b0:	f8ad 3018 	strh.w	r3, [sp, #24]
900165b4:	f8ad 301a 	strh.w	r3, [sp, #26]
900165b8:	6803      	ldr	r3, [r0, #0]
900165ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
900165bc:	4798      	blx	r3
900165be:	1d29      	adds	r1, r5, #4
900165c0:	a802      	add	r0, sp, #8
900165c2:	f7ff fdbd 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900165c6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
900165ca:	88e0      	ldrh	r0, [r4, #6]
900165cc:	eba3 0808 	sub.w	r8, r3, r8
900165d0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900165d4:	7921      	ldrb	r1, [r4, #4]
900165d6:	fa1f f888 	uxth.w	r8, r8
900165da:	1bdf      	subs	r7, r3, r7
900165dc:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
900165e0:	b2bb      	uxth	r3, r7
900165e2:	4440      	add	r0, r8
900165e4:	8922      	ldrh	r2, [r4, #8]
900165e6:	8967      	ldrh	r7, [r4, #10]
900165e8:	4460      	add	r0, ip
900165ea:	89a4      	ldrh	r4, [r4, #12]
900165ec:	441a      	add	r2, r3
900165ee:	8eee      	ldrh	r6, [r5, #54]	; 0x36
900165f0:	44b8      	add	r8, r7
900165f2:	4423      	add	r3, r4
900165f4:	f8ad 0016 	strh.w	r0, [sp, #22]
900165f8:	4432      	add	r2, r6
900165fa:	44e0      	add	r8, ip
900165fc:	4433      	add	r3, r6
900165fe:	4c0a      	ldr	r4, [pc, #40]	; (90016628 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90016600:	6b28      	ldr	r0, [r5, #48]	; 0x30
90016602:	f88d 1014 	strb.w	r1, [sp, #20]
90016606:	a904      	add	r1, sp, #16
90016608:	9404      	str	r4, [sp, #16]
9001660a:	f8ad 2018 	strh.w	r2, [sp, #24]
9001660e:	f8ad 801a 	strh.w	r8, [sp, #26]
90016612:	f8ad 301c 	strh.w	r3, [sp, #28]
90016616:	6803      	ldr	r3, [r0, #0]
90016618:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
9001661a:	4798      	blx	r3
9001661c:	b008      	add	sp, #32
9001661e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90016622:	bf00      	nop
90016624:	9002a84c 	.word	0x9002a84c
90016628:	9002a860 	.word	0x9002a860

9001662c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
9001662c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001662e:	4604      	mov	r4, r0
90016630:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
90016634:	3201      	adds	r2, #1
90016636:	d112      	bne.n	9001665e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
90016638:	2500      	movs	r5, #0
9001663a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
9001663e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
90016642:	6803      	ldr	r3, [r0, #0]
90016644:	9500      	str	r5, [sp, #0]
90016646:	466d      	mov	r5, sp
90016648:	f8ad 1004 	strh.w	r1, [sp, #4]
9001664c:	f8ad 2006 	strh.w	r2, [sp, #6]
90016650:	4629      	mov	r1, r5
90016652:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90016654:	4798      	blx	r3
90016656:	e895 0003 	ldmia.w	r5, {r0, r1}
9001665a:	e884 0003 	stmia.w	r4, {r0, r1}
9001665e:	4620      	mov	r0, r4
90016660:	b003      	add	sp, #12
90016662:	bd30      	pop	{r4, r5, pc}

90016664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
90016664:	b513      	push	{r0, r1, r4, lr}
90016666:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
9001666a:	4604      	mov	r4, r0
9001666c:	3301      	adds	r3, #1
9001666e:	d109      	bne.n	90016684 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90016670:	4601      	mov	r1, r0
90016672:	4668      	mov	r0, sp
90016674:	f7ff fd64 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90016678:	f8bd 3000 	ldrh.w	r3, [sp]
9001667c:	8423      	strh	r3, [r4, #32]
9001667e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016682:	8463      	strh	r3, [r4, #34]	; 0x22
90016684:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
90016688:	b002      	add	sp, #8
9001668a:	bd10      	pop	{r4, pc}

9001668c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
9001668c:	b513      	push	{r0, r1, r4, lr}
9001668e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
90016692:	4604      	mov	r4, r0
90016694:	3301      	adds	r3, #1
90016696:	d109      	bne.n	900166ac <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
90016698:	4601      	mov	r1, r0
9001669a:	4668      	mov	r0, sp
9001669c:	f7ff fd50 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900166a0:	f8bd 3000 	ldrh.w	r3, [sp]
900166a4:	8423      	strh	r3, [r4, #32]
900166a6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
900166aa:	8463      	strh	r3, [r4, #34]	; 0x22
900166ac:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
900166b0:	b002      	add	sp, #8
900166b2:	bd10      	pop	{r4, pc}

900166b4 <_ZN8touchgfx6ScreenC1Ev>:
900166b4:	b570      	push	{r4, r5, r6, lr}
900166b6:	4b17      	ldr	r3, [pc, #92]	; (90016714 <_ZN8touchgfx6ScreenC1Ev+0x60>)
900166b8:	4605      	mov	r5, r0
900166ba:	4a17      	ldr	r2, [pc, #92]	; (90016718 <_ZN8touchgfx6ScreenC1Ev+0x64>)
900166bc:	2101      	movs	r1, #1
900166be:	f845 3b04 	str.w	r3, [r5], #4
900166c2:	2300      	movs	r3, #0
900166c4:	6042      	str	r2, [r0, #4]
900166c6:	4604      	mov	r4, r0
900166c8:	8103      	strh	r3, [r0, #8]
900166ca:	8143      	strh	r3, [r0, #10]
900166cc:	8183      	strh	r3, [r0, #12]
900166ce:	81c3      	strh	r3, [r0, #14]
900166d0:	8203      	strh	r3, [r0, #16]
900166d2:	8243      	strh	r3, [r0, #18]
900166d4:	8283      	strh	r3, [r0, #20]
900166d6:	82c3      	strh	r3, [r0, #22]
900166d8:	6203      	str	r3, [r0, #32]
900166da:	8483      	strh	r3, [r0, #36]	; 0x24
900166dc:	84c3      	strh	r3, [r0, #38]	; 0x26
900166de:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
900166e2:	6343      	str	r3, [r0, #52]	; 0x34
900166e4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
900166e8:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
900166ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
900166f0:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
900166f4:	4b09      	ldr	r3, [pc, #36]	; (9001671c <_ZN8touchgfx6ScreenC1Ev+0x68>)
900166f6:	4628      	mov	r0, r5
900166f8:	f9b3 6000 	ldrsh.w	r6, [r3]
900166fc:	6b93      	ldr	r3, [r2, #56]	; 0x38
900166fe:	4a08      	ldr	r2, [pc, #32]	; (90016720 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90016700:	f9b2 1000 	ldrsh.w	r1, [r2]
90016704:	4798      	blx	r3
90016706:	6863      	ldr	r3, [r4, #4]
90016708:	4628      	mov	r0, r5
9001670a:	4631      	mov	r1, r6
9001670c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
9001670e:	4798      	blx	r3
90016710:	4620      	mov	r0, r4
90016712:	bd70      	pop	{r4, r5, r6, pc}
90016714:	9002a888 	.word	0x9002a888
90016718:	9002a19c 	.word	0x9002a19c
9001671c:	24023572 	.word	0x24023572
90016720:	24023570 	.word	0x24023570

90016724 <_ZN8touchgfx6Screen4drawEv>:
90016724:	4b09      	ldr	r3, [pc, #36]	; (9001674c <_ZN8touchgfx6Screen4drawEv+0x28>)
90016726:	b507      	push	{r0, r1, r2, lr}
90016728:	f9b3 2000 	ldrsh.w	r2, [r3]
9001672c:	2100      	movs	r1, #0
9001672e:	4b08      	ldr	r3, [pc, #32]	; (90016750 <_ZN8touchgfx6Screen4drawEv+0x2c>)
90016730:	9100      	str	r1, [sp, #0]
90016732:	4669      	mov	r1, sp
90016734:	f9b3 3000 	ldrsh.w	r3, [r3]
90016738:	f8ad 2004 	strh.w	r2, [sp, #4]
9001673c:	f8ad 3006 	strh.w	r3, [sp, #6]
90016740:	6803      	ldr	r3, [r0, #0]
90016742:	689b      	ldr	r3, [r3, #8]
90016744:	4798      	blx	r3
90016746:	b003      	add	sp, #12
90016748:	f85d fb04 	ldr.w	pc, [sp], #4
9001674c:	24023570 	.word	0x24023570
90016750:	24023572 	.word	0x24023572

90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
90016754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016758:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
9001675c:	b089      	sub	sp, #36	; 0x24
9001675e:	4680      	mov	r8, r0
90016760:	460c      	mov	r4, r1
90016762:	2b00      	cmp	r3, #0
90016764:	4615      	mov	r5, r2
90016766:	dd0e      	ble.n	90016786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016768:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
9001676c:	2b00      	cmp	r3, #0
9001676e:	dd0a      	ble.n	90016786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016770:	4628      	mov	r0, r5
90016772:	f7ff ff5b 	bl	9001662c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016776:	4621      	mov	r1, r4
90016778:	f7fe faef 	bl	90014d5a <_ZNK8touchgfx4Rect9intersectERKS0_>
9001677c:	69eb      	ldr	r3, [r5, #28]
9001677e:	b928      	cbnz	r0, 9001678c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90016780:	461d      	mov	r5, r3
90016782:	2b00      	cmp	r3, #0
90016784:	d1f4      	bne.n	90016770 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
90016786:	b009      	add	sp, #36	; 0x24
90016788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001678c:	ae04      	add	r6, sp, #16
9001678e:	2b00      	cmp	r3, #0
90016790:	f000 80b5 	beq.w	900168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016794:	682b      	ldr	r3, [r5, #0]
90016796:	4629      	mov	r1, r5
90016798:	a802      	add	r0, sp, #8
9001679a:	68db      	ldr	r3, [r3, #12]
9001679c:	4798      	blx	r3
9001679e:	4628      	mov	r0, r5
900167a0:	f7ff ff60 	bl	90016664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900167a4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
900167a8:	4407      	add	r7, r0
900167aa:	4628      	mov	r0, r5
900167ac:	f7ff ff6e 	bl	9001668c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900167b0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900167b4:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
900167b8:	b23f      	sxth	r7, r7
900167ba:	4418      	add	r0, r3
900167bc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
900167c0:	4621      	mov	r1, r4
900167c2:	f8ad 2014 	strh.w	r2, [sp, #20]
900167c6:	f8ad 0012 	strh.w	r0, [sp, #18]
900167ca:	4630      	mov	r0, r6
900167cc:	f8ad 3016 	strh.w	r3, [sp, #22]
900167d0:	f8ad 7010 	strh.w	r7, [sp, #16]
900167d4:	f7f9 fc80 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900167d8:	4628      	mov	r0, r5
900167da:	f7ff ff27 	bl	9001662c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
900167de:	ab06      	add	r3, sp, #24
900167e0:	4602      	mov	r2, r0
900167e2:	e896 0003 	ldmia.w	r6, {r0, r1}
900167e6:	e883 0003 	stmia.w	r3, {r0, r1}
900167ea:	4611      	mov	r1, r2
900167ec:	4618      	mov	r0, r3
900167ee:	f7f9 fc73 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900167f2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900167f6:	f9b4 1000 	ldrsh.w	r1, [r4]
900167fa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
900167fe:	4299      	cmp	r1, r3
90016800:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90016804:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
90016808:	d10b      	bne.n	90016822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001680a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001680e:	4552      	cmp	r2, sl
90016810:	d107      	bne.n	90016822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
90016812:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
90016816:	455a      	cmp	r2, fp
90016818:	d103      	bne.n	90016822 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001681a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9001681e:	454a      	cmp	r2, r9
90016820:	d06d      	beq.n	900168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90016822:	f1bb 0f00 	cmp.w	fp, #0
90016826:	dd65      	ble.n	900168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
90016828:	f1b9 0f00 	cmp.w	r9, #0
9001682c:	dd62      	ble.n	900168f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
9001682e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
90016832:	fa1f f08a 	uxth.w	r0, sl
90016836:	4552      	cmp	r2, sl
90016838:	9000      	str	r0, [sp, #0]
9001683a:	da12      	bge.n	90016862 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
9001683c:	9301      	str	r3, [sp, #4]
9001683e:	9b00      	ldr	r3, [sp, #0]
90016840:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90016844:	f8ad 2012 	strh.w	r2, [sp, #18]
90016848:	1a9a      	subs	r2, r3, r2
9001684a:	f8ad 1010 	strh.w	r1, [sp, #16]
9001684e:	4631      	mov	r1, r6
90016850:	f8ad 0014 	strh.w	r0, [sp, #20]
90016854:	4640      	mov	r0, r8
90016856:	f8ad 2016 	strh.w	r2, [sp, #22]
9001685a:	69ea      	ldr	r2, [r5, #28]
9001685c:	f7ff ff7a 	bl	90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016860:	9b01      	ldr	r3, [sp, #4]
90016862:	f9b4 2000 	ldrsh.w	r2, [r4]
90016866:	b29f      	uxth	r7, r3
90016868:	429a      	cmp	r2, r3
9001686a:	da0d      	bge.n	90016888 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
9001686c:	f8ad 2010 	strh.w	r2, [sp, #16]
90016870:	1aba      	subs	r2, r7, r2
90016872:	f8ad a012 	strh.w	sl, [sp, #18]
90016876:	4631      	mov	r1, r6
90016878:	f8ad 2014 	strh.w	r2, [sp, #20]
9001687c:	4640      	mov	r0, r8
9001687e:	f8ad 9016 	strh.w	r9, [sp, #22]
90016882:	69ea      	ldr	r2, [r5, #28]
90016884:	f7ff ff66 	bl	90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90016888:	8822      	ldrh	r2, [r4, #0]
9001688a:	445f      	add	r7, fp
9001688c:	88a3      	ldrh	r3, [r4, #4]
9001688e:	b2bf      	uxth	r7, r7
90016890:	4413      	add	r3, r2
90016892:	b23a      	sxth	r2, r7
90016894:	b29b      	uxth	r3, r3
90016896:	b219      	sxth	r1, r3
90016898:	4291      	cmp	r1, r2
9001689a:	dd0d      	ble.n	900168b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
9001689c:	1bdb      	subs	r3, r3, r7
9001689e:	f8ad 2010 	strh.w	r2, [sp, #16]
900168a2:	f8ad a012 	strh.w	sl, [sp, #18]
900168a6:	4631      	mov	r1, r6
900168a8:	f8ad 3014 	strh.w	r3, [sp, #20]
900168ac:	4640      	mov	r0, r8
900168ae:	f8ad 9016 	strh.w	r9, [sp, #22]
900168b2:	69ea      	ldr	r2, [r5, #28]
900168b4:	f7ff ff4e 	bl	90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900168b8:	88e2      	ldrh	r2, [r4, #6]
900168ba:	8863      	ldrh	r3, [r4, #2]
900168bc:	4413      	add	r3, r2
900168be:	9a00      	ldr	r2, [sp, #0]
900168c0:	444a      	add	r2, r9
900168c2:	b29b      	uxth	r3, r3
900168c4:	fa1f f982 	uxth.w	r9, r2
900168c8:	b219      	sxth	r1, r3
900168ca:	fa0f f289 	sxth.w	r2, r9
900168ce:	428a      	cmp	r2, r1
900168d0:	da15      	bge.n	900168fe <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900168d2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900168d6:	eba3 0309 	sub.w	r3, r3, r9
900168da:	f9b4 0000 	ldrsh.w	r0, [r4]
900168de:	f8ad 1014 	strh.w	r1, [sp, #20]
900168e2:	4631      	mov	r1, r6
900168e4:	f8ad 0010 	strh.w	r0, [sp, #16]
900168e8:	f8ad 2012 	strh.w	r2, [sp, #18]
900168ec:	f8ad 3016 	strh.w	r3, [sp, #22]
900168f0:	69ea      	ldr	r2, [r5, #28]
900168f2:	e001      	b.n	900168f8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
900168f4:	69ea      	ldr	r2, [r5, #28]
900168f6:	4621      	mov	r1, r4
900168f8:	4640      	mov	r0, r8
900168fa:	f7ff ff2b 	bl	90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900168fe:	4628      	mov	r0, r5
90016900:	f7ff fe94 	bl	9001662c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90016904:	6861      	ldr	r1, [r4, #4]
90016906:	4602      	mov	r2, r0
90016908:	4633      	mov	r3, r6
9001690a:	6820      	ldr	r0, [r4, #0]
9001690c:	c303      	stmia	r3!, {r0, r1}
9001690e:	4611      	mov	r1, r2
90016910:	4630      	mov	r0, r6
90016912:	f7f9 fbe1 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
90016916:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
9001691a:	2b00      	cmp	r3, #0
9001691c:	f77f af33 	ble.w	90016786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90016920:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
90016924:	2b00      	cmp	r3, #0
90016926:	f77f af2e 	ble.w	90016786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
9001692a:	4628      	mov	r0, r5
9001692c:	f7ff fe9a 	bl	90016664 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90016930:	f8bd 3010 	ldrh.w	r3, [sp, #16]
90016934:	1a18      	subs	r0, r3, r0
90016936:	f8ad 0010 	strh.w	r0, [sp, #16]
9001693a:	4628      	mov	r0, r5
9001693c:	f7ff fea6 	bl	9001668c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90016940:	f8bd 3012 	ldrh.w	r3, [sp, #18]
90016944:	4631      	mov	r1, r6
90016946:	1a18      	subs	r0, r3, r0
90016948:	f8ad 0012 	strh.w	r0, [sp, #18]
9001694c:	4628      	mov	r0, r5
9001694e:	682b      	ldr	r3, [r5, #0]
90016950:	689b      	ldr	r3, [r3, #8]
90016952:	4798      	blx	r3
90016954:	e717      	b.n	90016786 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

90016956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
90016956:	b570      	push	{r4, r5, r6, lr}
90016958:	1d06      	adds	r6, r0, #4
9001695a:	b086      	sub	sp, #24
9001695c:	460c      	mov	r4, r1
9001695e:	2300      	movs	r3, #0
90016960:	4631      	mov	r1, r6
90016962:	4605      	mov	r5, r0
90016964:	a802      	add	r0, sp, #8
90016966:	9301      	str	r3, [sp, #4]
90016968:	f7ff fbea 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001696c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90016970:	8822      	ldrh	r2, [r4, #0]
90016972:	f8bd 100a 	ldrh.w	r1, [sp, #10]
90016976:	1ad2      	subs	r2, r2, r3
90016978:	8863      	ldrh	r3, [r4, #2]
9001697a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001697e:	1a5b      	subs	r3, r3, r1
90016980:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90016984:	f8ad 2010 	strh.w	r2, [sp, #16]
90016988:	aa01      	add	r2, sp, #4
9001698a:	f8ad 0014 	strh.w	r0, [sp, #20]
9001698e:	4630      	mov	r0, r6
90016990:	f8ad 1016 	strh.w	r1, [sp, #22]
90016994:	a904      	add	r1, sp, #16
90016996:	f8ad 3012 	strh.w	r3, [sp, #18]
9001699a:	f7f9 fc75 	bl	90010288 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
9001699e:	9a01      	ldr	r2, [sp, #4]
900169a0:	b11a      	cbz	r2, 900169aa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
900169a2:	4621      	mov	r1, r4
900169a4:	4628      	mov	r0, r5
900169a6:	f7ff fed5 	bl	90016754 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900169aa:	b006      	add	sp, #24
900169ac:	bd70      	pop	{r4, r5, r6, pc}

900169ae <_ZN8touchgfx6Screen4drawERNS_4RectE>:
900169ae:	4602      	mov	r2, r0
900169b0:	b530      	push	{r4, r5, lr}
900169b2:	4604      	mov	r4, r0
900169b4:	b085      	sub	sp, #20
900169b6:	f852 0f08 	ldr.w	r0, [r2, #8]!
900169ba:	460d      	mov	r5, r1
900169bc:	466b      	mov	r3, sp
900169be:	6851      	ldr	r1, [r2, #4]
900169c0:	c303      	stmia	r3!, {r0, r1}
900169c2:	4629      	mov	r1, r5
900169c4:	4668      	mov	r0, sp
900169c6:	f7f9 fb87 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
900169ca:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
900169ce:	b12b      	cbz	r3, 900169dc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
900169d0:	4669      	mov	r1, sp
900169d2:	4620      	mov	r0, r4
900169d4:	f7ff ffbf 	bl	90016956 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
900169d8:	b005      	add	sp, #20
900169da:	bd30      	pop	{r4, r5, pc}
900169dc:	3404      	adds	r4, #4
900169de:	a802      	add	r0, sp, #8
900169e0:	4621      	mov	r1, r4
900169e2:	f7ff fbad 	bl	90016140 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900169e6:	f8bd 3000 	ldrh.w	r3, [sp]
900169ea:	f8bd 2008 	ldrh.w	r2, [sp, #8]
900169ee:	4669      	mov	r1, sp
900169f0:	4620      	mov	r0, r4
900169f2:	1a9b      	subs	r3, r3, r2
900169f4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
900169f8:	f8ad 3000 	strh.w	r3, [sp]
900169fc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90016a00:	1a9b      	subs	r3, r3, r2
90016a02:	f8ad 3002 	strh.w	r3, [sp, #2]
90016a06:	f7f9 fc06 	bl	90010216 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
90016a0a:	e7e5      	b.n	900169d8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

90016a0c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
90016a0c:	460b      	mov	r3, r1
90016a0e:	680a      	ldr	r2, [r1, #0]
90016a10:	1d01      	adds	r1, r0, #4
90016a12:	6992      	ldr	r2, [r2, #24]
90016a14:	4618      	mov	r0, r3
90016a16:	4710      	bx	r2

90016a18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
90016a18:	4298      	cmp	r0, r3
90016a1a:	d200      	bcs.n	90016a1e <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
90016a1c:	b913      	cbnz	r3, 90016a24 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
90016a1e:	440a      	add	r2, r1
90016a20:	b210      	sxth	r0, r2
90016a22:	4770      	bx	lr
90016a24:	ee07 0a90 	vmov	s15, r0
90016a28:	eef8 6a67 	vcvt.f32.u32	s13, s15
90016a2c:	ee07 3a90 	vmov	s15, r3
90016a30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016a34:	ee86 7aa7 	vdiv.f32	s14, s13, s15
90016a38:	ee07 2a90 	vmov	s15, r2
90016a3c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90016a40:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
90016a44:	ee07 1a90 	vmov	s15, r1
90016a48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90016a4c:	ee37 7a66 	vsub.f32	s14, s14, s13
90016a50:	ee67 5a07 	vmul.f32	s11, s14, s14
90016a54:	eee5 6a87 	vfma.f32	s13, s11, s14
90016a58:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
90016a5c:	eee6 7a26 	vfma.f32	s15, s12, s13
90016a60:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90016a64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90016a68:	bfcc      	ite	gt
90016a6a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
90016a6e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
90016a72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
90016a76:	ee17 3a90 	vmov	r3, s15
90016a7a:	b218      	sxth	r0, r3
90016a7c:	4770      	bx	lr

90016a7e <_ZN8touchgfx12TextProviderC1Ev>:
90016a7e:	b538      	push	{r3, r4, r5, lr}
90016a80:	2500      	movs	r5, #0
90016a82:	2302      	movs	r3, #2
90016a84:	4604      	mov	r4, r0
90016a86:	220e      	movs	r2, #14
90016a88:	7403      	strb	r3, [r0, #16]
90016a8a:	4629      	mov	r1, r5
90016a8c:	6145      	str	r5, [r0, #20]
90016a8e:	7605      	strb	r5, [r0, #24]
90016a90:	83c5      	strh	r5, [r0, #30]
90016a92:	8405      	strh	r5, [r0, #32]
90016a94:	86c5      	strh	r5, [r0, #54]	; 0x36
90016a96:	8705      	strh	r5, [r0, #56]	; 0x38
90016a98:	87c5      	strh	r5, [r0, #62]	; 0x3e
90016a9a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
90016a9e:	e9c0 5500 	strd	r5, r5, [r0]
90016aa2:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
90016aa6:	304c      	adds	r0, #76	; 0x4c
90016aa8:	f00f fe8a 	bl	900267c0 <memset>
90016aac:	2301      	movs	r3, #1
90016aae:	4620      	mov	r0, r4
90016ab0:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
90016ab4:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016ab8:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
90016abc:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
90016ac0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
90016ac4:	f7ed fdd4 	bl	90004670 <_ZN8touchgfx12TextProvider18initializeInternalEv>
90016ac8:	4620      	mov	r0, r4
90016aca:	bd38      	pop	{r3, r4, r5, pc}

90016acc <_ZN8touchgfx12TextProvider11endOfStringEv>:
90016acc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90016ace:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90016ad2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
90016ad4:	fab0 f080 	clz	r0, r0
90016ad8:	0940      	lsrs	r0, r0, #5
90016ada:	4770      	bx	lr

90016adc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
90016adc:	b530      	push	{r4, r5, lr}
90016ade:	2500      	movs	r5, #0
90016ae0:	2401      	movs	r4, #1
90016ae2:	6843      	ldr	r3, [r0, #4]
90016ae4:	b913      	cbnz	r3, 90016aec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90016ae6:	6803      	ldr	r3, [r0, #0]
90016ae8:	b313      	cbz	r3, 90016b30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016aea:	6043      	str	r3, [r0, #4]
90016aec:	7e03      	ldrb	r3, [r0, #24]
90016aee:	b143      	cbz	r3, 90016b02 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
90016af0:	6943      	ldr	r3, [r0, #20]
90016af2:	b12b      	cbz	r3, 90016b00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016af4:	881a      	ldrh	r2, [r3, #0]
90016af6:	b11a      	cbz	r2, 90016b00 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90016af8:	1c9a      	adds	r2, r3, #2
90016afa:	6142      	str	r2, [r0, #20]
90016afc:	8818      	ldrh	r0, [r3, #0]
90016afe:	bd30      	pop	{r4, r5, pc}
90016b00:	7605      	strb	r5, [r0, #24]
90016b02:	6843      	ldr	r3, [r0, #4]
90016b04:	8819      	ldrh	r1, [r3, #0]
90016b06:	b199      	cbz	r1, 90016b30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90016b08:	1c9a      	adds	r2, r3, #2
90016b0a:	2902      	cmp	r1, #2
90016b0c:	6042      	str	r2, [r0, #4]
90016b0e:	d1f5      	bne.n	90016afc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
90016b10:	7c03      	ldrb	r3, [r0, #16]
90016b12:	2b01      	cmp	r3, #1
90016b14:	d8e5      	bhi.n	90016ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016b16:	1c5a      	adds	r2, r3, #1
90016b18:	3302      	adds	r3, #2
90016b1a:	7402      	strb	r2, [r0, #16]
90016b1c:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
90016b20:	6143      	str	r3, [r0, #20]
90016b22:	2b00      	cmp	r3, #0
90016b24:	d0dd      	beq.n	90016ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016b26:	881b      	ldrh	r3, [r3, #0]
90016b28:	2b00      	cmp	r3, #0
90016b2a:	d0da      	beq.n	90016ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016b2c:	7604      	strb	r4, [r0, #24]
90016b2e:	e7d8      	b.n	90016ae2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90016b30:	2000      	movs	r0, #0
90016b32:	e7e4      	b.n	90016afe <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90016b34:	6001      	str	r1, [r0, #0]
90016b36:	2100      	movs	r1, #0
90016b38:	b430      	push	{r4, r5}
90016b3a:	6041      	str	r1, [r0, #4]
90016b3c:	6815      	ldr	r5, [r2, #0]
90016b3e:	6085      	str	r5, [r0, #8]
90016b40:	6852      	ldr	r2, [r2, #4]
90016b42:	6443      	str	r3, [r0, #68]	; 0x44
90016b44:	9b02      	ldr	r3, [sp, #8]
90016b46:	60c2      	str	r2, [r0, #12]
90016b48:	7401      	strb	r1, [r0, #16]
90016b4a:	6141      	str	r1, [r0, #20]
90016b4c:	7601      	strb	r1, [r0, #24]
90016b4e:	8701      	strh	r1, [r0, #56]	; 0x38
90016b50:	8401      	strh	r1, [r0, #32]
90016b52:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
90016b56:	6483      	str	r3, [r0, #72]	; 0x48
90016b58:	bc30      	pop	{r4, r5}
90016b5a:	f7ed bd89 	b.w	90004670 <_ZN8touchgfx12TextProvider18initializeInternalEv>

90016b5e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
90016b5e:	b408      	push	{r3}
90016b60:	b510      	push	{r4, lr}
90016b62:	b085      	sub	sp, #20
90016b64:	ac07      	add	r4, sp, #28
90016b66:	f854 3b04 	ldr.w	r3, [r4], #4
90016b6a:	9300      	str	r3, [sp, #0]
90016b6c:	4613      	mov	r3, r2
90016b6e:	4622      	mov	r2, r4
90016b70:	9403      	str	r4, [sp, #12]
90016b72:	f7ff ffdf 	bl	90016b34 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90016b76:	b005      	add	sp, #20
90016b78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90016b7c:	b001      	add	sp, #4
90016b7e:	4770      	bx	lr

90016b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
90016b80:	b5f0      	push	{r4, r5, r6, r7, lr}
90016b82:	4605      	mov	r5, r0
90016b84:	4608      	mov	r0, r1
90016b86:	b1f1      	cbz	r1, 90016bc6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
90016b88:	f105 044c 	add.w	r4, r5, #76	; 0x4c
90016b8c:	460b      	mov	r3, r1
90016b8e:	f101 0708 	add.w	r7, r1, #8
90016b92:	4622      	mov	r2, r4
90016b94:	6818      	ldr	r0, [r3, #0]
90016b96:	3308      	adds	r3, #8
90016b98:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016b9c:	4626      	mov	r6, r4
90016b9e:	42bb      	cmp	r3, r7
90016ba0:	c603      	stmia	r6!, {r0, r1}
90016ba2:	4634      	mov	r4, r6
90016ba4:	d1f6      	bne.n	90016b94 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
90016ba6:	6818      	ldr	r0, [r3, #0]
90016ba8:	6030      	str	r0, [r6, #0]
90016baa:	4610      	mov	r0, r2
90016bac:	889b      	ldrh	r3, [r3, #4]
90016bae:	80b3      	strh	r3, [r6, #4]
90016bb0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
90016bb4:	015b      	lsls	r3, r3, #5
90016bb6:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016bba:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
90016bbe:	430b      	orrs	r3, r1
90016bc0:	425b      	negs	r3, r3
90016bc2:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
90016bc6:	bdf0      	pop	{r4, r5, r6, r7, pc}

90016bc8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
90016bc8:	b538      	push	{r3, r4, r5, lr}
90016bca:	460c      	mov	r4, r1
90016bcc:	6811      	ldr	r1, [r2, #0]
90016bce:	4610      	mov	r0, r2
90016bd0:	68cd      	ldr	r5, [r1, #12]
90016bd2:	4619      	mov	r1, r3
90016bd4:	47a8      	blx	r5
90016bd6:	2800      	cmp	r0, #0
90016bd8:	bf08      	it	eq
90016bda:	4620      	moveq	r0, r4
90016bdc:	bd38      	pop	{r3, r4, r5, pc}
	...

90016be0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
90016be0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016be2:	4604      	mov	r4, r0
90016be4:	4615      	mov	r5, r2
90016be6:	4608      	mov	r0, r1
90016be8:	b93a      	cbnz	r2, 90016bfa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
90016bea:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016bee:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
90016bf2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
90016bf6:	4628      	mov	r0, r5
90016bf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016bfa:	f892 c00d 	ldrb.w	ip, [r2, #13]
90016bfe:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
90016c02:	8893      	ldrh	r3, [r2, #4]
90016c04:	ea4f 160c 	mov.w	r6, ip, lsl #4
90016c08:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016c0c:	79ee      	ldrb	r6, [r5, #7]
90016c0e:	4316      	orrs	r6, r2
90016c10:	19da      	adds	r2, r3, r7
90016c12:	b291      	uxth	r1, r2
90016c14:	b2b7      	uxth	r7, r6
90016c16:	291d      	cmp	r1, #29
90016c18:	d87b      	bhi.n	90016d12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016c1a:	2201      	movs	r2, #1
90016c1c:	10f6      	asrs	r6, r6, #3
90016c1e:	408a      	lsls	r2, r1
90016c20:	4974      	ldr	r1, [pc, #464]	; (90016df4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
90016c22:	420a      	tst	r2, r1
90016c24:	d12e      	bne.n	90016c84 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90016c26:	f412 7f60 	tst.w	r2, #896	; 0x380
90016c2a:	d072      	beq.n	90016d12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
90016c2c:	f104 024c 	add.w	r2, r4, #76	; 0x4c
90016c30:	462b      	mov	r3, r5
90016c32:	f105 0e08 	add.w	lr, r5, #8
90016c36:	4615      	mov	r5, r2
90016c38:	6818      	ldr	r0, [r3, #0]
90016c3a:	3308      	adds	r3, #8
90016c3c:	f853 1c04 	ldr.w	r1, [r3, #-4]
90016c40:	4694      	mov	ip, r2
90016c42:	4573      	cmp	r3, lr
90016c44:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016c48:	4662      	mov	r2, ip
90016c4a:	d1f5      	bne.n	90016c38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90016c4c:	6818      	ldr	r0, [r3, #0]
90016c4e:	f8cc 0000 	str.w	r0, [ip]
90016c52:	889b      	ldrh	r3, [r3, #4]
90016c54:	f8ac 3004 	strh.w	r3, [ip, #4]
90016c58:	b2b3      	uxth	r3, r6
90016c5a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
90016c5e:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
90016c62:	1aca      	subs	r2, r1, r3
90016c64:	1bcf      	subs	r7, r1, r7
90016c66:	f020 0060 	bic.w	r0, r0, #96	; 0x60
90016c6a:	b292      	uxth	r2, r2
90016c6c:	1afb      	subs	r3, r7, r3
90016c6e:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
90016c72:	10d2      	asrs	r2, r2, #3
90016c74:	f002 0260 	and.w	r2, r2, #96	; 0x60
90016c78:	4302      	orrs	r2, r0
90016c7a:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
90016c7e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
90016c82:	e7b8      	b.n	90016bf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016c84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
90016c86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90016c8a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
90016c8c:	f640 6333 	movw	r3, #3635	; 0xe33
90016c90:	4299      	cmp	r1, r3
90016c92:	d110      	bne.n	90016cb6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
90016c94:	6803      	ldr	r3, [r0, #0]
90016c96:	68db      	ldr	r3, [r3, #12]
90016c98:	4798      	blx	r3
90016c9a:	7b41      	ldrb	r1, [r0, #13]
90016c9c:	00cb      	lsls	r3, r1, #3
90016c9e:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016ca2:	7a03      	ldrb	r3, [r0, #8]
90016ca4:	0648      	lsls	r0, r1, #25
90016ca6:	ea43 0302 	orr.w	r3, r3, r2
90016caa:	bf44      	itt	mi
90016cac:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016cb0:	b21b      	sxthmi	r3, r3
90016cb2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016cb6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
90016cba:	462a      	mov	r2, r5
90016cbc:	f105 0c08 	add.w	ip, r5, #8
90016cc0:	443b      	add	r3, r7
90016cc2:	4433      	add	r3, r6
90016cc4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
90016cc8:	b29b      	uxth	r3, r3
90016cca:	4635      	mov	r5, r6
90016ccc:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016cd0:	6810      	ldr	r0, [r2, #0]
90016cd2:	3208      	adds	r2, #8
90016cd4:	f852 1c04 	ldr.w	r1, [r2, #-4]
90016cd8:	4637      	mov	r7, r6
90016cda:	4562      	cmp	r2, ip
90016cdc:	c703      	stmia	r7!, {r0, r1}
90016cde:	463e      	mov	r6, r7
90016ce0:	d1f6      	bne.n	90016cd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
90016ce2:	6810      	ldr	r0, [r2, #0]
90016ce4:	6038      	str	r0, [r7, #0]
90016ce6:	8892      	ldrh	r2, [r2, #4]
90016ce8:	80ba      	strh	r2, [r7, #4]
90016cea:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90016cee:	10db      	asrs	r3, r3, #3
90016cf0:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90016cf4:	f003 0360 	and.w	r3, r3, #96	; 0x60
90016cf8:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90016cfc:	4313      	orrs	r3, r2
90016cfe:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
90016d02:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90016d06:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
90016d0a:	1a9b      	subs	r3, r3, r2
90016d0c:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
90016d10:	e771      	b.n	90016bf6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
90016d12:	f023 0204 	bic.w	r2, r3, #4
90016d16:	f640 611b 	movw	r1, #3611	; 0xe1b
90016d1a:	428a      	cmp	r2, r1
90016d1c:	d003      	beq.n	90016d26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
90016d1e:	f640 621d 	movw	r2, #3613	; 0xe1d
90016d22:	4293      	cmp	r3, r2
90016d24:	d120      	bne.n	90016d68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
90016d26:	3b01      	subs	r3, #1
90016d28:	4602      	mov	r2, r0
90016d2a:	4629      	mov	r1, r5
90016d2c:	4620      	mov	r0, r4
90016d2e:	b29b      	uxth	r3, r3
90016d30:	f7ff ff4a 	bl	90016bc8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016d34:	7b41      	ldrb	r1, [r0, #13]
90016d36:	00cb      	lsls	r3, r1, #3
90016d38:	0649      	lsls	r1, r1, #25
90016d3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016d3e:	7a03      	ldrb	r3, [r0, #8]
90016d40:	ea43 0302 	orr.w	r3, r3, r2
90016d44:	bf44      	itt	mi
90016d46:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016d4a:	b21b      	sxthmi	r3, r3
90016d4c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016d50:	7b6b      	ldrb	r3, [r5, #13]
90016d52:	7aaa      	ldrb	r2, [r5, #10]
90016d54:	005b      	lsls	r3, r3, #1
90016d56:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016d5a:	4313      	orrs	r3, r2
90016d5c:	115a      	asrs	r2, r3, #5
90016d5e:	eb02 0393 	add.w	r3, r2, r3, lsr #2
90016d62:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016d66:	e035      	b.n	90016dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
90016d68:	ea4f 02cc 	mov.w	r2, ip, lsl #3
90016d6c:	f01c 0f40 	tst.w	ip, #64	; 0x40
90016d70:	f402 7180 	and.w	r1, r2, #256	; 0x100
90016d74:	7a2a      	ldrb	r2, [r5, #8]
90016d76:	ea42 0201 	orr.w	r2, r2, r1
90016d7a:	f640 6109 	movw	r1, #3593	; 0xe09
90016d7e:	bf1c      	itt	ne
90016d80:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
90016d84:	b212      	sxthne	r2, r2
90016d86:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
90016d8a:	f023 0210 	bic.w	r2, r3, #16
90016d8e:	428a      	cmp	r2, r1
90016d90:	d003      	beq.n	90016d9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
90016d92:	f640 6213 	movw	r2, #3603	; 0xe13
90016d96:	4293      	cmp	r3, r2
90016d98:	d129      	bne.n	90016dee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
90016d9a:	7b6e      	ldrb	r6, [r5, #13]
90016d9c:	4629      	mov	r1, r5
90016d9e:	0076      	lsls	r6, r6, #1
90016da0:	f406 7280 	and.w	r2, r6, #256	; 0x100
90016da4:	7aae      	ldrb	r6, [r5, #10]
90016da6:	4316      	orrs	r6, r2
90016da8:	f640 6213 	movw	r2, #3603	; 0xe13
90016dac:	4293      	cmp	r3, r2
90016dae:	4602      	mov	r2, r0
90016db0:	4620      	mov	r0, r4
90016db2:	bf16      	itet	ne
90016db4:	f103 33ff 	addne.w	r3, r3, #4294967295
90016db8:	f640 630c 	movweq	r3, #3596	; 0xe0c
90016dbc:	b29b      	uxthne	r3, r3
90016dbe:	f7ff ff03 	bl	90016bc8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90016dc2:	7b43      	ldrb	r3, [r0, #13]
90016dc4:	7a82      	ldrb	r2, [r0, #10]
90016dc6:	005b      	lsls	r3, r3, #1
90016dc8:	f403 7380 	and.w	r3, r3, #256	; 0x100
90016dcc:	4313      	orrs	r3, r2
90016dce:	1af6      	subs	r6, r6, r3
90016dd0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
90016dd4:	7b69      	ldrb	r1, [r5, #13]
90016dd6:	00cb      	lsls	r3, r1, #3
90016dd8:	f403 7280 	and.w	r2, r3, #256	; 0x100
90016ddc:	7a2b      	ldrb	r3, [r5, #8]
90016dde:	4313      	orrs	r3, r2
90016de0:	064a      	lsls	r2, r1, #25
90016de2:	bf44      	itt	mi
90016de4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016de8:	b21b      	sxthmi	r3, r3
90016dea:	1bdb      	subs	r3, r3, r7
90016dec:	e747      	b.n	90016c7e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90016dee:	2300      	movs	r3, #0
90016df0:	e7b7      	b.n	90016d62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
90016df2:	bf00      	nop
90016df4:	3fc00079 	.word	0x3fc00079

90016df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90016df8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90016dfc:	4604      	mov	r4, r0
90016dfe:	b942      	cbnz	r2, 90016e12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90016e00:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90016e04:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
90016e08:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
90016e0c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
90016e10:	e047      	b.n	90016ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90016e12:	7b51      	ldrb	r1, [r2, #13]
90016e14:	8893      	ldrh	r3, [r2, #4]
90016e16:	010d      	lsls	r5, r1, #4
90016e18:	f405 7080 	and.w	r0, r5, #256	; 0x100
90016e1c:	79d5      	ldrb	r5, [r2, #7]
90016e1e:	4305      	orrs	r5, r0
90016e20:	2d04      	cmp	r5, #4
90016e22:	bfcc      	ite	gt
90016e24:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
90016e28:	f04f 0e01 	movle.w	lr, #1
90016e2c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
90016e30:	f200 80ab 	bhi.w	90016f8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
90016e34:	f240 60e7 	movw	r0, #1767	; 0x6e7
90016e38:	4283      	cmp	r3, r0
90016e3a:	d216      	bcs.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e3c:	f240 605b 	movw	r0, #1627	; 0x65b
90016e40:	4283      	cmp	r3, r0
90016e42:	d859      	bhi.n	90016ef8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
90016e44:	f240 6057 	movw	r0, #1623	; 0x657
90016e48:	4283      	cmp	r3, r0
90016e4a:	d20e      	bcs.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e4c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016e50:	d24a      	bcs.n	90016ee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
90016e52:	f240 604e 	movw	r0, #1614	; 0x64e
90016e56:	4283      	cmp	r3, r0
90016e58:	d207      	bcs.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016e5a:	f240 601a 	movw	r0, #1562	; 0x61a
90016e5e:	4283      	cmp	r3, r0
90016e60:	d02a      	beq.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016e62:	d821      	bhi.n	90016ea8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
90016e64:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
90016e68:	d35b      	bcc.n	90016f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016e6a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
90016e6e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016e72:	f040 80d0 	bne.w	90017016 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016e76:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
90016e7a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016e7e:	f040 80ca 	bne.w	90017016 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90016e82:	00cb      	lsls	r3, r1, #3
90016e84:	0649      	lsls	r1, r1, #25
90016e86:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016e8a:	7a13      	ldrb	r3, [r2, #8]
90016e8c:	ea43 0300 	orr.w	r3, r3, r0
90016e90:	bf44      	itt	mi
90016e92:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016e96:	b21b      	sxthmi	r3, r3
90016e98:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016e9c:	1b5d      	subs	r5, r3, r5
90016e9e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016ea2:	4610      	mov	r0, r2
90016ea4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90016ea8:	f240 604b 	movw	r0, #1611	; 0x64b
90016eac:	4283      	cmp	r3, r0
90016eae:	d338      	bcc.n	90016f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016eb0:	f240 604c 	movw	r0, #1612	; 0x64c
90016eb4:	4283      	cmp	r3, r0
90016eb6:	d9d8      	bls.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016eb8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
90016ebc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
90016ec0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
90016ec4:	f040 80f3 	bne.w	900170ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016ec8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90016ecc:	f040 80ef 	bne.w	900170ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90016ed0:	00cb      	lsls	r3, r1, #3
90016ed2:	064e      	lsls	r6, r1, #25
90016ed4:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016ed8:	7a13      	ldrb	r3, [r2, #8]
90016eda:	ea43 0300 	orr.w	r3, r3, r0
90016ede:	bf44      	itt	mi
90016ee0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016ee4:	b21b      	sxthmi	r3, r3
90016ee6:	e7d9      	b.n	90016e9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90016ee8:	f240 6054 	movw	r0, #1620	; 0x654
90016eec:	4283      	cmp	r3, r0
90016eee:	d8e3      	bhi.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016ef0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
90016ef4:	d9e0      	bls.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016ef6:	e7b8      	b.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016ef8:	f240 6074 	movw	r0, #1652	; 0x674
90016efc:	4283      	cmp	r3, r0
90016efe:	d0b4      	beq.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f00:	d82d      	bhi.n	90016f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90016f02:	f240 605e 	movw	r0, #1630	; 0x65e
90016f06:	4283      	cmp	r3, r0
90016f08:	d804      	bhi.n	90016f14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90016f0a:	f240 605d 	movw	r0, #1629	; 0x65d
90016f0e:	4283      	cmp	r3, r0
90016f10:	d3d2      	bcc.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016f12:	e7aa      	b.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f14:	f240 605f 	movw	r0, #1631	; 0x65f
90016f18:	4283      	cmp	r3, r0
90016f1a:	d0cd      	beq.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016f1c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
90016f20:	d0a3      	beq.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f22:	00cb      	lsls	r3, r1, #3
90016f24:	0649      	lsls	r1, r1, #25
90016f26:	f403 7080 	and.w	r0, r3, #256	; 0x100
90016f2a:	7a13      	ldrb	r3, [r2, #8]
90016f2c:	ea43 0300 	orr.w	r3, r3, r0
90016f30:	bf44      	itt	mi
90016f32:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90016f36:	b21b      	sxthmi	r3, r3
90016f38:	1b5d      	subs	r5, r3, r5
90016f3a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
90016f3e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
90016f42:	7b53      	ldrb	r3, [r2, #13]
90016f44:	015b      	lsls	r3, r3, #5
90016f46:	f403 7180 	and.w	r1, r3, #256	; 0x100
90016f4a:	7993      	ldrb	r3, [r2, #6]
90016f4c:	430b      	orrs	r3, r1
90016f4e:	2105      	movs	r1, #5
90016f50:	005b      	lsls	r3, r3, #1
90016f52:	fb93 f3f1 	sdiv	r3, r3, r1
90016f56:	f992 1009 	ldrsb.w	r1, [r2, #9]
90016f5a:	440b      	add	r3, r1
90016f5c:	e756      	b.n	90016e0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90016f5e:	f240 60e2 	movw	r0, #1762	; 0x6e2
90016f62:	4283      	cmp	r3, r0
90016f64:	d809      	bhi.n	90016f7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90016f66:	f240 60df 	movw	r0, #1759	; 0x6df
90016f6a:	4283      	cmp	r3, r0
90016f6c:	f4bf af7d 	bcs.w	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f70:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
90016f74:	2b05      	cmp	r3, #5
90016f76:	d8d4      	bhi.n	90016f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016f78:	e777      	b.n	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016f7a:	f240 60e3 	movw	r0, #1763	; 0x6e3
90016f7e:	4283      	cmp	r3, r0
90016f80:	d09a      	beq.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016f82:	f240 60e4 	movw	r0, #1764	; 0x6e4
90016f86:	4283      	cmp	r3, r0
90016f88:	e7ca      	b.n	90016f20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90016f8a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
90016f8e:	d22b      	bcs.n	90016fe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90016f90:	f640 00ed 	movw	r0, #2285	; 0x8ed
90016f94:	4283      	cmp	r3, r0
90016f96:	d28f      	bcs.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016f98:	f640 00e5 	movw	r0, #2277	; 0x8e5
90016f9c:	4283      	cmp	r3, r0
90016f9e:	d816      	bhi.n	90016fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90016fa0:	f640 00e4 	movw	r0, #2276	; 0x8e4
90016fa4:	4283      	cmp	r3, r0
90016fa6:	f4bf af60 	bcs.w	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016faa:	f240 60ec 	movw	r0, #1772	; 0x6ec
90016fae:	4283      	cmp	r3, r0
90016fb0:	d80a      	bhi.n	90016fc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90016fb2:	f240 60eb 	movw	r0, #1771	; 0x6eb
90016fb6:	4283      	cmp	r3, r0
90016fb8:	f4bf af57 	bcs.w	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fbc:	f240 60ea 	movw	r0, #1770	; 0x6ea
90016fc0:	4283      	cmp	r3, r0
90016fc2:	f43f af79 	beq.w	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fc6:	e7ac      	b.n	90016f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90016fc8:	f240 60ed 	movw	r0, #1773	; 0x6ed
90016fcc:	e7f8      	b.n	90016fc0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90016fce:	f640 00e8 	movw	r0, #2280	; 0x8e8
90016fd2:	4283      	cmp	r3, r0
90016fd4:	d802      	bhi.n	90016fdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90016fd6:	f640 00e7 	movw	r0, #2279	; 0x8e7
90016fda:	e798      	b.n	90016f0e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90016fdc:	f640 00e9 	movw	r0, #2281	; 0x8e9
90016fe0:	4283      	cmp	r3, r0
90016fe2:	f47f af42 	bne.w	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90016fe6:	e767      	b.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016fe8:	f640 00f6 	movw	r0, #2294	; 0x8f6
90016fec:	4283      	cmp	r3, r0
90016fee:	f43f af63 	beq.w	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90016ff2:	d802      	bhi.n	90016ffa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90016ff4:	f640 00f2 	movw	r0, #2290	; 0x8f2
90016ff8:	e7f2      	b.n	90016fe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90016ffa:	f640 00fa 	movw	r0, #2298	; 0x8fa
90016ffe:	4283      	cmp	r3, r0
90017000:	d805      	bhi.n	9001700e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90017002:	f640 00f9 	movw	r0, #2297	; 0x8f9
90017006:	4283      	cmp	r3, r0
90017008:	f4ff af2f 	bcc.w	90016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
9001700c:	e754      	b.n	90016eb8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
9001700e:	f640 00fe 	movw	r0, #2302	; 0x8fe
90017012:	4283      	cmp	r3, r0
90017014:	e7af      	b.n	90016f76 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90017016:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
9001701a:	4617      	mov	r7, r2
9001701c:	f102 0808 	add.w	r8, r2, #8
90017020:	4666      	mov	r6, ip
90017022:	6838      	ldr	r0, [r7, #0]
90017024:	3708      	adds	r7, #8
90017026:	f857 1c04 	ldr.w	r1, [r7, #-4]
9001702a:	46e6      	mov	lr, ip
9001702c:	4547      	cmp	r7, r8
9001702e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90017032:	46f4      	mov	ip, lr
90017034:	d1f5      	bne.n	90017022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90017036:	6838      	ldr	r0, [r7, #0]
90017038:	f8ce 0000 	str.w	r0, [lr]
9001703c:	88b9      	ldrh	r1, [r7, #4]
9001703e:	f8ae 1004 	strh.w	r1, [lr, #4]
90017042:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
90017046:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
9001704a:	d009      	beq.n	90017060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
9001704c:	7b51      	ldrb	r1, [r2, #13]
9001704e:	7992      	ldrb	r2, [r2, #6]
90017050:	0149      	lsls	r1, r1, #5
90017052:	f401 7180 	and.w	r1, r1, #256	; 0x100
90017056:	4311      	orrs	r1, r2
90017058:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
9001705c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
90017060:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
90017064:	b2ad      	uxth	r5, r5
90017066:	d00d      	beq.n	90017084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90017068:	442b      	add	r3, r5
9001706a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
9001706e:	b29b      	uxth	r3, r3
90017070:	f022 0260 	bic.w	r2, r2, #96	; 0x60
90017074:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90017078:	10db      	asrs	r3, r3, #3
9001707a:	f003 0360 	and.w	r3, r3, #96	; 0x60
9001707e:	4313      	orrs	r3, r2
90017080:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
90017084:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90017088:	00cb      	lsls	r3, r1, #3
9001708a:	064f      	lsls	r7, r1, #25
9001708c:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017090:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
90017094:	ea43 0302 	orr.w	r3, r3, r2
90017098:	bf44      	itt	mi
9001709a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
9001709e:	b21b      	sxthmi	r3, r3
900170a0:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
900170a4:	1b5b      	subs	r3, r3, r5
900170a6:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
900170aa:	4632      	mov	r2, r6
900170ac:	e6f9      	b.n	90016ea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
900170ae:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
900170b2:	4617      	mov	r7, r2
900170b4:	f102 0908 	add.w	r9, r2, #8
900170b8:	4666      	mov	r6, ip
900170ba:	6838      	ldr	r0, [r7, #0]
900170bc:	3708      	adds	r7, #8
900170be:	f857 1c04 	ldr.w	r1, [r7, #-4]
900170c2:	46e0      	mov	r8, ip
900170c4:	454f      	cmp	r7, r9
900170c6:	e8a8 0003 	stmia.w	r8!, {r0, r1}
900170ca:	46c4      	mov	ip, r8
900170cc:	d1f5      	bne.n	900170ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
900170ce:	6838      	ldr	r0, [r7, #0]
900170d0:	f8c8 0000 	str.w	r0, [r8]
900170d4:	88b9      	ldrh	r1, [r7, #4]
900170d6:	f8a8 1004 	strh.w	r1, [r8, #4]
900170da:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
900170de:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
900170e2:	d009      	beq.n	900170f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
900170e4:	7b51      	ldrb	r1, [r2, #13]
900170e6:	7992      	ldrb	r2, [r2, #6]
900170e8:	0149      	lsls	r1, r1, #5
900170ea:	f401 7180 	and.w	r1, r1, #256	; 0x100
900170ee:	4311      	orrs	r1, r2
900170f0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
900170f4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
900170f8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
900170fc:	d00e      	beq.n	9001711c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
900170fe:	eba3 030e 	sub.w	r3, r3, lr
90017102:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
90017106:	b29b      	uxth	r3, r3
90017108:	f022 0260 	bic.w	r2, r2, #96	; 0x60
9001710c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
90017110:	10db      	asrs	r3, r3, #3
90017112:	f003 0360 	and.w	r3, r3, #96	; 0x60
90017116:	4313      	orrs	r3, r2
90017118:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
9001711c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
90017120:	00cb      	lsls	r3, r1, #3
90017122:	0648      	lsls	r0, r1, #25
90017124:	f403 7280 	and.w	r2, r3, #256	; 0x100
90017128:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
9001712c:	ea43 0302 	orr.w	r3, r3, r2
90017130:	bf44      	itt	mi
90017132:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
90017136:	b21b      	sxthmi	r3, r3
90017138:	1b5d      	subs	r5, r3, r5
9001713a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
9001713e:	e7b4      	b.n	900170aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90017140 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90017140:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90017144:	461e      	mov	r6, r3
90017146:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
90017148:	4604      	mov	r4, r0
9001714a:	4617      	mov	r7, r2
9001714c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90017150:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
90017154:	f7ed fa3c 	bl	900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90017158:	4605      	mov	r5, r0
9001715a:	b918      	cbnz	r0, 90017164 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
9001715c:	6030      	str	r0, [r6, #0]
9001715e:	4628      	mov	r0, r5
90017160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90017164:	683b      	ldr	r3, [r7, #0]
90017166:	4601      	mov	r1, r0
90017168:	4638      	mov	r0, r7
9001716a:	68db      	ldr	r3, [r3, #12]
9001716c:	4798      	blx	r3
9001716e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
90017172:	4602      	mov	r2, r0
90017174:	6030      	str	r0, [r6, #0]
90017176:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
9001717a:	d213      	bcs.n	900171a4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
9001717c:	4643      	mov	r3, r8
9001717e:	4639      	mov	r1, r7
90017180:	4620      	mov	r0, r4
90017182:	f7ff fe39 	bl	90016df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90017186:	6030      	str	r0, [r6, #0]
90017188:	6833      	ldr	r3, [r6, #0]
9001718a:	b143      	cbz	r3, 9001719e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
9001718c:	7b5a      	ldrb	r2, [r3, #13]
9001718e:	7a9b      	ldrb	r3, [r3, #10]
90017190:	0052      	lsls	r2, r2, #1
90017192:	f402 7280 	and.w	r2, r2, #256	; 0x100
90017196:	4313      	orrs	r3, r2
90017198:	bf0c      	ite	eq
9001719a:	2301      	moveq	r3, #1
9001719c:	2300      	movne	r3, #0
9001719e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
900171a2:	e7dc      	b.n	9001715e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
900171a4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
900171a8:	b29b      	uxth	r3, r3
900171aa:	2b7f      	cmp	r3, #127	; 0x7f
900171ac:	d804      	bhi.n	900171b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
900171ae:	4639      	mov	r1, r7
900171b0:	4620      	mov	r0, r4
900171b2:	f7ff fd15 	bl	90016be0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
900171b6:	e7e6      	b.n	90017186 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
900171b8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
900171bc:	2b00      	cmp	r3, #0
900171be:	d0e3      	beq.n	90017188 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900171c0:	f640 1302 	movw	r3, #2306	; 0x902
900171c4:	429d      	cmp	r5, r3
900171c6:	d1df      	bne.n	90017188 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
900171c8:	4601      	mov	r1, r0
900171ca:	4620      	mov	r0, r4
900171cc:	f7ff fcd8 	bl	90016b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
900171d0:	e7d9      	b.n	90017186 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

900171d2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
900171d2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900171d6:	461e      	mov	r6, r3
900171d8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900171da:	4604      	mov	r4, r0
900171dc:	4617      	mov	r7, r2
900171de:	eb00 0343 	add.w	r3, r0, r3, lsl #1
900171e2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900171e6:	f7ed f9f3 	bl	900045d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
900171ea:	4605      	mov	r5, r0
900171ec:	b918      	cbnz	r0, 900171f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
900171ee:	6030      	str	r0, [r6, #0]
900171f0:	4628      	mov	r0, r5
900171f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900171f6:	683b      	ldr	r3, [r7, #0]
900171f8:	4601      	mov	r1, r0
900171fa:	4638      	mov	r0, r7
900171fc:	f8d3 9008 	ldr.w	r9, [r3, #8]
90017200:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90017204:	47c8      	blx	r9
90017206:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
9001720a:	4602      	mov	r2, r0
9001720c:	6030      	str	r0, [r6, #0]
9001720e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
90017212:	d213      	bcs.n	9001723c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90017214:	4643      	mov	r3, r8
90017216:	4639      	mov	r1, r7
90017218:	4620      	mov	r0, r4
9001721a:	f7ff fded 	bl	90016df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
9001721e:	6030      	str	r0, [r6, #0]
90017220:	6833      	ldr	r3, [r6, #0]
90017222:	b143      	cbz	r3, 90017236 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90017224:	7b5a      	ldrb	r2, [r3, #13]
90017226:	7a9b      	ldrb	r3, [r3, #10]
90017228:	0052      	lsls	r2, r2, #1
9001722a:	f402 7280 	and.w	r2, r2, #256	; 0x100
9001722e:	4313      	orrs	r3, r2
90017230:	bf0c      	ite	eq
90017232:	2301      	moveq	r3, #1
90017234:	2300      	movne	r3, #0
90017236:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
9001723a:	e7d9      	b.n	900171f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
9001723c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
90017240:	b29b      	uxth	r3, r3
90017242:	2b7f      	cmp	r3, #127	; 0x7f
90017244:	d804      	bhi.n	90017250 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90017246:	4639      	mov	r1, r7
90017248:	4620      	mov	r0, r4
9001724a:	f7ff fcc9 	bl	90016be0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
9001724e:	e7e6      	b.n	9001721e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90017250:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
90017254:	2b00      	cmp	r3, #0
90017256:	d0e3      	beq.n	90017220 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017258:	f640 1302 	movw	r3, #2306	; 0x902
9001725c:	429d      	cmp	r5, r3
9001725e:	d1df      	bne.n	90017220 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90017260:	4601      	mov	r1, r0
90017262:	4620      	mov	r0, r4
90017264:	f7ff fc8c 	bl	90016b80 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90017268:	e7d9      	b.n	9001721e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

9001726a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
9001726a:	b510      	push	{r4, lr}
9001726c:	4604      	mov	r4, r0
9001726e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
90017272:	8f23      	ldrh	r3, [r4, #56]	; 0x38
90017274:	b1e1      	cbz	r1, 900172b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90017276:	2b0a      	cmp	r3, #10
90017278:	d02d      	beq.n	900172d6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
9001727a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
9001727c:	3901      	subs	r1, #1
9001727e:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90017282:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
90017284:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
90017288:	1c51      	adds	r1, r2, #1
9001728a:	b289      	uxth	r1, r1
9001728c:	2901      	cmp	r1, #1
9001728e:	bf8a      	itet	hi
90017290:	f102 32ff 	addhi.w	r2, r2, #4294967295
90017294:	87e1      	strhls	r1, [r4, #62]	; 0x3e
90017296:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
90017298:	1c5a      	adds	r2, r3, #1
9001729a:	8722      	strh	r2, [r4, #56]	; 0x38
9001729c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
9001729e:	4413      	add	r3, r2
900172a0:	b29b      	uxth	r3, r3
900172a2:	2b09      	cmp	r3, #9
900172a4:	bf88      	it	hi
900172a6:	3b0a      	subhi	r3, #10
900172a8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900172ac:	8458      	strh	r0, [r3, #34]	; 0x22
900172ae:	e7de      	b.n	9001726e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
900172b0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900172b2:	2b0a      	cmp	r3, #10
900172b4:	d00f      	beq.n	900172d6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
900172b6:	4620      	mov	r0, r4
900172b8:	f7ff fc10 	bl	90016adc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
900172bc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
900172be:	1c5a      	adds	r2, r3, #1
900172c0:	8722      	strh	r2, [r4, #56]	; 0x38
900172c2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
900172c4:	4413      	add	r3, r2
900172c6:	b29b      	uxth	r3, r3
900172c8:	2b09      	cmp	r3, #9
900172ca:	bf88      	it	hi
900172cc:	3b0a      	subhi	r3, #10
900172ce:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900172d2:	8458      	strh	r0, [r3, #34]	; 0x22
900172d4:	e7ec      	b.n	900172b0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
900172d6:	bd10      	pop	{r4, pc}

900172d8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
900172d8:	b538      	push	{r3, r4, r5, lr}
900172da:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
900172dc:	4604      	mov	r4, r0
900172de:	eb00 0243 	add.w	r2, r0, r3, lsl #1
900172e2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
900172e4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
900172e6:	3a01      	subs	r2, #1
900172e8:	8702      	strh	r2, [r0, #56]	; 0x38
900172ea:	1c5a      	adds	r2, r3, #1
900172ec:	b292      	uxth	r2, r2
900172ee:	2a09      	cmp	r2, #9
900172f0:	bf8a      	itet	hi
900172f2:	3b09      	subhi	r3, #9
900172f4:	86c2      	strhls	r2, [r0, #54]	; 0x36
900172f6:	86c3      	strhhi	r3, [r0, #54]	; 0x36
900172f8:	f7ff ffb7 	bl	9001726a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
900172fc:	8c23      	ldrh	r3, [r4, #32]
900172fe:	2b01      	cmp	r3, #1
90017300:	bf9c      	itt	ls
90017302:	3301      	addls	r3, #1
90017304:	8423      	strhls	r3, [r4, #32]
90017306:	8be3      	ldrh	r3, [r4, #30]
90017308:	b90b      	cbnz	r3, 9001730e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
9001730a:	2302      	movs	r3, #2
9001730c:	83e3      	strh	r3, [r4, #30]
9001730e:	8be3      	ldrh	r3, [r4, #30]
90017310:	4628      	mov	r0, r5
90017312:	3b01      	subs	r3, #1
90017314:	b29b      	uxth	r3, r3
90017316:	83e3      	strh	r3, [r4, #30]
90017318:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001731c:	8365      	strh	r5, [r4, #26]
9001731e:	bd38      	pop	{r3, r4, r5, pc}

90017320 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90017320:	428a      	cmp	r2, r1
90017322:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017326:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
90017328:	d932      	bls.n	90017390 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
9001732a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
9001732c:	1a54      	subs	r4, r2, r1
9001732e:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
90017332:	19ee      	adds	r6, r5, r7
90017334:	fa1f fe84 	uxth.w	lr, r4
90017338:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
9001733c:	3e01      	subs	r6, #1
9001733e:	b2b4      	uxth	r4, r6
90017340:	eba4 090e 	sub.w	r9, r4, lr
90017344:	fa1f f989 	uxth.w	r9, r9
90017348:	2c09      	cmp	r4, #9
9001734a:	4626      	mov	r6, r4
9001734c:	bf88      	it	hi
9001734e:	f1a4 060a 	subhi.w	r6, r4, #10
90017352:	f1bc 0f00 	cmp.w	ip, #0
90017356:	f104 34ff 	add.w	r4, r4, #4294967295
9001735a:	bf08      	it	eq
9001735c:	f04f 0c02 	moveq.w	ip, #2
90017360:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90017364:	b2a4      	uxth	r4, r4
90017366:	f10c 3cff 	add.w	ip, ip, #4294967295
9001736a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
9001736e:	454c      	cmp	r4, r9
90017370:	fa1f fc8c 	uxth.w	ip, ip
90017374:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90017378:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
9001737c:	d1e4      	bne.n	90017348 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
9001737e:	eba5 050e 	sub.w	r5, r5, lr
90017382:	eb0e 0408 	add.w	r4, lr, r8
90017386:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
9001738a:	8705      	strh	r5, [r0, #56]	; 0x38
9001738c:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
90017390:	8f04      	ldrh	r4, [r0, #56]	; 0x38
90017392:	250a      	movs	r5, #10
90017394:	1a64      	subs	r4, r4, r1
90017396:	4439      	add	r1, r7
90017398:	b289      	uxth	r1, r1
9001739a:	8704      	strh	r4, [r0, #56]	; 0x38
9001739c:	2909      	cmp	r1, #9
9001739e:	bf88      	it	hi
900173a0:	390a      	subhi	r1, #10
900173a2:	86c1      	strh	r1, [r0, #54]	; 0x36
900173a4:	b18a      	cbz	r2, 900173ca <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
900173a6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
900173a8:	3a01      	subs	r2, #1
900173aa:	3101      	adds	r1, #1
900173ac:	b292      	uxth	r2, r2
900173ae:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
900173b2:	8701      	strh	r1, [r0, #56]	; 0x38
900173b4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900173b6:	b901      	cbnz	r1, 900173ba <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
900173b8:	86c5      	strh	r5, [r0, #54]	; 0x36
900173ba:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
900173bc:	3901      	subs	r1, #1
900173be:	b289      	uxth	r1, r1
900173c0:	86c1      	strh	r1, [r0, #54]	; 0x36
900173c2:	eb00 0141 	add.w	r1, r0, r1, lsl #1
900173c6:	844c      	strh	r4, [r1, #34]	; 0x22
900173c8:	e7ec      	b.n	900173a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
900173ca:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900173ce:	f7ff bf4c 	b.w	9001726a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

900173d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
900173d2:	b570      	push	{r4, r5, r6, lr}
900173d4:	2500      	movs	r5, #0
900173d6:	4295      	cmp	r5, r2
900173d8:	d011      	beq.n	900173fe <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
900173da:	8bc4      	ldrh	r4, [r0, #30]
900173dc:	f831 6b02 	ldrh.w	r6, [r1], #2
900173e0:	4414      	add	r4, r2
900173e2:	3c01      	subs	r4, #1
900173e4:	1b64      	subs	r4, r4, r5
900173e6:	b2a4      	uxth	r4, r4
900173e8:	2c01      	cmp	r4, #1
900173ea:	bf88      	it	hi
900173ec:	3c02      	subhi	r4, #2
900173ee:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900173f2:	8b64      	ldrh	r4, [r4, #26]
900173f4:	42b4      	cmp	r4, r6
900173f6:	d117      	bne.n	90017428 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
900173f8:	3501      	adds	r5, #1
900173fa:	b2ad      	uxth	r5, r5
900173fc:	e7eb      	b.n	900173d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
900173fe:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90017402:	2400      	movs	r4, #0
90017404:	4413      	add	r3, r2
90017406:	b2a2      	uxth	r2, r4
90017408:	429a      	cmp	r2, r3
9001740a:	da0f      	bge.n	9001742c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
9001740c:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
9001740e:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90017412:	3401      	adds	r4, #1
90017414:	4432      	add	r2, r6
90017416:	b292      	uxth	r2, r2
90017418:	2a09      	cmp	r2, #9
9001741a:	bf88      	it	hi
9001741c:	3a0a      	subhi	r2, #10
9001741e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90017422:	8c52      	ldrh	r2, [r2, #34]	; 0x22
90017424:	42aa      	cmp	r2, r5
90017426:	d0ee      	beq.n	90017406 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90017428:	2000      	movs	r0, #0
9001742a:	bd70      	pop	{r4, r5, r6, pc}
9001742c:	2001      	movs	r0, #1
9001742e:	e7fc      	b.n	9001742a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90017430 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90017430:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017434:	4605      	mov	r5, r0
90017436:	4616      	mov	r6, r2
90017438:	1c8c      	adds	r4, r1, #2
9001743a:	8809      	ldrh	r1, [r1, #0]
9001743c:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90017440:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90017444:	42b3      	cmp	r3, r6
90017446:	d124      	bne.n	90017492 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90017448:	f3c1 2903 	ubfx	r9, r1, #8, #4
9001744c:	f3c1 1803 	ubfx	r8, r1, #4, #4
90017450:	f001 070f 	and.w	r7, r1, #15
90017454:	4652      	mov	r2, sl
90017456:	f8cd 8000 	str.w	r8, [sp]
9001745a:	464b      	mov	r3, r9
9001745c:	4621      	mov	r1, r4
9001745e:	4628      	mov	r0, r5
90017460:	f7ff ffb7 	bl	900173d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90017464:	4683      	mov	fp, r0
90017466:	b168      	cbz	r0, 90017484 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90017468:	eb0a 0109 	add.w	r1, sl, r9
9001746c:	463a      	mov	r2, r7
9001746e:	4628      	mov	r0, r5
90017470:	4441      	add	r1, r8
90017472:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90017476:	4649      	mov	r1, r9
90017478:	f7ff ff52 	bl	90017320 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
9001747c:	4658      	mov	r0, fp
9001747e:	b003      	add	sp, #12
90017480:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017484:	eb07 010a 	add.w	r1, r7, sl
90017488:	4449      	add	r1, r9
9001748a:	4441      	add	r1, r8
9001748c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90017490:	e7d2      	b.n	90017438 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
90017492:	f04f 0b00 	mov.w	fp, #0
90017496:	e7f1      	b.n	9001747c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90017498 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90017498:	b570      	push	{r4, r5, r6, lr}
9001749a:	8810      	ldrh	r0, [r2, #0]
9001749c:	4298      	cmp	r0, r3
9001749e:	d817      	bhi.n	900174d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900174a0:	1e48      	subs	r0, r1, #1
900174a2:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
900174a6:	4298      	cmp	r0, r3
900174a8:	d312      	bcc.n	900174d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900174aa:	2400      	movs	r4, #0
900174ac:	428c      	cmp	r4, r1
900174ae:	d20f      	bcs.n	900174d0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
900174b0:	1860      	adds	r0, r4, r1
900174b2:	1040      	asrs	r0, r0, #1
900174b4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
900174b8:	0085      	lsls	r5, r0, #2
900174ba:	42b3      	cmp	r3, r6
900174bc:	d902      	bls.n	900174c4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
900174be:	3001      	adds	r0, #1
900174c0:	b284      	uxth	r4, r0
900174c2:	e7f3      	b.n	900174ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900174c4:	d201      	bcs.n	900174ca <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
900174c6:	b281      	uxth	r1, r0
900174c8:	e7f0      	b.n	900174ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
900174ca:	442a      	add	r2, r5
900174cc:	8850      	ldrh	r0, [r2, #2]
900174ce:	bd70      	pop	{r4, r5, r6, pc}
900174d0:	2000      	movs	r0, #0
900174d2:	e7fc      	b.n	900174ce <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

900174d4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
900174d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900174d8:	6c45      	ldr	r5, [r0, #68]	; 0x44
900174da:	4604      	mov	r4, r0
900174dc:	260b      	movs	r6, #11
900174de:	886f      	ldrh	r7, [r5, #2]
900174e0:	087f      	lsrs	r7, r7, #1
900174e2:	3e01      	subs	r6, #1
900174e4:	d013      	beq.n	9001750e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
900174e6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
900174e8:	462a      	mov	r2, r5
900174ea:	4639      	mov	r1, r7
900174ec:	4620      	mov	r0, r4
900174ee:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900174f2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
900174f6:	4643      	mov	r3, r8
900174f8:	f7ff ffce 	bl	90017498 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
900174fc:	b138      	cbz	r0, 9001750e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
900174fe:	eb05 0140 	add.w	r1, r5, r0, lsl #1
90017502:	4642      	mov	r2, r8
90017504:	4620      	mov	r0, r4
90017506:	f7ff ff93 	bl	90017430 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
9001750a:	2800      	cmp	r0, #0
9001750c:	d1e9      	bne.n	900174e2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
9001750e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

90017514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
90017514:	b570      	push	{r4, r5, r6, lr}
90017516:	694a      	ldr	r2, [r1, #20]
90017518:	6a8d      	ldr	r5, [r1, #40]	; 0x28
9001751a:	684b      	ldr	r3, [r1, #4]
9001751c:	1b54      	subs	r4, r2, r5
9001751e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
90017520:	f000 8106 	beq.w	90017730 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
90017524:	1b9b      	subs	r3, r3, r6
90017526:	d003      	beq.n	90017530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017528:	4363      	muls	r3, r4
9001752a:	2210      	movs	r2, #16
9001752c:	fb93 f3f2 	sdiv	r3, r3, r2
90017530:	680c      	ldr	r4, [r1, #0]
90017532:	698a      	ldr	r2, [r1, #24]
90017534:	1b65      	subs	r5, r4, r5
90017536:	f000 80fd 	beq.w	90017734 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
9001753a:	1b92      	subs	r2, r2, r6
9001753c:	d003      	beq.n	90017546 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
9001753e:	436a      	muls	r2, r5
90017540:	2410      	movs	r4, #16
90017542:	fb92 f2f4 	sdiv	r2, r2, r4
90017546:	1a9b      	subs	r3, r3, r2
90017548:	ed9f 4a89 	vldr	s8, [pc, #548]	; 90017770 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
9001754c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90017550:	460a      	mov	r2, r1
90017552:	ee07 3a90 	vmov	s15, r3
90017556:	f100 040c 	add.w	r4, r0, #12
9001755a:	4603      	mov	r3, r0
9001755c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017560:	ee67 7a84 	vmul.f32	s15, s15, s8
90017564:	ee87 3a27 	vdiv.f32	s6, s14, s15
90017568:	eeb1 6a43 	vneg.f32	s12, s6
9001756c:	edd2 7a02 	vldr	s15, [r2, #8]
90017570:	3214      	adds	r2, #20
90017572:	eec7 6a27 	vdiv.f32	s13, s14, s15
90017576:	ece3 6a01 	vstmia	r3!, {s13}
9001757a:	429c      	cmp	r4, r3
9001757c:	ed52 7a02 	vldr	s15, [r2, #-8]
90017580:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017584:	edc3 7a02 	vstr	s15, [r3, #8]
90017588:	ed52 7a01 	vldr	s15, [r2, #-4]
9001758c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017590:	edc3 7a05 	vstr	s15, [r3, #20]
90017594:	d1ea      	bne.n	9001756c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
90017596:	6aca      	ldr	r2, [r1, #44]	; 0x2c
90017598:	698b      	ldr	r3, [r1, #24]
9001759a:	edd0 4a02 	vldr	s9, [r0, #8]
9001759e:	1a9b      	subs	r3, r3, r2
900175a0:	edd0 3a00 	vldr	s7, [r0]
900175a4:	edd0 6a01 	vldr	s13, [r0, #4]
900175a8:	ee07 3a90 	vmov	s15, r3
900175ac:	684b      	ldr	r3, [r1, #4]
900175ae:	ee76 6ae4 	vsub.f32	s13, s13, s9
900175b2:	ed90 5a05 	vldr	s10, [r0, #20]
900175b6:	1a9b      	subs	r3, r3, r2
900175b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900175bc:	ee73 4ae4 	vsub.f32	s9, s7, s9
900175c0:	ed90 2a03 	vldr	s4, [r0, #12]
900175c4:	ee07 3a10 	vmov	s14, r3
900175c8:	edd0 5a04 	vldr	s11, [r0, #16]
900175cc:	ee67 7a84 	vmul.f32	s15, s15, s8
900175d0:	ed90 1a07 	vldr	s2, [r0, #28]
900175d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900175d8:	edd0 2a06 	vldr	s5, [r0, #24]
900175dc:	ee75 5ac5 	vsub.f32	s11, s11, s10
900175e0:	ee64 7ae7 	vnmul.f32	s15, s9, s15
900175e4:	ee27 7a04 	vmul.f32	s14, s14, s8
900175e8:	ee32 5a45 	vsub.f32	s10, s4, s10
900175ec:	eee6 7a87 	vfma.f32	s15, s13, s14
900175f0:	ee67 7a83 	vmul.f32	s15, s15, s6
900175f4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
900175f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900175fa:	694a      	ldr	r2, [r1, #20]
900175fc:	1b13      	subs	r3, r2, r4
900175fe:	ee07 3a10 	vmov	s14, r3
90017602:	680b      	ldr	r3, [r1, #0]
90017604:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017608:	1b1b      	subs	r3, r3, r4
9001760a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001760e:	ee64 4ac7 	vnmul.f32	s9, s9, s14
90017612:	ee07 3a10 	vmov	s14, r3
90017616:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001761a:	ee27 7a04 	vmul.f32	s14, s14, s8
9001761e:	eee6 4a87 	vfma.f32	s9, s13, s14
90017622:	ee64 4a86 	vmul.f32	s9, s9, s12
90017626:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
9001762a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001762c:	698b      	ldr	r3, [r1, #24]
9001762e:	1a9b      	subs	r3, r3, r2
90017630:	ee06 3a90 	vmov	s13, r3
90017634:	684b      	ldr	r3, [r1, #4]
90017636:	1a9b      	subs	r3, r3, r2
90017638:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001763c:	ee07 3a10 	vmov	s14, r3
90017640:	ee66 6a84 	vmul.f32	s13, s13, s8
90017644:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017648:	ee65 6a66 	vnmul.f32	s13, s10, s13
9001764c:	ee27 7a04 	vmul.f32	s14, s14, s8
90017650:	eee5 6a87 	vfma.f32	s13, s11, s14
90017654:	ee66 6a83 	vmul.f32	s13, s13, s6
90017658:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
9001765c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
9001765e:	694a      	ldr	r2, [r1, #20]
90017660:	1b13      	subs	r3, r2, r4
90017662:	ee07 3a10 	vmov	s14, r3
90017666:	680b      	ldr	r3, [r1, #0]
90017668:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001766c:	1b1b      	subs	r3, r3, r4
9001766e:	ee27 7a04 	vmul.f32	s14, s14, s8
90017672:	ee25 5a47 	vnmul.f32	s10, s10, s14
90017676:	ee07 3a10 	vmov	s14, r3
9001767a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001767e:	ee27 7a04 	vmul.f32	s14, s14, s8
90017682:	eea5 5a87 	vfma.f32	s10, s11, s14
90017686:	edd0 5a08 	vldr	s11, [r0, #32]
9001768a:	ee31 1a65 	vsub.f32	s2, s2, s11
9001768e:	ee72 5ae5 	vsub.f32	s11, s5, s11
90017692:	ee25 5a06 	vmul.f32	s10, s10, s12
90017696:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
9001769a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001769c:	698b      	ldr	r3, [r1, #24]
9001769e:	1a9b      	subs	r3, r3, r2
900176a0:	ee07 3a10 	vmov	s14, r3
900176a4:	684b      	ldr	r3, [r1, #4]
900176a6:	1a9b      	subs	r3, r3, r2
900176a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900176ac:	ee01 3a90 	vmov	s3, r3
900176b0:	ee27 7a04 	vmul.f32	s14, s14, s8
900176b4:	eef8 1ae1 	vcvt.f32.s32	s3, s3
900176b8:	ee25 7ac7 	vnmul.f32	s14, s11, s14
900176bc:	ee61 1a84 	vmul.f32	s3, s3, s8
900176c0:	eea1 7a21 	vfma.f32	s14, s2, s3
900176c4:	ee27 7a03 	vmul.f32	s14, s14, s6
900176c8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
900176cc:	6a8c      	ldr	r4, [r1, #40]	; 0x28
900176ce:	694a      	ldr	r2, [r1, #20]
900176d0:	1b13      	subs	r3, r2, r4
900176d2:	ee03 3a10 	vmov	s6, r3
900176d6:	680b      	ldr	r3, [r1, #0]
900176d8:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
900176dc:	1b1b      	subs	r3, r3, r4
900176de:	ee23 3a04 	vmul.f32	s6, s6, s8
900176e2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
900176e6:	ee03 3a10 	vmov	s6, r3
900176ea:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
900176ee:	ee23 4a04 	vmul.f32	s8, s6, s8
900176f2:	eee1 5a04 	vfma.f32	s11, s2, s8
900176f6:	ee25 6a86 	vmul.f32	s12, s11, s12
900176fa:	ee62 5a67 	vnmul.f32	s11, s4, s15
900176fe:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
90017702:	eee3 5aa6 	vfma.f32	s11, s7, s13
90017706:	eef5 5ac0 	vcmpe.f32	s11, #0.0
9001770a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001770e:	dd13      	ble.n	90017738 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90017710:	f44f 4300 	mov.w	r3, #32768	; 0x8000
90017714:	ee62 7ae7 	vnmul.f32	s15, s5, s15
90017718:	63c3      	str	r3, [r0, #60]	; 0x3c
9001771a:	eee3 7a87 	vfma.f32	s15, s7, s14
9001771e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
90017722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017726:	dd15      	ble.n	90017754 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
90017728:	f44f 4300 	mov.w	r3, #32768	; 0x8000
9001772c:	6403      	str	r3, [r0, #64]	; 0x40
9001772e:	bd70      	pop	{r4, r5, r6, pc}
90017730:	4623      	mov	r3, r4
90017732:	e6fd      	b.n	90017530 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
90017734:	462a      	mov	r2, r5
90017736:	e706      	b.n	90017546 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
90017738:	d502      	bpl.n	90017740 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
9001773a:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001773e:	e7e9      	b.n	90017714 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
90017740:	ee22 2a64 	vnmul.f32	s4, s4, s9
90017744:	eea3 2a85 	vfma.f32	s4, s7, s10
90017748:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
9001774c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017750:	dade      	bge.n	90017710 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
90017752:	e7f2      	b.n	9001773a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
90017754:	d502      	bpl.n	9001775c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
90017756:	f647 73ff 	movw	r3, #32767	; 0x7fff
9001775a:	e7e7      	b.n	9001772c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
9001775c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
90017760:	eee3 4a86 	vfma.f32	s9, s7, s12
90017764:	eef5 4ac0 	vcmpe.f32	s9, #0.0
90017768:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001776c:	dadc      	bge.n	90017728 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
9001776e:	e7f2      	b.n	90017756 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
90017770:	3d800000 	.word	0x3d800000

90017774 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
90017774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017778:	2714      	movs	r7, #20
9001777a:	435f      	muls	r7, r3
9001777c:	eb02 0c07 	add.w	ip, r2, r7
90017780:	f8dc 5004 	ldr.w	r5, [ip, #4]
90017784:	f115 0e0f 	adds.w	lr, r5, #15
90017788:	f100 80a2 	bmi.w	900178d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
9001778c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90017790:	9c08      	ldr	r4, [sp, #32]
90017792:	2614      	movs	r6, #20
90017794:	f8c0 e014 	str.w	lr, [r0, #20]
90017798:	4366      	muls	r6, r4
9001779a:	eb02 0806 	add.w	r8, r2, r6
9001779e:	f8d8 5004 	ldr.w	r5, [r8, #4]
900177a2:	f115 040f 	adds.w	r4, r5, #15
900177a6:	f100 809f 	bmi.w	900178e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
900177aa:	1124      	asrs	r4, r4, #4
900177ac:	eba4 040e 	sub.w	r4, r4, lr
900177b0:	6184      	str	r4, [r0, #24]
900177b2:	2c00      	cmp	r4, #0
900177b4:	f000 808a 	beq.w	900178cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
900177b8:	f8dc 9004 	ldr.w	r9, [ip, #4]
900177bc:	f8d8 4004 	ldr.w	r4, [r8, #4]
900177c0:	5995      	ldr	r5, [r2, r6]
900177c2:	eba4 0809 	sub.w	r8, r4, r9
900177c6:	59d4      	ldr	r4, [r2, r7]
900177c8:	eba5 0a04 	sub.w	sl, r5, r4
900177cc:	ea4f 1608 	mov.w	r6, r8, lsl #4
900177d0:	ea4f 150a 	mov.w	r5, sl, lsl #4
900177d4:	fb0e fe05 	mul.w	lr, lr, r5
900177d8:	fb0a ee19 	mls	lr, sl, r9, lr
900177dc:	fb08 e404 	mla	r4, r8, r4, lr
900177e0:	3c01      	subs	r4, #1
900177e2:	19a4      	adds	r4, r4, r6
900177e4:	f100 808c 	bmi.w	90017900 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
900177e8:	fb94 fef6 	sdiv	lr, r4, r6
900177ec:	fb06 441e 	mls	r4, r6, lr, r4
900177f0:	f8c0 e000 	str.w	lr, [r0]
900177f4:	6104      	str	r4, [r0, #16]
900177f6:	2d00      	cmp	r5, #0
900177f8:	f2c0 8095 	blt.w	90017926 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
900177fc:	fb95 f4f6 	sdiv	r4, r5, r6
90017800:	fb06 5514 	mls	r5, r6, r4, r5
90017804:	6044      	str	r4, [r0, #4]
90017806:	6085      	str	r5, [r0, #8]
90017808:	60c6      	str	r6, [r0, #12]
9001780a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001780e:	f8dc 4004 	ldr.w	r4, [ip, #4]
90017812:	6945      	ldr	r5, [r0, #20]
90017814:	59d2      	ldr	r2, [r2, r7]
90017816:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
9001781a:	eddf 6a4b 	vldr	s13, [pc, #300]	; 90017948 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
9001781e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90017822:	ee07 4a10 	vmov	s14, r4
90017826:	6804      	ldr	r4, [r0, #0]
90017828:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
9001782c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017830:	ee07 2a90 	vmov	s15, r2
90017834:	ee27 7a26 	vmul.f32	s14, s14, s13
90017838:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001783c:	ee67 7aa6 	vmul.f32	s15, s15, s13
90017840:	edd3 6a00 	vldr	s13, [r3]
90017844:	eee6 6a07 	vfma.f32	s13, s12, s14
90017848:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
9001784c:	eee6 6a27 	vfma.f32	s13, s12, s15
90017850:	edc0 6a07 	vstr	s13, [r0, #28]
90017854:	edd0 6a01 	vldr	s13, [r0, #4]
90017858:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
9001785c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
90017860:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
90017864:	eea6 6aa5 	vfma.f32	s12, s13, s11
90017868:	ed80 6a08 	vstr	s12, [r0, #32]
9001786c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
9001786e:	6242      	str	r2, [r0, #36]	; 0x24
90017870:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
90017874:	ed93 6a03 	vldr	s12, [r3, #12]
90017878:	eea5 6a87 	vfma.f32	s12, s11, s14
9001787c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
90017880:	eea5 6aa7 	vfma.f32	s12, s11, s15
90017884:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
90017888:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
9001788c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
90017890:	eea6 6aa5 	vfma.f32	s12, s13, s11
90017894:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
90017898:	6aca      	ldr	r2, [r1, #44]	; 0x2c
9001789a:	6302      	str	r2, [r0, #48]	; 0x30
9001789c:	ed93 6a06 	vldr	s12, [r3, #24]
900178a0:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
900178a4:	eea5 6a87 	vfma.f32	s12, s11, s14
900178a8:	eeb0 7a46 	vmov.f32	s14, s12
900178ac:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
900178b0:	eea6 7a27 	vfma.f32	s14, s12, s15
900178b4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
900178b8:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
900178bc:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
900178c0:	eee6 7a87 	vfma.f32	s15, s13, s14
900178c4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
900178c8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
900178ca:	63c3      	str	r3, [r0, #60]	; 0x3c
900178cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900178d0:	2410      	movs	r4, #16
900178d2:	f1c5 0501 	rsb	r5, r5, #1
900178d6:	fb9e fef4 	sdiv	lr, lr, r4
900178da:	f015 050f 	ands.w	r5, r5, #15
900178de:	bf18      	it	ne
900178e0:	2501      	movne	r5, #1
900178e2:	ebae 0e05 	sub.w	lr, lr, r5
900178e6:	e753      	b.n	90017790 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
900178e8:	f04f 0910 	mov.w	r9, #16
900178ec:	f1c5 0501 	rsb	r5, r5, #1
900178f0:	fb94 f4f9 	sdiv	r4, r4, r9
900178f4:	f015 050f 	ands.w	r5, r5, #15
900178f8:	bf18      	it	ne
900178fa:	2501      	movne	r5, #1
900178fc:	1b64      	subs	r4, r4, r5
900178fe:	e755      	b.n	900177ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90017900:	4264      	negs	r4, r4
90017902:	fb94 fef6 	sdiv	lr, r4, r6
90017906:	f1ce 0800 	rsb	r8, lr, #0
9001790a:	fb06 441e 	mls	r4, r6, lr, r4
9001790e:	f8c0 8000 	str.w	r8, [r0]
90017912:	6104      	str	r4, [r0, #16]
90017914:	2c00      	cmp	r4, #0
90017916:	f43f af6e 	beq.w	900177f6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
9001791a:	ea6f 0e0e 	mvn.w	lr, lr
9001791e:	1b34      	subs	r4, r6, r4
90017920:	f8c0 e000 	str.w	lr, [r0]
90017924:	e766      	b.n	900177f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
90017926:	426d      	negs	r5, r5
90017928:	fb95 f4f6 	sdiv	r4, r5, r6
9001792c:	f1c4 0e00 	rsb	lr, r4, #0
90017930:	fb06 5514 	mls	r5, r6, r4, r5
90017934:	f8c0 e004 	str.w	lr, [r0, #4]
90017938:	6085      	str	r5, [r0, #8]
9001793a:	2d00      	cmp	r5, #0
9001793c:	f43f af64 	beq.w	90017808 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
90017940:	43e4      	mvns	r4, r4
90017942:	1b75      	subs	r5, r6, r5
90017944:	6044      	str	r4, [r0, #4]
90017946:	e75e      	b.n	90017806 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
90017948:	3d800000 	.word	0x3d800000

9001794c <_ZN8touchgfx7Unicode6strlenEPKt>:
9001794c:	4602      	mov	r2, r0
9001794e:	b148      	cbz	r0, 90017964 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
90017950:	2300      	movs	r3, #0
90017952:	b298      	uxth	r0, r3
90017954:	3301      	adds	r3, #1
90017956:	eb02 0143 	add.w	r1, r2, r3, lsl #1
9001795a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
9001795e:	2900      	cmp	r1, #0
90017960:	d1f7      	bne.n	90017952 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
90017962:	4770      	bx	lr
90017964:	4770      	bx	lr

90017966 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
90017966:	b530      	push	{r4, r5, lr}
90017968:	4604      	mov	r4, r0
9001796a:	b159      	cbz	r1, 90017984 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
9001796c:	b148      	cbz	r0, 90017982 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
9001796e:	2300      	movs	r3, #0
90017970:	b298      	uxth	r0, r3
90017972:	4282      	cmp	r2, r0
90017974:	d905      	bls.n	90017982 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
90017976:	5ccd      	ldrb	r5, [r1, r3]
90017978:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
9001797c:	3301      	adds	r3, #1
9001797e:	2d00      	cmp	r5, #0
90017980:	d1f6      	bne.n	90017970 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
90017982:	bd30      	pop	{r4, r5, pc}
90017984:	4608      	mov	r0, r1
90017986:	e7fc      	b.n	90017982 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90017988 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90017988:	b5f0      	push	{r4, r5, r6, r7, lr}
9001798a:	b08b      	sub	sp, #44	; 0x2c
9001798c:	468c      	mov	ip, r1
9001798e:	4604      	mov	r4, r0
90017990:	2100      	movs	r1, #0
90017992:	261f      	movs	r6, #31
90017994:	af01      	add	r7, sp, #4
90017996:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
9001799a:	1e71      	subs	r1, r6, #1
9001799c:	fb94 fef3 	sdiv	lr, r4, r3
900179a0:	fb03 441e 	mls	r4, r3, lr, r4
900179a4:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
900179a8:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
900179ac:	b2ec      	uxtb	r4, r5
900179ae:	2d09      	cmp	r5, #9
900179b0:	bfd4      	ite	le
900179b2:	3430      	addle	r4, #48	; 0x30
900179b4:	3457      	addgt	r4, #87	; 0x57
900179b6:	b2e4      	uxtb	r4, r4
900179b8:	55bc      	strb	r4, [r7, r6]
900179ba:	4674      	mov	r4, lr
900179bc:	b974      	cbnz	r4, 900179dc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
900179be:	2800      	cmp	r0, #0
900179c0:	da05      	bge.n	900179ce <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
900179c2:	ab0a      	add	r3, sp, #40	; 0x28
900179c4:	4419      	add	r1, r3
900179c6:	232d      	movs	r3, #45	; 0x2d
900179c8:	f801 3c24 	strb.w	r3, [r1, #-36]
900179cc:	1eb1      	subs	r1, r6, #2
900179ce:	3101      	adds	r1, #1
900179d0:	4660      	mov	r0, ip
900179d2:	4439      	add	r1, r7
900179d4:	f7ff ffc7 	bl	90017966 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
900179d8:	b00b      	add	sp, #44	; 0x2c
900179da:	bdf0      	pop	{r4, r5, r6, r7, pc}
900179dc:	460e      	mov	r6, r1
900179de:	e7dc      	b.n	9001799a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

900179e0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
900179e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900179e2:	468c      	mov	ip, r1
900179e4:	b08b      	sub	sp, #44	; 0x2c
900179e6:	2100      	movs	r1, #0
900179e8:	ae01      	add	r6, sp, #4
900179ea:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
900179ee:	211f      	movs	r1, #31
900179f0:	fbb0 f7f3 	udiv	r7, r0, r3
900179f4:	fb03 0517 	mls	r5, r3, r7, r0
900179f8:	4638      	mov	r0, r7
900179fa:	b2ec      	uxtb	r4, r5
900179fc:	2d09      	cmp	r5, #9
900179fe:	bfd4      	ite	le
90017a00:	3430      	addle	r4, #48	; 0x30
90017a02:	3457      	addgt	r4, #87	; 0x57
90017a04:	b2e4      	uxtb	r4, r4
90017a06:	558c      	strb	r4, [r1, r6]
90017a08:	1e4c      	subs	r4, r1, #1
90017a0a:	b92f      	cbnz	r7, 90017a18 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90017a0c:	4431      	add	r1, r6
90017a0e:	4660      	mov	r0, ip
90017a10:	f7ff ffa9 	bl	90017966 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90017a14:	b00b      	add	sp, #44	; 0x2c
90017a16:	bdf0      	pop	{r4, r5, r6, r7, pc}
90017a18:	4621      	mov	r1, r4
90017a1a:	e7e9      	b.n	900179f0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

90017a1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
90017a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017a20:	b085      	sub	sp, #20
90017a22:	4691      	mov	r9, r2
90017a24:	6802      	ldr	r2, [r0, #0]
90017a26:	4688      	mov	r8, r1
90017a28:	461c      	mov	r4, r3
90017a2a:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
90017a2e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
90017a32:	4683      	mov	fp, r0
90017a34:	4610      	mov	r0, r2
90017a36:	9103      	str	r1, [sp, #12]
90017a38:	9302      	str	r3, [sp, #8]
90017a3a:	9201      	str	r2, [sp, #4]
90017a3c:	f7ff ff86 	bl	9001794c <_ZN8touchgfx7Unicode6strlenEPKt>
90017a40:	f1b8 0f00 	cmp.w	r8, #0
90017a44:	bf0c      	ite	eq
90017a46:	4684      	moveq	ip, r0
90017a48:	f100 0c01 	addne.w	ip, r0, #1
90017a4c:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
90017a50:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
90017a54:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
90017a56:	fa1f fc8c 	uxth.w	ip, ip
90017a5a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90017a5c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
90017a60:	9903      	ldr	r1, [sp, #12]
90017a62:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
90017a66:	d041      	beq.n	90017aec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90017a68:	d834      	bhi.n	90017ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
90017a6a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
90017a6e:	d059      	beq.n	90017b24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
90017a70:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
90017a74:	d03a      	beq.n	90017aec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
90017a76:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
90017a7a:	d034      	beq.n	90017ae6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017a7c:	2400      	movs	r4, #0
90017a7e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
90017a82:	3a01      	subs	r2, #1
90017a84:	b169      	cbz	r1, 90017aa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017a86:	9911      	ldr	r1, [sp, #68]	; 0x44
90017a88:	458c      	cmp	ip, r1
90017a8a:	da09      	bge.n	90017aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90017a8c:	eba1 010c 	sub.w	r1, r1, ip
90017a90:	b289      	uxth	r1, r1
90017a92:	b933      	cbnz	r3, 90017aa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017a94:	2e00      	cmp	r6, #0
90017a96:	d051      	beq.n	90017b3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90017a98:	2800      	cmp	r0, #0
90017a9a:	d04f      	beq.n	90017b3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90017a9c:	440c      	add	r4, r1
90017a9e:	b2a4      	uxth	r4, r4
90017aa0:	2100      	movs	r1, #0
90017aa2:	682b      	ldr	r3, [r5, #0]
90017aa4:	4293      	cmp	r3, r2
90017aa6:	da07      	bge.n	90017ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90017aa8:	f1b8 0f00 	cmp.w	r8, #0
90017aac:	d004      	beq.n	90017ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90017aae:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
90017ab2:	682b      	ldr	r3, [r5, #0]
90017ab4:	3301      	adds	r3, #1
90017ab6:	602b      	str	r3, [r5, #0]
90017ab8:	2730      	movs	r7, #48	; 0x30
90017aba:	2c00      	cmp	r4, #0
90017abc:	d04e      	beq.n	90017b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017abe:	682e      	ldr	r6, [r5, #0]
90017ac0:	3c01      	subs	r4, #1
90017ac2:	42b2      	cmp	r2, r6
90017ac4:	b2a4      	uxth	r4, r4
90017ac6:	dd49      	ble.n	90017b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017ac8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90017acc:	682b      	ldr	r3, [r5, #0]
90017ace:	3301      	adds	r3, #1
90017ad0:	602b      	str	r3, [r5, #0]
90017ad2:	e7f2      	b.n	90017aba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
90017ad4:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
90017ad8:	d01d      	beq.n	90017b16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90017ada:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
90017ade:	d002      	beq.n	90017ae6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90017ae0:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
90017ae4:	e7c9      	b.n	90017a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
90017ae6:	4684      	mov	ip, r0
90017ae8:	f04f 0800 	mov.w	r8, #0
90017aec:	2c00      	cmp	r4, #0
90017aee:	d0c6      	beq.n	90017a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017af0:	b947      	cbnz	r7, 90017b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017af2:	2801      	cmp	r0, #1
90017af4:	d106      	bne.n	90017b04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
90017af6:	8814      	ldrh	r4, [r2, #0]
90017af8:	2c30      	cmp	r4, #48	; 0x30
90017afa:	bf02      	ittt	eq
90017afc:	3202      	addeq	r2, #2
90017afe:	4638      	moveq	r0, r7
90017b00:	f8cb 2000 	streq.w	r2, [fp]
90017b04:	45bc      	cmp	ip, r7
90017b06:	da14      	bge.n	90017b32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90017b08:	b2bf      	uxth	r7, r7
90017b0a:	eba7 040c 	sub.w	r4, r7, ip
90017b0e:	46bc      	mov	ip, r7
90017b10:	b2a4      	uxth	r4, r4
90017b12:	2600      	movs	r6, #0
90017b14:	e7b3      	b.n	90017a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017b16:	4684      	mov	ip, r0
90017b18:	b16c      	cbz	r4, 90017b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
90017b1a:	42b8      	cmp	r0, r7
90017b1c:	dd00      	ble.n	90017b20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
90017b1e:	b2b8      	uxth	r0, r7
90017b20:	2400      	movs	r4, #0
90017b22:	e003      	b.n	90017b2c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
90017b24:	f04f 0c01 	mov.w	ip, #1
90017b28:	2400      	movs	r4, #0
90017b2a:	4660      	mov	r0, ip
90017b2c:	4626      	mov	r6, r4
90017b2e:	46a0      	mov	r8, r4
90017b30:	e7a5      	b.n	90017a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017b32:	2400      	movs	r4, #0
90017b34:	e7ed      	b.n	90017b12 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
90017b36:	4626      	mov	r6, r4
90017b38:	46a0      	mov	r8, r4
90017b3a:	e7a0      	b.n	90017a7e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90017b3c:	2900      	cmp	r1, #0
90017b3e:	d0b0      	beq.n	90017aa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017b40:	2720      	movs	r7, #32
90017b42:	682e      	ldr	r6, [r5, #0]
90017b44:	2900      	cmp	r1, #0
90017b46:	d0ac      	beq.n	90017aa2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
90017b48:	3901      	subs	r1, #1
90017b4a:	4296      	cmp	r6, r2
90017b4c:	b289      	uxth	r1, r1
90017b4e:	daa7      	bge.n	90017aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90017b50:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90017b54:	682b      	ldr	r3, [r5, #0]
90017b56:	3301      	adds	r3, #1
90017b58:	602b      	str	r3, [r5, #0]
90017b5a:	e7f2      	b.n	90017b42 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
90017b5c:	b188      	cbz	r0, 90017b82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90017b5e:	682b      	ldr	r3, [r5, #0]
90017b60:	3801      	subs	r0, #1
90017b62:	429a      	cmp	r2, r3
90017b64:	b280      	uxth	r0, r0
90017b66:	dd0c      	ble.n	90017b82 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
90017b68:	f8db 3000 	ldr.w	r3, [fp]
90017b6c:	1c9c      	adds	r4, r3, #2
90017b6e:	f8cb 4000 	str.w	r4, [fp]
90017b72:	881c      	ldrh	r4, [r3, #0]
90017b74:	682b      	ldr	r3, [r5, #0]
90017b76:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90017b7a:	682b      	ldr	r3, [r5, #0]
90017b7c:	3301      	adds	r3, #1
90017b7e:	602b      	str	r3, [r5, #0]
90017b80:	e7ec      	b.n	90017b5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90017b82:	2620      	movs	r6, #32
90017b84:	b151      	cbz	r1, 90017b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017b86:	6828      	ldr	r0, [r5, #0]
90017b88:	3901      	subs	r1, #1
90017b8a:	4282      	cmp	r2, r0
90017b8c:	b289      	uxth	r1, r1
90017b8e:	dd05      	ble.n	90017b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90017b90:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
90017b94:	682b      	ldr	r3, [r5, #0]
90017b96:	3301      	adds	r3, #1
90017b98:	602b      	str	r3, [r5, #0]
90017b9a:	e7f3      	b.n	90017b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90017b9c:	b005      	add	sp, #20
90017b9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90017ba2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
90017ba2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90017ba6:	2400      	movs	r4, #0
90017ba8:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90017bac:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
90017bb0:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
90017bb4:	8014      	strh	r4, [r2, #0]
90017bb6:	701c      	strb	r4, [r3, #0]
90017bb8:	f888 4000 	strb.w	r4, [r8]
90017bbc:	f88c 4000 	strb.w	r4, [ip]
90017bc0:	f88e 4000 	strb.w	r4, [lr]
90017bc4:	703c      	strb	r4, [r7, #0]
90017bc6:	6804      	ldr	r4, [r0, #0]
90017bc8:	b1a4      	cbz	r4, 90017bf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90017bca:	8824      	ldrh	r4, [r4, #0]
90017bcc:	f04f 0901 	mov.w	r9, #1
90017bd0:	b314      	cbz	r4, 90017c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017bd2:	2c2b      	cmp	r4, #43	; 0x2b
90017bd4:	d001      	beq.n	90017bda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
90017bd6:	2c20      	cmp	r4, #32
90017bd8:	d110      	bne.n	90017bfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90017bda:	8014      	strh	r4, [r2, #0]
90017bdc:	6804      	ldr	r4, [r0, #0]
90017bde:	b10c      	cbz	r4, 90017be4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90017be0:	3402      	adds	r4, #2
90017be2:	6004      	str	r4, [r0, #0]
90017be4:	680c      	ldr	r4, [r1, #0]
90017be6:	b10c      	cbz	r4, 90017bec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90017be8:	3401      	adds	r4, #1
90017bea:	600c      	str	r4, [r1, #0]
90017bec:	6804      	ldr	r4, [r0, #0]
90017bee:	b17c      	cbz	r4, 90017c10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90017bf0:	8824      	ldrh	r4, [r4, #0]
90017bf2:	e7ed      	b.n	90017bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017bf4:	680c      	ldr	r4, [r1, #0]
90017bf6:	b17c      	cbz	r4, 90017c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017bf8:	7824      	ldrb	r4, [r4, #0]
90017bfa:	e7e7      	b.n	90017bcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90017bfc:	2c2d      	cmp	r4, #45	; 0x2d
90017bfe:	d102      	bne.n	90017c06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90017c00:	f883 9000 	strb.w	r9, [r3]
90017c04:	e7ea      	b.n	90017bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017c06:	2c23      	cmp	r4, #35	; 0x23
90017c08:	d107      	bne.n	90017c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90017c0a:	f888 9000 	strb.w	r9, [r8]
90017c0e:	e7e5      	b.n	90017bdc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90017c10:	680c      	ldr	r4, [r1, #0]
90017c12:	b10c      	cbz	r4, 90017c18 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90017c14:	7824      	ldrb	r4, [r4, #0]
90017c16:	e7db      	b.n	90017bd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
90017c18:	2400      	movs	r4, #0
90017c1a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
90017c1e:	2b09      	cmp	r3, #9
90017c20:	d901      	bls.n	90017c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
90017c22:	2c2a      	cmp	r4, #42	; 0x2a
90017c24:	d122      	bne.n	90017c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017c26:	2301      	movs	r3, #1
90017c28:	2c30      	cmp	r4, #48	; 0x30
90017c2a:	f88e 3000 	strb.w	r3, [lr]
90017c2e:	d10d      	bne.n	90017c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017c30:	f88c 3000 	strb.w	r3, [ip]
90017c34:	6803      	ldr	r3, [r0, #0]
90017c36:	b10b      	cbz	r3, 90017c3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
90017c38:	3302      	adds	r3, #2
90017c3a:	6003      	str	r3, [r0, #0]
90017c3c:	680b      	ldr	r3, [r1, #0]
90017c3e:	b10b      	cbz	r3, 90017c44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
90017c40:	3301      	adds	r3, #1
90017c42:	600b      	str	r3, [r1, #0]
90017c44:	6803      	ldr	r3, [r0, #0]
90017c46:	2b00      	cmp	r3, #0
90017c48:	d02f      	beq.n	90017caa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
90017c4a:	881c      	ldrh	r4, [r3, #0]
90017c4c:	2c2a      	cmp	r4, #42	; 0x2a
90017c4e:	d135      	bne.n	90017cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017c50:	f04f 33ff 	mov.w	r3, #4294967295
90017c54:	6033      	str	r3, [r6, #0]
90017c56:	6803      	ldr	r3, [r0, #0]
90017c58:	b10b      	cbz	r3, 90017c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
90017c5a:	3302      	adds	r3, #2
90017c5c:	6003      	str	r3, [r0, #0]
90017c5e:	680b      	ldr	r3, [r1, #0]
90017c60:	b10b      	cbz	r3, 90017c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
90017c62:	3301      	adds	r3, #1
90017c64:	600b      	str	r3, [r1, #0]
90017c66:	6803      	ldr	r3, [r0, #0]
90017c68:	b31b      	cbz	r3, 90017cb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
90017c6a:	881c      	ldrh	r4, [r3, #0]
90017c6c:	2c2e      	cmp	r4, #46	; 0x2e
90017c6e:	d11a      	bne.n	90017ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017c70:	2301      	movs	r3, #1
90017c72:	703b      	strb	r3, [r7, #0]
90017c74:	6803      	ldr	r3, [r0, #0]
90017c76:	b10b      	cbz	r3, 90017c7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90017c78:	3302      	adds	r3, #2
90017c7a:	6003      	str	r3, [r0, #0]
90017c7c:	680b      	ldr	r3, [r1, #0]
90017c7e:	b10b      	cbz	r3, 90017c84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90017c80:	3301      	adds	r3, #1
90017c82:	600b      	str	r3, [r1, #0]
90017c84:	6803      	ldr	r3, [r0, #0]
90017c86:	2b00      	cmp	r3, #0
90017c88:	d036      	beq.n	90017cf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90017c8a:	881b      	ldrh	r3, [r3, #0]
90017c8c:	2b2a      	cmp	r3, #42	; 0x2a
90017c8e:	d137      	bne.n	90017d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017c90:	f04f 33ff 	mov.w	r3, #4294967295
90017c94:	602b      	str	r3, [r5, #0]
90017c96:	6803      	ldr	r3, [r0, #0]
90017c98:	b10b      	cbz	r3, 90017c9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90017c9a:	3302      	adds	r3, #2
90017c9c:	6003      	str	r3, [r0, #0]
90017c9e:	680b      	ldr	r3, [r1, #0]
90017ca0:	b10b      	cbz	r3, 90017ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017ca2:	3301      	adds	r3, #1
90017ca4:	600b      	str	r3, [r1, #0]
90017ca6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90017caa:	680c      	ldr	r4, [r1, #0]
90017cac:	b134      	cbz	r4, 90017cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90017cae:	7824      	ldrb	r4, [r4, #0]
90017cb0:	e7cc      	b.n	90017c4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
90017cb2:	680b      	ldr	r3, [r1, #0]
90017cb4:	2b00      	cmp	r3, #0
90017cb6:	d0f6      	beq.n	90017ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90017cb8:	781c      	ldrb	r4, [r3, #0]
90017cba:	e7d7      	b.n	90017c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017cbc:	2300      	movs	r3, #0
90017cbe:	220a      	movs	r2, #10
90017cc0:	6033      	str	r3, [r6, #0]
90017cc2:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
90017cc6:	fa1f f38c 	uxth.w	r3, ip
90017cca:	2b09      	cmp	r3, #9
90017ccc:	d8ce      	bhi.n	90017c6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90017cce:	6833      	ldr	r3, [r6, #0]
90017cd0:	fb02 c303 	mla	r3, r2, r3, ip
90017cd4:	6033      	str	r3, [r6, #0]
90017cd6:	6803      	ldr	r3, [r0, #0]
90017cd8:	b10b      	cbz	r3, 90017cde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90017cda:	3302      	adds	r3, #2
90017cdc:	6003      	str	r3, [r0, #0]
90017cde:	680b      	ldr	r3, [r1, #0]
90017ce0:	b10b      	cbz	r3, 90017ce6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
90017ce2:	3301      	adds	r3, #1
90017ce4:	600b      	str	r3, [r1, #0]
90017ce6:	6803      	ldr	r3, [r0, #0]
90017ce8:	b10b      	cbz	r3, 90017cee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90017cea:	881c      	ldrh	r4, [r3, #0]
90017cec:	e7e9      	b.n	90017cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017cee:	680c      	ldr	r4, [r1, #0]
90017cf0:	2c00      	cmp	r4, #0
90017cf2:	d0e6      	beq.n	90017cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017cf4:	7824      	ldrb	r4, [r4, #0]
90017cf6:	e7e4      	b.n	90017cc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90017cf8:	680b      	ldr	r3, [r1, #0]
90017cfa:	b10b      	cbz	r3, 90017d00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90017cfc:	781b      	ldrb	r3, [r3, #0]
90017cfe:	e7c5      	b.n	90017c8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90017d00:	2200      	movs	r2, #0
90017d02:	240a      	movs	r4, #10
90017d04:	602a      	str	r2, [r5, #0]
90017d06:	3b30      	subs	r3, #48	; 0x30
90017d08:	682a      	ldr	r2, [r5, #0]
90017d0a:	b29e      	uxth	r6, r3
90017d0c:	2e09      	cmp	r6, #9
90017d0e:	d813      	bhi.n	90017d38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90017d10:	fb04 3302 	mla	r3, r4, r2, r3
90017d14:	602b      	str	r3, [r5, #0]
90017d16:	6803      	ldr	r3, [r0, #0]
90017d18:	b10b      	cbz	r3, 90017d1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
90017d1a:	3302      	adds	r3, #2
90017d1c:	6003      	str	r3, [r0, #0]
90017d1e:	680b      	ldr	r3, [r1, #0]
90017d20:	b10b      	cbz	r3, 90017d26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
90017d22:	3301      	adds	r3, #1
90017d24:	600b      	str	r3, [r1, #0]
90017d26:	6803      	ldr	r3, [r0, #0]
90017d28:	b10b      	cbz	r3, 90017d2e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
90017d2a:	881b      	ldrh	r3, [r3, #0]
90017d2c:	e7eb      	b.n	90017d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017d2e:	680b      	ldr	r3, [r1, #0]
90017d30:	2b00      	cmp	r3, #0
90017d32:	d0e8      	beq.n	90017d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017d34:	781b      	ldrb	r3, [r3, #0]
90017d36:	e7e6      	b.n	90017d06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
90017d38:	2a06      	cmp	r2, #6
90017d3a:	bfa8      	it	ge
90017d3c:	2206      	movge	r2, #6
90017d3e:	602a      	str	r2, [r5, #0]
90017d40:	e7b1      	b.n	90017ca6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

90017d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
90017d42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017d46:	b0a3      	sub	sp, #140	; 0x8c
90017d48:	2600      	movs	r6, #0
90017d4a:	4607      	mov	r7, r0
90017d4c:	4688      	mov	r8, r1
90017d4e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
90017d52:	4631      	mov	r1, r6
90017d54:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
90017d56:	4648      	mov	r0, r9
90017d58:	960d      	str	r6, [sp, #52]	; 0x34
90017d5a:	e9cd 3208 	strd	r3, r2, [sp, #32]
90017d5e:	2242      	movs	r2, #66	; 0x42
90017d60:	f00e fd2e 	bl	900267c0 <memset>
90017d64:	b15f      	cbz	r7, 90017d7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
90017d66:	f108 3aff 	add.w	sl, r8, #4294967295
90017d6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
90017d6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017d6e:	b152      	cbz	r2, 90017d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
90017d70:	8812      	ldrh	r2, [r2, #0]
90017d72:	b10a      	cbz	r2, 90017d78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017d74:	459a      	cmp	sl, r3
90017d76:	dc2e      	bgt.n	90017dd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90017d78:	2200      	movs	r2, #0
90017d7a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017d7e:	4638      	mov	r0, r7
90017d80:	b023      	add	sp, #140	; 0x8c
90017d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90017d86:	9a08      	ldr	r2, [sp, #32]
90017d88:	2a00      	cmp	r2, #0
90017d8a:	d0f5      	beq.n	90017d78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90017d8c:	7812      	ldrb	r2, [r2, #0]
90017d8e:	e7f0      	b.n	90017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90017d90:	2d00      	cmp	r5, #0
90017d92:	d0ea      	beq.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017d94:	782a      	ldrb	r2, [r5, #0]
90017d96:	b142      	cbz	r2, 90017daa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90017d98:	2a25      	cmp	r2, #37	; 0x25
90017d9a:	d001      	beq.n	90017da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90017d9c:	459a      	cmp	sl, r3
90017d9e:	dc08      	bgt.n	90017db2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90017da0:	f1bb 0f00 	cmp.w	fp, #0
90017da4:	d121      	bne.n	90017dea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
90017da6:	2d00      	cmp	r5, #0
90017da8:	d0df      	beq.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017daa:	782a      	ldrb	r2, [r5, #0]
90017dac:	f04f 0b00 	mov.w	fp, #0
90017db0:	e01d      	b.n	90017dee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
90017db2:	f1bb 0f00 	cmp.w	fp, #0
90017db6:	d077      	beq.n	90017ea8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90017db8:	f8bb 2000 	ldrh.w	r2, [fp]
90017dbc:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90017dc0:	f1bb 0f00 	cmp.w	fp, #0
90017dc4:	d002      	beq.n	90017dcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
90017dc6:	f10b 0202 	add.w	r2, fp, #2
90017dca:	9209      	str	r2, [sp, #36]	; 0x24
90017dcc:	b10d      	cbz	r5, 90017dd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90017dce:	3501      	adds	r5, #1
90017dd0:	9508      	str	r5, [sp, #32]
90017dd2:	3301      	adds	r3, #1
90017dd4:	930d      	str	r3, [sp, #52]	; 0x34
90017dd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017dd8:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90017ddc:	f1bb 0f00 	cmp.w	fp, #0
90017de0:	d0d6      	beq.n	90017d90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
90017de2:	f8bb 2000 	ldrh.w	r2, [fp]
90017de6:	2a00      	cmp	r2, #0
90017de8:	d1d6      	bne.n	90017d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90017dea:	f8bb 2000 	ldrh.w	r2, [fp]
90017dee:	2a00      	cmp	r2, #0
90017df0:	d0bb      	beq.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017df2:	459a      	cmp	sl, r3
90017df4:	ddb9      	ble.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017df6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
90017dfa:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
90017dfe:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
90017e02:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
90017e06:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
90017e0a:	960e      	str	r6, [sp, #56]	; 0x38
90017e0c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
90017e10:	960f      	str	r6, [sp, #60]	; 0x3c
90017e12:	f1bb 0f00 	cmp.w	fp, #0
90017e16:	d002      	beq.n	90017e1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
90017e18:	f10b 0302 	add.w	r3, fp, #2
90017e1c:	9309      	str	r3, [sp, #36]	; 0x24
90017e1e:	b10d      	cbz	r5, 90017e24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
90017e20:	1c6b      	adds	r3, r5, #1
90017e22:	9308      	str	r3, [sp, #32]
90017e24:	ab0f      	add	r3, sp, #60	; 0x3c
90017e26:	f10d 0232 	add.w	r2, sp, #50	; 0x32
90017e2a:	a908      	add	r1, sp, #32
90017e2c:	a809      	add	r0, sp, #36	; 0x24
90017e2e:	9305      	str	r3, [sp, #20]
90017e30:	f10d 0331 	add.w	r3, sp, #49	; 0x31
90017e34:	9304      	str	r3, [sp, #16]
90017e36:	ab0e      	add	r3, sp, #56	; 0x38
90017e38:	9303      	str	r3, [sp, #12]
90017e3a:	ab0c      	add	r3, sp, #48	; 0x30
90017e3c:	9302      	str	r3, [sp, #8]
90017e3e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
90017e42:	9301      	str	r3, [sp, #4]
90017e44:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
90017e48:	9300      	str	r3, [sp, #0]
90017e4a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
90017e4e:	f7ff fea8 	bl	90017ba2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
90017e52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90017e54:	2b00      	cmp	r3, #0
90017e56:	bfbf      	itttt	lt
90017e58:	6823      	ldrlt	r3, [r4, #0]
90017e5a:	3404      	addlt	r4, #4
90017e5c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017e60:	930e      	strlt	r3, [sp, #56]	; 0x38
90017e62:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90017e64:	2b00      	cmp	r3, #0
90017e66:	bfbe      	ittt	lt
90017e68:	6823      	ldrlt	r3, [r4, #0]
90017e6a:	3404      	addlt	r4, #4
90017e6c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
90017e70:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
90017e74:	bfb8      	it	lt
90017e76:	930f      	strlt	r3, [sp, #60]	; 0x3c
90017e78:	b1d9      	cbz	r1, 90017eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90017e7a:	880b      	ldrh	r3, [r1, #0]
90017e7c:	2b69      	cmp	r3, #105	; 0x69
90017e7e:	d01f      	beq.n	90017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017e80:	d82f      	bhi.n	90017ee2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90017e82:	2b58      	cmp	r3, #88	; 0x58
90017e84:	d01c      	beq.n	90017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017e86:	d818      	bhi.n	90017eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90017e88:	2b25      	cmp	r3, #37	; 0x25
90017e8a:	d034      	beq.n	90017ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90017e8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90017e8e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90017e92:	f1bb 0f00 	cmp.w	fp, #0
90017e96:	f000 80b7 	beq.w	90018008 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90017e9a:	f8bb 5000 	ldrh.w	r5, [fp]
90017e9e:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90017ea2:	3301      	adds	r3, #1
90017ea4:	930d      	str	r3, [sp, #52]	; 0x34
90017ea6:	e029      	b.n	90017efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017ea8:	b10d      	cbz	r5, 90017eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90017eaa:	782a      	ldrb	r2, [r5, #0]
90017eac:	e786      	b.n	90017dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017eae:	462a      	mov	r2, r5
90017eb0:	e784      	b.n	90017dbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90017eb2:	2a00      	cmp	r2, #0
90017eb4:	d0ea      	beq.n	90017e8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017eb6:	7813      	ldrb	r3, [r2, #0]
90017eb8:	e7e0      	b.n	90017e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90017eba:	3b63      	subs	r3, #99	; 0x63
90017ebc:	2b01      	cmp	r3, #1
90017ebe:	d8e5      	bhi.n	90017e8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017ec0:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
90017ec4:	b329      	cbz	r1, 90017f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90017ec6:	880b      	ldrh	r3, [r1, #0]
90017ec8:	2b69      	cmp	r3, #105	; 0x69
90017eca:	d063      	beq.n	90017f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017ecc:	d825      	bhi.n	90017f1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90017ece:	2b63      	cmp	r3, #99	; 0x63
90017ed0:	d038      	beq.n	90017f44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90017ed2:	2b64      	cmp	r3, #100	; 0x64
90017ed4:	d05e      	beq.n	90017f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90017ed6:	2b58      	cmp	r3, #88	; 0x58
90017ed8:	d07a      	beq.n	90017fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90017eda:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
90017ede:	4625      	mov	r5, r4
90017ee0:	e036      	b.n	90017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017ee2:	2b73      	cmp	r3, #115	; 0x73
90017ee4:	d0ec      	beq.n	90017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017ee6:	d802      	bhi.n	90017eee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90017ee8:	2b6f      	cmp	r3, #111	; 0x6f
90017eea:	d1cf      	bne.n	90017e8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90017eec:	e7e8      	b.n	90017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017eee:	2b75      	cmp	r3, #117	; 0x75
90017ef0:	d0e6      	beq.n	90017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90017ef2:	2b78      	cmp	r3, #120	; 0x78
90017ef4:	e7f9      	b.n	90017eea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90017ef6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017ef8:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90017efc:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017efe:	b10b      	cbz	r3, 90017f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90017f00:	3302      	adds	r3, #2
90017f02:	9309      	str	r3, [sp, #36]	; 0x24
90017f04:	9b08      	ldr	r3, [sp, #32]
90017f06:	2b00      	cmp	r3, #0
90017f08:	f43f af2f 	beq.w	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017f0c:	3301      	adds	r3, #1
90017f0e:	9308      	str	r3, [sp, #32]
90017f10:	e72b      	b.n	90017d6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90017f12:	2a00      	cmp	r2, #0
90017f14:	d0e1      	beq.n	90017eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017f16:	7813      	ldrb	r3, [r2, #0]
90017f18:	e7d6      	b.n	90017ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90017f1a:	2b73      	cmp	r3, #115	; 0x73
90017f1c:	d036      	beq.n	90017f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90017f1e:	d807      	bhi.n	90017f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90017f20:	2b6f      	cmp	r3, #111	; 0x6f
90017f22:	d1da      	bne.n	90017eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017f24:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017f26:	1d25      	adds	r5, r4, #4
90017f28:	2308      	movs	r3, #8
90017f2a:	eba8 0202 	sub.w	r2, r8, r2
90017f2e:	e049      	b.n	90017fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017f30:	2b75      	cmp	r3, #117	; 0x75
90017f32:	d042      	beq.n	90017fba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90017f34:	2b78      	cmp	r3, #120	; 0x78
90017f36:	d1d0      	bne.n	90017eda <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90017f38:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017f3a:	1d25      	adds	r5, r4, #4
90017f3c:	2310      	movs	r3, #16
90017f3e:	eba8 0202 	sub.w	r2, r8, r2
90017f42:	e03f      	b.n	90017fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90017f44:	6823      	ldr	r3, [r4, #0]
90017f46:	1d25      	adds	r5, r4, #4
90017f48:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
90017f4c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
90017f50:	9b09      	ldr	r3, [sp, #36]	; 0x24
90017f52:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
90017f56:	2b00      	cmp	r3, #0
90017f58:	d051      	beq.n	90017ffe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90017f5a:	881a      	ldrh	r2, [r3, #0]
90017f5c:	a80d      	add	r0, sp, #52	; 0x34
90017f5e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
90017f62:	462c      	mov	r4, r5
90017f64:	9005      	str	r0, [sp, #20]
90017f66:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
90017f6a:	9004      	str	r0, [sp, #16]
90017f6c:	980e      	ldr	r0, [sp, #56]	; 0x38
90017f6e:	9003      	str	r0, [sp, #12]
90017f70:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
90017f74:	9002      	str	r0, [sp, #8]
90017f76:	980f      	ldr	r0, [sp, #60]	; 0x3c
90017f78:	9001      	str	r0, [sp, #4]
90017f7a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
90017f7e:	e9cd 8706 	strd	r8, r7, [sp, #24]
90017f82:	9000      	str	r0, [sp, #0]
90017f84:	a810      	add	r0, sp, #64	; 0x40
90017f86:	f7ff fd49 	bl	90017a1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90017f8a:	e7b7      	b.n	90017efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90017f8c:	1d25      	adds	r5, r4, #4
90017f8e:	6823      	ldr	r3, [r4, #0]
90017f90:	9310      	str	r3, [sp, #64]	; 0x40
90017f92:	e7dd      	b.n	90017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017f94:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017f96:	230a      	movs	r3, #10
90017f98:	4649      	mov	r1, r9
90017f9a:	6820      	ldr	r0, [r4, #0]
90017f9c:	eba8 0202 	sub.w	r2, r8, r2
90017fa0:	1d25      	adds	r5, r4, #4
90017fa2:	b292      	uxth	r2, r2
90017fa4:	f7ff fcf0 	bl	90017988 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90017fa8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
90017fac:	2b2d      	cmp	r3, #45	; 0x2d
90017fae:	d1cf      	bne.n	90017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017fb0:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
90017fb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
90017fb6:	3302      	adds	r3, #2
90017fb8:	e7ea      	b.n	90017f90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90017fba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017fbc:	1d25      	adds	r5, r4, #4
90017fbe:	230a      	movs	r3, #10
90017fc0:	eba8 0202 	sub.w	r2, r8, r2
90017fc4:	b292      	uxth	r2, r2
90017fc6:	4649      	mov	r1, r9
90017fc8:	6820      	ldr	r0, [r4, #0]
90017fca:	f7ff fd09 	bl	900179e0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017fce:	e7bf      	b.n	90017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017fd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90017fd2:	2310      	movs	r3, #16
90017fd4:	4649      	mov	r1, r9
90017fd6:	6820      	ldr	r0, [r4, #0]
90017fd8:	eba8 0202 	sub.w	r2, r8, r2
90017fdc:	1d25      	adds	r5, r4, #4
90017fde:	b292      	uxth	r2, r2
90017fe0:	f7ff fcfe 	bl	900179e0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90017fe4:	f10d 0242 	add.w	r2, sp, #66	; 0x42
90017fe8:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90017fec:	2b00      	cmp	r3, #0
90017fee:	d0af      	beq.n	90017f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90017ff0:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
90017ff4:	2919      	cmp	r1, #25
90017ff6:	d8f7      	bhi.n	90017fe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017ff8:	3b20      	subs	r3, #32
90017ffa:	8013      	strh	r3, [r2, #0]
90017ffc:	e7f4      	b.n	90017fe8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90017ffe:	9a08      	ldr	r2, [sp, #32]
90018000:	2a00      	cmp	r2, #0
90018002:	d0ab      	beq.n	90017f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018004:	7812      	ldrb	r2, [r2, #0]
90018006:	e7a9      	b.n	90017f5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90018008:	2d00      	cmp	r5, #0
9001800a:	f43f af48 	beq.w	90017e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
9001800e:	782d      	ldrb	r5, [r5, #0]
90018010:	e745      	b.n	90017e9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90018012:	b507      	push	{r0, r1, r2, lr}
90018014:	9300      	str	r3, [sp, #0]
90018016:	4613      	mov	r3, r2
90018018:	2200      	movs	r2, #0
9001801a:	f7ff fe92 	bl	90017d42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
9001801e:	b003      	add	sp, #12
90018020:	f85d fb04 	ldr.w	pc, [sp], #4

90018024 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90018024:	b40c      	push	{r2, r3}
90018026:	b507      	push	{r0, r1, r2, lr}
90018028:	ab04      	add	r3, sp, #16
9001802a:	f853 2b04 	ldr.w	r2, [r3], #4
9001802e:	9301      	str	r3, [sp, #4]
90018030:	f7ff ffef 	bl	90018012 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90018034:	b003      	add	sp, #12
90018036:	f85d eb04 	ldr.w	lr, [sp], #4
9001803a:	b002      	add	sp, #8
9001803c:	4770      	bx	lr
	...

90018040 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90018040:	4b01      	ldr	r3, [pc, #4]	; (90018048 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90018042:	6018      	str	r0, [r3, #0]
90018044:	4770      	bx	lr
90018046:	bf00      	nop
90018048:	240235e4 	.word	0x240235e4

9001804c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
9001804c:	4b06      	ldr	r3, [pc, #24]	; (90018068 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
9001804e:	881a      	ldrh	r2, [r3, #0]
90018050:	4282      	cmp	r2, r0
90018052:	d807      	bhi.n	90018064 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90018054:	4b05      	ldr	r3, [pc, #20]	; (9001806c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90018056:	881b      	ldrh	r3, [r3, #0]
90018058:	4413      	add	r3, r2
9001805a:	4298      	cmp	r0, r3
9001805c:	bfac      	ite	ge
9001805e:	2000      	movge	r0, #0
90018060:	2001      	movlt	r0, #1
90018062:	4770      	bx	lr
90018064:	2000      	movs	r0, #0
90018066:	4770      	bx	lr
90018068:	24023604 	.word	0x24023604
9001806c:	24023608 	.word	0x24023608

90018070 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90018070:	b508      	push	{r3, lr}
90018072:	4601      	mov	r1, r0
90018074:	f7ff ffea 	bl	9001804c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90018078:	b118      	cbz	r0, 90018082 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
9001807a:	4b02      	ldr	r3, [pc, #8]	; (90018084 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
9001807c:	681b      	ldr	r3, [r3, #0]
9001807e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90018082:	bd08      	pop	{r3, pc}
90018084:	240235e8 	.word	0x240235e8

90018088 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90018088:	b5f0      	push	{r4, r5, r6, r7, lr}
9001808a:	4c24      	ldr	r4, [pc, #144]	; (9001811c <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
9001808c:	6823      	ldr	r3, [r4, #0]
9001808e:	2b00      	cmp	r3, #0
90018090:	d042      	beq.n	90018118 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90018092:	4a23      	ldr	r2, [pc, #140]	; (90018120 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90018094:	4d23      	ldr	r5, [pc, #140]	; (90018124 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90018096:	8811      	ldrh	r1, [r2, #0]
90018098:	f8b5 c000 	ldrh.w	ip, [r5]
9001809c:	4822      	ldr	r0, [pc, #136]	; (90018128 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
9001809e:	4461      	add	r1, ip
900180a0:	1c4a      	adds	r2, r1, #1
900180a2:	008f      	lsls	r7, r1, #2
900180a4:	f022 0201 	bic.w	r2, r2, #1
900180a8:	19de      	adds	r6, r3, r7
900180aa:	0412      	lsls	r2, r2, #16
900180ac:	6006      	str	r6, [r0, #0]
900180ae:	4e1f      	ldr	r6, [pc, #124]	; (9001812c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
900180b0:	0c12      	lsrs	r2, r2, #16
900180b2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
900180b6:	19da      	adds	r2, r3, r7
900180b8:	6032      	str	r2, [r6, #0]
900180ba:	220e      	movs	r2, #14
900180bc:	fb02 f20c 	mul.w	r2, r2, ip
900180c0:	3203      	adds	r2, #3
900180c2:	f022 0203 	bic.w	r2, r2, #3
900180c6:	443a      	add	r2, r7
900180c8:	4f19      	ldr	r7, [pc, #100]	; (90018130 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
900180ca:	4413      	add	r3, r2
900180cc:	603b      	str	r3, [r7, #0]
900180ce:	2300      	movs	r3, #0
900180d0:	4f18      	ldr	r7, [pc, #96]	; (90018134 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
900180d2:	469c      	mov	ip, r3
900180d4:	803b      	strh	r3, [r7, #0]
900180d6:	4f18      	ldr	r7, [pc, #96]	; (90018138 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
900180d8:	683f      	ldr	r7, [r7, #0]
900180da:	1aba      	subs	r2, r7, r2
900180dc:	4f17      	ldr	r7, [pc, #92]	; (9001813c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
900180de:	603a      	str	r2, [r7, #0]
900180e0:	f64f 77ff 	movw	r7, #65535	; 0xffff
900180e4:	4a16      	ldr	r2, [pc, #88]	; (90018140 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
900180e6:	8013      	strh	r3, [r2, #0]
900180e8:	428b      	cmp	r3, r1
900180ea:	d10d      	bne.n	90018108 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
900180ec:	882d      	ldrh	r5, [r5, #0]
900180ee:	2300      	movs	r3, #0
900180f0:	6830      	ldr	r0, [r6, #0]
900180f2:	240e      	movs	r4, #14
900180f4:	429d      	cmp	r5, r3
900180f6:	d90f      	bls.n	90018118 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
900180f8:	fb04 0203 	mla	r2, r4, r3, r0
900180fc:	3301      	adds	r3, #1
900180fe:	7b11      	ldrb	r1, [r2, #12]
90018100:	f36f 1145 	bfc	r1, #5, #1
90018104:	7311      	strb	r1, [r2, #12]
90018106:	e7f5      	b.n	900180f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90018108:	6822      	ldr	r2, [r4, #0]
9001810a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
9001810e:	6802      	ldr	r2, [r0, #0]
90018110:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90018114:	3301      	adds	r3, #1
90018116:	e7e7      	b.n	900180e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90018118:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001811a:	bf00      	nop
9001811c:	240235e8 	.word	0x240235e8
90018120:	24023604 	.word	0x24023604
90018124:	24023608 	.word	0x24023608
90018128:	240235fc 	.word	0x240235fc
9001812c:	240235ec 	.word	0x240235ec
90018130:	240235f4 	.word	0x240235f4
90018134:	24023606 	.word	0x24023606
90018138:	240235f0 	.word	0x240235f0
9001813c:	24023600 	.word	0x24023600
90018140:	240235f8 	.word	0x240235f8

90018144 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90018144:	4b06      	ldr	r3, [pc, #24]	; (90018160 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90018146:	681b      	ldr	r3, [r3, #0]
90018148:	b943      	cbnz	r3, 9001815c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001814a:	b139      	cbz	r1, 9001815c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
9001814c:	4b05      	ldr	r3, [pc, #20]	; (90018164 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
9001814e:	801a      	strh	r2, [r3, #0]
90018150:	4b05      	ldr	r3, [pc, #20]	; (90018168 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90018152:	6019      	str	r1, [r3, #0]
90018154:	4b05      	ldr	r3, [pc, #20]	; (9001816c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90018156:	6018      	str	r0, [r3, #0]
90018158:	f7ff bf96 	b.w	90018088 <_ZN8touchgfx6Bitmap10clearCacheEv>
9001815c:	4770      	bx	lr
9001815e:	bf00      	nop
90018160:	240235f4 	.word	0x240235f4
90018164:	24023608 	.word	0x24023608
90018168:	240235f0 	.word	0x240235f0
9001816c:	240235e8 	.word	0x240235e8

90018170 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90018170:	b470      	push	{r4, r5, r6}
90018172:	4c07      	ldr	r4, [pc, #28]	; (90018190 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90018174:	4605      	mov	r5, r0
90018176:	4610      	mov	r0, r2
90018178:	9a03      	ldr	r2, [sp, #12]
9001817a:	6826      	ldr	r6, [r4, #0]
9001817c:	b936      	cbnz	r6, 9001818c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
9001817e:	6025      	str	r5, [r4, #0]
90018180:	4c04      	ldr	r4, [pc, #16]	; (90018194 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90018182:	8021      	strh	r1, [r4, #0]
90018184:	4619      	mov	r1, r3
90018186:	bc70      	pop	{r4, r5, r6}
90018188:	f7ff bfdc 	b.w	90018144 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
9001818c:	bc70      	pop	{r4, r5, r6}
9001818e:	4770      	bx	lr
90018190:	2402360c 	.word	0x2402360c
90018194:	24023604 	.word	0x24023604

90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90018198:	4a12      	ldr	r2, [pc, #72]	; (900181e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
9001819a:	8803      	ldrh	r3, [r0, #0]
9001819c:	8812      	ldrh	r2, [r2, #0]
9001819e:	4293      	cmp	r3, r2
900181a0:	d207      	bcs.n	900181b2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
900181a2:	4a11      	ldr	r2, [pc, #68]	; (900181e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
900181a4:	2114      	movs	r1, #20
900181a6:	6812      	ldr	r2, [r2, #0]
900181a8:	fb01 2303 	mla	r3, r1, r3, r2
900181ac:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
900181b0:	4770      	bx	lr
900181b2:	490e      	ldr	r1, [pc, #56]	; (900181ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
900181b4:	8809      	ldrh	r1, [r1, #0]
900181b6:	4411      	add	r1, r2
900181b8:	428b      	cmp	r3, r1
900181ba:	da04      	bge.n	900181c6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
900181bc:	1a9b      	subs	r3, r3, r2
900181be:	4a0c      	ldr	r2, [pc, #48]	; (900181f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
900181c0:	210e      	movs	r1, #14
900181c2:	6812      	ldr	r2, [r2, #0]
900181c4:	e7f0      	b.n	900181a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
900181c6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900181ca:	4293      	cmp	r3, r2
900181cc:	d108      	bne.n	900181e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
900181ce:	4b09      	ldr	r3, [pc, #36]	; (900181f4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
900181d0:	781b      	ldrb	r3, [r3, #0]
900181d2:	b91b      	cbnz	r3, 900181dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
900181d4:	4b08      	ldr	r3, [pc, #32]	; (900181f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
900181d6:	f9b3 0000 	ldrsh.w	r0, [r3]
900181da:	4770      	bx	lr
900181dc:	4b07      	ldr	r3, [pc, #28]	; (900181fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
900181de:	e7fa      	b.n	900181d6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
900181e0:	2000      	movs	r0, #0
900181e2:	4770      	bx	lr
900181e4:	24023604 	.word	0x24023604
900181e8:	2402360c 	.word	0x2402360c
900181ec:	24023608 	.word	0x24023608
900181f0:	240235ec 	.word	0x240235ec
900181f4:	24023574 	.word	0x24023574
900181f8:	24023576 	.word	0x24023576
900181fc:	24023578 	.word	0x24023578

90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90018200:	4a12      	ldr	r2, [pc, #72]	; (9001824c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90018202:	8803      	ldrh	r3, [r0, #0]
90018204:	8812      	ldrh	r2, [r2, #0]
90018206:	4293      	cmp	r3, r2
90018208:	d207      	bcs.n	9001821a <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
9001820a:	4a11      	ldr	r2, [pc, #68]	; (90018250 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
9001820c:	2114      	movs	r1, #20
9001820e:	6812      	ldr	r2, [r2, #0]
90018210:	fb01 2303 	mla	r3, r1, r3, r2
90018214:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90018218:	4770      	bx	lr
9001821a:	490e      	ldr	r1, [pc, #56]	; (90018254 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
9001821c:	8809      	ldrh	r1, [r1, #0]
9001821e:	4411      	add	r1, r2
90018220:	428b      	cmp	r3, r1
90018222:	da04      	bge.n	9001822e <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90018224:	1a9b      	subs	r3, r3, r2
90018226:	4a0c      	ldr	r2, [pc, #48]	; (90018258 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90018228:	210e      	movs	r1, #14
9001822a:	6812      	ldr	r2, [r2, #0]
9001822c:	e7f0      	b.n	90018210 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
9001822e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
90018232:	4293      	cmp	r3, r2
90018234:	d108      	bne.n	90018248 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90018236:	4b09      	ldr	r3, [pc, #36]	; (9001825c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90018238:	781b      	ldrb	r3, [r3, #0]
9001823a:	b91b      	cbnz	r3, 90018244 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
9001823c:	4b08      	ldr	r3, [pc, #32]	; (90018260 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
9001823e:	f9b3 0000 	ldrsh.w	r0, [r3]
90018242:	4770      	bx	lr
90018244:	4b07      	ldr	r3, [pc, #28]	; (90018264 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90018246:	e7fa      	b.n	9001823e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90018248:	2000      	movs	r0, #0
9001824a:	4770      	bx	lr
9001824c:	24023604 	.word	0x24023604
90018250:	2402360c 	.word	0x2402360c
90018254:	24023608 	.word	0x24023608
90018258:	240235ec 	.word	0x240235ec
9001825c:	24023574 	.word	0x24023574
90018260:	24023578 	.word	0x24023578
90018264:	24023576 	.word	0x24023576

90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90018268:	4a1f      	ldr	r2, [pc, #124]	; (900182e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
9001826a:	b510      	push	{r4, lr}
9001826c:	880b      	ldrh	r3, [r1, #0]
9001826e:	8812      	ldrh	r2, [r2, #0]
90018270:	4293      	cmp	r3, r2
90018272:	d213      	bcs.n	9001829c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90018274:	4a1d      	ldr	r2, [pc, #116]	; (900182ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
90018276:	2114      	movs	r1, #20
90018278:	6812      	ldr	r2, [r2, #0]
9001827a:	fb01 2303 	mla	r3, r1, r3, r2
9001827e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90018282:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90018286:	8a1a      	ldrh	r2, [r3, #16]
90018288:	8a5b      	ldrh	r3, [r3, #18]
9001828a:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001828e:	8004      	strh	r4, [r0, #0]
90018290:	f3c3 030c 	ubfx	r3, r3, #0, #13
90018294:	8041      	strh	r1, [r0, #2]
90018296:	8082      	strh	r2, [r0, #4]
90018298:	80c3      	strh	r3, [r0, #6]
9001829a:	e00e      	b.n	900182ba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
9001829c:	4914      	ldr	r1, [pc, #80]	; (900182f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
9001829e:	8809      	ldrh	r1, [r1, #0]
900182a0:	4411      	add	r1, r2
900182a2:	428b      	cmp	r3, r1
900182a4:	da0a      	bge.n	900182bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
900182a6:	1a9b      	subs	r3, r3, r2
900182a8:	4a12      	ldr	r2, [pc, #72]	; (900182f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
900182aa:	210e      	movs	r1, #14
900182ac:	6812      	ldr	r2, [r2, #0]
900182ae:	fb01 2303 	mla	r3, r1, r3, r2
900182b2:	681a      	ldr	r2, [r3, #0]
900182b4:	6002      	str	r2, [r0, #0]
900182b6:	685a      	ldr	r2, [r3, #4]
900182b8:	6042      	str	r2, [r0, #4]
900182ba:	bd10      	pop	{r4, pc}
900182bc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900182c0:	4293      	cmp	r3, r2
900182c2:	d10b      	bne.n	900182dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
900182c4:	4b0c      	ldr	r3, [pc, #48]	; (900182f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
900182c6:	f9b3 1000 	ldrsh.w	r1, [r3]
900182ca:	4b0c      	ldr	r3, [pc, #48]	; (900182fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
900182cc:	8081      	strh	r1, [r0, #4]
900182ce:	f9b3 2000 	ldrsh.w	r2, [r3]
900182d2:	2300      	movs	r3, #0
900182d4:	80c2      	strh	r2, [r0, #6]
900182d6:	8003      	strh	r3, [r0, #0]
900182d8:	8043      	strh	r3, [r0, #2]
900182da:	e7ee      	b.n	900182ba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
900182dc:	2300      	movs	r3, #0
900182de:	8003      	strh	r3, [r0, #0]
900182e0:	8043      	strh	r3, [r0, #2]
900182e2:	8083      	strh	r3, [r0, #4]
900182e4:	e7d8      	b.n	90018298 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
900182e6:	bf00      	nop
900182e8:	24023604 	.word	0x24023604
900182ec:	2402360c 	.word	0x2402360c
900182f0:	24023608 	.word	0x24023608
900182f4:	240235ec 	.word	0x240235ec
900182f8:	24023570 	.word	0x24023570
900182fc:	24023572 	.word	0x24023572

90018300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90018300:	4a17      	ldr	r2, [pc, #92]	; (90018360 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90018302:	8803      	ldrh	r3, [r0, #0]
90018304:	8812      	ldrh	r2, [r2, #0]
90018306:	4293      	cmp	r3, r2
90018308:	d213      	bcs.n	90018332 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
9001830a:	4a16      	ldr	r2, [pc, #88]	; (90018364 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
9001830c:	2114      	movs	r1, #20
9001830e:	6812      	ldr	r2, [r2, #0]
90018310:	fb01 2303 	mla	r3, r1, r3, r2
90018314:	8a1a      	ldrh	r2, [r3, #16]
90018316:	8919      	ldrh	r1, [r3, #8]
90018318:	f3c2 020c 	ubfx	r2, r2, #0, #13
9001831c:	428a      	cmp	r2, r1
9001831e:	db1d      	blt.n	9001835c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018320:	8a58      	ldrh	r0, [r3, #18]
90018322:	f3c0 000c 	ubfx	r0, r0, #0, #13
90018326:	895b      	ldrh	r3, [r3, #10]
90018328:	4298      	cmp	r0, r3
9001832a:	bfac      	ite	ge
9001832c:	2000      	movge	r0, #0
9001832e:	2001      	movlt	r0, #1
90018330:	4770      	bx	lr
90018332:	490d      	ldr	r1, [pc, #52]	; (90018368 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90018334:	8809      	ldrh	r1, [r1, #0]
90018336:	4411      	add	r1, r2
90018338:	428b      	cmp	r3, r1
9001833a:	da0d      	bge.n	90018358 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
9001833c:	1a9b      	subs	r3, r3, r2
9001833e:	4a0b      	ldr	r2, [pc, #44]	; (9001836c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90018340:	210e      	movs	r1, #14
90018342:	6812      	ldr	r2, [r2, #0]
90018344:	fb01 2303 	mla	r3, r1, r3, r2
90018348:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
9001834c:	891a      	ldrh	r2, [r3, #8]
9001834e:	4291      	cmp	r1, r2
90018350:	db04      	blt.n	9001835c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90018352:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90018356:	e7e6      	b.n	90018326 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90018358:	2000      	movs	r0, #0
9001835a:	4770      	bx	lr
9001835c:	2001      	movs	r0, #1
9001835e:	4770      	bx	lr
90018360:	24023604 	.word	0x24023604
90018364:	2402360c 	.word	0x2402360c
90018368:	24023608 	.word	0x24023608
9001836c:	240235ec 	.word	0x240235ec

90018370 <_ZNK8touchgfx6Bitmap7getDataEv>:
90018370:	4a12      	ldr	r2, [pc, #72]	; (900183bc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90018372:	8803      	ldrh	r3, [r0, #0]
90018374:	8811      	ldrh	r1, [r2, #0]
90018376:	428b      	cmp	r3, r1
90018378:	d20b      	bcs.n	90018392 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
9001837a:	4a11      	ldr	r2, [pc, #68]	; (900183c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001837c:	6812      	ldr	r2, [r2, #0]
9001837e:	b112      	cbz	r2, 90018386 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90018380:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90018384:	b9c0      	cbnz	r0, 900183b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90018386:	4a0f      	ldr	r2, [pc, #60]	; (900183c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90018388:	6811      	ldr	r1, [r2, #0]
9001838a:	2214      	movs	r2, #20
9001838c:	4353      	muls	r3, r2
9001838e:	58c8      	ldr	r0, [r1, r3]
90018390:	4770      	bx	lr
90018392:	4a0d      	ldr	r2, [pc, #52]	; (900183c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90018394:	8812      	ldrh	r2, [r2, #0]
90018396:	440a      	add	r2, r1
90018398:	4293      	cmp	r3, r2
9001839a:	da04      	bge.n	900183a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
9001839c:	4a08      	ldr	r2, [pc, #32]	; (900183c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
9001839e:	6812      	ldr	r2, [r2, #0]
900183a0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
900183a4:	4770      	bx	lr
900183a6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900183aa:	4293      	cmp	r3, r2
900183ac:	d103      	bne.n	900183b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
900183ae:	4b07      	ldr	r3, [pc, #28]	; (900183cc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
900183b0:	681b      	ldr	r3, [r3, #0]
900183b2:	6c58      	ldr	r0, [r3, #68]	; 0x44
900183b4:	4770      	bx	lr
900183b6:	2000      	movs	r0, #0
900183b8:	4770      	bx	lr
900183ba:	bf00      	nop
900183bc:	24023604 	.word	0x24023604
900183c0:	240235e8 	.word	0x240235e8
900183c4:	2402360c 	.word	0x2402360c
900183c8:	24023608 	.word	0x24023608
900183cc:	2402357c 	.word	0x2402357c

900183d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
900183d0:	4b24      	ldr	r3, [pc, #144]	; (90018464 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
900183d2:	8802      	ldrh	r2, [r0, #0]
900183d4:	8818      	ldrh	r0, [r3, #0]
900183d6:	4282      	cmp	r2, r0
900183d8:	d221      	bcs.n	9001841e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
900183da:	4b23      	ldr	r3, [pc, #140]	; (90018468 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
900183dc:	6819      	ldr	r1, [r3, #0]
900183de:	2314      	movs	r3, #20
900183e0:	fb03 1302 	mla	r3, r3, r2, r1
900183e4:	6858      	ldr	r0, [r3, #4]
900183e6:	2800      	cmp	r0, #0
900183e8:	d03a      	beq.n	90018460 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900183ea:	4920      	ldr	r1, [pc, #128]	; (9001846c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
900183ec:	6809      	ldr	r1, [r1, #0]
900183ee:	2900      	cmp	r1, #0
900183f0:	d036      	beq.n	90018460 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900183f2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
900183f6:	2900      	cmp	r1, #0
900183f8:	d032      	beq.n	90018460 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
900183fa:	891a      	ldrh	r2, [r3, #8]
900183fc:	8958      	ldrh	r0, [r3, #10]
900183fe:	4350      	muls	r0, r2
90018400:	7c5a      	ldrb	r2, [r3, #17]
90018402:	7cdb      	ldrb	r3, [r3, #19]
90018404:	0952      	lsrs	r2, r2, #5
90018406:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001840a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9001840e:	2b0b      	cmp	r3, #11
90018410:	bf18      	it	ne
90018412:	0040      	lslne	r0, r0, #1
90018414:	3003      	adds	r0, #3
90018416:	f020 0003 	bic.w	r0, r0, #3
9001841a:	4408      	add	r0, r1
9001841c:	4770      	bx	lr
9001841e:	4b14      	ldr	r3, [pc, #80]	; (90018470 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90018420:	881b      	ldrh	r3, [r3, #0]
90018422:	4403      	add	r3, r0
90018424:	429a      	cmp	r2, r3
90018426:	da1a      	bge.n	9001845e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90018428:	4b12      	ldr	r3, [pc, #72]	; (90018474 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
9001842a:	1a10      	subs	r0, r2, r0
9001842c:	210e      	movs	r1, #14
9001842e:	681b      	ldr	r3, [r3, #0]
90018430:	fb01 3000 	mla	r0, r1, r0, r3
90018434:	7b03      	ldrb	r3, [r0, #12]
90018436:	f003 031f 	and.w	r3, r3, #31
9001843a:	2b0b      	cmp	r3, #11
9001843c:	d10b      	bne.n	90018456 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
9001843e:	8903      	ldrh	r3, [r0, #8]
90018440:	8940      	ldrh	r0, [r0, #10]
90018442:	4358      	muls	r0, r3
90018444:	4b09      	ldr	r3, [pc, #36]	; (9001846c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90018446:	3003      	adds	r0, #3
90018448:	6819      	ldr	r1, [r3, #0]
9001844a:	f020 0303 	bic.w	r3, r0, #3
9001844e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90018452:	4418      	add	r0, r3
90018454:	4770      	bx	lr
90018456:	2b0d      	cmp	r3, #13
90018458:	d101      	bne.n	9001845e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
9001845a:	300d      	adds	r0, #13
9001845c:	4770      	bx	lr
9001845e:	2000      	movs	r0, #0
90018460:	4770      	bx	lr
90018462:	bf00      	nop
90018464:	24023604 	.word	0x24023604
90018468:	2402360c 	.word	0x2402360c
9001846c:	240235e8 	.word	0x240235e8
90018470:	24023608 	.word	0x24023608
90018474:	240235ec 	.word	0x240235ec

90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>:
90018478:	4a17      	ldr	r2, [pc, #92]	; (900184d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
9001847a:	b510      	push	{r4, lr}
9001847c:	8803      	ldrh	r3, [r0, #0]
9001847e:	8812      	ldrh	r2, [r2, #0]
90018480:	4293      	cmp	r3, r2
90018482:	d20c      	bcs.n	9001849e <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
90018484:	4a15      	ldr	r2, [pc, #84]	; (900184dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
90018486:	2114      	movs	r1, #20
90018488:	6812      	ldr	r2, [r2, #0]
9001848a:	fb01 2303 	mla	r3, r1, r3, r2
9001848e:	7c58      	ldrb	r0, [r3, #17]
90018490:	0942      	lsrs	r2, r0, #5
90018492:	7cd8      	ldrb	r0, [r3, #19]
90018494:	f3c0 1042 	ubfx	r0, r0, #5, #3
90018498:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
9001849c:	bd10      	pop	{r4, pc}
9001849e:	4910      	ldr	r1, [pc, #64]	; (900184e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
900184a0:	8809      	ldrh	r1, [r1, #0]
900184a2:	4411      	add	r1, r2
900184a4:	428b      	cmp	r3, r1
900184a6:	da09      	bge.n	900184bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
900184a8:	1a9b      	subs	r3, r3, r2
900184aa:	4a0e      	ldr	r2, [pc, #56]	; (900184e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
900184ac:	210e      	movs	r1, #14
900184ae:	6812      	ldr	r2, [r2, #0]
900184b0:	fb01 2303 	mla	r3, r1, r3, r2
900184b4:	7b18      	ldrb	r0, [r3, #12]
900184b6:	f000 001f 	and.w	r0, r0, #31
900184ba:	e7ef      	b.n	9001849c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
900184bc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
900184c0:	4293      	cmp	r3, r2
900184c2:	d106      	bne.n	900184d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
900184c4:	f7f8 f8ec 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
900184c8:	6803      	ldr	r3, [r0, #0]
900184ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900184ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900184d0:	4718      	bx	r3
900184d2:	2000      	movs	r0, #0
900184d4:	e7e2      	b.n	9001849c <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
900184d6:	bf00      	nop
900184d8:	24023604 	.word	0x24023604
900184dc:	2402360c 	.word	0x2402360c
900184e0:	24023608 	.word	0x24023608
900184e4:	240235ec 	.word	0x240235ec

900184e8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
900184e8:	2010      	movs	r0, #16
900184ea:	4770      	bx	lr

900184ec <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
900184ec:	4b02      	ldr	r3, [pc, #8]	; (900184f8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
900184ee:	8818      	ldrh	r0, [r3, #0]
900184f0:	0040      	lsls	r0, r0, #1
900184f2:	b280      	uxth	r0, r0
900184f4:	4770      	bx	lr
900184f6:	bf00      	nop
900184f8:	24023576 	.word	0x24023576

900184fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
900184fc:	2bff      	cmp	r3, #255	; 0xff
900184fe:	d050      	beq.n	900185a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
90018500:	2a0b      	cmp	r2, #11
90018502:	d04a      	beq.n	9001859a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
90018504:	d80e      	bhi.n	90018524 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
90018506:	2a03      	cmp	r2, #3
90018508:	d03f      	beq.n	9001858a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
9001850a:	d804      	bhi.n	90018516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001850c:	2a01      	cmp	r2, #1
9001850e:	d03e      	beq.n	9001858e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
90018510:	d93f      	bls.n	90018592 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
90018512:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
90018514:	4770      	bx	lr
90018516:	2a09      	cmp	r2, #9
90018518:	d03f      	beq.n	9001859a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
9001851a:	d83c      	bhi.n	90018596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
9001851c:	2a08      	cmp	r2, #8
9001851e:	d03a      	beq.n	90018596 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
90018520:	2000      	movs	r0, #0
90018522:	4770      	bx	lr
90018524:	2a2f      	cmp	r2, #47	; 0x2f
90018526:	d024      	beq.n	90018572 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
90018528:	d80d      	bhi.n	90018546 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
9001852a:	2a2d      	cmp	r2, #45	; 0x2d
9001852c:	d014      	beq.n	90018558 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
9001852e:	d826      	bhi.n	9001857e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
90018530:	2a2c      	cmp	r2, #44	; 0x2c
90018532:	d1f5      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018534:	684b      	ldr	r3, [r1, #4]
90018536:	781b      	ldrb	r3, [r3, #0]
90018538:	2b01      	cmp	r3, #1
9001853a:	d018      	beq.n	9001856e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
9001853c:	d323      	bcc.n	90018586 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
9001853e:	2b02      	cmp	r3, #2
90018540:	d1ee      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018542:	68c0      	ldr	r0, [r0, #12]
90018544:	4770      	bx	lr
90018546:	2a31      	cmp	r2, #49	; 0x31
90018548:	d004      	beq.n	90018554 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
9001854a:	d328      	bcc.n	9001859e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
9001854c:	2a32      	cmp	r2, #50	; 0x32
9001854e:	d026      	beq.n	9001859e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
90018550:	2a33      	cmp	r2, #51	; 0x33
90018552:	d1e5      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018554:	6f40      	ldr	r0, [r0, #116]	; 0x74
90018556:	4770      	bx	lr
90018558:	684b      	ldr	r3, [r1, #4]
9001855a:	781b      	ldrb	r3, [r3, #0]
9001855c:	2b01      	cmp	r3, #1
9001855e:	d004      	beq.n	9001856a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
90018560:	d30b      	bcc.n	9001857a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
90018562:	2b02      	cmp	r3, #2
90018564:	d1dc      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018566:	6940      	ldr	r0, [r0, #20]
90018568:	4770      	bx	lr
9001856a:	6a40      	ldr	r0, [r0, #36]	; 0x24
9001856c:	4770      	bx	lr
9001856e:	69c0      	ldr	r0, [r0, #28]
90018570:	4770      	bx	lr
90018572:	684b      	ldr	r3, [r1, #4]
90018574:	781b      	ldrb	r3, [r3, #0]
90018576:	2b00      	cmp	r3, #0
90018578:	d1d2      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001857a:	6b40      	ldr	r0, [r0, #52]	; 0x34
9001857c:	4770      	bx	lr
9001857e:	684b      	ldr	r3, [r1, #4]
90018580:	781b      	ldrb	r3, [r3, #0]
90018582:	2b00      	cmp	r3, #0
90018584:	d1cc      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018586:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
90018588:	4770      	bx	lr
9001858a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
9001858c:	4770      	bx	lr
9001858e:	6d40      	ldr	r0, [r0, #84]	; 0x54
90018590:	4770      	bx	lr
90018592:	6c40      	ldr	r0, [r0, #68]	; 0x44
90018594:	4770      	bx	lr
90018596:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
90018598:	4770      	bx	lr
9001859a:	6e40      	ldr	r0, [r0, #100]	; 0x64
9001859c:	4770      	bx	lr
9001859e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
900185a0:	4770      	bx	lr
900185a2:	2a0b      	cmp	r2, #11
900185a4:	d049      	beq.n	9001863a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900185a6:	d80e      	bhi.n	900185c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
900185a8:	2a03      	cmp	r2, #3
900185aa:	d040      	beq.n	9001862e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
900185ac:	d804      	bhi.n	900185b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
900185ae:	2a01      	cmp	r2, #1
900185b0:	d03f      	beq.n	90018632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
900185b2:	d940      	bls.n	90018636 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
900185b4:	6c00      	ldr	r0, [r0, #64]	; 0x40
900185b6:	4770      	bx	lr
900185b8:	2a09      	cmp	r2, #9
900185ba:	d03e      	beq.n	9001863a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
900185bc:	d801      	bhi.n	900185c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
900185be:	2a08      	cmp	r2, #8
900185c0:	d1ae      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185c2:	6e00      	ldr	r0, [r0, #96]	; 0x60
900185c4:	4770      	bx	lr
900185c6:	2a2f      	cmp	r2, #47	; 0x2f
900185c8:	d024      	beq.n	90018614 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
900185ca:	d80d      	bhi.n	900185e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
900185cc:	2a2d      	cmp	r2, #45	; 0x2d
900185ce:	d014      	beq.n	900185fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
900185d0:	d826      	bhi.n	90018620 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
900185d2:	2a2c      	cmp	r2, #44	; 0x2c
900185d4:	d1a4      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185d6:	684b      	ldr	r3, [r1, #4]
900185d8:	781b      	ldrb	r3, [r3, #0]
900185da:	2b01      	cmp	r3, #1
900185dc:	d018      	beq.n	90018610 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
900185de:	d324      	bcc.n	9001862a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
900185e0:	2b02      	cmp	r3, #2
900185e2:	d19d      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185e4:	6900      	ldr	r0, [r0, #16]
900185e6:	4770      	bx	lr
900185e8:	2a31      	cmp	r2, #49	; 0x31
900185ea:	d004      	beq.n	900185f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
900185ec:	d327      	bcc.n	9001863e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
900185ee:	2a32      	cmp	r2, #50	; 0x32
900185f0:	d025      	beq.n	9001863e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
900185f2:	2a33      	cmp	r2, #51	; 0x33
900185f4:	d194      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
900185f6:	6f80      	ldr	r0, [r0, #120]	; 0x78
900185f8:	4770      	bx	lr
900185fa:	684b      	ldr	r3, [r1, #4]
900185fc:	781b      	ldrb	r3, [r3, #0]
900185fe:	2b01      	cmp	r3, #1
90018600:	d004      	beq.n	9001860c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
90018602:	d30b      	bcc.n	9001861c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
90018604:	2b02      	cmp	r3, #2
90018606:	d18b      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
90018608:	6980      	ldr	r0, [r0, #24]
9001860a:	4770      	bx	lr
9001860c:	6a80      	ldr	r0, [r0, #40]	; 0x28
9001860e:	4770      	bx	lr
90018610:	6a00      	ldr	r0, [r0, #32]
90018612:	4770      	bx	lr
90018614:	684b      	ldr	r3, [r1, #4]
90018616:	781b      	ldrb	r3, [r3, #0]
90018618:	2b00      	cmp	r3, #0
9001861a:	d181      	bne.n	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001861c:	6b80      	ldr	r0, [r0, #56]	; 0x38
9001861e:	4770      	bx	lr
90018620:	684b      	ldr	r3, [r1, #4]
90018622:	781b      	ldrb	r3, [r3, #0]
90018624:	2b00      	cmp	r3, #0
90018626:	f47f af7b 	bne.w	90018520 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001862a:	6b00      	ldr	r0, [r0, #48]	; 0x30
9001862c:	4770      	bx	lr
9001862e:	6d00      	ldr	r0, [r0, #80]	; 0x50
90018630:	4770      	bx	lr
90018632:	6d80      	ldr	r0, [r0, #88]	; 0x58
90018634:	4770      	bx	lr
90018636:	6c80      	ldr	r0, [r0, #72]	; 0x48
90018638:	4770      	bx	lr
9001863a:	6e80      	ldr	r0, [r0, #104]	; 0x68
9001863c:	4770      	bx	lr
9001863e:	6f00      	ldr	r0, [r0, #112]	; 0x70
90018640:	4770      	bx	lr

90018642 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018642:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018646:	b087      	sub	sp, #28
90018648:	9815      	ldr	r0, [sp, #84]	; 0x54
9001864a:	9205      	str	r2, [sp, #20]
9001864c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018650:	9101      	str	r1, [sp, #4]
90018652:	9202      	str	r2, [sp, #8]
90018654:	6841      	ldr	r1, [r0, #4]
90018656:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
9001865a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001865e:	fb01 2404 	mla	r4, r1, r4, r2
90018662:	6802      	ldr	r2, [r0, #0]
90018664:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018668:	f8de 2000 	ldr.w	r2, [lr]
9001866c:	9203      	str	r2, [sp, #12]
9001866e:	f8de 2004 	ldr.w	r2, [lr, #4]
90018672:	3204      	adds	r2, #4
90018674:	9204      	str	r2, [sp, #16]
90018676:	9a02      	ldr	r2, [sp, #8]
90018678:	43d6      	mvns	r6, r2
9001867a:	b2f6      	uxtb	r6, r6
9001867c:	9a01      	ldr	r2, [sp, #4]
9001867e:	2a00      	cmp	r2, #0
90018680:	dc03      	bgt.n	9001868a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90018682:	9a05      	ldr	r2, [sp, #20]
90018684:	2a00      	cmp	r2, #0
90018686:	f340 8129 	ble.w	900188dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001868a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001868c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90018690:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018694:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018696:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001869a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001869e:	2b00      	cmp	r3, #0
900186a0:	dd0e      	ble.n	900186c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
900186a2:	1408      	asrs	r0, r1, #16
900186a4:	d405      	bmi.n	900186b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900186a6:	4560      	cmp	r0, ip
900186a8:	da03      	bge.n	900186b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900186aa:	1410      	asrs	r0, r2, #16
900186ac:	d401      	bmi.n	900186b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900186ae:	42b8      	cmp	r0, r7
900186b0:	db07      	blt.n	900186c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
900186b2:	9813      	ldr	r0, [sp, #76]	; 0x4c
900186b4:	3b01      	subs	r3, #1
900186b6:	3402      	adds	r4, #2
900186b8:	4401      	add	r1, r0
900186ba:	9814      	ldr	r0, [sp, #80]	; 0x50
900186bc:	4402      	add	r2, r0
900186be:	e7ee      	b.n	9001869e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
900186c0:	d071      	beq.n	900187a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
900186c2:	1e58      	subs	r0, r3, #1
900186c4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
900186c6:	fb05 1500 	mla	r5, r5, r0, r1
900186ca:	142d      	asrs	r5, r5, #16
900186cc:	d45f      	bmi.n	9001878e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900186ce:	4565      	cmp	r5, ip
900186d0:	da5d      	bge.n	9001878e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900186d2:	9d14      	ldr	r5, [sp, #80]	; 0x50
900186d4:	fb05 2000 	mla	r0, r5, r0, r2
900186d8:	1400      	asrs	r0, r0, #16
900186da:	d458      	bmi.n	9001878e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900186dc:	42b8      	cmp	r0, r7
900186de:	da56      	bge.n	9001878e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
900186e0:	4699      	mov	r9, r3
900186e2:	46a2      	mov	sl, r4
900186e4:	f8bd b008 	ldrh.w	fp, [sp, #8]
900186e8:	f1b9 0f00 	cmp.w	r9, #0
900186ec:	dd57      	ble.n	9001879e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
900186ee:	ea4f 4c22 	mov.w	ip, r2, asr #16
900186f2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900186f6:	9803      	ldr	r0, [sp, #12]
900186f8:	140d      	asrs	r5, r1, #16
900186fa:	f109 39ff 	add.w	r9, r9, #4294967295
900186fe:	fb07 000c 	mla	r0, r7, ip, r0
90018702:	5d40      	ldrb	r0, [r0, r5]
90018704:	9d04      	ldr	r5, [sp, #16]
90018706:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001870a:	f8ba 5000 	ldrh.w	r5, [sl]
9001870e:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018712:	122f      	asrs	r7, r5, #8
90018714:	ea4f 08e5 	mov.w	r8, r5, asr #3
90018718:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001871c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018720:	00ed      	lsls	r5, r5, #3
90018722:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90018726:	fb17 f706 	smulbb	r7, r7, r6
9001872a:	b2ed      	uxtb	r5, r5
9001872c:	fb18 f806 	smulbb	r8, r8, r6
90018730:	fb0c 7c0b 	mla	ip, ip, fp, r7
90018734:	10c7      	asrs	r7, r0, #3
90018736:	fb15 f506 	smulbb	r5, r5, r6
9001873a:	00c0      	lsls	r0, r0, #3
9001873c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90018740:	fa1f fc8c 	uxth.w	ip, ip
90018744:	b2c0      	uxtb	r0, r0
90018746:	fb07 870b 	mla	r7, r7, fp, r8
9001874a:	fb00 500b 	mla	r0, r0, fp, r5
9001874e:	f10c 0501 	add.w	r5, ip, #1
90018752:	b2bf      	uxth	r7, r7
90018754:	b280      	uxth	r0, r0
90018756:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001875a:	f107 0801 	add.w	r8, r7, #1
9001875e:	1c45      	adds	r5, r0, #1
90018760:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90018764:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90018768:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001876c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001876e:	ea4f 1858 	mov.w	r8, r8, lsr #5
90018772:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90018776:	4401      	add	r1, r0
90018778:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001877c:	9814      	ldr	r0, [sp, #80]	; 0x50
9001877e:	ea45 0c0c 	orr.w	ip, r5, ip
90018782:	4402      	add	r2, r0
90018784:	ea4c 0c08 	orr.w	ip, ip, r8
90018788:	f82a cb02 	strh.w	ip, [sl], #2
9001878c:	e7ac      	b.n	900186e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001878e:	f04f 0800 	mov.w	r8, #0
90018792:	f8bd a008 	ldrh.w	sl, [sp, #8]
90018796:	eb03 0008 	add.w	r0, r3, r8
9001879a:	2800      	cmp	r0, #0
9001879c:	dc41      	bgt.n	90018822 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001879e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900187a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900187a6:	9b01      	ldr	r3, [sp, #4]
900187a8:	2b00      	cmp	r3, #0
900187aa:	f340 8097 	ble.w	900188dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900187ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900187b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900187b4:	ee30 0a04 	vadd.f32	s0, s0, s8
900187b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
900187bc:	eef0 6a62 	vmov.f32	s13, s5
900187c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
900187c4:	ee31 1a05 	vadd.f32	s2, s2, s10
900187c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900187cc:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
900187d0:	eef0 6a43 	vmov.f32	s13, s6
900187d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900187d8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
900187dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
900187e0:	ee61 7a27 	vmul.f32	s15, s2, s15
900187e4:	ee77 2a62 	vsub.f32	s5, s14, s5
900187e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
900187ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900187f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900187f4:	ee12 2a90 	vmov	r2, s5
900187f8:	eef0 2a47 	vmov.f32	s5, s14
900187fc:	fb92 f3f3 	sdiv	r3, r2, r3
90018800:	ee13 2a10 	vmov	r2, s6
90018804:	9313      	str	r3, [sp, #76]	; 0x4c
90018806:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018808:	eeb0 3a67 	vmov.f32	s6, s15
9001880c:	fb92 f3f3 	sdiv	r3, r2, r3
90018810:	9314      	str	r3, [sp, #80]	; 0x50
90018812:	9b01      	ldr	r3, [sp, #4]
90018814:	9a05      	ldr	r2, [sp, #20]
90018816:	3b01      	subs	r3, #1
90018818:	9301      	str	r3, [sp, #4]
9001881a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001881c:	bf08      	it	eq
9001881e:	4613      	moveq	r3, r2
90018820:	e72c      	b.n	9001867c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90018822:	140f      	asrs	r7, r1, #16
90018824:	d453      	bmi.n	900188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018826:	f8de 5008 	ldr.w	r5, [lr, #8]
9001882a:	42bd      	cmp	r5, r7
9001882c:	dd4f      	ble.n	900188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001882e:	ea5f 4c22 	movs.w	ip, r2, asr #16
90018832:	d44c      	bmi.n	900188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90018834:	f8de 000c 	ldr.w	r0, [lr, #12]
90018838:	4560      	cmp	r0, ip
9001883a:	dd48      	ble.n	900188ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001883c:	9803      	ldr	r0, [sp, #12]
9001883e:	b22d      	sxth	r5, r5
90018840:	fb0c 0505 	mla	r5, ip, r5, r0
90018844:	5de8      	ldrb	r0, [r5, r7]
90018846:	9d04      	ldr	r5, [sp, #16]
90018848:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001884c:	f06f 0501 	mvn.w	r5, #1
90018850:	fb05 fb08 	mul.w	fp, r5, r8
90018854:	ea4f 2c20 	mov.w	ip, r0, asr #8
90018858:	f834 500b 	ldrh.w	r5, [r4, fp]
9001885c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90018860:	122f      	asrs	r7, r5, #8
90018862:	ea4f 09e5 	mov.w	r9, r5, asr #3
90018866:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001886a:	00ed      	lsls	r5, r5, #3
9001886c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90018870:	fb17 f706 	smulbb	r7, r7, r6
90018874:	b2ed      	uxtb	r5, r5
90018876:	fb19 f906 	smulbb	r9, r9, r6
9001887a:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001887e:	10c7      	asrs	r7, r0, #3
90018880:	fb15 f506 	smulbb	r5, r5, r6
90018884:	00c0      	lsls	r0, r0, #3
90018886:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001888a:	fa1f fc8c 	uxth.w	ip, ip
9001888e:	b2c0      	uxtb	r0, r0
90018890:	fb07 970a 	mla	r7, r7, sl, r9
90018894:	fb00 500a 	mla	r0, r0, sl, r5
90018898:	f10c 0501 	add.w	r5, ip, #1
9001889c:	b2bf      	uxth	r7, r7
9001889e:	b280      	uxth	r0, r0
900188a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
900188a4:	f107 0901 	add.w	r9, r7, #1
900188a8:	1c45      	adds	r5, r0, #1
900188aa:	eb09 2917 	add.w	r9, r9, r7, lsr #8
900188ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
900188b2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
900188b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
900188ba:	f3c5 25c4 	ubfx	r5, r5, #11, #5
900188be:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900188c2:	ea45 0c0c 	orr.w	ip, r5, ip
900188c6:	ea4c 0c09 	orr.w	ip, ip, r9
900188ca:	f824 c00b 	strh.w	ip, [r4, fp]
900188ce:	9813      	ldr	r0, [sp, #76]	; 0x4c
900188d0:	f108 38ff 	add.w	r8, r8, #4294967295
900188d4:	4401      	add	r1, r0
900188d6:	9814      	ldr	r0, [sp, #80]	; 0x50
900188d8:	4402      	add	r2, r0
900188da:	e75c      	b.n	90018796 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900188dc:	b007      	add	sp, #28
900188de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900188e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900188e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900188e6:	b085      	sub	sp, #20
900188e8:	4693      	mov	fp, r2
900188ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900188ee:	9e13      	ldr	r6, [sp, #76]	; 0x4c
900188f0:	9d16      	ldr	r5, [sp, #88]	; 0x58
900188f2:	6870      	ldr	r0, [r6, #4]
900188f4:	9100      	str	r1, [sp, #0]
900188f6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
900188fa:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
900188fe:	fb00 2404 	mla	r4, r0, r4, r2
90018902:	6832      	ldr	r2, [r6, #0]
90018904:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018908:	682a      	ldr	r2, [r5, #0]
9001890a:	9201      	str	r2, [sp, #4]
9001890c:	686a      	ldr	r2, [r5, #4]
9001890e:	3204      	adds	r2, #4
90018910:	9202      	str	r2, [sp, #8]
90018912:	9a00      	ldr	r2, [sp, #0]
90018914:	2a00      	cmp	r2, #0
90018916:	dc03      	bgt.n	90018920 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90018918:	f1bb 0f00 	cmp.w	fp, #0
9001891c:	f340 80a0 	ble.w	90018a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
90018920:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018922:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018926:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001892a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001892c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018930:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018934:	2b00      	cmp	r3, #0
90018936:	dd0c      	ble.n	90018952 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018938:	1406      	asrs	r6, r0, #16
9001893a:	d405      	bmi.n	90018948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001893c:	454e      	cmp	r6, r9
9001893e:	da03      	bge.n	90018948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018940:	1416      	asrs	r6, r2, #16
90018942:	d401      	bmi.n	90018948 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90018944:	4546      	cmp	r6, r8
90018946:	db05      	blt.n	90018954 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018948:	4470      	add	r0, lr
9001894a:	4462      	add	r2, ip
9001894c:	3b01      	subs	r3, #1
9001894e:	3402      	adds	r4, #2
90018950:	e7f0      	b.n	90018934 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90018952:	d00f      	beq.n	90018974 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018954:	1e5e      	subs	r6, r3, #1
90018956:	fb0e 0706 	mla	r7, lr, r6, r0
9001895a:	143f      	asrs	r7, r7, #16
9001895c:	d541      	bpl.n	900189e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001895e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90018962:	4698      	mov	r8, r3
90018964:	9603      	str	r6, [sp, #12]
90018966:	f1b8 0f00 	cmp.w	r8, #0
9001896a:	dc59      	bgt.n	90018a20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001896c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018970:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018974:	9b00      	ldr	r3, [sp, #0]
90018976:	2b00      	cmp	r3, #0
90018978:	dd72      	ble.n	90018a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001897a:	ee30 0a04 	vadd.f32	s0, s0, s8
9001897e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018980:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018984:	eeb0 6a62 	vmov.f32	s12, s5
90018988:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001898c:	ee31 1a05 	vadd.f32	s2, s2, s10
90018990:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018994:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018998:	eeb0 6a43 	vmov.f32	s12, s6
9001899c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
900189a0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
900189a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
900189a8:	ee61 7a27 	vmul.f32	s15, s2, s15
900189ac:	ee77 2a62 	vsub.f32	s5, s14, s5
900189b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
900189b4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900189b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900189bc:	ee12 2a90 	vmov	r2, s5
900189c0:	eef0 2a47 	vmov.f32	s5, s14
900189c4:	fb92 fef3 	sdiv	lr, r2, r3
900189c8:	ee13 2a10 	vmov	r2, s6
900189cc:	eeb0 3a67 	vmov.f32	s6, s15
900189d0:	fb92 fcf3 	sdiv	ip, r2, r3
900189d4:	9b00      	ldr	r3, [sp, #0]
900189d6:	3b01      	subs	r3, #1
900189d8:	9300      	str	r3, [sp, #0]
900189da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900189dc:	bf08      	it	eq
900189de:	465b      	moveq	r3, fp
900189e0:	e797      	b.n	90018912 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
900189e2:	454f      	cmp	r7, r9
900189e4:	dabb      	bge.n	9001895e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900189e6:	fb0c 2606 	mla	r6, ip, r6, r2
900189ea:	1436      	asrs	r6, r6, #16
900189ec:	d4b7      	bmi.n	9001895e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900189ee:	4546      	cmp	r6, r8
900189f0:	dab5      	bge.n	9001895e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
900189f2:	461e      	mov	r6, r3
900189f4:	46a0      	mov	r8, r4
900189f6:	2e00      	cmp	r6, #0
900189f8:	ddb8      	ble.n	9001896c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
900189fa:	1417      	asrs	r7, r2, #16
900189fc:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90018a00:	9901      	ldr	r1, [sp, #4]
90018a02:	ea4f 4920 	mov.w	r9, r0, asr #16
90018a06:	4462      	add	r2, ip
90018a08:	4470      	add	r0, lr
90018a0a:	fb0a 1707 	mla	r7, sl, r7, r1
90018a0e:	9902      	ldr	r1, [sp, #8]
90018a10:	3e01      	subs	r6, #1
90018a12:	f817 7009 	ldrb.w	r7, [r7, r9]
90018a16:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90018a1a:	f828 7b02 	strh.w	r7, [r8], #2
90018a1e:	e7ea      	b.n	900189f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
90018a20:	ea5f 4920 	movs.w	r9, r0, asr #16
90018a24:	d417      	bmi.n	90018a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018a26:	68ae      	ldr	r6, [r5, #8]
90018a28:	454e      	cmp	r6, r9
90018a2a:	dd14      	ble.n	90018a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018a2c:	ea5f 4a22 	movs.w	sl, r2, asr #16
90018a30:	d411      	bmi.n	90018a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018a32:	68ef      	ldr	r7, [r5, #12]
90018a34:	4557      	cmp	r7, sl
90018a36:	dd0e      	ble.n	90018a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
90018a38:	9f01      	ldr	r7, [sp, #4]
90018a3a:	b236      	sxth	r6, r6
90018a3c:	f06f 0101 	mvn.w	r1, #1
90018a40:	fb0a 7606 	mla	r6, sl, r6, r7
90018a44:	9f02      	ldr	r7, [sp, #8]
90018a46:	f816 6009 	ldrb.w	r6, [r6, r9]
90018a4a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90018a4e:	fb01 f608 	mul.w	r6, r1, r8
90018a52:	9903      	ldr	r1, [sp, #12]
90018a54:	538f      	strh	r7, [r1, r6]
90018a56:	4470      	add	r0, lr
90018a58:	4462      	add	r2, ip
90018a5a:	f108 38ff 	add.w	r8, r8, #4294967295
90018a5e:	e782      	b.n	90018966 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018a60:	b005      	add	sp, #20
90018a62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90018a66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018a66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018a6a:	b087      	sub	sp, #28
90018a6c:	9c15      	ldr	r4, [sp, #84]	; 0x54
90018a6e:	9205      	str	r2, [sp, #20]
90018a70:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018a74:	9102      	str	r1, [sp, #8]
90018a76:	9203      	str	r2, [sp, #12]
90018a78:	6861      	ldr	r1, [r4, #4]
90018a7a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018a7e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
90018a82:	fb01 2000 	mla	r0, r1, r0, r2
90018a86:	6822      	ldr	r2, [r4, #0]
90018a88:	eb02 0240 	add.w	r2, r2, r0, lsl #1
90018a8c:	9200      	str	r2, [sp, #0]
90018a8e:	f8dc 2000 	ldr.w	r2, [ip]
90018a92:	9204      	str	r2, [sp, #16]
90018a94:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018a98:	3204      	adds	r2, #4
90018a9a:	9201      	str	r2, [sp, #4]
90018a9c:	9a03      	ldr	r2, [sp, #12]
90018a9e:	43d5      	mvns	r5, r2
90018aa0:	b2ed      	uxtb	r5, r5
90018aa2:	9a02      	ldr	r2, [sp, #8]
90018aa4:	2a00      	cmp	r2, #0
90018aa6:	dc03      	bgt.n	90018ab0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90018aa8:	9a05      	ldr	r2, [sp, #20]
90018aaa:	2a00      	cmp	r2, #0
90018aac:	f340 812c 	ble.w	90018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018ab0:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018ab2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
90018ab6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018aba:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018abc:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
90018ac0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018ac4:	2b00      	cmp	r3, #0
90018ac6:	dd10      	ble.n	90018aea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018ac8:	140c      	asrs	r4, r1, #16
90018aca:	d405      	bmi.n	90018ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018acc:	4574      	cmp	r4, lr
90018ace:	da03      	bge.n	90018ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018ad0:	1414      	asrs	r4, r2, #16
90018ad2:	d401      	bmi.n	90018ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018ad4:	42bc      	cmp	r4, r7
90018ad6:	db09      	blt.n	90018aec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90018ad8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90018ada:	3b01      	subs	r3, #1
90018adc:	9800      	ldr	r0, [sp, #0]
90018ade:	4421      	add	r1, r4
90018ae0:	9c14      	ldr	r4, [sp, #80]	; 0x50
90018ae2:	3002      	adds	r0, #2
90018ae4:	4422      	add	r2, r4
90018ae6:	9000      	str	r0, [sp, #0]
90018ae8:	e7ec      	b.n	90018ac4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
90018aea:	d071      	beq.n	90018bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
90018aec:	1e5c      	subs	r4, r3, #1
90018aee:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018af0:	fb06 1604 	mla	r6, r6, r4, r1
90018af4:	1436      	asrs	r6, r6, #16
90018af6:	d45d      	bmi.n	90018bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018af8:	4576      	cmp	r6, lr
90018afa:	da5b      	bge.n	90018bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018afc:	9e14      	ldr	r6, [sp, #80]	; 0x50
90018afe:	fb06 2404 	mla	r4, r6, r4, r2
90018b02:	1424      	asrs	r4, r4, #16
90018b04:	d456      	bmi.n	90018bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018b06:	42bc      	cmp	r4, r7
90018b08:	da54      	bge.n	90018bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90018b0a:	4698      	mov	r8, r3
90018b0c:	f8dd 9000 	ldr.w	r9, [sp]
90018b10:	f8bd a00c 	ldrh.w	sl, [sp, #12]
90018b14:	f1b8 0f00 	cmp.w	r8, #0
90018b18:	dd54      	ble.n	90018bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
90018b1a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018b1e:	1414      	asrs	r4, r2, #16
90018b20:	9804      	ldr	r0, [sp, #16]
90018b22:	140e      	asrs	r6, r1, #16
90018b24:	f108 38ff 	add.w	r8, r8, #4294967295
90018b28:	fb07 0404 	mla	r4, r7, r4, r0
90018b2c:	9801      	ldr	r0, [sp, #4]
90018b2e:	f814 e006 	ldrb.w	lr, [r4, r6]
90018b32:	f8b9 4000 	ldrh.w	r4, [r9]
90018b36:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018b3a:	1227      	asrs	r7, r4, #8
90018b3c:	eb00 0b0e 	add.w	fp, r0, lr
90018b40:	f810 e00e 	ldrb.w	lr, [r0, lr]
90018b44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018b48:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018b4a:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018b4e:	f89b b001 	ldrb.w	fp, [fp, #1]
90018b52:	4401      	add	r1, r0
90018b54:	fb16 f60a 	smulbb	r6, r6, sl
90018b58:	9814      	ldr	r0, [sp, #80]	; 0x50
90018b5a:	fb1b fb0a 	smulbb	fp, fp, sl
90018b5e:	fb07 6705 	mla	r7, r7, r5, r6
90018b62:	10e6      	asrs	r6, r4, #3
90018b64:	00e4      	lsls	r4, r4, #3
90018b66:	4402      	add	r2, r0
90018b68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018b6c:	b2bf      	uxth	r7, r7
90018b6e:	b2e4      	uxtb	r4, r4
90018b70:	fb06 b605 	mla	r6, r6, r5, fp
90018b74:	fb14 f405 	smulbb	r4, r4, r5
90018b78:	b2b6      	uxth	r6, r6
90018b7a:	fb0e 4e0a 	mla	lr, lr, sl, r4
90018b7e:	1c7c      	adds	r4, r7, #1
90018b80:	f106 0b01 	add.w	fp, r6, #1
90018b84:	fa1f fe8e 	uxth.w	lr, lr
90018b88:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018b8c:	f10e 0401 	add.w	r4, lr, #1
90018b90:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018b94:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018b98:	eb04 241e 	add.w	r4, r4, lr, lsr #8
90018b9c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018ba0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018ba4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018ba8:	4327      	orrs	r7, r4
90018baa:	ea47 070b 	orr.w	r7, r7, fp
90018bae:	f829 7b02 	strh.w	r7, [r9], #2
90018bb2:	e7af      	b.n	90018b14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
90018bb4:	f04f 0e00 	mov.w	lr, #0
90018bb8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
90018bbc:	eb03 040e 	add.w	r4, r3, lr
90018bc0:	2c00      	cmp	r4, #0
90018bc2:	dc43      	bgt.n	90018c4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
90018bc4:	9a00      	ldr	r2, [sp, #0]
90018bc6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018bca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90018bce:	9300      	str	r3, [sp, #0]
90018bd0:	9b02      	ldr	r3, [sp, #8]
90018bd2:	2b00      	cmp	r3, #0
90018bd4:	f340 8098 	ble.w	90018d08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
90018bd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90018bdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018bde:	ee30 0a04 	vadd.f32	s0, s0, s8
90018be2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018be6:	eef0 6a62 	vmov.f32	s13, s5
90018bea:	eec7 7a00 	vdiv.f32	s15, s14, s0
90018bee:	ee31 1a05 	vadd.f32	s2, s2, s10
90018bf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018bf6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
90018bfa:	eef0 6a43 	vmov.f32	s13, s6
90018bfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90018c02:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
90018c06:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018c0a:	ee61 7a27 	vmul.f32	s15, s2, s15
90018c0e:	ee77 2a62 	vsub.f32	s5, s14, s5
90018c12:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018c16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018c1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018c1e:	ee12 2a90 	vmov	r2, s5
90018c22:	eef0 2a47 	vmov.f32	s5, s14
90018c26:	fb92 f3f3 	sdiv	r3, r2, r3
90018c2a:	ee13 2a10 	vmov	r2, s6
90018c2e:	9313      	str	r3, [sp, #76]	; 0x4c
90018c30:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018c32:	eeb0 3a67 	vmov.f32	s6, s15
90018c36:	fb92 f3f3 	sdiv	r3, r2, r3
90018c3a:	9314      	str	r3, [sp, #80]	; 0x50
90018c3c:	9b02      	ldr	r3, [sp, #8]
90018c3e:	9a05      	ldr	r2, [sp, #20]
90018c40:	3b01      	subs	r3, #1
90018c42:	9302      	str	r3, [sp, #8]
90018c44:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018c46:	bf08      	it	eq
90018c48:	4613      	moveq	r3, r2
90018c4a:	e72a      	b.n	90018aa2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018c4c:	140f      	asrs	r7, r1, #16
90018c4e:	d454      	bmi.n	90018cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018c50:	f8dc 6008 	ldr.w	r6, [ip, #8]
90018c54:	42be      	cmp	r6, r7
90018c56:	dd50      	ble.n	90018cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018c58:	ea5f 4822 	movs.w	r8, r2, asr #16
90018c5c:	d44d      	bmi.n	90018cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018c5e:	f8dc 400c 	ldr.w	r4, [ip, #12]
90018c62:	4544      	cmp	r4, r8
90018c64:	dd49      	ble.n	90018cfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
90018c66:	9c04      	ldr	r4, [sp, #16]
90018c68:	b236      	sxth	r6, r6
90018c6a:	f06f 0001 	mvn.w	r0, #1
90018c6e:	fb08 4606 	mla	r6, r8, r6, r4
90018c72:	9c01      	ldr	r4, [sp, #4]
90018c74:	fb00 fa0e 	mul.w	sl, r0, lr
90018c78:	9800      	ldr	r0, [sp, #0]
90018c7a:	f816 8007 	ldrb.w	r8, [r6, r7]
90018c7e:	eb08 0848 	add.w	r8, r8, r8, lsl #1
90018c82:	eb04 0b08 	add.w	fp, r4, r8
90018c86:	f830 400a 	ldrh.w	r4, [r0, sl]
90018c8a:	9801      	ldr	r0, [sp, #4]
90018c8c:	f89b 6002 	ldrb.w	r6, [fp, #2]
90018c90:	1227      	asrs	r7, r4, #8
90018c92:	f89b b001 	ldrb.w	fp, [fp, #1]
90018c96:	fb16 f609 	smulbb	r6, r6, r9
90018c9a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90018c9e:	f810 8008 	ldrb.w	r8, [r0, r8]
90018ca2:	fb1b fb09 	smulbb	fp, fp, r9
90018ca6:	fb07 6705 	mla	r7, r7, r5, r6
90018caa:	10e6      	asrs	r6, r4, #3
90018cac:	00e4      	lsls	r4, r4, #3
90018cae:	9800      	ldr	r0, [sp, #0]
90018cb0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90018cb4:	b2bf      	uxth	r7, r7
90018cb6:	b2e4      	uxtb	r4, r4
90018cb8:	fb06 b605 	mla	r6, r6, r5, fp
90018cbc:	fb14 f405 	smulbb	r4, r4, r5
90018cc0:	b2b6      	uxth	r6, r6
90018cc2:	fb08 4809 	mla	r8, r8, r9, r4
90018cc6:	1c7c      	adds	r4, r7, #1
90018cc8:	f106 0b01 	add.w	fp, r6, #1
90018ccc:	fa1f f888 	uxth.w	r8, r8
90018cd0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
90018cd4:	f108 0401 	add.w	r4, r8, #1
90018cd8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
90018cdc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90018ce0:	eb04 2418 	add.w	r4, r4, r8, lsr #8
90018ce4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90018ce8:	f3c4 24c4 	ubfx	r4, r4, #11, #5
90018cec:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90018cf0:	4327      	orrs	r7, r4
90018cf2:	ea47 070b 	orr.w	r7, r7, fp
90018cf6:	f820 700a 	strh.w	r7, [r0, sl]
90018cfa:	9813      	ldr	r0, [sp, #76]	; 0x4c
90018cfc:	f10e 3eff 	add.w	lr, lr, #4294967295
90018d00:	4401      	add	r1, r0
90018d02:	9814      	ldr	r0, [sp, #80]	; 0x50
90018d04:	4402      	add	r2, r0
90018d06:	e759      	b.n	90018bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90018d08:	b007      	add	sp, #28
90018d0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

90018d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018d14:	b085      	sub	sp, #20
90018d16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018d1a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90018d1c:	9d16      	ldr	r5, [sp, #88]	; 0x58
90018d1e:	9203      	str	r2, [sp, #12]
90018d20:	6870      	ldr	r0, [r6, #4]
90018d22:	686f      	ldr	r7, [r5, #4]
90018d24:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
90018d28:	3704      	adds	r7, #4
90018d2a:	9101      	str	r1, [sp, #4]
90018d2c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90018d30:	fb00 2404 	mla	r4, r0, r4, r2
90018d34:	6832      	ldr	r2, [r6, #0]
90018d36:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018d3a:	682a      	ldr	r2, [r5, #0]
90018d3c:	9202      	str	r2, [sp, #8]
90018d3e:	9a01      	ldr	r2, [sp, #4]
90018d40:	2a00      	cmp	r2, #0
90018d42:	dc03      	bgt.n	90018d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90018d44:	9a03      	ldr	r2, [sp, #12]
90018d46:	2a00      	cmp	r2, #0
90018d48:	f340 80cc 	ble.w	90018ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018d4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90018d4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018d52:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018d56:	9a10      	ldr	r2, [sp, #64]	; 0x40
90018d58:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90018d5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90018d60:	2b00      	cmp	r3, #0
90018d62:	dd0d      	ble.n	90018d80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90018d64:	1406      	asrs	r6, r0, #16
90018d66:	d405      	bmi.n	90018d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018d68:	454e      	cmp	r6, r9
90018d6a:	da03      	bge.n	90018d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018d6c:	1416      	asrs	r6, r2, #16
90018d6e:	d401      	bmi.n	90018d74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
90018d70:	4546      	cmp	r6, r8
90018d72:	db06      	blt.n	90018d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90018d74:	9e12      	ldr	r6, [sp, #72]	; 0x48
90018d76:	4460      	add	r0, ip
90018d78:	3b01      	subs	r3, #1
90018d7a:	3402      	adds	r4, #2
90018d7c:	4432      	add	r2, r6
90018d7e:	e7ef      	b.n	90018d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
90018d80:	d00f      	beq.n	90018da2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90018d82:	1e5e      	subs	r6, r3, #1
90018d84:	fb0c 0e06 	mla	lr, ip, r6, r0
90018d88:	ea5f 4e2e 	movs.w	lr, lr, asr #16
90018d8c:	d543      	bpl.n	90018e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
90018d8e:	4698      	mov	r8, r3
90018d90:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
90018d94:	f1b8 0f00 	cmp.w	r8, #0
90018d98:	dc71      	bgt.n	90018e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
90018d9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018d9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018da2:	9b01      	ldr	r3, [sp, #4]
90018da4:	2b00      	cmp	r3, #0
90018da6:	f340 809d 	ble.w	90018ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
90018daa:	ee30 0a04 	vadd.f32	s0, s0, s8
90018dae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018db0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018db4:	eeb0 6a62 	vmov.f32	s12, s5
90018db8:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018dbc:	ee31 1a05 	vadd.f32	s2, s2, s10
90018dc0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018dc4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90018dc8:	eeb0 6a43 	vmov.f32	s12, s6
90018dcc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018dd0:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90018dd4:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018dd8:	ee61 7a27 	vmul.f32	s15, s2, s15
90018ddc:	ee77 2a62 	vsub.f32	s5, s14, s5
90018de0:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018de4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018de8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018dec:	ee12 2a90 	vmov	r2, s5
90018df0:	eef0 2a47 	vmov.f32	s5, s14
90018df4:	fb92 fcf3 	sdiv	ip, r2, r3
90018df8:	ee13 2a10 	vmov	r2, s6
90018dfc:	eeb0 3a67 	vmov.f32	s6, s15
90018e00:	fb92 f3f3 	sdiv	r3, r2, r3
90018e04:	9312      	str	r3, [sp, #72]	; 0x48
90018e06:	9b01      	ldr	r3, [sp, #4]
90018e08:	9a03      	ldr	r2, [sp, #12]
90018e0a:	3b01      	subs	r3, #1
90018e0c:	9301      	str	r3, [sp, #4]
90018e0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90018e10:	bf08      	it	eq
90018e12:	4613      	moveq	r3, r2
90018e14:	e793      	b.n	90018d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90018e16:	45ce      	cmp	lr, r9
90018e18:	dab9      	bge.n	90018d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018e1a:	9912      	ldr	r1, [sp, #72]	; 0x48
90018e1c:	fb01 2606 	mla	r6, r1, r6, r2
90018e20:	1436      	asrs	r6, r6, #16
90018e22:	d4b4      	bmi.n	90018d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018e24:	4546      	cmp	r6, r8
90018e26:	dab2      	bge.n	90018d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018e28:	4698      	mov	r8, r3
90018e2a:	46a2      	mov	sl, r4
90018e2c:	f1b8 0f00 	cmp.w	r8, #0
90018e30:	ddb3      	ble.n	90018d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90018e32:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90018e36:	1416      	asrs	r6, r2, #16
90018e38:	9902      	ldr	r1, [sp, #8]
90018e3a:	ea4f 4e20 	mov.w	lr, r0, asr #16
90018e3e:	f108 38ff 	add.w	r8, r8, #4294967295
90018e42:	4460      	add	r0, ip
90018e44:	fb09 1606 	mla	r6, r9, r6, r1
90018e48:	4928      	ldr	r1, [pc, #160]	; (90018eec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
90018e4a:	f816 e00e 	ldrb.w	lr, [r6, lr]
90018e4e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018e52:	eb07 0b0e 	add.w	fp, r7, lr
90018e56:	f89b 6001 	ldrb.w	r6, [fp, #1]
90018e5a:	f89b 9002 	ldrb.w	r9, [fp, #2]
90018e5e:	00f6      	lsls	r6, r6, #3
90018e60:	ea01 2909 	and.w	r9, r1, r9, lsl #8
90018e64:	9912      	ldr	r1, [sp, #72]	; 0x48
90018e66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018e6a:	440a      	add	r2, r1
90018e6c:	ea49 0606 	orr.w	r6, r9, r6
90018e70:	f817 900e 	ldrb.w	r9, [r7, lr]
90018e74:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
90018e78:	f82a 6b02 	strh.w	r6, [sl], #2
90018e7c:	e7d6      	b.n	90018e2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90018e7e:	ea5f 4920 	movs.w	r9, r0, asr #16
90018e82:	d429      	bmi.n	90018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018e84:	68ae      	ldr	r6, [r5, #8]
90018e86:	454e      	cmp	r6, r9
90018e88:	dd26      	ble.n	90018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018e8a:	ea5f 4b22 	movs.w	fp, r2, asr #16
90018e8e:	d423      	bmi.n	90018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018e90:	68e9      	ldr	r1, [r5, #12]
90018e92:	4559      	cmp	r1, fp
90018e94:	dd20      	ble.n	90018ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90018e96:	fa0f fe86 	sxth.w	lr, r6
90018e9a:	9902      	ldr	r1, [sp, #8]
90018e9c:	fb0b 1e0e 	mla	lr, fp, lr, r1
90018ea0:	f06f 0101 	mvn.w	r1, #1
90018ea4:	f81e e009 	ldrb.w	lr, [lr, r9]
90018ea8:	fb01 f908 	mul.w	r9, r1, r8
90018eac:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
90018eb0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
90018eb4:	eb07 060e 	add.w	r6, r7, lr
90018eb8:	f896 b002 	ldrb.w	fp, [r6, #2]
90018ebc:	7876      	ldrb	r6, [r6, #1]
90018ebe:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
90018ec2:	00f6      	lsls	r6, r6, #3
90018ec4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
90018ec8:	ea4b 0606 	orr.w	r6, fp, r6
90018ecc:	f817 b00e 	ldrb.w	fp, [r7, lr]
90018ed0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
90018ed4:	f82a 6009 	strh.w	r6, [sl, r9]
90018ed8:	9912      	ldr	r1, [sp, #72]	; 0x48
90018eda:	4460      	add	r0, ip
90018edc:	f108 38ff 	add.w	r8, r8, #4294967295
90018ee0:	440a      	add	r2, r1
90018ee2:	e757      	b.n	90018d94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90018ee4:	b005      	add	sp, #20
90018ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018eea:	bf00      	nop
90018eec:	fffff800 	.word	0xfffff800

90018ef0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90018ef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018ef4:	b087      	sub	sp, #28
90018ef6:	468b      	mov	fp, r1
90018ef8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90018efc:	9815      	ldr	r0, [sp, #84]	; 0x54
90018efe:	9204      	str	r2, [sp, #16]
90018f00:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90018f04:	6841      	ldr	r1, [r0, #4]
90018f06:	9205      	str	r2, [sp, #20]
90018f08:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
90018f0c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
90018f10:	fb01 2404 	mla	r4, r1, r4, r2
90018f14:	6802      	ldr	r2, [r0, #0]
90018f16:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90018f1a:	f8dc 2000 	ldr.w	r2, [ip]
90018f1e:	9201      	str	r2, [sp, #4]
90018f20:	f8dc 2004 	ldr.w	r2, [ip, #4]
90018f24:	3204      	adds	r2, #4
90018f26:	9202      	str	r2, [sp, #8]
90018f28:	f1bb 0f00 	cmp.w	fp, #0
90018f2c:	dc03      	bgt.n	90018f36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90018f2e:	9a04      	ldr	r2, [sp, #16]
90018f30:	2a00      	cmp	r2, #0
90018f32:	f340 8138 	ble.w	900191a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018f36:	9a11      	ldr	r2, [sp, #68]	; 0x44
90018f38:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
90018f3c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90018f40:	9a12      	ldr	r2, [sp, #72]	; 0x48
90018f42:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
90018f46:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90018f4a:	2b00      	cmp	r3, #0
90018f4c:	dd0e      	ble.n	90018f6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90018f4e:	1402      	asrs	r2, r0, #16
90018f50:	d405      	bmi.n	90018f5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018f52:	42ba      	cmp	r2, r7
90018f54:	da03      	bge.n	90018f5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018f56:	140a      	asrs	r2, r1, #16
90018f58:	d401      	bmi.n	90018f5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90018f5a:	42b2      	cmp	r2, r6
90018f5c:	db07      	blt.n	90018f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90018f5e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90018f60:	3b01      	subs	r3, #1
90018f62:	3402      	adds	r4, #2
90018f64:	4410      	add	r0, r2
90018f66:	9a14      	ldr	r2, [sp, #80]	; 0x50
90018f68:	4411      	add	r1, r2
90018f6a:	e7ee      	b.n	90018f4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90018f6c:	d019      	beq.n	90018fa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
90018f6e:	1e5a      	subs	r2, r3, #1
90018f70:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90018f72:	fb05 0502 	mla	r5, r5, r2, r0
90018f76:	142d      	asrs	r5, r5, #16
90018f78:	d409      	bmi.n	90018f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018f7a:	42bd      	cmp	r5, r7
90018f7c:	da07      	bge.n	90018f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018f7e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90018f80:	fb05 1202 	mla	r2, r5, r2, r1
90018f84:	1412      	asrs	r2, r2, #16
90018f86:	d402      	bmi.n	90018f8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90018f88:	42b2      	cmp	r2, r6
90018f8a:	f2c0 80ac 	blt.w	900190e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
90018f8e:	f04f 0e00 	mov.w	lr, #0
90018f92:	eb03 020e 	add.w	r2, r3, lr
90018f96:	2a00      	cmp	r2, #0
90018f98:	dc3e      	bgt.n	90019018 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
90018f9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90018f9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018fa2:	f1bb 0f00 	cmp.w	fp, #0
90018fa6:	f340 80fe 	ble.w	900191a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
90018faa:	ee30 0a04 	vadd.f32	s0, s0, s8
90018fae:	9b10      	ldr	r3, [sp, #64]	; 0x40
90018fb0:	ee70 0aa4 	vadd.f32	s1, s1, s9
90018fb4:	f1bb 0b01 	subs.w	fp, fp, #1
90018fb8:	eeb0 6a62 	vmov.f32	s12, s5
90018fbc:	eec6 7a80 	vdiv.f32	s15, s13, s0
90018fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
90018fc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fc8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90018fcc:	eeb0 6a43 	vmov.f32	s12, s6
90018fd0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90018fd4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90018fd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90018fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
90018fe0:	ee77 2a62 	vsub.f32	s5, s14, s5
90018fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90018fe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90018fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90018ff0:	ee12 2a90 	vmov	r2, s5
90018ff4:	eef0 2a47 	vmov.f32	s5, s14
90018ff8:	fb92 f3f3 	sdiv	r3, r2, r3
90018ffc:	ee13 2a10 	vmov	r2, s6
90019000:	9313      	str	r3, [sp, #76]	; 0x4c
90019002:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019004:	eeb0 3a67 	vmov.f32	s6, s15
90019008:	fb92 f3f3 	sdiv	r3, r2, r3
9001900c:	9a04      	ldr	r2, [sp, #16]
9001900e:	9314      	str	r3, [sp, #80]	; 0x50
90019010:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019012:	bf08      	it	eq
90019014:	4613      	moveq	r3, r2
90019016:	e787      	b.n	90018f28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019018:	1406      	asrs	r6, r0, #16
9001901a:	d45d      	bmi.n	900190d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001901c:	f8dc 5008 	ldr.w	r5, [ip, #8]
90019020:	42b5      	cmp	r5, r6
90019022:	dd59      	ble.n	900190d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019024:	140f      	asrs	r7, r1, #16
90019026:	d457      	bmi.n	900190d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019028:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001902c:	42ba      	cmp	r2, r7
9001902e:	dd53      	ble.n	900190d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019030:	9a01      	ldr	r2, [sp, #4]
90019032:	b22d      	sxth	r5, r5
90019034:	fb07 2505 	mla	r5, r7, r5, r2
90019038:	5daa      	ldrb	r2, [r5, r6]
9001903a:	9d02      	ldr	r5, [sp, #8]
9001903c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
90019040:	0e2e      	lsrs	r6, r5, #24
90019042:	d049      	beq.n	900190d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
90019044:	f06f 0201 	mvn.w	r2, #1
90019048:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001904c:	fb02 f20e 	mul.w	r2, r2, lr
90019050:	f834 8002 	ldrh.w	r8, [r4, r2]
90019054:	9203      	str	r2, [sp, #12]
90019056:	9a05      	ldr	r2, [sp, #20]
90019058:	ea4f 2728 	mov.w	r7, r8, asr #8
9001905c:	4356      	muls	r6, r2
9001905e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019062:	1c72      	adds	r2, r6, #1
90019064:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019068:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001906c:	b2ed      	uxtb	r5, r5
9001906e:	1212      	asrs	r2, r2, #8
90019070:	fa1f f982 	uxth.w	r9, r2
90019074:	43d2      	mvns	r2, r2
90019076:	fb16 f609 	smulbb	r6, r6, r9
9001907a:	b2d2      	uxtb	r2, r2
9001907c:	fb15 f509 	smulbb	r5, r5, r9
90019080:	fb07 6702 	mla	r7, r7, r2, r6
90019084:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019088:	fb1a fa09 	smulbb	sl, sl, r9
9001908c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
90019090:	b2bf      	uxth	r7, r7
90019092:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019096:	fa5f f888 	uxtb.w	r8, r8
9001909a:	fb06 a602 	mla	r6, r6, r2, sl
9001909e:	fb08 5502 	mla	r5, r8, r2, r5
900190a2:	1c7a      	adds	r2, r7, #1
900190a4:	b2b6      	uxth	r6, r6
900190a6:	b2ad      	uxth	r5, r5
900190a8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
900190ac:	9a03      	ldr	r2, [sp, #12]
900190ae:	f105 0a01 	add.w	sl, r5, #1
900190b2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
900190b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
900190ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
900190be:	ea4a 0707 	orr.w	r7, sl, r7
900190c2:	f106 0a01 	add.w	sl, r6, #1
900190c6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
900190ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900190ce:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900190d2:	ea47 070a 	orr.w	r7, r7, sl
900190d6:	52a7      	strh	r7, [r4, r2]
900190d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
900190da:	f10e 3eff 	add.w	lr, lr, #4294967295
900190de:	4410      	add	r0, r2
900190e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
900190e2:	4411      	add	r1, r2
900190e4:	e755      	b.n	90018f92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
900190e6:	f04f 0800 	mov.w	r8, #0
900190ea:	eba3 0208 	sub.w	r2, r3, r8
900190ee:	2a00      	cmp	r2, #0
900190f0:	f77f af53 	ble.w	90018f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
900190f4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
900190f8:	140a      	asrs	r2, r1, #16
900190fa:	9f01      	ldr	r7, [sp, #4]
900190fc:	1405      	asrs	r5, r0, #16
900190fe:	fb06 7202 	mla	r2, r6, r2, r7
90019102:	5d52      	ldrb	r2, [r2, r5]
90019104:	9d02      	ldr	r5, [sp, #8]
90019106:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001910a:	0e2e      	lsrs	r6, r5, #24
9001910c:	d044      	beq.n	90019198 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001910e:	9a05      	ldr	r2, [sp, #20]
90019110:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019114:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
90019118:	4356      	muls	r6, r2
9001911a:	ea4f 272e 	mov.w	r7, lr, asr #8
9001911e:	1c72      	adds	r2, r6, #1
90019120:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019124:	eb02 2226 	add.w	r2, r2, r6, asr #8
90019128:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001912c:	b2ed      	uxtb	r5, r5
9001912e:	1212      	asrs	r2, r2, #8
90019130:	fa1f f982 	uxth.w	r9, r2
90019134:	43d2      	mvns	r2, r2
90019136:	fb16 f609 	smulbb	r6, r6, r9
9001913a:	b2d2      	uxtb	r2, r2
9001913c:	fb15 f509 	smulbb	r5, r5, r9
90019140:	fb07 6702 	mla	r7, r7, r2, r6
90019144:	ea4f 06ee 	mov.w	r6, lr, asr #3
90019148:	fb1a fa09 	smulbb	sl, sl, r9
9001914c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90019150:	b2bf      	uxth	r7, r7
90019152:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019156:	fa5f fe8e 	uxtb.w	lr, lr
9001915a:	fb06 a602 	mla	r6, r6, r2, sl
9001915e:	fb0e 5502 	mla	r5, lr, r2, r5
90019162:	1c7a      	adds	r2, r7, #1
90019164:	b2b6      	uxth	r6, r6
90019166:	b2ad      	uxth	r5, r5
90019168:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001916c:	f105 0a01 	add.w	sl, r5, #1
90019170:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
90019174:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019178:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001917c:	ea4a 0707 	orr.w	r7, sl, r7
90019180:	f106 0a01 	add.w	sl, r6, #1
90019184:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019188:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001918c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019190:	ea47 070a 	orr.w	r7, r7, sl
90019194:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019198:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001919a:	f108 0801 	add.w	r8, r8, #1
9001919e:	4410      	add	r0, r2
900191a0:	9a14      	ldr	r2, [sp, #80]	; 0x50
900191a2:	4411      	add	r1, r2
900191a4:	e7a1      	b.n	900190ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
900191a6:	b007      	add	sp, #28
900191a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900191ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900191ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900191b0:	b085      	sub	sp, #20
900191b2:	468b      	mov	fp, r1
900191b4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900191b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
900191ba:	9203      	str	r2, [sp, #12]
900191bc:	6841      	ldr	r1, [r0, #4]
900191be:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
900191c2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
900191c6:	fb01 2404 	mla	r4, r1, r4, r2
900191ca:	6802      	ldr	r2, [r0, #0]
900191cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
900191d0:	f8de 2000 	ldr.w	r2, [lr]
900191d4:	9200      	str	r2, [sp, #0]
900191d6:	f8de 2004 	ldr.w	r2, [lr, #4]
900191da:	3204      	adds	r2, #4
900191dc:	9201      	str	r2, [sp, #4]
900191de:	f1bb 0f00 	cmp.w	fp, #0
900191e2:	dc03      	bgt.n	900191ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
900191e4:	9a03      	ldr	r2, [sp, #12]
900191e6:	2a00      	cmp	r2, #0
900191e8:	f340 8153 	ble.w	90019492 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
900191ec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900191ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900191f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900191f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
900191f8:	f9be 600c 	ldrsh.w	r6, [lr, #12]
900191fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019200:	2b00      	cmp	r3, #0
90019202:	dd0e      	ble.n	90019222 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019204:	1408      	asrs	r0, r1, #16
90019206:	d405      	bmi.n	90019214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019208:	42b8      	cmp	r0, r7
9001920a:	da03      	bge.n	90019214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001920c:	1410      	asrs	r0, r2, #16
9001920e:	d401      	bmi.n	90019214 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019210:	42b0      	cmp	r0, r6
90019212:	db07      	blt.n	90019224 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019214:	9811      	ldr	r0, [sp, #68]	; 0x44
90019216:	3b01      	subs	r3, #1
90019218:	3402      	adds	r4, #2
9001921a:	4401      	add	r1, r0
9001921c:	9812      	ldr	r0, [sp, #72]	; 0x48
9001921e:	4402      	add	r2, r0
90019220:	e7ee      	b.n	90019200 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019222:	d017      	beq.n	90019254 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
90019224:	1e58      	subs	r0, r3, #1
90019226:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019228:	fb05 1500 	mla	r5, r5, r0, r1
9001922c:	142d      	asrs	r5, r5, #16
9001922e:	d409      	bmi.n	90019244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019230:	42bd      	cmp	r5, r7
90019232:	da07      	bge.n	90019244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019234:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019236:	fb05 2000 	mla	r0, r5, r0, r2
9001923a:	1400      	asrs	r0, r0, #16
9001923c:	d402      	bmi.n	90019244 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001923e:	42b0      	cmp	r0, r6
90019240:	f2c0 80bc 	blt.w	900193bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
90019244:	2600      	movs	r6, #0
90019246:	1998      	adds	r0, r3, r6
90019248:	2800      	cmp	r0, #0
9001924a:	dc3e      	bgt.n	900192ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001924c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019250:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019254:	f1bb 0f00 	cmp.w	fp, #0
90019258:	f340 811b 	ble.w	90019492 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001925c:	ee30 0a04 	vadd.f32	s0, s0, s8
90019260:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019262:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019266:	f1bb 0b01 	subs.w	fp, fp, #1
9001926a:	eeb0 6a62 	vmov.f32	s12, s5
9001926e:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019272:	ee31 1a05 	vadd.f32	s2, s2, s10
90019276:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001927a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001927e:	eeb0 6a43 	vmov.f32	s12, s6
90019282:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019286:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001928a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001928e:	ee61 7a27 	vmul.f32	s15, s2, s15
90019292:	ee77 2a62 	vsub.f32	s5, s14, s5
90019296:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001929a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001929e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900192a2:	ee12 2a90 	vmov	r2, s5
900192a6:	eef0 2a47 	vmov.f32	s5, s14
900192aa:	fb92 f3f3 	sdiv	r3, r2, r3
900192ae:	ee13 2a10 	vmov	r2, s6
900192b2:	9311      	str	r3, [sp, #68]	; 0x44
900192b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900192b6:	eeb0 3a67 	vmov.f32	s6, s15
900192ba:	fb92 f3f3 	sdiv	r3, r2, r3
900192be:	9a03      	ldr	r2, [sp, #12]
900192c0:	9312      	str	r3, [sp, #72]	; 0x48
900192c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900192c4:	bf08      	it	eq
900192c6:	4613      	moveq	r3, r2
900192c8:	e789      	b.n	900191de <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
900192ca:	140f      	asrs	r7, r1, #16
900192cc:	d426      	bmi.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900192ce:	f8de 5008 	ldr.w	r5, [lr, #8]
900192d2:	42bd      	cmp	r5, r7
900192d4:	dd22      	ble.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900192d6:	ea5f 4c22 	movs.w	ip, r2, asr #16
900192da:	d41f      	bmi.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900192dc:	f8de 000c 	ldr.w	r0, [lr, #12]
900192e0:	4560      	cmp	r0, ip
900192e2:	dd1b      	ble.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900192e4:	9800      	ldr	r0, [sp, #0]
900192e6:	b22d      	sxth	r5, r5
900192e8:	fb0c 0505 	mla	r5, ip, r5, r0
900192ec:	5de8      	ldrb	r0, [r5, r7]
900192ee:	9d01      	ldr	r5, [sp, #4]
900192f0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
900192f4:	0e07      	lsrs	r7, r0, #24
900192f6:	2fff      	cmp	r7, #255	; 0xff
900192f8:	d116      	bne.n	90019328 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
900192fa:	f06f 0501 	mvn.w	r5, #1
900192fe:	fb05 f706 	mul.w	r7, r5, r6
90019302:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
90019306:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001930a:	0945      	lsrs	r5, r0, #5
9001930c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
90019310:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90019314:	ea4c 0505 	orr.w	r5, ip, r5
90019318:	4305      	orrs	r5, r0
9001931a:	53e5      	strh	r5, [r4, r7]
9001931c:	9811      	ldr	r0, [sp, #68]	; 0x44
9001931e:	3e01      	subs	r6, #1
90019320:	4401      	add	r1, r0
90019322:	9812      	ldr	r0, [sp, #72]	; 0x48
90019324:	4402      	add	r2, r0
90019326:	e78e      	b.n	90019246 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90019328:	b2fd      	uxtb	r5, r7
9001932a:	2f00      	cmp	r7, #0
9001932c:	d0f6      	beq.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001932e:	f06f 0701 	mvn.w	r7, #1
90019332:	fa1f f985 	uxth.w	r9, r5
90019336:	43ed      	mvns	r5, r5
90019338:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001933c:	4377      	muls	r7, r6
9001933e:	fb1a fa09 	smulbb	sl, sl, r9
90019342:	b2ed      	uxtb	r5, r5
90019344:	f834 8007 	ldrh.w	r8, [r4, r7]
90019348:	9702      	str	r7, [sp, #8]
9001934a:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001934e:	ea4f 2c28 	mov.w	ip, r8, asr #8
90019352:	fb17 f709 	smulbb	r7, r7, r9
90019356:	b2c0      	uxtb	r0, r0
90019358:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001935c:	fb10 f009 	smulbb	r0, r0, r9
90019360:	fb0c 7c05 	mla	ip, ip, r5, r7
90019364:	ea4f 07e8 	mov.w	r7, r8, asr #3
90019368:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001936c:	fa1f fc8c 	uxth.w	ip, ip
90019370:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019374:	fa5f f888 	uxtb.w	r8, r8
90019378:	fb07 a705 	mla	r7, r7, r5, sl
9001937c:	fb08 0005 	mla	r0, r8, r5, r0
90019380:	f10c 0501 	add.w	r5, ip, #1
90019384:	b2bf      	uxth	r7, r7
90019386:	b280      	uxth	r0, r0
90019388:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001938c:	f100 0a01 	add.w	sl, r0, #1
90019390:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019394:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
90019398:	9802      	ldr	r0, [sp, #8]
9001939a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001939e:	ea4a 0c0c 	orr.w	ip, sl, ip
900193a2:	f107 0a01 	add.w	sl, r7, #1
900193a6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
900193aa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
900193ae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
900193b2:	ea4c 0c0a 	orr.w	ip, ip, sl
900193b6:	f824 c000 	strh.w	ip, [r4, r0]
900193ba:	e7af      	b.n	9001931c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
900193bc:	f04f 0800 	mov.w	r8, #0
900193c0:	eba3 0008 	sub.w	r0, r3, r8
900193c4:	2800      	cmp	r0, #0
900193c6:	f77f af41 	ble.w	9001924c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
900193ca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900193ce:	1410      	asrs	r0, r2, #16
900193d0:	9f00      	ldr	r7, [sp, #0]
900193d2:	140d      	asrs	r5, r1, #16
900193d4:	fb06 7000 	mla	r0, r6, r0, r7
900193d8:	5d40      	ldrb	r0, [r0, r5]
900193da:	9d01      	ldr	r5, [sp, #4]
900193dc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
900193e0:	0e2e      	lsrs	r6, r5, #24
900193e2:	2eff      	cmp	r6, #255	; 0xff
900193e4:	d112      	bne.n	9001940c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
900193e6:	482c      	ldr	r0, [pc, #176]	; (90019498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
900193e8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
900193ec:	0968      	lsrs	r0, r5, #5
900193ee:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900193f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900193f6:	4330      	orrs	r0, r6
900193f8:	4328      	orrs	r0, r5
900193fa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
900193fe:	9811      	ldr	r0, [sp, #68]	; 0x44
90019400:	f108 0801 	add.w	r8, r8, #1
90019404:	4401      	add	r1, r0
90019406:	9812      	ldr	r0, [sp, #72]	; 0x48
90019408:	4402      	add	r2, r0
9001940a:	e7d9      	b.n	900193c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001940c:	b2f0      	uxtb	r0, r6
9001940e:	2e00      	cmp	r6, #0
90019410:	d0f5      	beq.n	900193fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019412:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
90019416:	fa1f f980 	uxth.w	r9, r0
9001941a:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001941e:	43c0      	mvns	r0, r0
90019420:	ea4f 272c 	mov.w	r7, ip, asr #8
90019424:	f3c5 2a07 	ubfx	sl, r5, #8, #8
90019428:	fb16 f609 	smulbb	r6, r6, r9
9001942c:	b2c0      	uxtb	r0, r0
9001942e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019432:	b2ed      	uxtb	r5, r5
90019434:	fb1a fa09 	smulbb	sl, sl, r9
90019438:	fb07 6700 	mla	r7, r7, r0, r6
9001943c:	ea4f 06ec 	mov.w	r6, ip, asr #3
90019440:	fb15 f509 	smulbb	r5, r5, r9
90019444:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90019448:	b2bf      	uxth	r7, r7
9001944a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001944e:	fa5f fc8c 	uxtb.w	ip, ip
90019452:	fb06 a600 	mla	r6, r6, r0, sl
90019456:	fb0c 5500 	mla	r5, ip, r0, r5
9001945a:	1c78      	adds	r0, r7, #1
9001945c:	b2b6      	uxth	r6, r6
9001945e:	b2ad      	uxth	r5, r5
90019460:	eb00 2717 	add.w	r7, r0, r7, lsr #8
90019464:	f105 0a01 	add.w	sl, r5, #1
90019468:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001946c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019470:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019474:	ea4a 0707 	orr.w	r7, sl, r7
90019478:	f106 0a01 	add.w	sl, r6, #1
9001947c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019480:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019484:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019488:	ea47 070a 	orr.w	r7, r7, sl
9001948c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
90019490:	e7b5      	b.n	900193fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90019492:	b005      	add	sp, #20
90019494:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90019498:	fffff800 	.word	0xfffff800

9001949c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001949c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900194a0:	b087      	sub	sp, #28
900194a2:	468b      	mov	fp, r1
900194a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
900194a8:	9c15      	ldr	r4, [sp, #84]	; 0x54
900194aa:	9204      	str	r2, [sp, #16]
900194ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
900194b0:	6861      	ldr	r1, [r4, #4]
900194b2:	9205      	str	r2, [sp, #20]
900194b4:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
900194b8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
900194bc:	fb01 2000 	mla	r0, r1, r0, r2
900194c0:	6822      	ldr	r2, [r4, #0]
900194c2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
900194c6:	f8de 2000 	ldr.w	r2, [lr]
900194ca:	9201      	str	r2, [sp, #4]
900194cc:	f8de 2004 	ldr.w	r2, [lr, #4]
900194d0:	9202      	str	r2, [sp, #8]
900194d2:	f1bb 0f00 	cmp.w	fp, #0
900194d6:	dc03      	bgt.n	900194e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
900194d8:	9a04      	ldr	r2, [sp, #16]
900194da:	2a00      	cmp	r2, #0
900194dc:	f340 8142 	ble.w	90019764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
900194e0:	9a11      	ldr	r2, [sp, #68]	; 0x44
900194e2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
900194e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900194ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
900194ec:	f9be 600c 	ldrsh.w	r6, [lr, #12]
900194f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900194f4:	2b00      	cmp	r3, #0
900194f6:	dd0e      	ble.n	90019516 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
900194f8:	140c      	asrs	r4, r1, #16
900194fa:	d405      	bmi.n	90019508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900194fc:	42bc      	cmp	r4, r7
900194fe:	da03      	bge.n	90019508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019500:	1414      	asrs	r4, r2, #16
90019502:	d401      	bmi.n	90019508 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019504:	42b4      	cmp	r4, r6
90019506:	db07      	blt.n	90019518 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90019508:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001950a:	3b01      	subs	r3, #1
9001950c:	3002      	adds	r0, #2
9001950e:	4421      	add	r1, r4
90019510:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019512:	4422      	add	r2, r4
90019514:	e7ee      	b.n	900194f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90019516:	d019      	beq.n	9001954c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
90019518:	1e5c      	subs	r4, r3, #1
9001951a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001951c:	fb05 1504 	mla	r5, r5, r4, r1
90019520:	142d      	asrs	r5, r5, #16
90019522:	d409      	bmi.n	90019538 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019524:	42bd      	cmp	r5, r7
90019526:	da07      	bge.n	90019538 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019528:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001952a:	fb05 2404 	mla	r4, r5, r4, r2
9001952e:	1424      	asrs	r4, r4, #16
90019530:	d402      	bmi.n	90019538 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90019532:	42b4      	cmp	r4, r6
90019534:	f2c0 80b1 	blt.w	9001969a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
90019538:	f04f 0800 	mov.w	r8, #0
9001953c:	eb03 0408 	add.w	r4, r3, r8
90019540:	2c00      	cmp	r4, #0
90019542:	dc3e      	bgt.n	900195c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
90019544:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019548:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001954c:	f1bb 0f00 	cmp.w	fp, #0
90019550:	f340 8108 	ble.w	90019764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
90019554:	ee30 0a04 	vadd.f32	s0, s0, s8
90019558:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001955a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001955e:	f1bb 0b01 	subs.w	fp, fp, #1
90019562:	eeb0 6a62 	vmov.f32	s12, s5
90019566:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001956a:	ee31 1a05 	vadd.f32	s2, s2, s10
9001956e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019572:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019576:	eeb0 6a43 	vmov.f32	s12, s6
9001957a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001957e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019582:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019586:	ee61 7a27 	vmul.f32	s15, s2, s15
9001958a:	ee77 2a62 	vsub.f32	s5, s14, s5
9001958e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019592:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001959a:	ee12 2a90 	vmov	r2, s5
9001959e:	eef0 2a47 	vmov.f32	s5, s14
900195a2:	fb92 f3f3 	sdiv	r3, r2, r3
900195a6:	ee13 2a10 	vmov	r2, s6
900195aa:	9313      	str	r3, [sp, #76]	; 0x4c
900195ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
900195ae:	eeb0 3a67 	vmov.f32	s6, s15
900195b2:	fb92 f3f3 	sdiv	r3, r2, r3
900195b6:	9a04      	ldr	r2, [sp, #16]
900195b8:	9314      	str	r3, [sp, #80]	; 0x50
900195ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
900195bc:	bf08      	it	eq
900195be:	4613      	moveq	r3, r2
900195c0:	e787      	b.n	900194d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
900195c2:	140e      	asrs	r6, r1, #16
900195c4:	d462      	bmi.n	9001968c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900195c6:	f8de 5008 	ldr.w	r5, [lr, #8]
900195ca:	42b5      	cmp	r5, r6
900195cc:	dd5e      	ble.n	9001968c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900195ce:	1417      	asrs	r7, r2, #16
900195d0:	d45c      	bmi.n	9001968c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900195d2:	f8de 400c 	ldr.w	r4, [lr, #12]
900195d6:	42bc      	cmp	r4, r7
900195d8:	dd58      	ble.n	9001968c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900195da:	b22d      	sxth	r5, r5
900195dc:	9c02      	ldr	r4, [sp, #8]
900195de:	fb07 6505 	mla	r5, r7, r5, r6
900195e2:	5d66      	ldrb	r6, [r4, r5]
900195e4:	2e00      	cmp	r6, #0
900195e6:	d051      	beq.n	9001968c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900195e8:	9c01      	ldr	r4, [sp, #4]
900195ea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
900195ee:	f06f 0401 	mvn.w	r4, #1
900195f2:	fb04 f408 	mul.w	r4, r4, r8
900195f6:	ea4f 2c29 	mov.w	ip, r9, asr #8
900195fa:	5b05      	ldrh	r5, [r0, r4]
900195fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019600:	9403      	str	r4, [sp, #12]
90019602:	9c05      	ldr	r4, [sp, #20]
90019604:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90019608:	4366      	muls	r6, r4
9001960a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001960e:	1c74      	adds	r4, r6, #1
90019610:	eb04 2416 	add.w	r4, r4, r6, lsr #8
90019614:	122e      	asrs	r6, r5, #8
90019616:	1224      	asrs	r4, r4, #8
90019618:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001961c:	00ed      	lsls	r5, r5, #3
9001961e:	b2a7      	uxth	r7, r4
90019620:	43e4      	mvns	r4, r4
90019622:	b2ed      	uxtb	r5, r5
90019624:	b2e4      	uxtb	r4, r4
90019626:	fb16 f604 	smulbb	r6, r6, r4
9001962a:	fb15 f504 	smulbb	r5, r5, r4
9001962e:	fb0c 6c07 	mla	ip, ip, r7, r6
90019632:	ea4f 06e9 	mov.w	r6, r9, asr #3
90019636:	fb1a fa04 	smulbb	sl, sl, r4
9001963a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001963e:	fa1f fc8c 	uxth.w	ip, ip
90019642:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019646:	fa5f f989 	uxtb.w	r9, r9
9001964a:	fb06 a607 	mla	r6, r6, r7, sl
9001964e:	f10c 0401 	add.w	r4, ip, #1
90019652:	fb09 5507 	mla	r5, r9, r7, r5
90019656:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001965a:	9c03      	ldr	r4, [sp, #12]
9001965c:	b2ad      	uxth	r5, r5
9001965e:	b2b6      	uxth	r6, r6
90019660:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019664:	f105 0a01 	add.w	sl, r5, #1
90019668:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001966c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019670:	ea4a 0c0c 	orr.w	ip, sl, ip
90019674:	f106 0a01 	add.w	sl, r6, #1
90019678:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001967c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019680:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019684:	ea4c 0c0a 	orr.w	ip, ip, sl
90019688:	f820 c004 	strh.w	ip, [r0, r4]
9001968c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001968e:	f108 38ff 	add.w	r8, r8, #4294967295
90019692:	4421      	add	r1, r4
90019694:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019696:	4422      	add	r2, r4
90019698:	e750      	b.n	9001953c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001969a:	f04f 0900 	mov.w	r9, #0
9001969e:	eba3 0409 	sub.w	r4, r3, r9
900196a2:	2c00      	cmp	r4, #0
900196a4:	f77f af4e 	ble.w	90019544 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
900196a8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
900196ac:	140d      	asrs	r5, r1, #16
900196ae:	1414      	asrs	r4, r2, #16
900196b0:	fb06 5404 	mla	r4, r6, r4, r5
900196b4:	9d02      	ldr	r5, [sp, #8]
900196b6:	5d2e      	ldrb	r6, [r5, r4]
900196b8:	2e00      	cmp	r6, #0
900196ba:	d04c      	beq.n	90019756 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
900196bc:	9d01      	ldr	r5, [sp, #4]
900196be:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
900196c2:	9c05      	ldr	r4, [sp, #20]
900196c4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
900196c8:	ea4f 2c28 	mov.w	ip, r8, asr #8
900196cc:	4366      	muls	r6, r4
900196ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900196d2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900196d6:	1c74      	adds	r4, r6, #1
900196d8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900196dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
900196e0:	122e      	asrs	r6, r5, #8
900196e2:	1224      	asrs	r4, r4, #8
900196e4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900196e8:	00ed      	lsls	r5, r5, #3
900196ea:	b2a7      	uxth	r7, r4
900196ec:	43e4      	mvns	r4, r4
900196ee:	b2ed      	uxtb	r5, r5
900196f0:	b2e4      	uxtb	r4, r4
900196f2:	fb16 f604 	smulbb	r6, r6, r4
900196f6:	fb15 f504 	smulbb	r5, r5, r4
900196fa:	fb0c 6c07 	mla	ip, ip, r7, r6
900196fe:	ea4f 06e8 	mov.w	r6, r8, asr #3
90019702:	fb1a fa04 	smulbb	sl, sl, r4
90019706:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001970a:	fa1f fc8c 	uxth.w	ip, ip
9001970e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
90019712:	fa5f f888 	uxtb.w	r8, r8
90019716:	fb06 a607 	mla	r6, r6, r7, sl
9001971a:	f10c 0401 	add.w	r4, ip, #1
9001971e:	fb08 5507 	mla	r5, r8, r7, r5
90019722:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019726:	b2ad      	uxth	r5, r5
90019728:	b2b6      	uxth	r6, r6
9001972a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001972e:	f105 0a01 	add.w	sl, r5, #1
90019732:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019736:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001973a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001973e:	f106 0a01 	add.w	sl, r6, #1
90019742:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019746:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001974a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001974e:	ea4c 0c0a 	orr.w	ip, ip, sl
90019752:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019756:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019758:	f109 0901 	add.w	r9, r9, #1
9001975c:	4421      	add	r1, r4
9001975e:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019760:	4422      	add	r2, r4
90019762:	e79c      	b.n	9001969e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
90019764:	b007      	add	sp, #28
90019766:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001976a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001976a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001976e:	b085      	sub	sp, #20
90019770:	468b      	mov	fp, r1
90019772:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019776:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019778:	9203      	str	r2, [sp, #12]
9001977a:	6861      	ldr	r1, [r4, #4]
9001977c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
90019780:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
90019784:	fb01 2000 	mla	r0, r1, r0, r2
90019788:	6822      	ldr	r2, [r4, #0]
9001978a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001978e:	f8d8 2000 	ldr.w	r2, [r8]
90019792:	9200      	str	r2, [sp, #0]
90019794:	f8d8 2004 	ldr.w	r2, [r8, #4]
90019798:	9201      	str	r2, [sp, #4]
9001979a:	f1bb 0f00 	cmp.w	fp, #0
9001979e:	dc03      	bgt.n	900197a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
900197a0:	9a03      	ldr	r2, [sp, #12]
900197a2:	2a00      	cmp	r2, #0
900197a4:	f340 8146 	ble.w	90019a34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
900197a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900197aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
900197ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
900197b2:	9a10      	ldr	r2, [sp, #64]	; 0x40
900197b4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
900197b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
900197bc:	2b00      	cmp	r3, #0
900197be:	dd0e      	ble.n	900197de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900197c0:	140c      	asrs	r4, r1, #16
900197c2:	d405      	bmi.n	900197d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900197c4:	42bc      	cmp	r4, r7
900197c6:	da03      	bge.n	900197d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900197c8:	1414      	asrs	r4, r2, #16
900197ca:	d401      	bmi.n	900197d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
900197cc:	42b4      	cmp	r4, r6
900197ce:	db07      	blt.n	900197e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900197d0:	9c11      	ldr	r4, [sp, #68]	; 0x44
900197d2:	3b01      	subs	r3, #1
900197d4:	3002      	adds	r0, #2
900197d6:	4421      	add	r1, r4
900197d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
900197da:	4422      	add	r2, r4
900197dc:	e7ee      	b.n	900197bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900197de:	d017      	beq.n	90019810 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
900197e0:	1e5c      	subs	r4, r3, #1
900197e2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900197e4:	fb05 1504 	mla	r5, r5, r4, r1
900197e8:	142d      	asrs	r5, r5, #16
900197ea:	d409      	bmi.n	90019800 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900197ec:	42bd      	cmp	r5, r7
900197ee:	da07      	bge.n	90019800 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900197f0:	9d12      	ldr	r5, [sp, #72]	; 0x48
900197f2:	fb05 2404 	mla	r4, r5, r4, r2
900197f6:	1424      	asrs	r4, r4, #16
900197f8:	d402      	bmi.n	90019800 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
900197fa:	42b4      	cmp	r4, r6
900197fc:	f2c0 80b3 	blt.w	90019966 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90019800:	2600      	movs	r6, #0
90019802:	199c      	adds	r4, r3, r6
90019804:	2c00      	cmp	r4, #0
90019806:	dc3e      	bgt.n	90019886 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019808:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001980c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90019810:	f1bb 0f00 	cmp.w	fp, #0
90019814:	f340 810e 	ble.w	90019a34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
90019818:	ee30 0a04 	vadd.f32	s0, s0, s8
9001981c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001981e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019822:	f1bb 0b01 	subs.w	fp, fp, #1
90019826:	eeb0 6a62 	vmov.f32	s12, s5
9001982a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001982e:	ee31 1a05 	vadd.f32	s2, s2, s10
90019832:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019836:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001983a:	eeb0 6a43 	vmov.f32	s12, s6
9001983e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019842:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019846:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001984a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001984e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019852:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019856:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001985a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001985e:	ee12 2a90 	vmov	r2, s5
90019862:	eef0 2a47 	vmov.f32	s5, s14
90019866:	fb92 f3f3 	sdiv	r3, r2, r3
9001986a:	ee13 2a10 	vmov	r2, s6
9001986e:	9311      	str	r3, [sp, #68]	; 0x44
90019870:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019872:	eeb0 3a67 	vmov.f32	s6, s15
90019876:	fb92 f3f3 	sdiv	r3, r2, r3
9001987a:	9a03      	ldr	r2, [sp, #12]
9001987c:	9312      	str	r3, [sp, #72]	; 0x48
9001987e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019880:	bf08      	it	eq
90019882:	4613      	moveq	r3, r2
90019884:	e789      	b.n	9001979a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019886:	140f      	asrs	r7, r1, #16
90019888:	d418      	bmi.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001988a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001988e:	42bd      	cmp	r5, r7
90019890:	dd14      	ble.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019892:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019896:	d411      	bmi.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019898:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001989c:	4564      	cmp	r4, ip
9001989e:	dd0d      	ble.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900198a0:	b22d      	sxth	r5, r5
900198a2:	9c01      	ldr	r4, [sp, #4]
900198a4:	fb0c 7505 	mla	r5, ip, r5, r7
900198a8:	5d64      	ldrb	r4, [r4, r5]
900198aa:	2cff      	cmp	r4, #255	; 0xff
900198ac:	d10c      	bne.n	900198c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
900198ae:	9c00      	ldr	r4, [sp, #0]
900198b0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
900198b4:	f06f 0401 	mvn.w	r4, #1
900198b8:	4374      	muls	r4, r6
900198ba:	5305      	strh	r5, [r0, r4]
900198bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
900198be:	3e01      	subs	r6, #1
900198c0:	4421      	add	r1, r4
900198c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
900198c4:	4422      	add	r2, r4
900198c6:	e79c      	b.n	90019802 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
900198c8:	2c00      	cmp	r4, #0
900198ca:	d0f7      	beq.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
900198cc:	9f00      	ldr	r7, [sp, #0]
900198ce:	fa1f fc84 	uxth.w	ip, r4
900198d2:	43e4      	mvns	r4, r4
900198d4:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
900198d8:	f06f 0501 	mvn.w	r5, #1
900198dc:	b2e4      	uxtb	r4, r4
900198de:	4375      	muls	r5, r6
900198e0:	ea4f 2e29 	mov.w	lr, r9, asr #8
900198e4:	9502      	str	r5, [sp, #8]
900198e6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
900198ea:	5b45      	ldrh	r5, [r0, r5]
900198ec:	122f      	asrs	r7, r5, #8
900198ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900198f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
900198f6:	00ed      	lsls	r5, r5, #3
900198f8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900198fc:	fb17 f704 	smulbb	r7, r7, r4
90019900:	b2ed      	uxtb	r5, r5
90019902:	fb1a fa04 	smulbb	sl, sl, r4
90019906:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001990a:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001990e:	fb15 f504 	smulbb	r5, r5, r4
90019912:	ea4f 09c9 	mov.w	r9, r9, lsl #3
90019916:	fa1f fe8e 	uxth.w	lr, lr
9001991a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001991e:	fa5f f989 	uxtb.w	r9, r9
90019922:	fb07 a70c 	mla	r7, r7, ip, sl
90019926:	f10e 0401 	add.w	r4, lr, #1
9001992a:	fb09 550c 	mla	r5, r9, ip, r5
9001992e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
90019932:	9c02      	ldr	r4, [sp, #8]
90019934:	b2ad      	uxth	r5, r5
90019936:	b2bf      	uxth	r7, r7
90019938:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001993c:	f105 0a01 	add.w	sl, r5, #1
90019940:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019944:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019948:	ea4a 0e0e 	orr.w	lr, sl, lr
9001994c:	f107 0a01 	add.w	sl, r7, #1
90019950:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
90019954:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019958:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001995c:	ea4e 0e0a 	orr.w	lr, lr, sl
90019960:	f820 e004 	strh.w	lr, [r0, r4]
90019964:	e7aa      	b.n	900198bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
90019966:	f04f 0900 	mov.w	r9, #0
9001996a:	eba3 0409 	sub.w	r4, r3, r9
9001996e:	2c00      	cmp	r4, #0
90019970:	f77f af4a 	ble.w	90019808 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019974:	1414      	asrs	r4, r2, #16
90019976:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001997a:	140d      	asrs	r5, r1, #16
9001997c:	fb06 5504 	mla	r5, r6, r4, r5
90019980:	9c01      	ldr	r4, [sp, #4]
90019982:	5d64      	ldrb	r4, [r4, r5]
90019984:	2cff      	cmp	r4, #255	; 0xff
90019986:	d10b      	bne.n	900199a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90019988:	9c00      	ldr	r4, [sp, #0]
9001998a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001998e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
90019992:	9c11      	ldr	r4, [sp, #68]	; 0x44
90019994:	f109 0901 	add.w	r9, r9, #1
90019998:	4421      	add	r1, r4
9001999a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001999c:	4422      	add	r2, r4
9001999e:	e7e4      	b.n	9001996a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900199a0:	2c00      	cmp	r4, #0
900199a2:	d0f6      	beq.n	90019992 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
900199a4:	9e00      	ldr	r6, [sp, #0]
900199a6:	b2a7      	uxth	r7, r4
900199a8:	43e4      	mvns	r4, r4
900199aa:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
900199ae:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
900199b2:	b2e4      	uxtb	r4, r4
900199b4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
900199b8:	122e      	asrs	r6, r5, #8
900199ba:	ea4f 0ae5 	mov.w	sl, r5, asr #3
900199be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900199c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900199c6:	00ed      	lsls	r5, r5, #3
900199c8:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
900199cc:	fb16 f604 	smulbb	r6, r6, r4
900199d0:	b2ed      	uxtb	r5, r5
900199d2:	fb1a fa04 	smulbb	sl, sl, r4
900199d6:	fb0c 6c07 	mla	ip, ip, r7, r6
900199da:	ea4f 06ee 	mov.w	r6, lr, asr #3
900199de:	fb15 f504 	smulbb	r5, r5, r4
900199e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
900199e6:	fa1f fc8c 	uxth.w	ip, ip
900199ea:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900199ee:	fa5f fe8e 	uxtb.w	lr, lr
900199f2:	fb06 a607 	mla	r6, r6, r7, sl
900199f6:	f10c 0401 	add.w	r4, ip, #1
900199fa:	fb0e 5507 	mla	r5, lr, r7, r5
900199fe:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
90019a02:	b2ad      	uxth	r5, r5
90019a04:	b2b6      	uxth	r6, r6
90019a06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019a0a:	f105 0a01 	add.w	sl, r5, #1
90019a0e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
90019a12:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
90019a16:	ea4a 0c0c 	orr.w	ip, sl, ip
90019a1a:	f106 0a01 	add.w	sl, r6, #1
90019a1e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
90019a22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90019a26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
90019a2a:	ea4c 0c0a 	orr.w	ip, ip, sl
90019a2e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
90019a32:	e7ae      	b.n	90019992 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90019a34:	b005      	add	sp, #20
90019a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019a3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019a3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019a3e:	b085      	sub	sp, #20
90019a40:	9813      	ldr	r0, [sp, #76]	; 0x4c
90019a42:	9203      	str	r2, [sp, #12]
90019a44:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
90019a48:	9100      	str	r1, [sp, #0]
90019a4a:	9201      	str	r2, [sp, #4]
90019a4c:	6841      	ldr	r1, [r0, #4]
90019a4e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
90019a52:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019a56:	fb01 2404 	mla	r4, r1, r4, r2
90019a5a:	6802      	ldr	r2, [r0, #0]
90019a5c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019a60:	f8de 2000 	ldr.w	r2, [lr]
90019a64:	9202      	str	r2, [sp, #8]
90019a66:	9a01      	ldr	r2, [sp, #4]
90019a68:	43d6      	mvns	r6, r2
90019a6a:	b2f6      	uxtb	r6, r6
90019a6c:	9a00      	ldr	r2, [sp, #0]
90019a6e:	2a00      	cmp	r2, #0
90019a70:	dc03      	bgt.n	90019a7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
90019a72:	9a03      	ldr	r2, [sp, #12]
90019a74:	2a00      	cmp	r2, #0
90019a76:	f340 8124 	ble.w	90019cc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019a7a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019a7c:	f9be c008 	ldrsh.w	ip, [lr, #8]
90019a80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019a84:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019a86:	f9be 700c 	ldrsh.w	r7, [lr, #12]
90019a8a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019a8e:	2b00      	cmp	r3, #0
90019a90:	dd0e      	ble.n	90019ab0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019a92:	1408      	asrs	r0, r1, #16
90019a94:	d405      	bmi.n	90019aa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019a96:	4560      	cmp	r0, ip
90019a98:	da03      	bge.n	90019aa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019a9a:	1410      	asrs	r0, r2, #16
90019a9c:	d401      	bmi.n	90019aa2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90019a9e:	42b8      	cmp	r0, r7
90019aa0:	db07      	blt.n	90019ab2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90019aa2:	9811      	ldr	r0, [sp, #68]	; 0x44
90019aa4:	3b01      	subs	r3, #1
90019aa6:	3402      	adds	r4, #2
90019aa8:	4401      	add	r1, r0
90019aaa:	9812      	ldr	r0, [sp, #72]	; 0x48
90019aac:	4402      	add	r2, r0
90019aae:	e7ee      	b.n	90019a8e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90019ab0:	d06e      	beq.n	90019b90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
90019ab2:	1e58      	subs	r0, r3, #1
90019ab4:	9d11      	ldr	r5, [sp, #68]	; 0x44
90019ab6:	fb05 1500 	mla	r5, r5, r0, r1
90019aba:	142d      	asrs	r5, r5, #16
90019abc:	d45c      	bmi.n	90019b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019abe:	4565      	cmp	r5, ip
90019ac0:	da5a      	bge.n	90019b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019ac2:	9d12      	ldr	r5, [sp, #72]	; 0x48
90019ac4:	fb05 2000 	mla	r0, r5, r0, r2
90019ac8:	1400      	asrs	r0, r0, #16
90019aca:	d455      	bmi.n	90019b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019acc:	42b8      	cmp	r0, r7
90019ace:	da53      	bge.n	90019b78 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
90019ad0:	4699      	mov	r9, r3
90019ad2:	46a2      	mov	sl, r4
90019ad4:	f8bd b004 	ldrh.w	fp, [sp, #4]
90019ad8:	f1b9 0f00 	cmp.w	r9, #0
90019adc:	dd54      	ble.n	90019b88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
90019ade:	f9be 7008 	ldrsh.w	r7, [lr, #8]
90019ae2:	140d      	asrs	r5, r1, #16
90019ae4:	1410      	asrs	r0, r2, #16
90019ae6:	f109 39ff 	add.w	r9, r9, #4294967295
90019aea:	fb07 5000 	mla	r0, r7, r0, r5
90019aee:	9d02      	ldr	r5, [sp, #8]
90019af0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
90019af4:	f8ba 5000 	ldrh.w	r5, [sl]
90019af8:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019afc:	122f      	asrs	r7, r5, #8
90019afe:	ea4f 08e5 	mov.w	r8, r5, asr #3
90019b02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019b06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019b0a:	00ed      	lsls	r5, r5, #3
90019b0c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
90019b10:	fb17 f706 	smulbb	r7, r7, r6
90019b14:	b2ed      	uxtb	r5, r5
90019b16:	fb18 f806 	smulbb	r8, r8, r6
90019b1a:	fb0c 7c0b 	mla	ip, ip, fp, r7
90019b1e:	10c7      	asrs	r7, r0, #3
90019b20:	fb15 f506 	smulbb	r5, r5, r6
90019b24:	00c0      	lsls	r0, r0, #3
90019b26:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019b2a:	fa1f fc8c 	uxth.w	ip, ip
90019b2e:	b2c0      	uxtb	r0, r0
90019b30:	fb07 870b 	mla	r7, r7, fp, r8
90019b34:	fb00 500b 	mla	r0, r0, fp, r5
90019b38:	f10c 0501 	add.w	r5, ip, #1
90019b3c:	b2bf      	uxth	r7, r7
90019b3e:	b280      	uxth	r0, r0
90019b40:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019b44:	f107 0801 	add.w	r8, r7, #1
90019b48:	1c45      	adds	r5, r0, #1
90019b4a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
90019b4e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019b52:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019b56:	9811      	ldr	r0, [sp, #68]	; 0x44
90019b58:	ea4f 1858 	mov.w	r8, r8, lsr #5
90019b5c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019b60:	4401      	add	r1, r0
90019b62:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90019b66:	9812      	ldr	r0, [sp, #72]	; 0x48
90019b68:	ea45 0c0c 	orr.w	ip, r5, ip
90019b6c:	4402      	add	r2, r0
90019b6e:	ea4c 0c08 	orr.w	ip, ip, r8
90019b72:	f82a cb02 	strh.w	ip, [sl], #2
90019b76:	e7af      	b.n	90019ad8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
90019b78:	f04f 0800 	mov.w	r8, #0
90019b7c:	f8bd a004 	ldrh.w	sl, [sp, #4]
90019b80:	eb03 0008 	add.w	r0, r3, r8
90019b84:	2800      	cmp	r0, #0
90019b86:	dc41      	bgt.n	90019c0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90019b88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019b8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019b90:	9b00      	ldr	r3, [sp, #0]
90019b92:	2b00      	cmp	r3, #0
90019b94:	f340 8095 	ble.w	90019cc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
90019b98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90019b9c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019b9e:	ee30 0a04 	vadd.f32	s0, s0, s8
90019ba2:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019ba6:	eef0 6a62 	vmov.f32	s13, s5
90019baa:	eec7 7a00 	vdiv.f32	s15, s14, s0
90019bae:	ee31 1a05 	vadd.f32	s2, s2, s10
90019bb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019bb6:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
90019bba:	eef0 6a43 	vmov.f32	s13, s6
90019bbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90019bc2:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
90019bc6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019bca:	ee61 7a27 	vmul.f32	s15, s2, s15
90019bce:	ee77 2a62 	vsub.f32	s5, s14, s5
90019bd2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019bd6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019bda:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019bde:	ee12 2a90 	vmov	r2, s5
90019be2:	eef0 2a47 	vmov.f32	s5, s14
90019be6:	fb92 f3f3 	sdiv	r3, r2, r3
90019bea:	ee13 2a10 	vmov	r2, s6
90019bee:	9311      	str	r3, [sp, #68]	; 0x44
90019bf0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019bf2:	eeb0 3a67 	vmov.f32	s6, s15
90019bf6:	fb92 f3f3 	sdiv	r3, r2, r3
90019bfa:	9312      	str	r3, [sp, #72]	; 0x48
90019bfc:	9b00      	ldr	r3, [sp, #0]
90019bfe:	9a03      	ldr	r2, [sp, #12]
90019c00:	3b01      	subs	r3, #1
90019c02:	9300      	str	r3, [sp, #0]
90019c04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019c06:	bf08      	it	eq
90019c08:	4613      	moveq	r3, r2
90019c0a:	e72f      	b.n	90019a6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
90019c0c:	140f      	asrs	r7, r1, #16
90019c0e:	d451      	bmi.n	90019cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019c10:	f8de 5008 	ldr.w	r5, [lr, #8]
90019c14:	42bd      	cmp	r5, r7
90019c16:	dd4d      	ble.n	90019cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019c18:	ea5f 4c22 	movs.w	ip, r2, asr #16
90019c1c:	d44a      	bmi.n	90019cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019c1e:	f8de 000c 	ldr.w	r0, [lr, #12]
90019c22:	4560      	cmp	r0, ip
90019c24:	dd46      	ble.n	90019cb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90019c26:	b22d      	sxth	r5, r5
90019c28:	9802      	ldr	r0, [sp, #8]
90019c2a:	fb0c 7505 	mla	r5, ip, r5, r7
90019c2e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
90019c32:	f06f 0501 	mvn.w	r5, #1
90019c36:	fb05 fb08 	mul.w	fp, r5, r8
90019c3a:	ea4f 2c20 	mov.w	ip, r0, asr #8
90019c3e:	f834 500b 	ldrh.w	r5, [r4, fp]
90019c42:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90019c46:	122f      	asrs	r7, r5, #8
90019c48:	ea4f 09e5 	mov.w	r9, r5, asr #3
90019c4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
90019c50:	00ed      	lsls	r5, r5, #3
90019c52:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
90019c56:	fb17 f706 	smulbb	r7, r7, r6
90019c5a:	b2ed      	uxtb	r5, r5
90019c5c:	fb19 f906 	smulbb	r9, r9, r6
90019c60:	fb0c 7c0a 	mla	ip, ip, sl, r7
90019c64:	10c7      	asrs	r7, r0, #3
90019c66:	fb15 f506 	smulbb	r5, r5, r6
90019c6a:	00c0      	lsls	r0, r0, #3
90019c6c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90019c70:	fa1f fc8c 	uxth.w	ip, ip
90019c74:	b2c0      	uxtb	r0, r0
90019c76:	fb07 970a 	mla	r7, r7, sl, r9
90019c7a:	fb00 500a 	mla	r0, r0, sl, r5
90019c7e:	f10c 0501 	add.w	r5, ip, #1
90019c82:	b2bf      	uxth	r7, r7
90019c84:	b280      	uxth	r0, r0
90019c86:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
90019c8a:	f107 0901 	add.w	r9, r7, #1
90019c8e:	1c45      	adds	r5, r0, #1
90019c90:	eb09 2917 	add.w	r9, r9, r7, lsr #8
90019c94:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90019c98:	eb05 2510 	add.w	r5, r5, r0, lsr #8
90019c9c:	ea4f 1959 	mov.w	r9, r9, lsr #5
90019ca0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
90019ca4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90019ca8:	ea45 0c0c 	orr.w	ip, r5, ip
90019cac:	ea4c 0c09 	orr.w	ip, ip, r9
90019cb0:	f824 c00b 	strh.w	ip, [r4, fp]
90019cb4:	9811      	ldr	r0, [sp, #68]	; 0x44
90019cb6:	f108 38ff 	add.w	r8, r8, #4294967295
90019cba:	4401      	add	r1, r0
90019cbc:	9812      	ldr	r0, [sp, #72]	; 0x48
90019cbe:	4402      	add	r2, r0
90019cc0:	e75e      	b.n	90019b80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
90019cc2:	b005      	add	sp, #20
90019cc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019cc8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019ccc:	b085      	sub	sp, #20
90019cce:	4693      	mov	fp, r2
90019cd0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019cd4:	9e13      	ldr	r6, [sp, #76]	; 0x4c
90019cd6:	9d16      	ldr	r5, [sp, #88]	; 0x58
90019cd8:	6870      	ldr	r0, [r6, #4]
90019cda:	9101      	str	r1, [sp, #4]
90019cdc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
90019ce0:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
90019ce4:	fb00 2404 	mla	r4, r0, r4, r2
90019ce8:	6832      	ldr	r2, [r6, #0]
90019cea:	eb02 0444 	add.w	r4, r2, r4, lsl #1
90019cee:	682a      	ldr	r2, [r5, #0]
90019cf0:	9202      	str	r2, [sp, #8]
90019cf2:	9a01      	ldr	r2, [sp, #4]
90019cf4:	2a00      	cmp	r2, #0
90019cf6:	dc03      	bgt.n	90019d00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90019cf8:	f1bb 0f00 	cmp.w	fp, #0
90019cfc:	f340 809a 	ble.w	90019e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019d00:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90019d02:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
90019d06:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019d0a:	9a10      	ldr	r2, [sp, #64]	; 0x40
90019d0c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
90019d10:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
90019d14:	2b00      	cmp	r3, #0
90019d16:	dd0c      	ble.n	90019d32 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
90019d18:	1406      	asrs	r6, r0, #16
90019d1a:	d405      	bmi.n	90019d28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019d1c:	454e      	cmp	r6, r9
90019d1e:	da03      	bge.n	90019d28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019d20:	1416      	asrs	r6, r2, #16
90019d22:	d401      	bmi.n	90019d28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
90019d24:	4546      	cmp	r6, r8
90019d26:	db05      	blt.n	90019d34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90019d28:	4470      	add	r0, lr
90019d2a:	4462      	add	r2, ip
90019d2c:	3b01      	subs	r3, #1
90019d2e:	3402      	adds	r4, #2
90019d30:	e7f0      	b.n	90019d14 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90019d32:	d00f      	beq.n	90019d54 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90019d34:	1e5e      	subs	r6, r3, #1
90019d36:	fb0e 0706 	mla	r7, lr, r6, r0
90019d3a:	143f      	asrs	r7, r7, #16
90019d3c:	d541      	bpl.n	90019dc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
90019d3e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
90019d42:	4698      	mov	r8, r3
90019d44:	9603      	str	r6, [sp, #12]
90019d46:	f1b8 0f00 	cmp.w	r8, #0
90019d4a:	dc56      	bgt.n	90019dfa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
90019d4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019d50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90019d54:	9b01      	ldr	r3, [sp, #4]
90019d56:	2b00      	cmp	r3, #0
90019d58:	dd6c      	ble.n	90019e34 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
90019d5a:	ee30 0a04 	vadd.f32	s0, s0, s8
90019d5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019d60:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019d64:	eeb0 6a62 	vmov.f32	s12, s5
90019d68:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019d6c:	ee31 1a05 	vadd.f32	s2, s2, s10
90019d70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019d74:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
90019d78:	eeb0 6a43 	vmov.f32	s12, s6
90019d7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019d80:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
90019d84:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019d88:	ee61 7a27 	vmul.f32	s15, s2, s15
90019d8c:	ee77 2a62 	vsub.f32	s5, s14, s5
90019d90:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019d94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019d98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019d9c:	ee12 2a90 	vmov	r2, s5
90019da0:	eef0 2a47 	vmov.f32	s5, s14
90019da4:	fb92 fef3 	sdiv	lr, r2, r3
90019da8:	ee13 2a10 	vmov	r2, s6
90019dac:	eeb0 3a67 	vmov.f32	s6, s15
90019db0:	fb92 fcf3 	sdiv	ip, r2, r3
90019db4:	9b01      	ldr	r3, [sp, #4]
90019db6:	3b01      	subs	r3, #1
90019db8:	9301      	str	r3, [sp, #4]
90019dba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90019dbc:	bf08      	it	eq
90019dbe:	465b      	moveq	r3, fp
90019dc0:	e797      	b.n	90019cf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90019dc2:	454f      	cmp	r7, r9
90019dc4:	dabb      	bge.n	90019d3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019dc6:	fb0c 2606 	mla	r6, ip, r6, r2
90019dca:	1436      	asrs	r6, r6, #16
90019dcc:	d4b7      	bmi.n	90019d3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019dce:	4546      	cmp	r6, r8
90019dd0:	dab5      	bge.n	90019d3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019dd2:	461e      	mov	r6, r3
90019dd4:	46a0      	mov	r8, r4
90019dd6:	2e00      	cmp	r6, #0
90019dd8:	ddb8      	ble.n	90019d4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90019dda:	1417      	asrs	r7, r2, #16
90019ddc:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
90019de0:	ea4f 4920 	mov.w	r9, r0, asr #16
90019de4:	9902      	ldr	r1, [sp, #8]
90019de6:	4470      	add	r0, lr
90019de8:	4462      	add	r2, ip
90019dea:	fb0a 9707 	mla	r7, sl, r7, r9
90019dee:	3e01      	subs	r6, #1
90019df0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
90019df4:	f828 7b02 	strh.w	r7, [r8], #2
90019df8:	e7ed      	b.n	90019dd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
90019dfa:	ea5f 4920 	movs.w	r9, r0, asr #16
90019dfe:	d414      	bmi.n	90019e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019e00:	68ae      	ldr	r6, [r5, #8]
90019e02:	454e      	cmp	r6, r9
90019e04:	dd11      	ble.n	90019e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019e06:	ea5f 4a22 	movs.w	sl, r2, asr #16
90019e0a:	d40e      	bmi.n	90019e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019e0c:	68ef      	ldr	r7, [r5, #12]
90019e0e:	4557      	cmp	r7, sl
90019e10:	dd0b      	ble.n	90019e2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
90019e12:	b236      	sxth	r6, r6
90019e14:	f06f 0101 	mvn.w	r1, #1
90019e18:	9f02      	ldr	r7, [sp, #8]
90019e1a:	fb0a 9606 	mla	r6, sl, r6, r9
90019e1e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
90019e22:	fb01 f608 	mul.w	r6, r1, r8
90019e26:	9903      	ldr	r1, [sp, #12]
90019e28:	538f      	strh	r7, [r1, r6]
90019e2a:	4470      	add	r0, lr
90019e2c:	4462      	add	r2, ip
90019e2e:	f108 38ff 	add.w	r8, r8, #4294967295
90019e32:	e788      	b.n	90019d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
90019e34:	b005      	add	sp, #20
90019e36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90019e3a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90019e3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90019e3e:	b087      	sub	sp, #28
90019e40:	468b      	mov	fp, r1
90019e42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
90019e46:	9815      	ldr	r0, [sp, #84]	; 0x54
90019e48:	9203      	str	r2, [sp, #12]
90019e4a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
90019e4e:	6841      	ldr	r1, [r0, #4]
90019e50:	9204      	str	r2, [sp, #16]
90019e52:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
90019e56:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
90019e5a:	fb01 2505 	mla	r5, r1, r5, r2
90019e5e:	6802      	ldr	r2, [r0, #0]
90019e60:	eb02 0545 	add.w	r5, r2, r5, lsl #1
90019e64:	f8d9 2000 	ldr.w	r2, [r9]
90019e68:	9201      	str	r2, [sp, #4]
90019e6a:	f1bb 0f00 	cmp.w	fp, #0
90019e6e:	dc03      	bgt.n	90019e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90019e70:	9a03      	ldr	r2, [sp, #12]
90019e72:	2a00      	cmp	r2, #0
90019e74:	f340 8158 	ble.w	9001a128 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019e78:	9a11      	ldr	r2, [sp, #68]	; 0x44
90019e7a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
90019e7e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
90019e82:	9a12      	ldr	r2, [sp, #72]	; 0x48
90019e84:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
90019e88:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
90019e8c:	2b00      	cmp	r3, #0
90019e8e:	dd0e      	ble.n	90019eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90019e90:	1402      	asrs	r2, r0, #16
90019e92:	d405      	bmi.n	90019ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019e94:	42ba      	cmp	r2, r7
90019e96:	da03      	bge.n	90019ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019e98:	140a      	asrs	r2, r1, #16
90019e9a:	d401      	bmi.n	90019ea0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90019e9c:	42b2      	cmp	r2, r6
90019e9e:	db07      	blt.n	90019eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90019ea0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019ea2:	3b01      	subs	r3, #1
90019ea4:	3502      	adds	r5, #2
90019ea6:	4410      	add	r0, r2
90019ea8:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019eaa:	4411      	add	r1, r2
90019eac:	e7ee      	b.n	90019e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90019eae:	d017      	beq.n	90019ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
90019eb0:	1e5a      	subs	r2, r3, #1
90019eb2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90019eb4:	fb04 0402 	mla	r4, r4, r2, r0
90019eb8:	1424      	asrs	r4, r4, #16
90019eba:	d409      	bmi.n	90019ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019ebc:	42bc      	cmp	r4, r7
90019ebe:	da07      	bge.n	90019ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019ec0:	9c14      	ldr	r4, [sp, #80]	; 0x50
90019ec2:	fb04 1202 	mla	r2, r4, r2, r1
90019ec6:	1412      	asrs	r2, r2, #16
90019ec8:	d402      	bmi.n	90019ed0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90019eca:	42b2      	cmp	r2, r6
90019ecc:	f2c0 80bf 	blt.w	9001a04e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90019ed0:	2700      	movs	r7, #0
90019ed2:	19da      	adds	r2, r3, r7
90019ed4:	2a00      	cmp	r2, #0
90019ed6:	dc3e      	bgt.n	90019f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90019ed8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90019edc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
90019ee0:	f1bb 0f00 	cmp.w	fp, #0
90019ee4:	f340 8120 	ble.w	9001a128 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
90019ee8:	ee30 0a04 	vadd.f32	s0, s0, s8
90019eec:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019eee:	ee70 0aa4 	vadd.f32	s1, s1, s9
90019ef2:	f1bb 0b01 	subs.w	fp, fp, #1
90019ef6:	eeb0 6a62 	vmov.f32	s12, s5
90019efa:	eec6 7a80 	vdiv.f32	s15, s13, s0
90019efe:	ee31 1a05 	vadd.f32	s2, s2, s10
90019f02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f06:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
90019f0a:	eeb0 6a43 	vmov.f32	s12, s6
90019f0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90019f12:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
90019f16:	ee20 7aa7 	vmul.f32	s14, s1, s15
90019f1a:	ee61 7a27 	vmul.f32	s15, s2, s15
90019f1e:	ee77 2a62 	vsub.f32	s5, s14, s5
90019f22:	ee37 3ac3 	vsub.f32	s6, s15, s6
90019f26:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90019f2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90019f2e:	ee12 2a90 	vmov	r2, s5
90019f32:	eef0 2a47 	vmov.f32	s5, s14
90019f36:	fb92 f3f3 	sdiv	r3, r2, r3
90019f3a:	ee13 2a10 	vmov	r2, s6
90019f3e:	9313      	str	r3, [sp, #76]	; 0x4c
90019f40:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019f42:	eeb0 3a67 	vmov.f32	s6, s15
90019f46:	fb92 f3f3 	sdiv	r3, r2, r3
90019f4a:	9a03      	ldr	r2, [sp, #12]
90019f4c:	9314      	str	r3, [sp, #80]	; 0x50
90019f4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
90019f50:	bf08      	it	eq
90019f52:	4613      	moveq	r3, r2
90019f54:	e789      	b.n	90019e6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90019f56:	1406      	asrs	r6, r0, #16
90019f58:	d42d      	bmi.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019f5a:	f8d9 4008 	ldr.w	r4, [r9, #8]
90019f5e:	42b4      	cmp	r4, r6
90019f60:	dd29      	ble.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019f62:	ea5f 4c21 	movs.w	ip, r1, asr #16
90019f66:	d426      	bmi.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019f68:	f8d9 200c 	ldr.w	r2, [r9, #12]
90019f6c:	4562      	cmp	r2, ip
90019f6e:	dd22      	ble.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019f70:	b224      	sxth	r4, r4
90019f72:	9a01      	ldr	r2, [sp, #4]
90019f74:	fb0c 6404 	mla	r4, ip, r4, r6
90019f78:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
90019f7c:	0e22      	lsrs	r2, r4, #24
90019f7e:	d01a      	beq.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
90019f80:	9e04      	ldr	r6, [sp, #16]
90019f82:	4372      	muls	r2, r6
90019f84:	1c56      	adds	r6, r2, #1
90019f86:	eb06 2222 	add.w	r2, r6, r2, asr #8
90019f8a:	0a26      	lsrs	r6, r4, #8
90019f8c:	1212      	asrs	r2, r2, #8
90019f8e:	9605      	str	r6, [sp, #20]
90019f90:	2aff      	cmp	r2, #255	; 0xff
90019f92:	d116      	bne.n	90019fc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
90019f94:	f06f 0201 	mvn.w	r2, #1
90019f98:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
90019f9c:	fb02 fc07 	mul.w	ip, r2, r7
90019fa0:	0962      	lsrs	r2, r4, #5
90019fa2:	f026 0607 	bic.w	r6, r6, #7
90019fa6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
90019faa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90019fae:	4316      	orrs	r6, r2
90019fb0:	4326      	orrs	r6, r4
90019fb2:	f825 600c 	strh.w	r6, [r5, ip]
90019fb6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90019fb8:	3f01      	subs	r7, #1
90019fba:	4410      	add	r0, r2
90019fbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
90019fbe:	4411      	add	r1, r2
90019fc0:	e787      	b.n	90019ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90019fc2:	f06f 0601 	mvn.w	r6, #1
90019fc6:	fa1f fa82 	uxth.w	sl, r2
90019fca:	f3c4 4c07 	ubfx	ip, r4, #16, #8
90019fce:	43d2      	mvns	r2, r2
90019fd0:	437e      	muls	r6, r7
90019fd2:	b2e4      	uxtb	r4, r4
90019fd4:	fb1c fc0a 	smulbb	ip, ip, sl
90019fd8:	b2d2      	uxtb	r2, r2
90019fda:	f835 8006 	ldrh.w	r8, [r5, r6]
90019fde:	fb14 f40a 	smulbb	r4, r4, sl
90019fe2:	9602      	str	r6, [sp, #8]
90019fe4:	ea4f 2e28 	mov.w	lr, r8, asr #8
90019fe8:	f89d 6014 	ldrb.w	r6, [sp, #20]
90019fec:	fb16 f60a 	smulbb	r6, r6, sl
90019ff0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90019ff4:	fb0e ce02 	mla	lr, lr, r2, ip
90019ff8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
90019ffc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a000:	fa1f fe8e 	uxth.w	lr, lr
9001a004:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a008:	fa5f f888 	uxtb.w	r8, r8
9001a00c:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a010:	fb08 4402 	mla	r4, r8, r2, r4
9001a014:	f10e 0201 	add.w	r2, lr, #1
9001a018:	fa1f fc8c 	uxth.w	ip, ip
9001a01c:	b2a4      	uxth	r4, r4
9001a01e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a022:	9a02      	ldr	r2, [sp, #8]
9001a024:	1c66      	adds	r6, r4, #1
9001a026:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a02a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a02e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a032:	ea46 0e0e 	orr.w	lr, r6, lr
9001a036:	f10c 0601 	add.w	r6, ip, #1
9001a03a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a03e:	0976      	lsrs	r6, r6, #5
9001a040:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a044:	ea4e 0e06 	orr.w	lr, lr, r6
9001a048:	f825 e002 	strh.w	lr, [r5, r2]
9001a04c:	e7b3      	b.n	90019fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001a04e:	f04f 0800 	mov.w	r8, #0
9001a052:	eba3 0208 	sub.w	r2, r3, r8
9001a056:	2a00      	cmp	r2, #0
9001a058:	f77f af3e 	ble.w	90019ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001a05c:	1404      	asrs	r4, r0, #16
9001a05e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001a062:	140a      	asrs	r2, r1, #16
9001a064:	fb06 4202 	mla	r2, r6, r2, r4
9001a068:	9c01      	ldr	r4, [sp, #4]
9001a06a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001a06e:	0e22      	lsrs	r2, r4, #24
9001a070:	d015      	beq.n	9001a09e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a072:	9e04      	ldr	r6, [sp, #16]
9001a074:	4372      	muls	r2, r6
9001a076:	1c56      	adds	r6, r2, #1
9001a078:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001a07c:	0a26      	lsrs	r6, r4, #8
9001a07e:	1212      	asrs	r2, r2, #8
9001a080:	2aff      	cmp	r2, #255	; 0xff
9001a082:	d113      	bne.n	9001a0ac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001a084:	0962      	lsrs	r2, r4, #5
9001a086:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a08a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001a08e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a092:	f026 0607 	bic.w	r6, r6, #7
9001a096:	4316      	orrs	r6, r2
9001a098:	4326      	orrs	r6, r4
9001a09a:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001a09e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a0a0:	f108 0801 	add.w	r8, r8, #1
9001a0a4:	4410      	add	r0, r2
9001a0a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a0a8:	4411      	add	r1, r2
9001a0aa:	e7d2      	b.n	9001a052 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001a0ac:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001a0b0:	fa1f fa82 	uxth.w	sl, r2
9001a0b4:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001a0b8:	43d2      	mvns	r2, r2
9001a0ba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a0be:	fb17 f70a 	smulbb	r7, r7, sl
9001a0c2:	b2d2      	uxtb	r2, r2
9001a0c4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a0c8:	b2e4      	uxtb	r4, r4
9001a0ca:	b2f6      	uxtb	r6, r6
9001a0cc:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a0d0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a0d4:	fb14 f40a 	smulbb	r4, r4, sl
9001a0d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a0dc:	fa1f fc8c 	uxth.w	ip, ip
9001a0e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a0e4:	fb16 f60a 	smulbb	r6, r6, sl
9001a0e8:	fa5f fe8e 	uxtb.w	lr, lr
9001a0ec:	fb0e 4402 	mla	r4, lr, r2, r4
9001a0f0:	fb07 6702 	mla	r7, r7, r2, r6
9001a0f4:	f10c 0201 	add.w	r2, ip, #1
9001a0f8:	b2a4      	uxth	r4, r4
9001a0fa:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a0fe:	1c66      	adds	r6, r4, #1
9001a100:	b2bf      	uxth	r7, r7
9001a102:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a106:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001a10a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a10e:	ea46 0c0c 	orr.w	ip, r6, ip
9001a112:	1c7e      	adds	r6, r7, #1
9001a114:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001a118:	0976      	lsrs	r6, r6, #5
9001a11a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a11e:	ea4c 0c06 	orr.w	ip, ip, r6
9001a122:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001a126:	e7ba      	b.n	9001a09e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001a128:	b007      	add	sp, #28
9001a12a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a134:	b085      	sub	sp, #20
9001a136:	468b      	mov	fp, r1
9001a138:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a13c:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001a13e:	9203      	str	r2, [sp, #12]
9001a140:	6841      	ldr	r1, [r0, #4]
9001a142:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
9001a146:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
9001a14a:	fb01 2404 	mla	r4, r1, r4, r2
9001a14e:	6802      	ldr	r2, [r0, #0]
9001a150:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a154:	f8d8 2000 	ldr.w	r2, [r8]
9001a158:	9201      	str	r2, [sp, #4]
9001a15a:	f1bb 0f00 	cmp.w	fp, #0
9001a15e:	dc03      	bgt.n	9001a168 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001a160:	9a03      	ldr	r2, [sp, #12]
9001a162:	2a00      	cmp	r2, #0
9001a164:	f340 814f 	ble.w	9001a406 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a168:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001a16a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001a16e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a172:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001a174:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001a178:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
9001a17c:	2b00      	cmp	r3, #0
9001a17e:	dd0e      	ble.n	9001a19e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001a180:	1408      	asrs	r0, r1, #16
9001a182:	d405      	bmi.n	9001a190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a184:	42b8      	cmp	r0, r7
9001a186:	da03      	bge.n	9001a190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a188:	1410      	asrs	r0, r2, #16
9001a18a:	d401      	bmi.n	9001a190 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001a18c:	42b0      	cmp	r0, r6
9001a18e:	db07      	blt.n	9001a1a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a190:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a192:	3b01      	subs	r3, #1
9001a194:	3402      	adds	r4, #2
9001a196:	4401      	add	r1, r0
9001a198:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a19a:	4402      	add	r2, r0
9001a19c:	e7ee      	b.n	9001a17c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001a19e:	d017      	beq.n	9001a1d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a1a0:	1e58      	subs	r0, r3, #1
9001a1a2:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001a1a4:	fb05 1500 	mla	r5, r5, r0, r1
9001a1a8:	142d      	asrs	r5, r5, #16
9001a1aa:	d409      	bmi.n	9001a1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a1ac:	42bd      	cmp	r5, r7
9001a1ae:	da07      	bge.n	9001a1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a1b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
9001a1b2:	fb05 2000 	mla	r0, r5, r0, r2
9001a1b6:	1400      	asrs	r0, r0, #16
9001a1b8:	d402      	bmi.n	9001a1c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001a1ba:	42b0      	cmp	r0, r6
9001a1bc:	f2c0 80ba 	blt.w	9001a334 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001a1c0:	2600      	movs	r6, #0
9001a1c2:	1998      	adds	r0, r3, r6
9001a1c4:	2800      	cmp	r0, #0
9001a1c6:	dc3e      	bgt.n	9001a246 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001a1c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a1cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a1d0:	f1bb 0f00 	cmp.w	fp, #0
9001a1d4:	f340 8117 	ble.w	9001a406 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001a1d8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a1dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a1de:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a1e2:	f1bb 0b01 	subs.w	fp, fp, #1
9001a1e6:	eeb0 6a62 	vmov.f32	s12, s5
9001a1ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a1ee:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a1f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a1f6:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
9001a1fa:	eeb0 6a43 	vmov.f32	s12, s6
9001a1fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a202:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
9001a206:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a20a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a20e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a212:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a216:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a21a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a21e:	ee12 2a90 	vmov	r2, s5
9001a222:	eef0 2a47 	vmov.f32	s5, s14
9001a226:	fb92 f3f3 	sdiv	r3, r2, r3
9001a22a:	ee13 2a10 	vmov	r2, s6
9001a22e:	9311      	str	r3, [sp, #68]	; 0x44
9001a230:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a232:	eeb0 3a67 	vmov.f32	s6, s15
9001a236:	fb92 f3f3 	sdiv	r3, r2, r3
9001a23a:	9a03      	ldr	r2, [sp, #12]
9001a23c:	9312      	str	r3, [sp, #72]	; 0x48
9001a23e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001a240:	bf08      	it	eq
9001a242:	4613      	moveq	r3, r2
9001a244:	e789      	b.n	9001a15a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001a246:	140f      	asrs	r7, r1, #16
9001a248:	d424      	bmi.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a24a:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001a24e:	42bd      	cmp	r5, r7
9001a250:	dd20      	ble.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a252:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a256:	d41d      	bmi.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a258:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001a25c:	4560      	cmp	r0, ip
9001a25e:	dd19      	ble.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a260:	b22d      	sxth	r5, r5
9001a262:	9801      	ldr	r0, [sp, #4]
9001a264:	fb0c 7505 	mla	r5, ip, r5, r7
9001a268:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001a26c:	0e07      	lsrs	r7, r0, #24
9001a26e:	2fff      	cmp	r7, #255	; 0xff
9001a270:	d116      	bne.n	9001a2a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001a272:	f06f 0501 	mvn.w	r5, #1
9001a276:	fb05 f706 	mul.w	r7, r5, r6
9001a27a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
9001a27e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001a282:	0945      	lsrs	r5, r0, #5
9001a284:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001a288:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a28c:	ea4c 0505 	orr.w	r5, ip, r5
9001a290:	4305      	orrs	r5, r0
9001a292:	53e5      	strh	r5, [r4, r7]
9001a294:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a296:	3e01      	subs	r6, #1
9001a298:	4401      	add	r1, r0
9001a29a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a29c:	4402      	add	r2, r0
9001a29e:	e790      	b.n	9001a1c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a2a0:	b2fd      	uxtb	r5, r7
9001a2a2:	2f00      	cmp	r7, #0
9001a2a4:	d0f6      	beq.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a2a6:	f06f 0701 	mvn.w	r7, #1
9001a2aa:	fa1f f985 	uxth.w	r9, r5
9001a2ae:	43ed      	mvns	r5, r5
9001a2b0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001a2b4:	4377      	muls	r7, r6
9001a2b6:	fb1a fa09 	smulbb	sl, sl, r9
9001a2ba:	b2ed      	uxtb	r5, r5
9001a2bc:	f834 e007 	ldrh.w	lr, [r4, r7]
9001a2c0:	9702      	str	r7, [sp, #8]
9001a2c2:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001a2c6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a2ca:	fb17 f709 	smulbb	r7, r7, r9
9001a2ce:	b2c0      	uxtb	r0, r0
9001a2d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a2d4:	fb10 f009 	smulbb	r0, r0, r9
9001a2d8:	fb0c 7c05 	mla	ip, ip, r5, r7
9001a2dc:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a2e0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a2e4:	fa1f fc8c 	uxth.w	ip, ip
9001a2e8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a2ec:	fa5f fe8e 	uxtb.w	lr, lr
9001a2f0:	fb07 a705 	mla	r7, r7, r5, sl
9001a2f4:	fb0e 0005 	mla	r0, lr, r5, r0
9001a2f8:	f10c 0501 	add.w	r5, ip, #1
9001a2fc:	b2bf      	uxth	r7, r7
9001a2fe:	b280      	uxth	r0, r0
9001a300:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a304:	f100 0a01 	add.w	sl, r0, #1
9001a308:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a30c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001a310:	9802      	ldr	r0, [sp, #8]
9001a312:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a316:	ea4a 0c0c 	orr.w	ip, sl, ip
9001a31a:	f107 0a01 	add.w	sl, r7, #1
9001a31e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001a322:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a326:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a32a:	ea4c 0c0a 	orr.w	ip, ip, sl
9001a32e:	f824 c000 	strh.w	ip, [r4, r0]
9001a332:	e7af      	b.n	9001a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a334:	f04f 0e00 	mov.w	lr, #0
9001a338:	eba3 000e 	sub.w	r0, r3, lr
9001a33c:	2800      	cmp	r0, #0
9001a33e:	f77f af43 	ble.w	9001a1c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001a342:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001a346:	140d      	asrs	r5, r1, #16
9001a348:	1410      	asrs	r0, r2, #16
9001a34a:	fb06 5000 	mla	r0, r6, r0, r5
9001a34e:	9d01      	ldr	r5, [sp, #4]
9001a350:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001a354:	0e2e      	lsrs	r6, r5, #24
9001a356:	2eff      	cmp	r6, #255	; 0xff
9001a358:	d112      	bne.n	9001a380 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001a35a:	482c      	ldr	r0, [pc, #176]	; (9001a40c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001a35c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001a360:	0968      	lsrs	r0, r5, #5
9001a362:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a366:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001a36a:	4330      	orrs	r0, r6
9001a36c:	4328      	orrs	r0, r5
9001a36e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001a372:	9811      	ldr	r0, [sp, #68]	; 0x44
9001a374:	f10e 0e01 	add.w	lr, lr, #1
9001a378:	4401      	add	r1, r0
9001a37a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001a37c:	4402      	add	r2, r0
9001a37e:	e7db      	b.n	9001a338 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001a380:	b2f0      	uxtb	r0, r6
9001a382:	2e00      	cmp	r6, #0
9001a384:	d0f5      	beq.n	9001a372 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a386:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a38a:	fa1f f980 	uxth.w	r9, r0
9001a38e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001a392:	43c0      	mvns	r0, r0
9001a394:	ea4f 272c 	mov.w	r7, ip, asr #8
9001a398:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001a39c:	fb16 f609 	smulbb	r6, r6, r9
9001a3a0:	b2c0      	uxtb	r0, r0
9001a3a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a3a6:	b2ed      	uxtb	r5, r5
9001a3a8:	fb1a fa09 	smulbb	sl, sl, r9
9001a3ac:	fb07 6700 	mla	r7, r7, r0, r6
9001a3b0:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001a3b4:	fb15 f509 	smulbb	r5, r5, r9
9001a3b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a3bc:	b2bf      	uxth	r7, r7
9001a3be:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a3c2:	fa5f fc8c 	uxtb.w	ip, ip
9001a3c6:	fb06 a600 	mla	r6, r6, r0, sl
9001a3ca:	fb0c 5500 	mla	r5, ip, r0, r5
9001a3ce:	1c78      	adds	r0, r7, #1
9001a3d0:	b2b6      	uxth	r6, r6
9001a3d2:	b2ad      	uxth	r5, r5
9001a3d4:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001a3d8:	f105 0a01 	add.w	sl, r5, #1
9001a3dc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a3e0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001a3e4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a3e8:	ea4a 0707 	orr.w	r7, sl, r7
9001a3ec:	f106 0a01 	add.w	sl, r6, #1
9001a3f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a3f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a3f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a3fc:	ea47 070a 	orr.w	r7, r7, sl
9001a400:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001a404:	e7b5      	b.n	9001a372 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001a406:	b005      	add	sp, #20
9001a408:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a40c:	fffff800 	.word	0xfffff800

9001a410 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a414:	b087      	sub	sp, #28
9001a416:	468b      	mov	fp, r1
9001a418:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a41c:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a41e:	9203      	str	r2, [sp, #12]
9001a420:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001a424:	6841      	ldr	r1, [r0, #4]
9001a426:	9204      	str	r2, [sp, #16]
9001a428:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
9001a42c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a430:	fb01 2404 	mla	r4, r1, r4, r2
9001a434:	6802      	ldr	r2, [r0, #0]
9001a436:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a43a:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a43e:	3201      	adds	r2, #1
9001a440:	f022 0201 	bic.w	r2, r2, #1
9001a444:	9200      	str	r2, [sp, #0]
9001a446:	f8d9 2000 	ldr.w	r2, [r9]
9001a44a:	9201      	str	r2, [sp, #4]
9001a44c:	f1bb 0f00 	cmp.w	fp, #0
9001a450:	dc03      	bgt.n	9001a45a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a452:	9a03      	ldr	r2, [sp, #12]
9001a454:	2a00      	cmp	r2, #0
9001a456:	f340 816a 	ble.w	9001a72e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a45a:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a45c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001a460:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a464:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a466:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001a46a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a46e:	2b00      	cmp	r3, #0
9001a470:	dd0e      	ble.n	9001a490 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a472:	1402      	asrs	r2, r0, #16
9001a474:	d405      	bmi.n	9001a482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a476:	42ba      	cmp	r2, r7
9001a478:	da03      	bge.n	9001a482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a47a:	140a      	asrs	r2, r1, #16
9001a47c:	d401      	bmi.n	9001a482 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a47e:	42b2      	cmp	r2, r6
9001a480:	db07      	blt.n	9001a492 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001a482:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a484:	3b01      	subs	r3, #1
9001a486:	3402      	adds	r4, #2
9001a488:	4410      	add	r0, r2
9001a48a:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a48c:	4411      	add	r1, r2
9001a48e:	e7ee      	b.n	9001a46e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a490:	d017      	beq.n	9001a4c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001a492:	1e5a      	subs	r2, r3, #1
9001a494:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a496:	fb05 0502 	mla	r5, r5, r2, r0
9001a49a:	142d      	asrs	r5, r5, #16
9001a49c:	d409      	bmi.n	9001a4b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a49e:	42bd      	cmp	r5, r7
9001a4a0:	da07      	bge.n	9001a4b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a4a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a4a4:	fb05 1202 	mla	r2, r5, r2, r1
9001a4a8:	1412      	asrs	r2, r2, #16
9001a4aa:	d402      	bmi.n	9001a4b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a4ac:	42b2      	cmp	r2, r6
9001a4ae:	f2c0 80c8 	blt.w	9001a642 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001a4b2:	2700      	movs	r7, #0
9001a4b4:	19da      	adds	r2, r3, r7
9001a4b6:	2a00      	cmp	r2, #0
9001a4b8:	dc3e      	bgt.n	9001a538 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a4ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a4be:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a4c2:	f1bb 0f00 	cmp.w	fp, #0
9001a4c6:	f340 8132 	ble.w	9001a72e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001a4ca:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a4ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a4d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a4d4:	f1bb 0b01 	subs.w	fp, fp, #1
9001a4d8:	eeb0 6a62 	vmov.f32	s12, s5
9001a4dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a4e0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a4e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a4e8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a4ec:	eeb0 6a43 	vmov.f32	s12, s6
9001a4f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a4f4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a4f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a4fc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a500:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a504:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a508:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a50c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a510:	ee12 2a90 	vmov	r2, s5
9001a514:	eef0 2a47 	vmov.f32	s5, s14
9001a518:	fb92 f3f3 	sdiv	r3, r2, r3
9001a51c:	ee13 2a10 	vmov	r2, s6
9001a520:	9313      	str	r3, [sp, #76]	; 0x4c
9001a522:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a524:	eeb0 3a67 	vmov.f32	s6, s15
9001a528:	fb92 f3f3 	sdiv	r3, r2, r3
9001a52c:	9a03      	ldr	r2, [sp, #12]
9001a52e:	9314      	str	r3, [sp, #80]	; 0x50
9001a530:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a532:	bf08      	it	eq
9001a534:	4613      	moveq	r3, r2
9001a536:	e789      	b.n	9001a44c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a538:	1405      	asrs	r5, r0, #16
9001a53a:	d436      	bmi.n	9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a53c:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001a540:	42aa      	cmp	r2, r5
9001a542:	dd32      	ble.n	9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a544:	140e      	asrs	r6, r1, #16
9001a546:	d430      	bmi.n	9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a548:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001a54c:	42b2      	cmp	r2, r6
9001a54e:	dd2c      	ble.n	9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a550:	9a00      	ldr	r2, [sp, #0]
9001a552:	fb06 5502 	mla	r5, r6, r2, r5
9001a556:	9e01      	ldr	r6, [sp, #4]
9001a558:	086a      	lsrs	r2, r5, #1
9001a55a:	5cb2      	ldrb	r2, [r6, r2]
9001a55c:	07ee      	lsls	r6, r5, #31
9001a55e:	bf54      	ite	pl
9001a560:	f002 020f 	andpl.w	r2, r2, #15
9001a564:	1112      	asrmi	r2, r2, #4
9001a566:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a56a:	b2d2      	uxtb	r2, r2
9001a56c:	b1ea      	cbz	r2, 9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a56e:	9d04      	ldr	r5, [sp, #16]
9001a570:	436a      	muls	r2, r5
9001a572:	1c55      	adds	r5, r2, #1
9001a574:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a578:	4d6e      	ldr	r5, [pc, #440]	; (9001a734 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a57a:	1212      	asrs	r2, r2, #8
9001a57c:	682d      	ldr	r5, [r5, #0]
9001a57e:	2aff      	cmp	r2, #255	; 0xff
9001a580:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001a584:	9605      	str	r6, [sp, #20]
9001a586:	d116      	bne.n	9001a5b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001a588:	f06f 0201 	mvn.w	r2, #1
9001a58c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001a590:	fb02 fc07 	mul.w	ip, r2, r7
9001a594:	096a      	lsrs	r2, r5, #5
9001a596:	f026 0607 	bic.w	r6, r6, #7
9001a59a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a59e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a5a2:	4316      	orrs	r6, r2
9001a5a4:	432e      	orrs	r6, r5
9001a5a6:	f824 600c 	strh.w	r6, [r4, ip]
9001a5aa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a5ac:	3f01      	subs	r7, #1
9001a5ae:	4410      	add	r0, r2
9001a5b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a5b2:	4411      	add	r1, r2
9001a5b4:	e77e      	b.n	9001a4b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001a5b6:	f06f 0601 	mvn.w	r6, #1
9001a5ba:	fa1f fa82 	uxth.w	sl, r2
9001a5be:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001a5c2:	43d2      	mvns	r2, r2
9001a5c4:	437e      	muls	r6, r7
9001a5c6:	b2ed      	uxtb	r5, r5
9001a5c8:	fb1c fc0a 	smulbb	ip, ip, sl
9001a5cc:	b2d2      	uxtb	r2, r2
9001a5ce:	f834 8006 	ldrh.w	r8, [r4, r6]
9001a5d2:	fb15 f50a 	smulbb	r5, r5, sl
9001a5d6:	9602      	str	r6, [sp, #8]
9001a5d8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001a5dc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001a5e0:	fb16 f60a 	smulbb	r6, r6, sl
9001a5e4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001a5e8:	fb0e ce02 	mla	lr, lr, r2, ip
9001a5ec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001a5f0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001a5f4:	fa1f fe8e 	uxth.w	lr, lr
9001a5f8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
9001a5fc:	fa5f f888 	uxtb.w	r8, r8
9001a600:	fb0c 6c02 	mla	ip, ip, r2, r6
9001a604:	fb08 5502 	mla	r5, r8, r2, r5
9001a608:	f10e 0201 	add.w	r2, lr, #1
9001a60c:	fa1f fc8c 	uxth.w	ip, ip
9001a610:	b2ad      	uxth	r5, r5
9001a612:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001a616:	9a02      	ldr	r2, [sp, #8]
9001a618:	1c6e      	adds	r6, r5, #1
9001a61a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
9001a61e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001a622:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001a626:	ea46 0e0e 	orr.w	lr, r6, lr
9001a62a:	f10c 0601 	add.w	r6, ip, #1
9001a62e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001a632:	0976      	lsrs	r6, r6, #5
9001a634:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a638:	ea4e 0e06 	orr.w	lr, lr, r6
9001a63c:	f824 e002 	strh.w	lr, [r4, r2]
9001a640:	e7b3      	b.n	9001a5aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001a642:	f04f 0800 	mov.w	r8, #0
9001a646:	eba3 0208 	sub.w	r2, r3, r8
9001a64a:	2a00      	cmp	r2, #0
9001a64c:	f77f af35 	ble.w	9001a4ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001a650:	1402      	asrs	r2, r0, #16
9001a652:	9e00      	ldr	r6, [sp, #0]
9001a654:	140d      	asrs	r5, r1, #16
9001a656:	fb06 2505 	mla	r5, r6, r5, r2
9001a65a:	9e01      	ldr	r6, [sp, #4]
9001a65c:	086a      	lsrs	r2, r5, #1
9001a65e:	07ed      	lsls	r5, r5, #31
9001a660:	5cb2      	ldrb	r2, [r6, r2]
9001a662:	bf54      	ite	pl
9001a664:	f002 020f 	andpl.w	r2, r2, #15
9001a668:	1112      	asrmi	r2, r2, #4
9001a66a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a66e:	b2d2      	uxtb	r2, r2
9001a670:	b1c2      	cbz	r2, 9001a6a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a672:	9d04      	ldr	r5, [sp, #16]
9001a674:	436a      	muls	r2, r5
9001a676:	1c55      	adds	r5, r2, #1
9001a678:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001a67c:	4d2d      	ldr	r5, [pc, #180]	; (9001a734 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001a67e:	1212      	asrs	r2, r2, #8
9001a680:	682e      	ldr	r6, [r5, #0]
9001a682:	2aff      	cmp	r2, #255	; 0xff
9001a684:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001a688:	d113      	bne.n	9001a6b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a68a:	0972      	lsrs	r2, r6, #5
9001a68c:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001a690:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001a694:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a698:	f025 0507 	bic.w	r5, r5, #7
9001a69c:	4315      	orrs	r5, r2
9001a69e:	4335      	orrs	r5, r6
9001a6a0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001a6a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a6a6:	f108 0801 	add.w	r8, r8, #1
9001a6aa:	4410      	add	r0, r2
9001a6ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a6ae:	4411      	add	r1, r2
9001a6b0:	e7c9      	b.n	9001a646 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001a6b2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001a6b6:	fa1f fa82 	uxth.w	sl, r2
9001a6ba:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001a6be:	43d2      	mvns	r2, r2
9001a6c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001a6c4:	fb17 f70a 	smulbb	r7, r7, sl
9001a6c8:	b2d2      	uxtb	r2, r2
9001a6ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001a6ce:	b2f6      	uxtb	r6, r6
9001a6d0:	b2ed      	uxtb	r5, r5
9001a6d2:	fb0c 7c02 	mla	ip, ip, r2, r7
9001a6d6:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001a6da:	fb16 f60a 	smulbb	r6, r6, sl
9001a6de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a6e2:	fa1f fc8c 	uxth.w	ip, ip
9001a6e6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001a6ea:	fb15 f50a 	smulbb	r5, r5, sl
9001a6ee:	fa5f fe8e 	uxtb.w	lr, lr
9001a6f2:	fb0e 6602 	mla	r6, lr, r2, r6
9001a6f6:	fb07 5702 	mla	r7, r7, r2, r5
9001a6fa:	f10c 0201 	add.w	r2, ip, #1
9001a6fe:	b2b6      	uxth	r6, r6
9001a700:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001a704:	1c75      	adds	r5, r6, #1
9001a706:	b2bf      	uxth	r7, r7
9001a708:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001a70c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001a710:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a714:	ea45 0c0c 	orr.w	ip, r5, ip
9001a718:	1c7d      	adds	r5, r7, #1
9001a71a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001a71e:	096d      	lsrs	r5, r5, #5
9001a720:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001a724:	ea4c 0c05 	orr.w	ip, ip, r5
9001a728:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001a72c:	e7ba      	b.n	9001a6a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a72e:	b007      	add	sp, #28
9001a730:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001a734:	2402358c 	.word	0x2402358c

9001a738 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a73c:	b087      	sub	sp, #28
9001a73e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001a742:	f8df 8308 	ldr.w	r8, [pc, #776]	; 9001aa4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001a746:	9815      	ldr	r0, [sp, #84]	; 0x54
9001a748:	9101      	str	r1, [sp, #4]
9001a74a:	9205      	str	r2, [sp, #20]
9001a74c:	6841      	ldr	r1, [r0, #4]
9001a74e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
9001a752:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
9001a756:	fb01 2404 	mla	r4, r1, r4, r2
9001a75a:	6802      	ldr	r2, [r0, #0]
9001a75c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a760:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a764:	3201      	adds	r2, #1
9001a766:	f022 0201 	bic.w	r2, r2, #1
9001a76a:	9202      	str	r2, [sp, #8]
9001a76c:	f8db 2000 	ldr.w	r2, [fp]
9001a770:	9203      	str	r2, [sp, #12]
9001a772:	9a01      	ldr	r2, [sp, #4]
9001a774:	2a00      	cmp	r2, #0
9001a776:	dc03      	bgt.n	9001a780 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a778:	9a05      	ldr	r2, [sp, #20]
9001a77a:	2a00      	cmp	r2, #0
9001a77c:	f340 8162 	ble.w	9001aa44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a780:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001a782:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001a786:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
9001a78a:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001a78c:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001a790:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
9001a794:	2b00      	cmp	r3, #0
9001a796:	dd0e      	ble.n	9001a7b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a798:	1402      	asrs	r2, r0, #16
9001a79a:	d405      	bmi.n	9001a7a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a79c:	42ba      	cmp	r2, r7
9001a79e:	da03      	bge.n	9001a7a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a7a0:	140a      	asrs	r2, r1, #16
9001a7a2:	d401      	bmi.n	9001a7a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a7a4:	42b2      	cmp	r2, r6
9001a7a6:	db07      	blt.n	9001a7b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a7a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a7aa:	3b01      	subs	r3, #1
9001a7ac:	3402      	adds	r4, #2
9001a7ae:	4410      	add	r0, r2
9001a7b0:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a7b2:	4411      	add	r1, r2
9001a7b4:	e7ee      	b.n	9001a794 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a7b6:	d017      	beq.n	9001a7e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001a7b8:	1e5a      	subs	r2, r3, #1
9001a7ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9001a7bc:	fb05 0502 	mla	r5, r5, r2, r0
9001a7c0:	142d      	asrs	r5, r5, #16
9001a7c2:	d409      	bmi.n	9001a7d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a7c4:	42bd      	cmp	r5, r7
9001a7c6:	da07      	bge.n	9001a7d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a7c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
9001a7ca:	fb05 1202 	mla	r2, r5, r2, r1
9001a7ce:	1412      	asrs	r2, r2, #16
9001a7d0:	d402      	bmi.n	9001a7d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001a7d2:	42b2      	cmp	r2, r6
9001a7d4:	f2c0 80c3 	blt.w	9001a95e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001a7d8:	2500      	movs	r5, #0
9001a7da:	195a      	adds	r2, r3, r5
9001a7dc:	2a00      	cmp	r2, #0
9001a7de:	dc3f      	bgt.n	9001a860 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001a7e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a7e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a7e8:	9b01      	ldr	r3, [sp, #4]
9001a7ea:	2b00      	cmp	r3, #0
9001a7ec:	f340 812a 	ble.w	9001aa44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001a7f0:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a7f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a7f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a7fa:	eeb0 6a62 	vmov.f32	s12, s5
9001a7fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a802:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a806:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a80a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
9001a80e:	eeb0 6a43 	vmov.f32	s12, s6
9001a812:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a816:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
9001a81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a81e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a822:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a826:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a82a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a82e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a832:	ee12 2a90 	vmov	r2, s5
9001a836:	eef0 2a47 	vmov.f32	s5, s14
9001a83a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a83e:	ee13 2a10 	vmov	r2, s6
9001a842:	9313      	str	r3, [sp, #76]	; 0x4c
9001a844:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a846:	eeb0 3a67 	vmov.f32	s6, s15
9001a84a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a84e:	9314      	str	r3, [sp, #80]	; 0x50
9001a850:	9b01      	ldr	r3, [sp, #4]
9001a852:	9a05      	ldr	r2, [sp, #20]
9001a854:	3b01      	subs	r3, #1
9001a856:	9301      	str	r3, [sp, #4]
9001a858:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001a85a:	bf08      	it	eq
9001a85c:	4613      	moveq	r3, r2
9001a85e:	e788      	b.n	9001a772 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a860:	1406      	asrs	r6, r0, #16
9001a862:	d42c      	bmi.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a864:	f8db 2008 	ldr.w	r2, [fp, #8]
9001a868:	42b2      	cmp	r2, r6
9001a86a:	dd28      	ble.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a86c:	140f      	asrs	r7, r1, #16
9001a86e:	d426      	bmi.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a870:	f8db 200c 	ldr.w	r2, [fp, #12]
9001a874:	42ba      	cmp	r2, r7
9001a876:	dd22      	ble.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a878:	9a02      	ldr	r2, [sp, #8]
9001a87a:	fb07 6602 	mla	r6, r7, r2, r6
9001a87e:	9f03      	ldr	r7, [sp, #12]
9001a880:	0872      	lsrs	r2, r6, #1
9001a882:	07f6      	lsls	r6, r6, #31
9001a884:	5cba      	ldrb	r2, [r7, r2]
9001a886:	bf54      	ite	pl
9001a888:	f002 020f 	andpl.w	r2, r2, #15
9001a88c:	1112      	asrmi	r2, r2, #4
9001a88e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a892:	b2d2      	uxtb	r2, r2
9001a894:	2aff      	cmp	r2, #255	; 0xff
9001a896:	d118      	bne.n	9001a8ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001a898:	f06f 0601 	mvn.w	r6, #1
9001a89c:	f8d8 2000 	ldr.w	r2, [r8]
9001a8a0:	fb06 f705 	mul.w	r7, r6, r5
9001a8a4:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
9001a8a8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001a8ac:	0956      	lsrs	r6, r2, #5
9001a8ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001a8b2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001a8b6:	ea4c 0606 	orr.w	r6, ip, r6
9001a8ba:	4316      	orrs	r6, r2
9001a8bc:	53e6      	strh	r6, [r4, r7]
9001a8be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a8c0:	3d01      	subs	r5, #1
9001a8c2:	4410      	add	r0, r2
9001a8c4:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a8c6:	4411      	add	r1, r2
9001a8c8:	e787      	b.n	9001a7da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001a8ca:	2a00      	cmp	r2, #0
9001a8cc:	d0f7      	beq.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a8ce:	f06f 0601 	mvn.w	r6, #1
9001a8d2:	f8d8 c000 	ldr.w	ip, [r8]
9001a8d6:	fa1f f982 	uxth.w	r9, r2
9001a8da:	43d2      	mvns	r2, r2
9001a8dc:	436e      	muls	r6, r5
9001a8de:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001a8e2:	b2d2      	uxtb	r2, r2
9001a8e4:	f834 e006 	ldrh.w	lr, [r4, r6]
9001a8e8:	fb1a fa09 	smulbb	sl, sl, r9
9001a8ec:	9604      	str	r6, [sp, #16]
9001a8ee:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001a8f2:	ea4f 272e 	mov.w	r7, lr, asr #8
9001a8f6:	fb16 f609 	smulbb	r6, r6, r9
9001a8fa:	fa5f fc8c 	uxtb.w	ip, ip
9001a8fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001a902:	fb1c fc09 	smulbb	ip, ip, r9
9001a906:	fb07 6702 	mla	r7, r7, r2, r6
9001a90a:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001a90e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001a912:	b2bf      	uxth	r7, r7
9001a914:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001a918:	fa5f fe8e 	uxtb.w	lr, lr
9001a91c:	fb06 a602 	mla	r6, r6, r2, sl
9001a920:	fb0e cc02 	mla	ip, lr, r2, ip
9001a924:	1c7a      	adds	r2, r7, #1
9001a926:	b2b6      	uxth	r6, r6
9001a928:	fa1f fc8c 	uxth.w	ip, ip
9001a92c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001a930:	9a04      	ldr	r2, [sp, #16]
9001a932:	f10c 0a01 	add.w	sl, ip, #1
9001a936:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001a93a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001a93e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001a942:	ea4a 0707 	orr.w	r7, sl, r7
9001a946:	f106 0a01 	add.w	sl, r6, #1
9001a94a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001a94e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001a952:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001a956:	ea47 070a 	orr.w	r7, r7, sl
9001a95a:	52a7      	strh	r7, [r4, r2]
9001a95c:	e7af      	b.n	9001a8be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001a95e:	f04f 0e00 	mov.w	lr, #0
9001a962:	eba3 020e 	sub.w	r2, r3, lr
9001a966:	2a00      	cmp	r2, #0
9001a968:	f77f af3a 	ble.w	9001a7e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001a96c:	1402      	asrs	r2, r0, #16
9001a96e:	9e02      	ldr	r6, [sp, #8]
9001a970:	140d      	asrs	r5, r1, #16
9001a972:	fb06 2505 	mla	r5, r6, r5, r2
9001a976:	9e03      	ldr	r6, [sp, #12]
9001a978:	086a      	lsrs	r2, r5, #1
9001a97a:	07ed      	lsls	r5, r5, #31
9001a97c:	5cb2      	ldrb	r2, [r6, r2]
9001a97e:	bf54      	ite	pl
9001a980:	f002 020f 	andpl.w	r2, r2, #15
9001a984:	1112      	asrmi	r2, r2, #4
9001a986:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001a98a:	b2d2      	uxtb	r2, r2
9001a98c:	2aff      	cmp	r2, #255	; 0xff
9001a98e:	d115      	bne.n	9001a9bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001a990:	f8d8 5000 	ldr.w	r5, [r8]
9001a994:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
9001a998:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001a99c:	096a      	lsrs	r2, r5, #5
9001a99e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001a9a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001a9a6:	4332      	orrs	r2, r6
9001a9a8:	432a      	orrs	r2, r5
9001a9aa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001a9ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001a9b0:	f10e 0e01 	add.w	lr, lr, #1
9001a9b4:	4410      	add	r0, r2
9001a9b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001a9b8:	4411      	add	r1, r2
9001a9ba:	e7d2      	b.n	9001a962 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001a9bc:	2a00      	cmp	r2, #0
9001a9be:	d0f6      	beq.n	9001a9ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001a9c0:	f8d8 7000 	ldr.w	r7, [r8]
9001a9c4:	fa1f f982 	uxth.w	r9, r2
9001a9c8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001a9cc:	43d2      	mvns	r2, r2
9001a9ce:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001a9d2:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001a9d6:	ea4f 262c 	mov.w	r6, ip, asr #8
9001a9da:	fb15 f509 	smulbb	r5, r5, r9
9001a9de:	b2d2      	uxtb	r2, r2
9001a9e0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001a9e4:	b2ff      	uxtb	r7, r7
9001a9e6:	fb1a fa09 	smulbb	sl, sl, r9
9001a9ea:	fb06 5602 	mla	r6, r6, r2, r5
9001a9ee:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001a9f2:	fb17 f709 	smulbb	r7, r7, r9
9001a9f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001a9fa:	b2b6      	uxth	r6, r6
9001a9fc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001aa00:	fa5f fc8c 	uxtb.w	ip, ip
9001aa04:	fb05 a502 	mla	r5, r5, r2, sl
9001aa08:	fb0c 7702 	mla	r7, ip, r2, r7
9001aa0c:	1c72      	adds	r2, r6, #1
9001aa0e:	b2ad      	uxth	r5, r5
9001aa10:	b2bf      	uxth	r7, r7
9001aa12:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001aa16:	f107 0a01 	add.w	sl, r7, #1
9001aa1a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001aa1e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001aa22:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001aa26:	ea4a 0606 	orr.w	r6, sl, r6
9001aa2a:	f105 0a01 	add.w	sl, r5, #1
9001aa2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001aa32:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001aa36:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001aa3a:	ea46 060a 	orr.w	r6, r6, sl
9001aa3e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001aa42:	e7b4      	b.n	9001a9ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001aa44:	b007      	add	sp, #28
9001aa46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aa4a:	bf00      	nop
9001aa4c:	2402358c 	.word	0x2402358c

9001aa50 <_ZN8touchgfx8LCD16bppD1Ev>:
9001aa50:	4770      	bx	lr

9001aa52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001aa52:	4770      	bx	lr

9001aa54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001aa54:	4770      	bx	lr

9001aa56 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001aa56:	4770      	bx	lr

9001aa58 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001aa58:	4770      	bx	lr

9001aa5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001aa5a:	4770      	bx	lr

9001aa5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001aa5c:	4770      	bx	lr

9001aa5e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001aa5e:	4770      	bx	lr

9001aa60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001aa60:	4770      	bx	lr

9001aa62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001aa62:	4770      	bx	lr

9001aa64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001aa64:	4770      	bx	lr

9001aa66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001aa66:	4770      	bx	lr

9001aa68 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001aa68:	4770      	bx	lr

9001aa6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001aa6a:	4770      	bx	lr

9001aa6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001aa6c:	4770      	bx	lr

9001aa6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001aa6e:	4770      	bx	lr

9001aa70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001aa70:	4770      	bx	lr

9001aa72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001aa72:	4770      	bx	lr

9001aa74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001aa74:	4770      	bx	lr

9001aa76 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001aa76:	4770      	bx	lr

9001aa78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001aa78:	4770      	bx	lr

9001aa7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001aa7a:	4770      	bx	lr

9001aa7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001aa7c:	4770      	bx	lr

9001aa7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001aa7e:	4770      	bx	lr

9001aa80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001aa80:	4770      	bx	lr

9001aa82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001aa82:	4770      	bx	lr

9001aa84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001aa84:	4770      	bx	lr

9001aa86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001aa86:	4770      	bx	lr

9001aa88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001aa88:	4770      	bx	lr

9001aa8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001aa8a:	4770      	bx	lr

9001aa8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001aa8c:	4770      	bx	lr

9001aa8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001aa8e:	4770      	bx	lr

9001aa90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001aa90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001aa94:	b088      	sub	sp, #32
9001aa96:	4606      	mov	r6, r0
9001aa98:	4688      	mov	r8, r1
9001aa9a:	4691      	mov	r9, r2
9001aa9c:	ac08      	add	r4, sp, #32
9001aa9e:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001aaa2:	4620      	mov	r0, r4
9001aaa4:	f7fd fc64 	bl	90018370 <_ZNK8touchgfx6Bitmap7getDataEv>
9001aaa8:	6833      	ldr	r3, [r6, #0]
9001aaaa:	4605      	mov	r5, r0
9001aaac:	4620      	mov	r0, r4
9001aaae:	699f      	ldr	r7, [r3, #24]
9001aab0:	f7fd fb72 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001aab4:	4682      	mov	sl, r0
9001aab6:	4620      	mov	r0, r4
9001aab8:	f7fd fba2 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001aabc:	9500      	str	r5, [sp, #0]
9001aabe:	464b      	mov	r3, r9
9001aac0:	4642      	mov	r2, r8
9001aac2:	4631      	mov	r1, r6
9001aac4:	e9cd a001 	strd	sl, r0, [sp, #4]
9001aac8:	a806      	add	r0, sp, #24
9001aaca:	47b8      	blx	r7
9001aacc:	4628      	mov	r0, r5
9001aace:	b008      	add	sp, #32
9001aad0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

9001aad4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001aad4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001aad8:	2300      	movs	r3, #0
9001aada:	9300      	str	r3, [sp, #0]
9001aadc:	4b3d      	ldr	r3, [pc, #244]	; (9001abd4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001aade:	781b      	ldrb	r3, [r3, #0]
9001aae0:	2b00      	cmp	r3, #0
9001aae2:	d137      	bne.n	9001ab54 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001aae4:	4a3c      	ldr	r2, [pc, #240]	; (9001abd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001aae6:	f9b2 2000 	ldrsh.w	r2, [r2]
9001aaea:	f8ad 2004 	strh.w	r2, [sp, #4]
9001aaee:	2b00      	cmp	r3, #0
9001aaf0:	d132      	bne.n	9001ab58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001aaf2:	4b3a      	ldr	r3, [pc, #232]	; (9001abdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001aaf4:	f9b3 3000 	ldrsh.w	r3, [r3]
9001aaf8:	ac02      	add	r4, sp, #8
9001aafa:	6808      	ldr	r0, [r1, #0]
9001aafc:	f8ad 3006 	strh.w	r3, [sp, #6]
9001ab00:	ab02      	add	r3, sp, #8
9001ab02:	6849      	ldr	r1, [r1, #4]
9001ab04:	4d36      	ldr	r5, [pc, #216]	; (9001abe0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001ab06:	c303      	stmia	r3!, {r0, r1}
9001ab08:	4669      	mov	r1, sp
9001ab0a:	4620      	mov	r0, r4
9001ab0c:	f7fa f892 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ab10:	4668      	mov	r0, sp
9001ab12:	f7fa f84b 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ab16:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001ab1a:	f8bd 2000 	ldrh.w	r2, [sp]
9001ab1e:	462f      	mov	r7, r5
9001ab20:	6828      	ldr	r0, [r5, #0]
9001ab22:	4413      	add	r3, r2
9001ab24:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001ab28:	f8ad 3008 	strh.w	r3, [sp, #8]
9001ab2c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001ab30:	4413      	add	r3, r2
9001ab32:	f8ad 300a 	strh.w	r3, [sp, #10]
9001ab36:	6803      	ldr	r3, [r0, #0]
9001ab38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ab3a:	4798      	blx	r3
9001ab3c:	f010 0f01 	tst.w	r0, #1
9001ab40:	d00c      	beq.n	9001ab5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001ab42:	6828      	ldr	r0, [r5, #0]
9001ab44:	6803      	ldr	r3, [r0, #0]
9001ab46:	e894 0006 	ldmia.w	r4, {r1, r2}
9001ab4a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
9001ab4c:	4798      	blx	r3
9001ab4e:	b004      	add	sp, #16
9001ab50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ab54:	4a21      	ldr	r2, [pc, #132]	; (9001abdc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001ab56:	e7c6      	b.n	9001aae6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001ab58:	4b1f      	ldr	r3, [pc, #124]	; (9001abd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ab5a:	e7cb      	b.n	9001aaf4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001ab5c:	6838      	ldr	r0, [r7, #0]
9001ab5e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001ab62:	6803      	ldr	r3, [r0, #0]
9001ab64:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001ab68:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001ab6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001ab6e:	4798      	blx	r3
9001ab70:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001ab74:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ab78:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001ab7c:	fb16 3602 	smlabb	r6, r6, r2, r3
9001ab80:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001ab84:	6838      	ldr	r0, [r7, #0]
9001ab86:	6803      	ldr	r3, [r0, #0]
9001ab88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ab8a:	4798      	blx	r3
9001ab8c:	4a12      	ldr	r2, [pc, #72]	; (9001abd8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001ab8e:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001ab92:	8813      	ldrh	r3, [r2, #0]
9001ab94:	4691      	mov	r9, r2
9001ab96:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001ab9a:	435d      	muls	r5, r3
9001ab9c:	fb03 1404 	mla	r4, r3, r4, r1
9001aba0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001aba4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001aba8:	6838      	ldr	r0, [r7, #0]
9001abaa:	42ac      	cmp	r4, r5
9001abac:	6803      	ldr	r3, [r0, #0]
9001abae:	d20e      	bcs.n	9001abce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001abb0:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
9001abb4:	4632      	mov	r2, r6
9001abb6:	4643      	mov	r3, r8
9001abb8:	4621      	mov	r1, r4
9001abba:	47d0      	blx	sl
9001abbc:	f8b9 3000 	ldrh.w	r3, [r9]
9001abc0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001abc4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001abc8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001abcc:	e7ec      	b.n	9001aba8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001abce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001abd0:	4798      	blx	r3
9001abd2:	e7bc      	b.n	9001ab4e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001abd4:	24023574 	.word	0x24023574
9001abd8:	24023576 	.word	0x24023576
9001abdc:	24023578 	.word	0x24023578
9001abe0:	2402357c 	.word	0x2402357c

9001abe4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001abe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001abe8:	b08b      	sub	sp, #44	; 0x2c
9001abea:	460f      	mov	r7, r1
9001abec:	4616      	mov	r6, r2
9001abee:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
9001abf2:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
9001abf6:	f1bb 0f00 	cmp.w	fp, #0
9001abfa:	d04a      	beq.n	9001ac92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001abfc:	6810      	ldr	r0, [r2, #0]
9001abfe:	ad06      	add	r5, sp, #24
9001ac00:	6851      	ldr	r1, [r2, #4]
9001ac02:	c503      	stmia	r5!, {r0, r1}
9001ac04:	6818      	ldr	r0, [r3, #0]
9001ac06:	ad08      	add	r5, sp, #32
9001ac08:	6859      	ldr	r1, [r3, #4]
9001ac0a:	c503      	stmia	r5!, {r0, r1}
9001ac0c:	a806      	add	r0, sp, #24
9001ac0e:	f7f9 ffcd 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ac12:	4631      	mov	r1, r6
9001ac14:	a808      	add	r0, sp, #32
9001ac16:	f7fa f80d 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ac1a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001ac1e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9001ac22:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001ac26:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
9001ac2a:	fb16 2103 	smlabb	r1, r6, r3, r2
9001ac2e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
9001ac32:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001ac36:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001ac3a:	4f5f      	ldr	r7, [pc, #380]	; (9001adb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001ac3c:	440a      	add	r2, r1
9001ac3e:	6838      	ldr	r0, [r7, #0]
9001ac40:	46b9      	mov	r9, r7
9001ac42:	f8ad 2020 	strh.w	r2, [sp, #32]
9001ac46:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001ac4a:	4413      	add	r3, r2
9001ac4c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
9001ac50:	6803      	ldr	r3, [r0, #0]
9001ac52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ac54:	4798      	blx	r3
9001ac56:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001ac5a:	d11d      	bne.n	9001ac98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001ac5c:	b9fc      	cbnz	r4, 9001ac9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ac5e:	f010 0f01 	tst.w	r0, #1
9001ac62:	d01c      	beq.n	9001ac9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001ac64:	f8d9 0000 	ldr.w	r0, [r9]
9001ac68:	2700      	movs	r7, #0
9001ac6a:	b2ad      	uxth	r5, r5
9001ac6c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
9001ac70:	6801      	ldr	r1, [r0, #0]
9001ac72:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001ac76:	f8cd b00c 	str.w	fp, [sp, #12]
9001ac7a:	9501      	str	r5, [sp, #4]
9001ac7c:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001ac80:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001ac84:	9402      	str	r4, [sp, #8]
9001ac86:	fa1f f488 	uxth.w	r4, r8
9001ac8a:	9400      	str	r4, [sp, #0]
9001ac8c:	6c4c      	ldr	r4, [r1, #68]	; 0x44
9001ac8e:	4631      	mov	r1, r6
9001ac90:	47a0      	blx	r4
9001ac92:	b00b      	add	sp, #44	; 0x2c
9001ac94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ac98:	f010 0f04 	tst.w	r0, #4
9001ac9c:	e7e1      	b.n	9001ac62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001ac9e:	f8d9 0000 	ldr.w	r0, [r9]
9001aca2:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001aca6:	6803      	ldr	r3, [r0, #0]
9001aca8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001acaa:	4798      	blx	r3
9001acac:	4b43      	ldr	r3, [pc, #268]	; (9001adbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001acae:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
9001acb2:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
9001acb6:	881a      	ldrh	r2, [r3, #0]
9001acb8:	469a      	mov	sl, r3
9001acba:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001acbe:	fb05 f502 	mul.w	r5, r5, r2
9001acc2:	fb02 1404 	mla	r4, r2, r4, r1
9001acc6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001acca:	d059      	beq.n	9001ad80 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001accc:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
9001acd0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001acd4:	fa1f f28b 	uxth.w	r2, fp
9001acd8:	469e      	mov	lr, r3
9001acda:	fa1f f989 	uxth.w	r9, r9
9001acde:	42ac      	cmp	r4, r5
9001ace0:	d264      	bcs.n	9001adac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ace2:	eb04 0a07 	add.w	sl, r4, r7
9001ace6:	4554      	cmp	r4, sl
9001ace8:	d23d      	bcs.n	9001ad66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001acea:	8821      	ldrh	r1, [r4, #0]
9001acec:	f836 3b02 	ldrh.w	r3, [r6], #2
9001acf0:	1208      	asrs	r0, r1, #8
9001acf2:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001acf6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001acfa:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001acfe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001ad02:	00c9      	lsls	r1, r1, #3
9001ad04:	fb10 f009 	smulbb	r0, r0, r9
9001ad08:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001ad0c:	b2c9      	uxtb	r1, r1
9001ad0e:	fb0c 0c02 	mla	ip, ip, r2, r0
9001ad12:	10d8      	asrs	r0, r3, #3
9001ad14:	fb1b fb09 	smulbb	fp, fp, r9
9001ad18:	00db      	lsls	r3, r3, #3
9001ad1a:	fa1f fc8c 	uxth.w	ip, ip
9001ad1e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9001ad22:	fb11 f109 	smulbb	r1, r1, r9
9001ad26:	b2db      	uxtb	r3, r3
9001ad28:	fb00 b002 	mla	r0, r0, r2, fp
9001ad2c:	f10c 0b01 	add.w	fp, ip, #1
9001ad30:	fb03 1302 	mla	r3, r3, r2, r1
9001ad34:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001ad38:	b29b      	uxth	r3, r3
9001ad3a:	b280      	uxth	r0, r0
9001ad3c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
9001ad40:	f103 0c01 	add.w	ip, r3, #1
9001ad44:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001ad48:	1c43      	adds	r3, r0, #1
9001ad4a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001ad4e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001ad52:	0940      	lsrs	r0, r0, #5
9001ad54:	ea4c 0c0b 	orr.w	ip, ip, fp
9001ad58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9001ad5c:	ea4c 0c00 	orr.w	ip, ip, r0
9001ad60:	f824 cb02 	strh.w	ip, [r4], #2
9001ad64:	e7bf      	b.n	9001ace6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001ad66:	f8be 3000 	ldrh.w	r3, [lr]
9001ad6a:	eba3 0308 	sub.w	r3, r3, r8
9001ad6e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ad72:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ad76:	eba3 0308 	sub.w	r3, r3, r8
9001ad7a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001ad7e:	e7ae      	b.n	9001acde <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001ad80:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001ad84:	f8d9 0000 	ldr.w	r0, [r9]
9001ad88:	42ac      	cmp	r4, r5
9001ad8a:	6803      	ldr	r3, [r0, #0]
9001ad8c:	d20e      	bcs.n	9001adac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001ad8e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
9001ad92:	4632      	mov	r2, r6
9001ad94:	463b      	mov	r3, r7
9001ad96:	4621      	mov	r1, r4
9001ad98:	47c0      	blx	r8
9001ad9a:	f8ba 3000 	ldrh.w	r3, [sl]
9001ad9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ada2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001ada6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001adaa:	e7eb      	b.n	9001ad84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001adac:	4b02      	ldr	r3, [pc, #8]	; (9001adb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001adae:	6818      	ldr	r0, [r3, #0]
9001adb0:	6803      	ldr	r3, [r0, #0]
9001adb2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001adb4:	4798      	blx	r3
9001adb6:	e76c      	b.n	9001ac92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001adb8:	2402357c 	.word	0x2402357c
9001adbc:	24023576 	.word	0x24023576

9001adc0 <_ZN8touchgfx8LCD16bppD0Ev>:
9001adc0:	b510      	push	{r4, lr}
9001adc2:	4604      	mov	r4, r0
9001adc4:	2188      	movs	r1, #136	; 0x88
9001adc6:	f00b f9f4 	bl	900261b2 <_ZdlPvj>
9001adca:	4620      	mov	r0, r4
9001adcc:	bd10      	pop	{r4, pc}

9001adce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001adce:	b510      	push	{r4, lr}
9001add0:	4604      	mov	r4, r0
9001add2:	2104      	movs	r1, #4
9001add4:	f00b f9ed 	bl	900261b2 <_ZdlPvj>
9001add8:	4620      	mov	r0, r4
9001adda:	bd10      	pop	{r4, pc}

9001addc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001addc:	b510      	push	{r4, lr}
9001adde:	4604      	mov	r4, r0
9001ade0:	2104      	movs	r1, #4
9001ade2:	f00b f9e6 	bl	900261b2 <_ZdlPvj>
9001ade6:	4620      	mov	r0, r4
9001ade8:	bd10      	pop	{r4, pc}

9001adea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001adea:	b510      	push	{r4, lr}
9001adec:	4604      	mov	r4, r0
9001adee:	f640 0144 	movw	r1, #2116	; 0x844
9001adf2:	f00b f9de 	bl	900261b2 <_ZdlPvj>
9001adf6:	4620      	mov	r0, r4
9001adf8:	bd10      	pop	{r4, pc}

9001adfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001adfa:	b510      	push	{r4, lr}
9001adfc:	4604      	mov	r4, r0
9001adfe:	2104      	movs	r1, #4
9001ae00:	f00b f9d7 	bl	900261b2 <_ZdlPvj>
9001ae04:	4620      	mov	r0, r4
9001ae06:	bd10      	pop	{r4, pc}

9001ae08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ae08:	b510      	push	{r4, lr}
9001ae0a:	4604      	mov	r4, r0
9001ae0c:	2104      	movs	r1, #4
9001ae0e:	f00b f9d0 	bl	900261b2 <_ZdlPvj>
9001ae12:	4620      	mov	r0, r4
9001ae14:	bd10      	pop	{r4, pc}

9001ae16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ae16:	b510      	push	{r4, lr}
9001ae18:	4604      	mov	r4, r0
9001ae1a:	2104      	movs	r1, #4
9001ae1c:	f00b f9c9 	bl	900261b2 <_ZdlPvj>
9001ae20:	4620      	mov	r0, r4
9001ae22:	bd10      	pop	{r4, pc}

9001ae24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ae24:	b510      	push	{r4, lr}
9001ae26:	4604      	mov	r4, r0
9001ae28:	2104      	movs	r1, #4
9001ae2a:	f00b f9c2 	bl	900261b2 <_ZdlPvj>
9001ae2e:	4620      	mov	r0, r4
9001ae30:	bd10      	pop	{r4, pc}

9001ae32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ae32:	b510      	push	{r4, lr}
9001ae34:	4604      	mov	r4, r0
9001ae36:	2104      	movs	r1, #4
9001ae38:	f00b f9bb 	bl	900261b2 <_ZdlPvj>
9001ae3c:	4620      	mov	r0, r4
9001ae3e:	bd10      	pop	{r4, pc}

9001ae40 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001ae40:	b510      	push	{r4, lr}
9001ae42:	4604      	mov	r4, r0
9001ae44:	2104      	movs	r1, #4
9001ae46:	f00b f9b4 	bl	900261b2 <_ZdlPvj>
9001ae4a:	4620      	mov	r0, r4
9001ae4c:	bd10      	pop	{r4, pc}

9001ae4e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ae4e:	b510      	push	{r4, lr}
9001ae50:	4604      	mov	r4, r0
9001ae52:	2104      	movs	r1, #4
9001ae54:	f00b f9ad 	bl	900261b2 <_ZdlPvj>
9001ae58:	4620      	mov	r0, r4
9001ae5a:	bd10      	pop	{r4, pc}

9001ae5c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001ae5c:	b510      	push	{r4, lr}
9001ae5e:	4604      	mov	r4, r0
9001ae60:	2104      	movs	r1, #4
9001ae62:	f00b f9a6 	bl	900261b2 <_ZdlPvj>
9001ae66:	4620      	mov	r0, r4
9001ae68:	bd10      	pop	{r4, pc}

9001ae6a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ae6a:	b510      	push	{r4, lr}
9001ae6c:	4604      	mov	r4, r0
9001ae6e:	2104      	movs	r1, #4
9001ae70:	f00b f99f 	bl	900261b2 <_ZdlPvj>
9001ae74:	4620      	mov	r0, r4
9001ae76:	bd10      	pop	{r4, pc}

9001ae78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ae78:	b510      	push	{r4, lr}
9001ae7a:	4604      	mov	r4, r0
9001ae7c:	2104      	movs	r1, #4
9001ae7e:	f00b f998 	bl	900261b2 <_ZdlPvj>
9001ae82:	4620      	mov	r0, r4
9001ae84:	bd10      	pop	{r4, pc}

9001ae86 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ae86:	b510      	push	{r4, lr}
9001ae88:	4604      	mov	r4, r0
9001ae8a:	2104      	movs	r1, #4
9001ae8c:	f00b f991 	bl	900261b2 <_ZdlPvj>
9001ae90:	4620      	mov	r0, r4
9001ae92:	bd10      	pop	{r4, pc}

9001ae94 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ae94:	b510      	push	{r4, lr}
9001ae96:	4604      	mov	r4, r0
9001ae98:	2104      	movs	r1, #4
9001ae9a:	f00b f98a 	bl	900261b2 <_ZdlPvj>
9001ae9e:	4620      	mov	r0, r4
9001aea0:	bd10      	pop	{r4, pc}

9001aea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001aea2:	b510      	push	{r4, lr}
9001aea4:	4604      	mov	r4, r0
9001aea6:	2104      	movs	r1, #4
9001aea8:	f00b f983 	bl	900261b2 <_ZdlPvj>
9001aeac:	4620      	mov	r0, r4
9001aeae:	bd10      	pop	{r4, pc}

9001aeb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001aeb0:	b510      	push	{r4, lr}
9001aeb2:	4604      	mov	r4, r0
9001aeb4:	2104      	movs	r1, #4
9001aeb6:	f00b f97c 	bl	900261b2 <_ZdlPvj>
9001aeba:	4620      	mov	r0, r4
9001aebc:	bd10      	pop	{r4, pc}

9001aebe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001aebe:	b510      	push	{r4, lr}
9001aec0:	4604      	mov	r4, r0
9001aec2:	2104      	movs	r1, #4
9001aec4:	f00b f975 	bl	900261b2 <_ZdlPvj>
9001aec8:	4620      	mov	r0, r4
9001aeca:	bd10      	pop	{r4, pc}

9001aecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001aecc:	b510      	push	{r4, lr}
9001aece:	4604      	mov	r4, r0
9001aed0:	2104      	movs	r1, #4
9001aed2:	f00b f96e 	bl	900261b2 <_ZdlPvj>
9001aed6:	4620      	mov	r0, r4
9001aed8:	bd10      	pop	{r4, pc}

9001aeda <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001aeda:	b510      	push	{r4, lr}
9001aedc:	4604      	mov	r4, r0
9001aede:	2104      	movs	r1, #4
9001aee0:	f00b f967 	bl	900261b2 <_ZdlPvj>
9001aee4:	4620      	mov	r0, r4
9001aee6:	bd10      	pop	{r4, pc}

9001aee8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001aee8:	b510      	push	{r4, lr}
9001aeea:	4604      	mov	r4, r0
9001aeec:	2104      	movs	r1, #4
9001aeee:	f00b f960 	bl	900261b2 <_ZdlPvj>
9001aef2:	4620      	mov	r0, r4
9001aef4:	bd10      	pop	{r4, pc}

9001aef6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001aef6:	b510      	push	{r4, lr}
9001aef8:	4604      	mov	r4, r0
9001aefa:	2104      	movs	r1, #4
9001aefc:	f00b f959 	bl	900261b2 <_ZdlPvj>
9001af00:	4620      	mov	r0, r4
9001af02:	bd10      	pop	{r4, pc}

9001af04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001af04:	b510      	push	{r4, lr}
9001af06:	4604      	mov	r4, r0
9001af08:	2104      	movs	r1, #4
9001af0a:	f00b f952 	bl	900261b2 <_ZdlPvj>
9001af0e:	4620      	mov	r0, r4
9001af10:	bd10      	pop	{r4, pc}

9001af12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001af12:	b510      	push	{r4, lr}
9001af14:	4604      	mov	r4, r0
9001af16:	2104      	movs	r1, #4
9001af18:	f00b f94b 	bl	900261b2 <_ZdlPvj>
9001af1c:	4620      	mov	r0, r4
9001af1e:	bd10      	pop	{r4, pc}

9001af20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001af20:	b510      	push	{r4, lr}
9001af22:	4604      	mov	r4, r0
9001af24:	2104      	movs	r1, #4
9001af26:	f00b f944 	bl	900261b2 <_ZdlPvj>
9001af2a:	4620      	mov	r0, r4
9001af2c:	bd10      	pop	{r4, pc}

9001af2e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001af2e:	b510      	push	{r4, lr}
9001af30:	4604      	mov	r4, r0
9001af32:	2104      	movs	r1, #4
9001af34:	f00b f93d 	bl	900261b2 <_ZdlPvj>
9001af38:	4620      	mov	r0, r4
9001af3a:	bd10      	pop	{r4, pc}

9001af3c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001af3c:	b510      	push	{r4, lr}
9001af3e:	4604      	mov	r4, r0
9001af40:	2104      	movs	r1, #4
9001af42:	f00b f936 	bl	900261b2 <_ZdlPvj>
9001af46:	4620      	mov	r0, r4
9001af48:	bd10      	pop	{r4, pc}

9001af4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001af4a:	b510      	push	{r4, lr}
9001af4c:	4604      	mov	r4, r0
9001af4e:	2104      	movs	r1, #4
9001af50:	f00b f92f 	bl	900261b2 <_ZdlPvj>
9001af54:	4620      	mov	r0, r4
9001af56:	bd10      	pop	{r4, pc}

9001af58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001af58:	b510      	push	{r4, lr}
9001af5a:	4604      	mov	r4, r0
9001af5c:	2104      	movs	r1, #4
9001af5e:	f00b f928 	bl	900261b2 <_ZdlPvj>
9001af62:	4620      	mov	r0, r4
9001af64:	bd10      	pop	{r4, pc}

9001af66 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001af66:	b510      	push	{r4, lr}
9001af68:	4604      	mov	r4, r0
9001af6a:	2104      	movs	r1, #4
9001af6c:	f00b f921 	bl	900261b2 <_ZdlPvj>
9001af70:	4620      	mov	r0, r4
9001af72:	bd10      	pop	{r4, pc}

9001af74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001af74:	b510      	push	{r4, lr}
9001af76:	4604      	mov	r4, r0
9001af78:	2104      	movs	r1, #4
9001af7a:	f00b f91a 	bl	900261b2 <_ZdlPvj>
9001af7e:	4620      	mov	r0, r4
9001af80:	bd10      	pop	{r4, pc}
	...

9001af84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001af84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001af88:	b08f      	sub	sp, #60	; 0x3c
9001af8a:	461c      	mov	r4, r3
9001af8c:	9205      	str	r2, [sp, #20]
9001af8e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001af92:	9100      	str	r1, [sp, #0]
9001af94:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001af96:	9201      	str	r2, [sp, #4]
9001af98:	2a00      	cmp	r2, #0
9001af9a:	f000 8116 	beq.w	9001b1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001af9e:	6820      	ldr	r0, [r4, #0]
9001afa0:	aa0a      	add	r2, sp, #40	; 0x28
9001afa2:	6861      	ldr	r1, [r4, #4]
9001afa4:	c203      	stmia	r2!, {r0, r1}
9001afa6:	6818      	ldr	r0, [r3, #0]
9001afa8:	aa0c      	add	r2, sp, #48	; 0x30
9001afaa:	6859      	ldr	r1, [r3, #4]
9001afac:	c203      	stmia	r2!, {r0, r1}
9001afae:	a80a      	add	r0, sp, #40	; 0x28
9001afb0:	f7f9 fdfc 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001afb4:	4621      	mov	r1, r4
9001afb6:	a80c      	add	r0, sp, #48	; 0x30
9001afb8:	f7f9 fe3c 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001afbc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001afc0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001afc4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001afc8:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001afcc:	bfdb      	ittet	le
9001afce:	b2b3      	uxthle	r3, r6
9001afd0:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001afd4:	2301      	movgt	r3, #1
9001afd6:	fb92 f3f3 	sdivle	r3, r2, r3
9001afda:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001afde:	441d      	add	r5, r3
9001afe0:	fb92 f1f3 	sdiv	r1, r2, r3
9001afe4:	fa1f fc81 	uxth.w	ip, r1
9001afe8:	3d01      	subs	r5, #1
9001afea:	fb0c 2413 	mls	r4, ip, r3, r2
9001afee:	4661      	mov	r1, ip
9001aff0:	fb14 f406 	smulbb	r4, r4, r6
9001aff4:	4404      	add	r4, r0
9001aff6:	fb95 f5f3 	sdiv	r5, r5, r3
9001affa:	b2a4      	uxth	r4, r4
9001affc:	b131      	cbz	r1, 9001b00c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001affe:	9b05      	ldr	r3, [sp, #20]
9001b000:	9900      	ldr	r1, [sp, #0]
9001b002:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b006:	ba1b      	rev	r3, r3
9001b008:	4419      	add	r1, r3
9001b00a:	9100      	str	r1, [sp, #0]
9001b00c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b010:	b2ad      	uxth	r5, r5
9001b012:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
9001b016:	4418      	add	r0, r3
9001b018:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b01c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b020:	00ad      	lsls	r5, r5, #2
9001b022:	441a      	add	r2, r3
9001b024:	4b6a      	ldr	r3, [pc, #424]	; (9001b1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b026:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b02a:	6818      	ldr	r0, [r3, #0]
9001b02c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b030:	6803      	ldr	r3, [r0, #0]
9001b032:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b034:	4798      	blx	r3
9001b036:	4967      	ldr	r1, [pc, #412]	; (9001b1d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001b038:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b03c:	2c00      	cmp	r4, #0
9001b03e:	880b      	ldrh	r3, [r1, #0]
9001b040:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b044:	bf0c      	ite	eq
9001b046:	46c6      	moveq	lr, r8
9001b048:	f04f 0e00 	movne.w	lr, #0
9001b04c:	9109      	str	r1, [sp, #36]	; 0x24
9001b04e:	fb03 c202 	mla	r2, r3, r2, ip
9001b052:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001b056:	4373      	muls	r3, r6
9001b058:	fa1f fe8e 	uxth.w	lr, lr
9001b05c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b060:	9103      	str	r1, [sp, #12]
9001b062:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b066:	9306      	str	r3, [sp, #24]
9001b068:	1d2b      	adds	r3, r5, #4
9001b06a:	9307      	str	r3, [sp, #28]
9001b06c:	9b01      	ldr	r3, [sp, #4]
9001b06e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
9001b072:	2300      	movs	r3, #0
9001b074:	b292      	uxth	r2, r2
9001b076:	9302      	str	r3, [sp, #8]
9001b078:	9204      	str	r2, [sp, #16]
9001b07a:	9a06      	ldr	r2, [sp, #24]
9001b07c:	4282      	cmp	r2, r0
9001b07e:	f240 809f 	bls.w	9001b1c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001b082:	b963      	cbnz	r3, 9001b09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b084:	9b00      	ldr	r3, [sp, #0]
9001b086:	781a      	ldrb	r2, [r3, #0]
9001b088:	0993      	lsrs	r3, r2, #6
9001b08a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b08e:	9202      	str	r2, [sp, #8]
9001b090:	1e5a      	subs	r2, r3, #1
9001b092:	2a02      	cmp	r2, #2
9001b094:	d815      	bhi.n	9001b0c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001b096:	9a00      	ldr	r2, [sp, #0]
9001b098:	b29b      	uxth	r3, r3
9001b09a:	3201      	adds	r2, #1
9001b09c:	9200      	str	r2, [sp, #0]
9001b09e:	b1b4      	cbz	r4, 9001b0ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001b0a0:	429c      	cmp	r4, r3
9001b0a2:	bf91      	iteee	ls
9001b0a4:	1b1c      	subls	r4, r3, r4
9001b0a6:	1ae4      	subhi	r4, r4, r3
9001b0a8:	4671      	movhi	r1, lr
9001b0aa:	f04f 0a00 	movhi.w	sl, #0
9001b0ae:	bf9b      	ittet	ls
9001b0b0:	fa1f fa84 	uxthls.w	sl, r4
9001b0b4:	2400      	movls	r4, #0
9001b0b6:	b2a4      	uxthhi	r4, r4
9001b0b8:	fa1f f188 	uxthls.w	r1, r8
9001b0bc:	4653      	mov	r3, sl
9001b0be:	468e      	mov	lr, r1
9001b0c0:	e7db      	b.n	9001b07a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001b0c2:	9a00      	ldr	r2, [sp, #0]
9001b0c4:	9b00      	ldr	r3, [sp, #0]
9001b0c6:	3202      	adds	r2, #2
9001b0c8:	785b      	ldrb	r3, [r3, #1]
9001b0ca:	9200      	str	r2, [sp, #0]
9001b0cc:	e7e7      	b.n	9001b09e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001b0ce:	2202      	movs	r2, #2
9001b0d0:	9907      	ldr	r1, [sp, #28]
9001b0d2:	4573      	cmp	r3, lr
9001b0d4:	4615      	mov	r5, r2
9001b0d6:	9a02      	ldr	r2, [sp, #8]
9001b0d8:	bf24      	itt	cs
9001b0da:	eba3 0a0e 	subcs.w	sl, r3, lr
9001b0de:	46f1      	movcs	r9, lr
9001b0e0:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b0e4:	9905      	ldr	r1, [sp, #20]
9001b0e6:	bf34      	ite	cc
9001b0e8:	4699      	movcc	r9, r3
9001b0ea:	fa1f fa8a 	uxthcs.w	sl, sl
9001b0ee:	f831 c002 	ldrh.w	ip, [r1, r2]
9001b0f2:	bf38      	it	cc
9001b0f4:	ebae 0103 	subcc.w	r1, lr, r3
9001b0f8:	9a01      	ldr	r2, [sp, #4]
9001b0fa:	bf2e      	itee	cs
9001b0fc:	4621      	movcs	r1, r4
9001b0fe:	b289      	uxthcc	r1, r1
9001b100:	46a2      	movcc	sl, r4
9001b102:	2aff      	cmp	r2, #255	; 0xff
9001b104:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001b108:	d105      	bne.n	9001b116 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001b10a:	4481      	add	r9, r0
9001b10c:	4581      	cmp	r9, r0
9001b10e:	d045      	beq.n	9001b19c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b110:	f820 cb02 	strh.w	ip, [r0], #2
9001b114:	e7fa      	b.n	9001b10c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001b116:	ea4f 222c 	mov.w	r2, ip, asr #8
9001b11a:	9d03      	ldr	r5, [sp, #12]
9001b11c:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001b120:	4481      	add	r9, r0
9001b122:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b126:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001b12a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001b12e:	fa5f fc8c 	uxtb.w	ip, ip
9001b132:	436a      	muls	r2, r5
9001b134:	fb0b fb05 	mul.w	fp, fp, r5
9001b138:	fb0c fc05 	mul.w	ip, ip, r5
9001b13c:	9208      	str	r2, [sp, #32]
9001b13e:	4581      	cmp	r9, r0
9001b140:	d02c      	beq.n	9001b19c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001b142:	8802      	ldrh	r2, [r0, #0]
9001b144:	9d04      	ldr	r5, [sp, #16]
9001b146:	1216      	asrs	r6, r2, #8
9001b148:	9f04      	ldr	r7, [sp, #16]
9001b14a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b14e:	fb16 f605 	smulbb	r6, r6, r5
9001b152:	9d08      	ldr	r5, [sp, #32]
9001b154:	442e      	add	r6, r5
9001b156:	10d5      	asrs	r5, r2, #3
9001b158:	00d2      	lsls	r2, r2, #3
9001b15a:	b2b6      	uxth	r6, r6
9001b15c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b160:	b2d2      	uxtb	r2, r2
9001b162:	fb15 f507 	smulbb	r5, r5, r7
9001b166:	fb12 f207 	smulbb	r2, r2, r7
9001b16a:	1c77      	adds	r7, r6, #1
9001b16c:	445d      	add	r5, fp
9001b16e:	4462      	add	r2, ip
9001b170:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001b174:	b2ad      	uxth	r5, r5
9001b176:	b292      	uxth	r2, r2
9001b178:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b17c:	1c57      	adds	r7, r2, #1
9001b17e:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001b182:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b186:	4316      	orrs	r6, r2
9001b188:	1c6a      	adds	r2, r5, #1
9001b18a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b18e:	096d      	lsrs	r5, r5, #5
9001b190:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b194:	432e      	orrs	r6, r5
9001b196:	f820 6b02 	strh.w	r6, [r0], #2
9001b19a:	e7d0      	b.n	9001b13e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001b19c:	4573      	cmp	r3, lr
9001b19e:	d38d      	bcc.n	9001b0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b1a0:	fa1f f188 	uxth.w	r1, r8
9001b1a4:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b1a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b1aa:	1a64      	subs	r4, r4, r1
9001b1ac:	881b      	ldrh	r3, [r3, #0]
9001b1ae:	b2a4      	uxth	r4, r4
9001b1b0:	eba3 0308 	sub.w	r3, r3, r8
9001b1b4:	2c00      	cmp	r4, #0
9001b1b6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b1ba:	bf18      	it	ne
9001b1bc:	2100      	movne	r1, #0
9001b1be:	e77d      	b.n	9001b0bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001b1c0:	4b03      	ldr	r3, [pc, #12]	; (9001b1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001b1c2:	6818      	ldr	r0, [r3, #0]
9001b1c4:	6803      	ldr	r3, [r0, #0]
9001b1c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b1c8:	4798      	blx	r3
9001b1ca:	b00f      	add	sp, #60	; 0x3c
9001b1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b1d0:	2402357c 	.word	0x2402357c
9001b1d4:	24023576 	.word	0x24023576

9001b1d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001b1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b1dc:	b09f      	sub	sp, #124	; 0x7c
9001b1de:	461d      	mov	r5, r3
9001b1e0:	4604      	mov	r4, r0
9001b1e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001b1e4:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001b1e8:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001b1ec:	9209      	str	r2, [sp, #36]	; 0x24
9001b1ee:	2a00      	cmp	r2, #0
9001b1f0:	f000 81ed 	beq.w	9001b5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001b1f4:	6828      	ldr	r0, [r5, #0]
9001b1f6:	aa1a      	add	r2, sp, #104	; 0x68
9001b1f8:	6869      	ldr	r1, [r5, #4]
9001b1fa:	c203      	stmia	r2!, {r0, r1}
9001b1fc:	6818      	ldr	r0, [r3, #0]
9001b1fe:	aa1c      	add	r2, sp, #112	; 0x70
9001b200:	6859      	ldr	r1, [r3, #4]
9001b202:	c203      	stmia	r2!, {r0, r1}
9001b204:	a81a      	add	r0, sp, #104	; 0x68
9001b206:	f7f9 fcd1 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b20a:	4629      	mov	r1, r5
9001b20c:	a81c      	add	r0, sp, #112	; 0x70
9001b20e:	f7f9 fd11 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b212:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001b216:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
9001b21a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001b21e:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
9001b222:	bfdb      	ittet	le
9001b224:	b29a      	uxthle	r2, r3
9001b226:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001b22a:	2201      	movgt	r2, #1
9001b22c:	fb91 f2f2 	sdivle	r2, r1, r2
9001b230:	9202      	str	r2, [sp, #8]
9001b232:	9802      	ldr	r0, [sp, #8]
9001b234:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001b238:	9902      	ldr	r1, [sp, #8]
9001b23a:	fb92 f0f0 	sdiv	r0, r2, r0
9001b23e:	b280      	uxth	r0, r0
9001b240:	4488      	add	r8, r1
9001b242:	9010      	str	r0, [sp, #64]	; 0x40
9001b244:	f108 38ff 	add.w	r8, r8, #4294967295
9001b248:	9802      	ldr	r0, [sp, #8]
9001b24a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001b24c:	fb05 2510 	mls	r5, r5, r0, r2
9001b250:	fb98 f8f1 	sdiv	r8, r8, r1
9001b254:	fb15 f503 	smulbb	r5, r5, r3
9001b258:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001b25c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001b260:	f108 0801 	add.w	r8, r8, #1
9001b264:	440d      	add	r5, r1
9001b266:	4419      	add	r1, r3
9001b268:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001b26c:	fa1f f888 	uxth.w	r8, r8
9001b270:	441a      	add	r2, r3
9001b272:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001b276:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001b27a:	b2ad      	uxth	r5, r5
9001b27c:	9304      	str	r3, [sp, #16]
9001b27e:	4b94      	ldr	r3, [pc, #592]	; (9001b4d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001b280:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001b284:	6818      	ldr	r0, [r3, #0]
9001b286:	6803      	ldr	r3, [r0, #0]
9001b288:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b28a:	4798      	blx	r3
9001b28c:	4b91      	ldr	r3, [pc, #580]	; (9001b4d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001b28e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001b292:	2d00      	cmp	r5, #0
9001b294:	881a      	ldrh	r2, [r3, #0]
9001b296:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001b29a:	fb02 f606 	mul.w	r6, r2, r6
9001b29e:	fb02 7101 	mla	r1, r2, r1, r7
9001b2a2:	9318      	str	r3, [sp, #96]	; 0x60
9001b2a4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b2a8:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
9001b2ac:	f04f 0100 	mov.w	r1, #0
9001b2b0:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001b2b4:	930f      	str	r3, [sp, #60]	; 0x3c
9001b2b6:	4b88      	ldr	r3, [pc, #544]	; (9001b4d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001b2b8:	920a      	str	r2, [sp, #40]	; 0x28
9001b2ba:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001b2bc:	eba3 0304 	sub.w	r3, r3, r4
9001b2c0:	910d      	str	r1, [sp, #52]	; 0x34
9001b2c2:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001b2c6:	9319      	str	r3, [sp, #100]	; 0x64
9001b2c8:	f108 0204 	add.w	r2, r8, #4
9001b2cc:	9211      	str	r2, [sp, #68]	; 0x44
9001b2ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001b2d0:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
9001b2d4:	9215      	str	r2, [sp, #84]	; 0x54
9001b2d6:	9a04      	ldr	r2, [sp, #16]
9001b2d8:	bf18      	it	ne
9001b2da:	2200      	movne	r2, #0
9001b2dc:	b292      	uxth	r2, r2
9001b2de:	9910      	ldr	r1, [sp, #64]	; 0x40
9001b2e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b2e2:	fa11 f383 	uxtah	r3, r1, r3
9001b2e6:	9914      	ldr	r1, [sp, #80]	; 0x50
9001b2e8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001b2ec:	3304      	adds	r3, #4
9001b2ee:	9306      	str	r3, [sp, #24]
9001b2f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b2f2:	4283      	cmp	r3, r0
9001b2f4:	f240 8166 	bls.w	9001b5c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001b2f8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001b2fc:	f04f 0a01 	mov.w	sl, #1
9001b300:	9902      	ldr	r1, [sp, #8]
9001b302:	9e06      	ldr	r6, [sp, #24]
9001b304:	46d3      	mov	fp, sl
9001b306:	4657      	mov	r7, sl
9001b308:	7836      	ldrb	r6, [r6, #0]
9001b30a:	fbb5 f3f3 	udiv	r3, r5, r3
9001b30e:	1acb      	subs	r3, r1, r3
9001b310:	9612      	str	r6, [sp, #72]	; 0x48
9001b312:	3601      	adds	r6, #1
9001b314:	b29b      	uxth	r3, r3
9001b316:	9605      	str	r6, [sp, #20]
9001b318:	9316      	str	r3, [sp, #88]	; 0x58
9001b31a:	9b06      	ldr	r3, [sp, #24]
9001b31c:	7859      	ldrb	r1, [r3, #1]
9001b31e:	789b      	ldrb	r3, [r3, #2]
9001b320:	021b      	lsls	r3, r3, #8
9001b322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001b326:	9906      	ldr	r1, [sp, #24]
9001b328:	78c9      	ldrb	r1, [r1, #3]
9001b32a:	430b      	orrs	r3, r1
9001b32c:	9913      	ldr	r1, [sp, #76]	; 0x4c
9001b32e:	4419      	add	r1, r3
9001b330:	1c4e      	adds	r6, r1, #1
9001b332:	7849      	ldrb	r1, [r1, #1]
9001b334:	9603      	str	r6, [sp, #12]
9001b336:	0209      	lsls	r1, r1, #8
9001b338:	9e13      	ldr	r6, [sp, #76]	; 0x4c
9001b33a:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
9001b33e:	5cf3      	ldrb	r3, [r6, r3]
9001b340:	4319      	orrs	r1, r3
9001b342:	b28b      	uxth	r3, r1
9001b344:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001b348:	930c      	str	r3, [sp, #48]	; 0x30
9001b34a:	2300      	movs	r3, #0
9001b34c:	9307      	str	r3, [sp, #28]
9001b34e:	469c      	mov	ip, r3
9001b350:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001b354:	930e      	str	r3, [sp, #56]	; 0x38
9001b356:	2d00      	cmp	r5, #0
9001b358:	d07e      	beq.n	9001b458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001b35a:	42af      	cmp	r7, r5
9001b35c:	d26e      	bcs.n	9001b43c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001b35e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001b360:	1bed      	subs	r5, r5, r7
9001b362:	9201      	str	r2, [sp, #4]
9001b364:	4283      	cmp	r3, r0
9001b366:	b2ad      	uxth	r5, r5
9001b368:	d802      	bhi.n	9001b370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001b36a:	e073      	b.n	9001b454 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001b36c:	2b00      	cmp	r3, #0
9001b36e:	d15f      	bne.n	9001b430 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001b370:	9b03      	ldr	r3, [sp, #12]
9001b372:	f1cb 0207 	rsb	r2, fp, #7
9001b376:	785b      	ldrb	r3, [r3, #1]
9001b378:	4093      	lsls	r3, r2
9001b37a:	005b      	lsls	r3, r3, #1
9001b37c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001b380:	9b03      	ldr	r3, [sp, #12]
9001b382:	781b      	ldrb	r3, [r3, #0]
9001b384:	fa43 f30b 	asr.w	r3, r3, fp
9001b388:	b2db      	uxtb	r3, r3
9001b38a:	4313      	orrs	r3, r2
9001b38c:	f10b 0201 	add.w	r2, fp, #1
9001b390:	fa5f fb82 	uxtb.w	fp, r2
9001b394:	9a03      	ldr	r2, [sp, #12]
9001b396:	b29f      	uxth	r7, r3
9001b398:	f1bb 0f08 	cmp.w	fp, #8
9001b39c:	bf13      	iteet	ne
9001b39e:	3201      	addne	r2, #1
9001b3a0:	3202      	addeq	r2, #2
9001b3a2:	f04f 0b00 	moveq.w	fp, #0
9001b3a6:	9203      	strne	r2, [sp, #12]
9001b3a8:	bf08      	it	eq
9001b3aa:	9203      	streq	r2, [sp, #12]
9001b3ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001b3ae:	42ba      	cmp	r2, r7
9001b3b0:	d309      	bcc.n	9001b3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001b3b2:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001b3b6:	2301      	movs	r3, #1
9001b3b8:	9a05      	ldr	r2, [sp, #20]
9001b3ba:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
9001b3be:	d30e      	bcc.n	9001b3de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001b3c0:	469a      	mov	sl, r3
9001b3c2:	2600      	movs	r6, #0
9001b3c4:	e035      	b.n	9001b432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001b3c6:	9b05      	ldr	r3, [sp, #20]
9001b3c8:	429f      	cmp	r7, r3
9001b3ca:	d318      	bcc.n	9001b3fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001b3cc:	eb04 030a 	add.w	r3, r4, sl
9001b3d0:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
9001b3d4:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
9001b3d8:	f10a 0301 	add.w	r3, sl, #1
9001b3dc:	b29b      	uxth	r3, r3
9001b3de:	9a05      	ldr	r2, [sp, #20]
9001b3e0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001b3e4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b3e8:	990c      	ldr	r1, [sp, #48]	; 0x30
9001b3ea:	7116      	strb	r6, [r2, #4]
9001b3ec:	f10a 0601 	add.w	r6, sl, #1
9001b3f0:	80d1      	strh	r1, [r2, #6]
9001b3f2:	7156      	strb	r6, [r2, #5]
9001b3f4:	9a05      	ldr	r2, [sp, #20]
9001b3f6:	3201      	adds	r2, #1
9001b3f8:	b292      	uxth	r2, r2
9001b3fa:	9205      	str	r2, [sp, #20]
9001b3fc:	e7e0      	b.n	9001b3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001b3fe:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001b402:	463a      	mov	r2, r7
9001b404:	795b      	ldrb	r3, [r3, #5]
9001b406:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001b40a:	4426      	add	r6, r4
9001b40c:	9919      	ldr	r1, [sp, #100]	; 0x64
9001b40e:	eb01 0c06 	add.w	ip, r1, r6
9001b412:	f1bc 0f00 	cmp.w	ip, #0
9001b416:	dd07      	ble.n	9001b428 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001b418:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001b41c:	f892 c004 	ldrb.w	ip, [r2, #4]
9001b420:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001b424:	88d2      	ldrh	r2, [r2, #6]
9001b426:	e7f1      	b.n	9001b40c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001b428:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001b42c:	b29b      	uxth	r3, r3
9001b42e:	e7c3      	b.n	9001b3b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001b430:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001b432:	970c      	str	r7, [sp, #48]	; 0x30
9001b434:	46b4      	mov	ip, r6
9001b436:	9a01      	ldr	r2, [sp, #4]
9001b438:	461f      	mov	r7, r3
9001b43a:	e78c      	b.n	9001b356 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001b43c:	1b7b      	subs	r3, r7, r5
9001b43e:	eb0c 0605 	add.w	r6, ip, r5
9001b442:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b446:	b29b      	uxth	r3, r3
9001b448:	b2b6      	uxth	r6, r6
9001b44a:	9201      	str	r2, [sp, #4]
9001b44c:	2500      	movs	r5, #0
9001b44e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001b450:	4282      	cmp	r2, r0
9001b452:	d88b      	bhi.n	9001b36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001b454:	9a01      	ldr	r2, [sp, #4]
9001b456:	e74b      	b.n	9001b2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001b458:	4297      	cmp	r7, r2
9001b45a:	d332      	bcc.n	9001b4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001b45c:	1abb      	subs	r3, r7, r2
9001b45e:	9208      	str	r2, [sp, #32]
9001b460:	9501      	str	r5, [sp, #4]
9001b462:	b29b      	uxth	r3, r3
9001b464:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b466:	29ff      	cmp	r1, #255	; 0xff
9001b468:	9908      	ldr	r1, [sp, #32]
9001b46a:	eb0c 0601 	add.w	r6, ip, r1
9001b46e:	d135      	bne.n	9001b4dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001b470:	f1a0 0e02 	sub.w	lr, r0, #2
9001b474:	b2b6      	uxth	r6, r6
9001b476:	45b4      	cmp	ip, r6
9001b478:	f040 808c 	bne.w	9001b594 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001b47c:	9908      	ldr	r1, [sp, #32]
9001b47e:	4297      	cmp	r7, r2
9001b480:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b484:	d3e2      	bcc.n	9001b44c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001b486:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001b488:	9904      	ldr	r1, [sp, #16]
9001b48a:	8812      	ldrh	r2, [r2, #0]
9001b48c:	1a52      	subs	r2, r2, r1
9001b48e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001b490:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b494:	9a07      	ldr	r2, [sp, #28]
9001b496:	3201      	adds	r2, #1
9001b498:	428a      	cmp	r2, r1
9001b49a:	9207      	str	r2, [sp, #28]
9001b49c:	f040 8087 	bne.w	9001b5ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001b4a0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001b4a4:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
9001b4a8:	9b04      	ldr	r3, [sp, #16]
9001b4aa:	1bed      	subs	r5, r5, r7
9001b4ac:	b2ad      	uxth	r5, r5
9001b4ae:	2d00      	cmp	r5, #0
9001b4b0:	bf08      	it	eq
9001b4b2:	461a      	moveq	r2, r3
9001b4b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001b4b6:	bf18      	it	ne
9001b4b8:	2200      	movne	r2, #0
9001b4ba:	3301      	adds	r3, #1
9001b4bc:	b292      	uxth	r2, r2
9001b4be:	930d      	str	r3, [sp, #52]	; 0x34
9001b4c0:	e70d      	b.n	9001b2de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001b4c2:	1bd1      	subs	r1, r2, r7
9001b4c4:	9708      	str	r7, [sp, #32]
9001b4c6:	b28b      	uxth	r3, r1
9001b4c8:	9301      	str	r3, [sp, #4]
9001b4ca:	462b      	mov	r3, r5
9001b4cc:	e7ca      	b.n	9001b464 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001b4ce:	bf00      	nop
9001b4d0:	2402357c 	.word	0x2402357c
9001b4d4:	24023576 	.word	0x24023576
9001b4d8:	fffff7fb 	.word	0xfffff7fb
9001b4dc:	b2b6      	uxth	r6, r6
9001b4de:	900b      	str	r0, [sp, #44]	; 0x2c
9001b4e0:	45b4      	cmp	ip, r6
9001b4e2:	d0cb      	beq.n	9001b47c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001b4e4:	f10c 0101 	add.w	r1, ip, #1
9001b4e8:	44a4      	add	ip, r4
9001b4ea:	9117      	str	r1, [sp, #92]	; 0x5c
9001b4ec:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b4f0:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b4f2:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b4f6:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b4f8:	ea4f 2825 	mov.w	r8, r5, asr #8
9001b4fc:	f8b1 c000 	ldrh.w	ip, [r1]
9001b500:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b502:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001b506:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001b50a:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001b50e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
9001b512:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b516:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001b51a:	fb1e fe01 	smulbb	lr, lr, r1
9001b51e:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b520:	fa5f fc8c 	uxtb.w	ip, ip
9001b524:	fb08 e801 	mla	r8, r8, r1, lr
9001b528:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001b52c:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b52e:	00ed      	lsls	r5, r5, #3
9001b530:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001b534:	fa1f f888 	uxth.w	r8, r8
9001b538:	fb19 f901 	smulbb	r9, r9, r1
9001b53c:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b53e:	b2ed      	uxtb	r5, r5
9001b540:	fb0e 9e01 	mla	lr, lr, r1, r9
9001b544:	990e      	ldr	r1, [sp, #56]	; 0x38
9001b546:	fb1c fc01 	smulbb	ip, ip, r1
9001b54a:	990f      	ldr	r1, [sp, #60]	; 0x3c
9001b54c:	fa1f fe8e 	uxth.w	lr, lr
9001b550:	fb05 c501 	mla	r5, r5, r1, ip
9001b554:	f108 0c01 	add.w	ip, r8, #1
9001b558:	f10e 0901 	add.w	r9, lr, #1
9001b55c:	990b      	ldr	r1, [sp, #44]	; 0x2c
9001b55e:	b2ad      	uxth	r5, r5
9001b560:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001b564:	f105 0c01 	add.w	ip, r5, #1
9001b568:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001b56c:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001b570:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001b574:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b578:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001b57c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001b580:	ea4c 0808 	orr.w	r8, ip, r8
9001b584:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
9001b588:	ea48 0809 	orr.w	r8, r8, r9
9001b58c:	f821 8b02 	strh.w	r8, [r1], #2
9001b590:	910b      	str	r1, [sp, #44]	; 0x2c
9001b592:	e7a5      	b.n	9001b4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001b594:	f10c 0801 	add.w	r8, ip, #1
9001b598:	44a4      	add	ip, r4
9001b59a:	9911      	ldr	r1, [sp, #68]	; 0x44
9001b59c:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
9001b5a0:	fa1f fc88 	uxth.w	ip, r8
9001b5a4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001b5a8:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001b5ac:	e763      	b.n	9001b476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001b5ae:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001b5b2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001b5b6:	1aad      	subs	r5, r5, r2
9001b5b8:	b2ad      	uxth	r5, r5
9001b5ba:	2d00      	cmp	r5, #0
9001b5bc:	bf18      	it	ne
9001b5be:	2200      	movne	r2, #0
9001b5c0:	9201      	str	r2, [sp, #4]
9001b5c2:	e744      	b.n	9001b44e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001b5c4:	4b03      	ldr	r3, [pc, #12]	; (9001b5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001b5c6:	6818      	ldr	r0, [r3, #0]
9001b5c8:	6803      	ldr	r3, [r0, #0]
9001b5ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b5cc:	4798      	blx	r3
9001b5ce:	b01f      	add	sp, #124	; 0x7c
9001b5d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b5d4:	2402357c 	.word	0x2402357c

9001b5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001b5d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b5dc:	b08f      	sub	sp, #60	; 0x3c
9001b5de:	461c      	mov	r4, r3
9001b5e0:	460f      	mov	r7, r1
9001b5e2:	9203      	str	r2, [sp, #12]
9001b5e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
9001b5e8:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001b5ea:	9202      	str	r2, [sp, #8]
9001b5ec:	2a00      	cmp	r2, #0
9001b5ee:	f000 8128 	beq.w	9001b842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001b5f2:	6820      	ldr	r0, [r4, #0]
9001b5f4:	aa0a      	add	r2, sp, #40	; 0x28
9001b5f6:	6861      	ldr	r1, [r4, #4]
9001b5f8:	c203      	stmia	r2!, {r0, r1}
9001b5fa:	6818      	ldr	r0, [r3, #0]
9001b5fc:	aa0c      	add	r2, sp, #48	; 0x30
9001b5fe:	6859      	ldr	r1, [r3, #4]
9001b600:	c203      	stmia	r2!, {r0, r1}
9001b602:	a80a      	add	r0, sp, #40	; 0x28
9001b604:	f7f9 fad2 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b608:	4621      	mov	r1, r4
9001b60a:	a80c      	add	r0, sp, #48	; 0x30
9001b60c:	f7f9 fb12 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b610:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001b614:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
9001b618:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b61c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
9001b620:	bfdb      	ittet	le
9001b622:	b2b3      	uxthle	r3, r6
9001b624:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b628:	2301      	movgt	r3, #1
9001b62a:	fb92 f3f3 	sdivle	r3, r2, r3
9001b62e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001b632:	441d      	add	r5, r3
9001b634:	fb92 f1f3 	sdiv	r1, r2, r3
9001b638:	fa1f fc81 	uxth.w	ip, r1
9001b63c:	3d01      	subs	r5, #1
9001b63e:	fb0c 2413 	mls	r4, ip, r3, r2
9001b642:	4661      	mov	r1, ip
9001b644:	fb14 f406 	smulbb	r4, r4, r6
9001b648:	4404      	add	r4, r0
9001b64a:	fb95 f5f3 	sdiv	r5, r5, r3
9001b64e:	b2a4      	uxth	r4, r4
9001b650:	b121      	cbz	r1, 9001b65c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001b652:	9b03      	ldr	r3, [sp, #12]
9001b654:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b658:	ba1b      	rev	r3, r3
9001b65a:	441f      	add	r7, r3
9001b65c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001b660:	b2ad      	uxth	r5, r5
9001b662:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001b666:	4418      	add	r0, r3
9001b668:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001b66c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001b670:	00ad      	lsls	r5, r5, #2
9001b672:	441a      	add	r2, r3
9001b674:	4b74      	ldr	r3, [pc, #464]	; (9001b848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b676:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
9001b67a:	6818      	ldr	r0, [r3, #0]
9001b67c:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
9001b680:	6803      	ldr	r3, [r0, #0]
9001b682:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b684:	4798      	blx	r3
9001b686:	4a71      	ldr	r2, [pc, #452]	; (9001b84c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001b688:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
9001b68c:	2c00      	cmp	r4, #0
9001b68e:	8813      	ldrh	r3, [r2, #0]
9001b690:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
9001b694:	bf0c      	ite	eq
9001b696:	46c8      	moveq	r8, r9
9001b698:	f04f 0800 	movne.w	r8, #0
9001b69c:	9209      	str	r2, [sp, #36]	; 0x24
9001b69e:	fb03 c101 	mla	r1, r3, r1, ip
9001b6a2:	4373      	muls	r3, r6
9001b6a4:	fa1f f888 	uxth.w	r8, r8
9001b6a8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001b6ac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b6b0:	9304      	str	r3, [sp, #16]
9001b6b2:	1d2b      	adds	r3, r5, #4
9001b6b4:	9305      	str	r3, [sp, #20]
9001b6b6:	2300      	movs	r3, #0
9001b6b8:	9301      	str	r3, [sp, #4]
9001b6ba:	9a04      	ldr	r2, [sp, #16]
9001b6bc:	4282      	cmp	r2, r0
9001b6be:	f240 80bb 	bls.w	9001b838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001b6c2:	b95b      	cbnz	r3, 9001b6dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001b6c4:	783a      	ldrb	r2, [r7, #0]
9001b6c6:	0993      	lsrs	r3, r2, #6
9001b6c8:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b6cc:	9201      	str	r2, [sp, #4]
9001b6ce:	1e5a      	subs	r2, r3, #1
9001b6d0:	2a02      	cmp	r2, #2
9001b6d2:	bf8d      	iteet	hi
9001b6d4:	787b      	ldrbhi	r3, [r7, #1]
9001b6d6:	3701      	addls	r7, #1
9001b6d8:	b29b      	uxthls	r3, r3
9001b6da:	3702      	addhi	r7, #2
9001b6dc:	b184      	cbz	r4, 9001b700 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001b6de:	429c      	cmp	r4, r3
9001b6e0:	bf91      	iteee	ls
9001b6e2:	1b1c      	subls	r4, r3, r4
9001b6e4:	1ae4      	subhi	r4, r4, r3
9001b6e6:	46c4      	movhi	ip, r8
9001b6e8:	f04f 0a00 	movhi.w	sl, #0
9001b6ec:	bf9b      	ittet	ls
9001b6ee:	fa1f fa84 	uxthls.w	sl, r4
9001b6f2:	2400      	movls	r4, #0
9001b6f4:	b2a4      	uxthhi	r4, r4
9001b6f6:	fa1f fc89 	uxthls.w	ip, r9
9001b6fa:	4653      	mov	r3, sl
9001b6fc:	46e0      	mov	r8, ip
9001b6fe:	e7dc      	b.n	9001b6ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001b700:	2204      	movs	r2, #4
9001b702:	9905      	ldr	r1, [sp, #20]
9001b704:	4543      	cmp	r3, r8
9001b706:	4615      	mov	r5, r2
9001b708:	9a01      	ldr	r2, [sp, #4]
9001b70a:	bf24      	itt	cs
9001b70c:	eba3 0a08 	subcs.w	sl, r3, r8
9001b710:	46c6      	movcs	lr, r8
9001b712:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b716:	9903      	ldr	r1, [sp, #12]
9001b718:	bf3c      	itt	cc
9001b71a:	eba8 0c03 	subcc.w	ip, r8, r3
9001b71e:	469e      	movcc	lr, r3
9001b720:	588a      	ldr	r2, [r1, r2]
9001b722:	bf26      	itte	cs
9001b724:	fa1f fa8a 	uxthcs.w	sl, sl
9001b728:	46a4      	movcs	ip, r4
9001b72a:	fa1f fc8c 	uxthcc.w	ip, ip
9001b72e:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001b732:	bf38      	it	cc
9001b734:	46a2      	movcc	sl, r4
9001b736:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001b73a:	2900      	cmp	r1, #0
9001b73c:	d066      	beq.n	9001b80c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001b73e:	29ff      	cmp	r1, #255	; 0xff
9001b740:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001b744:	d114      	bne.n	9001b770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b746:	9d02      	ldr	r5, [sp, #8]
9001b748:	2dff      	cmp	r5, #255	; 0xff
9001b74a:	d111      	bne.n	9001b770 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001b74c:	0951      	lsrs	r1, r2, #5
9001b74e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
9001b752:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001b756:	4486      	add	lr, r0
9001b758:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001b75c:	f026 0607 	bic.w	r6, r6, #7
9001b760:	430e      	orrs	r6, r1
9001b762:	4316      	orrs	r6, r2
9001b764:	b2b6      	uxth	r6, r6
9001b766:	4586      	cmp	lr, r0
9001b768:	d051      	beq.n	9001b80e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b76a:	f820 6b02 	strh.w	r6, [r0], #2
9001b76e:	e7fa      	b.n	9001b766 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001b770:	9d02      	ldr	r5, [sp, #8]
9001b772:	b2f6      	uxtb	r6, r6
9001b774:	4486      	add	lr, r0
9001b776:	4369      	muls	r1, r5
9001b778:	1c4d      	adds	r5, r1, #1
9001b77a:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001b77e:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001b782:	b2d2      	uxtb	r2, r2
9001b784:	122d      	asrs	r5, r5, #8
9001b786:	ea6f 0b05 	mvn.w	fp, r5
9001b78a:	b2ad      	uxth	r5, r5
9001b78c:	fb11 f105 	smulbb	r1, r1, r5
9001b790:	fa5f fb8b 	uxtb.w	fp, fp
9001b794:	fb16 f605 	smulbb	r6, r6, r5
9001b798:	fb12 f205 	smulbb	r2, r2, r5
9001b79c:	b289      	uxth	r1, r1
9001b79e:	b2b6      	uxth	r6, r6
9001b7a0:	b292      	uxth	r2, r2
9001b7a2:	9106      	str	r1, [sp, #24]
9001b7a4:	9607      	str	r6, [sp, #28]
9001b7a6:	9208      	str	r2, [sp, #32]
9001b7a8:	4586      	cmp	lr, r0
9001b7aa:	d030      	beq.n	9001b80e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001b7ac:	8802      	ldrh	r2, [r0, #0]
9001b7ae:	9906      	ldr	r1, [sp, #24]
9001b7b0:	1216      	asrs	r6, r2, #8
9001b7b2:	10d5      	asrs	r5, r2, #3
9001b7b4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001b7b8:	00d2      	lsls	r2, r2, #3
9001b7ba:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001b7be:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001b7c2:	b2d2      	uxtb	r2, r2
9001b7c4:	fb06 160b 	mla	r6, r6, fp, r1
9001b7c8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001b7cc:	9907      	ldr	r1, [sp, #28]
9001b7ce:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001b7d2:	b2b6      	uxth	r6, r6
9001b7d4:	fb05 150b 	mla	r5, r5, fp, r1
9001b7d8:	9908      	ldr	r1, [sp, #32]
9001b7da:	fb02 120b 	mla	r2, r2, fp, r1
9001b7de:	1c71      	adds	r1, r6, #1
9001b7e0:	b2ad      	uxth	r5, r5
9001b7e2:	b292      	uxth	r2, r2
9001b7e4:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001b7e8:	1c51      	adds	r1, r2, #1
9001b7ea:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001b7ee:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001b7f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001b7f6:	4316      	orrs	r6, r2
9001b7f8:	1c6a      	adds	r2, r5, #1
9001b7fa:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001b7fe:	096d      	lsrs	r5, r5, #5
9001b800:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001b804:	432e      	orrs	r6, r5
9001b806:	f820 6b02 	strh.w	r6, [r0], #2
9001b80a:	e7cd      	b.n	9001b7a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001b80c:	4470      	add	r0, lr
9001b80e:	4543      	cmp	r3, r8
9001b810:	f4ff af73 	bcc.w	9001b6fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b814:	fa1f fc89 	uxth.w	ip, r9
9001b818:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
9001b81c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001b81e:	eba4 040c 	sub.w	r4, r4, ip
9001b822:	881b      	ldrh	r3, [r3, #0]
9001b824:	b2a4      	uxth	r4, r4
9001b826:	eba3 0309 	sub.w	r3, r3, r9
9001b82a:	2c00      	cmp	r4, #0
9001b82c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b830:	bf18      	it	ne
9001b832:	f04f 0c00 	movne.w	ip, #0
9001b836:	e760      	b.n	9001b6fa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001b838:	4b03      	ldr	r3, [pc, #12]	; (9001b848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001b83a:	6818      	ldr	r0, [r3, #0]
9001b83c:	6803      	ldr	r3, [r0, #0]
9001b83e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001b840:	4798      	blx	r3
9001b842:	b00f      	add	sp, #60	; 0x3c
9001b844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b848:	2402357c 	.word	0x2402357c
9001b84c:	24023576 	.word	0x24023576

9001b850 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001b850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b854:	b093      	sub	sp, #76	; 0x4c
9001b856:	461c      	mov	r4, r3
9001b858:	9205      	str	r2, [sp, #20]
9001b85a:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
9001b85e:	9101      	str	r1, [sp, #4]
9001b860:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001b862:	9202      	str	r2, [sp, #8]
9001b864:	2a00      	cmp	r2, #0
9001b866:	f000 812e 	beq.w	9001bac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001b86a:	6820      	ldr	r0, [r4, #0]
9001b86c:	aa0e      	add	r2, sp, #56	; 0x38
9001b86e:	6861      	ldr	r1, [r4, #4]
9001b870:	c203      	stmia	r2!, {r0, r1}
9001b872:	6818      	ldr	r0, [r3, #0]
9001b874:	aa10      	add	r2, sp, #64	; 0x40
9001b876:	6859      	ldr	r1, [r3, #4]
9001b878:	c203      	stmia	r2!, {r0, r1}
9001b87a:	a80e      	add	r0, sp, #56	; 0x38
9001b87c:	f7f9 f996 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001b880:	4621      	mov	r1, r4
9001b882:	a810      	add	r0, sp, #64	; 0x40
9001b884:	f7f9 f9d6 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001b888:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001b88c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
9001b890:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
9001b894:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
9001b898:	bfdb      	ittet	le
9001b89a:	b2b3      	uxthle	r3, r6
9001b89c:	f44f 6280 	movle.w	r2, #1024	; 0x400
9001b8a0:	2301      	movgt	r3, #1
9001b8a2:	fb92 f3f3 	sdivle	r3, r2, r3
9001b8a6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b8aa:	441d      	add	r5, r3
9001b8ac:	fb92 f1f3 	sdiv	r1, r2, r3
9001b8b0:	fa1f fc81 	uxth.w	ip, r1
9001b8b4:	3d01      	subs	r5, #1
9001b8b6:	fb0c 2413 	mls	r4, ip, r3, r2
9001b8ba:	4661      	mov	r1, ip
9001b8bc:	fb14 f406 	smulbb	r4, r4, r6
9001b8c0:	4404      	add	r4, r0
9001b8c2:	fb95 f5f3 	sdiv	r5, r5, r3
9001b8c6:	b2a4      	uxth	r4, r4
9001b8c8:	b131      	cbz	r1, 9001b8d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001b8ca:	9b05      	ldr	r3, [sp, #20]
9001b8cc:	9901      	ldr	r1, [sp, #4]
9001b8ce:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001b8d2:	ba1b      	rev	r3, r3
9001b8d4:	4419      	add	r1, r3
9001b8d6:	9101      	str	r1, [sp, #4]
9001b8d8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001b8dc:	b2ad      	uxth	r5, r5
9001b8de:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001b8e2:	4418      	add	r0, r3
9001b8e4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
9001b8e8:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
9001b8ec:	00ad      	lsls	r5, r5, #2
9001b8ee:	441a      	add	r2, r3
9001b8f0:	4b76      	ldr	r3, [pc, #472]	; (9001bacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001b8f2:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
9001b8f6:	6818      	ldr	r0, [r3, #0]
9001b8f8:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
9001b8fc:	6803      	ldr	r3, [r0, #0]
9001b8fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001b900:	4798      	blx	r3
9001b902:	4973      	ldr	r1, [pc, #460]	; (9001bad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001b904:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
9001b908:	2c00      	cmp	r4, #0
9001b90a:	880b      	ldrh	r3, [r1, #0]
9001b90c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001b910:	910d      	str	r1, [sp, #52]	; 0x34
9001b912:	fb03 c202 	mla	r2, r3, r2, ip
9001b916:	bf08      	it	eq
9001b918:	46dc      	moveq	ip, fp
9001b91a:	fb03 f306 	mul.w	r3, r3, r6
9001b91e:	bf18      	it	ne
9001b920:	f04f 0c00 	movne.w	ip, #0
9001b924:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001b928:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001b92c:	fa1f fc8c 	uxth.w	ip, ip
9001b930:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001b934:	9106      	str	r1, [sp, #24]
9001b936:	9308      	str	r3, [sp, #32]
9001b938:	1d2b      	adds	r3, r5, #4
9001b93a:	9309      	str	r3, [sp, #36]	; 0x24
9001b93c:	9b02      	ldr	r3, [sp, #8]
9001b93e:	43da      	mvns	r2, r3
9001b940:	2300      	movs	r3, #0
9001b942:	b2d2      	uxtb	r2, r2
9001b944:	9303      	str	r3, [sp, #12]
9001b946:	9207      	str	r2, [sp, #28]
9001b948:	9a08      	ldr	r2, [sp, #32]
9001b94a:	4282      	cmp	r2, r0
9001b94c:	f240 80b6 	bls.w	9001babc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001b950:	b963      	cbnz	r3, 9001b96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b952:	9b01      	ldr	r3, [sp, #4]
9001b954:	781a      	ldrb	r2, [r3, #0]
9001b956:	0993      	lsrs	r3, r2, #6
9001b958:	f002 023f 	and.w	r2, r2, #63	; 0x3f
9001b95c:	9203      	str	r2, [sp, #12]
9001b95e:	1e5a      	subs	r2, r3, #1
9001b960:	2a02      	cmp	r2, #2
9001b962:	d815      	bhi.n	9001b990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001b964:	9a01      	ldr	r2, [sp, #4]
9001b966:	b29b      	uxth	r3, r3
9001b968:	3201      	adds	r2, #1
9001b96a:	9201      	str	r2, [sp, #4]
9001b96c:	b1b4      	cbz	r4, 9001b99c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001b96e:	429c      	cmp	r4, r3
9001b970:	bf91      	iteee	ls
9001b972:	1b1c      	subls	r4, r3, r4
9001b974:	1ae4      	subhi	r4, r4, r3
9001b976:	4666      	movhi	r6, ip
9001b978:	f04f 0800 	movhi.w	r8, #0
9001b97c:	bf9b      	ittet	ls
9001b97e:	fa1f f884 	uxthls.w	r8, r4
9001b982:	2400      	movls	r4, #0
9001b984:	b2a4      	uxthhi	r4, r4
9001b986:	fa1f f68b 	uxthls.w	r6, fp
9001b98a:	4643      	mov	r3, r8
9001b98c:	46b4      	mov	ip, r6
9001b98e:	e7db      	b.n	9001b948 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001b990:	9a01      	ldr	r2, [sp, #4]
9001b992:	9b01      	ldr	r3, [sp, #4]
9001b994:	3202      	adds	r2, #2
9001b996:	785b      	ldrb	r3, [r3, #1]
9001b998:	9201      	str	r2, [sp, #4]
9001b99a:	e7e7      	b.n	9001b96c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001b99c:	2203      	movs	r2, #3
9001b99e:	9909      	ldr	r1, [sp, #36]	; 0x24
9001b9a0:	4563      	cmp	r3, ip
9001b9a2:	4615      	mov	r5, r2
9001b9a4:	9a03      	ldr	r2, [sp, #12]
9001b9a6:	bf2c      	ite	cs
9001b9a8:	eba3 080c 	subcs.w	r8, r3, ip
9001b9ac:	ebac 0603 	subcc.w	r6, ip, r3
9001b9b0:	fb15 1202 	smlabb	r2, r5, r2, r1
9001b9b4:	9905      	ldr	r1, [sp, #20]
9001b9b6:	bf24      	itt	cs
9001b9b8:	fa1f f888 	uxthcs.w	r8, r8
9001b9bc:	46e1      	movcs	r9, ip
9001b9be:	eb01 0502 	add.w	r5, r1, r2
9001b9c2:	9902      	ldr	r1, [sp, #8]
9001b9c4:	bf2f      	iteee	cs
9001b9c6:	4626      	movcs	r6, r4
9001b9c8:	b2b6      	uxthcc	r6, r6
9001b9ca:	4699      	movcc	r9, r3
9001b9cc:	46a0      	movcc	r8, r4
9001b9ce:	29ff      	cmp	r1, #255	; 0xff
9001b9d0:	d04a      	beq.n	9001ba68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001b9d2:	9f06      	ldr	r7, [sp, #24]
9001b9d4:	46ca      	mov	sl, r9
9001b9d6:	78a9      	ldrb	r1, [r5, #2]
9001b9d8:	9004      	str	r0, [sp, #16]
9001b9da:	4379      	muls	r1, r7
9001b9dc:	910a      	str	r1, [sp, #40]	; 0x28
9001b9de:	7869      	ldrb	r1, [r5, #1]
9001b9e0:	4379      	muls	r1, r7
9001b9e2:	910b      	str	r1, [sp, #44]	; 0x2c
9001b9e4:	9905      	ldr	r1, [sp, #20]
9001b9e6:	5c8a      	ldrb	r2, [r1, r2]
9001b9e8:	437a      	muls	r2, r7
9001b9ea:	920c      	str	r2, [sp, #48]	; 0x30
9001b9ec:	f1ba 0f00 	cmp.w	sl, #0
9001b9f0:	d03d      	beq.n	9001ba6e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001b9f2:	9a04      	ldr	r2, [sp, #16]
9001b9f4:	f10a 3aff 	add.w	sl, sl, #4294967295
9001b9f8:	9f07      	ldr	r7, [sp, #28]
9001b9fa:	8812      	ldrh	r2, [r2, #0]
9001b9fc:	fa1f fa8a 	uxth.w	sl, sl
9001ba00:	46be      	mov	lr, r7
9001ba02:	9f0a      	ldr	r7, [sp, #40]	; 0x28
9001ba04:	1215      	asrs	r5, r2, #8
9001ba06:	10d1      	asrs	r1, r2, #3
9001ba08:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001ba0c:	00d2      	lsls	r2, r2, #3
9001ba0e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ba12:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001ba16:	b2d2      	uxtb	r2, r2
9001ba18:	fb05 750e 	mla	r5, r5, lr, r7
9001ba1c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001ba20:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
9001ba22:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ba26:	b2ad      	uxth	r5, r5
9001ba28:	fb01 710e 	mla	r1, r1, lr, r7
9001ba2c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001ba2e:	fb02 720e 	mla	r2, r2, lr, r7
9001ba32:	f105 0e01 	add.w	lr, r5, #1
9001ba36:	b289      	uxth	r1, r1
9001ba38:	b292      	uxth	r2, r2
9001ba3a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001ba3e:	f102 0e01 	add.w	lr, r2, #1
9001ba42:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001ba46:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001ba4a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ba4e:	4315      	orrs	r5, r2
9001ba50:	1c4a      	adds	r2, r1, #1
9001ba52:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001ba56:	9a04      	ldr	r2, [sp, #16]
9001ba58:	0949      	lsrs	r1, r1, #5
9001ba5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ba5e:	430d      	orrs	r5, r1
9001ba60:	f822 5b02 	strh.w	r5, [r2], #2
9001ba64:	9204      	str	r2, [sp, #16]
9001ba66:	e7c1      	b.n	9001b9ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001ba68:	4649      	mov	r1, r9
9001ba6a:	4686      	mov	lr, r0
9001ba6c:	b999      	cbnz	r1, 9001ba96 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001ba6e:	4563      	cmp	r3, ip
9001ba70:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001ba74:	d389      	bcc.n	9001b98a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ba76:	fa1f f68b 	uxth.w	r6, fp
9001ba7a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
9001ba7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ba80:	1ba4      	subs	r4, r4, r6
9001ba82:	881b      	ldrh	r3, [r3, #0]
9001ba84:	b2a4      	uxth	r4, r4
9001ba86:	eba3 030b 	sub.w	r3, r3, fp
9001ba8a:	2c00      	cmp	r4, #0
9001ba8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001ba90:	bf18      	it	ne
9001ba92:	2600      	movne	r6, #0
9001ba94:	e779      	b.n	9001b98a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001ba96:	78aa      	ldrb	r2, [r5, #2]
9001ba98:	3901      	subs	r1, #1
9001ba9a:	4f0e      	ldr	r7, [pc, #56]	; (9001bad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001ba9c:	b289      	uxth	r1, r1
9001ba9e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001baa2:	786a      	ldrb	r2, [r5, #1]
9001baa4:	00d2      	lsls	r2, r2, #3
9001baa6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001baaa:	ea4a 0202 	orr.w	r2, sl, r2
9001baae:	f895 a000 	ldrb.w	sl, [r5]
9001bab2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001bab6:	f82e 2b02 	strh.w	r2, [lr], #2
9001baba:	e7d7      	b.n	9001ba6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001babc:	4b03      	ldr	r3, [pc, #12]	; (9001bacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001babe:	6818      	ldr	r0, [r3, #0]
9001bac0:	6803      	ldr	r3, [r0, #0]
9001bac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001bac4:	4798      	blx	r3
9001bac6:	b013      	add	sp, #76	; 0x4c
9001bac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bacc:	2402357c 	.word	0x2402357c
9001bad0:	24023576 	.word	0x24023576
9001bad4:	fffff800 	.word	0xfffff800

9001bad8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001bad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001badc:	b09d      	sub	sp, #116	; 0x74
9001bade:	461c      	mov	r4, r3
9001bae0:	4683      	mov	fp, r0
9001bae2:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001bae4:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
9001bae8:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
9001baec:	920e      	str	r2, [sp, #56]	; 0x38
9001baee:	2a00      	cmp	r2, #0
9001baf0:	f000 81e4 	beq.w	9001bebc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001baf4:	6820      	ldr	r0, [r4, #0]
9001baf6:	aa18      	add	r2, sp, #96	; 0x60
9001baf8:	6861      	ldr	r1, [r4, #4]
9001bafa:	c203      	stmia	r2!, {r0, r1}
9001bafc:	6818      	ldr	r0, [r3, #0]
9001bafe:	aa1a      	add	r2, sp, #104	; 0x68
9001bb00:	6859      	ldr	r1, [r3, #4]
9001bb02:	c203      	stmia	r2!, {r0, r1}
9001bb04:	a818      	add	r0, sp, #96	; 0x60
9001bb06:	f7f9 f851 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001bb0a:	4621      	mov	r1, r4
9001bb0c:	a81a      	add	r0, sp, #104	; 0x68
9001bb0e:	f7f9 f891 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bb12:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
9001bb16:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
9001bb1a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bb1e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bb22:	bfdb      	ittet	le
9001bb24:	b29a      	uxthle	r2, r3
9001bb26:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bb2a:	2201      	movgt	r2, #1
9001bb2c:	fb91 f2f2 	sdivle	r2, r1, r2
9001bb30:	9202      	str	r2, [sp, #8]
9001bb32:	9802      	ldr	r0, [sp, #8]
9001bb34:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
9001bb38:	9902      	ldr	r1, [sp, #8]
9001bb3a:	fb92 f0f0 	sdiv	r0, r2, r0
9001bb3e:	b280      	uxth	r0, r0
9001bb40:	440c      	add	r4, r1
9001bb42:	900f      	str	r0, [sp, #60]	; 0x3c
9001bb44:	3c01      	subs	r4, #1
9001bb46:	9802      	ldr	r0, [sp, #8]
9001bb48:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9001bb4a:	fb05 2510 	mls	r5, r5, r0, r2
9001bb4e:	fb94 f4f1 	sdiv	r4, r4, r1
9001bb52:	fb15 f503 	smulbb	r5, r5, r3
9001bb56:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
9001bb5a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
9001bb5e:	3401      	adds	r4, #1
9001bb60:	440d      	add	r5, r1
9001bb62:	4419      	add	r1, r3
9001bb64:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
9001bb68:	b2a4      	uxth	r4, r4
9001bb6a:	441a      	add	r2, r3
9001bb6c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bb70:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
9001bb74:	00a4      	lsls	r4, r4, #2
9001bb76:	9306      	str	r3, [sp, #24]
9001bb78:	b2ad      	uxth	r5, r5
9001bb7a:	4bb3      	ldr	r3, [pc, #716]	; (9001be48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001bb7c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
9001bb80:	6818      	ldr	r0, [r3, #0]
9001bb82:	6803      	ldr	r3, [r0, #0]
9001bb84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bb86:	4798      	blx	r3
9001bb88:	4bb0      	ldr	r3, [pc, #704]	; (9001be4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001bb8a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
9001bb8e:	2d00      	cmp	r5, #0
9001bb90:	881a      	ldrh	r2, [r3, #0]
9001bb92:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
9001bb96:	fb02 f606 	mul.w	r6, r2, r6
9001bb9a:	fb02 7101 	mla	r1, r2, r1, r7
9001bb9e:	9316      	str	r3, [sp, #88]	; 0x58
9001bba0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001bba4:	4baa      	ldr	r3, [pc, #680]	; (9001be50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001bba6:	bf18      	it	ne
9001bba8:	2100      	movne	r1, #0
9001bbaa:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001bbae:	eba3 030b 	sub.w	r3, r3, fp
9001bbb2:	920a      	str	r2, [sp, #40]	; 0x28
9001bbb4:	f104 0204 	add.w	r2, r4, #4
9001bbb8:	9317      	str	r3, [sp, #92]	; 0x5c
9001bbba:	9213      	str	r2, [sp, #76]	; 0x4c
9001bbbc:	9a06      	ldr	r2, [sp, #24]
9001bbbe:	bf08      	it	eq
9001bbc0:	4611      	moveq	r1, r2
9001bbc2:	2200      	movs	r2, #0
9001bbc4:	b289      	uxth	r1, r1
9001bbc6:	920d      	str	r2, [sp, #52]	; 0x34
9001bbc8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001bbca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bbcc:	fa12 f383 	uxtah	r3, r2, r3
9001bbd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001bbd2:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001bbd6:	3304      	adds	r3, #4
9001bbd8:	9308      	str	r3, [sp, #32]
9001bbda:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001bbdc:	4543      	cmp	r3, r8
9001bbde:	f240 8168 	bls.w	9001beb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001bbe2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
9001bbe6:	f04f 0e01 	mov.w	lr, #1
9001bbea:	9a02      	ldr	r2, [sp, #8]
9001bbec:	9808      	ldr	r0, [sp, #32]
9001bbee:	fbb5 f3f3 	udiv	r3, r5, r3
9001bbf2:	1ad3      	subs	r3, r2, r3
9001bbf4:	7800      	ldrb	r0, [r0, #0]
9001bbf6:	b29b      	uxth	r3, r3
9001bbf8:	9010      	str	r0, [sp, #64]	; 0x40
9001bbfa:	3001      	adds	r0, #1
9001bbfc:	9314      	str	r3, [sp, #80]	; 0x50
9001bbfe:	9b08      	ldr	r3, [sp, #32]
9001bc00:	9007      	str	r0, [sp, #28]
9001bc02:	785a      	ldrb	r2, [r3, #1]
9001bc04:	789b      	ldrb	r3, [r3, #2]
9001bc06:	021b      	lsls	r3, r3, #8
9001bc08:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001bc0c:	9a08      	ldr	r2, [sp, #32]
9001bc0e:	78d2      	ldrb	r2, [r2, #3]
9001bc10:	4313      	orrs	r3, r2
9001bc12:	9a11      	ldr	r2, [sp, #68]	; 0x44
9001bc14:	441a      	add	r2, r3
9001bc16:	1c50      	adds	r0, r2, #1
9001bc18:	7852      	ldrb	r2, [r2, #1]
9001bc1a:	9005      	str	r0, [sp, #20]
9001bc1c:	0212      	lsls	r2, r2, #8
9001bc1e:	9811      	ldr	r0, [sp, #68]	; 0x44
9001bc20:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001bc24:	5cc3      	ldrb	r3, [r0, r3]
9001bc26:	431a      	orrs	r2, r3
9001bc28:	b293      	uxth	r3, r2
9001bc2a:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
9001bc2e:	930b      	str	r3, [sp, #44]	; 0x2c
9001bc30:	2300      	movs	r3, #0
9001bc32:	9309      	str	r3, [sp, #36]	; 0x24
9001bc34:	2301      	movs	r3, #1
9001bc36:	9301      	str	r3, [sp, #4]
9001bc38:	9304      	str	r3, [sp, #16]
9001bc3a:	2300      	movs	r3, #0
9001bc3c:	9303      	str	r3, [sp, #12]
9001bc3e:	2d00      	cmp	r5, #0
9001bc40:	d07d      	beq.n	9001bd3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001bc42:	45ae      	cmp	lr, r5
9001bc44:	d26c      	bcs.n	9001bd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001bc46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001bc48:	eba5 050e 	sub.w	r5, r5, lr
9001bc4c:	460c      	mov	r4, r1
9001bc4e:	4543      	cmp	r3, r8
9001bc50:	b2ad      	uxth	r5, r5
9001bc52:	d802      	bhi.n	9001bc5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001bc54:	e071      	b.n	9001bd3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001bc56:	2b00      	cmp	r3, #0
9001bc58:	d15d      	bne.n	9001bd16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001bc5a:	9b05      	ldr	r3, [sp, #20]
9001bc5c:	9a04      	ldr	r2, [sp, #16]
9001bc5e:	785b      	ldrb	r3, [r3, #1]
9001bc60:	f1c2 0207 	rsb	r2, r2, #7
9001bc64:	9904      	ldr	r1, [sp, #16]
9001bc66:	4093      	lsls	r3, r2
9001bc68:	005b      	lsls	r3, r3, #1
9001bc6a:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001bc6e:	9b05      	ldr	r3, [sp, #20]
9001bc70:	781b      	ldrb	r3, [r3, #0]
9001bc72:	410b      	asrs	r3, r1
9001bc74:	3101      	adds	r1, #1
9001bc76:	b2c9      	uxtb	r1, r1
9001bc78:	b2db      	uxtb	r3, r3
9001bc7a:	2908      	cmp	r1, #8
9001bc7c:	9104      	str	r1, [sp, #16]
9001bc7e:	9905      	ldr	r1, [sp, #20]
9001bc80:	ea43 0302 	orr.w	r3, r3, r2
9001bc84:	bf0c      	ite	eq
9001bc86:	3102      	addeq	r1, #2
9001bc88:	3101      	addne	r1, #1
9001bc8a:	b29a      	uxth	r2, r3
9001bc8c:	bf05      	ittet	eq
9001bc8e:	9105      	streq	r1, [sp, #20]
9001bc90:	2100      	moveq	r1, #0
9001bc92:	9105      	strne	r1, [sp, #20]
9001bc94:	9104      	streq	r1, [sp, #16]
9001bc96:	9910      	ldr	r1, [sp, #64]	; 0x40
9001bc98:	4291      	cmp	r1, r2
9001bc9a:	d30a      	bcc.n	9001bcb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001bc9c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
9001bca0:	2301      	movs	r3, #1
9001bca2:	9907      	ldr	r1, [sp, #28]
9001bca4:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001bca8:	d30f      	bcc.n	9001bcca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001bcaa:	2100      	movs	r1, #0
9001bcac:	9301      	str	r3, [sp, #4]
9001bcae:	9103      	str	r1, [sp, #12]
9001bcb0:	e032      	b.n	9001bd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001bcb2:	9b07      	ldr	r3, [sp, #28]
9001bcb4:	429a      	cmp	r2, r3
9001bcb6:	d318      	bcc.n	9001bcea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001bcb8:	9b01      	ldr	r3, [sp, #4]
9001bcba:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
9001bcbe:	445b      	add	r3, fp
9001bcc0:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001bcc4:	9b01      	ldr	r3, [sp, #4]
9001bcc6:	3301      	adds	r3, #1
9001bcc8:	b29b      	uxth	r3, r3
9001bcca:	9907      	ldr	r1, [sp, #28]
9001bccc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
9001bcd0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bcd4:	7108      	strb	r0, [r1, #4]
9001bcd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001bcd8:	80c8      	strh	r0, [r1, #6]
9001bcda:	9801      	ldr	r0, [sp, #4]
9001bcdc:	3001      	adds	r0, #1
9001bcde:	7148      	strb	r0, [r1, #5]
9001bce0:	9907      	ldr	r1, [sp, #28]
9001bce2:	3101      	adds	r1, #1
9001bce4:	b289      	uxth	r1, r1
9001bce6:	9107      	str	r1, [sp, #28]
9001bce8:	e7df      	b.n	9001bcaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001bcea:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001bcee:	4611      	mov	r1, r2
9001bcf0:	795b      	ldrb	r3, [r3, #5]
9001bcf2:	f603 0004 	addw	r0, r3, #2052	; 0x804
9001bcf6:	4458      	add	r0, fp
9001bcf8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
9001bcfa:	4406      	add	r6, r0
9001bcfc:	2e00      	cmp	r6, #0
9001bcfe:	dd06      	ble.n	9001bd0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001bd00:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001bd04:	790e      	ldrb	r6, [r1, #4]
9001bd06:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001bd0a:	88c9      	ldrh	r1, [r1, #6]
9001bd0c:	e7f4      	b.n	9001bcf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001bd0e:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
9001bd12:	b29b      	uxth	r3, r3
9001bd14:	e7c5      	b.n	9001bca2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001bd16:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001bd18:	4621      	mov	r1, r4
9001bd1a:	920b      	str	r2, [sp, #44]	; 0x2c
9001bd1c:	469e      	mov	lr, r3
9001bd1e:	e78e      	b.n	9001bc3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001bd20:	9a03      	ldr	r2, [sp, #12]
9001bd22:	ebae 0305 	sub.w	r3, lr, r5
9001bd26:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bd2a:	442a      	add	r2, r5
9001bd2c:	b29b      	uxth	r3, r3
9001bd2e:	b292      	uxth	r2, r2
9001bd30:	9203      	str	r2, [sp, #12]
9001bd32:	2500      	movs	r5, #0
9001bd34:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001bd36:	4542      	cmp	r2, r8
9001bd38:	d88d      	bhi.n	9001bc56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001bd3a:	4621      	mov	r1, r4
9001bd3c:	e74d      	b.n	9001bbda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001bd3e:	458e      	cmp	lr, r1
9001bd40:	f04f 0900 	mov.w	r9, #0
9001bd44:	bf2b      	itete	cs
9001bd46:	ebae 0301 	subcs.w	r3, lr, r1
9001bd4a:	eba1 040e 	subcc.w	r4, r1, lr
9001bd4e:	462c      	movcs	r4, r5
9001bd50:	462b      	movcc	r3, r5
9001bd52:	bf27      	ittee	cs
9001bd54:	b29b      	uxthcs	r3, r3
9001bd56:	910c      	strcs	r1, [sp, #48]	; 0x30
9001bd58:	b2a4      	uxthcc	r4, r4
9001bd5a:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
9001bd5e:	9a03      	ldr	r2, [sp, #12]
9001bd60:	980c      	ldr	r0, [sp, #48]	; 0x30
9001bd62:	444a      	add	r2, r9
9001bd64:	4548      	cmp	r0, r9
9001bd66:	b292      	uxth	r2, r2
9001bd68:	d074      	beq.n	9001be54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001bd6a:	2004      	movs	r0, #4
9001bd6c:	445a      	add	r2, fp
9001bd6e:	4605      	mov	r5, r0
9001bd70:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
9001bd74:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001bd76:	fb15 0202 	smlabb	r2, r5, r2, r0
9001bd7a:	9812      	ldr	r0, [sp, #72]	; 0x48
9001bd7c:	5880      	ldr	r0, [r0, r2]
9001bd7e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001bd82:	d014      	beq.n	9001bdae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001bd84:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001bd88:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001bd8c:	d112      	bne.n	9001bdb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bd8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bd90:	2aff      	cmp	r2, #255	; 0xff
9001bd92:	d10f      	bne.n	9001bdb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001bd94:	0942      	lsrs	r2, r0, #5
9001bd96:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
9001bd9a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001bd9e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001bda2:	f025 0507 	bic.w	r5, r5, #7
9001bda6:	4315      	orrs	r5, r2
9001bda8:	4305      	orrs	r5, r0
9001bdaa:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001bdae:	f109 0901 	add.w	r9, r9, #1
9001bdb2:	e7d4      	b.n	9001bd5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001bdb4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001bdb8:	b2ed      	uxtb	r5, r5
9001bdba:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001bdbe:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bdc2:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
9001bdc6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bdca:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001bdce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001bdd2:	9215      	str	r2, [sp, #84]	; 0x54
9001bdd4:	fa5f fc8c 	uxtb.w	ip, ip
9001bdd8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001bdda:	b2c0      	uxtb	r0, r0
9001bddc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001bde0:	fb02 fa0a 	mul.w	sl, r2, sl
9001bde4:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001bde8:	f10a 0201 	add.w	r2, sl, #1
9001bdec:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001bdf0:	1212      	asrs	r2, r2, #8
9001bdf2:	fa1f fa82 	uxth.w	sl, r2
9001bdf6:	43d2      	mvns	r2, r2
9001bdf8:	fb16 f60a 	smulbb	r6, r6, sl
9001bdfc:	b2d2      	uxtb	r2, r2
9001bdfe:	fb10 f00a 	smulbb	r0, r0, sl
9001be02:	fb07 6702 	mla	r7, r7, r2, r6
9001be06:	9e15      	ldr	r6, [sp, #84]	; 0x54
9001be08:	fb0c 0002 	mla	r0, ip, r2, r0
9001be0c:	fb15 f50a 	smulbb	r5, r5, sl
9001be10:	b2bf      	uxth	r7, r7
9001be12:	b280      	uxth	r0, r0
9001be14:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001be18:	fb06 5602 	mla	r6, r6, r2, r5
9001be1c:	1c7a      	adds	r2, r7, #1
9001be1e:	1c45      	adds	r5, r0, #1
9001be20:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001be24:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001be28:	b2b6      	uxth	r6, r6
9001be2a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
9001be2e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001be32:	432f      	orrs	r7, r5
9001be34:	1c75      	adds	r5, r6, #1
9001be36:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001be3a:	096d      	lsrs	r5, r5, #5
9001be3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001be40:	432f      	orrs	r7, r5
9001be42:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001be46:	e7b2      	b.n	9001bdae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001be48:	2402357c 	.word	0x2402357c
9001be4c:	24023576 	.word	0x24023576
9001be50:	fffff7fb 	.word	0xfffff7fb
9001be54:	9203      	str	r2, [sp, #12]
9001be56:	458e      	cmp	lr, r1
9001be58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001be5a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001be5e:	f4ff af68 	bcc.w	9001bd32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001be62:	9a16      	ldr	r2, [sp, #88]	; 0x58
9001be64:	9906      	ldr	r1, [sp, #24]
9001be66:	8812      	ldrh	r2, [r2, #0]
9001be68:	1a52      	subs	r2, r2, r1
9001be6a:	9914      	ldr	r1, [sp, #80]	; 0x50
9001be6c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001be70:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001be72:	3201      	adds	r2, #1
9001be74:	428a      	cmp	r2, r1
9001be76:	9209      	str	r2, [sp, #36]	; 0x24
9001be78:	d111      	bne.n	9001be9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001be7a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
9001be7e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
9001be82:	9b06      	ldr	r3, [sp, #24]
9001be84:	eba5 0509 	sub.w	r5, r5, r9
9001be88:	b2ad      	uxth	r5, r5
9001be8a:	2d00      	cmp	r5, #0
9001be8c:	bf08      	it	eq
9001be8e:	4619      	moveq	r1, r3
9001be90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001be92:	bf18      	it	ne
9001be94:	2100      	movne	r1, #0
9001be96:	3301      	adds	r3, #1
9001be98:	b289      	uxth	r1, r1
9001be9a:	930d      	str	r3, [sp, #52]	; 0x34
9001be9c:	e694      	b.n	9001bbc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001be9e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001bea2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
9001bea6:	1b2d      	subs	r5, r5, r4
9001bea8:	b2ad      	uxth	r5, r5
9001beaa:	2d00      	cmp	r5, #0
9001beac:	bf18      	it	ne
9001beae:	2400      	movne	r4, #0
9001beb0:	e740      	b.n	9001bd34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001beb2:	4b04      	ldr	r3, [pc, #16]	; (9001bec4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001beb4:	6818      	ldr	r0, [r3, #0]
9001beb6:	6803      	ldr	r3, [r0, #0]
9001beb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001beba:	4798      	blx	r3
9001bebc:	b01d      	add	sp, #116	; 0x74
9001bebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001bec2:	bf00      	nop
9001bec4:	2402357c 	.word	0x2402357c

9001bec8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001bec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001becc:	b09f      	sub	sp, #124	; 0x7c
9001bece:	461d      	mov	r5, r3
9001bed0:	4604      	mov	r4, r0
9001bed2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001bed4:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
9001bed8:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
9001bedc:	920a      	str	r2, [sp, #40]	; 0x28
9001bede:	2a00      	cmp	r2, #0
9001bee0:	f000 81fe 	beq.w	9001c2e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001bee4:	6828      	ldr	r0, [r5, #0]
9001bee6:	aa1a      	add	r2, sp, #104	; 0x68
9001bee8:	6869      	ldr	r1, [r5, #4]
9001beea:	c203      	stmia	r2!, {r0, r1}
9001beec:	6818      	ldr	r0, [r3, #0]
9001beee:	aa1c      	add	r2, sp, #112	; 0x70
9001bef0:	6859      	ldr	r1, [r3, #4]
9001bef2:	c203      	stmia	r2!, {r0, r1}
9001bef4:	a81a      	add	r0, sp, #104	; 0x68
9001bef6:	f7f8 fe59 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001befa:	4629      	mov	r1, r5
9001befc:	a81c      	add	r0, sp, #112	; 0x70
9001befe:	f7f8 fe99 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001bf02:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
9001bf06:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
9001bf0a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
9001bf0e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
9001bf12:	bfdb      	ittet	le
9001bf14:	b29a      	uxthle	r2, r3
9001bf16:	f44f 6180 	movle.w	r1, #1024	; 0x400
9001bf1a:	2201      	movgt	r2, #1
9001bf1c:	fb91 f2f2 	sdivle	r2, r1, r2
9001bf20:	9201      	str	r2, [sp, #4]
9001bf22:	9801      	ldr	r0, [sp, #4]
9001bf24:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
9001bf28:	9901      	ldr	r1, [sp, #4]
9001bf2a:	fb92 f0f0 	sdiv	r0, r2, r0
9001bf2e:	b280      	uxth	r0, r0
9001bf30:	440e      	add	r6, r1
9001bf32:	9010      	str	r0, [sp, #64]	; 0x40
9001bf34:	3e01      	subs	r6, #1
9001bf36:	9801      	ldr	r0, [sp, #4]
9001bf38:	9d10      	ldr	r5, [sp, #64]	; 0x40
9001bf3a:	fb05 2510 	mls	r5, r5, r0, r2
9001bf3e:	fb96 f6f1 	sdiv	r6, r6, r1
9001bf42:	fb15 f503 	smulbb	r5, r5, r3
9001bf46:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
9001bf4a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
9001bf4e:	3601      	adds	r6, #1
9001bf50:	440d      	add	r5, r1
9001bf52:	4419      	add	r1, r3
9001bf54:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
9001bf58:	b2b6      	uxth	r6, r6
9001bf5a:	441a      	add	r2, r3
9001bf5c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
9001bf60:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
9001bf64:	b2ad      	uxth	r5, r5
9001bf66:	9304      	str	r3, [sp, #16]
9001bf68:	4b96      	ldr	r3, [pc, #600]	; (9001c1c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001bf6a:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
9001bf6e:	6818      	ldr	r0, [r3, #0]
9001bf70:	6803      	ldr	r3, [r0, #0]
9001bf72:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001bf74:	4798      	blx	r3
9001bf76:	4b94      	ldr	r3, [pc, #592]	; (9001c1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001bf78:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
9001bf7c:	2d00      	cmp	r5, #0
9001bf7e:	881a      	ldrh	r2, [r3, #0]
9001bf80:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
9001bf84:	fb02 f707 	mul.w	r7, r2, r7
9001bf88:	fb02 c101 	mla	r1, r2, r1, ip
9001bf8c:	9318      	str	r3, [sp, #96]	; 0x60
9001bf8e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001bf92:	4b8e      	ldr	r3, [pc, #568]	; (9001c1cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001bf94:	bf18      	it	ne
9001bf96:	2100      	movne	r1, #0
9001bf98:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001bf9c:	eba3 0304 	sub.w	r3, r3, r4
9001bfa0:	920b      	str	r2, [sp, #44]	; 0x2c
9001bfa2:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bfa4:	9319      	str	r3, [sp, #100]	; 0x64
9001bfa6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001bfaa:	f106 0204 	add.w	r2, r6, #4
9001bfae:	9206      	str	r2, [sp, #24]
9001bfb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001bfb2:	ea6f 0202 	mvn.w	r2, r2
9001bfb6:	b2d2      	uxtb	r2, r2
9001bfb8:	9215      	str	r2, [sp, #84]	; 0x54
9001bfba:	9a04      	ldr	r2, [sp, #16]
9001bfbc:	bf08      	it	eq
9001bfbe:	4611      	moveq	r1, r2
9001bfc0:	2200      	movs	r2, #0
9001bfc2:	b289      	uxth	r1, r1
9001bfc4:	920d      	str	r2, [sp, #52]	; 0x34
9001bfc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
9001bfc8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001bfca:	fa12 f383 	uxtah	r3, r2, r3
9001bfce:	9a14      	ldr	r2, [sp, #80]	; 0x50
9001bfd0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001bfd4:	3304      	adds	r3, #4
9001bfd6:	9307      	str	r3, [sp, #28]
9001bfd8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001bfda:	455b      	cmp	r3, fp
9001bfdc:	f240 817b 	bls.w	9001c2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001bfe0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
9001bfe4:	f04f 0801 	mov.w	r8, #1
9001bfe8:	9a01      	ldr	r2, [sp, #4]
9001bfea:	9807      	ldr	r0, [sp, #28]
9001bfec:	46c4      	mov	ip, r8
9001bfee:	f8cd 8008 	str.w	r8, [sp, #8]
9001bff2:	7800      	ldrb	r0, [r0, #0]
9001bff4:	fbb5 f3f3 	udiv	r3, r5, r3
9001bff8:	1ad3      	subs	r3, r2, r3
9001bffa:	9011      	str	r0, [sp, #68]	; 0x44
9001bffc:	3001      	adds	r0, #1
9001bffe:	b29b      	uxth	r3, r3
9001c000:	9005      	str	r0, [sp, #20]
9001c002:	9316      	str	r3, [sp, #88]	; 0x58
9001c004:	9b07      	ldr	r3, [sp, #28]
9001c006:	785a      	ldrb	r2, [r3, #1]
9001c008:	789b      	ldrb	r3, [r3, #2]
9001c00a:	021b      	lsls	r3, r3, #8
9001c00c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001c010:	9a07      	ldr	r2, [sp, #28]
9001c012:	78d2      	ldrb	r2, [r2, #3]
9001c014:	4313      	orrs	r3, r2
9001c016:	9a13      	ldr	r2, [sp, #76]	; 0x4c
9001c018:	441a      	add	r2, r3
9001c01a:	1c50      	adds	r0, r2, #1
9001c01c:	7852      	ldrb	r2, [r2, #1]
9001c01e:	9003      	str	r0, [sp, #12]
9001c020:	0212      	lsls	r2, r2, #8
9001c022:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001c024:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
9001c028:	5cc3      	ldrb	r3, [r0, r3]
9001c02a:	431a      	orrs	r2, r3
9001c02c:	b293      	uxth	r3, r2
9001c02e:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
9001c032:	930c      	str	r3, [sp, #48]	; 0x30
9001c034:	2300      	movs	r3, #0
9001c036:	9308      	str	r3, [sp, #32]
9001c038:	461a      	mov	r2, r3
9001c03a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
9001c03e:	930e      	str	r3, [sp, #56]	; 0x38
9001c040:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
9001c044:	930f      	str	r3, [sp, #60]	; 0x3c
9001c046:	2d00      	cmp	r5, #0
9001c048:	d07d      	beq.n	9001c146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001c04a:	45ac      	cmp	ip, r5
9001c04c:	d26d      	bcs.n	9001c12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001c04e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001c050:	eba5 050c 	sub.w	r5, r5, ip
9001c054:	4608      	mov	r0, r1
9001c056:	455b      	cmp	r3, fp
9001c058:	b2ad      	uxth	r5, r5
9001c05a:	d802      	bhi.n	9001c062 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001c05c:	e071      	b.n	9001c142 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001c05e:	2b00      	cmp	r3, #0
9001c060:	d15d      	bne.n	9001c11e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001c062:	9b03      	ldr	r3, [sp, #12]
9001c064:	9a02      	ldr	r2, [sp, #8]
9001c066:	785b      	ldrb	r3, [r3, #1]
9001c068:	f1c2 0207 	rsb	r2, r2, #7
9001c06c:	9902      	ldr	r1, [sp, #8]
9001c06e:	4093      	lsls	r3, r2
9001c070:	005b      	lsls	r3, r3, #1
9001c072:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
9001c076:	9b03      	ldr	r3, [sp, #12]
9001c078:	781b      	ldrb	r3, [r3, #0]
9001c07a:	410b      	asrs	r3, r1
9001c07c:	3101      	adds	r1, #1
9001c07e:	b2c9      	uxtb	r1, r1
9001c080:	b2db      	uxtb	r3, r3
9001c082:	2908      	cmp	r1, #8
9001c084:	9102      	str	r1, [sp, #8]
9001c086:	9903      	ldr	r1, [sp, #12]
9001c088:	ea43 0302 	orr.w	r3, r3, r2
9001c08c:	bf0c      	ite	eq
9001c08e:	3102      	addeq	r1, #2
9001c090:	3101      	addne	r1, #1
9001c092:	b29a      	uxth	r2, r3
9001c094:	bf05      	ittet	eq
9001c096:	9103      	streq	r1, [sp, #12]
9001c098:	2100      	moveq	r1, #0
9001c09a:	9103      	strne	r1, [sp, #12]
9001c09c:	9102      	streq	r1, [sp, #8]
9001c09e:	9911      	ldr	r1, [sp, #68]	; 0x44
9001c0a0:	4291      	cmp	r1, r2
9001c0a2:	d30a      	bcc.n	9001c0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001c0a4:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
9001c0a8:	2301      	movs	r3, #1
9001c0aa:	9905      	ldr	r1, [sp, #20]
9001c0ac:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
9001c0b0:	d30f      	bcc.n	9001c0d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001c0b2:	2100      	movs	r1, #0
9001c0b4:	4698      	mov	r8, r3
9001c0b6:	9100      	str	r1, [sp, #0]
9001c0b8:	e032      	b.n	9001c120 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001c0ba:	9b05      	ldr	r3, [sp, #20]
9001c0bc:	429a      	cmp	r2, r3
9001c0be:	d318      	bcc.n	9001c0f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001c0c0:	eb04 0308 	add.w	r3, r4, r8
9001c0c4:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
9001c0c8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
9001c0cc:	f108 0301 	add.w	r3, r8, #1
9001c0d0:	b29b      	uxth	r3, r3
9001c0d2:	9905      	ldr	r1, [sp, #20]
9001c0d4:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
9001c0d8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c0dc:	710e      	strb	r6, [r1, #4]
9001c0de:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001c0e0:	80ce      	strh	r6, [r1, #6]
9001c0e2:	f108 0601 	add.w	r6, r8, #1
9001c0e6:	714e      	strb	r6, [r1, #5]
9001c0e8:	9905      	ldr	r1, [sp, #20]
9001c0ea:	3101      	adds	r1, #1
9001c0ec:	b289      	uxth	r1, r1
9001c0ee:	9105      	str	r1, [sp, #20]
9001c0f0:	e7df      	b.n	9001c0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001c0f2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001c0f6:	4611      	mov	r1, r2
9001c0f8:	795b      	ldrb	r3, [r3, #5]
9001c0fa:	f603 0604 	addw	r6, r3, #2052	; 0x804
9001c0fe:	4426      	add	r6, r4
9001c100:	9f19      	ldr	r7, [sp, #100]	; 0x64
9001c102:	4437      	add	r7, r6
9001c104:	2f00      	cmp	r7, #0
9001c106:	dd06      	ble.n	9001c116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001c108:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001c10c:	790f      	ldrb	r7, [r1, #4]
9001c10e:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001c112:	88c9      	ldrh	r1, [r1, #6]
9001c114:	e7f4      	b.n	9001c100 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001c116:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
9001c11a:	b29b      	uxth	r3, r3
9001c11c:	e7c5      	b.n	9001c0aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001c11e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001c120:	920c      	str	r2, [sp, #48]	; 0x30
9001c122:	4601      	mov	r1, r0
9001c124:	9a00      	ldr	r2, [sp, #0]
9001c126:	469c      	mov	ip, r3
9001c128:	e78d      	b.n	9001c046 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001c12a:	ebac 0305 	sub.w	r3, ip, r5
9001c12e:	1957      	adds	r7, r2, r5
9001c130:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c134:	b2ba      	uxth	r2, r7
9001c136:	b29b      	uxth	r3, r3
9001c138:	9200      	str	r2, [sp, #0]
9001c13a:	2500      	movs	r5, #0
9001c13c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001c13e:	455a      	cmp	r2, fp
9001c140:	d88d      	bhi.n	9001c05e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001c142:	4601      	mov	r1, r0
9001c144:	e748      	b.n	9001bfd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001c146:	458c      	cmp	ip, r1
9001c148:	bf27      	ittee	cs
9001c14a:	ebac 0301 	subcs.w	r3, ip, r1
9001c14e:	4628      	movcs	r0, r5
9001c150:	eba1 000c 	subcc.w	r0, r1, ip
9001c154:	462b      	movcc	r3, r5
9001c156:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9001c158:	bf27      	ittee	cs
9001c15a:	b29b      	uxthcs	r3, r3
9001c15c:	9109      	strcs	r1, [sp, #36]	; 0x24
9001c15e:	b280      	uxthcc	r0, r0
9001c160:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
9001c164:	2dff      	cmp	r5, #255	; 0xff
9001c166:	9d09      	ldr	r5, [sp, #36]	; 0x24
9001c168:	eb02 0705 	add.w	r7, r2, r5
9001c16c:	b2bd      	uxth	r5, r7
9001c16e:	9500      	str	r5, [sp, #0]
9001c170:	d12e      	bne.n	9001c1d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001c172:	465e      	mov	r6, fp
9001c174:	9d00      	ldr	r5, [sp, #0]
9001c176:	42aa      	cmp	r2, r5
9001c178:	f040 8083 	bne.w	9001c282 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001c17c:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001c17e:	458c      	cmp	ip, r1
9001c180:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c184:	d3d9      	bcc.n	9001c13a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001c186:	9a18      	ldr	r2, [sp, #96]	; 0x60
9001c188:	9904      	ldr	r1, [sp, #16]
9001c18a:	8812      	ldrh	r2, [r2, #0]
9001c18c:	1a52      	subs	r2, r2, r1
9001c18e:	9916      	ldr	r1, [sp, #88]	; 0x58
9001c190:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001c194:	9a08      	ldr	r2, [sp, #32]
9001c196:	3201      	adds	r2, #1
9001c198:	428a      	cmp	r2, r1
9001c19a:	9208      	str	r2, [sp, #32]
9001c19c:	f040 8091 	bne.w	9001c2c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001c1a0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
9001c1a4:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
9001c1a8:	9b04      	ldr	r3, [sp, #16]
9001c1aa:	eba5 050c 	sub.w	r5, r5, ip
9001c1ae:	b2ad      	uxth	r5, r5
9001c1b0:	2d00      	cmp	r5, #0
9001c1b2:	bf08      	it	eq
9001c1b4:	4619      	moveq	r1, r3
9001c1b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001c1b8:	bf18      	it	ne
9001c1ba:	2100      	movne	r1, #0
9001c1bc:	3301      	adds	r3, #1
9001c1be:	b289      	uxth	r1, r1
9001c1c0:	930d      	str	r3, [sp, #52]	; 0x34
9001c1c2:	e700      	b.n	9001bfc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001c1c4:	2402357c 	.word	0x2402357c
9001c1c8:	24023576 	.word	0x24023576
9001c1cc:	fffff7fb 	.word	0xfffff7fb
9001c1d0:	46d9      	mov	r9, fp
9001c1d2:	9d00      	ldr	r5, [sp, #0]
9001c1d4:	42aa      	cmp	r2, r5
9001c1d6:	d0d1      	beq.n	9001c17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001c1d8:	1c55      	adds	r5, r2, #1
9001c1da:	4422      	add	r2, r4
9001c1dc:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
9001c1e0:	9a06      	ldr	r2, [sp, #24]
9001c1e2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001c1e6:	9517      	str	r5, [sp, #92]	; 0x5c
9001c1e8:	4472      	add	r2, lr
9001c1ea:	9212      	str	r2, [sp, #72]	; 0x48
9001c1ec:	f8b9 2000 	ldrh.w	r2, [r9]
9001c1f0:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c1f2:	1216      	asrs	r6, r2, #8
9001c1f4:	f897 a002 	ldrb.w	sl, [r7, #2]
9001c1f8:	10d5      	asrs	r5, r2, #3
9001c1fa:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c1fc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c200:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c204:	00d2      	lsls	r2, r2, #3
9001c206:	fb1a fa07 	smulbb	sl, sl, r7
9001c20a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c20e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c210:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c214:	b2d2      	uxtb	r2, r2
9001c216:	fb06 a607 	mla	r6, r6, r7, sl
9001c21a:	9f12      	ldr	r7, [sp, #72]	; 0x48
9001c21c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c220:	f897 a001 	ldrb.w	sl, [r7, #1]
9001c224:	b2b6      	uxth	r6, r6
9001c226:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c228:	fb1a fa07 	smulbb	sl, sl, r7
9001c22c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c22e:	fb05 a507 	mla	r5, r5, r7, sl
9001c232:	9f06      	ldr	r7, [sp, #24]
9001c234:	f106 0a01 	add.w	sl, r6, #1
9001c238:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001c23c:	b2ad      	uxth	r5, r5
9001c23e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
9001c240:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001c244:	f105 0a01 	add.w	sl, r5, #1
9001c248:	fb1e fe07 	smulbb	lr, lr, r7
9001c24c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001c24e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c252:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001c256:	fb02 e207 	mla	r2, r2, r7, lr
9001c25a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c25e:	b292      	uxth	r2, r2
9001c260:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001c264:	f102 0e01 	add.w	lr, r2, #1
9001c268:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001c26c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001c270:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001c274:	ea4e 0606 	orr.w	r6, lr, r6
9001c278:	ea46 060a 	orr.w	r6, r6, sl
9001c27c:	f829 6b02 	strh.w	r6, [r9], #2
9001c280:	e7a7      	b.n	9001c1d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001c282:	f102 0e01 	add.w	lr, r2, #1
9001c286:	4422      	add	r2, r4
9001c288:	9f06      	ldr	r7, [sp, #24]
9001c28a:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
9001c28e:	9a06      	ldr	r2, [sp, #24]
9001c290:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001c294:	eb02 0a05 	add.w	sl, r2, r5
9001c298:	4a13      	ldr	r2, [pc, #76]	; (9001c2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001c29a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001c29e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001c2a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001c2a6:	00d2      	lsls	r2, r2, #3
9001c2a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001c2ac:	ea49 0202 	orr.w	r2, r9, r2
9001c2b0:	f817 9005 	ldrb.w	r9, [r7, r5]
9001c2b4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001c2b8:	f826 2b02 	strh.w	r2, [r6], #2
9001c2bc:	fa1f f28e 	uxth.w	r2, lr
9001c2c0:	e758      	b.n	9001c174 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001c2c2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001c2c6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
9001c2ca:	1a2d      	subs	r5, r5, r0
9001c2cc:	b2ad      	uxth	r5, r5
9001c2ce:	2d00      	cmp	r5, #0
9001c2d0:	bf18      	it	ne
9001c2d2:	2000      	movne	r0, #0
9001c2d4:	e732      	b.n	9001c13c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001c2d6:	4b05      	ldr	r3, [pc, #20]	; (9001c2ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001c2d8:	6818      	ldr	r0, [r3, #0]
9001c2da:	6803      	ldr	r3, [r0, #0]
9001c2dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c2de:	4798      	blx	r3
9001c2e0:	b01f      	add	sp, #124	; 0x7c
9001c2e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c2e6:	bf00      	nop
9001c2e8:	fffff800 	.word	0xfffff800
9001c2ec:	2402357c 	.word	0x2402357c

9001c2f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001c2f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c2f4:	b091      	sub	sp, #68	; 0x44
9001c2f6:	469b      	mov	fp, r3
9001c2f8:	4616      	mov	r6, r2
9001c2fa:	f9b3 2000 	ldrsh.w	r2, [r3]
9001c2fe:	f10d 0828 	add.w	r8, sp, #40	; 0x28
9001c302:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001c306:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
9001c30a:	4604      	mov	r4, r0
9001c30c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
9001c310:	4640      	mov	r0, r8
9001c312:	460d      	mov	r5, r1
9001c314:	4659      	mov	r1, fp
9001c316:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c31a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c31e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
9001c322:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
9001c326:	f7f3 fed7 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001c32a:	4631      	mov	r1, r6
9001c32c:	4640      	mov	r0, r8
9001c32e:	f7f3 fed3 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001c332:	4b74      	ldr	r3, [pc, #464]	; (9001c504 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001c334:	8818      	ldrh	r0, [r3, #0]
9001c336:	4b74      	ldr	r3, [pc, #464]	; (9001c508 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001c338:	b202      	sxth	r2, r0
9001c33a:	8819      	ldrh	r1, [r3, #0]
9001c33c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c340:	b20e      	sxth	r6, r1
9001c342:	2b00      	cmp	r3, #0
9001c344:	da07      	bge.n	9001c356 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001c346:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
9001c34a:	4463      	add	r3, ip
9001c34c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
9001c350:	2300      	movs	r3, #0
9001c352:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
9001c356:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
9001c35a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001c35e:	1ad2      	subs	r2, r2, r3
9001c360:	4594      	cmp	ip, r2
9001c362:	bfc4      	itt	gt
9001c364:	1ac2      	subgt	r2, r0, r3
9001c366:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
9001c36a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c36e:	2a00      	cmp	r2, #0
9001c370:	da07      	bge.n	9001c382 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001c372:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
9001c376:	4462      	add	r2, ip
9001c378:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
9001c37c:	2200      	movs	r2, #0
9001c37e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
9001c382:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
9001c386:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c38a:	eba6 060a 	sub.w	r6, r6, sl
9001c38e:	42b2      	cmp	r2, r6
9001c390:	bfc4      	itt	gt
9001c392:	eba1 020a 	subgt.w	r2, r1, sl
9001c396:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
9001c39a:	4a5c      	ldr	r2, [pc, #368]	; (9001c50c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001c39c:	7812      	ldrb	r2, [r2, #0]
9001c39e:	b9a2      	cbnz	r2, 9001c3ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001c3a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
9001c3a4:	4286      	cmp	r6, r0
9001c3a6:	4640      	mov	r0, r8
9001c3a8:	9303      	str	r3, [sp, #12]
9001c3aa:	bf14      	ite	ne
9001c3ac:	2600      	movne	r6, #0
9001c3ae:	2601      	moveq	r6, #1
9001c3b0:	f7f3 fed5 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c3b4:	9b03      	ldr	r3, [sp, #12]
9001c3b6:	b160      	cbz	r0, 9001c3d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001c3b8:	2300      	movs	r3, #0
9001c3ba:	8023      	strh	r3, [r4, #0]
9001c3bc:	8063      	strh	r3, [r4, #2]
9001c3be:	80a3      	strh	r3, [r4, #4]
9001c3c0:	4620      	mov	r0, r4
9001c3c2:	80e3      	strh	r3, [r4, #6]
9001c3c4:	b011      	add	sp, #68	; 0x44
9001c3c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c3ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c3ce:	428e      	cmp	r6, r1
9001c3d0:	e7e9      	b.n	9001c3a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001c3d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
9001c3d6:	a90e      	add	r1, sp, #56	; 0x38
9001c3d8:	900e      	str	r0, [sp, #56]	; 0x38
9001c3da:	a80c      	add	r0, sp, #48	; 0x30
9001c3dc:	9205      	str	r2, [sp, #20]
9001c3de:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
9001c3e2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
9001c3e6:	9206      	str	r2, [sp, #24]
9001c3e8:	f8bb 2000 	ldrh.w	r2, [fp]
9001c3ec:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
9001c3f0:	1a9b      	subs	r3, r3, r2
9001c3f2:	b21b      	sxth	r3, r3
9001c3f4:	9303      	str	r3, [sp, #12]
9001c3f6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001c3fa:	f8df b118 	ldr.w	fp, [pc, #280]	; 9001c514 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c3fe:	ebaa 0a03 	sub.w	sl, sl, r3
9001c402:	fa0f f38a 	sxth.w	r3, sl
9001c406:	9304      	str	r3, [sp, #16]
9001c408:	9b03      	ldr	r3, [sp, #12]
9001c40a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
9001c40e:	9b04      	ldr	r3, [sp, #16]
9001c410:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001c414:	9b05      	ldr	r3, [sp, #20]
9001c416:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
9001c41a:	9b06      	ldr	r3, [sp, #24]
9001c41c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
9001c420:	f7f8 fc08 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c424:	4640      	mov	r0, r8
9001c426:	f7f8 fbc1 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c42a:	a80e      	add	r0, sp, #56	; 0x38
9001c42c:	f7f8 fbbe 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c430:	4b37      	ldr	r3, [pc, #220]	; (9001c510 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001c432:	4628      	mov	r0, r5
9001c434:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
9001c438:	881b      	ldrh	r3, [r3, #0]
9001c43a:	9307      	str	r3, [sp, #28]
9001c43c:	682b      	ldr	r3, [r5, #0]
9001c43e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c440:	4798      	blx	r3
9001c442:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
9001c446:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
9001c44a:	4681      	mov	r9, r0
9001c44c:	f8db 0000 	ldr.w	r0, [fp]
9001c450:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001c454:	9d1a      	ldr	r5, [sp, #104]	; 0x68
9001c456:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001c45a:	6803      	ldr	r3, [r0, #0]
9001c45c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
9001c45e:	4798      	blx	r3
9001c460:	4607      	mov	r7, r0
9001c462:	f8db 0000 	ldr.w	r0, [fp]
9001c466:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
9001c46a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c46e:	6803      	ldr	r3, [r0, #0]
9001c470:	9109      	str	r1, [sp, #36]	; 0x24
9001c472:	9208      	str	r2, [sp, #32]
9001c474:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c476:	4798      	blx	r3
9001c478:	f010 0f01 	tst.w	r0, #1
9001c47c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001c480:	d012      	beq.n	9001c4a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001c482:	f8db 0000 	ldr.w	r0, [fp]
9001c486:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
9001c48a:	6803      	ldr	r3, [r0, #0]
9001c48c:	9200      	str	r2, [sp, #0]
9001c48e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
9001c490:	462b      	mov	r3, r5
9001c492:	e898 0006 	ldmia.w	r8, {r1, r2}
9001c496:	47b0      	blx	r6
9001c498:	9b03      	ldr	r3, [sp, #12]
9001c49a:	8023      	strh	r3, [r4, #0]
9001c49c:	9b04      	ldr	r3, [sp, #16]
9001c49e:	8063      	strh	r3, [r4, #2]
9001c4a0:	9b05      	ldr	r3, [sp, #20]
9001c4a2:	80a3      	strh	r3, [r4, #4]
9001c4a4:	9b06      	ldr	r3, [sp, #24]
9001c4a6:	e78b      	b.n	9001c3c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001c4a8:	fb09 f202 	mul.w	r2, r9, r2
9001c4ac:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
9001c4b0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001c4b4:	440f      	add	r7, r1
9001c4b6:	b166      	cbz	r6, 9001c4d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c4b8:	9a07      	ldr	r2, [sp, #28]
9001c4ba:	4592      	cmp	sl, r2
9001c4bc:	d109      	bne.n	9001c4d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001c4be:	f8db 0000 	ldr.w	r0, [fp]
9001c4c2:	fb09 f303 	mul.w	r3, r9, r3
9001c4c6:	4629      	mov	r1, r5
9001c4c8:	6802      	ldr	r2, [r0, #0]
9001c4ca:	6b56      	ldr	r6, [r2, #52]	; 0x34
9001c4cc:	463a      	mov	r2, r7
9001c4ce:	47b0      	blx	r6
9001c4d0:	e7e2      	b.n	9001c498 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c4d2:	fb0a f303 	mul.w	r3, sl, r3
9001c4d6:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001c4da:	f8df b038 	ldr.w	fp, [pc, #56]	; 9001c514 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001c4de:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001c4e2:	4545      	cmp	r5, r8
9001c4e4:	d2d8      	bcs.n	9001c498 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001c4e6:	f8db 0000 	ldr.w	r0, [fp]
9001c4ea:	4629      	mov	r1, r5
9001c4ec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001c4f0:	4435      	add	r5, r6
9001c4f2:	6802      	ldr	r2, [r0, #0]
9001c4f4:	005b      	lsls	r3, r3, #1
9001c4f6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
9001c4fa:	463a      	mov	r2, r7
9001c4fc:	47d0      	blx	sl
9001c4fe:	444f      	add	r7, r9
9001c500:	e7ef      	b.n	9001c4e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001c502:	bf00      	nop
9001c504:	24023570 	.word	0x24023570
9001c508:	24023572 	.word	0x24023572
9001c50c:	24023574 	.word	0x24023574
9001c510:	24023576 	.word	0x24023576
9001c514:	2402357c 	.word	0x2402357c

9001c518 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001c518:	b5f0      	push	{r4, r5, r6, r7, lr}
9001c51a:	4606      	mov	r6, r0
9001c51c:	b087      	sub	sp, #28
9001c51e:	460c      	mov	r4, r1
9001c520:	4617      	mov	r7, r2
9001c522:	461d      	mov	r5, r3
9001c524:	b333      	cbz	r3, 9001c574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c526:	4608      	mov	r0, r1
9001c528:	f7f3 fe19 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c52c:	bb10      	cbnz	r0, 9001c574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c52e:	6820      	ldr	r0, [r4, #0]
9001c530:	ab04      	add	r3, sp, #16
9001c532:	6861      	ldr	r1, [r4, #4]
9001c534:	4c1b      	ldr	r4, [pc, #108]	; (9001c5a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001c536:	c303      	stmia	r3!, {r0, r1}
9001c538:	a804      	add	r0, sp, #16
9001c53a:	f7f8 fb37 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c53e:	6820      	ldr	r0, [r4, #0]
9001c540:	6803      	ldr	r3, [r0, #0]
9001c542:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c544:	4798      	blx	r3
9001c546:	2dff      	cmp	r5, #255	; 0xff
9001c548:	d016      	beq.n	9001c578 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001c54a:	f010 0f08 	tst.w	r0, #8
9001c54e:	6820      	ldr	r0, [r4, #0]
9001c550:	d015      	beq.n	9001c57e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001c552:	2400      	movs	r4, #0
9001c554:	6801      	ldr	r1, [r0, #0]
9001c556:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001c55a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001c55e:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001c562:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001c566:	9401      	str	r4, [sp, #4]
9001c568:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001c56c:	9400      	str	r4, [sp, #0]
9001c56e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
9001c570:	4639      	mov	r1, r7
9001c572:	47a0      	blx	r4
9001c574:	b007      	add	sp, #28
9001c576:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001c578:	f010 0f02 	tst.w	r0, #2
9001c57c:	e7e7      	b.n	9001c54e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001c57e:	6803      	ldr	r3, [r0, #0]
9001c580:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c582:	4798      	blx	r3
9001c584:	4b08      	ldr	r3, [pc, #32]	; (9001c5a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001c586:	4601      	mov	r1, r0
9001c588:	4630      	mov	r0, r6
9001c58a:	881a      	ldrh	r2, [r3, #0]
9001c58c:	6833      	ldr	r3, [r6, #0]
9001c58e:	e9cd 7500 	strd	r7, r5, [sp]
9001c592:	6a5d      	ldr	r5, [r3, #36]	; 0x24
9001c594:	ab04      	add	r3, sp, #16
9001c596:	47a8      	blx	r5
9001c598:	6820      	ldr	r0, [r4, #0]
9001c59a:	6803      	ldr	r3, [r0, #0]
9001c59c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c59e:	4798      	blx	r3
9001c5a0:	e7e8      	b.n	9001c574 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001c5a2:	bf00      	nop
9001c5a4:	2402357c 	.word	0x2402357c
9001c5a8:	24023576 	.word	0x24023576

9001c5ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001c5ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c5b0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
9001c5b4:	4688      	mov	r8, r1
9001c5b6:	4614      	mov	r4, r2
9001c5b8:	461d      	mov	r5, r3
9001c5ba:	9e08      	ldr	r6, [sp, #32]
9001c5bc:	2f00      	cmp	r7, #0
9001c5be:	f000 80ab 	beq.w	9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c5c2:	4618      	mov	r0, r3
9001c5c4:	f7f3 fdcb 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001c5c8:	2800      	cmp	r0, #0
9001c5ca:	f040 80a5 	bne.w	9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c5ce:	f9b5 1000 	ldrsh.w	r1, [r5]
9001c5d2:	2fff      	cmp	r7, #255	; 0xff
9001c5d4:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001c5d8:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001c5dc:	fb04 1303 	mla	r3, r4, r3, r1
9001c5e0:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001c5e4:	eba4 0200 	sub.w	r2, r4, r0
9001c5e8:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001c5ec:	fb04 f505 	mul.w	r5, r4, r5
9001c5f0:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001c5f4:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001c5f8:	d04a      	beq.n	9001c690 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001c5fa:	b2bc      	uxth	r4, r7
9001c5fc:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
9001c600:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001c604:	fa5f f788 	uxtb.w	r7, r8
9001c608:	b2f3      	uxtb	r3, r6
9001c60a:	0040      	lsls	r0, r0, #1
9001c60c:	fb0e fe04 	mul.w	lr, lr, r4
9001c610:	4367      	muls	r7, r4
9001c612:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001c616:	4363      	muls	r3, r4
9001c618:	fa1f fc8c 	uxth.w	ip, ip
9001c61c:	42a9      	cmp	r1, r5
9001c61e:	d27b      	bcs.n	9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c620:	eb01 0900 	add.w	r9, r1, r0
9001c624:	4549      	cmp	r1, r9
9001c626:	d231      	bcs.n	9001c68c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001c628:	880a      	ldrh	r2, [r1, #0]
9001c62a:	1214      	asrs	r4, r2, #8
9001c62c:	10d6      	asrs	r6, r2, #3
9001c62e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
9001c632:	00d2      	lsls	r2, r2, #3
9001c634:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001c638:	b2d2      	uxtb	r2, r2
9001c63a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001c63e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001c642:	fb14 f40c 	smulbb	r4, r4, ip
9001c646:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001c64a:	fb12 f20c 	smulbb	r2, r2, ip
9001c64e:	fb16 f60c 	smulbb	r6, r6, ip
9001c652:	4474      	add	r4, lr
9001c654:	441a      	add	r2, r3
9001c656:	b2a4      	uxth	r4, r4
9001c658:	443e      	add	r6, r7
9001c65a:	b292      	uxth	r2, r2
9001c65c:	f104 0a01 	add.w	sl, r4, #1
9001c660:	b2b6      	uxth	r6, r6
9001c662:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001c666:	f102 0a01 	add.w	sl, r2, #1
9001c66a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001c66e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
9001c672:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001c676:	4322      	orrs	r2, r4
9001c678:	1c74      	adds	r4, r6, #1
9001c67a:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001c67e:	0976      	lsrs	r6, r6, #5
9001c680:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001c684:	4332      	orrs	r2, r6
9001c686:	f821 2b02 	strh.w	r2, [r1], #2
9001c68a:	e7cb      	b.n	9001c624 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001c68c:	4441      	add	r1, r8
9001c68e:	e7c5      	b.n	9001c61c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001c690:	0973      	lsrs	r3, r6, #5
9001c692:	4f22      	ldr	r7, [pc, #136]	; (9001c71c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001c694:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c698:	ea08 0707 	and.w	r7, r8, r7
9001c69c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c6a0:	433b      	orrs	r3, r7
9001c6a2:	07e7      	lsls	r7, r4, #31
9001c6a4:	ea43 0306 	orr.w	r3, r3, r6
9001c6a8:	b29b      	uxth	r3, r3
9001c6aa:	d50b      	bpl.n	9001c6c4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001c6ac:	0040      	lsls	r0, r0, #1
9001c6ae:	0052      	lsls	r2, r2, #1
9001c6b0:	42a9      	cmp	r1, r5
9001c6b2:	d231      	bcs.n	9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c6b4:	180c      	adds	r4, r1, r0
9001c6b6:	42a1      	cmp	r1, r4
9001c6b8:	d202      	bcs.n	9001c6c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001c6ba:	f821 3b02 	strh.w	r3, [r1], #2
9001c6be:	e7fa      	b.n	9001c6b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001c6c0:	4411      	add	r1, r2
9001c6c2:	e7f5      	b.n	9001c6b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001c6c4:	078e      	lsls	r6, r1, #30
9001c6c6:	d008      	beq.n	9001c6da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001c6c8:	0066      	lsls	r6, r4, #1
9001c6ca:	460a      	mov	r2, r1
9001c6cc:	42aa      	cmp	r2, r5
9001c6ce:	d202      	bcs.n	9001c6d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001c6d0:	8013      	strh	r3, [r2, #0]
9001c6d2:	4432      	add	r2, r6
9001c6d4:	e7fa      	b.n	9001c6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001c6d6:	3102      	adds	r1, #2
9001c6d8:	3801      	subs	r0, #1
9001c6da:	07c2      	lsls	r2, r0, #31
9001c6dc:	d50b      	bpl.n	9001c6f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001c6de:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
9001c6e2:	0066      	lsls	r6, r4, #1
9001c6e4:	3a01      	subs	r2, #1
9001c6e6:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001c6ea:	42aa      	cmp	r2, r5
9001c6ec:	d202      	bcs.n	9001c6f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001c6ee:	8013      	strh	r3, [r2, #0]
9001c6f0:	4432      	add	r2, r6
9001c6f2:	e7fa      	b.n	9001c6ea <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001c6f4:	3801      	subs	r0, #1
9001c6f6:	b178      	cbz	r0, 9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c6f8:	1040      	asrs	r0, r0, #1
9001c6fa:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001c6fe:	0080      	lsls	r0, r0, #2
9001c700:	0064      	lsls	r4, r4, #1
9001c702:	42a9      	cmp	r1, r5
9001c704:	d208      	bcs.n	9001c718 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001c706:	180e      	adds	r6, r1, r0
9001c708:	460a      	mov	r2, r1
9001c70a:	42b2      	cmp	r2, r6
9001c70c:	d202      	bcs.n	9001c714 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001c70e:	f842 3b04 	str.w	r3, [r2], #4
9001c712:	e7fa      	b.n	9001c70a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001c714:	4421      	add	r1, r4
9001c716:	e7f4      	b.n	9001c702 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001c718:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c71c:	00fff800 	.word	0x00fff800

9001c720 <_ZN8touchgfx8LCD16bppC1Ev>:
9001c720:	2200      	movs	r2, #0
9001c722:	4912      	ldr	r1, [pc, #72]	; (9001c76c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001c724:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001c728:	6001      	str	r1, [r0, #0]
9001c72a:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001c72e:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001c732:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001c736:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
9001c73a:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
9001c73e:	e9c0 220d 	strd	r2, r2, [r0, #52]	; 0x34
9001c742:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
9001c746:	e9c0 2211 	strd	r2, r2, [r0, #68]	; 0x44
9001c74a:	e9c0 2213 	strd	r2, r2, [r0, #76]	; 0x4c
9001c74e:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
9001c752:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
9001c756:	e9c0 2219 	strd	r2, r2, [r0, #100]	; 0x64
9001c75a:	e9c0 221b 	strd	r2, r2, [r0, #108]	; 0x6c
9001c75e:	e9c0 221d 	strd	r2, r2, [r0, #116]	; 0x74
9001c762:	e9c0 221f 	strd	r2, r2, [r0, #124]	; 0x7c
9001c766:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
9001c76a:	4770      	bx	lr
9001c76c:	9002ab40 	.word	0x9002ab40

9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001c770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c774:	b08d      	sub	sp, #52	; 0x34
9001c776:	460d      	mov	r5, r1
9001c778:	4604      	mov	r4, r0
9001c77a:	4699      	mov	r9, r3
9001c77c:	6808      	ldr	r0, [r1, #0]
9001c77e:	ab08      	add	r3, sp, #32
9001c780:	6849      	ldr	r1, [r1, #4]
9001c782:	c303      	stmia	r3!, {r0, r1}
9001c784:	6810      	ldr	r0, [r2, #0]
9001c786:	ab0a      	add	r3, sp, #40	; 0x28
9001c788:	6851      	ldr	r1, [r2, #4]
9001c78a:	c303      	stmia	r3!, {r0, r1}
9001c78c:	a808      	add	r0, sp, #32
9001c78e:	f7f8 fa0d 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c792:	4629      	mov	r1, r5
9001c794:	a80a      	add	r0, sp, #40	; 0x28
9001c796:	4d67      	ldr	r5, [pc, #412]	; (9001c934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c798:	f7f8 fa4c 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c79c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
9001c7a0:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
9001c7a4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
9001c7a8:	6828      	ldr	r0, [r5, #0]
9001c7aa:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c7ae:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
9001c7b2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
9001c7b6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c7ba:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001c7be:	440a      	add	r2, r1
9001c7c0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
9001c7c4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
9001c7c8:	4413      	add	r3, r2
9001c7ca:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
9001c7ce:	6803      	ldr	r3, [r0, #0]
9001c7d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001c7d2:	4798      	blx	r3
9001c7d4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c7d8:	d119      	bne.n	9001c80e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001c7da:	f010 0f20 	tst.w	r0, #32
9001c7de:	6828      	ldr	r0, [r5, #0]
9001c7e0:	d018      	beq.n	9001c814 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001c7e2:	2500      	movs	r5, #0
9001c7e4:	6801      	ldr	r1, [r0, #0]
9001c7e6:	b2b6      	uxth	r6, r6
9001c7e8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
9001c7ec:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
9001c7f0:	9601      	str	r6, [sp, #4]
9001c7f2:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001c7f6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
9001c7fa:	9502      	str	r5, [sp, #8]
9001c7fc:	fa1f f588 	uxth.w	r5, r8
9001c800:	9500      	str	r5, [sp, #0]
9001c802:	6d0d      	ldr	r5, [r1, #80]	; 0x50
9001c804:	4621      	mov	r1, r4
9001c806:	47a8      	blx	r5
9001c808:	b00d      	add	sp, #52	; 0x34
9001c80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c80e:	f010 0f40 	tst.w	r0, #64	; 0x40
9001c812:	e7e4      	b.n	9001c7de <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001c814:	6803      	ldr	r3, [r0, #0]
9001c816:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c818:	4798      	blx	r3
9001c81a:	4947      	ldr	r1, [pc, #284]	; (9001c938 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001c81c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
9001c820:	880b      	ldrh	r3, [r1, #0]
9001c822:	468a      	mov	sl, r1
9001c824:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
9001c828:	fb03 5202 	mla	r2, r3, r2, r5
9001c82c:	4373      	muls	r3, r6
9001c82e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c832:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c836:	9307      	str	r3, [sp, #28]
9001c838:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001c83c:	9306      	str	r3, [sp, #24]
9001c83e:	9b07      	ldr	r3, [sp, #28]
9001c840:	4298      	cmp	r0, r3
9001c842:	d270      	bcs.n	9001c926 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001c844:	9b06      	ldr	r3, [sp, #24]
9001c846:	4621      	mov	r1, r4
9001c848:	eb00 0b03 	add.w	fp, r0, r3
9001c84c:	4558      	cmp	r0, fp
9001c84e:	d25d      	bcs.n	9001c90c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001c850:	f851 4b04 	ldr.w	r4, [r1], #4
9001c854:	0e23      	lsrs	r3, r4, #24
9001c856:	d014      	beq.n	9001c882 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c858:	2bff      	cmp	r3, #255	; 0xff
9001c85a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001c85e:	d112      	bne.n	9001c886 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c860:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9001c864:	d10f      	bne.n	9001c886 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001c866:	0963      	lsrs	r3, r4, #5
9001c868:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
9001c86c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001c870:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001c874:	f02c 0c07 	bic.w	ip, ip, #7
9001c878:	ea43 0c0c 	orr.w	ip, r3, ip
9001c87c:	ea4c 0404 	orr.w	r4, ip, r4
9001c880:	8004      	strh	r4, [r0, #0]
9001c882:	3002      	adds	r0, #2
9001c884:	e7e2      	b.n	9001c84c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001c886:	fb09 f303 	mul.w	r3, r9, r3
9001c88a:	8807      	ldrh	r7, [r0, #0]
9001c88c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001c890:	fa5f fc8c 	uxtb.w	ip, ip
9001c894:	1c5a      	adds	r2, r3, #1
9001c896:	123e      	asrs	r6, r7, #8
9001c898:	10fd      	asrs	r5, r7, #3
9001c89a:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001c89e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001c8a2:	00ff      	lsls	r7, r7, #3
9001c8a4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001c8a8:	1212      	asrs	r2, r2, #8
9001c8aa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001c8ae:	b293      	uxth	r3, r2
9001c8b0:	43d2      	mvns	r2, r2
9001c8b2:	b2ff      	uxtb	r7, r7
9001c8b4:	fb1e fe03 	smulbb	lr, lr, r3
9001c8b8:	b2d2      	uxtb	r2, r2
9001c8ba:	fb1c fc03 	smulbb	ip, ip, r3
9001c8be:	b2e4      	uxtb	r4, r4
9001c8c0:	fb06 e602 	mla	r6, r6, r2, lr
9001c8c4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001c8c8:	fb14 f403 	smulbb	r4, r4, r3
9001c8cc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001c8d0:	b2b6      	uxth	r6, r6
9001c8d2:	fb05 c502 	mla	r5, r5, r2, ip
9001c8d6:	fb07 4702 	mla	r7, r7, r2, r4
9001c8da:	f106 0e01 	add.w	lr, r6, #1
9001c8de:	b2ad      	uxth	r5, r5
9001c8e0:	b2bf      	uxth	r7, r7
9001c8e2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001c8e6:	f105 0c01 	add.w	ip, r5, #1
9001c8ea:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
9001c8ee:	1c7e      	adds	r6, r7, #1
9001c8f0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001c8f4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001c8f8:	096d      	lsrs	r5, r5, #5
9001c8fa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c8fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001c902:	ea46 060e 	orr.w	r6, r6, lr
9001c906:	432e      	orrs	r6, r5
9001c908:	8006      	strh	r6, [r0, #0]
9001c90a:	e7ba      	b.n	9001c882 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001c90c:	f8ba 3000 	ldrh.w	r3, [sl]
9001c910:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
9001c914:	eba3 0308 	sub.w	r3, r3, r8
9001c918:	eba4 0408 	sub.w	r4, r4, r8
9001c91c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001c920:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001c924:	e78b      	b.n	9001c83e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001c926:	4b03      	ldr	r3, [pc, #12]	; (9001c934 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001c928:	6818      	ldr	r0, [r3, #0]
9001c92a:	6803      	ldr	r3, [r0, #0]
9001c92c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001c92e:	4798      	blx	r3
9001c930:	e76a      	b.n	9001c808 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001c932:	bf00      	nop
9001c934:	2402357c 	.word	0x2402357c
9001c938:	24023576 	.word	0x24023576

9001c93c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001c93c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001c940:	b085      	sub	sp, #20
9001c942:	6810      	ldr	r0, [r2, #0]
9001c944:	460c      	mov	r4, r1
9001c946:	6851      	ldr	r1, [r2, #4]
9001c948:	466d      	mov	r5, sp
9001c94a:	4616      	mov	r6, r2
9001c94c:	c503      	stmia	r5!, {r0, r1}
9001c94e:	6818      	ldr	r0, [r3, #0]
9001c950:	6859      	ldr	r1, [r3, #4]
9001c952:	c503      	stmia	r5!, {r0, r1}
9001c954:	4668      	mov	r0, sp
9001c956:	4d2e      	ldr	r5, [pc, #184]	; (9001ca10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001c958:	f7f8 f928 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c95c:	4631      	mov	r1, r6
9001c95e:	a802      	add	r0, sp, #8
9001c960:	4e2c      	ldr	r6, [pc, #176]	; (9001ca14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001c962:	f7f8 f967 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c966:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001c96a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001c96e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001c972:	6828      	ldr	r0, [r5, #0]
9001c974:	fb11 2103 	smlabb	r1, r1, r3, r2
9001c978:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001c97c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001c980:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001c984:	f8bd 1000 	ldrh.w	r1, [sp]
9001c988:	440a      	add	r2, r1
9001c98a:	f8ad 2008 	strh.w	r2, [sp, #8]
9001c98e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c992:	4413      	add	r3, r2
9001c994:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c998:	6803      	ldr	r3, [r0, #0]
9001c99a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001c99c:	4798      	blx	r3
9001c99e:	8833      	ldrh	r3, [r6, #0]
9001c9a0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001c9a4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001c9a8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c9ac:	f8df e068 	ldr.w	lr, [pc, #104]	; 9001ca18 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001c9b0:	fb03 1202 	mla	r2, r3, r2, r1
9001c9b4:	fb08 f303 	mul.w	r3, r8, r3
9001c9b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c9bc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001c9c0:	4298      	cmp	r0, r3
9001c9c2:	d21d      	bcs.n	9001ca00 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001c9c4:	eb00 080c 	add.w	r8, r0, ip
9001c9c8:	4540      	cmp	r0, r8
9001c9ca:	d20f      	bcs.n	9001c9ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001c9cc:	f854 1b04 	ldr.w	r1, [r4], #4
9001c9d0:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001c9d4:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001c9d8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001c9dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001c9e0:	ea42 0209 	orr.w	r2, r2, r9
9001c9e4:	430a      	orrs	r2, r1
9001c9e6:	f820 2b02 	strh.w	r2, [r0], #2
9001c9ea:	e7ed      	b.n	9001c9c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001c9ec:	8832      	ldrh	r2, [r6, #0]
9001c9ee:	1bd2      	subs	r2, r2, r7
9001c9f0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001c9f4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001c9f8:	1bd2      	subs	r2, r2, r7
9001c9fa:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001c9fe:	e7df      	b.n	9001c9c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001ca00:	6828      	ldr	r0, [r5, #0]
9001ca02:	6803      	ldr	r3, [r0, #0]
9001ca04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ca06:	4798      	blx	r3
9001ca08:	b005      	add	sp, #20
9001ca0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001ca0e:	bf00      	nop
9001ca10:	2402357c 	.word	0x2402357c
9001ca14:	24023576 	.word	0x24023576
9001ca18:	fffff800 	.word	0xfffff800

9001ca1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001ca1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ca20:	b08e      	sub	sp, #56	; 0x38
9001ca22:	460e      	mov	r6, r1
9001ca24:	4604      	mov	r4, r0
9001ca26:	461d      	mov	r5, r3
9001ca28:	6808      	ldr	r0, [r1, #0]
9001ca2a:	ab0a      	add	r3, sp, #40	; 0x28
9001ca2c:	6849      	ldr	r1, [r1, #4]
9001ca2e:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 9001cc04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001ca32:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 9001cc08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001ca36:	c303      	stmia	r3!, {r0, r1}
9001ca38:	6810      	ldr	r0, [r2, #0]
9001ca3a:	ab0c      	add	r3, sp, #48	; 0x30
9001ca3c:	6851      	ldr	r1, [r2, #4]
9001ca3e:	c303      	stmia	r3!, {r0, r1}
9001ca40:	a80a      	add	r0, sp, #40	; 0x28
9001ca42:	f7f8 f8b3 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ca46:	4631      	mov	r1, r6
9001ca48:	a80c      	add	r0, sp, #48	; 0x30
9001ca4a:	f7f8 f8f3 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ca4e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
9001ca52:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
9001ca56:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001ca5a:	f8d8 0000 	ldr.w	r0, [r8]
9001ca5e:	fb11 2103 	smlabb	r1, r1, r3, r2
9001ca62:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
9001ca66:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
9001ca6a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001ca6e:	440c      	add	r4, r1
9001ca70:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
9001ca74:	440a      	add	r2, r1
9001ca76:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9001ca7a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
9001ca7e:	4413      	add	r3, r2
9001ca80:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
9001ca84:	6803      	ldr	r3, [r0, #0]
9001ca86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ca88:	4798      	blx	r3
9001ca8a:	2dff      	cmp	r5, #255	; 0xff
9001ca8c:	d124      	bne.n	9001cad8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001ca8e:	f010 0f01 	tst.w	r0, #1
9001ca92:	f8d8 0000 	ldr.w	r0, [r8]
9001ca96:	d022      	beq.n	9001cade <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001ca98:	2100      	movs	r1, #0
9001ca9a:	f04f 0e01 	mov.w	lr, #1
9001ca9e:	f8d0 c000 	ldr.w	ip, [r0]
9001caa2:	b2b6      	uxth	r6, r6
9001caa4:	f8cd e018 	str.w	lr, [sp, #24]
9001caa8:	b2bf      	uxth	r7, r7
9001caaa:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
9001caae:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
9001cab2:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001cab6:	f8b9 e000 	ldrh.w	lr, [r9]
9001caba:	9503      	str	r5, [sp, #12]
9001cabc:	9601      	str	r6, [sp, #4]
9001cabe:	9700      	str	r7, [sp, #0]
9001cac0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001cac4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
9001cac8:	9102      	str	r1, [sp, #8]
9001caca:	4621      	mov	r1, r4
9001cacc:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
9001cad0:	47a8      	blx	r5
9001cad2:	b00e      	add	sp, #56	; 0x38
9001cad4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001cad8:	f010 0f04 	tst.w	r0, #4
9001cadc:	e7d9      	b.n	9001ca92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001cade:	6803      	ldr	r3, [r0, #0]
9001cae0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cae2:	4798      	blx	r3
9001cae4:	f8b9 3000 	ldrh.w	r3, [r9]
9001cae8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
9001caec:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001caf0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
9001caf4:	435e      	muls	r6, r3
9001caf6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
9001cafa:	2dff      	cmp	r5, #255	; 0xff
9001cafc:	fb03 1202 	mla	r2, r3, r2, r1
9001cb00:	ebac 0c07 	sub.w	ip, ip, r7
9001cb04:	eba3 0707 	sub.w	r7, r3, r7
9001cb08:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cb0c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001cb10:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001cb14:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001cb18:	d049      	beq.n	9001cbae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001cb1a:	43eb      	mvns	r3, r5
9001cb1c:	fa1f f985 	uxth.w	r9, r5
9001cb20:	b2db      	uxtb	r3, r3
9001cb22:	42b0      	cmp	r0, r6
9001cb24:	d266      	bcs.n	9001cbf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cb26:	eb00 0a0e 	add.w	sl, r0, lr
9001cb2a:	4550      	cmp	r0, sl
9001cb2c:	4621      	mov	r1, r4
9001cb2e:	f104 0403 	add.w	r4, r4, #3
9001cb32:	d25b      	bcs.n	9001cbec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001cb34:	8802      	ldrh	r2, [r0, #0]
9001cb36:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cb3a:	ea4f 2822 	mov.w	r8, r2, asr #8
9001cb3e:	fb11 f109 	smulbb	r1, r1, r9
9001cb42:	10d5      	asrs	r5, r2, #3
9001cb44:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
9001cb48:	00d2      	lsls	r2, r2, #3
9001cb4a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001cb4e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001cb52:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001cb56:	fb08 1803 	mla	r8, r8, r3, r1
9001cb5a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001cb5e:	b2d2      	uxtb	r2, r2
9001cb60:	fb11 f109 	smulbb	r1, r1, r9
9001cb64:	fa1f f888 	uxth.w	r8, r8
9001cb68:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001cb6c:	fb05 1503 	mla	r5, r5, r3, r1
9001cb70:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cb74:	fb11 f109 	smulbb	r1, r1, r9
9001cb78:	b2ad      	uxth	r5, r5
9001cb7a:	fb02 1203 	mla	r2, r2, r3, r1
9001cb7e:	f108 0101 	add.w	r1, r8, #1
9001cb82:	b292      	uxth	r2, r2
9001cb84:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001cb88:	1c51      	adds	r1, r2, #1
9001cb8a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
9001cb8e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001cb92:	1c69      	adds	r1, r5, #1
9001cb94:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001cb98:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001cb9c:	096d      	lsrs	r5, r5, #5
9001cb9e:	ea42 0208 	orr.w	r2, r2, r8
9001cba2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001cba6:	432a      	orrs	r2, r5
9001cba8:	f820 2b02 	strh.w	r2, [r0], #2
9001cbac:	e7bd      	b.n	9001cb2a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001cbae:	4a14      	ldr	r2, [pc, #80]	; (9001cc00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001cbb0:	42b0      	cmp	r0, r6
9001cbb2:	d21f      	bcs.n	9001cbf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001cbb4:	eb00 050e 	add.w	r5, r0, lr
9001cbb8:	42a8      	cmp	r0, r5
9001cbba:	4621      	mov	r1, r4
9001cbbc:	f104 0403 	add.w	r4, r4, #3
9001cbc0:	d210      	bcs.n	9001cbe4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001cbc2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001cbc6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001cbca:	00db      	lsls	r3, r3, #3
9001cbcc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001cbd0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cbd4:	430b      	orrs	r3, r1
9001cbd6:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001cbda:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001cbde:	f820 3b02 	strh.w	r3, [r0], #2
9001cbe2:	e7e9      	b.n	9001cbb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001cbe4:	4438      	add	r0, r7
9001cbe6:	eb01 040c 	add.w	r4, r1, ip
9001cbea:	e7e1      	b.n	9001cbb0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001cbec:	4438      	add	r0, r7
9001cbee:	eb01 040c 	add.w	r4, r1, ip
9001cbf2:	e796      	b.n	9001cb22 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001cbf4:	4b03      	ldr	r3, [pc, #12]	; (9001cc04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001cbf6:	6818      	ldr	r0, [r3, #0]
9001cbf8:	6803      	ldr	r3, [r0, #0]
9001cbfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cbfc:	4798      	blx	r3
9001cbfe:	e768      	b.n	9001cad2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001cc00:	fffff800 	.word	0xfffff800
9001cc04:	2402357c 	.word	0x2402357c
9001cc08:	24023576 	.word	0x24023576

9001cc0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001cc0c:	b4f0      	push	{r4, r5, r6, r7}
9001cc0e:	4616      	mov	r6, r2
9001cc10:	461c      	mov	r4, r3
9001cc12:	460d      	mov	r5, r1
9001cc14:	9a04      	ldr	r2, [sp, #16]
9001cc16:	2e01      	cmp	r6, #1
9001cc18:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001cc1c:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001cc20:	d012      	beq.n	9001cc48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001cc22:	d303      	bcc.n	9001cc2c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001cc24:	2e02      	cmp	r6, #2
9001cc26:	d00a      	beq.n	9001cc3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001cc28:	bcf0      	pop	{r4, r5, r6, r7}
9001cc2a:	4770      	bx	lr
9001cc2c:	6805      	ldr	r5, [r0, #0]
9001cc2e:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001cc32:	68ed      	ldr	r5, [r5, #12]
9001cc34:	4613      	mov	r3, r2
9001cc36:	4622      	mov	r2, r4
9001cc38:	46ac      	mov	ip, r5
9001cc3a:	bcf0      	pop	{r4, r5, r6, r7}
9001cc3c:	4760      	bx	ip
9001cc3e:	4621      	mov	r1, r4
9001cc40:	4628      	mov	r0, r5
9001cc42:	bcf0      	pop	{r4, r5, r6, r7}
9001cc44:	f7ff bd94 	b.w	9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001cc48:	4621      	mov	r1, r4
9001cc4a:	4628      	mov	r0, r5
9001cc4c:	bcf0      	pop	{r4, r5, r6, r7}
9001cc4e:	f7ff bee5 	b.w	9001ca1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001cc54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001cc54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cc58:	b093      	sub	sp, #76	; 0x4c
9001cc5a:	4681      	mov	r9, r0
9001cc5c:	4688      	mov	r8, r1
9001cc5e:	6810      	ldr	r0, [r2, #0]
9001cc60:	6851      	ldr	r1, [r2, #4]
9001cc62:	ac0e      	add	r4, sp, #56	; 0x38
9001cc64:	4616      	mov	r6, r2
9001cc66:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
9001cc6a:	4f6b      	ldr	r7, [pc, #428]	; (9001ce18 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001cc6c:	c403      	stmia	r4!, {r0, r1}
9001cc6e:	6818      	ldr	r0, [r3, #0]
9001cc70:	ac10      	add	r4, sp, #64	; 0x40
9001cc72:	6859      	ldr	r1, [r3, #4]
9001cc74:	c403      	stmia	r4!, {r0, r1}
9001cc76:	a80e      	add	r0, sp, #56	; 0x38
9001cc78:	f7f7 ff98 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cc7c:	4631      	mov	r1, r6
9001cc7e:	a810      	add	r0, sp, #64	; 0x40
9001cc80:	4e66      	ldr	r6, [pc, #408]	; (9001ce1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001cc82:	f7f7 ffd7 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cc86:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
9001cc8a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
9001cc8e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
9001cc92:	6830      	ldr	r0, [r6, #0]
9001cc94:	fb11 2103 	smlabb	r1, r1, r3, r2
9001cc98:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
9001cc9c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
9001cca0:	4489      	add	r9, r1
9001cca2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
9001cca6:	440a      	add	r2, r1
9001cca8:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
9001ccac:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001ccb0:	4413      	add	r3, r2
9001ccb2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
9001ccb6:	6803      	ldr	r3, [r0, #0]
9001ccb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001ccba:	4798      	blx	r3
9001ccbc:	f010 0f80 	tst.w	r0, #128	; 0x80
9001ccc0:	6830      	ldr	r0, [r6, #0]
9001ccc2:	d01d      	beq.n	9001cd00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001ccc4:	2200      	movs	r2, #0
9001ccc6:	6801      	ldr	r1, [r0, #0]
9001ccc8:	b2a4      	uxth	r4, r4
9001ccca:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
9001ccce:	b2ad      	uxth	r5, r5
9001ccd0:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001ccd4:	220b      	movs	r2, #11
9001ccd6:	9207      	str	r2, [sp, #28]
9001ccd8:	883a      	ldrh	r2, [r7, #0]
9001ccda:	9502      	str	r5, [sp, #8]
9001ccdc:	9206      	str	r2, [sp, #24]
9001ccde:	2201      	movs	r2, #1
9001cce0:	9401      	str	r4, [sp, #4]
9001cce2:	e9cd a204 	strd	sl, r2, [sp, #16]
9001cce6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
9001ccea:	9203      	str	r2, [sp, #12]
9001ccec:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
9001ccf0:	9200      	str	r2, [sp, #0]
9001ccf2:	4642      	mov	r2, r8
9001ccf4:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
9001ccf6:	4649      	mov	r1, r9
9001ccf8:	47a0      	blx	r4
9001ccfa:	b013      	add	sp, #76	; 0x4c
9001ccfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cd00:	6803      	ldr	r3, [r0, #0]
9001cd02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001cd04:	4798      	blx	r3
9001cd06:	883b      	ldrh	r3, [r7, #0]
9001cd08:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
9001cd0c:	f04f 0e04 	mov.w	lr, #4
9001cd10:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
9001cd14:	435d      	muls	r5, r3
9001cd16:	fb03 1202 	mla	r2, r3, r2, r1
9001cd1a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001cd1e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001cd22:	920c      	str	r2, [sp, #48]	; 0x30
9001cd24:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
9001cd28:	1b12      	subs	r2, r2, r4
9001cd2a:	920d      	str	r2, [sp, #52]	; 0x34
9001cd2c:	0062      	lsls	r2, r4, #1
9001cd2e:	1b1c      	subs	r4, r3, r4
9001cd30:	920a      	str	r2, [sp, #40]	; 0x28
9001cd32:	0063      	lsls	r3, r4, #1
9001cd34:	930b      	str	r3, [sp, #44]	; 0x2c
9001cd36:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001cd38:	4298      	cmp	r0, r3
9001cd3a:	d266      	bcs.n	9001ce0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001cd3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001cd3e:	eb00 0b03 	add.w	fp, r0, r3
9001cd42:	4558      	cmp	r0, fp
9001cd44:	d25c      	bcs.n	9001ce00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001cd46:	f819 3b01 	ldrb.w	r3, [r9], #1
9001cd4a:	fb1e e303 	smlabb	r3, lr, r3, lr
9001cd4e:	f858 2003 	ldr.w	r2, [r8, r3]
9001cd52:	0e11      	lsrs	r1, r2, #24
9001cd54:	d012      	beq.n	9001cd7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001cd56:	29ff      	cmp	r1, #255	; 0xff
9001cd58:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001cd5c:	d110      	bne.n	9001cd80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cd5e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001cd62:	d10d      	bne.n	9001cd80 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001cd64:	0953      	lsrs	r3, r2, #5
9001cd66:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
9001cd6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001cd6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001cd72:	f027 0707 	bic.w	r7, r7, #7
9001cd76:	431f      	orrs	r7, r3
9001cd78:	433a      	orrs	r2, r7
9001cd7a:	8002      	strh	r2, [r0, #0]
9001cd7c:	3002      	adds	r0, #2
9001cd7e:	e7e0      	b.n	9001cd42 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001cd80:	fb0a f101 	mul.w	r1, sl, r1
9001cd84:	8806      	ldrh	r6, [r0, #0]
9001cd86:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001cd8a:	b2d2      	uxtb	r2, r2
9001cd8c:	1c4b      	adds	r3, r1, #1
9001cd8e:	1235      	asrs	r5, r6, #8
9001cd90:	10f4      	asrs	r4, r6, #3
9001cd92:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001cd96:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001cd9a:	00f6      	lsls	r6, r6, #3
9001cd9c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9001cda0:	121b      	asrs	r3, r3, #8
9001cda2:	b2f6      	uxtb	r6, r6
9001cda4:	b299      	uxth	r1, r3
9001cda6:	43db      	mvns	r3, r3
9001cda8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001cdac:	fb1c fc01 	smulbb	ip, ip, r1
9001cdb0:	b2db      	uxtb	r3, r3
9001cdb2:	fb12 f201 	smulbb	r2, r2, r1
9001cdb6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001cdba:	fb05 c503 	mla	r5, r5, r3, ip
9001cdbe:	b2ff      	uxtb	r7, r7
9001cdc0:	fb06 2203 	mla	r2, r6, r3, r2
9001cdc4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001cdc8:	fb17 f701 	smulbb	r7, r7, r1
9001cdcc:	b2ad      	uxth	r5, r5
9001cdce:	b292      	uxth	r2, r2
9001cdd0:	fb04 7403 	mla	r4, r4, r3, r7
9001cdd4:	f105 0c01 	add.w	ip, r5, #1
9001cdd8:	1c57      	adds	r7, r2, #1
9001cdda:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001cdde:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001cde2:	b2a4      	uxth	r4, r4
9001cde4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001cde8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001cdec:	433d      	orrs	r5, r7
9001cdee:	1c67      	adds	r7, r4, #1
9001cdf0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001cdf4:	0964      	lsrs	r4, r4, #5
9001cdf6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001cdfa:	4325      	orrs	r5, r4
9001cdfc:	8005      	strh	r5, [r0, #0]
9001cdfe:	e7bd      	b.n	9001cd7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001ce00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ce02:	4418      	add	r0, r3
9001ce04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001ce06:	4499      	add	r9, r3
9001ce08:	e795      	b.n	9001cd36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001ce0a:	4b04      	ldr	r3, [pc, #16]	; (9001ce1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001ce0c:	6818      	ldr	r0, [r3, #0]
9001ce0e:	6803      	ldr	r3, [r0, #0]
9001ce10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001ce12:	4798      	blx	r3
9001ce14:	e771      	b.n	9001ccfa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001ce16:	bf00      	nop
9001ce18:	24023576 	.word	0x24023576
9001ce1c:	2402357c 	.word	0x2402357c

9001ce20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001ce20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ce24:	b087      	sub	sp, #28
9001ce26:	4680      	mov	r8, r0
9001ce28:	460d      	mov	r5, r1
9001ce2a:	4614      	mov	r4, r2
9001ce2c:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
9001ce30:	2e00      	cmp	r6, #0
9001ce32:	f000 80b9 	beq.w	9001cfa8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001ce36:	6810      	ldr	r0, [r2, #0]
9001ce38:	af02      	add	r7, sp, #8
9001ce3a:	6851      	ldr	r1, [r2, #4]
9001ce3c:	c703      	stmia	r7!, {r0, r1}
9001ce3e:	6818      	ldr	r0, [r3, #0]
9001ce40:	af04      	add	r7, sp, #16
9001ce42:	6859      	ldr	r1, [r3, #4]
9001ce44:	c703      	stmia	r7!, {r0, r1}
9001ce46:	a802      	add	r0, sp, #8
9001ce48:	f7f7 feb0 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ce4c:	4621      	mov	r1, r4
9001ce4e:	a804      	add	r0, sp, #16
9001ce50:	f7f7 fef0 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ce54:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001ce58:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ce5c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001ce60:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001ce64:	fb14 2103 	smlabb	r1, r4, r3, r2
9001ce68:	eb08 0401 	add.w	r4, r8, r1
9001ce6c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001ce70:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001ce74:	440a      	add	r2, r1
9001ce76:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001ce7a:	f8ad 2010 	strh.w	r2, [sp, #16]
9001ce7e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001ce82:	4413      	add	r3, r2
9001ce84:	f8ad 3012 	strh.w	r3, [sp, #18]
9001ce88:	4b49      	ldr	r3, [pc, #292]	; (9001cfb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001ce8a:	6818      	ldr	r0, [r3, #0]
9001ce8c:	6803      	ldr	r3, [r0, #0]
9001ce8e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001ce90:	4798      	blx	r3
9001ce92:	4b48      	ldr	r3, [pc, #288]	; (9001cfb4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001ce94:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001ce98:	2eff      	cmp	r6, #255	; 0xff
9001ce9a:	881a      	ldrh	r2, [r3, #0]
9001ce9c:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001cea0:	fb02 c101 	mla	r1, r2, r1, ip
9001cea4:	fb02 f207 	mul.w	r2, r2, r7
9001cea8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001ceac:	f105 0104 	add.w	r1, r5, #4
9001ceb0:	461d      	mov	r5, r3
9001ceb2:	d05a      	beq.n	9001cf6a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001ceb4:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
9001ceb8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cebc:	b2b6      	uxth	r6, r6
9001cebe:	9301      	str	r3, [sp, #4]
9001cec0:	fa1f fe8e 	uxth.w	lr, lr
9001cec4:	4282      	cmp	r2, r0
9001cec6:	d96a      	bls.n	9001cf9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001cec8:	eb00 0b0a 	add.w	fp, r0, sl
9001cecc:	4583      	cmp	fp, r0
9001cece:	d940      	bls.n	9001cf52 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001ced0:	8805      	ldrh	r5, [r0, #0]
9001ced2:	f814 3b01 	ldrb.w	r3, [r4], #1
9001ced6:	122f      	asrs	r7, r5, #8
9001ced8:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001cedc:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001cee0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001cee4:	00ed      	lsls	r5, r5, #3
9001cee6:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001ceea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
9001ceee:	fb17 f70e 	smulbb	r7, r7, lr
9001cef2:	b2ed      	uxtb	r5, r5
9001cef4:	fb19 f90e 	smulbb	r9, r9, lr
9001cef8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001cefc:	fb15 f50e 	smulbb	r5, r5, lr
9001cf00:	fb0c 7c06 	mla	ip, ip, r6, r7
9001cf04:	10df      	asrs	r7, r3, #3
9001cf06:	00db      	lsls	r3, r3, #3
9001cf08:	fa1f fc8c 	uxth.w	ip, ip
9001cf0c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001cf10:	b2db      	uxtb	r3, r3
9001cf12:	fb07 9706 	mla	r7, r7, r6, r9
9001cf16:	f10c 0901 	add.w	r9, ip, #1
9001cf1a:	fb03 5306 	mla	r3, r3, r6, r5
9001cf1e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001cf22:	b29b      	uxth	r3, r3
9001cf24:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
9001cf28:	b2bf      	uxth	r7, r7
9001cf2a:	f103 0c01 	add.w	ip, r3, #1
9001cf2e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001cf32:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001cf36:	ea4c 0c09 	orr.w	ip, ip, r9
9001cf3a:	f107 0901 	add.w	r9, r7, #1
9001cf3e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001cf42:	097f      	lsrs	r7, r7, #5
9001cf44:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9001cf48:	ea4c 0c07 	orr.w	ip, ip, r7
9001cf4c:	f820 cb02 	strh.w	ip, [r0], #2
9001cf50:	e7bc      	b.n	9001cecc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001cf52:	9b01      	ldr	r3, [sp, #4]
9001cf54:	881b      	ldrh	r3, [r3, #0]
9001cf56:	eba3 0308 	sub.w	r3, r3, r8
9001cf5a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cf5e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001cf62:	eba3 0308 	sub.w	r3, r3, r8
9001cf66:	441c      	add	r4, r3
9001cf68:	e7ac      	b.n	9001cec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001cf6a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001cf6e:	4282      	cmp	r2, r0
9001cf70:	d915      	bls.n	9001cf9e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001cf72:	eb00 060a 	add.w	r6, r0, sl
9001cf76:	4286      	cmp	r6, r0
9001cf78:	d906      	bls.n	9001cf88 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001cf7a:	f814 3b01 	ldrb.w	r3, [r4], #1
9001cf7e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001cf82:	f820 3b02 	strh.w	r3, [r0], #2
9001cf86:	e7f6      	b.n	9001cf76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001cf88:	882b      	ldrh	r3, [r5, #0]
9001cf8a:	eba3 0308 	sub.w	r3, r3, r8
9001cf8e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001cf92:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001cf96:	eba3 0308 	sub.w	r3, r3, r8
9001cf9a:	441c      	add	r4, r3
9001cf9c:	e7e7      	b.n	9001cf6e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001cf9e:	4b04      	ldr	r3, [pc, #16]	; (9001cfb0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001cfa0:	6818      	ldr	r0, [r3, #0]
9001cfa2:	6803      	ldr	r3, [r0, #0]
9001cfa4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001cfa6:	4798      	blx	r3
9001cfa8:	b007      	add	sp, #28
9001cfaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001cfae:	bf00      	nop
9001cfb0:	2402357c 	.word	0x2402357c
9001cfb4:	24023576 	.word	0x24023576

9001cfb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001cfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cfbc:	b091      	sub	sp, #68	; 0x44
9001cfbe:	4680      	mov	r8, r0
9001cfc0:	460f      	mov	r7, r1
9001cfc2:	4614      	mov	r4, r2
9001cfc4:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
9001cfc8:	2d00      	cmp	r5, #0
9001cfca:	d051      	beq.n	9001d070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001cfcc:	6810      	ldr	r0, [r2, #0]
9001cfce:	ae0c      	add	r6, sp, #48	; 0x30
9001cfd0:	6851      	ldr	r1, [r2, #4]
9001cfd2:	f8df 9200 	ldr.w	r9, [pc, #512]	; 9001d1d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001cfd6:	c603      	stmia	r6!, {r0, r1}
9001cfd8:	6818      	ldr	r0, [r3, #0]
9001cfda:	ae0e      	add	r6, sp, #56	; 0x38
9001cfdc:	6859      	ldr	r1, [r3, #4]
9001cfde:	c603      	stmia	r6!, {r0, r1}
9001cfe0:	a80c      	add	r0, sp, #48	; 0x30
9001cfe2:	f7f7 fde3 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cfe6:	4621      	mov	r1, r4
9001cfe8:	a80e      	add	r0, sp, #56	; 0x38
9001cfea:	f7f7 fe23 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cfee:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
9001cff2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001cff6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
9001cffa:	f8d9 0000 	ldr.w	r0, [r9]
9001cffe:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d002:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
9001d006:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
9001d00a:	eb08 0401 	add.w	r4, r8, r1
9001d00e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
9001d012:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 9001d1d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001d016:	440a      	add	r2, r1
9001d018:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
9001d01c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
9001d020:	4413      	add	r3, r2
9001d022:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
9001d026:	6803      	ldr	r3, [r0, #0]
9001d028:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d02a:	4798      	blx	r3
9001d02c:	f010 0f80 	tst.w	r0, #128	; 0x80
9001d030:	f8d9 0000 	ldr.w	r0, [r9]
9001d034:	d01f      	beq.n	9001d076 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001d036:	2200      	movs	r2, #0
9001d038:	6801      	ldr	r1, [r0, #0]
9001d03a:	b2b6      	uxth	r6, r6
9001d03c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
9001d040:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001d044:	220b      	movs	r2, #11
9001d046:	9207      	str	r2, [sp, #28]
9001d048:	f8b8 2000 	ldrh.w	r2, [r8]
9001d04c:	9601      	str	r6, [sp, #4]
9001d04e:	9206      	str	r2, [sp, #24]
9001d050:	2201      	movs	r2, #1
9001d052:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001d056:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
9001d05a:	9203      	str	r2, [sp, #12]
9001d05c:	fa1f f28a 	uxth.w	r2, sl
9001d060:	9202      	str	r2, [sp, #8]
9001d062:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
9001d066:	9200      	str	r2, [sp, #0]
9001d068:	463a      	mov	r2, r7
9001d06a:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
9001d06c:	4621      	mov	r1, r4
9001d06e:	47a8      	blx	r5
9001d070:	b011      	add	sp, #68	; 0x44
9001d072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d076:	6803      	ldr	r3, [r0, #0]
9001d078:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001d07c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d07e:	4798      	blx	r3
9001d080:	f8b8 2000 	ldrh.w	r2, [r8]
9001d084:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
9001d088:	2dff      	cmp	r5, #255	; 0xff
9001d08a:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
9001d08e:	fb0a fa02 	mul.w	sl, sl, r2
9001d092:	fb02 1303 	mla	r3, r2, r3, r1
9001d096:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d09a:	d062      	beq.n	9001d162 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001d09c:	ea6f 0c05 	mvn.w	ip, r5
9001d0a0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001d0a4:	b2ad      	uxth	r5, r5
9001d0a6:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
9001d0aa:	fa5f fc8c 	uxtb.w	ip, ip
9001d0ae:	930a      	str	r3, [sp, #40]	; 0x28
9001d0b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d0b2:	4298      	cmp	r0, r3
9001d0b4:	f080 8085 	bcs.w	9001d1c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d0b8:	eb00 0b09 	add.w	fp, r0, r9
9001d0bc:	4558      	cmp	r0, fp
9001d0be:	d246      	bcs.n	9001d14e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001d0c0:	f814 eb01 	ldrb.w	lr, [r4], #1
9001d0c4:	2303      	movs	r3, #3
9001d0c6:	2204      	movs	r2, #4
9001d0c8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001d0cc:	8803      	ldrh	r3, [r0, #0]
9001d0ce:	eb07 0a0e 	add.w	sl, r7, lr
9001d0d2:	1219      	asrs	r1, r3, #8
9001d0d4:	10da      	asrs	r2, r3, #3
9001d0d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d0da:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001d0de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001d0e2:	00db      	lsls	r3, r3, #3
9001d0e4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001d0e8:	fb18 f805 	smulbb	r8, r8, r5
9001d0ec:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001d0f0:	fb1e fe05 	smulbb	lr, lr, r5
9001d0f4:	b2db      	uxtb	r3, r3
9001d0f6:	fb01 810c 	mla	r1, r1, ip, r8
9001d0fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001d0fe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001d102:	fb18 f805 	smulbb	r8, r8, r5
9001d106:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001d10a:	b289      	uxth	r1, r1
9001d10c:	fb02 820c 	mla	r2, r2, ip, r8
9001d110:	fb03 e30c 	mla	r3, r3, ip, lr
9001d114:	f101 0801 	add.w	r8, r1, #1
9001d118:	b292      	uxth	r2, r2
9001d11a:	b29b      	uxth	r3, r3
9001d11c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001d120:	f102 0801 	add.w	r8, r2, #1
9001d124:	f103 0e01 	add.w	lr, r3, #1
9001d128:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001d12c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9001d130:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001d134:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001d138:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001d13c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
9001d140:	ea4e 0101 	orr.w	r1, lr, r1
9001d144:	ea41 0108 	orr.w	r1, r1, r8
9001d148:	f820 1b02 	strh.w	r1, [r0], #2
9001d14c:	e7b6      	b.n	9001d0bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001d14e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001d150:	881b      	ldrh	r3, [r3, #0]
9001d152:	1b9b      	subs	r3, r3, r6
9001d154:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d158:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d15c:	1b9b      	subs	r3, r3, r6
9001d15e:	441c      	add	r4, r3
9001d160:	e7a6      	b.n	9001d0b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001d162:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001d166:	2203      	movs	r2, #3
9001d168:	2504      	movs	r5, #4
9001d16a:	4919      	ldr	r1, [pc, #100]	; (9001d1d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001d16c:	4550      	cmp	r0, sl
9001d16e:	d228      	bcs.n	9001d1c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001d170:	eb00 0c09 	add.w	ip, r0, r9
9001d174:	4560      	cmp	r0, ip
9001d176:	4623      	mov	r3, r4
9001d178:	d219      	bcs.n	9001d1ae <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001d17a:	f893 e000 	ldrb.w	lr, [r3]
9001d17e:	3401      	adds	r4, #1
9001d180:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001d184:	eb07 0b0e 	add.w	fp, r7, lr
9001d188:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001d18c:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001d190:	f89b b001 	ldrb.w	fp, [fp, #1]
9001d194:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001d198:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001d19c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
9001d1a0:	ea43 030b 	orr.w	r3, r3, fp
9001d1a4:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001d1a8:	f820 3b02 	strh.w	r3, [r0], #2
9001d1ac:	e7e2      	b.n	9001d174 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001d1ae:	f8b8 3000 	ldrh.w	r3, [r8]
9001d1b2:	1b9b      	subs	r3, r3, r6
9001d1b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d1b8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
9001d1bc:	1b9b      	subs	r3, r3, r6
9001d1be:	441c      	add	r4, r3
9001d1c0:	e7d4      	b.n	9001d16c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001d1c2:	4b04      	ldr	r3, [pc, #16]	; (9001d1d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001d1c4:	6818      	ldr	r0, [r3, #0]
9001d1c6:	6803      	ldr	r3, [r0, #0]
9001d1c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d1ca:	4798      	blx	r3
9001d1cc:	e750      	b.n	9001d070 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001d1ce:	bf00      	nop
9001d1d0:	fffff800 	.word	0xfffff800
9001d1d4:	2402357c 	.word	0x2402357c
9001d1d8:	24023576 	.word	0x24023576

9001d1dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001d1dc:	b4f0      	push	{r4, r5, r6, r7}
9001d1de:	460c      	mov	r4, r1
9001d1e0:	4611      	mov	r1, r2
9001d1e2:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001d1e6:	461a      	mov	r2, r3
9001d1e8:	780f      	ldrb	r7, [r1, #0]
9001d1ea:	9b04      	ldr	r3, [sp, #16]
9001d1ec:	2f01      	cmp	r7, #1
9001d1ee:	784e      	ldrb	r6, [r1, #1]
9001d1f0:	d038      	beq.n	9001d264 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001d1f2:	d31f      	bcc.n	9001d234 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001d1f4:	2f02      	cmp	r7, #2
9001d1f6:	d14d      	bne.n	9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d1f8:	2e03      	cmp	r6, #3
9001d1fa:	d84b      	bhi.n	9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d1fc:	e8df f006 	tbb	[pc, r6]
9001d200:	17140702 	.word	0x17140702
9001d204:	9504      	str	r5, [sp, #16]
9001d206:	4620      	mov	r0, r4
9001d208:	bcf0      	pop	{r4, r5, r6, r7}
9001d20a:	f7ff be09 	b.w	9001ce20 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001d20e:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d210:	2800      	cmp	r0, #0
9001d212:	d03f      	beq.n	9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d214:	6806      	ldr	r6, [r0, #0]
9001d216:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d21a:	68b5      	ldr	r5, [r6, #8]
9001d21c:	4613      	mov	r3, r2
9001d21e:	46ac      	mov	ip, r5
9001d220:	460a      	mov	r2, r1
9001d222:	4621      	mov	r1, r4
9001d224:	bcf0      	pop	{r4, r5, r6, r7}
9001d226:	4760      	bx	ip
9001d228:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d22c:	e7f0      	b.n	9001d210 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d22e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d232:	e7ed      	b.n	9001d210 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001d234:	2e03      	cmp	r6, #3
9001d236:	d82d      	bhi.n	9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d238:	e8df f006 	tbb	[pc, r6]
9001d23c:	110e0702 	.word	0x110e0702
9001d240:	9504      	str	r5, [sp, #16]
9001d242:	4620      	mov	r0, r4
9001d244:	bcf0      	pop	{r4, r5, r6, r7}
9001d246:	f7ff bd05 	b.w	9001cc54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001d24a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d24c:	b310      	cbz	r0, 9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d24e:	6806      	ldr	r6, [r0, #0]
9001d250:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d254:	68f5      	ldr	r5, [r6, #12]
9001d256:	e7e1      	b.n	9001d21c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d258:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d25c:	e7f6      	b.n	9001d24c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d25e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d262:	e7f3      	b.n	9001d24c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001d264:	2e03      	cmp	r6, #3
9001d266:	d815      	bhi.n	9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d268:	e8df f006 	tbb	[pc, r6]
9001d26c:	110e0702 	.word	0x110e0702
9001d270:	9504      	str	r5, [sp, #16]
9001d272:	4620      	mov	r0, r4
9001d274:	bcf0      	pop	{r4, r5, r6, r7}
9001d276:	f7ff be9f 	b.w	9001cfb8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001d27a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
9001d27c:	b150      	cbz	r0, 9001d294 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001d27e:	6806      	ldr	r6, [r0, #0]
9001d280:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001d284:	6935      	ldr	r5, [r6, #16]
9001d286:	e7c9      	b.n	9001d21c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001d288:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
9001d28c:	e7f6      	b.n	9001d27c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d28e:	f8d0 0084 	ldr.w	r0, [r0, #132]	; 0x84
9001d292:	e7f3      	b.n	9001d27c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001d294:	bcf0      	pop	{r4, r5, r6, r7}
9001d296:	4770      	bx	lr

9001d298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001d298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d29c:	b087      	sub	sp, #28
9001d29e:	4604      	mov	r4, r0
9001d2a0:	460e      	mov	r6, r1
9001d2a2:	6810      	ldr	r0, [r2, #0]
9001d2a4:	6851      	ldr	r1, [r2, #4]
9001d2a6:	ad02      	add	r5, sp, #8
9001d2a8:	4617      	mov	r7, r2
9001d2aa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
9001d2ae:	f8df 9230 	ldr.w	r9, [pc, #560]	; 9001d4e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001d2b2:	c503      	stmia	r5!, {r0, r1}
9001d2b4:	6818      	ldr	r0, [r3, #0]
9001d2b6:	ad04      	add	r5, sp, #16
9001d2b8:	6859      	ldr	r1, [r3, #4]
9001d2ba:	c503      	stmia	r5!, {r0, r1}
9001d2bc:	a802      	add	r0, sp, #8
9001d2be:	f7f7 fc75 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d2c2:	4639      	mov	r1, r7
9001d2c4:	a804      	add	r0, sp, #16
9001d2c6:	f7f7 fcb5 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d2ca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d2ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d2d2:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001d2d6:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001d2da:	fb11 2103 	smlabb	r1, r1, r3, r2
9001d2de:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001d2e2:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001d2e6:	440e      	add	r6, r1
9001d2e8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001d2ec:	440a      	add	r2, r1
9001d2ee:	f8ad 2010 	strh.w	r2, [sp, #16]
9001d2f2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001d2f6:	4413      	add	r3, r2
9001d2f8:	f8ad 3012 	strh.w	r3, [sp, #18]
9001d2fc:	4b77      	ldr	r3, [pc, #476]	; (9001d4dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d2fe:	6818      	ldr	r0, [r3, #0]
9001d300:	6803      	ldr	r3, [r0, #0]
9001d302:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001d304:	4798      	blx	r3
9001d306:	f8b9 b000 	ldrh.w	fp, [r9]
9001d30a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d30e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
9001d312:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001d316:	fb05 f50b 	mul.w	r5, r5, fp
9001d31a:	fb0b 2303 	mla	r3, fp, r3, r2
9001d31e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d322:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001d326:	9300      	str	r3, [sp, #0]
9001d328:	d069      	beq.n	9001d3fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001d32a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001d32e:	4558      	cmp	r0, fp
9001d330:	f080 80cc 	bcs.w	9001d4cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d334:	9b00      	ldr	r3, [sp, #0]
9001d336:	4631      	mov	r1, r6
9001d338:	18c3      	adds	r3, r0, r3
9001d33a:	9301      	str	r3, [sp, #4]
9001d33c:	9b01      	ldr	r3, [sp, #4]
9001d33e:	4298      	cmp	r0, r3
9001d340:	d24f      	bcs.n	9001d3e2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001d342:	f811 2b01 	ldrb.w	r2, [r1], #1
9001d346:	2a00      	cmp	r2, #0
9001d348:	d048      	beq.n	9001d3dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d34a:	fb0a f202 	mul.w	r2, sl, r2
9001d34e:	1c53      	adds	r3, r2, #1
9001d350:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001d354:	121b      	asrs	r3, r3, #8
9001d356:	d041      	beq.n	9001d3dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001d358:	8802      	ldrh	r2, [r0, #0]
9001d35a:	b29e      	uxth	r6, r3
9001d35c:	f8b4 c000 	ldrh.w	ip, [r4]
9001d360:	43db      	mvns	r3, r3
9001d362:	1215      	asrs	r5, r2, #8
9001d364:	b2db      	uxtb	r3, r3
9001d366:	ea4f 272c 	mov.w	r7, ip, asr #8
9001d36a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001d36e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001d372:	fb15 f503 	smulbb	r5, r5, r3
9001d376:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
9001d37a:	00d2      	lsls	r2, r2, #3
9001d37c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001d380:	fb07 5706 	mla	r7, r7, r6, r5
9001d384:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001d388:	b2d2      	uxtb	r2, r2
9001d38a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d38e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
9001d392:	fb1e fe03 	smulbb	lr, lr, r3
9001d396:	b2bf      	uxth	r7, r7
9001d398:	fb12 f203 	smulbb	r2, r2, r3
9001d39c:	fa5f fc8c 	uxtb.w	ip, ip
9001d3a0:	fb05 e506 	mla	r5, r5, r6, lr
9001d3a4:	f107 0e01 	add.w	lr, r7, #1
9001d3a8:	fb0c 2c06 	mla	ip, ip, r6, r2
9001d3ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001d3b0:	fa1f fc8c 	uxth.w	ip, ip
9001d3b4:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
9001d3b8:	b2ad      	uxth	r5, r5
9001d3ba:	f10c 0701 	add.w	r7, ip, #1
9001d3be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001d3c2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001d3c6:	ea47 070e 	orr.w	r7, r7, lr
9001d3ca:	f105 0e01 	add.w	lr, r5, #1
9001d3ce:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001d3d2:	096d      	lsrs	r5, r5, #5
9001d3d4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001d3d8:	432f      	orrs	r7, r5
9001d3da:	8007      	strh	r7, [r0, #0]
9001d3dc:	3002      	adds	r0, #2
9001d3de:	3402      	adds	r4, #2
9001d3e0:	e7ac      	b.n	9001d33c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001d3e2:	f8b9 3000 	ldrh.w	r3, [r9]
9001d3e6:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d3ea:	eba3 0308 	sub.w	r3, r3, r8
9001d3ee:	eba6 0608 	sub.w	r6, r6, r8
9001d3f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d3f6:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d3fa:	440e      	add	r6, r1
9001d3fc:	e797      	b.n	9001d32e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001d3fe:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001d402:	42a8      	cmp	r0, r5
9001d404:	d262      	bcs.n	9001d4cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001d406:	9b00      	ldr	r3, [sp, #0]
9001d408:	4631      	mov	r1, r6
9001d40a:	eb00 0b03 	add.w	fp, r0, r3
9001d40e:	4558      	cmp	r0, fp
9001d410:	d24e      	bcs.n	9001d4b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001d412:	f811 3b01 	ldrb.w	r3, [r1], #1
9001d416:	b12b      	cbz	r3, 9001d424 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d418:	2bff      	cmp	r3, #255	; 0xff
9001d41a:	f8b4 e000 	ldrh.w	lr, [r4]
9001d41e:	d104      	bne.n	9001d42a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001d420:	f8a0 e000 	strh.w	lr, [r0]
9001d424:	3002      	adds	r0, #2
9001d426:	3402      	adds	r4, #2
9001d428:	e7f1      	b.n	9001d40e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001d42a:	8802      	ldrh	r2, [r0, #0]
9001d42c:	b29f      	uxth	r7, r3
9001d42e:	43db      	mvns	r3, r3
9001d430:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001d434:	1216      	asrs	r6, r2, #8
9001d436:	b2db      	uxtb	r3, r3
9001d438:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001d43c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
9001d440:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001d444:	00d2      	lsls	r2, r2, #3
9001d446:	fb16 f603 	smulbb	r6, r6, r3
9001d44a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
9001d44e:	b2d2      	uxtb	r2, r2
9001d450:	fb0c 6c07 	mla	ip, ip, r7, r6
9001d454:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001d458:	fb1a fa03 	smulbb	sl, sl, r3
9001d45c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001d460:	fa1f fc8c 	uxth.w	ip, ip
9001d464:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9001d468:	fb12 f303 	smulbb	r3, r2, r3
9001d46c:	fa5f fe8e 	uxtb.w	lr, lr
9001d470:	fb06 a607 	mla	r6, r6, r7, sl
9001d474:	f10c 0201 	add.w	r2, ip, #1
9001d478:	fb0e 3307 	mla	r3, lr, r7, r3
9001d47c:	b2b6      	uxth	r6, r6
9001d47e:	b29b      	uxth	r3, r3
9001d480:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001d484:	f106 0a01 	add.w	sl, r6, #1
9001d488:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
9001d48c:	f103 0c01 	add.w	ip, r3, #1
9001d490:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001d494:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001d498:	0976      	lsrs	r6, r6, #5
9001d49a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d49e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
9001d4a2:	ea4c 0c02 	orr.w	ip, ip, r2
9001d4a6:	ea4c 0c06 	orr.w	ip, ip, r6
9001d4aa:	f8a0 c000 	strh.w	ip, [r0]
9001d4ae:	e7b9      	b.n	9001d424 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001d4b0:	f8b9 3000 	ldrh.w	r3, [r9]
9001d4b4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001d4b8:	eba3 0308 	sub.w	r3, r3, r8
9001d4bc:	eba6 0608 	sub.w	r6, r6, r8
9001d4c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d4c4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001d4c8:	440e      	add	r6, r1
9001d4ca:	e79a      	b.n	9001d402 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001d4cc:	4b03      	ldr	r3, [pc, #12]	; (9001d4dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001d4ce:	6818      	ldr	r0, [r3, #0]
9001d4d0:	6803      	ldr	r3, [r0, #0]
9001d4d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001d4d4:	4798      	blx	r3
9001d4d6:	b007      	add	sp, #28
9001d4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d4dc:	2402357c 	.word	0x2402357c
9001d4e0:	24023576 	.word	0x24023576

9001d4e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001d4e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d4e8:	b089      	sub	sp, #36	; 0x24
9001d4ea:	4682      	mov	sl, r0
9001d4ec:	460f      	mov	r7, r1
9001d4ee:	4691      	mov	r9, r2
9001d4f0:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
9001d4f4:	4698      	mov	r8, r3
9001d4f6:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001d4f8:	2e00      	cmp	r6, #0
9001d4fa:	d03d      	beq.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d4fc:	4608      	mov	r0, r1
9001d4fe:	f7fa fe4b 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001d502:	4605      	mov	r5, r0
9001d504:	4638      	mov	r0, r7
9001d506:	f7fa fe7b 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001d50a:	f8ad 000e 	strh.w	r0, [sp, #14]
9001d50e:	4638      	mov	r0, r7
9001d510:	f8ad 9008 	strh.w	r9, [sp, #8]
9001d514:	f8ad 500c 	strh.w	r5, [sp, #12]
9001d518:	f8ad 800a 	strh.w	r8, [sp, #10]
9001d51c:	f7fa ff28 	bl	90018370 <_ZNK8touchgfx6Bitmap7getDataEv>
9001d520:	4605      	mov	r5, r0
9001d522:	4638      	mov	r0, r7
9001d524:	f7fa ff54 	bl	900183d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001d528:	4681      	mov	r9, r0
9001d52a:	4638      	mov	r0, r7
9001d52c:	f7fa ffa4 	bl	90018478 <_ZNK8touchgfx6Bitmap9getFormatEv>
9001d530:	280b      	cmp	r0, #11
9001d532:	d821      	bhi.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d534:	e8df f000 	tbb	[pc, r0]
9001d538:	2006aebe 	.word	0x2006aebe
9001d53c:	20202020 	.word	0x20202020
9001d540:	b5202020 	.word	0xb5202020
9001d544:	4bb0      	ldr	r3, [pc, #704]	; (9001d808 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
9001d546:	6818      	ldr	r0, [r3, #0]
9001d548:	6803      	ldr	r3, [r0, #0]
9001d54a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001d54c:	4798      	blx	r3
9001d54e:	2eff      	cmp	r6, #255	; 0xff
9001d550:	d101      	bne.n	9001d556 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d552:	0683      	lsls	r3, r0, #26
9001d554:	d506      	bpl.n	9001d564 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
9001d556:	4633      	mov	r3, r6
9001d558:	4622      	mov	r2, r4
9001d55a:	a902      	add	r1, sp, #8
9001d55c:	4628      	mov	r0, r5
9001d55e:	f7ff f907 	bl	9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d562:	e009      	b.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d564:	4638      	mov	r0, r7
9001d566:	f7fa fecb 	bl	90018300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d56a:	b940      	cbnz	r0, 9001d57e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
9001d56c:	4623      	mov	r3, r4
9001d56e:	aa02      	add	r2, sp, #8
9001d570:	4629      	mov	r1, r5
9001d572:	4650      	mov	r0, sl
9001d574:	f7ff f9e2 	bl	9001c93c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d578:	b009      	add	sp, #36	; 0x24
9001d57a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d57e:	f10d 0818 	add.w	r8, sp, #24
9001d582:	4639      	mov	r1, r7
9001d584:	af04      	add	r7, sp, #16
9001d586:	4640      	mov	r0, r8
9001d588:	f7fa fe6e 	bl	90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d58c:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d590:	e887 0003 	stmia.w	r7, {r0, r1}
9001d594:	4638      	mov	r0, r7
9001d596:	4621      	mov	r1, r4
9001d598:	f7f2 fd9e 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001d59c:	4638      	mov	r0, r7
9001d59e:	f7f2 fdde 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d5a2:	2800      	cmp	r0, #0
9001d5a4:	d1d7      	bne.n	9001d556 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
9001d5a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d5aa:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d5ae:	4293      	cmp	r3, r2
9001d5b0:	dd12      	ble.n	9001d5d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
9001d5b2:	1a9b      	subs	r3, r3, r2
9001d5b4:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d5b8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d5bc:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d5c0:	4628      	mov	r0, r5
9001d5c2:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d5c6:	4642      	mov	r2, r8
9001d5c8:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d5cc:	a902      	add	r1, sp, #8
9001d5ce:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d5d2:	4633      	mov	r3, r6
9001d5d4:	f7ff f8cc 	bl	9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d5d8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d5dc:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d5e0:	4293      	cmp	r3, r2
9001d5e2:	dd12      	ble.n	9001d60a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
9001d5e4:	1a9b      	subs	r3, r3, r2
9001d5e6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d5ea:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d5ee:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d5f2:	4642      	mov	r2, r8
9001d5f4:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d5f8:	4628      	mov	r0, r5
9001d5fa:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d5fe:	23ff      	movs	r3, #255	; 0xff
9001d600:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d604:	a902      	add	r1, sp, #8
9001d606:	f7ff f8b3 	bl	9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d60a:	463b      	mov	r3, r7
9001d60c:	aa02      	add	r2, sp, #8
9001d60e:	4629      	mov	r1, r5
9001d610:	4650      	mov	r0, sl
9001d612:	f7ff f993 	bl	9001c93c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001d616:	88a2      	ldrh	r2, [r4, #4]
9001d618:	8823      	ldrh	r3, [r4, #0]
9001d61a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d61e:	4413      	add	r3, r2
9001d620:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d624:	440a      	add	r2, r1
9001d626:	b29b      	uxth	r3, r3
9001d628:	b292      	uxth	r2, r2
9001d62a:	b218      	sxth	r0, r3
9001d62c:	b211      	sxth	r1, r2
9001d62e:	4288      	cmp	r0, r1
9001d630:	dd12      	ble.n	9001d658 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
9001d632:	1a9b      	subs	r3, r3, r2
9001d634:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d638:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001d63c:	4642      	mov	r2, r8
9001d63e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d642:	a902      	add	r1, sp, #8
9001d644:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d648:	23ff      	movs	r3, #255	; 0xff
9001d64a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d64e:	4628      	mov	r0, r5
9001d650:	f8ad 601a 	strh.w	r6, [sp, #26]
9001d654:	f7ff f88c 	bl	9001c770 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001d658:	88e2      	ldrh	r2, [r4, #6]
9001d65a:	8863      	ldrh	r3, [r4, #2]
9001d65c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d660:	4413      	add	r3, r2
9001d662:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d666:	440a      	add	r2, r1
9001d668:	b29b      	uxth	r3, r3
9001d66a:	b292      	uxth	r2, r2
9001d66c:	b218      	sxth	r0, r3
9001d66e:	b211      	sxth	r1, r2
9001d670:	4288      	cmp	r0, r1
9001d672:	dd81      	ble.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d674:	1a9b      	subs	r3, r3, r2
9001d676:	f9b4 6000 	ldrsh.w	r6, [r4]
9001d67a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d67e:	4642      	mov	r2, r8
9001d680:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d684:	23ff      	movs	r3, #255	; 0xff
9001d686:	f8ad 6018 	strh.w	r6, [sp, #24]
9001d68a:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d68e:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d692:	e762      	b.n	9001d55a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
9001d694:	4633      	mov	r3, r6
9001d696:	4622      	mov	r2, r4
9001d698:	a902      	add	r1, sp, #8
9001d69a:	4628      	mov	r0, r5
9001d69c:	f7ff f9be 	bl	9001ca1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001d6a0:	e76a      	b.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d6a2:	e9cd 4600 	strd	r4, r6, [sp]
9001d6a6:	ab02      	add	r3, sp, #8
9001d6a8:	464a      	mov	r2, r9
9001d6aa:	4629      	mov	r1, r5
9001d6ac:	4650      	mov	r0, sl
9001d6ae:	f7ff fd95 	bl	9001d1dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001d6b2:	e761      	b.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d6b4:	4638      	mov	r0, r7
9001d6b6:	f7fa fe23 	bl	90018300 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001d6ba:	b950      	cbnz	r0, 9001d6d2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
9001d6bc:	f8da 3000 	ldr.w	r3, [sl]
9001d6c0:	aa02      	add	r2, sp, #8
9001d6c2:	4629      	mov	r1, r5
9001d6c4:	e9cd 6000 	strd	r6, r0, [sp]
9001d6c8:	4650      	mov	r0, sl
9001d6ca:	68de      	ldr	r6, [r3, #12]
9001d6cc:	4623      	mov	r3, r4
9001d6ce:	47b0      	blx	r6
9001d6d0:	e752      	b.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d6d2:	f10d 0818 	add.w	r8, sp, #24
9001d6d6:	4639      	mov	r1, r7
9001d6d8:	af04      	add	r7, sp, #16
9001d6da:	4640      	mov	r0, r8
9001d6dc:	f7fa fdc4 	bl	90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001d6e0:	e898 0003 	ldmia.w	r8, {r0, r1}
9001d6e4:	e887 0003 	stmia.w	r7, {r0, r1}
9001d6e8:	4638      	mov	r0, r7
9001d6ea:	4621      	mov	r1, r4
9001d6ec:	f7f2 fcf4 	bl	900100d8 <_ZN8touchgfx4RectaNERKS0_>
9001d6f0:	4638      	mov	r0, r7
9001d6f2:	f7f2 fd34 	bl	9001015e <_ZNK8touchgfx4Rect7isEmptyEv>
9001d6f6:	b138      	cbz	r0, 9001d708 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
9001d6f8:	4623      	mov	r3, r4
9001d6fa:	9600      	str	r6, [sp, #0]
9001d6fc:	aa02      	add	r2, sp, #8
9001d6fe:	4649      	mov	r1, r9
9001d700:	4628      	mov	r0, r5
9001d702:	f7ff fdc9 	bl	9001d298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d706:	e737      	b.n	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d708:	f8da 3000 	ldr.w	r3, [sl]
9001d70c:	aa02      	add	r2, sp, #8
9001d70e:	4629      	mov	r1, r5
9001d710:	e9cd 6000 	strd	r6, r0, [sp]
9001d714:	4650      	mov	r0, sl
9001d716:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001d71a:	463b      	mov	r3, r7
9001d71c:	47d8      	blx	fp
9001d71e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001d722:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001d726:	4293      	cmp	r3, r2
9001d728:	dd13      	ble.n	9001d752 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
9001d72a:	f9b4 0000 	ldrsh.w	r0, [r4]
9001d72e:	1a9b      	subs	r3, r3, r2
9001d730:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001d734:	f8ad 0018 	strh.w	r0, [sp, #24]
9001d738:	4628      	mov	r0, r5
9001d73a:	f8ad 201a 	strh.w	r2, [sp, #26]
9001d73e:	aa02      	add	r2, sp, #8
9001d740:	f8ad 101c 	strh.w	r1, [sp, #28]
9001d744:	4649      	mov	r1, r9
9001d746:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d74a:	4643      	mov	r3, r8
9001d74c:	9600      	str	r6, [sp, #0]
9001d74e:	f7ff fda3 	bl	9001d298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d752:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001d756:	f9b4 2000 	ldrsh.w	r2, [r4]
9001d75a:	4293      	cmp	r3, r2
9001d75c:	dd13      	ble.n	9001d786 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
9001d75e:	1a9b      	subs	r3, r3, r2
9001d760:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001d764:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001d768:	f8ad 2018 	strh.w	r2, [sp, #24]
9001d76c:	aa02      	add	r2, sp, #8
9001d76e:	f8ad 001a 	strh.w	r0, [sp, #26]
9001d772:	4628      	mov	r0, r5
9001d774:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d778:	4643      	mov	r3, r8
9001d77a:	f8ad 101e 	strh.w	r1, [sp, #30]
9001d77e:	4649      	mov	r1, r9
9001d780:	9600      	str	r6, [sp, #0]
9001d782:	f7ff fd89 	bl	9001d298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d786:	88a2      	ldrh	r2, [r4, #4]
9001d788:	8823      	ldrh	r3, [r4, #0]
9001d78a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001d78e:	4413      	add	r3, r2
9001d790:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d794:	440a      	add	r2, r1
9001d796:	b29b      	uxth	r3, r3
9001d798:	b292      	uxth	r2, r2
9001d79a:	b218      	sxth	r0, r3
9001d79c:	b211      	sxth	r1, r2
9001d79e:	4288      	cmp	r0, r1
9001d7a0:	dd13      	ble.n	9001d7ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
9001d7a2:	1a9b      	subs	r3, r3, r2
9001d7a4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001d7a8:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001d7ac:	aa02      	add	r2, sp, #8
9001d7ae:	f8ad 1018 	strh.w	r1, [sp, #24]
9001d7b2:	4649      	mov	r1, r9
9001d7b4:	f8ad 301c 	strh.w	r3, [sp, #28]
9001d7b8:	4643      	mov	r3, r8
9001d7ba:	f8ad 001e 	strh.w	r0, [sp, #30]
9001d7be:	4628      	mov	r0, r5
9001d7c0:	9600      	str	r6, [sp, #0]
9001d7c2:	f8ad 701a 	strh.w	r7, [sp, #26]
9001d7c6:	f7ff fd67 	bl	9001d298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001d7ca:	88e2      	ldrh	r2, [r4, #6]
9001d7cc:	8863      	ldrh	r3, [r4, #2]
9001d7ce:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001d7d2:	4413      	add	r3, r2
9001d7d4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001d7d8:	440a      	add	r2, r1
9001d7da:	b29b      	uxth	r3, r3
9001d7dc:	b292      	uxth	r2, r2
9001d7de:	b218      	sxth	r0, r3
9001d7e0:	b211      	sxth	r1, r2
9001d7e2:	4288      	cmp	r0, r1
9001d7e4:	f77f aec8 	ble.w	9001d578 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
9001d7e8:	f9b4 7000 	ldrsh.w	r7, [r4]
9001d7ec:	1a9b      	subs	r3, r3, r2
9001d7ee:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001d7f2:	f8ad 301e 	strh.w	r3, [sp, #30]
9001d7f6:	4643      	mov	r3, r8
9001d7f8:	f8ad 7018 	strh.w	r7, [sp, #24]
9001d7fc:	f8ad 101a 	strh.w	r1, [sp, #26]
9001d800:	f8ad 001c 	strh.w	r0, [sp, #28]
9001d804:	9600      	str	r6, [sp, #0]
9001d806:	e779      	b.n	9001d6fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
9001d808:	2402357c 	.word	0x2402357c

9001d80c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
9001d80c:	b180      	cbz	r0, 9001d830 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9001d80e:	2903      	cmp	r1, #3
9001d810:	d81c      	bhi.n	9001d84c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d812:	e8df f001 	tbb	[pc, r1]
9001d816:	1d02      	.short	0x1d02
9001d818:	1f08      	.short	0x1f08
9001d81a:	4b10      	ldr	r3, [pc, #64]	; (9001d85c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d81c:	8818      	ldrh	r0, [r3, #0]
9001d81e:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d822:	4240      	negs	r0, r0
9001d824:	4770      	bx	lr
9001d826:	4b0d      	ldr	r3, [pc, #52]	; (9001d85c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
9001d828:	8818      	ldrh	r0, [r3, #0]
9001d82a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d82e:	4770      	bx	lr
9001d830:	2903      	cmp	r1, #3
9001d832:	d80b      	bhi.n	9001d84c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9001d834:	a301      	add	r3, pc, #4	; (adr r3, 9001d83c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
9001d836:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d83a:	bf00      	nop
9001d83c:	9001d851 	.word	0x9001d851
9001d840:	9001d827 	.word	0x9001d827
9001d844:	9001d855 	.word	0x9001d855
9001d848:	9001d81b 	.word	0x9001d81b
9001d84c:	2000      	movs	r0, #0
9001d84e:	4770      	bx	lr
9001d850:	2001      	movs	r0, #1
9001d852:	4770      	bx	lr
9001d854:	f04f 30ff 	mov.w	r0, #4294967295
9001d858:	4770      	bx	lr
9001d85a:	bf00      	nop
9001d85c:	24023576 	.word	0x24023576

9001d860 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9001d860:	b180      	cbz	r0, 9001d884 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9001d862:	2903      	cmp	r1, #3
9001d864:	d81c      	bhi.n	9001d8a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d866:	e8df f001 	tbb	[pc, r1]
9001d86a:	021d      	.short	0x021d
9001d86c:	071f      	.short	0x071f
9001d86e:	4b10      	ldr	r3, [pc, #64]	; (9001d8b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d870:	8818      	ldrh	r0, [r3, #0]
9001d872:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d876:	4770      	bx	lr
9001d878:	4b0d      	ldr	r3, [pc, #52]	; (9001d8b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
9001d87a:	8818      	ldrh	r0, [r3, #0]
9001d87c:	f3c0 000e 	ubfx	r0, r0, #0, #15
9001d880:	4240      	negs	r0, r0
9001d882:	4770      	bx	lr
9001d884:	2903      	cmp	r1, #3
9001d886:	d80b      	bhi.n	9001d8a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
9001d888:	a301      	add	r3, pc, #4	; (adr r3, 9001d890 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
9001d88a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
9001d88e:	bf00      	nop
9001d890:	9001d86f 	.word	0x9001d86f
9001d894:	9001d8a9 	.word	0x9001d8a9
9001d898:	9001d879 	.word	0x9001d879
9001d89c:	9001d8a5 	.word	0x9001d8a5
9001d8a0:	2000      	movs	r0, #0
9001d8a2:	4770      	bx	lr
9001d8a4:	2001      	movs	r0, #1
9001d8a6:	4770      	bx	lr
9001d8a8:	f04f 30ff 	mov.w	r0, #4294967295
9001d8ac:	4770      	bx	lr
9001d8ae:	bf00      	nop
9001d8b0:	24023576 	.word	0x24023576

9001d8b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
9001d8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d8b8:	b099      	sub	sp, #100	; 0x64
9001d8ba:	910b      	str	r1, [sp, #44]	; 0x2c
9001d8bc:	a914      	add	r1, sp, #80	; 0x50
9001d8be:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
9001d8c2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
9001d8c6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
9001d8ca:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
9001d8ce:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
9001d8d2:	e881 000c 	stmia.w	r1, {r2, r3}
9001d8d6:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
9001d8da:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
9001d8de:	9309      	str	r3, [sp, #36]	; 0x24
9001d8e0:	f891 900d 	ldrb.w	r9, [r1, #13]
9001d8e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
9001d8e8:	ea4f 1749 	mov.w	r7, r9, lsl #5
9001d8ec:	9310      	str	r3, [sp, #64]	; 0x40
9001d8ee:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
9001d8f2:	930c      	str	r3, [sp, #48]	; 0x30
9001d8f4:	f407 7380 	and.w	r3, r7, #256	; 0x100
9001d8f8:	798f      	ldrb	r7, [r1, #6]
9001d8fa:	431f      	orrs	r7, r3
9001d8fc:	f000 8195 	beq.w	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d900:	ea4f 1909 	mov.w	r9, r9, lsl #4
9001d904:	f409 7380 	and.w	r3, r9, #256	; 0x100
9001d908:	f891 9007 	ldrb.w	r9, [r1, #7]
9001d90c:	ea59 0903 	orrs.w	r9, r9, r3
9001d910:	f000 818b 	beq.w	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d914:	f991 3009 	ldrsb.w	r3, [r1, #9]
9001d918:	b29b      	uxth	r3, r3
9001d91a:	2d00      	cmp	r5, #0
9001d91c:	f000 812e 	beq.w	9001db7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
9001d920:	1aed      	subs	r5, r5, r3
9001d922:	b2ad      	uxth	r5, r5
9001d924:	042b      	lsls	r3, r5, #16
9001d926:	d502      	bpl.n	9001d92e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001d928:	1b64      	subs	r4, r4, r5
9001d92a:	2500      	movs	r5, #0
9001d92c:	b224      	sxth	r4, r4
9001d92e:	f9b2 1000 	ldrsh.w	r1, [r2]
9001d932:	a814      	add	r0, sp, #80	; 0x50
9001d934:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
9001d938:	428c      	cmp	r4, r1
9001d93a:	b28b      	uxth	r3, r1
9001d93c:	bfbf      	itttt	lt
9001d93e:	18ed      	addlt	r5, r5, r3
9001d940:	1b2c      	sublt	r4, r5, r4
9001d942:	b2a5      	uxthlt	r5, r4
9001d944:	460c      	movlt	r4, r1
9001d946:	8891      	ldrh	r1, [r2, #4]
9001d948:	440b      	add	r3, r1
9001d94a:	4621      	mov	r1, r4
9001d94c:	b21b      	sxth	r3, r3
9001d94e:	930f      	str	r3, [sp, #60]	; 0x3c
9001d950:	88d3      	ldrh	r3, [r2, #6]
9001d952:	8852      	ldrh	r2, [r2, #2]
9001d954:	4413      	add	r3, r2
9001d956:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d958:	b21b      	sxth	r3, r3
9001d95a:	930d      	str	r3, [sp, #52]	; 0x34
9001d95c:	4bbd      	ldr	r3, [pc, #756]	; (9001dc54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
9001d95e:	f893 b000 	ldrb.w	fp, [r3]
9001d962:	f10b 3cff 	add.w	ip, fp, #4294967295
9001d966:	f1dc 0300 	rsbs	r3, ip, #0
9001d96a:	eb43 030c 	adc.w	r3, r3, ip
9001d96e:	930e      	str	r3, [sp, #56]	; 0x38
9001d970:	4653      	mov	r3, sl
9001d972:	f7f6 ff90 	bl	90014896 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
9001d976:	4621      	mov	r1, r4
9001d978:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
9001d97c:	4653      	mov	r3, sl
9001d97e:	9a09      	ldr	r2, [sp, #36]	; 0x24
9001d980:	a814      	add	r0, sp, #80	; 0x50
9001d982:	f7f6 ffa5 	bl	900148d0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
9001d986:	a918      	add	r1, sp, #96	; 0x60
9001d988:	f821 0d02 	strh.w	r0, [r1, #-2]!
9001d98c:	a817      	add	r0, sp, #92	; 0x5c
9001d98e:	f7f7 f8cb 	bl	90014b28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
9001d992:	f1ba 0f00 	cmp.w	sl, #0
9001d996:	f040 80f4 	bne.w	9001db82 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
9001d99a:	f1bb 0f01 	cmp.w	fp, #1
9001d99e:	f040 80f8 	bne.w	9001db92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
9001d9a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001d9a4:	2b00      	cmp	r3, #0
9001d9a6:	f040 8145 	bne.w	9001dc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
9001d9aa:	b2ba      	uxth	r2, r7
9001d9ac:	b905      	cbnz	r5, 9001d9b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
9001d9ae:	b16e      	cbz	r6, 9001d9cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
9001d9b0:	fb06 5302 	mla	r3, r6, r2, r5
9001d9b4:	9828      	ldr	r0, [sp, #160]	; 0xa0
9001d9b6:	4631      	mov	r1, r6
9001d9b8:	fb08 f303 	mul.w	r3, r8, r3
9001d9bc:	f003 0607 	and.w	r6, r3, #7
9001d9c0:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
9001d9c4:	9328      	str	r3, [sp, #160]	; 0xa0
9001d9c6:	eba9 0301 	sub.w	r3, r9, r1
9001d9ca:	930a      	str	r3, [sp, #40]	; 0x28
9001d9cc:	4651      	mov	r1, sl
9001d9ce:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d9d0:	f7ff ff1c 	bl	9001d80c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
9001d9d4:	4681      	mov	r9, r0
9001d9d6:	980e      	ldr	r0, [sp, #56]	; 0x38
9001d9d8:	f7ff ff42 	bl	9001d860 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
9001d9dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001d9de:	9909      	ldr	r1, [sp, #36]	; 0x24
9001d9e0:	4683      	mov	fp, r0
9001d9e2:	eba3 0a01 	sub.w	sl, r3, r1
9001d9e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001d9e8:	459a      	cmp	sl, r3
9001d9ea:	bfa8      	it	ge
9001d9ec:	469a      	movge	sl, r3
9001d9ee:	f1ba 0f00 	cmp.w	sl, #0
9001d9f2:	f340 811a 	ble.w	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001d9f6:	1b64      	subs	r4, r4, r5
9001d9f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001d9fa:	1b1c      	subs	r4, r3, r4
9001d9fc:	42bc      	cmp	r4, r7
9001d9fe:	bfd4      	ite	le
9001da00:	ebc5 0504 	rsble	r5, r5, r4
9001da04:	ebc5 0507 	rsbgt	r5, r5, r7
9001da08:	2d00      	cmp	r5, #0
9001da0a:	f340 810e 	ble.w	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001da0e:	1b52      	subs	r2, r2, r5
9001da10:	fb08 f302 	mul.w	r3, r8, r2
9001da14:	930f      	str	r3, [sp, #60]	; 0x3c
9001da16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001da18:	2b00      	cmp	r3, #0
9001da1a:	f040 8116 	bne.w	9001dc4a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
9001da1e:	4b8e      	ldr	r3, [pc, #568]	; (9001dc58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
9001da20:	6818      	ldr	r0, [r3, #0]
9001da22:	6803      	ldr	r3, [r0, #0]
9001da24:	6a9b      	ldr	r3, [r3, #40]	; 0x28
9001da26:	4798      	blx	r3
9001da28:	2301      	movs	r3, #1
9001da2a:	4a8c      	ldr	r2, [pc, #560]	; (9001dc5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
9001da2c:	fa03 f308 	lsl.w	r3, r3, r8
9001da30:	8811      	ldrh	r1, [r2, #0]
9001da32:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
9001da36:	3b01      	subs	r3, #1
9001da38:	b2db      	uxtb	r3, r3
9001da3a:	930e      	str	r3, [sp, #56]	; 0x38
9001da3c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
9001da40:	fb01 2303 	mla	r3, r1, r3, r2
9001da44:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001da48:	930a      	str	r3, [sp, #40]	; 0x28
9001da4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001da4c:	f3c3 4307 	ubfx	r3, r3, #16, #8
9001da50:	9313      	str	r3, [sp, #76]	; 0x4c
9001da52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001da54:	0a19      	lsrs	r1, r3, #8
9001da56:	b2cb      	uxtb	r3, r1
9001da58:	9312      	str	r3, [sp, #72]	; 0x48
9001da5a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001da5c:	b2db      	uxtb	r3, r3
9001da5e:	9311      	str	r3, [sp, #68]	; 0x44
9001da60:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001da62:	095a      	lsrs	r2, r3, #5
9001da64:	4b7e      	ldr	r3, [pc, #504]	; (9001dc60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
9001da66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001da6a:	400b      	ands	r3, r1
9001da6c:	4313      	orrs	r3, r2
9001da6e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001da70:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001da74:	4313      	orrs	r3, r2
9001da76:	b29b      	uxth	r3, r3
9001da78:	9310      	str	r3, [sp, #64]	; 0x40
9001da7a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001da7c:	781a      	ldrb	r2, [r3, #0]
9001da7e:	ea4f 0349 	mov.w	r3, r9, lsl #1
9001da82:	fb05 b919 	mls	r9, r5, r9, fp
9001da86:	4132      	asrs	r2, r6
9001da88:	fb03 fb05 	mul.w	fp, r3, r5
9001da8c:	930d      	str	r3, [sp, #52]	; 0x34
9001da8e:	b2d2      	uxtb	r2, r2
9001da90:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
9001da94:	f11a 3aff 	adds.w	sl, sl, #4294967295
9001da98:	f0c0 80f5 	bcc.w	9001dc86 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
9001da9c:	46ae      	mov	lr, r5
9001da9e:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
9001daa2:	f11e 3eff 	adds.w	lr, lr, #4294967295
9001daa6:	f0c0 80dd 	bcc.w	9001dc64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
9001daaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001daac:	4013      	ands	r3, r2
9001daae:	d055      	beq.n	9001db5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
9001dab0:	20ff      	movs	r0, #255	; 0xff
9001dab2:	990e      	ldr	r1, [sp, #56]	; 0x38
9001dab4:	fb90 f1f1 	sdiv	r1, r0, r1
9001dab8:	434b      	muls	r3, r1
9001daba:	2bfe      	cmp	r3, #254	; 0xfe
9001dabc:	dd03      	ble.n	9001dac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
9001dabe:	990c      	ldr	r1, [sp, #48]	; 0x30
9001dac0:	4281      	cmp	r1, r0
9001dac2:	f000 80c4 	beq.w	9001dc4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
9001dac6:	990c      	ldr	r1, [sp, #48]	; 0x30
9001dac8:	f8bc 4000 	ldrh.w	r4, [ip]
9001dacc:	fb11 f303 	smulbb	r3, r1, r3
9001dad0:	1220      	asrs	r0, r4, #8
9001dad2:	b29b      	uxth	r3, r3
9001dad4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001dad8:	1c59      	adds	r1, r3, #1
9001dada:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
9001dade:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9001dae2:	10e1      	asrs	r1, r4, #3
9001dae4:	f3c3 2307 	ubfx	r3, r3, #8, #8
9001dae8:	00e4      	lsls	r4, r4, #3
9001daea:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001daee:	b29f      	uxth	r7, r3
9001daf0:	43db      	mvns	r3, r3
9001daf2:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001daf6:	b2db      	uxtb	r3, r3
9001daf8:	b2e4      	uxtb	r4, r4
9001dafa:	9309      	str	r3, [sp, #36]	; 0x24
9001dafc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001dafe:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001db02:	fb13 f907 	smulbb	r9, r3, r7
9001db06:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001db08:	fb00 9003 	mla	r0, r0, r3, r9
9001db0c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001db0e:	fb13 f907 	smulbb	r9, r3, r7
9001db12:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001db14:	b280      	uxth	r0, r0
9001db16:	fb01 9103 	mla	r1, r1, r3, r9
9001db1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001db1c:	fb13 f707 	smulbb	r7, r3, r7
9001db20:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001db22:	b289      	uxth	r1, r1
9001db24:	fb04 7403 	mla	r4, r4, r3, r7
9001db28:	1c43      	adds	r3, r0, #1
9001db2a:	b2a4      	uxth	r4, r4
9001db2c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001db30:	f104 0901 	add.w	r9, r4, #1
9001db34:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001db38:	eb09 2914 	add.w	r9, r9, r4, lsr #8
9001db3c:	f3c9 29c4 	ubfx	r9, r9, #11, #5
9001db40:	ea49 0000 	orr.w	r0, r9, r0
9001db44:	f101 0901 	add.w	r9, r1, #1
9001db48:	eb09 2911 	add.w	r9, r9, r1, lsr #8
9001db4c:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001db50:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
9001db54:	ea40 0009 	orr.w	r0, r0, r9
9001db58:	f8ac 0000 	strh.w	r0, [ip]
9001db5c:	4446      	add	r6, r8
9001db5e:	b2b6      	uxth	r6, r6
9001db60:	2e07      	cmp	r6, #7
9001db62:	bf89      	itett	hi
9001db64:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
9001db66:	fa42 f208 	asrls.w	r2, r2, r8
9001db6a:	2600      	movhi	r6, #0
9001db6c:	785a      	ldrbhi	r2, [r3, #1]
9001db6e:	bf8a      	itet	hi
9001db70:	3301      	addhi	r3, #1
9001db72:	b2d2      	uxtbls	r2, r2
9001db74:	9328      	strhi	r3, [sp, #160]	; 0xa0
9001db76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001db78:	449c      	add	ip, r3
9001db7a:	e792      	b.n	9001daa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
9001db7c:	441c      	add	r4, r3
9001db7e:	b224      	sxth	r4, r4
9001db80:	e6d5      	b.n	9001d92e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
9001db82:	f1ba 0f01 	cmp.w	sl, #1
9001db86:	f47f af0c 	bne.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001db8a:	f1bb 0f01 	cmp.w	fp, #1
9001db8e:	f47f af08 	bne.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001db92:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 9001dc58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
9001db96:	f8db 0000 	ldr.w	r0, [fp]
9001db9a:	6803      	ldr	r3, [r0, #0]
9001db9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9001db9e:	4798      	blx	r3
9001dba0:	f410 7380 	ands.w	r3, r0, #256	; 0x100
9001dba4:	465a      	mov	r2, fp
9001dba6:	d006      	beq.n	9001dbb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001dba8:	f1b8 0f04 	cmp.w	r8, #4
9001dbac:	d140      	bne.n	9001dc30 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
9001dbae:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001dbb0:	3300      	adds	r3, #0
9001dbb2:	bf18      	it	ne
9001dbb4:	2301      	movne	r3, #1
9001dbb6:	0580      	lsls	r0, r0, #22
9001dbb8:	d56e      	bpl.n	9001dc98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001dbba:	f1b8 0f08 	cmp.w	r8, #8
9001dbbe:	d16b      	bne.n	9001dc98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
9001dbc0:	2b00      	cmp	r3, #0
9001dbc2:	bf0c      	ite	eq
9001dbc4:	f44f 7100 	moveq.w	r1, #512	; 0x200
9001dbc8:	f44f 7180 	movne.w	r1, #256	; 0x100
9001dbcc:	2d00      	cmp	r5, #0
9001dbce:	f47f aee8 	bne.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dbd2:	2e00      	cmp	r6, #0
9001dbd4:	f47f aee5 	bne.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dbd8:	19e3      	adds	r3, r4, r7
9001dbda:	980f      	ldr	r0, [sp, #60]	; 0x3c
9001dbdc:	4283      	cmp	r3, r0
9001dbde:	f73f aee0 	bgt.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dbe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001dbe4:	980d      	ldr	r0, [sp, #52]	; 0x34
9001dbe6:	444b      	add	r3, r9
9001dbe8:	4283      	cmp	r3, r0
9001dbea:	f73f aeda 	bgt.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dbee:	b2bf      	uxth	r7, r7
9001dbf0:	f1b8 0f08 	cmp.w	r8, #8
9001dbf4:	6810      	ldr	r0, [r2, #0]
9001dbf6:	f04f 0500 	mov.w	r5, #0
9001dbfa:	bf18      	it	ne
9001dbfc:	3701      	addne	r7, #1
9001dbfe:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
9001dc02:	6804      	ldr	r4, [r0, #0]
9001dc04:	bf18      	it	ne
9001dc06:	f027 0701 	bicne.w	r7, r7, #1
9001dc0a:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
9001dc0e:	e9cd 1505 	strd	r1, r5, [sp, #20]
9001dc12:	990c      	ldr	r1, [sp, #48]	; 0x30
9001dc14:	bf18      	it	ne
9001dc16:	b2bf      	uxthne	r7, r7
9001dc18:	9104      	str	r1, [sp, #16]
9001dc1a:	992a      	ldr	r1, [sp, #168]	; 0xa8
9001dc1c:	e9cd 7900 	strd	r7, r9, [sp]
9001dc20:	e9cd 7102 	strd	r7, r1, [sp, #8]
9001dc24:	9928      	ldr	r1, [sp, #160]	; 0xa0
9001dc26:	6d64      	ldr	r4, [r4, #84]	; 0x54
9001dc28:	47a0      	blx	r4
9001dc2a:	b019      	add	sp, #100	; 0x64
9001dc2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dc30:	2300      	movs	r3, #0
9001dc32:	e7c0      	b.n	9001dbb6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
9001dc34:	2208      	movs	r2, #8
9001dc36:	fb92 f3f8 	sdiv	r3, r2, r8
9001dc3a:	1e5a      	subs	r2, r3, #1
9001dc3c:	443a      	add	r2, r7
9001dc3e:	fb92 f2f3 	sdiv	r2, r2, r3
9001dc42:	fb12 f203 	smulbb	r2, r2, r3
9001dc46:	b292      	uxth	r2, r2
9001dc48:	e6b0      	b.n	9001d9ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9001dc4a:	980b      	ldr	r0, [sp, #44]	; 0x2c
9001dc4c:	e6ec      	b.n	9001da28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
9001dc4e:	9810      	ldr	r0, [sp, #64]	; 0x40
9001dc50:	e782      	b.n	9001db58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
9001dc52:	bf00      	nop
9001dc54:	24023574 	.word	0x24023574
9001dc58:	2402357c 	.word	0x2402357c
9001dc5c:	24023576 	.word	0x24023576
9001dc60:	00fff800 	.word	0x00fff800
9001dc64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001dc66:	b153      	cbz	r3, 9001dc7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
9001dc68:	441e      	add	r6, r3
9001dc6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9001dc6c:	b2b6      	uxth	r6, r6
9001dc6e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
9001dc72:	f006 0607 	and.w	r6, r6, #7
9001dc76:	781a      	ldrb	r2, [r3, #0]
9001dc78:	9328      	str	r3, [sp, #160]	; 0xa0
9001dc7a:	4132      	asrs	r2, r6
9001dc7c:	b2d2      	uxtb	r2, r2
9001dc7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001dc80:	445b      	add	r3, fp
9001dc82:	930a      	str	r3, [sp, #40]	; 0x28
9001dc84:	e706      	b.n	9001da94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
9001dc86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001dc88:	2b00      	cmp	r3, #0
9001dc8a:	d1ce      	bne.n	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dc8c:	4b05      	ldr	r3, [pc, #20]	; (9001dca4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
9001dc8e:	6818      	ldr	r0, [r3, #0]
9001dc90:	6803      	ldr	r3, [r0, #0]
9001dc92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9001dc94:	4798      	blx	r3
9001dc96:	e7c8      	b.n	9001dc2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
9001dc98:	2b00      	cmp	r3, #0
9001dc9a:	f43f ae82 	beq.w	9001d9a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
9001dc9e:	f44f 7180 	mov.w	r1, #256	; 0x100
9001dca2:	e793      	b.n	9001dbcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
9001dca4:	2402357c 	.word	0x2402357c

9001dca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
9001dca8:	b538      	push	{r3, r4, r5, lr}
9001dcaa:	4c15      	ldr	r4, [pc, #84]	; (9001dd00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
9001dcac:	4605      	mov	r5, r0
9001dcae:	7823      	ldrb	r3, [r4, #0]
9001dcb0:	f3bf 8f5b 	dmb	ish
9001dcb4:	07da      	lsls	r2, r3, #31
9001dcb6:	d40b      	bmi.n	9001dcd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001dcb8:	4620      	mov	r0, r4
9001dcba:	f008 fa7c 	bl	900261b6 <__cxa_guard_acquire>
9001dcbe:	b138      	cbz	r0, 9001dcd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
9001dcc0:	4620      	mov	r0, r4
9001dcc2:	f008 fa84 	bl	900261ce <__cxa_guard_release>
9001dcc6:	4a0f      	ldr	r2, [pc, #60]	; (9001dd04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001dcc8:	490f      	ldr	r1, [pc, #60]	; (9001dd08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
9001dcca:	4810      	ldr	r0, [pc, #64]	; (9001dd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001dccc:	f008 fa6c 	bl	900261a8 <__aeabi_atexit>
9001dcd0:	4c0f      	ldr	r4, [pc, #60]	; (9001dd10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
9001dcd2:	7823      	ldrb	r3, [r4, #0]
9001dcd4:	f3bf 8f5b 	dmb	ish
9001dcd8:	07db      	lsls	r3, r3, #31
9001dcda:	d40b      	bmi.n	9001dcf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dcdc:	4620      	mov	r0, r4
9001dcde:	f008 fa6a 	bl	900261b6 <__cxa_guard_acquire>
9001dce2:	b138      	cbz	r0, 9001dcf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
9001dce4:	4620      	mov	r0, r4
9001dce6:	f008 fa72 	bl	900261ce <__cxa_guard_release>
9001dcea:	4a06      	ldr	r2, [pc, #24]	; (9001dd04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
9001dcec:	4909      	ldr	r1, [pc, #36]	; (9001dd14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
9001dcee:	480a      	ldr	r0, [pc, #40]	; (9001dd18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001dcf0:	f008 fa5a 	bl	900261a8 <__aeabi_atexit>
9001dcf4:	4b05      	ldr	r3, [pc, #20]	; (9001dd0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
9001dcf6:	616b      	str	r3, [r5, #20]
9001dcf8:	4b07      	ldr	r3, [pc, #28]	; (9001dd18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
9001dcfa:	61ab      	str	r3, [r5, #24]
9001dcfc:	bd38      	pop	{r3, r4, r5, pc}
9001dcfe:	bf00      	nop
9001dd00:	2402365c 	.word	0x2402365c
9001dd04:	24000000 	.word	0x24000000
9001dd08:	9001aa8b 	.word	0x9001aa8b
9001dd0c:	240000c0 	.word	0x240000c0
9001dd10:	24023660 	.word	0x24023660
9001dd14:	9001aa89 	.word	0x9001aa89
9001dd18:	240000c4 	.word	0x240000c4

9001dd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
9001dd1c:	b538      	push	{r3, r4, r5, lr}
9001dd1e:	4c15      	ldr	r4, [pc, #84]	; (9001dd74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9001dd20:	4605      	mov	r5, r0
9001dd22:	7823      	ldrb	r3, [r4, #0]
9001dd24:	f3bf 8f5b 	dmb	ish
9001dd28:	07da      	lsls	r2, r3, #31
9001dd2a:	d40b      	bmi.n	9001dd44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dd2c:	4620      	mov	r0, r4
9001dd2e:	f008 fa42 	bl	900261b6 <__cxa_guard_acquire>
9001dd32:	b138      	cbz	r0, 9001dd44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
9001dd34:	4620      	mov	r0, r4
9001dd36:	f008 fa4a 	bl	900261ce <__cxa_guard_release>
9001dd3a:	4a0f      	ldr	r2, [pc, #60]	; (9001dd78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001dd3c:	490f      	ldr	r1, [pc, #60]	; (9001dd7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9001dd3e:	4810      	ldr	r0, [pc, #64]	; (9001dd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001dd40:	f008 fa32 	bl	900261a8 <__aeabi_atexit>
9001dd44:	4c0f      	ldr	r4, [pc, #60]	; (9001dd84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
9001dd46:	7823      	ldrb	r3, [r4, #0]
9001dd48:	f3bf 8f5b 	dmb	ish
9001dd4c:	07db      	lsls	r3, r3, #31
9001dd4e:	d40b      	bmi.n	9001dd68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001dd50:	4620      	mov	r0, r4
9001dd52:	f008 fa30 	bl	900261b6 <__cxa_guard_acquire>
9001dd56:	b138      	cbz	r0, 9001dd68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9001dd58:	4620      	mov	r0, r4
9001dd5a:	f008 fa38 	bl	900261ce <__cxa_guard_release>
9001dd5e:	4a06      	ldr	r2, [pc, #24]	; (9001dd78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9001dd60:	4909      	ldr	r1, [pc, #36]	; (9001dd88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9001dd62:	480a      	ldr	r0, [pc, #40]	; (9001dd8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001dd64:	f008 fa20 	bl	900261a8 <__aeabi_atexit>
9001dd68:	4b05      	ldr	r3, [pc, #20]	; (9001dd80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9001dd6a:	60eb      	str	r3, [r5, #12]
9001dd6c:	4b07      	ldr	r3, [pc, #28]	; (9001dd8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9001dd6e:	612b      	str	r3, [r5, #16]
9001dd70:	bd38      	pop	{r3, r4, r5, pc}
9001dd72:	bf00      	nop
9001dd74:	24023634 	.word	0x24023634
9001dd78:	24000000 	.word	0x24000000
9001dd7c:	9001aa8f 	.word	0x9001aa8f
9001dd80:	24000098 	.word	0x24000098
9001dd84:	24023638 	.word	0x24023638
9001dd88:	9001aa8d 	.word	0x9001aa8d
9001dd8c:	2400009c 	.word	0x2400009c

9001dd90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9001dd90:	b510      	push	{r4, lr}
9001dd92:	4604      	mov	r4, r0
9001dd94:	f7ff ff88 	bl	9001dca8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
9001dd98:	4620      	mov	r0, r4
9001dd9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001dd9e:	f7ff bfbd 	b.w	9001dd1c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

9001dda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
9001dda4:	b538      	push	{r3, r4, r5, lr}
9001dda6:	4c15      	ldr	r4, [pc, #84]	; (9001ddfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
9001dda8:	4605      	mov	r5, r0
9001ddaa:	7823      	ldrb	r3, [r4, #0]
9001ddac:	f3bf 8f5b 	dmb	ish
9001ddb0:	07da      	lsls	r2, r3, #31
9001ddb2:	d40b      	bmi.n	9001ddcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001ddb4:	4620      	mov	r0, r4
9001ddb6:	f008 f9fe 	bl	900261b6 <__cxa_guard_acquire>
9001ddba:	b138      	cbz	r0, 9001ddcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
9001ddbc:	4620      	mov	r0, r4
9001ddbe:	f008 fa06 	bl	900261ce <__cxa_guard_release>
9001ddc2:	4a0f      	ldr	r2, [pc, #60]	; (9001de00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001ddc4:	490f      	ldr	r1, [pc, #60]	; (9001de04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
9001ddc6:	4810      	ldr	r0, [pc, #64]	; (9001de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001ddc8:	f008 f9ee 	bl	900261a8 <__aeabi_atexit>
9001ddcc:	4c0f      	ldr	r4, [pc, #60]	; (9001de0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
9001ddce:	7823      	ldrb	r3, [r4, #0]
9001ddd0:	f3bf 8f5b 	dmb	ish
9001ddd4:	07db      	lsls	r3, r3, #31
9001ddd6:	d40b      	bmi.n	9001ddf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001ddd8:	4620      	mov	r0, r4
9001ddda:	f008 f9ec 	bl	900261b6 <__cxa_guard_acquire>
9001ddde:	b138      	cbz	r0, 9001ddf0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
9001dde0:	4620      	mov	r0, r4
9001dde2:	f008 f9f4 	bl	900261ce <__cxa_guard_release>
9001dde6:	4a06      	ldr	r2, [pc, #24]	; (9001de00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
9001dde8:	4909      	ldr	r1, [pc, #36]	; (9001de10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
9001ddea:	480a      	ldr	r0, [pc, #40]	; (9001de14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001ddec:	f008 f9dc 	bl	900261a8 <__aeabi_atexit>
9001ddf0:	4b05      	ldr	r3, [pc, #20]	; (9001de08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
9001ddf2:	626b      	str	r3, [r5, #36]	; 0x24
9001ddf4:	4b07      	ldr	r3, [pc, #28]	; (9001de14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
9001ddf6:	62ab      	str	r3, [r5, #40]	; 0x28
9001ddf8:	bd38      	pop	{r3, r4, r5, pc}
9001ddfa:	bf00      	nop
9001ddfc:	24023664 	.word	0x24023664
9001de00:	24000000 	.word	0x24000000
9001de04:	9001aa83 	.word	0x9001aa83
9001de08:	240000c8 	.word	0x240000c8
9001de0c:	24023668 	.word	0x24023668
9001de10:	9001aa81 	.word	0x9001aa81
9001de14:	240000cc 	.word	0x240000cc

9001de18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
9001de18:	b538      	push	{r3, r4, r5, lr}
9001de1a:	4c15      	ldr	r4, [pc, #84]	; (9001de70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
9001de1c:	4605      	mov	r5, r0
9001de1e:	7823      	ldrb	r3, [r4, #0]
9001de20:	f3bf 8f5b 	dmb	ish
9001de24:	07da      	lsls	r2, r3, #31
9001de26:	d40b      	bmi.n	9001de40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001de28:	4620      	mov	r0, r4
9001de2a:	f008 f9c4 	bl	900261b6 <__cxa_guard_acquire>
9001de2e:	b138      	cbz	r0, 9001de40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9001de30:	4620      	mov	r0, r4
9001de32:	f008 f9cc 	bl	900261ce <__cxa_guard_release>
9001de36:	4a0f      	ldr	r2, [pc, #60]	; (9001de74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001de38:	490f      	ldr	r1, [pc, #60]	; (9001de78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
9001de3a:	4810      	ldr	r0, [pc, #64]	; (9001de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001de3c:	f008 f9b4 	bl	900261a8 <__aeabi_atexit>
9001de40:	4c0f      	ldr	r4, [pc, #60]	; (9001de80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9001de42:	7823      	ldrb	r3, [r4, #0]
9001de44:	f3bf 8f5b 	dmb	ish
9001de48:	07db      	lsls	r3, r3, #31
9001de4a:	d40b      	bmi.n	9001de64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001de4c:	4620      	mov	r0, r4
9001de4e:	f008 f9b2 	bl	900261b6 <__cxa_guard_acquire>
9001de52:	b138      	cbz	r0, 9001de64 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
9001de54:	4620      	mov	r0, r4
9001de56:	f008 f9ba 	bl	900261ce <__cxa_guard_release>
9001de5a:	4a06      	ldr	r2, [pc, #24]	; (9001de74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
9001de5c:	4909      	ldr	r1, [pc, #36]	; (9001de84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9001de5e:	480a      	ldr	r0, [pc, #40]	; (9001de88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001de60:	f008 f9a2 	bl	900261a8 <__aeabi_atexit>
9001de64:	4b05      	ldr	r3, [pc, #20]	; (9001de7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
9001de66:	61eb      	str	r3, [r5, #28]
9001de68:	4b07      	ldr	r3, [pc, #28]	; (9001de88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9001de6a:	622b      	str	r3, [r5, #32]
9001de6c:	bd38      	pop	{r3, r4, r5, pc}
9001de6e:	bf00      	nop
9001de70:	2402363c 	.word	0x2402363c
9001de74:	24000000 	.word	0x24000000
9001de78:	9001aa87 	.word	0x9001aa87
9001de7c:	240000a0 	.word	0x240000a0
9001de80:	24023640 	.word	0x24023640
9001de84:	9001aa85 	.word	0x9001aa85
9001de88:	240000a4 	.word	0x240000a4

9001de8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
9001de8c:	b510      	push	{r4, lr}
9001de8e:	4604      	mov	r4, r0
9001de90:	f7ff ff88 	bl	9001dda4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
9001de94:	4620      	mov	r0, r4
9001de96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001de9a:	f7ff bfbd 	b.w	9001de18 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9001dea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9001dea0:	b538      	push	{r3, r4, r5, lr}
9001dea2:	4c15      	ldr	r4, [pc, #84]	; (9001def8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
9001dea4:	4605      	mov	r5, r0
9001dea6:	7823      	ldrb	r3, [r4, #0]
9001dea8:	f3bf 8f5b 	dmb	ish
9001deac:	07da      	lsls	r2, r3, #31
9001deae:	d40b      	bmi.n	9001dec8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001deb0:	4620      	mov	r0, r4
9001deb2:	f008 f980 	bl	900261b6 <__cxa_guard_acquire>
9001deb6:	b138      	cbz	r0, 9001dec8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9001deb8:	4620      	mov	r0, r4
9001deba:	f008 f988 	bl	900261ce <__cxa_guard_release>
9001debe:	4a0f      	ldr	r2, [pc, #60]	; (9001defc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dec0:	490f      	ldr	r1, [pc, #60]	; (9001df00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
9001dec2:	4810      	ldr	r0, [pc, #64]	; (9001df04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001dec4:	f008 f970 	bl	900261a8 <__aeabi_atexit>
9001dec8:	4c0f      	ldr	r4, [pc, #60]	; (9001df08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
9001deca:	7823      	ldrb	r3, [r4, #0]
9001decc:	f3bf 8f5b 	dmb	ish
9001ded0:	07db      	lsls	r3, r3, #31
9001ded2:	d40b      	bmi.n	9001deec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001ded4:	4620      	mov	r0, r4
9001ded6:	f008 f96e 	bl	900261b6 <__cxa_guard_acquire>
9001deda:	b138      	cbz	r0, 9001deec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
9001dedc:	4620      	mov	r0, r4
9001dede:	f008 f976 	bl	900261ce <__cxa_guard_release>
9001dee2:	4a06      	ldr	r2, [pc, #24]	; (9001defc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
9001dee4:	4909      	ldr	r1, [pc, #36]	; (9001df0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
9001dee6:	480a      	ldr	r0, [pc, #40]	; (9001df10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001dee8:	f008 f95e 	bl	900261a8 <__aeabi_atexit>
9001deec:	4b05      	ldr	r3, [pc, #20]	; (9001df04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
9001deee:	636b      	str	r3, [r5, #52]	; 0x34
9001def0:	4b07      	ldr	r3, [pc, #28]	; (9001df10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
9001def2:	63ab      	str	r3, [r5, #56]	; 0x38
9001def4:	bd38      	pop	{r3, r4, r5, pc}
9001def6:	bf00      	nop
9001def8:	24023674 	.word	0x24023674
9001defc:	24000000 	.word	0x24000000
9001df00:	9001aa7b 	.word	0x9001aa7b
9001df04:	240000d8 	.word	0x240000d8
9001df08:	24023678 	.word	0x24023678
9001df0c:	9001aa79 	.word	0x9001aa79
9001df10:	240000dc 	.word	0x240000dc

9001df14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
9001df14:	b538      	push	{r3, r4, r5, lr}
9001df16:	4c15      	ldr	r4, [pc, #84]	; (9001df6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
9001df18:	4605      	mov	r5, r0
9001df1a:	7823      	ldrb	r3, [r4, #0]
9001df1c:	f3bf 8f5b 	dmb	ish
9001df20:	07da      	lsls	r2, r3, #31
9001df22:	d40b      	bmi.n	9001df3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001df24:	4620      	mov	r0, r4
9001df26:	f008 f946 	bl	900261b6 <__cxa_guard_acquire>
9001df2a:	b138      	cbz	r0, 9001df3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
9001df2c:	4620      	mov	r0, r4
9001df2e:	f008 f94e 	bl	900261ce <__cxa_guard_release>
9001df32:	4a0f      	ldr	r2, [pc, #60]	; (9001df70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001df34:	490f      	ldr	r1, [pc, #60]	; (9001df74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
9001df36:	4810      	ldr	r0, [pc, #64]	; (9001df78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001df38:	f008 f936 	bl	900261a8 <__aeabi_atexit>
9001df3c:	4c0f      	ldr	r4, [pc, #60]	; (9001df7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9001df3e:	7823      	ldrb	r3, [r4, #0]
9001df40:	f3bf 8f5b 	dmb	ish
9001df44:	07db      	lsls	r3, r3, #31
9001df46:	d40b      	bmi.n	9001df60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001df48:	4620      	mov	r0, r4
9001df4a:	f008 f934 	bl	900261b6 <__cxa_guard_acquire>
9001df4e:	b138      	cbz	r0, 9001df60 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9001df50:	4620      	mov	r0, r4
9001df52:	f008 f93c 	bl	900261ce <__cxa_guard_release>
9001df56:	4a06      	ldr	r2, [pc, #24]	; (9001df70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
9001df58:	4909      	ldr	r1, [pc, #36]	; (9001df80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
9001df5a:	480a      	ldr	r0, [pc, #40]	; (9001df84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001df5c:	f008 f924 	bl	900261a8 <__aeabi_atexit>
9001df60:	4b05      	ldr	r3, [pc, #20]	; (9001df78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9001df62:	62eb      	str	r3, [r5, #44]	; 0x2c
9001df64:	4b07      	ldr	r3, [pc, #28]	; (9001df84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
9001df66:	632b      	str	r3, [r5, #48]	; 0x30
9001df68:	bd38      	pop	{r3, r4, r5, pc}
9001df6a:	bf00      	nop
9001df6c:	24023644 	.word	0x24023644
9001df70:	24000000 	.word	0x24000000
9001df74:	9001aa7f 	.word	0x9001aa7f
9001df78:	240000a8 	.word	0x240000a8
9001df7c:	24023648 	.word	0x24023648
9001df80:	9001aa7d 	.word	0x9001aa7d
9001df84:	240000ac 	.word	0x240000ac

9001df88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
9001df88:	b510      	push	{r4, lr}
9001df8a:	4604      	mov	r4, r0
9001df8c:	f7ff ff88 	bl	9001dea0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9001df90:	4620      	mov	r0, r4
9001df92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001df96:	f7ff bfbd 	b.w	9001df14 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

9001df9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
9001df9c:	b538      	push	{r3, r4, r5, lr}
9001df9e:	4c15      	ldr	r4, [pc, #84]	; (9001dff4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9001dfa0:	4605      	mov	r5, r0
9001dfa2:	7823      	ldrb	r3, [r4, #0]
9001dfa4:	f3bf 8f5b 	dmb	ish
9001dfa8:	07da      	lsls	r2, r3, #31
9001dfaa:	d40b      	bmi.n	9001dfc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001dfac:	4620      	mov	r0, r4
9001dfae:	f008 f902 	bl	900261b6 <__cxa_guard_acquire>
9001dfb2:	b138      	cbz	r0, 9001dfc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
9001dfb4:	4620      	mov	r0, r4
9001dfb6:	f008 f90a 	bl	900261ce <__cxa_guard_release>
9001dfba:	4a0f      	ldr	r2, [pc, #60]	; (9001dff8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001dfbc:	490f      	ldr	r1, [pc, #60]	; (9001dffc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
9001dfbe:	4810      	ldr	r0, [pc, #64]	; (9001e000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001dfc0:	f008 f8f2 	bl	900261a8 <__aeabi_atexit>
9001dfc4:	4c0f      	ldr	r4, [pc, #60]	; (9001e004 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
9001dfc6:	7823      	ldrb	r3, [r4, #0]
9001dfc8:	f3bf 8f5b 	dmb	ish
9001dfcc:	07db      	lsls	r3, r3, #31
9001dfce:	d40b      	bmi.n	9001dfe8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001dfd0:	4620      	mov	r0, r4
9001dfd2:	f008 f8f0 	bl	900261b6 <__cxa_guard_acquire>
9001dfd6:	b138      	cbz	r0, 9001dfe8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
9001dfd8:	4620      	mov	r0, r4
9001dfda:	f008 f8f8 	bl	900261ce <__cxa_guard_release>
9001dfde:	4a06      	ldr	r2, [pc, #24]	; (9001dff8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
9001dfe0:	4909      	ldr	r1, [pc, #36]	; (9001e008 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
9001dfe2:	480a      	ldr	r0, [pc, #40]	; (9001e00c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001dfe4:	f008 f8e0 	bl	900261a8 <__aeabi_atexit>
9001dfe8:	4b05      	ldr	r3, [pc, #20]	; (9001e000 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
9001dfea:	656b      	str	r3, [r5, #84]	; 0x54
9001dfec:	4b07      	ldr	r3, [pc, #28]	; (9001e00c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
9001dfee:	65ab      	str	r3, [r5, #88]	; 0x58
9001dff0:	bd38      	pop	{r3, r4, r5, pc}
9001dff2:	bf00      	nop
9001dff4:	2402367c 	.word	0x2402367c
9001dff8:	24000000 	.word	0x24000000
9001dffc:	9001aa6b 	.word	0x9001aa6b
9001e000:	240000e0 	.word	0x240000e0
9001e004:	24023680 	.word	0x24023680
9001e008:	9001aa69 	.word	0x9001aa69
9001e00c:	240000e4 	.word	0x240000e4

9001e010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
9001e010:	b538      	push	{r3, r4, r5, lr}
9001e012:	4c15      	ldr	r4, [pc, #84]	; (9001e068 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
9001e014:	4605      	mov	r5, r0
9001e016:	7823      	ldrb	r3, [r4, #0]
9001e018:	f3bf 8f5b 	dmb	ish
9001e01c:	07da      	lsls	r2, r3, #31
9001e01e:	d40b      	bmi.n	9001e038 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e020:	4620      	mov	r0, r4
9001e022:	f008 f8c8 	bl	900261b6 <__cxa_guard_acquire>
9001e026:	b138      	cbz	r0, 9001e038 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9001e028:	4620      	mov	r0, r4
9001e02a:	f008 f8d0 	bl	900261ce <__cxa_guard_release>
9001e02e:	4a0f      	ldr	r2, [pc, #60]	; (9001e06c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e030:	490f      	ldr	r1, [pc, #60]	; (9001e070 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9001e032:	4810      	ldr	r0, [pc, #64]	; (9001e074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e034:	f008 f8b8 	bl	900261a8 <__aeabi_atexit>
9001e038:	4c0f      	ldr	r4, [pc, #60]	; (9001e078 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
9001e03a:	7823      	ldrb	r3, [r4, #0]
9001e03c:	f3bf 8f5b 	dmb	ish
9001e040:	07db      	lsls	r3, r3, #31
9001e042:	d40b      	bmi.n	9001e05c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e044:	4620      	mov	r0, r4
9001e046:	f008 f8b6 	bl	900261b6 <__cxa_guard_acquire>
9001e04a:	b138      	cbz	r0, 9001e05c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
9001e04c:	4620      	mov	r0, r4
9001e04e:	f008 f8be 	bl	900261ce <__cxa_guard_release>
9001e052:	4a06      	ldr	r2, [pc, #24]	; (9001e06c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9001e054:	4909      	ldr	r1, [pc, #36]	; (9001e07c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
9001e056:	480a      	ldr	r0, [pc, #40]	; (9001e080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e058:	f008 f8a6 	bl	900261a8 <__aeabi_atexit>
9001e05c:	4b05      	ldr	r3, [pc, #20]	; (9001e074 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9001e05e:	64eb      	str	r3, [r5, #76]	; 0x4c
9001e060:	4b07      	ldr	r3, [pc, #28]	; (9001e080 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9001e062:	652b      	str	r3, [r5, #80]	; 0x50
9001e064:	bd38      	pop	{r3, r4, r5, pc}
9001e066:	bf00      	nop
9001e068:	24023684 	.word	0x24023684
9001e06c:	24000000 	.word	0x24000000
9001e070:	9001aa6f 	.word	0x9001aa6f
9001e074:	240000e8 	.word	0x240000e8
9001e078:	24023688 	.word	0x24023688
9001e07c:	9001aa6d 	.word	0x9001aa6d
9001e080:	240000ec 	.word	0x240000ec

9001e084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
9001e084:	b538      	push	{r3, r4, r5, lr}
9001e086:	4c15      	ldr	r4, [pc, #84]	; (9001e0dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
9001e088:	4605      	mov	r5, r0
9001e08a:	7823      	ldrb	r3, [r4, #0]
9001e08c:	f3bf 8f5b 	dmb	ish
9001e090:	07da      	lsls	r2, r3, #31
9001e092:	d40b      	bmi.n	9001e0ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e094:	4620      	mov	r0, r4
9001e096:	f008 f88e 	bl	900261b6 <__cxa_guard_acquire>
9001e09a:	b138      	cbz	r0, 9001e0ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
9001e09c:	4620      	mov	r0, r4
9001e09e:	f008 f896 	bl	900261ce <__cxa_guard_release>
9001e0a2:	4a0f      	ldr	r2, [pc, #60]	; (9001e0e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e0a4:	490f      	ldr	r1, [pc, #60]	; (9001e0e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
9001e0a6:	4810      	ldr	r0, [pc, #64]	; (9001e0e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e0a8:	f008 f87e 	bl	900261a8 <__aeabi_atexit>
9001e0ac:	4c0f      	ldr	r4, [pc, #60]	; (9001e0ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9001e0ae:	7823      	ldrb	r3, [r4, #0]
9001e0b0:	f3bf 8f5b 	dmb	ish
9001e0b4:	07db      	lsls	r3, r3, #31
9001e0b6:	d40b      	bmi.n	9001e0d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e0b8:	4620      	mov	r0, r4
9001e0ba:	f008 f87c 	bl	900261b6 <__cxa_guard_acquire>
9001e0be:	b138      	cbz	r0, 9001e0d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
9001e0c0:	4620      	mov	r0, r4
9001e0c2:	f008 f884 	bl	900261ce <__cxa_guard_release>
9001e0c6:	4a06      	ldr	r2, [pc, #24]	; (9001e0e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
9001e0c8:	4909      	ldr	r1, [pc, #36]	; (9001e0f0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
9001e0ca:	480a      	ldr	r0, [pc, #40]	; (9001e0f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e0cc:	f008 f86c 	bl	900261a8 <__aeabi_atexit>
9001e0d0:	4b05      	ldr	r3, [pc, #20]	; (9001e0e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
9001e0d2:	646b      	str	r3, [r5, #68]	; 0x44
9001e0d4:	4b07      	ldr	r3, [pc, #28]	; (9001e0f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
9001e0d6:	64ab      	str	r3, [r5, #72]	; 0x48
9001e0d8:	bd38      	pop	{r3, r4, r5, pc}
9001e0da:	bf00      	nop
9001e0dc:	2402364c 	.word	0x2402364c
9001e0e0:	24000000 	.word	0x24000000
9001e0e4:	9001aa73 	.word	0x9001aa73
9001e0e8:	240000b0 	.word	0x240000b0
9001e0ec:	24023650 	.word	0x24023650
9001e0f0:	9001aa71 	.word	0x9001aa71
9001e0f4:	240000b4 	.word	0x240000b4

9001e0f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
9001e0f8:	b538      	push	{r3, r4, r5, lr}
9001e0fa:	4c15      	ldr	r4, [pc, #84]	; (9001e150 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
9001e0fc:	4605      	mov	r5, r0
9001e0fe:	7823      	ldrb	r3, [r4, #0]
9001e100:	f3bf 8f5b 	dmb	ish
9001e104:	07da      	lsls	r2, r3, #31
9001e106:	d40b      	bmi.n	9001e120 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e108:	4620      	mov	r0, r4
9001e10a:	f008 f854 	bl	900261b6 <__cxa_guard_acquire>
9001e10e:	b138      	cbz	r0, 9001e120 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
9001e110:	4620      	mov	r0, r4
9001e112:	f008 f85c 	bl	900261ce <__cxa_guard_release>
9001e116:	4a0f      	ldr	r2, [pc, #60]	; (9001e154 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e118:	490f      	ldr	r1, [pc, #60]	; (9001e158 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
9001e11a:	4810      	ldr	r0, [pc, #64]	; (9001e15c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e11c:	f008 f844 	bl	900261a8 <__aeabi_atexit>
9001e120:	4c0f      	ldr	r4, [pc, #60]	; (9001e160 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
9001e122:	7823      	ldrb	r3, [r4, #0]
9001e124:	f3bf 8f5b 	dmb	ish
9001e128:	07db      	lsls	r3, r3, #31
9001e12a:	d40b      	bmi.n	9001e144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e12c:	4620      	mov	r0, r4
9001e12e:	f008 f842 	bl	900261b6 <__cxa_guard_acquire>
9001e132:	b138      	cbz	r0, 9001e144 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
9001e134:	4620      	mov	r0, r4
9001e136:	f008 f84a 	bl	900261ce <__cxa_guard_release>
9001e13a:	4a06      	ldr	r2, [pc, #24]	; (9001e154 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
9001e13c:	4909      	ldr	r1, [pc, #36]	; (9001e164 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
9001e13e:	480a      	ldr	r0, [pc, #40]	; (9001e168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e140:	f008 f832 	bl	900261a8 <__aeabi_atexit>
9001e144:	4b05      	ldr	r3, [pc, #20]	; (9001e15c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
9001e146:	63eb      	str	r3, [r5, #60]	; 0x3c
9001e148:	4b07      	ldr	r3, [pc, #28]	; (9001e168 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
9001e14a:	642b      	str	r3, [r5, #64]	; 0x40
9001e14c:	bd38      	pop	{r3, r4, r5, pc}
9001e14e:	bf00      	nop
9001e150:	2402366c 	.word	0x2402366c
9001e154:	24000000 	.word	0x24000000
9001e158:	9001aa77 	.word	0x9001aa77
9001e15c:	240000d0 	.word	0x240000d0
9001e160:	24023670 	.word	0x24023670
9001e164:	9001aa75 	.word	0x9001aa75
9001e168:	240000d4 	.word	0x240000d4

9001e16c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
9001e16c:	b510      	push	{r4, lr}
9001e16e:	4604      	mov	r4, r0
9001e170:	f7ff ff14 	bl	9001df9c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
9001e174:	4620      	mov	r0, r4
9001e176:	f7ff ff85 	bl	9001e084 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
9001e17a:	4620      	mov	r0, r4
9001e17c:	f7ff ff48 	bl	9001e010 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
9001e180:	4620      	mov	r0, r4
9001e182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e186:	f7ff bfb7 	b.w	9001e0f8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

9001e18c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
9001e18c:	b538      	push	{r3, r4, r5, lr}
9001e18e:	4c15      	ldr	r4, [pc, #84]	; (9001e1e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
9001e190:	4605      	mov	r5, r0
9001e192:	7823      	ldrb	r3, [r4, #0]
9001e194:	f3bf 8f5b 	dmb	ish
9001e198:	07da      	lsls	r2, r3, #31
9001e19a:	d40b      	bmi.n	9001e1b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e19c:	4620      	mov	r0, r4
9001e19e:	f008 f80a 	bl	900261b6 <__cxa_guard_acquire>
9001e1a2:	b138      	cbz	r0, 9001e1b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
9001e1a4:	4620      	mov	r0, r4
9001e1a6:	f008 f812 	bl	900261ce <__cxa_guard_release>
9001e1aa:	4a0f      	ldr	r2, [pc, #60]	; (9001e1e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e1ac:	490f      	ldr	r1, [pc, #60]	; (9001e1ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
9001e1ae:	4810      	ldr	r0, [pc, #64]	; (9001e1f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e1b0:	f007 fffa 	bl	900261a8 <__aeabi_atexit>
9001e1b4:	4c0f      	ldr	r4, [pc, #60]	; (9001e1f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
9001e1b6:	7823      	ldrb	r3, [r4, #0]
9001e1b8:	f3bf 8f5b 	dmb	ish
9001e1bc:	07db      	lsls	r3, r3, #31
9001e1be:	d40b      	bmi.n	9001e1d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e1c0:	4620      	mov	r0, r4
9001e1c2:	f007 fff8 	bl	900261b6 <__cxa_guard_acquire>
9001e1c6:	b138      	cbz	r0, 9001e1d8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
9001e1c8:	4620      	mov	r0, r4
9001e1ca:	f008 f800 	bl	900261ce <__cxa_guard_release>
9001e1ce:	4a06      	ldr	r2, [pc, #24]	; (9001e1e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
9001e1d0:	4909      	ldr	r1, [pc, #36]	; (9001e1f8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
9001e1d2:	480a      	ldr	r0, [pc, #40]	; (9001e1fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e1d4:	f007 ffe8 	bl	900261a8 <__aeabi_atexit>
9001e1d8:	4b05      	ldr	r3, [pc, #20]	; (9001e1f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
9001e1da:	666b      	str	r3, [r5, #100]	; 0x64
9001e1dc:	4b07      	ldr	r3, [pc, #28]	; (9001e1fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
9001e1de:	66ab      	str	r3, [r5, #104]	; 0x68
9001e1e0:	bd38      	pop	{r3, r4, r5, pc}
9001e1e2:	bf00      	nop
9001e1e4:	24023654 	.word	0x24023654
9001e1e8:	24000000 	.word	0x24000000
9001e1ec:	9001aa63 	.word	0x9001aa63
9001e1f0:	240000b8 	.word	0x240000b8
9001e1f4:	24023658 	.word	0x24023658
9001e1f8:	9001aa61 	.word	0x9001aa61
9001e1fc:	240000bc 	.word	0x240000bc

9001e200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
9001e200:	b538      	push	{r3, r4, r5, lr}
9001e202:	4c15      	ldr	r4, [pc, #84]	; (9001e258 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
9001e204:	4605      	mov	r5, r0
9001e206:	7823      	ldrb	r3, [r4, #0]
9001e208:	f3bf 8f5b 	dmb	ish
9001e20c:	07da      	lsls	r2, r3, #31
9001e20e:	d40b      	bmi.n	9001e228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e210:	4620      	mov	r0, r4
9001e212:	f007 ffd0 	bl	900261b6 <__cxa_guard_acquire>
9001e216:	b138      	cbz	r0, 9001e228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
9001e218:	4620      	mov	r0, r4
9001e21a:	f007 ffd8 	bl	900261ce <__cxa_guard_release>
9001e21e:	4a0f      	ldr	r2, [pc, #60]	; (9001e25c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e220:	490f      	ldr	r1, [pc, #60]	; (9001e260 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
9001e222:	4810      	ldr	r0, [pc, #64]	; (9001e264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e224:	f007 ffc0 	bl	900261a8 <__aeabi_atexit>
9001e228:	4c0f      	ldr	r4, [pc, #60]	; (9001e268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
9001e22a:	7823      	ldrb	r3, [r4, #0]
9001e22c:	f3bf 8f5b 	dmb	ish
9001e230:	07db      	lsls	r3, r3, #31
9001e232:	d40b      	bmi.n	9001e24c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e234:	4620      	mov	r0, r4
9001e236:	f007 ffbe 	bl	900261b6 <__cxa_guard_acquire>
9001e23a:	b138      	cbz	r0, 9001e24c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
9001e23c:	4620      	mov	r0, r4
9001e23e:	f007 ffc6 	bl	900261ce <__cxa_guard_release>
9001e242:	4a06      	ldr	r2, [pc, #24]	; (9001e25c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
9001e244:	4909      	ldr	r1, [pc, #36]	; (9001e26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
9001e246:	480a      	ldr	r0, [pc, #40]	; (9001e270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e248:	f007 ffae 	bl	900261a8 <__aeabi_atexit>
9001e24c:	4b05      	ldr	r3, [pc, #20]	; (9001e264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
9001e24e:	65eb      	str	r3, [r5, #92]	; 0x5c
9001e250:	4b07      	ldr	r3, [pc, #28]	; (9001e270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
9001e252:	662b      	str	r3, [r5, #96]	; 0x60
9001e254:	bd38      	pop	{r3, r4, r5, pc}
9001e256:	bf00      	nop
9001e258:	2402362c 	.word	0x2402362c
9001e25c:	24000000 	.word	0x24000000
9001e260:	9001aa67 	.word	0x9001aa67
9001e264:	24000090 	.word	0x24000090
9001e268:	24023630 	.word	0x24023630
9001e26c:	9001aa65 	.word	0x9001aa65
9001e270:	24000094 	.word	0x24000094

9001e274 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
9001e274:	b510      	push	{r4, lr}
9001e276:	4604      	mov	r4, r0
9001e278:	f7ff ff88 	bl	9001e18c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
9001e27c:	4620      	mov	r0, r4
9001e27e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e282:	f7ff bfbd 	b.w	9001e200 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

9001e288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
9001e288:	b538      	push	{r3, r4, r5, lr}
9001e28a:	4c15      	ldr	r4, [pc, #84]	; (9001e2e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
9001e28c:	4605      	mov	r5, r0
9001e28e:	7823      	ldrb	r3, [r4, #0]
9001e290:	f3bf 8f5b 	dmb	ish
9001e294:	07da      	lsls	r2, r3, #31
9001e296:	d40b      	bmi.n	9001e2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e298:	4620      	mov	r0, r4
9001e29a:	f007 ff8c 	bl	900261b6 <__cxa_guard_acquire>
9001e29e:	b138      	cbz	r0, 9001e2b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
9001e2a0:	4620      	mov	r0, r4
9001e2a2:	f007 ff94 	bl	900261ce <__cxa_guard_release>
9001e2a6:	4a0f      	ldr	r2, [pc, #60]	; (9001e2e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e2a8:	490f      	ldr	r1, [pc, #60]	; (9001e2e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
9001e2aa:	4810      	ldr	r0, [pc, #64]	; (9001e2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e2ac:	f007 ff7c 	bl	900261a8 <__aeabi_atexit>
9001e2b0:	4c0f      	ldr	r4, [pc, #60]	; (9001e2f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
9001e2b2:	7823      	ldrb	r3, [r4, #0]
9001e2b4:	f3bf 8f5b 	dmb	ish
9001e2b8:	07db      	lsls	r3, r3, #31
9001e2ba:	d40b      	bmi.n	9001e2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e2bc:	4620      	mov	r0, r4
9001e2be:	f007 ff7a 	bl	900261b6 <__cxa_guard_acquire>
9001e2c2:	b138      	cbz	r0, 9001e2d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
9001e2c4:	4620      	mov	r0, r4
9001e2c6:	f007 ff82 	bl	900261ce <__cxa_guard_release>
9001e2ca:	4a06      	ldr	r2, [pc, #24]	; (9001e2e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
9001e2cc:	4909      	ldr	r1, [pc, #36]	; (9001e2f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
9001e2ce:	480a      	ldr	r0, [pc, #40]	; (9001e2f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e2d0:	f007 ff6a 	bl	900261a8 <__aeabi_atexit>
9001e2d4:	4b05      	ldr	r3, [pc, #20]	; (9001e2ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
9001e2d6:	676b      	str	r3, [r5, #116]	; 0x74
9001e2d8:	4b07      	ldr	r3, [pc, #28]	; (9001e2f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
9001e2da:	67ab      	str	r3, [r5, #120]	; 0x78
9001e2dc:	bd38      	pop	{r3, r4, r5, pc}
9001e2de:	bf00      	nop
9001e2e0:	24023624 	.word	0x24023624
9001e2e4:	24000000 	.word	0x24000000
9001e2e8:	9001aa5b 	.word	0x9001aa5b
9001e2ec:	24000088 	.word	0x24000088
9001e2f0:	24023628 	.word	0x24023628
9001e2f4:	9001aa59 	.word	0x9001aa59
9001e2f8:	2400008c 	.word	0x2400008c

9001e2fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
9001e2fc:	b538      	push	{r3, r4, r5, lr}
9001e2fe:	4c15      	ldr	r4, [pc, #84]	; (9001e354 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
9001e300:	4605      	mov	r5, r0
9001e302:	7823      	ldrb	r3, [r4, #0]
9001e304:	f3bf 8f5b 	dmb	ish
9001e308:	07da      	lsls	r2, r3, #31
9001e30a:	d40b      	bmi.n	9001e324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e30c:	4620      	mov	r0, r4
9001e30e:	f007 ff52 	bl	900261b6 <__cxa_guard_acquire>
9001e312:	b138      	cbz	r0, 9001e324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
9001e314:	4620      	mov	r0, r4
9001e316:	f007 ff5a 	bl	900261ce <__cxa_guard_release>
9001e31a:	4a0f      	ldr	r2, [pc, #60]	; (9001e358 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e31c:	490f      	ldr	r1, [pc, #60]	; (9001e35c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
9001e31e:	4810      	ldr	r0, [pc, #64]	; (9001e360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e320:	f007 ff42 	bl	900261a8 <__aeabi_atexit>
9001e324:	4c0f      	ldr	r4, [pc, #60]	; (9001e364 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
9001e326:	7823      	ldrb	r3, [r4, #0]
9001e328:	f3bf 8f5b 	dmb	ish
9001e32c:	07db      	lsls	r3, r3, #31
9001e32e:	d40b      	bmi.n	9001e348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e330:	4620      	mov	r0, r4
9001e332:	f007 ff40 	bl	900261b6 <__cxa_guard_acquire>
9001e336:	b138      	cbz	r0, 9001e348 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
9001e338:	4620      	mov	r0, r4
9001e33a:	f007 ff48 	bl	900261ce <__cxa_guard_release>
9001e33e:	4a06      	ldr	r2, [pc, #24]	; (9001e358 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
9001e340:	4909      	ldr	r1, [pc, #36]	; (9001e368 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
9001e342:	480a      	ldr	r0, [pc, #40]	; (9001e36c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e344:	f007 ff30 	bl	900261a8 <__aeabi_atexit>
9001e348:	4b05      	ldr	r3, [pc, #20]	; (9001e360 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
9001e34a:	66eb      	str	r3, [r5, #108]	; 0x6c
9001e34c:	4b07      	ldr	r3, [pc, #28]	; (9001e36c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
9001e34e:	672b      	str	r3, [r5, #112]	; 0x70
9001e350:	bd38      	pop	{r3, r4, r5, pc}
9001e352:	bf00      	nop
9001e354:	2402361c 	.word	0x2402361c
9001e358:	24000000 	.word	0x24000000
9001e35c:	9001aa5f 	.word	0x9001aa5f
9001e360:	24000080 	.word	0x24000080
9001e364:	24023620 	.word	0x24023620
9001e368:	9001aa5d 	.word	0x9001aa5d
9001e36c:	24000084 	.word	0x24000084

9001e370 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
9001e370:	b510      	push	{r4, lr}
9001e372:	4604      	mov	r4, r0
9001e374:	f7ff ff88 	bl	9001e288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
9001e378:	4620      	mov	r0, r4
9001e37a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e37e:	f7ff bfbd 	b.w	9001e2fc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

9001e382 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
9001e382:	b510      	push	{r4, lr}
9001e384:	4604      	mov	r4, r0
9001e386:	f7ff fff3 	bl	9001e370 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
9001e38a:	4620      	mov	r0, r4
9001e38c:	f7ff ff72 	bl	9001e274 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
9001e390:	4620      	mov	r0, r4
9001e392:	f7ff fdf9 	bl	9001df88 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
9001e396:	4620      	mov	r0, r4
9001e398:	f7ff fcfa 	bl	9001dd90 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
9001e39c:	4620      	mov	r0, r4
9001e39e:	f7ff fd75 	bl	9001de8c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
9001e3a2:	4620      	mov	r0, r4
9001e3a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e3a8:	f7ff bee0 	b.w	9001e16c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

9001e3ac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
9001e3ac:	b538      	push	{r3, r4, r5, lr}
9001e3ae:	4c0b      	ldr	r4, [pc, #44]	; (9001e3dc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
9001e3b0:	4605      	mov	r5, r0
9001e3b2:	7823      	ldrb	r3, [r4, #0]
9001e3b4:	f3bf 8f5b 	dmb	ish
9001e3b8:	07db      	lsls	r3, r3, #31
9001e3ba:	d40b      	bmi.n	9001e3d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e3bc:	4620      	mov	r0, r4
9001e3be:	f007 fefa 	bl	900261b6 <__cxa_guard_acquire>
9001e3c2:	b138      	cbz	r0, 9001e3d4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
9001e3c4:	4620      	mov	r0, r4
9001e3c6:	f007 ff02 	bl	900261ce <__cxa_guard_release>
9001e3ca:	4a05      	ldr	r2, [pc, #20]	; (9001e3e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
9001e3cc:	4905      	ldr	r1, [pc, #20]	; (9001e3e4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
9001e3ce:	4806      	ldr	r0, [pc, #24]	; (9001e3e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e3d0:	f007 feea 	bl	900261a8 <__aeabi_atexit>
9001e3d4:	4b04      	ldr	r3, [pc, #16]	; (9001e3e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
9001e3d6:	67eb      	str	r3, [r5, #124]	; 0x7c
9001e3d8:	bd38      	pop	{r3, r4, r5, pc}
9001e3da:	bf00      	nop
9001e3dc:	24023610 	.word	0x24023610
9001e3e0:	24000000 	.word	0x24000000
9001e3e4:	9001aa57 	.word	0x9001aa57
9001e3e8:	24000078 	.word	0x24000078

9001e3ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
9001e3ec:	b538      	push	{r3, r4, r5, lr}
9001e3ee:	4c0b      	ldr	r4, [pc, #44]	; (9001e41c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
9001e3f0:	4605      	mov	r5, r0
9001e3f2:	7823      	ldrb	r3, [r4, #0]
9001e3f4:	f3bf 8f5b 	dmb	ish
9001e3f8:	07db      	lsls	r3, r3, #31
9001e3fa:	d40b      	bmi.n	9001e414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e3fc:	4620      	mov	r0, r4
9001e3fe:	f007 feda 	bl	900261b6 <__cxa_guard_acquire>
9001e402:	b138      	cbz	r0, 9001e414 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
9001e404:	4620      	mov	r0, r4
9001e406:	f007 fee2 	bl	900261ce <__cxa_guard_release>
9001e40a:	4a05      	ldr	r2, [pc, #20]	; (9001e420 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
9001e40c:	4905      	ldr	r1, [pc, #20]	; (9001e424 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
9001e40e:	4806      	ldr	r0, [pc, #24]	; (9001e428 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e410:	f007 feca 	bl	900261a8 <__aeabi_atexit>
9001e414:	4b04      	ldr	r3, [pc, #16]	; (9001e428 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
9001e416:	f8c5 3080 	str.w	r3, [r5, #128]	; 0x80
9001e41a:	bd38      	pop	{r3, r4, r5, pc}
9001e41c:	24023614 	.word	0x24023614
9001e420:	24000000 	.word	0x24000000
9001e424:	9001aa55 	.word	0x9001aa55
9001e428:	2400007c 	.word	0x2400007c

9001e42c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
9001e42c:	b570      	push	{r4, r5, r6, lr}
9001e42e:	4d0d      	ldr	r5, [pc, #52]	; (9001e464 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
9001e430:	4606      	mov	r6, r0
9001e432:	4c0d      	ldr	r4, [pc, #52]	; (9001e468 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
9001e434:	782b      	ldrb	r3, [r5, #0]
9001e436:	f3bf 8f5b 	dmb	ish
9001e43a:	f013 0f01 	tst.w	r3, #1
9001e43e:	d10d      	bne.n	9001e45c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e440:	4628      	mov	r0, r5
9001e442:	f007 feb8 	bl	900261b6 <__cxa_guard_acquire>
9001e446:	b148      	cbz	r0, 9001e45c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
9001e448:	4b08      	ldr	r3, [pc, #32]	; (9001e46c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
9001e44a:	4628      	mov	r0, r5
9001e44c:	6023      	str	r3, [r4, #0]
9001e44e:	f007 febe 	bl	900261ce <__cxa_guard_release>
9001e452:	4a07      	ldr	r2, [pc, #28]	; (9001e470 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
9001e454:	4620      	mov	r0, r4
9001e456:	4907      	ldr	r1, [pc, #28]	; (9001e474 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
9001e458:	f007 fea6 	bl	900261a8 <__aeabi_atexit>
9001e45c:	f8c6 4084 	str.w	r4, [r6, #132]	; 0x84
9001e460:	bd70      	pop	{r4, r5, r6, pc}
9001e462:	bf00      	nop
9001e464:	24023618 	.word	0x24023618
9001e468:	2402368c 	.word	0x2402368c
9001e46c:	9002a8f4 	.word	0x9002a8f4
9001e470:	24000000 	.word	0x24000000
9001e474:	9001aa53 	.word	0x9001aa53

9001e478 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
9001e478:	b510      	push	{r4, lr}
9001e47a:	4604      	mov	r4, r0
9001e47c:	f7ff ff96 	bl	9001e3ac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
9001e480:	4620      	mov	r0, r4
9001e482:	f7ff ffb3 	bl	9001e3ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
9001e486:	4620      	mov	r0, r4
9001e488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001e48c:	f7ff bfce 	b.w	9001e42c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

9001e490 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
9001e490:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e494:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
9001e498:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
9001e49c:	2d00      	cmp	r5, #0
9001e49e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
9001e4a2:	fb05 4c0e 	mla	ip, r5, lr, r4
9001e4a6:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
9001e4aa:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
9001e4ae:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
9001e4b2:	eb02 0a0c 	add.w	sl, r2, ip
9001e4b6:	8808      	ldrh	r0, [r1, #0]
9001e4b8:	f2c0 80b0 	blt.w	9001e61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e4bc:	45ab      	cmp	fp, r5
9001e4be:	f340 80ad 	ble.w	9001e61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
9001e4c2:	2c00      	cmp	r4, #0
9001e4c4:	f2c0 80a8 	blt.w	9001e618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e4c8:	45a6      	cmp	lr, r4
9001e4ca:	f340 80a5 	ble.w	9001e618 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
9001e4ce:	f812 200c 	ldrb.w	r2, [r2, ip]
9001e4d2:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
9001e4d6:	1c62      	adds	r2, r4, #1
9001e4d8:	f100 80a3 	bmi.w	9001e622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e4dc:	4596      	cmp	lr, r2
9001e4de:	f340 80a0 	ble.w	9001e622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e4e2:	f1b9 0f00 	cmp.w	r9, #0
9001e4e6:	f000 809c 	beq.w	9001e622 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
9001e4ea:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001e4ee:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001e4f2:	3501      	adds	r5, #1
9001e4f4:	f100 8099 	bmi.w	9001e62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e4f8:	45ab      	cmp	fp, r5
9001e4fa:	f340 8096 	ble.w	9001e62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e4fe:	2f00      	cmp	r7, #0
9001e500:	f000 8093 	beq.w	9001e62a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
9001e504:	2c00      	cmp	r4, #0
9001e506:	f2c0 808e 	blt.w	9001e626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e50a:	45a6      	cmp	lr, r4
9001e50c:	f340 808b 	ble.w	9001e626 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
9001e510:	f81a 200e 	ldrb.w	r2, [sl, lr]
9001e514:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
9001e518:	3401      	adds	r4, #1
9001e51a:	f100 8089 	bmi.w	9001e630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e51e:	45a6      	cmp	lr, r4
9001e520:	f340 8086 	ble.w	9001e630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e524:	f1b9 0f00 	cmp.w	r9, #0
9001e528:	f000 8082 	beq.w	9001e630 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
9001e52c:	44d6      	add	lr, sl
9001e52e:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001e532:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
9001e536:	ea4f 4408 	mov.w	r4, r8, lsl #16
9001e53a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9001e53e:	fb19 fe07 	smulbb	lr, r9, r7
9001e542:	f1c7 0210 	rsb	r2, r7, #16
9001e546:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e54a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9001e54e:	eba2 0209 	sub.w	r2, r2, r9
9001e552:	ea44 0808 	orr.w	r8, r4, r8
9001e556:	ea4f 440c 	mov.w	r4, ip, lsl #16
9001e55a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001e55e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
9001e562:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9001e566:	ebce 0747 	rsb	r7, lr, r7, lsl #1
9001e56a:	ea44 0c0c 	orr.w	ip, r4, ip
9001e56e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
9001e572:	fb04 f40c 	mul.w	r4, r4, ip
9001e576:	fb02 4808 	mla	r8, r2, r8, r4
9001e57a:	041a      	lsls	r2, r3, #16
9001e57c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e580:	b2b4      	uxth	r4, r6
9001e582:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e586:	43f6      	mvns	r6, r6
9001e588:	4313      	orrs	r3, r2
9001e58a:	042a      	lsls	r2, r5, #16
9001e58c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001e590:	b2f6      	uxtb	r6, r6
9001e592:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
9001e596:	fb0e 8303 	mla	r3, lr, r3, r8
9001e59a:	432a      	orrs	r2, r5
9001e59c:	fb07 3202 	mla	r2, r7, r2, r3
9001e5a0:	10c7      	asrs	r7, r0, #3
9001e5a2:	0d53      	lsrs	r3, r2, #21
9001e5a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001e5a8:	0952      	lsrs	r2, r2, #5
9001e5aa:	fb17 f706 	smulbb	r7, r7, r6
9001e5ae:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e5b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e5b6:	431a      	orrs	r2, r3
9001e5b8:	b293      	uxth	r3, r2
9001e5ba:	1202      	asrs	r2, r0, #8
9001e5bc:	121d      	asrs	r5, r3, #8
9001e5be:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
9001e5c2:	00c0      	lsls	r0, r0, #3
9001e5c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001e5c8:	fb12 f206 	smulbb	r2, r2, r6
9001e5cc:	b2c0      	uxtb	r0, r0
9001e5ce:	fb05 2504 	mla	r5, r5, r4, r2
9001e5d2:	10da      	asrs	r2, r3, #3
9001e5d4:	fb10 f006 	smulbb	r0, r0, r6
9001e5d8:	00db      	lsls	r3, r3, #3
9001e5da:	b2ad      	uxth	r5, r5
9001e5dc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001e5e0:	b2db      	uxtb	r3, r3
9001e5e2:	fb02 7204 	mla	r2, r2, r4, r7
9001e5e6:	fb03 0004 	mla	r0, r3, r4, r0
9001e5ea:	1c6b      	adds	r3, r5, #1
9001e5ec:	b292      	uxth	r2, r2
9001e5ee:	b280      	uxth	r0, r0
9001e5f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001e5f4:	1c43      	adds	r3, r0, #1
9001e5f6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001e5fa:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9001e5fe:	1c50      	adds	r0, r2, #1
9001e600:	eb00 2212 	add.w	r2, r0, r2, lsr #8
9001e604:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e608:	0952      	lsrs	r2, r2, #5
9001e60a:	432b      	orrs	r3, r5
9001e60c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001e610:	4313      	orrs	r3, r2
9001e612:	800b      	strh	r3, [r1, #0]
9001e614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e618:	4680      	mov	r8, r0
9001e61a:	e75c      	b.n	9001e4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
9001e61c:	4684      	mov	ip, r0
9001e61e:	4680      	mov	r8, r0
9001e620:	e767      	b.n	9001e4f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e622:	4684      	mov	ip, r0
9001e624:	e765      	b.n	9001e4f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
9001e626:	4605      	mov	r5, r0
9001e628:	e776      	b.n	9001e518 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
9001e62a:	4603      	mov	r3, r0
9001e62c:	4605      	mov	r5, r0
9001e62e:	e782      	b.n	9001e536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
9001e630:	4603      	mov	r3, r0
9001e632:	e780      	b.n	9001e536 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

9001e634 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001e634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e638:	b099      	sub	sp, #100	; 0x64
9001e63a:	9215      	str	r2, [sp, #84]	; 0x54
9001e63c:	9309      	str	r3, [sp, #36]	; 0x24
9001e63e:	9a27      	ldr	r2, [sp, #156]	; 0x9c
9001e640:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
9001e644:	9016      	str	r0, [sp, #88]	; 0x58
9001e646:	930d      	str	r3, [sp, #52]	; 0x34
9001e648:	6850      	ldr	r0, [r2, #4]
9001e64a:	910c      	str	r1, [sp, #48]	; 0x30
9001e64c:	6812      	ldr	r2, [r2, #0]
9001e64e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
9001e652:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
9001e656:	fb00 1303 	mla	r3, r0, r3, r1
9001e65a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
9001e65e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e660:	681b      	ldr	r3, [r3, #0]
9001e662:	930b      	str	r3, [sp, #44]	; 0x2c
9001e664:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e666:	685e      	ldr	r6, [r3, #4]
9001e668:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001e66a:	3604      	adds	r6, #4
9001e66c:	43db      	mvns	r3, r3
9001e66e:	b2db      	uxtb	r3, r3
9001e670:	930a      	str	r3, [sp, #40]	; 0x28
9001e672:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e674:	2b00      	cmp	r3, #0
9001e676:	dc03      	bgt.n	9001e680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001e678:	9b15      	ldr	r3, [sp, #84]	; 0x54
9001e67a:	2b00      	cmp	r3, #0
9001e67c:	f340 8225 	ble.w	9001eaca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e680:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e682:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001e686:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001e68a:	1e48      	subs	r0, r1, #1
9001e68c:	1e57      	subs	r7, r2, #1
9001e68e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e690:	2b00      	cmp	r3, #0
9001e692:	f340 80e3 	ble.w	9001e85c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001e696:	ea5f 4c2a 	movs.w	ip, sl, asr #16
9001e69a:	ea4f 4325 	mov.w	r3, r5, asr #16
9001e69e:	d406      	bmi.n	9001e6ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e6a0:	4584      	cmp	ip, r0
9001e6a2:	da04      	bge.n	9001e6ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e6a4:	2b00      	cmp	r3, #0
9001e6a6:	db02      	blt.n	9001e6ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001e6a8:	42bb      	cmp	r3, r7
9001e6aa:	f2c0 80d8 	blt.w	9001e85e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001e6ae:	f11c 0c01 	adds.w	ip, ip, #1
9001e6b2:	f100 80c9 	bmi.w	9001e848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e6b6:	4561      	cmp	r1, ip
9001e6b8:	f2c0 80c6 	blt.w	9001e848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e6bc:	3301      	adds	r3, #1
9001e6be:	f100 80c3 	bmi.w	9001e848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e6c2:	429a      	cmp	r2, r3
9001e6c4:	f2c0 80c0 	blt.w	9001e848 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001e6c8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
9001e6cc:	4647      	mov	r7, r8
9001e6ce:	f1bb 0f00 	cmp.w	fp, #0
9001e6d2:	f340 80e3 	ble.w	9001e89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9001e6d6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
9001e6d8:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001e6dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e6de:	f3ca 3003 	ubfx	r0, sl, #12, #4
9001e6e2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001e6e6:	ea5f 422a 	movs.w	r2, sl, asr #16
9001e6ea:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001e6ee:	689b      	ldr	r3, [r3, #8]
9001e6f0:	f100 8121 	bmi.w	9001e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e6f4:	f103 39ff 	add.w	r9, r3, #4294967295
9001e6f8:	454a      	cmp	r2, r9
9001e6fa:	f280 811c 	bge.w	9001e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e6fe:	f1bc 0f00 	cmp.w	ip, #0
9001e702:	f2c0 8118 	blt.w	9001e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e706:	f10e 39ff 	add.w	r9, lr, #4294967295
9001e70a:	45cc      	cmp	ip, r9
9001e70c:	f280 8113 	bge.w	9001e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9001e710:	b21b      	sxth	r3, r3
9001e712:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e714:	fb0c 2203 	mla	r2, ip, r3, r2
9001e718:	eb04 0902 	add.w	r9, r4, r2
9001e71c:	5ca2      	ldrb	r2, [r4, r2]
9001e71e:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9001e722:	2800      	cmp	r0, #0
9001e724:	f000 80fe 	beq.w	9001e924 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
9001e728:	f899 2001 	ldrb.w	r2, [r9, #1]
9001e72c:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
9001e730:	9211      	str	r2, [sp, #68]	; 0x44
9001e732:	b151      	cbz	r1, 9001e74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e734:	eb09 0203 	add.w	r2, r9, r3
9001e738:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e73c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e740:	930f      	str	r3, [sp, #60]	; 0x3c
9001e742:	7853      	ldrb	r3, [r2, #1]
9001e744:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e748:	9312      	str	r3, [sp, #72]	; 0x48
9001e74a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001e74c:	fb10 f201 	smulbb	r2, r0, r1
9001e750:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001e752:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001e756:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e75a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
9001e75e:	10d2      	asrs	r2, r2, #3
9001e760:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e764:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
9001e768:	ea4c 0c03 	orr.w	ip, ip, r3
9001e76c:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001e76e:	041b      	lsls	r3, r3, #16
9001e770:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e774:	4323      	orrs	r3, r4
9001e776:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001e778:	4353      	muls	r3, r2
9001e77a:	fb09 330c 	mla	r3, r9, ip, r3
9001e77e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001e782:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001e786:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001e78a:	ea4c 0e0e 	orr.w	lr, ip, lr
9001e78e:	f1c1 0c10 	rsb	ip, r1, #16
9001e792:	ebac 0c00 	sub.w	ip, ip, r0
9001e796:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001e79a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001e79e:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001e7a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001e7a4:	0418      	lsls	r0, r3, #16
9001e7a6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e7aa:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001e7ae:	4318      	orrs	r0, r3
9001e7b0:	fb02 c200 	mla	r2, r2, r0, ip
9001e7b4:	8838      	ldrh	r0, [r7, #0]
9001e7b6:	0d53      	lsrs	r3, r2, #21
9001e7b8:	0952      	lsrs	r2, r2, #5
9001e7ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001e7be:	1201      	asrs	r1, r0, #8
9001e7c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001e7c4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
9001e7c8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001e7cc:	00c0      	lsls	r0, r0, #3
9001e7ce:	431a      	orrs	r2, r3
9001e7d0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
9001e7d4:	fb11 f104 	smulbb	r1, r1, r4
9001e7d8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
9001e7dc:	b292      	uxth	r2, r2
9001e7de:	fb1e fe04 	smulbb	lr, lr, r4
9001e7e2:	b2c0      	uxtb	r0, r0
9001e7e4:	ea4f 2c22 	mov.w	ip, r2, asr #8
9001e7e8:	fb10 f004 	smulbb	r0, r0, r4
9001e7ec:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
9001e7f0:	fb0c 1c03 	mla	ip, ip, r3, r1
9001e7f4:	10d1      	asrs	r1, r2, #3
9001e7f6:	00d2      	lsls	r2, r2, #3
9001e7f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001e7fc:	fa1f fc8c 	uxth.w	ip, ip
9001e800:	b2d2      	uxtb	r2, r2
9001e802:	fb01 e103 	mla	r1, r1, r3, lr
9001e806:	fb02 0303 	mla	r3, r2, r3, r0
9001e80a:	b289      	uxth	r1, r1
9001e80c:	b29a      	uxth	r2, r3
9001e80e:	f10c 0301 	add.w	r3, ip, #1
9001e812:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001e816:	1c53      	adds	r3, r2, #1
9001e818:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001e81c:	1c4a      	adds	r2, r1, #1
9001e81e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
9001e822:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e826:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001e82a:	0949      	lsrs	r1, r1, #5
9001e82c:	ea43 030c 	orr.w	r3, r3, ip
9001e830:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001e834:	430b      	orrs	r3, r1
9001e836:	803b      	strh	r3, [r7, #0]
9001e838:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e83a:	3702      	adds	r7, #2
9001e83c:	f10b 3bff 	add.w	fp, fp, #4294967295
9001e840:	449a      	add	sl, r3
9001e842:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e844:	441d      	add	r5, r3
9001e846:	e742      	b.n	9001e6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001e848:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001e84a:	f108 0802 	add.w	r8, r8, #2
9001e84e:	449a      	add	sl, r3
9001e850:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001e852:	441d      	add	r5, r3
9001e854:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e856:	3b01      	subs	r3, #1
9001e858:	9309      	str	r3, [sp, #36]	; 0x24
9001e85a:	e718      	b.n	9001e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001e85c:	d023      	beq.n	9001e8a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001e85e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e860:	9825      	ldr	r0, [sp, #148]	; 0x94
9001e862:	3b01      	subs	r3, #1
9001e864:	fb00 a003 	mla	r0, r0, r3, sl
9001e868:	1400      	asrs	r0, r0, #16
9001e86a:	f53f af2d 	bmi.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e86e:	3901      	subs	r1, #1
9001e870:	4288      	cmp	r0, r1
9001e872:	f6bf af29 	bge.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e876:	9926      	ldr	r1, [sp, #152]	; 0x98
9001e878:	fb01 5303 	mla	r3, r1, r3, r5
9001e87c:	141b      	asrs	r3, r3, #16
9001e87e:	f53f af23 	bmi.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e882:	3a01      	subs	r2, #1
9001e884:	4293      	cmp	r3, r2
9001e886:	f6bf af1f 	bge.w	9001e6c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
9001e88a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9001e88e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
9001e892:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
9001e896:	f1be 0f00 	cmp.w	lr, #0
9001e89a:	dc6c      	bgt.n	9001e976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9001e89c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001e89e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001e8a2:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001e8a6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e8a8:	2b00      	cmp	r3, #0
9001e8aa:	f340 810e 	ble.w	9001eaca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
9001e8ae:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001e8b2:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e8b4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001e8b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001e8bc:	eef0 6a62 	vmov.f32	s13, s5
9001e8c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001e8c4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001e8c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e8cc:	ee16 aa90 	vmov	sl, s13
9001e8d0:	eef0 6a43 	vmov.f32	s13, s6
9001e8d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001e8d8:	ee16 5a90 	vmov	r5, s13
9001e8dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001e8e0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001e8e4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001e8e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001e8ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001e8f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001e8f4:	ee12 2a90 	vmov	r2, s5
9001e8f8:	eef0 2a47 	vmov.f32	s5, s14
9001e8fc:	fb92 f3f3 	sdiv	r3, r2, r3
9001e900:	ee13 2a10 	vmov	r2, s6
9001e904:	9325      	str	r3, [sp, #148]	; 0x94
9001e906:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e908:	eeb0 3a67 	vmov.f32	s6, s15
9001e90c:	fb92 f3f3 	sdiv	r3, r2, r3
9001e910:	9326      	str	r3, [sp, #152]	; 0x98
9001e912:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001e914:	9a15      	ldr	r2, [sp, #84]	; 0x54
9001e916:	3b01      	subs	r3, #1
9001e918:	930c      	str	r3, [sp, #48]	; 0x30
9001e91a:	9b22      	ldr	r3, [sp, #136]	; 0x88
9001e91c:	bf08      	it	eq
9001e91e:	4613      	moveq	r3, r2
9001e920:	9309      	str	r3, [sp, #36]	; 0x24
9001e922:	e6a6      	b.n	9001e672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001e924:	2900      	cmp	r1, #0
9001e926:	f43f af10 	beq.w	9001e74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e92a:	f819 3003 	ldrb.w	r3, [r9, r3]
9001e92e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e932:	930f      	str	r3, [sp, #60]	; 0x3c
9001e934:	e709      	b.n	9001e74a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001e936:	f112 0901 	adds.w	r9, r2, #1
9001e93a:	f53f af7d 	bmi.w	9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e93e:	454b      	cmp	r3, r9
9001e940:	f6ff af7a 	blt.w	9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e944:	f11c 0901 	adds.w	r9, ip, #1
9001e948:	f53f af76 	bmi.w	9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e94c:	45ce      	cmp	lr, r9
9001e94e:	f6ff af73 	blt.w	9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e952:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9001e954:	b21b      	sxth	r3, r3
9001e956:	9202      	str	r2, [sp, #8]
9001e958:	fa0f f28e 	sxth.w	r2, lr
9001e95c:	9300      	str	r3, [sp, #0]
9001e95e:	4633      	mov	r3, r6
9001e960:	9201      	str	r2, [sp, #4]
9001e962:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e964:	e9cd 1405 	strd	r1, r4, [sp, #20]
9001e968:	e9cd c003 	strd	ip, r0, [sp, #12]
9001e96c:	4639      	mov	r1, r7
9001e96e:	9816      	ldr	r0, [sp, #88]	; 0x58
9001e970:	f7ff fd8e 	bl	9001e490 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
9001e974:	e760      	b.n	9001e838 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001e976:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
9001e978:	ea4f 422a 	mov.w	r2, sl, asr #16
9001e97c:	1429      	asrs	r1, r5, #16
9001e97e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
9001e980:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001e984:	f3ca 3c03 	ubfx	ip, sl, #12, #4
9001e988:	f3c5 3003 	ubfx	r0, r5, #12, #4
9001e98c:	fb03 2101 	mla	r1, r3, r1, r2
9001e990:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
9001e992:	440a      	add	r2, r1
9001e994:	5c61      	ldrb	r1, [r4, r1]
9001e996:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
9001e99a:	f1bc 0f00 	cmp.w	ip, #0
9001e99e:	f000 808c 	beq.w	9001eaba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
9001e9a2:	7857      	ldrb	r7, [r2, #1]
9001e9a4:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
9001e9a8:	9413      	str	r4, [sp, #76]	; 0x4c
9001e9aa:	b140      	cbz	r0, 9001e9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001e9ac:	18d7      	adds	r7, r2, r3
9001e9ae:	5cd3      	ldrb	r3, [r2, r3]
9001e9b0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e9b4:	9310      	str	r3, [sp, #64]	; 0x40
9001e9b6:	787b      	ldrb	r3, [r7, #1]
9001e9b8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001e9bc:	9314      	str	r3, [sp, #80]	; 0x50
9001e9be:	9b13      	ldr	r3, [sp, #76]	; 0x4c
9001e9c0:	fb1c f200 	smulbb	r2, ip, r0
9001e9c4:	9c14      	ldr	r4, [sp, #80]	; 0x50
9001e9c6:	f10e 3eff 	add.w	lr, lr, #4294967295
9001e9ca:	041f      	lsls	r7, r3, #16
9001e9cc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001e9d0:	10d2      	asrs	r2, r2, #3
9001e9d2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
9001e9d6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
9001e9da:	431f      	orrs	r7, r3
9001e9dc:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
9001e9e0:	9317      	str	r3, [sp, #92]	; 0x5c
9001e9e2:	9b14      	ldr	r3, [sp, #80]	; 0x50
9001e9e4:	9c17      	ldr	r4, [sp, #92]	; 0x5c
9001e9e6:	041b      	lsls	r3, r3, #16
9001e9e8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001e9ec:	ea43 030b 	orr.w	r3, r3, fp
9001e9f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001e9f4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001e9f8:	4353      	muls	r3, r2
9001e9fa:	fb04 3707 	mla	r7, r4, r7, r3
9001e9fe:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001ea02:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9001ea04:	ea43 0b01 	orr.w	fp, r3, r1
9001ea08:	f1c0 0110 	rsb	r1, r0, #16
9001ea0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001ea0e:	eba1 0c0c 	sub.w	ip, r1, ip
9001ea12:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ea16:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001ea1a:	fb0c 770b 	mla	r7, ip, fp, r7
9001ea1e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ea22:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
9001ea26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ea2a:	ea4c 0c0b 	orr.w	ip, ip, fp
9001ea2e:	fb02 770c 	mla	r7, r2, ip, r7
9001ea32:	9a0e      	ldr	r2, [sp, #56]	; 0x38
9001ea34:	0d79      	lsrs	r1, r7, #21
9001ea36:	8812      	ldrh	r2, [r2, #0]
9001ea38:	097f      	lsrs	r7, r7, #5
9001ea3a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001ea3e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001ea42:	430f      	orrs	r7, r1
9001ea44:	1211      	asrs	r1, r2, #8
9001ea46:	b2bb      	uxth	r3, r7
9001ea48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
9001ea4c:	10d7      	asrs	r7, r2, #3
9001ea4e:	fb11 f104 	smulbb	r1, r1, r4
9001ea52:	1218      	asrs	r0, r3, #8
9001ea54:	00d2      	lsls	r2, r2, #3
9001ea56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001ea5a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9001ea5e:	fb17 f704 	smulbb	r7, r7, r4
9001ea62:	b2d2      	uxtb	r2, r2
9001ea64:	fb00 1009 	mla	r0, r0, r9, r1
9001ea68:	10d9      	asrs	r1, r3, #3
9001ea6a:	fb12 f204 	smulbb	r2, r2, r4
9001ea6e:	00db      	lsls	r3, r3, #3
9001ea70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
9001ea74:	b280      	uxth	r0, r0
9001ea76:	b2db      	uxtb	r3, r3
9001ea78:	fb01 7109 	mla	r1, r1, r9, r7
9001ea7c:	fb03 2309 	mla	r3, r3, r9, r2
9001ea80:	1c42      	adds	r2, r0, #1
9001ea82:	b289      	uxth	r1, r1
9001ea84:	b29b      	uxth	r3, r3
9001ea86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9001ea8a:	1c4f      	adds	r7, r1, #1
9001ea8c:	1c5a      	adds	r2, r3, #1
9001ea8e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9001ea92:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9001ea96:	eb02 2213 	add.w	r2, r2, r3, lsr #8
9001ea9a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ea9c:	0949      	lsrs	r1, r1, #5
9001ea9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001eaa2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9001eaa6:	4310      	orrs	r0, r2
9001eaa8:	4308      	orrs	r0, r1
9001eaaa:	f823 0b02 	strh.w	r0, [r3], #2
9001eaae:	930e      	str	r3, [sp, #56]	; 0x38
9001eab0:	9b25      	ldr	r3, [sp, #148]	; 0x94
9001eab2:	449a      	add	sl, r3
9001eab4:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001eab6:	441d      	add	r5, r3
9001eab8:	e6ed      	b.n	9001e896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
9001eaba:	2800      	cmp	r0, #0
9001eabc:	f43f af7f 	beq.w	9001e9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001eac0:	5cd3      	ldrb	r3, [r2, r3]
9001eac2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9001eac6:	9310      	str	r3, [sp, #64]	; 0x40
9001eac8:	e779      	b.n	9001e9be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001eaca:	b019      	add	sp, #100	; 0x64
9001eacc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ead0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
9001ead0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001ead4:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
9001ead8:	f9bd e020 	ldrsh.w	lr, [sp, #32]
9001eadc:	f1b8 0f00 	cmp.w	r8, #0
9001eae0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
9001eae4:	fb08 470e 	mla	r7, r8, lr, r4
9001eae8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
9001eaec:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
9001eaf0:	eb02 0907 	add.w	r9, r2, r7
9001eaf4:	8808      	ldrh	r0, [r1, #0]
9001eaf6:	db67      	blt.n	9001ebc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001eaf8:	45c2      	cmp	sl, r8
9001eafa:	dd65      	ble.n	9001ebc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
9001eafc:	2c00      	cmp	r4, #0
9001eafe:	db61      	blt.n	9001ebc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001eb00:	45a6      	cmp	lr, r4
9001eb02:	dd5f      	ble.n	9001ebc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9001eb04:	5dd2      	ldrb	r2, [r2, r7]
9001eb06:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
9001eb0a:	1c62      	adds	r2, r4, #1
9001eb0c:	d45f      	bmi.n	9001ebce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001eb0e:	4596      	cmp	lr, r2
9001eb10:	dd5d      	ble.n	9001ebce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001eb12:	2d00      	cmp	r5, #0
9001eb14:	d05b      	beq.n	9001ebce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9001eb16:	f899 2001 	ldrb.w	r2, [r9, #1]
9001eb1a:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
9001eb1e:	f118 0801 	adds.w	r8, r8, #1
9001eb22:	d458      	bmi.n	9001ebd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001eb24:	45c2      	cmp	sl, r8
9001eb26:	dd56      	ble.n	9001ebd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001eb28:	2e00      	cmp	r6, #0
9001eb2a:	d054      	beq.n	9001ebd6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9001eb2c:	2c00      	cmp	r4, #0
9001eb2e:	db50      	blt.n	9001ebd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001eb30:	45a6      	cmp	lr, r4
9001eb32:	dd4e      	ble.n	9001ebd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9001eb34:	f819 200e 	ldrb.w	r2, [r9, lr]
9001eb38:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
9001eb3c:	3401      	adds	r4, #1
9001eb3e:	d407      	bmi.n	9001eb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001eb40:	45a6      	cmp	lr, r4
9001eb42:	dd05      	ble.n	9001eb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001eb44:	b125      	cbz	r5, 9001eb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9001eb46:	44ce      	add	lr, r9
9001eb48:	f89e 0001 	ldrb.w	r0, [lr, #1]
9001eb4c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
9001eb50:	fb15 f406 	smulbb	r4, r5, r6
9001eb54:	ea4f 430c 	mov.w	r3, ip, lsl #16
9001eb58:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9001eb5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001eb60:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001eb64:	f3c4 04c7 	ubfx	r4, r4, #3, #8
9001eb68:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9001eb6c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9001eb70:	ea43 0c0c 	orr.w	ip, r3, ip
9001eb74:	f1c6 0310 	rsb	r3, r6, #16
9001eb78:	ea4e 0707 	orr.w	r7, lr, r7
9001eb7c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
9001eb80:	1b5b      	subs	r3, r3, r5
9001eb82:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
9001eb86:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001eb8a:	437d      	muls	r5, r7
9001eb8c:	fb03 5c0c 	mla	ip, r3, ip, r5
9001eb90:	0403      	lsls	r3, r0, #16
9001eb92:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001eb96:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001eb9a:	4318      	orrs	r0, r3
9001eb9c:	0413      	lsls	r3, r2, #16
9001eb9e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001eba2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001eba6:	fb04 c000 	mla	r0, r4, r0, ip
9001ebaa:	4313      	orrs	r3, r2
9001ebac:	fb06 0003 	mla	r0, r6, r3, r0
9001ebb0:	0d43      	lsrs	r3, r0, #21
9001ebb2:	0940      	lsrs	r0, r0, #5
9001ebb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ebb8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9001ebbc:	4318      	orrs	r0, r3
9001ebbe:	8008      	strh	r0, [r1, #0]
9001ebc0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ebc4:	4684      	mov	ip, r0
9001ebc6:	e7a0      	b.n	9001eb0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
9001ebc8:	4607      	mov	r7, r0
9001ebca:	4684      	mov	ip, r0
9001ebcc:	e7a7      	b.n	9001eb1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ebce:	4607      	mov	r7, r0
9001ebd0:	e7a5      	b.n	9001eb1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9001ebd2:	4602      	mov	r2, r0
9001ebd4:	e7b2      	b.n	9001eb3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9001ebd6:	4602      	mov	r2, r0
9001ebd8:	e7ba      	b.n	9001eb50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

9001ebda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ebda:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ebde:	b093      	sub	sp, #76	; 0x4c
9001ebe0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
9001ebe4:	920f      	str	r2, [sp, #60]	; 0x3c
9001ebe6:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001ebe8:	9010      	str	r0, [sp, #64]	; 0x40
9001ebea:	9108      	str	r1, [sp, #32]
9001ebec:	6850      	ldr	r0, [r2, #4]
9001ebee:	9306      	str	r3, [sp, #24]
9001ebf0:	6812      	ldr	r2, [r2, #0]
9001ebf2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
9001ebf6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
9001ebfa:	fb00 1303 	mla	r3, r0, r3, r1
9001ebfe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9001ec02:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ec04:	681b      	ldr	r3, [r3, #0]
9001ec06:	9307      	str	r3, [sp, #28]
9001ec08:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ec0a:	685f      	ldr	r7, [r3, #4]
9001ec0c:	3704      	adds	r7, #4
9001ec0e:	9b08      	ldr	r3, [sp, #32]
9001ec10:	2b00      	cmp	r3, #0
9001ec12:	dc03      	bgt.n	9001ec1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9001ec14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001ec16:	2b00      	cmp	r3, #0
9001ec18:	f340 81b2 	ble.w	9001ef80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001ec1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ec1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001ec22:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001ec26:	1e48      	subs	r0, r1, #1
9001ec28:	f102 3cff 	add.w	ip, r2, #4294967295
9001ec2c:	9b06      	ldr	r3, [sp, #24]
9001ec2e:	2b00      	cmp	r3, #0
9001ec30:	f340 80a9 	ble.w	9001ed86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001ec34:	ea5f 4e24 	movs.w	lr, r4, asr #16
9001ec38:	ea4f 4326 	mov.w	r3, r6, asr #16
9001ec3c:	d406      	bmi.n	9001ec4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ec3e:	4586      	cmp	lr, r0
9001ec40:	da04      	bge.n	9001ec4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ec42:	2b00      	cmp	r3, #0
9001ec44:	db02      	blt.n	9001ec4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001ec46:	4563      	cmp	r3, ip
9001ec48:	f2c0 809e 	blt.w	9001ed88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
9001ec4c:	f11e 0e01 	adds.w	lr, lr, #1
9001ec50:	f100 808f 	bmi.w	9001ed72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ec54:	4571      	cmp	r1, lr
9001ec56:	f2c0 808c 	blt.w	9001ed72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ec5a:	3301      	adds	r3, #1
9001ec5c:	f100 8089 	bmi.w	9001ed72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ec60:	429a      	cmp	r2, r3
9001ec62:	f2c0 8086 	blt.w	9001ed72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9001ec66:	f8dd b018 	ldr.w	fp, [sp, #24]
9001ec6a:	46c8      	mov	r8, r9
9001ec6c:	f1bb 0f00 	cmp.w	fp, #0
9001ec70:	f340 80a6 	ble.w	9001edc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001ec74:	9a24      	ldr	r2, [sp, #144]	; 0x90
9001ec76:	ea4f 4c26 	mov.w	ip, r6, asr #16
9001ec7a:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ec7c:	f3c4 3003 	ubfx	r0, r4, #12, #4
9001ec80:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9001ec84:	1422      	asrs	r2, r4, #16
9001ec86:	f3c6 3103 	ubfx	r1, r6, #12, #4
9001ec8a:	689b      	ldr	r3, [r3, #8]
9001ec8c:	f100 80e3 	bmi.w	9001ee56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ec90:	f103 3aff 	add.w	sl, r3, #4294967295
9001ec94:	4552      	cmp	r2, sl
9001ec96:	f280 80de 	bge.w	9001ee56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ec9a:	f1bc 0f00 	cmp.w	ip, #0
9001ec9e:	f2c0 80da 	blt.w	9001ee56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001eca2:	f10e 3aff 	add.w	sl, lr, #4294967295
9001eca6:	45d4      	cmp	ip, sl
9001eca8:	f280 80d5 	bge.w	9001ee56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
9001ecac:	b21b      	sxth	r3, r3
9001ecae:	9d07      	ldr	r5, [sp, #28]
9001ecb0:	fb0c 2203 	mla	r2, ip, r3, r2
9001ecb4:	eb05 0a02 	add.w	sl, r5, r2
9001ecb8:	5caa      	ldrb	r2, [r5, r2]
9001ecba:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
9001ecbe:	2800      	cmp	r0, #0
9001ecc0:	f000 80c0 	beq.w	9001ee44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
9001ecc4:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ecc8:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
9001eccc:	920b      	str	r2, [sp, #44]	; 0x2c
9001ecce:	b151      	cbz	r1, 9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ecd0:	eb0a 0203 	add.w	r2, sl, r3
9001ecd4:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001ecd8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ecdc:	9309      	str	r3, [sp, #36]	; 0x24
9001ecde:	7853      	ldrb	r3, [r2, #1]
9001ece0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ece4:	930c      	str	r3, [sp, #48]	; 0x30
9001ece6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001ece8:	fb10 f201 	smulbb	r2, r0, r1
9001ecec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
9001ecee:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001ecf2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ecf6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
9001ecfa:	10d2      	asrs	r2, r2, #3
9001ecfc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ed00:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9001ed04:	ea4c 0c03 	orr.w	ip, ip, r3
9001ed08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001ed0a:	041b      	lsls	r3, r3, #16
9001ed0c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ed10:	432b      	orrs	r3, r5
9001ed12:	4353      	muls	r3, r2
9001ed14:	fb0a 330c 	mla	r3, sl, ip, r3
9001ed18:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
9001ed1c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9001ed20:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001ed24:	ea4c 0e0e 	orr.w	lr, ip, lr
9001ed28:	f1c1 0c10 	rsb	ip, r1, #16
9001ed2c:	ebac 0c00 	sub.w	ip, ip, r0
9001ed30:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9001ed34:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
9001ed38:	fb0c 3c0e 	mla	ip, ip, lr, r3
9001ed3c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001ed3e:	0418      	lsls	r0, r3, #16
9001ed40:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001ed44:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
9001ed48:	4318      	orrs	r0, r3
9001ed4a:	fb02 c200 	mla	r2, r2, r0, ip
9001ed4e:	0d53      	lsrs	r3, r2, #21
9001ed50:	0952      	lsrs	r2, r2, #5
9001ed52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ed56:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9001ed5a:	431a      	orrs	r2, r3
9001ed5c:	f8a8 2000 	strh.w	r2, [r8]
9001ed60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ed62:	f108 0802 	add.w	r8, r8, #2
9001ed66:	f10b 3bff 	add.w	fp, fp, #4294967295
9001ed6a:	441c      	add	r4, r3
9001ed6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ed6e:	441e      	add	r6, r3
9001ed70:	e77c      	b.n	9001ec6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001ed72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ed74:	f109 0902 	add.w	r9, r9, #2
9001ed78:	441c      	add	r4, r3
9001ed7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ed7c:	441e      	add	r6, r3
9001ed7e:	9b06      	ldr	r3, [sp, #24]
9001ed80:	3b01      	subs	r3, #1
9001ed82:	9306      	str	r3, [sp, #24]
9001ed84:	e752      	b.n	9001ec2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001ed86:	d020      	beq.n	9001edca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001ed88:	9b06      	ldr	r3, [sp, #24]
9001ed8a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001ed8c:	3b01      	subs	r3, #1
9001ed8e:	fb00 4003 	mla	r0, r0, r3, r4
9001ed92:	1400      	asrs	r0, r0, #16
9001ed94:	f53f af67 	bmi.w	9001ec66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001ed98:	3901      	subs	r1, #1
9001ed9a:	4288      	cmp	r0, r1
9001ed9c:	f6bf af63 	bge.w	9001ec66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001eda0:	9920      	ldr	r1, [sp, #128]	; 0x80
9001eda2:	fb01 6303 	mla	r3, r1, r3, r6
9001eda6:	141b      	asrs	r3, r3, #16
9001eda8:	f53f af5d 	bmi.w	9001ec66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001edac:	3a01      	subs	r2, #1
9001edae:	4293      	cmp	r3, r2
9001edb0:	f6bf af59 	bge.w	9001ec66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001edb4:	f8dd 8018 	ldr.w	r8, [sp, #24]
9001edb8:	46ca      	mov	sl, r9
9001edba:	f1b8 0f00 	cmp.w	r8, #0
9001edbe:	dc67      	bgt.n	9001ee90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001edc0:	9b06      	ldr	r3, [sp, #24]
9001edc2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
9001edc6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9001edca:	9b08      	ldr	r3, [sp, #32]
9001edcc:	2b00      	cmp	r3, #0
9001edce:	f340 80d7 	ble.w	9001ef80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9001edd2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001edd6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001edd8:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001eddc:	eeb0 6a62 	vmov.f32	s12, s5
9001ede0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ede4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ede8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001edec:	ee16 4a10 	vmov	r4, s12
9001edf0:	eeb0 6a43 	vmov.f32	s12, s6
9001edf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001edf8:	ee16 6a10 	vmov	r6, s12
9001edfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ee00:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ee04:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ee08:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ee0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ee10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ee14:	ee12 2a90 	vmov	r2, s5
9001ee18:	eef0 2a47 	vmov.f32	s5, s14
9001ee1c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ee20:	ee13 2a10 	vmov	r2, s6
9001ee24:	931f      	str	r3, [sp, #124]	; 0x7c
9001ee26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ee28:	eeb0 3a67 	vmov.f32	s6, s15
9001ee2c:	fb92 f3f3 	sdiv	r3, r2, r3
9001ee30:	9320      	str	r3, [sp, #128]	; 0x80
9001ee32:	9b08      	ldr	r3, [sp, #32]
9001ee34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9001ee36:	3b01      	subs	r3, #1
9001ee38:	9308      	str	r3, [sp, #32]
9001ee3a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001ee3c:	bf08      	it	eq
9001ee3e:	4613      	moveq	r3, r2
9001ee40:	9306      	str	r3, [sp, #24]
9001ee42:	e6e4      	b.n	9001ec0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9001ee44:	2900      	cmp	r1, #0
9001ee46:	f43f af4e 	beq.w	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ee4a:	f81a 3003 	ldrb.w	r3, [sl, r3]
9001ee4e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ee52:	9309      	str	r3, [sp, #36]	; 0x24
9001ee54:	e747      	b.n	9001ece6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9001ee56:	f112 0a01 	adds.w	sl, r2, #1
9001ee5a:	d481      	bmi.n	9001ed60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ee5c:	4553      	cmp	r3, sl
9001ee5e:	f6ff af7f 	blt.w	9001ed60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ee62:	f11c 0a01 	adds.w	sl, ip, #1
9001ee66:	f53f af7b 	bmi.w	9001ed60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ee6a:	45d6      	cmp	lr, sl
9001ee6c:	f6ff af78 	blt.w	9001ed60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ee70:	b21b      	sxth	r3, r3
9001ee72:	e9cd 2c02 	strd	r2, ip, [sp, #8]
9001ee76:	fa0f f28e 	sxth.w	r2, lr
9001ee7a:	9300      	str	r3, [sp, #0]
9001ee7c:	463b      	mov	r3, r7
9001ee7e:	9201      	str	r2, [sp, #4]
9001ee80:	9a07      	ldr	r2, [sp, #28]
9001ee82:	e9cd 0104 	strd	r0, r1, [sp, #16]
9001ee86:	4641      	mov	r1, r8
9001ee88:	9810      	ldr	r0, [sp, #64]	; 0x40
9001ee8a:	f7ff fe21 	bl	9001ead0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
9001ee8e:	e767      	b.n	9001ed60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001ee90:	9b24      	ldr	r3, [sp, #144]	; 0x90
9001ee92:	1422      	asrs	r2, r4, #16
9001ee94:	1431      	asrs	r1, r6, #16
9001ee96:	9d07      	ldr	r5, [sp, #28]
9001ee98:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9001ee9c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
9001eea0:	f3c6 3003 	ubfx	r0, r6, #12, #4
9001eea4:	fb03 2101 	mla	r1, r3, r1, r2
9001eea8:	9a07      	ldr	r2, [sp, #28]
9001eeaa:	440a      	add	r2, r1
9001eeac:	5c69      	ldrb	r1, [r5, r1]
9001eeae:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
9001eeb2:	f1be 0f00 	cmp.w	lr, #0
9001eeb6:	d05c      	beq.n	9001ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
9001eeb8:	f892 c001 	ldrb.w	ip, [r2, #1]
9001eebc:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
9001eec0:	950d      	str	r5, [sp, #52]	; 0x34
9001eec2:	b150      	cbz	r0, 9001eeda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001eec4:	eb02 0c03 	add.w	ip, r2, r3
9001eec8:	5cd3      	ldrb	r3, [r2, r3]
9001eeca:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eece:	930a      	str	r3, [sp, #40]	; 0x28
9001eed0:	f89c 3001 	ldrb.w	r3, [ip, #1]
9001eed4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001eed8:	930e      	str	r3, [sp, #56]	; 0x38
9001eeda:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9001eedc:	fb1e f200 	smulbb	r2, lr, r0
9001eee0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
9001eee2:	f108 38ff 	add.w	r8, r8, #4294967295
9001eee6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9001eeea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
9001eeee:	10d2      	asrs	r2, r2, #3
9001eef0:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
9001eef4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9001eef8:	ea4c 0c03 	orr.w	ip, ip, r3
9001eefc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
9001ef00:	9311      	str	r3, [sp, #68]	; 0x44
9001ef02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001ef04:	9d11      	ldr	r5, [sp, #68]	; 0x44
9001ef06:	041b      	lsls	r3, r3, #16
9001ef08:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
9001ef0c:	ea43 030b 	orr.w	r3, r3, fp
9001ef10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9001ef14:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
9001ef18:	4353      	muls	r3, r2
9001ef1a:	fb05 3c0c 	mla	ip, r5, ip, r3
9001ef1e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
9001ef22:	ea43 0b01 	orr.w	fp, r3, r1
9001ef26:	f1c0 0110 	rsb	r1, r0, #16
9001ef2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001ef2c:	eba1 0e0e 	sub.w	lr, r1, lr
9001ef30:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9001ef34:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
9001ef38:	fb0e cc0b 	mla	ip, lr, fp, ip
9001ef3c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
9001ef40:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
9001ef44:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
9001ef48:	ea4b 0e0e 	orr.w	lr, fp, lr
9001ef4c:	fb02 cc0e 	mla	ip, r2, lr, ip
9001ef50:	ea4f 535c 	mov.w	r3, ip, lsr #21
9001ef54:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001ef58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001ef5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9001ef60:	ea43 0c0c 	orr.w	ip, r3, ip
9001ef64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001ef66:	441c      	add	r4, r3
9001ef68:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001ef6a:	f82a cb02 	strh.w	ip, [sl], #2
9001ef6e:	441e      	add	r6, r3
9001ef70:	e723      	b.n	9001edba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001ef72:	2800      	cmp	r0, #0
9001ef74:	d0b1      	beq.n	9001eeda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ef76:	5cd3      	ldrb	r3, [r2, r3]
9001ef78:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9001ef7c:	930a      	str	r3, [sp, #40]	; 0x28
9001ef7e:	e7ac      	b.n	9001eeda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
9001ef80:	b013      	add	sp, #76	; 0x4c
9001ef82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ef86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
9001ef86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef8a:	880d      	ldrh	r5, [r1, #0]
9001ef8c:	b087      	sub	sp, #28
9001ef8e:	10ef      	asrs	r7, r5, #3
9001ef90:	9103      	str	r1, [sp, #12]
9001ef92:	ea4f 2a25 	mov.w	sl, r5, asr #8
9001ef96:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
9001ef9a:	00ed      	lsls	r5, r5, #3
9001ef9c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
9001efa0:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
9001efa4:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
9001efa8:	b2ed      	uxtb	r5, r5
9001efaa:	9701      	str	r7, [sp, #4]
9001efac:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
9001efb0:	9502      	str	r5, [sp, #8]
9001efb2:	9d01      	ldr	r5, [sp, #4]
9001efb4:	9902      	ldr	r1, [sp, #8]
9001efb6:	022d      	lsls	r5, r5, #8
9001efb8:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
9001efbc:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
9001efc0:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
9001efc4:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
9001efc8:	430d      	orrs	r5, r1
9001efca:	fb06 0709 	mla	r7, r6, r9, r0
9001efce:	2e00      	cmp	r6, #0
9001efd0:	9505      	str	r5, [sp, #20]
9001efd2:	eb02 0c07 	add.w	ip, r2, r7
9001efd6:	f2c0 80b6 	blt.w	9001f146 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001efda:	45b3      	cmp	fp, r6
9001efdc:	f340 80b3 	ble.w	9001f146 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
9001efe0:	2800      	cmp	r0, #0
9001efe2:	f2c0 80ae 	blt.w	9001f142 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001efe6:	4581      	cmp	r9, r0
9001efe8:	f340 80ab 	ble.w	9001f142 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9001efec:	5dd7      	ldrb	r7, [r2, r7]
9001efee:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001eff2:	441f      	add	r7, r3
9001eff4:	1c42      	adds	r2, r0, #1
9001eff6:	f100 80a9 	bmi.w	9001f14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001effa:	4591      	cmp	r9, r2
9001effc:	f340 80a6 	ble.w	9001f14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f000:	2c00      	cmp	r4, #0
9001f002:	f000 80a3 	beq.w	9001f14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9001f006:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f00a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f00e:	441d      	add	r5, r3
9001f010:	3601      	adds	r6, #1
9001f012:	f100 809f 	bmi.w	9001f154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f016:	45b3      	cmp	fp, r6
9001f018:	f340 809c 	ble.w	9001f154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f01c:	f1be 0f00 	cmp.w	lr, #0
9001f020:	f000 8098 	beq.w	9001f154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9001f024:	2800      	cmp	r0, #0
9001f026:	f2c0 8093 	blt.w	9001f150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f02a:	4581      	cmp	r9, r0
9001f02c:	f340 8090 	ble.w	9001f150 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
9001f030:	f81c 6009 	ldrb.w	r6, [ip, r9]
9001f034:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f038:	441e      	add	r6, r3
9001f03a:	3001      	adds	r0, #1
9001f03c:	f100 808d 	bmi.w	9001f15a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f040:	4581      	cmp	r9, r0
9001f042:	f340 808a 	ble.w	9001f15a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f046:	2c00      	cmp	r4, #0
9001f048:	f000 8087 	beq.w	9001f15a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9001f04c:	44e1      	add	r9, ip
9001f04e:	f899 2001 	ldrb.w	r2, [r9, #1]
9001f052:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f056:	4413      	add	r3, r2
9001f058:	b2a4      	uxth	r4, r4
9001f05a:	f897 c002 	ldrb.w	ip, [r7, #2]
9001f05e:	fa1f fe8e 	uxth.w	lr, lr
9001f062:	9901      	ldr	r1, [sp, #4]
9001f064:	fb04 fb0e 	mul.w	fp, r4, lr
9001f068:	0124      	lsls	r4, r4, #4
9001f06a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
9001f06e:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
9001f072:	eba4 040b 	sub.w	r4, r4, fp
9001f076:	fa1f f08e 	uxth.w	r0, lr
9001f07a:	b2a2      	uxth	r2, r4
9001f07c:	78ac      	ldrb	r4, [r5, #2]
9001f07e:	eba9 0900 	sub.w	r9, r9, r0
9001f082:	fa1f fe88 	uxth.w	lr, r8
9001f086:	4354      	muls	r4, r2
9001f088:	ea6f 0808 	mvn.w	r8, r8
9001f08c:	fa1f f989 	uxth.w	r9, r9
9001f090:	fa5f f888 	uxtb.w	r8, r8
9001f094:	fb09 440c 	mla	r4, r9, ip, r4
9001f098:	f896 c002 	ldrb.w	ip, [r6, #2]
9001f09c:	fb1a fa08 	smulbb	sl, sl, r8
9001f0a0:	fb00 440c 	mla	r4, r0, ip, r4
9001f0a4:	f893 c002 	ldrb.w	ip, [r3, #2]
9001f0a8:	fb0b 4c0c 	mla	ip, fp, ip, r4
9001f0ac:	787c      	ldrb	r4, [r7, #1]
9001f0ae:	783f      	ldrb	r7, [r7, #0]
9001f0b0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f0b4:	fb0c ac0e 	mla	ip, ip, lr, sl
9001f0b8:	f895 a001 	ldrb.w	sl, [r5, #1]
9001f0bc:	782d      	ldrb	r5, [r5, #0]
9001f0be:	fb02 fa0a 	mul.w	sl, r2, sl
9001f0c2:	fa1f fc8c 	uxth.w	ip, ip
9001f0c6:	436a      	muls	r2, r5
9001f0c8:	7835      	ldrb	r5, [r6, #0]
9001f0ca:	fb09 aa04 	mla	sl, r9, r4, sl
9001f0ce:	7874      	ldrb	r4, [r6, #1]
9001f0d0:	fb09 2207 	mla	r2, r9, r7, r2
9001f0d4:	fb00 aa04 	mla	sl, r0, r4, sl
9001f0d8:	785c      	ldrb	r4, [r3, #1]
9001f0da:	fb00 2005 	mla	r0, r0, r5, r2
9001f0de:	781b      	ldrb	r3, [r3, #0]
9001f0e0:	fb0b a404 	mla	r4, fp, r4, sl
9001f0e4:	fb11 fa08 	smulbb	sl, r1, r8
9001f0e8:	fb0b 0b03 	mla	fp, fp, r3, r0
9001f0ec:	9b02      	ldr	r3, [sp, #8]
9001f0ee:	f3c4 2407 	ubfx	r4, r4, #8, #8
9001f0f2:	fb13 f808 	smulbb	r8, r3, r8
9001f0f6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
9001f0fa:	fb04 a40e 	mla	r4, r4, lr, sl
9001f0fe:	f10c 0301 	add.w	r3, ip, #1
9001f102:	fb0b 8e0e 	mla	lr, fp, lr, r8
9001f106:	b2a4      	uxth	r4, r4
9001f108:	fa1f fe8e 	uxth.w	lr, lr
9001f10c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9001f110:	f104 0a01 	add.w	sl, r4, #1
9001f114:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
9001f118:	f10e 0c01 	add.w	ip, lr, #1
9001f11c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001f120:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001f124:	0964      	lsrs	r4, r4, #5
9001f126:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f12a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9001f12e:	ea4c 0c03 	orr.w	ip, ip, r3
9001f132:	9b03      	ldr	r3, [sp, #12]
9001f134:	ea4c 0c04 	orr.w	ip, ip, r4
9001f138:	f8a3 c000 	strh.w	ip, [r3]
9001f13c:	b007      	add	sp, #28
9001f13e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f142:	af05      	add	r7, sp, #20
9001f144:	e756      	b.n	9001eff4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
9001f146:	ad05      	add	r5, sp, #20
9001f148:	462f      	mov	r7, r5
9001f14a:	e761      	b.n	9001f010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f14c:	ad05      	add	r5, sp, #20
9001f14e:	e75f      	b.n	9001f010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
9001f150:	ae05      	add	r6, sp, #20
9001f152:	e772      	b.n	9001f03a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
9001f154:	ab05      	add	r3, sp, #20
9001f156:	461e      	mov	r6, r3
9001f158:	e77e      	b.n	9001f058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
9001f15a:	ab05      	add	r3, sp, #20
9001f15c:	e77c      	b.n	9001f058 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

9001f15e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f15e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f162:	b095      	sub	sp, #84	; 0x54
9001f164:	9212      	str	r2, [sp, #72]	; 0x48
9001f166:	9309      	str	r3, [sp, #36]	; 0x24
9001f168:	9a23      	ldr	r2, [sp, #140]	; 0x8c
9001f16a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
9001f16e:	9013      	str	r0, [sp, #76]	; 0x4c
9001f170:	930f      	str	r3, [sp, #60]	; 0x3c
9001f172:	6850      	ldr	r0, [r2, #4]
9001f174:	910e      	str	r1, [sp, #56]	; 0x38
9001f176:	6812      	ldr	r2, [r2, #0]
9001f178:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
9001f17c:	fb00 1303 	mla	r3, r0, r3, r1
9001f180:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f184:	930a      	str	r3, [sp, #40]	; 0x28
9001f186:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f188:	681b      	ldr	r3, [r3, #0]
9001f18a:	930d      	str	r3, [sp, #52]	; 0x34
9001f18c:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f18e:	685c      	ldr	r4, [r3, #4]
9001f190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9001f192:	3404      	adds	r4, #4
9001f194:	43db      	mvns	r3, r3
9001f196:	b2db      	uxtb	r3, r3
9001f198:	930b      	str	r3, [sp, #44]	; 0x2c
9001f19a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f19c:	2b00      	cmp	r3, #0
9001f19e:	dc03      	bgt.n	9001f1a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001f1a0:	9b12      	ldr	r3, [sp, #72]	; 0x48
9001f1a2:	2b00      	cmp	r3, #0
9001f1a4:	f340 8255 	ble.w	9001f652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f1a8:	9b26      	ldr	r3, [sp, #152]	; 0x98
9001f1aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f1ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f1b2:	1e48      	subs	r0, r1, #1
9001f1b4:	1e55      	subs	r5, r2, #1
9001f1b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f1b8:	2b00      	cmp	r3, #0
9001f1ba:	f340 80f9 	ble.w	9001f3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001f1be:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
9001f1c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f1c2:	1436      	asrs	r6, r6, #16
9001f1c4:	ea4f 4323 	mov.w	r3, r3, asr #16
9001f1c8:	d406      	bmi.n	9001f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f1ca:	4286      	cmp	r6, r0
9001f1cc:	da04      	bge.n	9001f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f1ce:	2b00      	cmp	r3, #0
9001f1d0:	db02      	blt.n	9001f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001f1d2:	42ab      	cmp	r3, r5
9001f1d4:	f2c0 80ed 	blt.w	9001f3b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
9001f1d8:	3601      	adds	r6, #1
9001f1da:	f100 80da 	bmi.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f1de:	42b1      	cmp	r1, r6
9001f1e0:	f2c0 80d7 	blt.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f1e4:	3301      	adds	r3, #1
9001f1e6:	f100 80d4 	bmi.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f1ea:	429a      	cmp	r2, r3
9001f1ec:	f2c0 80d1 	blt.w	9001f392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
9001f1f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f1f2:	9311      	str	r3, [sp, #68]	; 0x44
9001f1f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f1f6:	930c      	str	r3, [sp, #48]	; 0x30
9001f1f8:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f1fa:	2b00      	cmp	r3, #0
9001f1fc:	f340 80fa 	ble.w	9001f3f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001f200:	9826      	ldr	r0, [sp, #152]	; 0x98
9001f202:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f204:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f206:	68c6      	ldr	r6, [r0, #12]
9001f208:	141d      	asrs	r5, r3, #16
9001f20a:	981f      	ldr	r0, [sp, #124]	; 0x7c
9001f20c:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f210:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f212:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f214:	1400      	asrs	r0, r0, #16
9001f216:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f21a:	6892      	ldr	r2, [r2, #8]
9001f21c:	f100 813e 	bmi.w	9001f49c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f220:	1e57      	subs	r7, r2, #1
9001f222:	42b8      	cmp	r0, r7
9001f224:	f280 813a 	bge.w	9001f49c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f228:	2d00      	cmp	r5, #0
9001f22a:	f2c0 8137 	blt.w	9001f49c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f22e:	1e77      	subs	r7, r6, #1
9001f230:	42bd      	cmp	r5, r7
9001f232:	f280 8133 	bge.w	9001f49c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
9001f236:	b212      	sxth	r2, r2
9001f238:	fb05 0002 	mla	r0, r5, r2, r0
9001f23c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f23e:	f815 a000 	ldrb.w	sl, [r5, r0]
9001f242:	182e      	adds	r6, r5, r0
9001f244:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
9001f248:	eb04 050a 	add.w	r5, r4, sl
9001f24c:	2b00      	cmp	r3, #0
9001f24e:	f000 8117 	beq.w	9001f480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
9001f252:	f896 c001 	ldrb.w	ip, [r6, #1]
9001f256:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f25a:	44a4      	add	ip, r4
9001f25c:	2900      	cmp	r1, #0
9001f25e:	f000 8117 	beq.w	9001f490 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
9001f262:	18b0      	adds	r0, r6, r2
9001f264:	5cb2      	ldrb	r2, [r6, r2]
9001f266:	7840      	ldrb	r0, [r0, #1]
9001f268:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f26c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f270:	4422      	add	r2, r4
9001f272:	4420      	add	r0, r4
9001f274:	b29b      	uxth	r3, r3
9001f276:	f89c 7002 	ldrb.w	r7, [ip, #2]
9001f27a:	b289      	uxth	r1, r1
9001f27c:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f280:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f282:	fb03 f901 	mul.w	r9, r3, r1
9001f286:	011b      	lsls	r3, r3, #4
9001f288:	f8b6 e000 	ldrh.w	lr, [r6]
9001f28c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f290:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
9001f294:	eba3 0309 	sub.w	r3, r3, r9
9001f298:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
9001f29c:	b289      	uxth	r1, r1
9001f29e:	f814 a00a 	ldrb.w	sl, [r4, sl]
9001f2a2:	b29b      	uxth	r3, r3
9001f2a4:	eba8 0801 	sub.w	r8, r8, r1
9001f2a8:	435f      	muls	r7, r3
9001f2aa:	fa1f f888 	uxth.w	r8, r8
9001f2ae:	9310      	str	r3, [sp, #64]	; 0x40
9001f2b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f2b2:	fb08 770b 	mla	r7, r8, fp, r7
9001f2b6:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f2ba:	fb01 770b 	mla	r7, r1, fp, r7
9001f2be:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f2c2:	fb09 770b 	mla	r7, r9, fp, r7
9001f2c6:	ea4f 2b2e 	mov.w	fp, lr, asr #8
9001f2ca:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f2ce:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f2d2:	fb1b fb03 	smulbb	fp, fp, r3
9001f2d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f2d8:	fb07 b706 	mla	r7, r7, r6, fp
9001f2dc:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f2e0:	f89c 5001 	ldrb.w	r5, [ip, #1]
9001f2e4:	f89c c000 	ldrb.w	ip, [ip]
9001f2e8:	b2bf      	uxth	r7, r7
9001f2ea:	435d      	muls	r5, r3
9001f2ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f2ee:	fb08 550b 	mla	r5, r8, fp, r5
9001f2f2:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f2f6:	fb01 550b 	mla	r5, r1, fp, r5
9001f2fa:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f2fe:	fb09 550b 	mla	r5, r9, fp, r5
9001f302:	ea4f 0bee 	mov.w	fp, lr, asr #3
9001f306:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001f30a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f30e:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f312:	fa5f fe8e 	uxtb.w	lr, lr
9001f316:	fb1b fb03 	smulbb	fp, fp, r3
9001f31a:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f31c:	fb03 f30c 	mul.w	r3, r3, ip
9001f320:	f892 c000 	ldrb.w	ip, [r2]
9001f324:	fb05 b506 	mla	r5, r5, r6, fp
9001f328:	fb08 330a 	mla	r3, r8, sl, r3
9001f32c:	b2ad      	uxth	r5, r5
9001f32e:	fb01 330c 	mla	r3, r1, ip, r3
9001f332:	f890 c000 	ldrb.w	ip, [r0]
9001f336:	f105 0b01 	add.w	fp, r5, #1
9001f33a:	fb09 3c0c 	mla	ip, r9, ip, r3
9001f33e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f340:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f344:	fb1e fe03 	smulbb	lr, lr, r3
9001f348:	f3cc 2c07 	ubfx	ip, ip, #8, #8
9001f34c:	1c7b      	adds	r3, r7, #1
9001f34e:	096d      	lsrs	r5, r5, #5
9001f350:	fb0c e606 	mla	r6, ip, r6, lr
9001f354:	eb03 2717 	add.w	r7, r3, r7, lsr #8
9001f358:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f35c:	b2b6      	uxth	r6, r6
9001f35e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
9001f362:	1c77      	adds	r7, r6, #1
9001f364:	eb07 2716 	add.w	r7, r7, r6, lsr #8
9001f368:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f36c:	431f      	orrs	r7, r3
9001f36e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f370:	433d      	orrs	r5, r7
9001f372:	801d      	strh	r5, [r3, #0]
9001f374:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f376:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f378:	3302      	adds	r3, #2
9001f37a:	930c      	str	r3, [sp, #48]	; 0x30
9001f37c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f37e:	4413      	add	r3, r2
9001f380:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f382:	931f      	str	r3, [sp, #124]	; 0x7c
9001f384:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f386:	4413      	add	r3, r2
9001f388:	9320      	str	r3, [sp, #128]	; 0x80
9001f38a:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f38c:	3b01      	subs	r3, #1
9001f38e:	9311      	str	r3, [sp, #68]	; 0x44
9001f390:	e732      	b.n	9001f1f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001f392:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f394:	9e21      	ldr	r6, [sp, #132]	; 0x84
9001f396:	4433      	add	r3, r6
9001f398:	9e22      	ldr	r6, [sp, #136]	; 0x88
9001f39a:	931f      	str	r3, [sp, #124]	; 0x7c
9001f39c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f39e:	4433      	add	r3, r6
9001f3a0:	9320      	str	r3, [sp, #128]	; 0x80
9001f3a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f3a4:	3b01      	subs	r3, #1
9001f3a6:	9309      	str	r3, [sp, #36]	; 0x24
9001f3a8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f3aa:	3302      	adds	r3, #2
9001f3ac:	930a      	str	r3, [sp, #40]	; 0x28
9001f3ae:	e702      	b.n	9001f1b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001f3b0:	d027      	beq.n	9001f402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
9001f3b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f3b4:	9821      	ldr	r0, [sp, #132]	; 0x84
9001f3b6:	3b01      	subs	r3, #1
9001f3b8:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f3ba:	fb00 5003 	mla	r0, r0, r3, r5
9001f3be:	1400      	asrs	r0, r0, #16
9001f3c0:	f53f af16 	bmi.w	9001f1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f3c4:	3901      	subs	r1, #1
9001f3c6:	4288      	cmp	r0, r1
9001f3c8:	f6bf af12 	bge.w	9001f1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f3cc:	9922      	ldr	r1, [sp, #136]	; 0x88
9001f3ce:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f3d0:	fb01 0303 	mla	r3, r1, r3, r0
9001f3d4:	141b      	asrs	r3, r3, #16
9001f3d6:	f53f af0b 	bmi.w	9001f1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f3da:	3a01      	subs	r2, #1
9001f3dc:	4293      	cmp	r3, r2
9001f3de:	f6bf af07 	bge.w	9001f1f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001f3e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f3e4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
9001f3e8:	9311      	str	r3, [sp, #68]	; 0x44
9001f3ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f3ec:	930c      	str	r3, [sp, #48]	; 0x30
9001f3ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f3f0:	2b00      	cmp	r3, #0
9001f3f2:	dc70      	bgt.n	9001f4d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
9001f3f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f3f6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
9001f3f8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f3fc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f400:	930a      	str	r3, [sp, #40]	; 0x28
9001f402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f404:	2b00      	cmp	r3, #0
9001f406:	f340 8124 	ble.w	9001f652 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
9001f40a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f40e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f410:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f414:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f418:	eef0 6a62 	vmov.f32	s13, s5
9001f41c:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f420:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f424:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f428:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
9001f42c:	eef0 6a43 	vmov.f32	s13, s6
9001f430:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f434:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
9001f438:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f43c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f440:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f444:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f448:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001f44c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001f450:	ee12 2a90 	vmov	r2, s5
9001f454:	eef0 2a47 	vmov.f32	s5, s14
9001f458:	fb92 f3f3 	sdiv	r3, r2, r3
9001f45c:	ee13 2a10 	vmov	r2, s6
9001f460:	9321      	str	r3, [sp, #132]	; 0x84
9001f462:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f464:	eeb0 3a67 	vmov.f32	s6, s15
9001f468:	fb92 f3f3 	sdiv	r3, r2, r3
9001f46c:	9322      	str	r3, [sp, #136]	; 0x88
9001f46e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
9001f470:	9a12      	ldr	r2, [sp, #72]	; 0x48
9001f472:	3b01      	subs	r3, #1
9001f474:	930e      	str	r3, [sp, #56]	; 0x38
9001f476:	9b1e      	ldr	r3, [sp, #120]	; 0x78
9001f478:	bf08      	it	eq
9001f47a:	4613      	moveq	r3, r2
9001f47c:	9309      	str	r3, [sp, #36]	; 0x24
9001f47e:	e68c      	b.n	9001f19a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001f480:	b149      	cbz	r1, 9001f496 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
9001f482:	5cb2      	ldrb	r2, [r6, r2]
9001f484:	4628      	mov	r0, r5
9001f486:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f48a:	4422      	add	r2, r4
9001f48c:	46ac      	mov	ip, r5
9001f48e:	e6f1      	b.n	9001f274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f490:	4628      	mov	r0, r5
9001f492:	462a      	mov	r2, r5
9001f494:	e6ee      	b.n	9001f274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001f496:	4628      	mov	r0, r5
9001f498:	462a      	mov	r2, r5
9001f49a:	e7f7      	b.n	9001f48c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
9001f49c:	1c47      	adds	r7, r0, #1
9001f49e:	f53f af69 	bmi.w	9001f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f4a2:	42ba      	cmp	r2, r7
9001f4a4:	f6ff af66 	blt.w	9001f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f4a8:	1c6f      	adds	r7, r5, #1
9001f4aa:	f53f af63 	bmi.w	9001f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f4ae:	42be      	cmp	r6, r7
9001f4b0:	f6ff af60 	blt.w	9001f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f4b4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
9001f4b6:	b236      	sxth	r6, r6
9001f4b8:	b212      	sxth	r2, r2
9001f4ba:	9002      	str	r0, [sp, #8]
9001f4bc:	9601      	str	r6, [sp, #4]
9001f4be:	9200      	str	r2, [sp, #0]
9001f4c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
9001f4c2:	e9cd 1705 	strd	r1, r7, [sp, #20]
9001f4c6:	e9cd 5303 	strd	r5, r3, [sp, #12]
9001f4ca:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
9001f4ce:	4623      	mov	r3, r4
9001f4d0:	f7ff fd59 	bl	9001ef86 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
9001f4d4:	e74e      	b.n	9001f374 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
9001f4d6:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f4d8:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f4da:	f3c2 3103 	ubfx	r1, r2, #12, #4
9001f4de:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
9001f4e0:	9a26      	ldr	r2, [sp, #152]	; 0x98
9001f4e2:	1400      	asrs	r0, r0, #16
9001f4e4:	142d      	asrs	r5, r5, #16
9001f4e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f4e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001f4ec:	f3c3 3303 	ubfx	r3, r3, #12, #4
9001f4f0:	fb02 5000 	mla	r0, r2, r0, r5
9001f4f4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9001f4f6:	f815 9000 	ldrb.w	r9, [r5, r0]
9001f4fa:	182e      	adds	r6, r5, r0
9001f4fc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
9001f500:	eb04 0509 	add.w	r5, r4, r9
9001f504:	2b00      	cmp	r3, #0
9001f506:	f000 8096 	beq.w	9001f636 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
9001f50a:	7877      	ldrb	r7, [r6, #1]
9001f50c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f510:	4427      	add	r7, r4
9001f512:	2900      	cmp	r1, #0
9001f514:	f000 8097 	beq.w	9001f646 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
9001f518:	18b0      	adds	r0, r6, r2
9001f51a:	5cb2      	ldrb	r2, [r6, r2]
9001f51c:	7840      	ldrb	r0, [r0, #1]
9001f51e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f522:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f526:	4422      	add	r2, r4
9001f528:	4420      	add	r0, r4
9001f52a:	b29b      	uxth	r3, r3
9001f52c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
9001f52e:	b289      	uxth	r1, r1
9001f530:	f895 b002 	ldrb.w	fp, [r5, #2]
9001f534:	f8b6 c000 	ldrh.w	ip, [r6]
9001f538:	fb03 f801 	mul.w	r8, r3, r1
9001f53c:	011b      	lsls	r3, r3, #4
9001f53e:	78be      	ldrb	r6, [r7, #2]
9001f540:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
9001f544:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f548:	eba3 0308 	sub.w	r3, r3, r8
9001f54c:	f814 9009 	ldrb.w	r9, [r4, r9]
9001f550:	b289      	uxth	r1, r1
9001f552:	b29b      	uxth	r3, r3
9001f554:	ebae 0e01 	sub.w	lr, lr, r1
9001f558:	435e      	muls	r6, r3
9001f55a:	fa1f fe8e 	uxth.w	lr, lr
9001f55e:	9310      	str	r3, [sp, #64]	; 0x40
9001f560:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f562:	fb0e 660b 	mla	r6, lr, fp, r6
9001f566:	f892 b002 	ldrb.w	fp, [r2, #2]
9001f56a:	fb01 660b 	mla	r6, r1, fp, r6
9001f56e:	f890 b002 	ldrb.w	fp, [r0, #2]
9001f572:	fb08 660b 	mla	r6, r8, fp, r6
9001f576:	ea4f 2b2c 	mov.w	fp, ip, asr #8
9001f57a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
9001f57e:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001f582:	fb1b fb03 	smulbb	fp, fp, r3
9001f586:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f588:	fb06 b60a 	mla	r6, r6, sl, fp
9001f58c:	f895 b001 	ldrb.w	fp, [r5, #1]
9001f590:	787d      	ldrb	r5, [r7, #1]
9001f592:	783f      	ldrb	r7, [r7, #0]
9001f594:	b2b6      	uxth	r6, r6
9001f596:	435d      	muls	r5, r3
9001f598:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f59a:	fb0e 550b 	mla	r5, lr, fp, r5
9001f59e:	f892 b001 	ldrb.w	fp, [r2, #1]
9001f5a2:	fb01 550b 	mla	r5, r1, fp, r5
9001f5a6:	f890 b001 	ldrb.w	fp, [r0, #1]
9001f5aa:	fb08 550b 	mla	r5, r8, fp, r5
9001f5ae:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001f5b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001f5b6:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
9001f5ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
9001f5be:	fa5f fc8c 	uxtb.w	ip, ip
9001f5c2:	fb1b fb03 	smulbb	fp, fp, r3
9001f5c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
9001f5c8:	437b      	muls	r3, r7
9001f5ca:	7817      	ldrb	r7, [r2, #0]
9001f5cc:	fb05 b50a 	mla	r5, r5, sl, fp
9001f5d0:	fb0e 3309 	mla	r3, lr, r9, r3
9001f5d4:	b2ad      	uxth	r5, r5
9001f5d6:	fb01 3307 	mla	r3, r1, r7, r3
9001f5da:	7807      	ldrb	r7, [r0, #0]
9001f5dc:	f105 0b01 	add.w	fp, r5, #1
9001f5e0:	fb08 3707 	mla	r7, r8, r7, r3
9001f5e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f5e6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
9001f5ea:	fb1c fc03 	smulbb	ip, ip, r3
9001f5ee:	f3c7 2707 	ubfx	r7, r7, #8, #8
9001f5f2:	1c73      	adds	r3, r6, #1
9001f5f4:	096d      	lsrs	r5, r5, #5
9001f5f6:	fb07 c70a 	mla	r7, r7, sl, ip
9001f5fa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
9001f5fe:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9001f602:	b2bf      	uxth	r7, r7
9001f604:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f606:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
9001f60a:	1c7a      	adds	r2, r7, #1
9001f60c:	eb02 2217 	add.w	r2, r2, r7, lsr #8
9001f610:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f614:	4316      	orrs	r6, r2
9001f616:	9a21      	ldr	r2, [sp, #132]	; 0x84
9001f618:	432e      	orrs	r6, r5
9001f61a:	f823 6b02 	strh.w	r6, [r3], #2
9001f61e:	930c      	str	r3, [sp, #48]	; 0x30
9001f620:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
9001f622:	4413      	add	r3, r2
9001f624:	9a22      	ldr	r2, [sp, #136]	; 0x88
9001f626:	931f      	str	r3, [sp, #124]	; 0x7c
9001f628:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f62a:	4413      	add	r3, r2
9001f62c:	9320      	str	r3, [sp, #128]	; 0x80
9001f62e:	9b11      	ldr	r3, [sp, #68]	; 0x44
9001f630:	3b01      	subs	r3, #1
9001f632:	9311      	str	r3, [sp, #68]	; 0x44
9001f634:	e6db      	b.n	9001f3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
9001f636:	b149      	cbz	r1, 9001f64c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
9001f638:	5cb2      	ldrb	r2, [r6, r2]
9001f63a:	4628      	mov	r0, r5
9001f63c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f640:	4422      	add	r2, r4
9001f642:	462f      	mov	r7, r5
9001f644:	e771      	b.n	9001f52a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f646:	4628      	mov	r0, r5
9001f648:	462a      	mov	r2, r5
9001f64a:	e76e      	b.n	9001f52a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
9001f64c:	4628      	mov	r0, r5
9001f64e:	462a      	mov	r2, r5
9001f650:	e7f7      	b.n	9001f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9001f652:	b015      	add	sp, #84	; 0x54
9001f654:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001f658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
9001f658:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f65c:	880f      	ldrh	r7, [r1, #0]
9001f65e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
9001f662:	023c      	lsls	r4, r7, #8
9001f664:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9001f668:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
9001f66c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
9001f670:	017c      	lsls	r4, r7, #5
9001f672:	00ff      	lsls	r7, r7, #3
9001f674:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
9001f678:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
9001f67c:	b2ff      	uxtb	r7, r7
9001f67e:	ea4b 0404 	orr.w	r4, fp, r4
9001f682:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
9001f686:	4327      	orrs	r7, r4
9001f688:	fb05 ca0e 	mla	sl, r5, lr, ip
9001f68c:	2d00      	cmp	r5, #0
9001f68e:	9701      	str	r7, [sp, #4]
9001f690:	eb02 080a 	add.w	r8, r2, sl
9001f694:	db7e      	blt.n	9001f794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f696:	45a9      	cmp	r9, r5
9001f698:	dd7c      	ble.n	9001f794 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
9001f69a:	f1bc 0f00 	cmp.w	ip, #0
9001f69e:	db77      	blt.n	9001f790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f6a0:	45e6      	cmp	lr, ip
9001f6a2:	dd75      	ble.n	9001f790 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
9001f6a4:	f812 700a 	ldrb.w	r7, [r2, sl]
9001f6a8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9001f6ac:	441f      	add	r7, r3
9001f6ae:	f11c 0201 	adds.w	r2, ip, #1
9001f6b2:	d472      	bmi.n	9001f79a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f6b4:	4596      	cmp	lr, r2
9001f6b6:	dd70      	ble.n	9001f79a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f6b8:	2800      	cmp	r0, #0
9001f6ba:	d06e      	beq.n	9001f79a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
9001f6bc:	f898 4001 	ldrb.w	r4, [r8, #1]
9001f6c0:	eb04 0444 	add.w	r4, r4, r4, lsl #1
9001f6c4:	441c      	add	r4, r3
9001f6c6:	3501      	adds	r5, #1
9001f6c8:	d46b      	bmi.n	9001f7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f6ca:	45a9      	cmp	r9, r5
9001f6cc:	dd69      	ble.n	9001f7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f6ce:	2e00      	cmp	r6, #0
9001f6d0:	d067      	beq.n	9001f7a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9001f6d2:	f1bc 0f00 	cmp.w	ip, #0
9001f6d6:	db62      	blt.n	9001f79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f6d8:	45e6      	cmp	lr, ip
9001f6da:	dd60      	ble.n	9001f79e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
9001f6dc:	f818 500e 	ldrb.w	r5, [r8, lr]
9001f6e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001f6e4:	441d      	add	r5, r3
9001f6e6:	f11c 0201 	adds.w	r2, ip, #1
9001f6ea:	d45d      	bmi.n	9001f7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f6ec:	4596      	cmp	lr, r2
9001f6ee:	dd5b      	ble.n	9001f7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f6f0:	2800      	cmp	r0, #0
9001f6f2:	d059      	beq.n	9001f7a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9001f6f4:	44c6      	add	lr, r8
9001f6f6:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001f6fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f6fe:	4413      	add	r3, r2
9001f700:	b280      	uxth	r0, r0
9001f702:	f897 e002 	ldrb.w	lr, [r7, #2]
9001f706:	b2b2      	uxth	r2, r6
9001f708:	f897 9000 	ldrb.w	r9, [r7]
9001f70c:	787f      	ldrb	r7, [r7, #1]
9001f70e:	fb00 f602 	mul.w	r6, r0, r2
9001f712:	0100      	lsls	r0, r0, #4
9001f714:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
9001f718:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
9001f71c:	1b80      	subs	r0, r0, r6
9001f71e:	fa1f fc82 	uxth.w	ip, r2
9001f722:	b282      	uxth	r2, r0
9001f724:	78a0      	ldrb	r0, [r4, #2]
9001f726:	eba8 080c 	sub.w	r8, r8, ip
9001f72a:	4350      	muls	r0, r2
9001f72c:	fa1f f888 	uxth.w	r8, r8
9001f730:	fb08 0e0e 	mla	lr, r8, lr, r0
9001f734:	78a8      	ldrb	r0, [r5, #2]
9001f736:	fb0c e000 	mla	r0, ip, r0, lr
9001f73a:	f893 e002 	ldrb.w	lr, [r3, #2]
9001f73e:	fb06 0e0e 	mla	lr, r6, lr, r0
9001f742:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
9001f746:	f894 e000 	ldrb.w	lr, [r4]
9001f74a:	fb02 fe0e 	mul.w	lr, r2, lr
9001f74e:	fb08 e909 	mla	r9, r8, r9, lr
9001f752:	f895 e000 	ldrb.w	lr, [r5]
9001f756:	fb0c 990e 	mla	r9, ip, lr, r9
9001f75a:	f893 e000 	ldrb.w	lr, [r3]
9001f75e:	785b      	ldrb	r3, [r3, #1]
9001f760:	fb06 9e0e 	mla	lr, r6, lr, r9
9001f764:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f768:	ea4e 0e00 	orr.w	lr, lr, r0
9001f76c:	7860      	ldrb	r0, [r4, #1]
9001f76e:	4350      	muls	r0, r2
9001f770:	786a      	ldrb	r2, [r5, #1]
9001f772:	fb08 0007 	mla	r0, r8, r7, r0
9001f776:	fb0c 0202 	mla	r2, ip, r2, r0
9001f77a:	fb06 2303 	mla	r3, r6, r3, r2
9001f77e:	095b      	lsrs	r3, r3, #5
9001f780:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9001f784:	ea4e 0303 	orr.w	r3, lr, r3
9001f788:	800b      	strh	r3, [r1, #0]
9001f78a:	b003      	add	sp, #12
9001f78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f790:	af01      	add	r7, sp, #4
9001f792:	e78c      	b.n	9001f6ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
9001f794:	ac01      	add	r4, sp, #4
9001f796:	4627      	mov	r7, r4
9001f798:	e795      	b.n	9001f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f79a:	ac01      	add	r4, sp, #4
9001f79c:	e793      	b.n	9001f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
9001f79e:	ad01      	add	r5, sp, #4
9001f7a0:	e7a1      	b.n	9001f6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
9001f7a2:	ab01      	add	r3, sp, #4
9001f7a4:	461d      	mov	r5, r3
9001f7a6:	e7ab      	b.n	9001f700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
9001f7a8:	ab01      	add	r3, sp, #4
9001f7aa:	e7a9      	b.n	9001f700 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

9001f7ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001f7ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f7b0:	b08f      	sub	sp, #60	; 0x3c
9001f7b2:	920c      	str	r2, [sp, #48]	; 0x30
9001f7b4:	9a1d      	ldr	r2, [sp, #116]	; 0x74
9001f7b6:	900d      	str	r0, [sp, #52]	; 0x34
9001f7b8:	910a      	str	r1, [sp, #40]	; 0x28
9001f7ba:	6850      	ldr	r0, [r2, #4]
9001f7bc:	9306      	str	r3, [sp, #24]
9001f7be:	6812      	ldr	r2, [r2, #0]
9001f7c0:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
9001f7c4:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
9001f7c8:	fb00 1303 	mla	r3, r0, r3, r1
9001f7cc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f7d0:	9307      	str	r3, [sp, #28]
9001f7d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f7d4:	681b      	ldr	r3, [r3, #0]
9001f7d6:	9308      	str	r3, [sp, #32]
9001f7d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f7da:	685c      	ldr	r4, [r3, #4]
9001f7dc:	3404      	adds	r4, #4
9001f7de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f7e0:	2b00      	cmp	r3, #0
9001f7e2:	dc03      	bgt.n	9001f7ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001f7e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
9001f7e6:	2b00      	cmp	r3, #0
9001f7e8:	f340 81d5 	ble.w	9001fb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f7ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
9001f7ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001f7f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001f7f6:	1e48      	subs	r0, r1, #1
9001f7f8:	1e56      	subs	r6, r2, #1
9001f7fa:	9b06      	ldr	r3, [sp, #24]
9001f7fc:	2b00      	cmp	r3, #0
9001f7fe:	f340 80b6 	ble.w	9001f96e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9001f802:	ea5f 472b 	movs.w	r7, fp, asr #16
9001f806:	ea4f 4325 	mov.w	r3, r5, asr #16
9001f80a:	d406      	bmi.n	9001f81a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f80c:	4287      	cmp	r7, r0
9001f80e:	da04      	bge.n	9001f81a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f810:	2b00      	cmp	r3, #0
9001f812:	db02      	blt.n	9001f81a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001f814:	42b3      	cmp	r3, r6
9001f816:	f2c0 80ab 	blt.w	9001f970 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
9001f81a:	3701      	adds	r7, #1
9001f81c:	f100 809c 	bmi.w	9001f958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f820:	42b9      	cmp	r1, r7
9001f822:	f2c0 8099 	blt.w	9001f958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f826:	3301      	adds	r3, #1
9001f828:	f100 8096 	bmi.w	9001f958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f82c:	429a      	cmp	r2, r3
9001f82e:	f2c0 8093 	blt.w	9001f958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9001f832:	9b06      	ldr	r3, [sp, #24]
9001f834:	930b      	str	r3, [sp, #44]	; 0x2c
9001f836:	9b07      	ldr	r3, [sp, #28]
9001f838:	9309      	str	r3, [sp, #36]	; 0x24
9001f83a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f83c:	2b00      	cmp	r3, #0
9001f83e:	f340 80b4 	ble.w	9001f9aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001f842:	9820      	ldr	r0, [sp, #128]	; 0x80
9001f844:	142e      	asrs	r6, r5, #16
9001f846:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001f848:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001f84c:	68c7      	ldr	r7, [r0, #12]
9001f84e:	ea5f 402b 	movs.w	r0, fp, asr #16
9001f852:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001f856:	6892      	ldr	r2, [r2, #8]
9001f858:	f100 80fb 	bmi.w	9001fa52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f85c:	f102 3cff 	add.w	ip, r2, #4294967295
9001f860:	4560      	cmp	r0, ip
9001f862:	f280 80f6 	bge.w	9001fa52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f866:	2e00      	cmp	r6, #0
9001f868:	f2c0 80f3 	blt.w	9001fa52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f86c:	f107 3cff 	add.w	ip, r7, #4294967295
9001f870:	4566      	cmp	r6, ip
9001f872:	f280 80ee 	bge.w	9001fa52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9001f876:	b212      	sxth	r2, r2
9001f878:	fb06 0002 	mla	r0, r6, r2, r0
9001f87c:	9e08      	ldr	r6, [sp, #32]
9001f87e:	1837      	adds	r7, r6, r0
9001f880:	5c30      	ldrb	r0, [r6, r0]
9001f882:	eb00 0840 	add.w	r8, r0, r0, lsl #1
9001f886:	eb04 0c08 	add.w	ip, r4, r8
9001f88a:	2b00      	cmp	r3, #0
9001f88c:	f000 80d3 	beq.w	9001fa36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
9001f890:	787e      	ldrb	r6, [r7, #1]
9001f892:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001f896:	4426      	add	r6, r4
9001f898:	2900      	cmp	r1, #0
9001f89a:	f000 80d4 	beq.w	9001fa46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001f89e:	18b8      	adds	r0, r7, r2
9001f8a0:	5cba      	ldrb	r2, [r7, r2]
9001f8a2:	7840      	ldrb	r0, [r0, #1]
9001f8a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001f8a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001f8ac:	4422      	add	r2, r4
9001f8ae:	4420      	add	r0, r4
9001f8b0:	b29b      	uxth	r3, r3
9001f8b2:	78b7      	ldrb	r7, [r6, #2]
9001f8b4:	b289      	uxth	r1, r1
9001f8b6:	f89c a002 	ldrb.w	sl, [ip, #2]
9001f8ba:	f89c c001 	ldrb.w	ip, [ip, #1]
9001f8be:	fb03 f901 	mul.w	r9, r3, r1
9001f8c2:	011b      	lsls	r3, r3, #4
9001f8c4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001f8c8:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001f8cc:	eba3 0309 	sub.w	r3, r3, r9
9001f8d0:	b289      	uxth	r1, r1
9001f8d2:	b29b      	uxth	r3, r3
9001f8d4:	ebae 0e01 	sub.w	lr, lr, r1
9001f8d8:	435f      	muls	r7, r3
9001f8da:	fa1f fe8e 	uxth.w	lr, lr
9001f8de:	fb0e 770a 	mla	r7, lr, sl, r7
9001f8e2:	f892 a002 	ldrb.w	sl, [r2, #2]
9001f8e6:	fb01 770a 	mla	r7, r1, sl, r7
9001f8ea:	f890 a002 	ldrb.w	sl, [r0, #2]
9001f8ee:	fb09 7a0a 	mla	sl, r9, sl, r7
9001f8f2:	f814 7008 	ldrb.w	r7, [r4, r8]
9001f8f6:	f896 8000 	ldrb.w	r8, [r6]
9001f8fa:	7876      	ldrb	r6, [r6, #1]
9001f8fc:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001f900:	fb03 f808 	mul.w	r8, r3, r8
9001f904:	4373      	muls	r3, r6
9001f906:	fb0e 8807 	mla	r8, lr, r7, r8
9001f90a:	7817      	ldrb	r7, [r2, #0]
9001f90c:	fb0e 330c 	mla	r3, lr, ip, r3
9001f910:	fb01 8807 	mla	r8, r1, r7, r8
9001f914:	7807      	ldrb	r7, [r0, #0]
9001f916:	fb09 8707 	mla	r7, r9, r7, r8
9001f91a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f91e:	ea47 070a 	orr.w	r7, r7, sl
9001f922:	f892 a001 	ldrb.w	sl, [r2, #1]
9001f926:	fb01 310a 	mla	r1, r1, sl, r3
9001f92a:	f890 a001 	ldrb.w	sl, [r0, #1]
9001f92e:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f930:	fb09 1a0a 	mla	sl, r9, sl, r1
9001f934:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001f938:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001f93c:	ea47 070a 	orr.w	r7, r7, sl
9001f940:	801f      	strh	r7, [r3, #0]
9001f942:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f944:	3302      	adds	r3, #2
9001f946:	9309      	str	r3, [sp, #36]	; 0x24
9001f948:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f94a:	449b      	add	fp, r3
9001f94c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f94e:	441d      	add	r5, r3
9001f950:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001f952:	3b01      	subs	r3, #1
9001f954:	930b      	str	r3, [sp, #44]	; 0x2c
9001f956:	e770      	b.n	9001f83a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9001f958:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001f95a:	449b      	add	fp, r3
9001f95c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001f95e:	441d      	add	r5, r3
9001f960:	9b06      	ldr	r3, [sp, #24]
9001f962:	3b01      	subs	r3, #1
9001f964:	9306      	str	r3, [sp, #24]
9001f966:	9b07      	ldr	r3, [sp, #28]
9001f968:	3302      	adds	r3, #2
9001f96a:	9307      	str	r3, [sp, #28]
9001f96c:	e745      	b.n	9001f7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
9001f96e:	d023      	beq.n	9001f9b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
9001f970:	9b06      	ldr	r3, [sp, #24]
9001f972:	981b      	ldr	r0, [sp, #108]	; 0x6c
9001f974:	3b01      	subs	r3, #1
9001f976:	fb00 b003 	mla	r0, r0, r3, fp
9001f97a:	1400      	asrs	r0, r0, #16
9001f97c:	f53f af59 	bmi.w	9001f832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f980:	3901      	subs	r1, #1
9001f982:	4288      	cmp	r0, r1
9001f984:	f6bf af55 	bge.w	9001f832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f988:	991c      	ldr	r1, [sp, #112]	; 0x70
9001f98a:	fb01 5303 	mla	r3, r1, r3, r5
9001f98e:	141b      	asrs	r3, r3, #16
9001f990:	f53f af4f 	bmi.w	9001f832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f994:	3a01      	subs	r2, #1
9001f996:	4293      	cmp	r3, r2
9001f998:	f6bf af4b 	bge.w	9001f832 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001f99c:	9b06      	ldr	r3, [sp, #24]
9001f99e:	9309      	str	r3, [sp, #36]	; 0x24
9001f9a0:	9b07      	ldr	r3, [sp, #28]
9001f9a2:	930b      	str	r3, [sp, #44]	; 0x2c
9001f9a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001f9a6:	2b00      	cmp	r3, #0
9001f9a8:	dc70      	bgt.n	9001fa8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
9001f9aa:	9b06      	ldr	r3, [sp, #24]
9001f9ac:	9a07      	ldr	r2, [sp, #28]
9001f9ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001f9b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001f9b6:	9307      	str	r3, [sp, #28]
9001f9b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001f9ba:	2b00      	cmp	r3, #0
9001f9bc:	f340 80eb 	ble.w	9001fb96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
9001f9c0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9001f9c4:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001f9c6:	ee30 0a04 	vadd.f32	s0, s0, s8
9001f9ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001f9ce:	eef0 6a62 	vmov.f32	s13, s5
9001f9d2:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001f9d6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001f9da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f9de:	ee16 ba90 	vmov	fp, s13
9001f9e2:	eef0 6a43 	vmov.f32	s13, s6
9001f9e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001f9ea:	ee16 5a90 	vmov	r5, s13
9001f9ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001f9f2:	ee61 7a27 	vmul.f32	s15, s2, s15
9001f9f6:	ee77 2a62 	vsub.f32	s5, s14, s5
9001f9fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001f9fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001fa02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001fa06:	ee12 2a90 	vmov	r2, s5
9001fa0a:	eef0 2a47 	vmov.f32	s5, s14
9001fa0e:	fb92 f3f3 	sdiv	r3, r2, r3
9001fa12:	ee13 2a10 	vmov	r2, s6
9001fa16:	931b      	str	r3, [sp, #108]	; 0x6c
9001fa18:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001fa1a:	eeb0 3a67 	vmov.f32	s6, s15
9001fa1e:	fb92 f3f3 	sdiv	r3, r2, r3
9001fa22:	931c      	str	r3, [sp, #112]	; 0x70
9001fa24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9001fa26:	9a0c      	ldr	r2, [sp, #48]	; 0x30
9001fa28:	3b01      	subs	r3, #1
9001fa2a:	930a      	str	r3, [sp, #40]	; 0x28
9001fa2c:	9b18      	ldr	r3, [sp, #96]	; 0x60
9001fa2e:	bf08      	it	eq
9001fa30:	4613      	moveq	r3, r2
9001fa32:	9306      	str	r3, [sp, #24]
9001fa34:	e6d3      	b.n	9001f7de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001fa36:	b149      	cbz	r1, 9001fa4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
9001fa38:	5cba      	ldrb	r2, [r7, r2]
9001fa3a:	4660      	mov	r0, ip
9001fa3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fa40:	4422      	add	r2, r4
9001fa42:	4666      	mov	r6, ip
9001fa44:	e734      	b.n	9001f8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001fa46:	4660      	mov	r0, ip
9001fa48:	4662      	mov	r2, ip
9001fa4a:	e731      	b.n	9001f8b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9001fa4c:	4660      	mov	r0, ip
9001fa4e:	4662      	mov	r2, ip
9001fa50:	e7f7      	b.n	9001fa42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9001fa52:	f110 0c01 	adds.w	ip, r0, #1
9001fa56:	f53f af74 	bmi.w	9001f942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fa5a:	4562      	cmp	r2, ip
9001fa5c:	f6ff af71 	blt.w	9001f942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fa60:	f116 0c01 	adds.w	ip, r6, #1
9001fa64:	f53f af6d 	bmi.w	9001f942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fa68:	4567      	cmp	r7, ip
9001fa6a:	f6ff af6a 	blt.w	9001f942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fa6e:	b23f      	sxth	r7, r7
9001fa70:	b212      	sxth	r2, r2
9001fa72:	9701      	str	r7, [sp, #4]
9001fa74:	9200      	str	r2, [sp, #0]
9001fa76:	e9cd 3104 	strd	r3, r1, [sp, #16]
9001fa7a:	e9cd 0602 	strd	r0, r6, [sp, #8]
9001fa7e:	4623      	mov	r3, r4
9001fa80:	980d      	ldr	r0, [sp, #52]	; 0x34
9001fa82:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001fa86:	f7ff fde7 	bl	9001f658 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
9001fa8a:	e75a      	b.n	9001f942 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9001fa8c:	9a20      	ldr	r2, [sp, #128]	; 0x80
9001fa8e:	ea4f 462b 	mov.w	r6, fp, asr #16
9001fa92:	1428      	asrs	r0, r5, #16
9001fa94:	f3cb 3303 	ubfx	r3, fp, #12, #4
9001fa98:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
9001fa9c:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001faa0:	fb02 6000 	mla	r0, r2, r0, r6
9001faa4:	9e08      	ldr	r6, [sp, #32]
9001faa6:	f816 8000 	ldrb.w	r8, [r6, r0]
9001faaa:	1837      	adds	r7, r6, r0
9001faac:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001fab0:	eb04 0c08 	add.w	ip, r4, r8
9001fab4:	2b00      	cmp	r3, #0
9001fab6:	d060      	beq.n	9001fb7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
9001fab8:	787e      	ldrb	r6, [r7, #1]
9001faba:	eb06 0646 	add.w	r6, r6, r6, lsl #1
9001fabe:	4426      	add	r6, r4
9001fac0:	2900      	cmp	r1, #0
9001fac2:	d062      	beq.n	9001fb8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
9001fac4:	18b8      	adds	r0, r7, r2
9001fac6:	5cba      	ldrb	r2, [r7, r2]
9001fac8:	7840      	ldrb	r0, [r0, #1]
9001faca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001face:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9001fad2:	4422      	add	r2, r4
9001fad4:	4420      	add	r0, r4
9001fad6:	b29b      	uxth	r3, r3
9001fad8:	78b7      	ldrb	r7, [r6, #2]
9001fada:	b289      	uxth	r1, r1
9001fadc:	f89c a002 	ldrb.w	sl, [ip, #2]
9001fae0:	f89c c001 	ldrb.w	ip, [ip, #1]
9001fae4:	fb03 f901 	mul.w	r9, r3, r1
9001fae8:	011b      	lsls	r3, r3, #4
9001faea:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001faee:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
9001faf2:	eba3 0309 	sub.w	r3, r3, r9
9001faf6:	b289      	uxth	r1, r1
9001faf8:	b29b      	uxth	r3, r3
9001fafa:	ebae 0e01 	sub.w	lr, lr, r1
9001fafe:	435f      	muls	r7, r3
9001fb00:	fa1f fe8e 	uxth.w	lr, lr
9001fb04:	fb0e 770a 	mla	r7, lr, sl, r7
9001fb08:	f892 a002 	ldrb.w	sl, [r2, #2]
9001fb0c:	fb01 770a 	mla	r7, r1, sl, r7
9001fb10:	f890 a002 	ldrb.w	sl, [r0, #2]
9001fb14:	fb09 7a0a 	mla	sl, r9, sl, r7
9001fb18:	f814 7008 	ldrb.w	r7, [r4, r8]
9001fb1c:	f896 8000 	ldrb.w	r8, [r6]
9001fb20:	7876      	ldrb	r6, [r6, #1]
9001fb22:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
9001fb26:	fb03 f808 	mul.w	r8, r3, r8
9001fb2a:	4373      	muls	r3, r6
9001fb2c:	7856      	ldrb	r6, [r2, #1]
9001fb2e:	fb0e 8807 	mla	r8, lr, r7, r8
9001fb32:	7817      	ldrb	r7, [r2, #0]
9001fb34:	fb0e 330c 	mla	r3, lr, ip, r3
9001fb38:	fb01 8807 	mla	r8, r1, r7, r8
9001fb3c:	7807      	ldrb	r7, [r0, #0]
9001fb3e:	fb01 3306 	mla	r3, r1, r6, r3
9001fb42:	fb09 8707 	mla	r7, r9, r7, r8
9001fb46:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fb4a:	ea47 070a 	orr.w	r7, r7, sl
9001fb4e:	f890 a001 	ldrb.w	sl, [r0, #1]
9001fb52:	fb09 3a0a 	mla	sl, r9, sl, r3
9001fb56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
9001fb58:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001fb5c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
9001fb60:	ea47 070a 	orr.w	r7, r7, sl
9001fb64:	f823 7b02 	strh.w	r7, [r3], #2
9001fb68:	930b      	str	r3, [sp, #44]	; 0x2c
9001fb6a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fb6c:	449b      	add	fp, r3
9001fb6e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9001fb70:	441d      	add	r5, r3
9001fb72:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fb74:	3b01      	subs	r3, #1
9001fb76:	9309      	str	r3, [sp, #36]	; 0x24
9001fb78:	e714      	b.n	9001f9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
9001fb7a:	b149      	cbz	r1, 9001fb90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
9001fb7c:	5cba      	ldrb	r2, [r7, r2]
9001fb7e:	4660      	mov	r0, ip
9001fb80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9001fb84:	4422      	add	r2, r4
9001fb86:	4666      	mov	r6, ip
9001fb88:	e7a5      	b.n	9001fad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fb8a:	4660      	mov	r0, ip
9001fb8c:	4662      	mov	r2, ip
9001fb8e:	e7a2      	b.n	9001fad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
9001fb90:	4660      	mov	r0, ip
9001fb92:	4662      	mov	r2, ip
9001fb94:	e7f7      	b.n	9001fb86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
9001fb96:	b00f      	add	sp, #60	; 0x3c
9001fb98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001fb9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
9001fb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fba0:	b085      	sub	sp, #20
9001fba2:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
9001fba6:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
9001fbaa:	9102      	str	r1, [sp, #8]
9001fbac:	2c00      	cmp	r4, #0
9001fbae:	fb04 710c 	mla	r1, r4, ip, r7
9001fbb2:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
9001fbb6:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
9001fbba:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
9001fbbe:	eb02 0e01 	add.w	lr, r2, r1
9001fbc2:	f2c0 8122 	blt.w	9001fe0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fbc6:	45a0      	cmp	r8, r4
9001fbc8:	f340 811f 	ble.w	9001fe0a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
9001fbcc:	2f00      	cmp	r7, #0
9001fbce:	f2c0 811a 	blt.w	9001fe06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fbd2:	45bc      	cmp	ip, r7
9001fbd4:	f340 8117 	ble.w	9001fe06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9001fbd8:	5c52      	ldrb	r2, [r2, r1]
9001fbda:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
9001fbde:	1c7a      	adds	r2, r7, #1
9001fbe0:	f100 8116 	bmi.w	9001fe10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fbe4:	4594      	cmp	ip, r2
9001fbe6:	f340 8113 	ble.w	9001fe10 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9001fbea:	2e00      	cmp	r6, #0
9001fbec:	f000 8112 	beq.w	9001fe14 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
9001fbf0:	f89e 2001 	ldrb.w	r2, [lr, #1]
9001fbf4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
9001fbf8:	3401      	adds	r4, #1
9001fbfa:	f100 810f 	bmi.w	9001fe1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fbfe:	45a0      	cmp	r8, r4
9001fc00:	f340 810c 	ble.w	9001fe1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9001fc04:	2800      	cmp	r0, #0
9001fc06:	f000 810c 	beq.w	9001fe22 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
9001fc0a:	2f00      	cmp	r7, #0
9001fc0c:	f2c0 8104 	blt.w	9001fe18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fc10:	45bc      	cmp	ip, r7
9001fc12:	f340 8101 	ble.w	9001fe18 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9001fc16:	f81e 200c 	ldrb.w	r2, [lr, ip]
9001fc1a:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
9001fc1e:	3701      	adds	r7, #1
9001fc20:	f100 8102 	bmi.w	9001fe28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fc24:	45bc      	cmp	ip, r7
9001fc26:	f340 80ff 	ble.w	9001fe28 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9001fc2a:	2e00      	cmp	r6, #0
9001fc2c:	f000 80fe 	beq.w	9001fe2c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
9001fc30:	44f4      	add	ip, lr
9001fc32:	f89c 2001 	ldrb.w	r2, [ip, #1]
9001fc36:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001fc3a:	b2b6      	uxth	r6, r6
9001fc3c:	b280      	uxth	r0, r0
9001fc3e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9001fc42:	fb00 fe06 	mul.w	lr, r0, r6
9001fc46:	0136      	lsls	r6, r6, #4
9001fc48:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9001fc4c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9001fc50:	eba6 070e 	sub.w	r7, r6, lr
9001fc54:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
9001fc58:	ea4f 6914 	mov.w	r9, r4, lsr #24
9001fc5c:	b280      	uxth	r0, r0
9001fc5e:	b2bf      	uxth	r7, r7
9001fc60:	1a1b      	subs	r3, r3, r0
9001fc62:	ea4f 6812 	mov.w	r8, r2, lsr #24
9001fc66:	fb0a f607 	mul.w	r6, sl, r7
9001fc6a:	b29b      	uxth	r3, r3
9001fc6c:	fb0b 6603 	mla	r6, fp, r3, r6
9001fc70:	fb00 6609 	mla	r6, r0, r9, r6
9001fc74:	fb0e 6608 	mla	r6, lr, r8, r6
9001fc78:	f3c6 2607 	ubfx	r6, r6, #8, #8
9001fc7c:	9600      	str	r6, [sp, #0]
9001fc7e:	2e00      	cmp	r6, #0
9001fc80:	f000 80be 	beq.w	9001fe00 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
9001fc84:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9001fc88:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9001fc8c:	9e02      	ldr	r6, [sp, #8]
9001fc8e:	fb0b fc0c 	mul.w	ip, fp, ip
9001fc92:	fb0b f505 	mul.w	r5, fp, r5
9001fc96:	8836      	ldrh	r6, [r6, #0]
9001fc98:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9001fc9c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fca0:	9501      	str	r5, [sp, #4]
9001fca2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
9001fca6:	44dc      	add	ip, fp
9001fca8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001fcac:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
9001fcb0:	9503      	str	r5, [sp, #12]
9001fcb2:	9d01      	ldr	r5, [sp, #4]
9001fcb4:	f505 7c80 	add.w	ip, r5, #256	; 0x100
9001fcb8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001fcbc:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
9001fcc0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fcc4:	fb0a fc0c 	mul.w	ip, sl, ip
9001fcc8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9001fccc:	fb0a fa01 	mul.w	sl, sl, r1
9001fcd0:	ea4f 251c 	mov.w	r5, ip, lsr #8
9001fcd4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fcd8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
9001fcdc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fce0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9001fce4:	4465      	add	r5, ip
9001fce6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
9001fcea:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
9001fcee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9001fcf2:	fb09 fc0c 	mul.w	ip, r9, ip
9001fcf6:	0a2d      	lsrs	r5, r5, #8
9001fcf8:	fb09 f904 	mul.w	r9, r9, r4
9001fcfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9001fd00:	ea4f 211c 	mov.w	r1, ip, lsr #8
9001fd04:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9001fd08:	f509 7480 	add.w	r4, r9, #256	; 0x100
9001fd0c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9001fd10:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fd14:	437d      	muls	r5, r7
9001fd16:	eb04 2919 	add.w	r9, r4, r9, lsr #8
9001fd1a:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
9001fd1e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
9001fd22:	4461      	add	r1, ip
9001fd24:	fb08 f404 	mul.w	r4, r8, r4
9001fd28:	ea4f 2919 	mov.w	r9, r9, lsr #8
9001fd2c:	fb08 f802 	mul.w	r8, r8, r2
9001fd30:	0a09      	lsrs	r1, r1, #8
9001fd32:	0a22      	lsrs	r2, r4, #8
9001fd34:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9001fd38:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9001fd3c:	fb07 f70a 	mul.w	r7, r7, sl
9001fd40:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9001fd44:	4414      	add	r4, r2
9001fd46:	f508 7280 	add.w	r2, r8, #256	; 0x100
9001fd4a:	0a24      	lsrs	r4, r4, #8
9001fd4c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
9001fd50:	9a03      	ldr	r2, [sp, #12]
9001fd52:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9001fd56:	fb02 5503 	mla	r5, r2, r3, r5
9001fd5a:	ea4f 2818 	mov.w	r8, r8, lsr #8
9001fd5e:	9a00      	ldr	r2, [sp, #0]
9001fd60:	fb04 540e 	mla	r4, r4, lr, r5
9001fd64:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
9001fd68:	1235      	asrs	r5, r6, #8
9001fd6a:	fb01 4100 	mla	r1, r1, r0, r4
9001fd6e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9001fd72:	0a09      	lsrs	r1, r1, #8
9001fd74:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
9001fd78:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
9001fd7c:	fb03 7101 	mla	r1, r3, r1, r7
9001fd80:	fb0e 1e08 	mla	lr, lr, r8, r1
9001fd84:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
9001fd88:	fb00 e101 	mla	r1, r0, r1, lr
9001fd8c:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
9001fd90:	b287      	uxth	r7, r0
9001fd92:	0a09      	lsrs	r1, r1, #8
9001fd94:	437a      	muls	r2, r7
9001fd96:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9001fd9a:	1c53      	adds	r3, r2, #1
9001fd9c:	4321      	orrs	r1, r4
9001fd9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fda2:	0c0a      	lsrs	r2, r1, #16
9001fda4:	f3c1 2407 	ubfx	r4, r1, #8, #8
9001fda8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
9001fdac:	b2c8      	uxtb	r0, r1
9001fdae:	fb12 f207 	smulbb	r2, r2, r7
9001fdb2:	fb14 f407 	smulbb	r4, r4, r7
9001fdb6:	b2db      	uxtb	r3, r3
9001fdb8:	fb10 f007 	smulbb	r0, r0, r7
9001fdbc:	fb05 2503 	mla	r5, r5, r3, r2
9001fdc0:	10f2      	asrs	r2, r6, #3
9001fdc2:	00f6      	lsls	r6, r6, #3
9001fdc4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9001fdc8:	b2ad      	uxth	r5, r5
9001fdca:	b2f6      	uxtb	r6, r6
9001fdcc:	fb02 4203 	mla	r2, r2, r3, r4
9001fdd0:	fb06 0303 	mla	r3, r6, r3, r0
9001fdd4:	b294      	uxth	r4, r2
9001fdd6:	b299      	uxth	r1, r3
9001fdd8:	1c6b      	adds	r3, r5, #1
9001fdda:	1c62      	adds	r2, r4, #1
9001fddc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9001fde0:	1c4b      	adds	r3, r1, #1
9001fde2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9001fde6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
9001fdea:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
9001fdee:	0952      	lsrs	r2, r2, #5
9001fdf0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9001fdf4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9001fdf8:	432b      	orrs	r3, r5
9001fdfa:	4313      	orrs	r3, r2
9001fdfc:	9a02      	ldr	r2, [sp, #8]
9001fdfe:	8013      	strh	r3, [r2, #0]
9001fe00:	b005      	add	sp, #20
9001fe02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fe06:	2500      	movs	r5, #0
9001fe08:	e6e9      	b.n	9001fbde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
9001fe0a:	2100      	movs	r1, #0
9001fe0c:	460d      	mov	r5, r1
9001fe0e:	e6f3      	b.n	9001fbf8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fe10:	2100      	movs	r1, #0
9001fe12:	e6f1      	b.n	9001fbf8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fe14:	4631      	mov	r1, r6
9001fe16:	e6ef      	b.n	9001fbf8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9001fe18:	2400      	movs	r4, #0
9001fe1a:	e700      	b.n	9001fc1e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
9001fe1c:	2200      	movs	r2, #0
9001fe1e:	4614      	mov	r4, r2
9001fe20:	e70b      	b.n	9001fc3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fe22:	4602      	mov	r2, r0
9001fe24:	4604      	mov	r4, r0
9001fe26:	e708      	b.n	9001fc3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fe28:	2200      	movs	r2, #0
9001fe2a:	e706      	b.n	9001fc3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9001fe2c:	4632      	mov	r2, r6
9001fe2e:	e704      	b.n	9001fc3a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

9001fe30 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001fe30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fe34:	b09f      	sub	sp, #124	; 0x7c
9001fe36:	921b      	str	r2, [sp, #108]	; 0x6c
9001fe38:	9309      	str	r3, [sp, #36]	; 0x24
9001fe3a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
9001fe3c:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
9001fe40:	901d      	str	r0, [sp, #116]	; 0x74
9001fe42:	931c      	str	r3, [sp, #112]	; 0x70
9001fe44:	6850      	ldr	r0, [r2, #4]
9001fe46:	9119      	str	r1, [sp, #100]	; 0x64
9001fe48:	6812      	ldr	r2, [r2, #0]
9001fe4a:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
9001fe4c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
9001fe50:	fb00 1303 	mla	r3, r0, r3, r1
9001fe54:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001fe58:	930c      	str	r3, [sp, #48]	; 0x30
9001fe5a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fe5c:	681b      	ldr	r3, [r3, #0]
9001fe5e:	9312      	str	r3, [sp, #72]	; 0x48
9001fe60:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fe62:	685e      	ldr	r6, [r3, #4]
9001fe64:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
9001fe68:	3604      	adds	r6, #4
9001fe6a:	930d      	str	r3, [sp, #52]	; 0x34
9001fe6c:	9b19      	ldr	r3, [sp, #100]	; 0x64
9001fe6e:	2b00      	cmp	r3, #0
9001fe70:	dc03      	bgt.n	9001fe7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001fe72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
9001fe74:	2b00      	cmp	r3, #0
9001fe76:	f340 8387 	ble.w	90020588 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9001fe7a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fe7c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9001fe80:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9001fe84:	1e48      	subs	r0, r1, #1
9001fe86:	1e57      	subs	r7, r2, #1
9001fe88:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fe8a:	2b00      	cmp	r3, #0
9001fe8c:	f340 8194 	ble.w	900201b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
9001fe90:	9c29      	ldr	r4, [sp, #164]	; 0xa4
9001fe92:	142b      	asrs	r3, r5, #16
9001fe94:	ea5f 4c24 	movs.w	ip, r4, asr #16
9001fe98:	d406      	bmi.n	9001fea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fe9a:	4584      	cmp	ip, r0
9001fe9c:	da04      	bge.n	9001fea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fe9e:	2b00      	cmp	r3, #0
9001fea0:	db02      	blt.n	9001fea8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001fea2:	42bb      	cmp	r3, r7
9001fea4:	f2c0 8189 	blt.w	900201ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
9001fea8:	f11c 0c01 	adds.w	ip, ip, #1
9001feac:	f100 8177 	bmi.w	9002019e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001feb0:	4561      	cmp	r1, ip
9001feb2:	f2c0 8174 	blt.w	9002019e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001feb6:	3301      	adds	r3, #1
9001feb8:	f100 8171 	bmi.w	9002019e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001febc:	429a      	cmp	r2, r3
9001febe:	f2c0 816e 	blt.w	9002019e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
9001fec2:	9b09      	ldr	r3, [sp, #36]	; 0x24
9001fec4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
9001fec6:	931a      	str	r3, [sp, #104]	; 0x68
9001fec8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
9001feca:	2b00      	cmp	r3, #0
9001fecc:	f340 8193 	ble.w	900201f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
9001fed0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fed2:	ea4f 4c25 	mov.w	ip, r5, asr #16
9001fed6:	f3c5 3103 	ubfx	r1, r5, #12, #4
9001feda:	f3c3 3203 	ubfx	r2, r3, #12, #4
9001fede:	9b30      	ldr	r3, [sp, #192]	; 0xc0
9001fee0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9001fee4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
9001fee6:	141b      	asrs	r3, r3, #16
9001fee8:	f100 81d6 	bmi.w	90020298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001feec:	f100 38ff 	add.w	r8, r0, #4294967295
9001fef0:	4543      	cmp	r3, r8
9001fef2:	f280 81d1 	bge.w	90020298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fef6:	f1bc 0f00 	cmp.w	ip, #0
9001fefa:	f2c0 81cd 	blt.w	90020298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001fefe:	f10e 38ff 	add.w	r8, lr, #4294967295
9001ff02:	45c4      	cmp	ip, r8
9001ff04:	f280 81c8 	bge.w	90020298 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9001ff08:	b200      	sxth	r0, r0
9001ff0a:	9c12      	ldr	r4, [sp, #72]	; 0x48
9001ff0c:	fb0c 3300 	mla	r3, ip, r0, r3
9001ff10:	eb04 0803 	add.w	r8, r4, r3
9001ff14:	5ce3      	ldrb	r3, [r4, r3]
9001ff16:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
9001ff1a:	ea4f 6e13 	mov.w	lr, r3, lsr #24
9001ff1e:	2a00      	cmp	r2, #0
9001ff20:	f000 81af 	beq.w	90020282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9001ff24:	f898 c001 	ldrb.w	ip, [r8, #1]
9001ff28:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
9001ff2c:	940e      	str	r4, [sp, #56]	; 0x38
9001ff2e:	0e24      	lsrs	r4, r4, #24
9001ff30:	9415      	str	r4, [sp, #84]	; 0x54
9001ff32:	b179      	cbz	r1, 9001ff54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9001ff34:	eb08 0c00 	add.w	ip, r8, r0
9001ff38:	f818 0000 	ldrb.w	r0, [r8, r0]
9001ff3c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001ff40:	900a      	str	r0, [sp, #40]	; 0x28
9001ff42:	0e00      	lsrs	r0, r0, #24
9001ff44:	9013      	str	r0, [sp, #76]	; 0x4c
9001ff46:	f89c 0001 	ldrb.w	r0, [ip, #1]
9001ff4a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
9001ff4e:	900f      	str	r0, [sp, #60]	; 0x3c
9001ff50:	0e00      	lsrs	r0, r0, #24
9001ff52:	9016      	str	r0, [sp, #88]	; 0x58
9001ff54:	b292      	uxth	r2, r2
9001ff56:	9815      	ldr	r0, [sp, #84]	; 0x54
9001ff58:	b289      	uxth	r1, r1
9001ff5a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9001ff5c:	fb02 f901 	mul.w	r9, r2, r1
9001ff60:	0112      	lsls	r2, r2, #4
9001ff62:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9001ff66:	eba2 0809 	sub.w	r8, r2, r9
9001ff6a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9001ff6e:	b289      	uxth	r1, r1
9001ff70:	fa1f f888 	uxth.w	r8, r8
9001ff74:	1a52      	subs	r2, r2, r1
9001ff76:	fb08 f000 	mul.w	r0, r8, r0
9001ff7a:	b292      	uxth	r2, r2
9001ff7c:	fb02 000e 	mla	r0, r2, lr, r0
9001ff80:	fb01 0004 	mla	r0, r1, r4, r0
9001ff84:	9c16      	ldr	r4, [sp, #88]	; 0x58
9001ff86:	fb09 0004 	mla	r0, r9, r4, r0
9001ff8a:	f3c0 2007 	ubfx	r0, r0, #8, #8
9001ff8e:	2800      	cmp	r0, #0
9001ff90:	f000 80fa 	beq.w	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9001ff94:	f1be 0fff 	cmp.w	lr, #255	; 0xff
9001ff98:	d01b      	beq.n	9001ffd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9001ff9a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9001ff9e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
9001ffa2:	fb0e fa0a 	mul.w	sl, lr, sl
9001ffa6:	fb0e fe03 	mul.w	lr, lr, r3
9001ffaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
9001ffae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
9001ffb2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
9001ffb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001ffba:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9001ffbe:	4453      	add	r3, sl
9001ffc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9001ffc4:	0a1b      	lsrs	r3, r3, #8
9001ffc6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9001ffca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9001ffce:	ea43 030c 	orr.w	r3, r3, ip
9001ffd2:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ffd4:	2cff      	cmp	r4, #255	; 0xff
9001ffd6:	d021      	beq.n	9002001c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
9001ffd8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ffda:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
9001ffde:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ffe0:	fb04 fb0b 	mul.w	fp, r4, fp
9001ffe4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
9001ffe6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9001ffea:	9c15      	ldr	r4, [sp, #84]	; 0x54
9001ffec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9001fff0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9001fff4:	fb04 fa0a 	mul.w	sl, r4, sl
9001fff8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9001fffc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020000:	44de      	add	lr, fp
90020002:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020006:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002000a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002000e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020012:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020016:	ea4e 040a 	orr.w	r4, lr, sl
9002001a:	940e      	str	r4, [sp, #56]	; 0x38
9002001c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002001e:	2cff      	cmp	r4, #255	; 0xff
90020020:	d021      	beq.n	90020066 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90020022:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90020024:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020028:	9c13      	ldr	r4, [sp, #76]	; 0x4c
9002002a:	fb04 fb0b 	mul.w	fp, r4, fp
9002002e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90020030:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020034:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020036:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002003a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002003e:	fb04 fa0a 	mul.w	sl, r4, sl
90020042:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020046:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002004a:	44de      	add	lr, fp
9002004c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020050:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020054:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020058:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002005c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020060:	ea4e 040a 	orr.w	r4, lr, sl
90020064:	940a      	str	r4, [sp, #40]	; 0x28
90020066:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020068:	2cff      	cmp	r4, #255	; 0xff
9002006a:	d021      	beq.n	900200b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
9002006c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002006e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020072:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020074:	fb04 fb0b 	mul.w	fp, r4, fp
90020078:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002007a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
9002007e:	9c16      	ldr	r4, [sp, #88]	; 0x58
90020080:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020084:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020088:	fb04 fa0a 	mul.w	sl, r4, sl
9002008c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020090:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020094:	44de      	add	lr, fp
90020096:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002009a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002009e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900200a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900200a6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900200aa:	ea4e 040a 	orr.w	r4, lr, sl
900200ae:	940f      	str	r4, [sp, #60]	; 0x3c
900200b0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900200b2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
900200b6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900200ba:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900200be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
900200c0:	fb08 fc0c 	mul.w	ip, r8, ip
900200c4:	fb02 cc0e 	mla	ip, r2, lr, ip
900200c8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900200cc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900200ce:	fb01 cc0e 	mla	ip, r1, lr, ip
900200d2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
900200d6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
900200d8:	fb09 cc0e 	mla	ip, r9, lr, ip
900200dc:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
900200e0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900200e2:	fb08 f80e 	mul.w	r8, r8, lr
900200e6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900200ea:	fb02 8303 	mla	r3, r2, r3, r8
900200ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
900200f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900200f4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900200f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900200fa:	fb01 330a 	mla	r3, r1, sl, r3
900200fe:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
90020102:	9a0d      	ldr	r2, [sp, #52]	; 0x34
90020104:	fb09 3901 	mla	r9, r9, r1, r3
90020108:	883b      	ldrh	r3, [r7, #0]
9002010a:	4342      	muls	r2, r0
9002010c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020110:	1c50      	adds	r0, r2, #1
90020112:	1219      	asrs	r1, r3, #8
90020114:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90020118:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002011c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90020120:	ea4c 0c09 	orr.w	ip, ip, r9
90020124:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90020128:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002012c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90020130:	b2c0      	uxtb	r0, r0
90020132:	fb12 f204 	smulbb	r2, r2, r4
90020136:	fa5f fc8c 	uxtb.w	ip, ip
9002013a:	fb1e fe04 	smulbb	lr, lr, r4
9002013e:	fb01 2100 	mla	r1, r1, r0, r2
90020142:	10da      	asrs	r2, r3, #3
90020144:	fb1c fc04 	smulbb	ip, ip, r4
90020148:	00db      	lsls	r3, r3, #3
9002014a:	b289      	uxth	r1, r1
9002014c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90020150:	b2db      	uxtb	r3, r3
90020152:	fb02 e200 	mla	r2, r2, r0, lr
90020156:	fb03 c300 	mla	r3, r3, r0, ip
9002015a:	b292      	uxth	r2, r2
9002015c:	fa1f fc83 	uxth.w	ip, r3
90020160:	1c4b      	adds	r3, r1, #1
90020162:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90020166:	f10c 0301 	add.w	r3, ip, #1
9002016a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
9002016e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
90020172:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020176:	430b      	orrs	r3, r1
90020178:	1c51      	adds	r1, r2, #1
9002017a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002017e:	0952      	lsrs	r2, r2, #5
90020180:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90020184:	4313      	orrs	r3, r2
90020186:	803b      	strh	r3, [r7, #0]
90020188:	9b2b      	ldr	r3, [sp, #172]	; 0xac
9002018a:	3702      	adds	r7, #2
9002018c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
9002018e:	441a      	add	r2, r3
90020190:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020192:	441d      	add	r5, r3
90020194:	9b1a      	ldr	r3, [sp, #104]	; 0x68
90020196:	9229      	str	r2, [sp, #164]	; 0xa4
90020198:	3b01      	subs	r3, #1
9002019a:	931a      	str	r3, [sp, #104]	; 0x68
9002019c:	e694      	b.n	9001fec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9002019e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
900201a0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900201a2:	441c      	add	r4, r3
900201a4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900201a6:	441d      	add	r5, r3
900201a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900201aa:	9429      	str	r4, [sp, #164]	; 0xa4
900201ac:	3b01      	subs	r3, #1
900201ae:	9309      	str	r3, [sp, #36]	; 0x24
900201b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900201b2:	3302      	adds	r3, #2
900201b4:	930c      	str	r3, [sp, #48]	; 0x30
900201b6:	e667      	b.n	9001fe88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900201b8:	d024      	beq.n	90020204 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
900201ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
900201bc:	982b      	ldr	r0, [sp, #172]	; 0xac
900201be:	3b01      	subs	r3, #1
900201c0:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900201c2:	fb00 4003 	mla	r0, r0, r3, r4
900201c6:	1400      	asrs	r0, r0, #16
900201c8:	f53f ae7b 	bmi.w	9001fec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900201cc:	3901      	subs	r1, #1
900201ce:	4288      	cmp	r0, r1
900201d0:	f6bf ae77 	bge.w	9001fec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900201d4:	992c      	ldr	r1, [sp, #176]	; 0xb0
900201d6:	fb01 5303 	mla	r3, r1, r3, r5
900201da:	141b      	asrs	r3, r3, #16
900201dc:	f53f ae71 	bmi.w	9001fec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900201e0:	3a01      	subs	r2, #1
900201e2:	4293      	cmp	r3, r2
900201e4:	f6bf ae6d 	bge.w	9001fec2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900201e8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
900201ec:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
900201f0:	f1bb 0f00 	cmp.w	fp, #0
900201f4:	dc70      	bgt.n	900202d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
900201f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900201f8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900201fc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
900201fe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020202:	930c      	str	r3, [sp, #48]	; 0x30
90020204:	9b19      	ldr	r3, [sp, #100]	; 0x64
90020206:	2b00      	cmp	r3, #0
90020208:	f340 81be 	ble.w	90020588 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
9002020c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020210:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020212:	ee30 0a04 	vadd.f32	s0, s0, s8
90020216:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002021a:	eef0 6a62 	vmov.f32	s13, s5
9002021e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020222:	ee31 1a05 	vadd.f32	s2, s2, s10
90020226:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002022a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
9002022e:	eef0 6a43 	vmov.f32	s13, s6
90020232:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020236:	ee16 5a90 	vmov	r5, s13
9002023a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002023e:	ee61 7a27 	vmul.f32	s15, s2, s15
90020242:	ee77 2a62 	vsub.f32	s5, s14, s5
90020246:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002024a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002024e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020252:	ee12 2a90 	vmov	r2, s5
90020256:	eef0 2a47 	vmov.f32	s5, s14
9002025a:	fb92 f3f3 	sdiv	r3, r2, r3
9002025e:	ee13 2a10 	vmov	r2, s6
90020262:	932b      	str	r3, [sp, #172]	; 0xac
90020264:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020266:	eeb0 3a67 	vmov.f32	s6, s15
9002026a:	fb92 f3f3 	sdiv	r3, r2, r3
9002026e:	932c      	str	r3, [sp, #176]	; 0xb0
90020270:	9b19      	ldr	r3, [sp, #100]	; 0x64
90020272:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
90020274:	3b01      	subs	r3, #1
90020276:	9319      	str	r3, [sp, #100]	; 0x64
90020278:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002027a:	bf08      	it	eq
9002027c:	4613      	moveq	r3, r2
9002027e:	9309      	str	r3, [sp, #36]	; 0x24
90020280:	e5f4      	b.n	9001fe6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90020282:	2900      	cmp	r1, #0
90020284:	f43f ae66 	beq.w	9001ff54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020288:	f818 0000 	ldrb.w	r0, [r8, r0]
9002028c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90020290:	900a      	str	r0, [sp, #40]	; 0x28
90020292:	0e00      	lsrs	r0, r0, #24
90020294:	9013      	str	r0, [sp, #76]	; 0x4c
90020296:	e65d      	b.n	9001ff54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90020298:	f113 0801 	adds.w	r8, r3, #1
9002029c:	f53f af74 	bmi.w	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900202a0:	4540      	cmp	r0, r8
900202a2:	f6ff af71 	blt.w	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900202a6:	f11c 0801 	adds.w	r8, ip, #1
900202aa:	f53f af6d 	bmi.w	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900202ae:	45c6      	cmp	lr, r8
900202b0:	f6ff af6a 	blt.w	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900202b4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
900202b6:	b200      	sxth	r0, r0
900202b8:	9302      	str	r3, [sp, #8]
900202ba:	fa0f f38e 	sxth.w	r3, lr
900202be:	9000      	str	r0, [sp, #0]
900202c0:	9301      	str	r3, [sp, #4]
900202c2:	4633      	mov	r3, r6
900202c4:	981d      	ldr	r0, [sp, #116]	; 0x74
900202c6:	e9cd 1405 	strd	r1, r4, [sp, #20]
900202ca:	e9cd c203 	strd	ip, r2, [sp, #12]
900202ce:	4639      	mov	r1, r7
900202d0:	9a12      	ldr	r2, [sp, #72]	; 0x48
900202d2:	f7ff fc63 	bl	9001fb9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
900202d6:	e757      	b.n	90020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900202d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900202da:	f3c5 3003 	ubfx	r0, r5, #12, #4
900202de:	9c29      	ldr	r4, [sp, #164]	; 0xa4
900202e0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900202e4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
900202e6:	1427      	asrs	r7, r4, #16
900202e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
900202ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900202ee:	142b      	asrs	r3, r5, #16
900202f0:	fb01 7303 	mla	r3, r1, r3, r7
900202f4:	18e7      	adds	r7, r4, r3
900202f6:	5ce3      	ldrb	r3, [r4, r3]
900202f8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900202fc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020300:	2a00      	cmp	r2, #0
90020302:	f000 8137 	beq.w	90020574 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90020306:	f897 e001 	ldrb.w	lr, [r7, #1]
9002030a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002030e:	9410      	str	r4, [sp, #64]	; 0x40
90020310:	0e24      	lsrs	r4, r4, #24
90020312:	9417      	str	r4, [sp, #92]	; 0x5c
90020314:	b170      	cbz	r0, 90020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90020316:	eb07 0e01 	add.w	lr, r7, r1
9002031a:	5c79      	ldrb	r1, [r7, r1]
9002031c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020320:	910b      	str	r1, [sp, #44]	; 0x2c
90020322:	0e09      	lsrs	r1, r1, #24
90020324:	9114      	str	r1, [sp, #80]	; 0x50
90020326:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002032a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002032e:	9111      	str	r1, [sp, #68]	; 0x44
90020330:	0e09      	lsrs	r1, r1, #24
90020332:	9118      	str	r1, [sp, #96]	; 0x60
90020334:	b292      	uxth	r2, r2
90020336:	9917      	ldr	r1, [sp, #92]	; 0x5c
90020338:	b280      	uxth	r0, r0
9002033a:	9c14      	ldr	r4, [sp, #80]	; 0x50
9002033c:	fb02 f800 	mul.w	r8, r2, r0
90020340:	0112      	lsls	r2, r2, #4
90020342:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020346:	eba2 0e08 	sub.w	lr, r2, r8
9002034a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002034e:	b280      	uxth	r0, r0
90020350:	fa1f fe8e 	uxth.w	lr, lr
90020354:	1a12      	subs	r2, r2, r0
90020356:	fb0e f101 	mul.w	r1, lr, r1
9002035a:	b292      	uxth	r2, r2
9002035c:	fb02 110c 	mla	r1, r2, ip, r1
90020360:	fb00 1104 	mla	r1, r0, r4, r1
90020364:	9c18      	ldr	r4, [sp, #96]	; 0x60
90020366:	fb08 1104 	mla	r1, r8, r4, r1
9002036a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002036e:	2900      	cmp	r1, #0
90020370:	f000 80f5 	beq.w	9002055e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90020374:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020378:	d019      	beq.n	900203ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
9002037a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002037e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020382:	fb0c fa0a 	mul.w	sl, ip, sl
90020386:	fb0c fc03 	mul.w	ip, ip, r3
9002038a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002038e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020392:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020396:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002039a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002039e:	4453      	add	r3, sl
900203a0:	0a3f      	lsrs	r7, r7, #8
900203a2:	0a1b      	lsrs	r3, r3, #8
900203a4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900203a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900203ac:	433b      	orrs	r3, r7
900203ae:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900203b0:	2cff      	cmp	r4, #255	; 0xff
900203b2:	d020      	beq.n	900203f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
900203b4:	9c10      	ldr	r4, [sp, #64]	; 0x40
900203b6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
900203ba:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900203bc:	4367      	muls	r7, r4
900203be:	9c10      	ldr	r4, [sp, #64]	; 0x40
900203c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900203c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900203c8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
900203ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900203ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900203d2:	fb04 fa0a 	mul.w	sl, r4, sl
900203d6:	44bc      	add	ip, r7
900203d8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900203dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900203e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900203e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900203e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900203ec:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900203f0:	ea4c 040a 	orr.w	r4, ip, sl
900203f4:	9410      	str	r4, [sp, #64]	; 0x40
900203f6:	9c14      	ldr	r4, [sp, #80]	; 0x50
900203f8:	2cff      	cmp	r4, #255	; 0xff
900203fa:	d020      	beq.n	9002043e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
900203fc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900203fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020402:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020404:	4367      	muls	r7, r4
90020406:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020408:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002040c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020410:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020412:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020416:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002041a:	fb04 fa0a 	mul.w	sl, r4, sl
9002041e:	44bc      	add	ip, r7
90020420:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020428:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002042c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020430:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020434:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020438:	ea4c 040a 	orr.w	r4, ip, sl
9002043c:	940b      	str	r4, [sp, #44]	; 0x2c
9002043e:	9c18      	ldr	r4, [sp, #96]	; 0x60
90020440:	2cff      	cmp	r4, #255	; 0xff
90020442:	d020      	beq.n	90020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90020444:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020446:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
9002044a:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002044c:	4367      	muls	r7, r4
9002044e:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020450:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020454:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020458:	9c18      	ldr	r4, [sp, #96]	; 0x60
9002045a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002045e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020462:	fb04 fa0a 	mul.w	sl, r4, sl
90020466:	44bc      	add	ip, r7
90020468:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002046c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020470:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020474:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020478:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002047c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020480:	ea4c 040a 	orr.w	r4, ip, sl
90020484:	9411      	str	r4, [sp, #68]	; 0x44
90020486:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020488:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002048c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020490:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020494:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020496:	fb0e f707 	mul.w	r7, lr, r7
9002049a:	fb02 770c 	mla	r7, r2, ip, r7
9002049e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900204a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
900204a4:	fb00 770c 	mla	r7, r0, ip, r7
900204a8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900204ac:	9c10      	ldr	r4, [sp, #64]	; 0x40
900204ae:	fb08 770c 	mla	r7, r8, ip, r7
900204b2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
900204b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
900204b8:	fb0e fe0c 	mul.w	lr, lr, ip
900204bc:	0a3f      	lsrs	r7, r7, #8
900204be:	fb02 e303 	mla	r3, r2, r3, lr
900204c2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900204c4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900204c8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900204cc:	9a11      	ldr	r2, [sp, #68]	; 0x44
900204ce:	fb00 330a 	mla	r3, r0, sl, r3
900204d2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
900204d6:	f8b9 0000 	ldrh.w	r0, [r9]
900204da:	fb08 3c0c 	mla	ip, r8, ip, r3
900204de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900204e0:	1202      	asrs	r2, r0, #8
900204e2:	434b      	muls	r3, r1
900204e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900204e8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900204ec:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900204f0:	1c59      	adds	r1, r3, #1
900204f2:	ea47 070c 	orr.w	r7, r7, ip
900204f6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900204fa:	0c3b      	lsrs	r3, r7, #16
900204fc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90020500:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90020504:	b2ff      	uxtb	r7, r7
90020506:	fb13 f304 	smulbb	r3, r3, r4
9002050a:	b2c9      	uxtb	r1, r1
9002050c:	fb1c fc04 	smulbb	ip, ip, r4
90020510:	fb02 3201 	mla	r2, r2, r1, r3
90020514:	10c3      	asrs	r3, r0, #3
90020516:	fb17 f704 	smulbb	r7, r7, r4
9002051a:	00c0      	lsls	r0, r0, #3
9002051c:	b292      	uxth	r2, r2
9002051e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90020522:	b2c0      	uxtb	r0, r0
90020524:	fb03 c301 	mla	r3, r3, r1, ip
90020528:	f102 0c01 	add.w	ip, r2, #1
9002052c:	fb00 7001 	mla	r0, r0, r1, r7
90020530:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90020534:	b280      	uxth	r0, r0
90020536:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
9002053a:	b29b      	uxth	r3, r3
9002053c:	1c42      	adds	r2, r0, #1
9002053e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90020542:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90020546:	ea42 020c 	orr.w	r2, r2, ip
9002054a:	f103 0c01 	add.w	ip, r3, #1
9002054e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90020552:	095b      	lsrs	r3, r3, #5
90020554:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020558:	431a      	orrs	r2, r3
9002055a:	f8a9 2000 	strh.w	r2, [r9]
9002055e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
90020560:	f109 0902 	add.w	r9, r9, #2
90020564:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90020566:	f10b 3bff 	add.w	fp, fp, #4294967295
9002056a:	441a      	add	r2, r3
9002056c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002056e:	9229      	str	r2, [sp, #164]	; 0xa4
90020570:	441d      	add	r5, r3
90020572:	e63d      	b.n	900201f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90020574:	2800      	cmp	r0, #0
90020576:	f43f aedd 	beq.w	90020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
9002057a:	5c79      	ldrb	r1, [r7, r1]
9002057c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020580:	910b      	str	r1, [sp, #44]	; 0x2c
90020582:	0e09      	lsrs	r1, r1, #24
90020584:	9114      	str	r1, [sp, #80]	; 0x50
90020586:	e6d5      	b.n	90020334 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90020588:	b01f      	add	sp, #124	; 0x7c
9002058a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002058e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
9002058e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020592:	b089      	sub	sp, #36	; 0x24
90020594:	9101      	str	r1, [sp, #4]
90020596:	9801      	ldr	r0, [sp, #4]
90020598:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
9002059c:	8800      	ldrh	r0, [r0, #0]
9002059e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
900205a2:	1206      	asrs	r6, r0, #8
900205a4:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
900205a8:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
900205ac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
900205b0:	9602      	str	r6, [sp, #8]
900205b2:	10c6      	asrs	r6, r0, #3
900205b4:	00c0      	lsls	r0, r0, #3
900205b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
900205ba:	b2c0      	uxtb	r0, r0
900205bc:	9603      	str	r6, [sp, #12]
900205be:	9004      	str	r0, [sp, #16]
900205c0:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
900205c4:	fb07 100c 	mla	r0, r7, ip, r1
900205c8:	2f00      	cmp	r7, #0
900205ca:	eb02 0e00 	add.w	lr, r2, r0
900205ce:	f2c0 810a 	blt.w	900207e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900205d2:	45b8      	cmp	r8, r7
900205d4:	f340 8107 	ble.w	900207e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
900205d8:	2900      	cmp	r1, #0
900205da:	f2c0 8102 	blt.w	900207e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900205de:	458c      	cmp	ip, r1
900205e0:	f340 80ff 	ble.w	900207e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
900205e4:	5c12      	ldrb	r2, [r2, r0]
900205e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900205ea:	1c4a      	adds	r2, r1, #1
900205ec:	f100 80fe 	bmi.w	900207ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900205f0:	4594      	cmp	ip, r2
900205f2:	f340 80fb 	ble.w	900207ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
900205f6:	2d00      	cmp	r5, #0
900205f8:	f000 80fa 	beq.w	900207f0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
900205fc:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020600:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90020604:	3701      	adds	r7, #1
90020606:	f100 80f7 	bmi.w	900207f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
9002060a:	45b8      	cmp	r8, r7
9002060c:	f340 80f4 	ble.w	900207f8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90020610:	2c00      	cmp	r4, #0
90020612:	f000 80f4 	beq.w	900207fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90020616:	2900      	cmp	r1, #0
90020618:	eb0e 020c 	add.w	r2, lr, ip
9002061c:	f2c0 80ea 	blt.w	900207f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90020620:	458c      	cmp	ip, r1
90020622:	f340 80e7 	ble.w	900207f4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90020626:	f81e 700c 	ldrb.w	r7, [lr, ip]
9002062a:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
9002062e:	3101      	adds	r1, #1
90020630:	f100 80e8 	bmi.w	90020804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90020634:	458c      	cmp	ip, r1
90020636:	f340 80e5 	ble.w	90020804 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
9002063a:	2d00      	cmp	r5, #0
9002063c:	f000 80e4 	beq.w	90020808 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90020640:	7852      	ldrb	r2, [r2, #1]
90020642:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90020646:	0e0b      	lsrs	r3, r1, #24
90020648:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
9002064c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90020650:	9300      	str	r3, [sp, #0]
90020652:	b2a4      	uxth	r4, r4
90020654:	b2ab      	uxth	r3, r5
90020656:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
9002065a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
9002065e:	fb03 f904 	mul.w	r9, r3, r4
90020662:	011b      	lsls	r3, r3, #4
90020664:	fb0a f505 	mul.w	r5, sl, r5
90020668:	ea4f 6817 	mov.w	r8, r7, lsr #24
9002066c:	eba3 0e09 	sub.w	lr, r3, r9
90020670:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
90020674:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
90020678:	0a28      	lsrs	r0, r5, #8
9002067a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
9002067e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020682:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
90020686:	fb0a f303 	mul.w	r3, sl, r3
9002068a:	fb08 f707 	mul.w	r7, r8, r7
9002068e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90020692:	4405      	add	r5, r0
90020694:	fb08 fc0c 	mul.w	ip, r8, ip
90020698:	b2a4      	uxth	r4, r4
9002069a:	0a2d      	lsrs	r5, r5, #8
9002069c:	fa1f fe8e 	uxth.w	lr, lr
900206a0:	1b12      	subs	r2, r2, r4
900206a2:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
900206a6:	b292      	uxth	r2, r2
900206a8:	9005      	str	r0, [sp, #20]
900206aa:	f503 7080 	add.w	r0, r3, #256	; 0x100
900206ae:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900206b2:	ea4f 201c 	mov.w	r0, ip, lsr #8
900206b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900206ba:	0a1b      	lsrs	r3, r3, #8
900206bc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900206c0:	9306      	str	r3, [sp, #24]
900206c2:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
900206c6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
900206ca:	4460      	add	r0, ip
900206cc:	fb0b f303 	mul.w	r3, fp, r3
900206d0:	fb0b f606 	mul.w	r6, fp, r6
900206d4:	0a00      	lsrs	r0, r0, #8
900206d6:	0a1d      	lsrs	r5, r3, #8
900206d8:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
900206dc:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
900206e0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900206e4:	441d      	add	r5, r3
900206e6:	f506 7380 	add.w	r3, r6, #256	; 0x100
900206ea:	eb03 2616 	add.w	r6, r3, r6, lsr #8
900206ee:	f507 7380 	add.w	r3, r7, #256	; 0x100
900206f2:	0a2d      	lsrs	r5, r5, #8
900206f4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
900206f8:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
900206fc:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020700:	0a36      	lsrs	r6, r6, #8
90020702:	0a1b      	lsrs	r3, r3, #8
90020704:	fb05 f50e 	mul.w	r5, r5, lr
90020708:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
9002070c:	9307      	str	r3, [sp, #28]
9002070e:	0e0b      	lsrs	r3, r1, #24
90020710:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90020714:	fb0e f606 	mul.w	r6, lr, r6
90020718:	435f      	muls	r7, r3
9002071a:	4359      	muls	r1, r3
9002071c:	9b05      	ldr	r3, [sp, #20]
9002071e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020722:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020726:	fb03 5502 	mla	r5, r3, r2, r5
9002072a:	9b06      	ldr	r3, [sp, #24]
9002072c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020730:	fb0e fe0b 	mul.w	lr, lr, fp
90020734:	44bc      	add	ip, r7
90020736:	f501 7780 	add.w	r7, r1, #256	; 0x100
9002073a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002073e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
90020742:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020746:	0a09      	lsrs	r1, r1, #8
90020748:	fb0c 5509 	mla	r5, ip, r9, r5
9002074c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90020750:	fb00 5504 	mla	r5, r0, r4, r5
90020754:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
90020758:	9b07      	ldr	r3, [sp, #28]
9002075a:	fb02 6000 	mla	r0, r2, r0, r6
9002075e:	0a2d      	lsrs	r5, r5, #8
90020760:	fb02 e20a 	mla	r2, r2, sl, lr
90020764:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020768:	fb09 0001 	mla	r0, r9, r1, r0
9002076c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90020770:	fb04 0003 	mla	r0, r4, r3, r0
90020774:	9b00      	ldr	r3, [sp, #0]
90020776:	fb04 2408 	mla	r4, r4, r8, r2
9002077a:	9a04      	ldr	r2, [sp, #16]
9002077c:	0a00      	lsrs	r0, r0, #8
9002077e:	fb09 4903 	mla	r9, r9, r3, r4
90020782:	9b02      	ldr	r3, [sp, #8]
90020784:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
90020788:	ea6f 2929 	mvn.w	r9, r9, asr #8
9002078c:	4305      	orrs	r5, r0
9002078e:	fa5f f989 	uxtb.w	r9, r9
90020792:	fb03 f109 	mul.w	r1, r3, r9
90020796:	9b03      	ldr	r3, [sp, #12]
90020798:	fb03 f309 	mul.w	r3, r3, r9
9002079c:	fb02 f909 	mul.w	r9, r2, r9
900207a0:	1c4a      	adds	r2, r1, #1
900207a2:	1c58      	adds	r0, r3, #1
900207a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900207a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900207ac:	0c2a      	lsrs	r2, r5, #16
900207ae:	0a2b      	lsrs	r3, r5, #8
900207b0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900207b4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900207b8:	0212      	lsls	r2, r2, #8
900207ba:	00db      	lsls	r3, r3, #3
900207bc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
900207c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900207c4:	4313      	orrs	r3, r2
900207c6:	f109 0201 	add.w	r2, r9, #1
900207ca:	eb02 2919 	add.w	r9, r2, r9, lsr #8
900207ce:	eb05 2519 	add.w	r5, r5, r9, lsr #8
900207d2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
900207d6:	431d      	orrs	r5, r3
900207d8:	9b01      	ldr	r3, [sp, #4]
900207da:	801d      	strh	r5, [r3, #0]
900207dc:	b009      	add	sp, #36	; 0x24
900207de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900207e2:	2000      	movs	r0, #0
900207e4:	e701      	b.n	900205ea <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
900207e6:	2600      	movs	r6, #0
900207e8:	4630      	mov	r0, r6
900207ea:	e70b      	b.n	90020604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900207ec:	2600      	movs	r6, #0
900207ee:	e709      	b.n	90020604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900207f0:	462e      	mov	r6, r5
900207f2:	e707      	b.n	90020604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
900207f4:	2700      	movs	r7, #0
900207f6:	e71a      	b.n	9002062e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
900207f8:	2100      	movs	r1, #0
900207fa:	460f      	mov	r7, r1
900207fc:	e723      	b.n	90020646 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
900207fe:	4621      	mov	r1, r4
90020800:	4627      	mov	r7, r4
90020802:	e720      	b.n	90020646 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020804:	2100      	movs	r1, #0
90020806:	e71e      	b.n	90020646 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90020808:	4629      	mov	r1, r5
9002080a:	e71c      	b.n	90020646 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

9002080c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9002080c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020810:	b09b      	sub	sp, #108	; 0x6c
90020812:	9218      	str	r2, [sp, #96]	; 0x60
90020814:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90020816:	9019      	str	r0, [sp, #100]	; 0x64
90020818:	9116      	str	r1, [sp, #88]	; 0x58
9002081a:	6850      	ldr	r0, [r2, #4]
9002081c:	9307      	str	r3, [sp, #28]
9002081e:	6812      	ldr	r2, [r2, #0]
90020820:	9d26      	ldr	r5, [sp, #152]	; 0x98
90020822:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90020826:	fb00 1303 	mla	r3, r0, r3, r1
9002082a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002082e:	930a      	str	r3, [sp, #40]	; 0x28
90020830:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020832:	681b      	ldr	r3, [r3, #0]
90020834:	930f      	str	r3, [sp, #60]	; 0x3c
90020836:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020838:	685e      	ldr	r6, [r3, #4]
9002083a:	3604      	adds	r6, #4
9002083c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002083e:	2b00      	cmp	r3, #0
90020840:	dc03      	bgt.n	9002084a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
90020842:	9b18      	ldr	r3, [sp, #96]	; 0x60
90020844:	2b00      	cmp	r3, #0
90020846:	f340 8373 	ble.w	90020f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002084a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
9002084c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020850:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020854:	1e48      	subs	r0, r1, #1
90020856:	1e57      	subs	r7, r2, #1
90020858:	9b07      	ldr	r3, [sp, #28]
9002085a:	2b00      	cmp	r3, #0
9002085c:	f340 818f 	ble.w	90020b7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90020860:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020862:	142b      	asrs	r3, r5, #16
90020864:	ea5f 4c24 	movs.w	ip, r4, asr #16
90020868:	d406      	bmi.n	90020878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002086a:	4584      	cmp	ip, r0
9002086c:	da04      	bge.n	90020878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9002086e:	2b00      	cmp	r3, #0
90020870:	db02      	blt.n	90020878 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90020872:	42bb      	cmp	r3, r7
90020874:	f2c0 8184 	blt.w	90020b80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
90020878:	f11c 0c01 	adds.w	ip, ip, #1
9002087c:	f100 8172 	bmi.w	90020b64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020880:	4561      	cmp	r1, ip
90020882:	f2c0 816f 	blt.w	90020b64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020886:	3301      	adds	r3, #1
90020888:	f100 816c 	bmi.w	90020b64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
9002088c:	429a      	cmp	r2, r3
9002088e:	f2c0 8169 	blt.w	90020b64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90020892:	9b07      	ldr	r3, [sp, #28]
90020894:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90020896:	9317      	str	r3, [sp, #92]	; 0x5c
90020898:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002089a:	2b00      	cmp	r3, #0
9002089c:	f340 818e 	ble.w	90020bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900208a0:	9b25      	ldr	r3, [sp, #148]	; 0x94
900208a2:	ea4f 4c25 	mov.w	ip, r5, asr #16
900208a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
900208aa:	f3c3 3203 	ubfx	r2, r3, #12, #4
900208ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
900208b0:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900208b4:	9b25      	ldr	r3, [sp, #148]	; 0x94
900208b6:	141b      	asrs	r3, r3, #16
900208b8:	f100 81d1 	bmi.w	90020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900208bc:	f101 38ff 	add.w	r8, r1, #4294967295
900208c0:	4543      	cmp	r3, r8
900208c2:	f280 81cc 	bge.w	90020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900208c6:	f1bc 0f00 	cmp.w	ip, #0
900208ca:	f2c0 81c8 	blt.w	90020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900208ce:	f10e 38ff 	add.w	r8, lr, #4294967295
900208d2:	45c4      	cmp	ip, r8
900208d4:	f280 81c3 	bge.w	90020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900208d8:	b209      	sxth	r1, r1
900208da:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
900208dc:	fb0c 3301 	mla	r3, ip, r1, r3
900208e0:	eb04 0803 	add.w	r8, r4, r3
900208e4:	5ce3      	ldrb	r3, [r4, r3]
900208e6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900208ea:	ea4f 6e13 	mov.w	lr, r3, lsr #24
900208ee:	2a00      	cmp	r2, #0
900208f0:	f000 81aa 	beq.w	90020c48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
900208f4:	f898 c001 	ldrb.w	ip, [r8, #1]
900208f8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
900208fc:	940b      	str	r4, [sp, #44]	; 0x2c
900208fe:	0e24      	lsrs	r4, r4, #24
90020900:	9412      	str	r4, [sp, #72]	; 0x48
90020902:	b178      	cbz	r0, 90020924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020904:	eb08 0c01 	add.w	ip, r8, r1
90020908:	f818 1001 	ldrb.w	r1, [r8, r1]
9002090c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020910:	9108      	str	r1, [sp, #32]
90020912:	0e09      	lsrs	r1, r1, #24
90020914:	9110      	str	r1, [sp, #64]	; 0x40
90020916:	f89c 1001 	ldrb.w	r1, [ip, #1]
9002091a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002091e:	910c      	str	r1, [sp, #48]	; 0x30
90020920:	0e09      	lsrs	r1, r1, #24
90020922:	9113      	str	r1, [sp, #76]	; 0x4c
90020924:	b292      	uxth	r2, r2
90020926:	9912      	ldr	r1, [sp, #72]	; 0x48
90020928:	b280      	uxth	r0, r0
9002092a:	9c10      	ldr	r4, [sp, #64]	; 0x40
9002092c:	fb02 f900 	mul.w	r9, r2, r0
90020930:	0112      	lsls	r2, r2, #4
90020932:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90020936:	eba2 0809 	sub.w	r8, r2, r9
9002093a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
9002093e:	b280      	uxth	r0, r0
90020940:	fa1f f888 	uxth.w	r8, r8
90020944:	1a12      	subs	r2, r2, r0
90020946:	fb08 f101 	mul.w	r1, r8, r1
9002094a:	b292      	uxth	r2, r2
9002094c:	fb02 110e 	mla	r1, r2, lr, r1
90020950:	fb00 1104 	mla	r1, r0, r4, r1
90020954:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020956:	fb09 1104 	mla	r1, r9, r4, r1
9002095a:	f3c1 2107 	ubfx	r1, r1, #8, #8
9002095e:	2900      	cmp	r1, #0
90020960:	f000 80f5 	beq.w	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020964:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90020968:	d01b      	beq.n	900209a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
9002096a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002096e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020972:	fb0e fa0a 	mul.w	sl, lr, sl
90020976:	fb0e fe03 	mul.w	lr, lr, r3
9002097a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002097e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020982:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90020986:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002098a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
9002098e:	4453      	add	r3, sl
90020990:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020994:	0a1b      	lsrs	r3, r3, #8
90020996:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
9002099a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002099e:	ea43 030c 	orr.w	r3, r3, ip
900209a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
900209a4:	2cff      	cmp	r4, #255	; 0xff
900209a6:	d021      	beq.n	900209ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900209a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900209aa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900209ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
900209b0:	fb04 fb0b 	mul.w	fp, r4, fp
900209b4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900209b6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
900209ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
900209bc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900209c0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900209c4:	fb04 fa0a 	mul.w	sl, r4, sl
900209c8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900209cc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900209d0:	44de      	add	lr, fp
900209d2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900209d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900209da:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900209de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900209e2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900209e6:	ea4e 040a 	orr.w	r4, lr, sl
900209ea:	940b      	str	r4, [sp, #44]	; 0x2c
900209ec:	9c10      	ldr	r4, [sp, #64]	; 0x40
900209ee:	2cff      	cmp	r4, #255	; 0xff
900209f0:	d021      	beq.n	90020a36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
900209f2:	9c08      	ldr	r4, [sp, #32]
900209f4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
900209f8:	9c10      	ldr	r4, [sp, #64]	; 0x40
900209fa:	fb04 fb0b 	mul.w	fp, r4, fp
900209fe:	9c08      	ldr	r4, [sp, #32]
90020a00:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020a04:	9c10      	ldr	r4, [sp, #64]	; 0x40
90020a06:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020a0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020a0e:	fb04 fa0a 	mul.w	sl, r4, sl
90020a12:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a16:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020a1a:	44de      	add	lr, fp
90020a1c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020a20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020a24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020a28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a2c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020a30:	ea4e 040a 	orr.w	r4, lr, sl
90020a34:	9408      	str	r4, [sp, #32]
90020a36:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020a38:	2cff      	cmp	r4, #255	; 0xff
90020a3a:	d021      	beq.n	90020a80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90020a3c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020a3e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
90020a42:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020a44:	fb04 fb0b 	mul.w	fp, r4, fp
90020a48:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020a4a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020a4e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
90020a50:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90020a54:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90020a58:	fb04 fa0a 	mul.w	sl, r4, sl
90020a5c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a60:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90020a64:	44de      	add	lr, fp
90020a66:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90020a6a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90020a6e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020a72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90020a76:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020a7a:	ea4e 040a 	orr.w	r4, lr, sl
90020a7e:	940c      	str	r4, [sp, #48]	; 0x30
90020a80:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020a82:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
90020a86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020a8a:	43c9      	mvns	r1, r1
90020a8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020a90:	9c08      	ldr	r4, [sp, #32]
90020a92:	fb08 fc0c 	mul.w	ip, r8, ip
90020a96:	fb02 cc0e 	mla	ip, r2, lr, ip
90020a9a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020a9e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
90020aa0:	fb00 cc0e 	mla	ip, r0, lr, ip
90020aa4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
90020aa8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90020aaa:	fb09 cc0e 	mla	ip, r9, lr, ip
90020aae:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
90020ab2:	fb08 f80e 	mul.w	r8, r8, lr
90020ab6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020aba:	fa5f fe81 	uxtb.w	lr, r1
90020abe:	fb02 8303 	mla	r3, r2, r3, r8
90020ac2:	9a08      	ldr	r2, [sp, #32]
90020ac4:	f8b7 8000 	ldrh.w	r8, [r7]
90020ac8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020acc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
90020ad0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90020ad2:	ea4f 01c8 	mov.w	r1, r8, lsl #3
90020ad6:	fb00 330a 	mla	r3, r0, sl, r3
90020ada:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
90020ade:	ea4f 2228 	mov.w	r2, r8, asr #8
90020ae2:	fb09 3900 	mla	r9, r9, r0, r3
90020ae6:	ea4f 00e8 	mov.w	r0, r8, asr #3
90020aea:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90020aee:	b2c9      	uxtb	r1, r1
90020af0:	ea4f 2919 	mov.w	r9, r9, lsr #8
90020af4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90020af8:	fb02 f20e 	mul.w	r2, r2, lr
90020afc:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90020b00:	fb00 f00e 	mul.w	r0, r0, lr
90020b04:	1c53      	adds	r3, r2, #1
90020b06:	fb01 f10e 	mul.w	r1, r1, lr
90020b0a:	ea4c 0c09 	orr.w	ip, ip, r9
90020b0e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
90020b12:	ea4f 431c 	mov.w	r3, ip, lsr #16
90020b16:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020b1a:	4a60      	ldr	r2, [pc, #384]	; (90020c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90020b1c:	b2db      	uxtb	r3, r3
90020b1e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
90020b22:	1c43      	adds	r3, r0, #1
90020b24:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90020b28:	ea4f 231c 	mov.w	r3, ip, lsr #8
90020b2c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020b30:	00db      	lsls	r3, r3, #3
90020b32:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020b36:	4313      	orrs	r3, r2
90020b38:	1c4a      	adds	r2, r1, #1
90020b3a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020b3e:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90020b42:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90020b46:	ea4c 0c03 	orr.w	ip, ip, r3
90020b4a:	f8a7 c000 	strh.w	ip, [r7]
90020b4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020b50:	3702      	adds	r7, #2
90020b52:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020b54:	441a      	add	r2, r3
90020b56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020b58:	441d      	add	r5, r3
90020b5a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90020b5c:	9225      	str	r2, [sp, #148]	; 0x94
90020b5e:	3b01      	subs	r3, #1
90020b60:	9317      	str	r3, [sp, #92]	; 0x5c
90020b62:	e699      	b.n	90020898 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
90020b64:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020b66:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020b68:	441c      	add	r4, r3
90020b6a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020b6c:	441d      	add	r5, r3
90020b6e:	9b07      	ldr	r3, [sp, #28]
90020b70:	9425      	str	r4, [sp, #148]	; 0x94
90020b72:	3b01      	subs	r3, #1
90020b74:	9307      	str	r3, [sp, #28]
90020b76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020b78:	3302      	adds	r3, #2
90020b7a:	930a      	str	r3, [sp, #40]	; 0x28
90020b7c:	e66c      	b.n	90020858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020b7e:	d024      	beq.n	90020bca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
90020b80:	9b07      	ldr	r3, [sp, #28]
90020b82:	9827      	ldr	r0, [sp, #156]	; 0x9c
90020b84:	3b01      	subs	r3, #1
90020b86:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020b88:	fb00 4003 	mla	r0, r0, r3, r4
90020b8c:	1400      	asrs	r0, r0, #16
90020b8e:	f53f ae80 	bmi.w	90020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020b92:	3901      	subs	r1, #1
90020b94:	4288      	cmp	r0, r1
90020b96:	f6bf ae7c 	bge.w	90020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020b9a:	9928      	ldr	r1, [sp, #160]	; 0xa0
90020b9c:	fb01 5303 	mla	r3, r1, r3, r5
90020ba0:	141b      	asrs	r3, r3, #16
90020ba2:	f53f ae76 	bmi.w	90020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020ba6:	3a01      	subs	r2, #1
90020ba8:	4293      	cmp	r3, r2
90020baa:	f6bf ae72 	bge.w	90020892 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
90020bae:	f8dd b01c 	ldr.w	fp, [sp, #28]
90020bb2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90020bb6:	f1bb 0f00 	cmp.w	fp, #0
90020bba:	dc71      	bgt.n	90020ca0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90020bbc:	9b07      	ldr	r3, [sp, #28]
90020bbe:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90020bc2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90020bc4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90020bc8:	930a      	str	r3, [sp, #40]	; 0x28
90020bca:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020bcc:	2b00      	cmp	r3, #0
90020bce:	f340 81af 	ble.w	90020f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90020bd2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90020bd6:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020bd8:	ee30 0a04 	vadd.f32	s0, s0, s8
90020bdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
90020be0:	eef0 6a62 	vmov.f32	s13, s5
90020be4:	eec7 7a00 	vdiv.f32	s15, s14, s0
90020be8:	ee31 1a05 	vadd.f32	s2, s2, s10
90020bec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020bf0:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
90020bf4:	eef0 6a43 	vmov.f32	s13, s6
90020bf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90020bfc:	ee16 5a90 	vmov	r5, s13
90020c00:	ee20 7aa7 	vmul.f32	s14, s1, s15
90020c04:	ee61 7a27 	vmul.f32	s15, s2, s15
90020c08:	ee77 2a62 	vsub.f32	s5, s14, s5
90020c0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90020c10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90020c14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90020c18:	ee12 2a90 	vmov	r2, s5
90020c1c:	eef0 2a47 	vmov.f32	s5, s14
90020c20:	fb92 f3f3 	sdiv	r3, r2, r3
90020c24:	ee13 2a10 	vmov	r2, s6
90020c28:	9327      	str	r3, [sp, #156]	; 0x9c
90020c2a:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020c2c:	eeb0 3a67 	vmov.f32	s6, s15
90020c30:	fb92 f3f3 	sdiv	r3, r2, r3
90020c34:	9328      	str	r3, [sp, #160]	; 0xa0
90020c36:	9b16      	ldr	r3, [sp, #88]	; 0x58
90020c38:	9a18      	ldr	r2, [sp, #96]	; 0x60
90020c3a:	3b01      	subs	r3, #1
90020c3c:	9316      	str	r3, [sp, #88]	; 0x58
90020c3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90020c40:	bf08      	it	eq
90020c42:	4613      	moveq	r3, r2
90020c44:	9307      	str	r3, [sp, #28]
90020c46:	e5f9      	b.n	9002083c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90020c48:	2800      	cmp	r0, #0
90020c4a:	f43f ae6b 	beq.w	90020924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020c4e:	f818 1001 	ldrb.w	r1, [r8, r1]
90020c52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020c56:	9108      	str	r1, [sp, #32]
90020c58:	0e09      	lsrs	r1, r1, #24
90020c5a:	9110      	str	r1, [sp, #64]	; 0x40
90020c5c:	e662      	b.n	90020924 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90020c5e:	f113 0801 	adds.w	r8, r3, #1
90020c62:	f53f af74 	bmi.w	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020c66:	4541      	cmp	r1, r8
90020c68:	f6ff af71 	blt.w	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020c6c:	f11c 0801 	adds.w	r8, ip, #1
90020c70:	f53f af6d 	bmi.w	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020c74:	45c6      	cmp	lr, r8
90020c76:	f6ff af6a 	blt.w	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020c7a:	b209      	sxth	r1, r1
90020c7c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
90020c80:	fa0f f38e 	sxth.w	r3, lr
90020c84:	9100      	str	r1, [sp, #0]
90020c86:	4639      	mov	r1, r7
90020c88:	9301      	str	r3, [sp, #4]
90020c8a:	4633      	mov	r3, r6
90020c8c:	e9cd 2004 	strd	r2, r0, [sp, #16]
90020c90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90020c92:	9819      	ldr	r0, [sp, #100]	; 0x64
90020c94:	f7ff fc7b 	bl	9002058e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
90020c98:	e759      	b.n	90020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
90020c9a:	bf00      	nop
90020c9c:	fffff800 	.word	0xfffff800
90020ca0:	9b25      	ldr	r3, [sp, #148]	; 0x94
90020ca2:	f3c5 3003 	ubfx	r0, r5, #12, #4
90020ca6:	9c25      	ldr	r4, [sp, #148]	; 0x94
90020ca8:	f3c3 3203 	ubfx	r2, r3, #12, #4
90020cac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90020cae:	1427      	asrs	r7, r4, #16
90020cb0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
90020cb2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020cb6:	142b      	asrs	r3, r5, #16
90020cb8:	fb01 7303 	mla	r3, r1, r3, r7
90020cbc:	18e7      	adds	r7, r4, r3
90020cbe:	5ce3      	ldrb	r3, [r4, r3]
90020cc0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90020cc4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90020cc8:	2a00      	cmp	r2, #0
90020cca:	f000 8127 	beq.w	90020f1c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90020cce:	f897 e001 	ldrb.w	lr, [r7, #1]
90020cd2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90020cd6:	940d      	str	r4, [sp, #52]	; 0x34
90020cd8:	0e24      	lsrs	r4, r4, #24
90020cda:	9414      	str	r4, [sp, #80]	; 0x50
90020cdc:	b170      	cbz	r0, 90020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020cde:	eb07 0e01 	add.w	lr, r7, r1
90020ce2:	5c79      	ldrb	r1, [r7, r1]
90020ce4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020ce8:	9109      	str	r1, [sp, #36]	; 0x24
90020cea:	0e09      	lsrs	r1, r1, #24
90020cec:	9111      	str	r1, [sp, #68]	; 0x44
90020cee:	f89e 1001 	ldrb.w	r1, [lr, #1]
90020cf2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020cf6:	910e      	str	r1, [sp, #56]	; 0x38
90020cf8:	0e09      	lsrs	r1, r1, #24
90020cfa:	9115      	str	r1, [sp, #84]	; 0x54
90020cfc:	b292      	uxth	r2, r2
90020cfe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020d00:	b280      	uxth	r0, r0
90020d02:	fb02 f800 	mul.w	r8, r2, r0
90020d06:	0112      	lsls	r2, r2, #4
90020d08:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90020d0c:	eba2 0e08 	sub.w	lr, r2, r8
90020d10:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
90020d14:	9a14      	ldr	r2, [sp, #80]	; 0x50
90020d16:	b280      	uxth	r0, r0
90020d18:	fa1f fe8e 	uxth.w	lr, lr
90020d1c:	1a09      	subs	r1, r1, r0
90020d1e:	fb0e f202 	mul.w	r2, lr, r2
90020d22:	b289      	uxth	r1, r1
90020d24:	fb01 220c 	mla	r2, r1, ip, r2
90020d28:	fb00 2204 	mla	r2, r0, r4, r2
90020d2c:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020d2e:	fb08 2204 	mla	r2, r8, r4, r2
90020d32:	f3c2 2207 	ubfx	r2, r2, #8, #8
90020d36:	2a00      	cmp	r2, #0
90020d38:	f000 80e5 	beq.w	90020f06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90020d3c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90020d40:	d019      	beq.n	90020d76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
90020d42:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
90020d46:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020d4a:	fb0c fa0a 	mul.w	sl, ip, sl
90020d4e:	fb0c fc03 	mul.w	ip, ip, r3
90020d52:	ea4f 231a 	mov.w	r3, sl, lsr #8
90020d56:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90020d5a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90020d5e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020d62:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90020d66:	4453      	add	r3, sl
90020d68:	0a3f      	lsrs	r7, r7, #8
90020d6a:	0a1b      	lsrs	r3, r3, #8
90020d6c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90020d70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
90020d74:	433b      	orrs	r3, r7
90020d76:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020d78:	2cff      	cmp	r4, #255	; 0xff
90020d7a:	d020      	beq.n	90020dbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
90020d7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020d7e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020d82:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020d84:	4367      	muls	r7, r4
90020d86:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020d88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020d8c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020d90:	9c14      	ldr	r4, [sp, #80]	; 0x50
90020d92:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020d96:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020d9a:	fb04 fa0a 	mul.w	sl, r4, sl
90020d9e:	44bc      	add	ip, r7
90020da0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020da4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020da8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020dac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020db0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020db4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020db8:	ea4c 040a 	orr.w	r4, ip, sl
90020dbc:	940d      	str	r4, [sp, #52]	; 0x34
90020dbe:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020dc0:	2cff      	cmp	r4, #255	; 0xff
90020dc2:	d020      	beq.n	90020e06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
90020dc4:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020dc6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020dca:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020dcc:	4367      	muls	r7, r4
90020dce:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020dd0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020dd4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020dd8:	9c11      	ldr	r4, [sp, #68]	; 0x44
90020dda:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020dde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020de2:	fb04 fa0a 	mul.w	sl, r4, sl
90020de6:	44bc      	add	ip, r7
90020de8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020dec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020df0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020df4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020df8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020dfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020e00:	ea4c 040a 	orr.w	r4, ip, sl
90020e04:	9409      	str	r4, [sp, #36]	; 0x24
90020e06:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020e08:	2cff      	cmp	r4, #255	; 0xff
90020e0a:	d020      	beq.n	90020e4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90020e0c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020e0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020e12:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020e14:	4367      	muls	r7, r4
90020e16:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020e18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90020e1c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
90020e20:	9c15      	ldr	r4, [sp, #84]	; 0x54
90020e22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90020e26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020e2a:	fb04 fa0a 	mul.w	sl, r4, sl
90020e2e:	44bc      	add	ip, r7
90020e30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90020e34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020e38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90020e3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90020e40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90020e44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90020e48:	ea4c 040a 	orr.w	r4, ip, sl
90020e4c:	940e      	str	r4, [sp, #56]	; 0x38
90020e4e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020e50:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
90020e54:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90020e58:	43d2      	mvns	r2, r2
90020e5a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
90020e5e:	9c09      	ldr	r4, [sp, #36]	; 0x24
90020e60:	b2d2      	uxtb	r2, r2
90020e62:	fb0e f707 	mul.w	r7, lr, r7
90020e66:	fb01 770c 	mla	r7, r1, ip, r7
90020e6a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020e6e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90020e70:	fb00 770c 	mla	r7, r0, ip, r7
90020e74:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90020e78:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90020e7a:	fb08 770c 	mla	r7, r8, ip, r7
90020e7e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
90020e82:	fb0e fe0c 	mul.w	lr, lr, ip
90020e86:	0a3f      	lsrs	r7, r7, #8
90020e88:	fb01 e303 	mla	r3, r1, r3, lr
90020e8c:	9909      	ldr	r1, [sp, #36]	; 0x24
90020e8e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
90020e92:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90020e96:	990e      	ldr	r1, [sp, #56]	; 0x38
90020e98:	fb00 330a 	mla	r3, r0, sl, r3
90020e9c:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90020ea0:	fb08 3c0c 	mla	ip, r8, ip, r3
90020ea4:	f8b9 3000 	ldrh.w	r3, [r9]
90020ea8:	1218      	asrs	r0, r3, #8
90020eaa:	10d9      	asrs	r1, r3, #3
90020eac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90020eb0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90020eb4:	00db      	lsls	r3, r3, #3
90020eb6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90020eba:	4350      	muls	r0, r2
90020ebc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90020ec0:	b2db      	uxtb	r3, r3
90020ec2:	4351      	muls	r1, r2
90020ec4:	ea47 070c 	orr.w	r7, r7, ip
90020ec8:	4353      	muls	r3, r2
90020eca:	1c42      	adds	r2, r0, #1
90020ecc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020ed0:	0c3a      	lsrs	r2, r7, #16
90020ed2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90020ed6:	4a18      	ldr	r2, [pc, #96]	; (90020f38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90020ed8:	b2c0      	uxtb	r0, r0
90020eda:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90020ede:	1c4a      	adds	r2, r1, #1
90020ee0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020ee4:	0a3a      	lsrs	r2, r7, #8
90020ee6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90020eea:	00c9      	lsls	r1, r1, #3
90020eec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90020ef0:	4301      	orrs	r1, r0
90020ef2:	1c58      	adds	r0, r3, #1
90020ef4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90020ef8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90020efc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90020f00:	4308      	orrs	r0, r1
90020f02:	f8a9 0000 	strh.w	r0, [r9]
90020f06:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90020f08:	f109 0902 	add.w	r9, r9, #2
90020f0c:	9a25      	ldr	r2, [sp, #148]	; 0x94
90020f0e:	f10b 3bff 	add.w	fp, fp, #4294967295
90020f12:	441a      	add	r2, r3
90020f14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90020f16:	9225      	str	r2, [sp, #148]	; 0x94
90020f18:	441d      	add	r5, r3
90020f1a:	e64c      	b.n	90020bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90020f1c:	2800      	cmp	r0, #0
90020f1e:	f43f aeed 	beq.w	90020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020f22:	5c79      	ldrb	r1, [r7, r1]
90020f24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90020f28:	9109      	str	r1, [sp, #36]	; 0x24
90020f2a:	0e09      	lsrs	r1, r1, #24
90020f2c:	9111      	str	r1, [sp, #68]	; 0x44
90020f2e:	e6e5      	b.n	90020cfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90020f30:	b01b      	add	sp, #108	; 0x6c
90020f32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020f36:	bf00      	nop
90020f38:	fffff800 	.word	0xfffff800

90020f3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90020f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020f40:	b085      	sub	sp, #20
90020f42:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90020f46:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90020f4a:	2800      	cmp	r0, #0
90020f4c:	9103      	str	r1, [sp, #12]
90020f4e:	fb00 7406 	mla	r4, r0, r6, r7
90020f52:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90020f56:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90020f5a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90020f5e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90020f62:	eb03 0904 	add.w	r9, r3, r4
90020f66:	9501      	str	r5, [sp, #4]
90020f68:	f2c0 8150 	blt.w	9002120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020f6c:	4583      	cmp	fp, r0
90020f6e:	f340 814d 	ble.w	9002120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
90020f72:	2f00      	cmp	r7, #0
90020f74:	f2c0 8146 	blt.w	90021204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020f78:	42be      	cmp	r6, r7
90020f7a:	f340 8143 	ble.w	90021204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
90020f7e:	f813 c004 	ldrb.w	ip, [r3, r4]
90020f82:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
90020f86:	f64f 041f 	movw	r4, #63519	; 0xf81f
90020f8a:	ea4f 02ec 	mov.w	r2, ip, asr #3
90020f8e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90020f92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020f96:	4355      	muls	r5, r2
90020f98:	fb0c f203 	mul.w	r2, ip, r3
90020f9c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90020fa0:	f605 0501 	addw	r5, r5, #2049	; 0x801
90020fa4:	441d      	add	r5, r3
90020fa6:	f102 0320 	add.w	r3, r2, #32
90020faa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90020fae:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90020fb2:	0a1b      	lsrs	r3, r3, #8
90020fb4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90020fb8:	431c      	orrs	r4, r3
90020fba:	1c7b      	adds	r3, r7, #1
90020fbc:	f100 812b 	bmi.w	90021216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020fc0:	429e      	cmp	r6, r3
90020fc2:	f340 8128 	ble.w	90021216 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
90020fc6:	2900      	cmp	r1, #0
90020fc8:	f000 8128 	beq.w	9002121c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90020fcc:	9a01      	ldr	r2, [sp, #4]
90020fce:	f899 3001 	ldrb.w	r3, [r9, #1]
90020fd2:	8855      	ldrh	r5, [r2, #2]
90020fd4:	ea4f 08e3 	mov.w	r8, r3, asr #3
90020fd8:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90020fdc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90020fe0:	fb08 f802 	mul.w	r8, r8, r2
90020fe4:	f64f 021f 	movw	r2, #63519	; 0xf81f
90020fe8:	435d      	muls	r5, r3
90020fea:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90020fee:	f608 0801 	addw	r8, r8, #2049	; 0x801
90020ff2:	44d0      	add	r8, sl
90020ff4:	f105 0a20 	add.w	sl, r5, #32
90020ff8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90020ffc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021000:	0a2d      	lsrs	r5, r5, #8
90021002:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021006:	432a      	orrs	r2, r5
90021008:	3001      	adds	r0, #1
9002100a:	f100 810d 	bmi.w	90021228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002100e:	4583      	cmp	fp, r0
90021010:	f340 810a 	ble.w	90021228 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90021014:	f1be 0f00 	cmp.w	lr, #0
90021018:	f000 810b 	beq.w	90021232 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
9002101c:	2f00      	cmp	r7, #0
9002101e:	f2c0 8100 	blt.w	90021222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90021022:	42be      	cmp	r6, r7
90021024:	f340 80fd 	ble.w	90021222 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90021028:	9801      	ldr	r0, [sp, #4]
9002102a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
9002102e:	f819 5006 	ldrb.w	r5, [r9, r6]
90021032:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90021036:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9002103a:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
9002103e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90021042:	fb0a fa00 	mul.w	sl, sl, r0
90021046:	fb05 f808 	mul.w	r8, r5, r8
9002104a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002104e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90021052:	4482      	add	sl, r0
90021054:	f108 0020 	add.w	r0, r8, #32
90021058:	eb00 2018 	add.w	r0, r0, r8, lsr #8
9002105c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021060:	0a00      	lsrs	r0, r0, #8
90021062:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021066:	ea4b 0b00 	orr.w	fp, fp, r0
9002106a:	3701      	adds	r7, #1
9002106c:	f100 80e6 	bmi.w	9002123c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90021070:	42be      	cmp	r6, r7
90021072:	f340 80e3 	ble.w	9002123c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
90021076:	2900      	cmp	r1, #0
90021078:	f000 80e3 	beq.w	90021242 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
9002107c:	3601      	adds	r6, #1
9002107e:	9801      	ldr	r0, [sp, #4]
90021080:	f819 7006 	ldrb.w	r7, [r9, r6]
90021084:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021088:	ea4f 09e7 	mov.w	r9, r7, asr #3
9002108c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90021090:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021094:	fb09 f906 	mul.w	r9, r9, r6
90021098:	fb07 f800 	mul.w	r8, r7, r0
9002109c:	f64f 001f 	movw	r0, #63519	; 0xf81f
900210a0:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900210a4:	f609 0901 	addw	r9, r9, #2049	; 0x801
900210a8:	44d1      	add	r9, sl
900210aa:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900210ae:	f108 0020 	add.w	r0, r8, #32
900210b2:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900210b6:	0a00      	lsrs	r0, r0, #8
900210b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900210bc:	4330      	orrs	r0, r6
900210be:	b28e      	uxth	r6, r1
900210c0:	fa1f f98e 	uxth.w	r9, lr
900210c4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900210c8:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
900210cc:	fb06 f809 	mul.w	r8, r6, r9
900210d0:	0136      	lsls	r6, r6, #4
900210d2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900210d6:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
900210da:	9601      	str	r6, [sp, #4]
900210dc:	ea4a 0404 	orr.w	r4, sl, r4
900210e0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900210e4:	fa1f f689 	uxth.w	r6, r9
900210e8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900210ec:	fb11 f90e 	smulbb	r9, r1, lr
900210f0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900210f4:	9602      	str	r6, [sp, #8]
900210f6:	4626      	mov	r6, r4
900210f8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
900210fc:	f1ce 0410 	rsb	r4, lr, #16
90021100:	ea4a 0202 	orr.w	r2, sl, r2
90021104:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021108:	1a64      	subs	r4, r4, r1
9002110a:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002110e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021112:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021116:	434a      	muls	r2, r1
90021118:	eb09 0444 	add.w	r4, r9, r4, lsl #1
9002111c:	ea4a 0000 	orr.w	r0, sl, r0
90021120:	9903      	ldr	r1, [sp, #12]
90021122:	fb04 2406 	mla	r4, r4, r6, r2
90021126:	9e02      	ldr	r6, [sp, #8]
90021128:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
9002112c:	fb09 4200 	mla	r2, r9, r0, r4
90021130:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021134:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90021138:	8808      	ldrh	r0, [r1, #0]
9002113a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
9002113e:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
90021142:	ea44 0b0b 	orr.w	fp, r4, fp
90021146:	9c01      	ldr	r4, [sp, #4]
90021148:	b289      	uxth	r1, r1
9002114a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
9002114e:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021152:	1ba4      	subs	r4, r4, r6
90021154:	9e01      	ldr	r6, [sp, #4]
90021156:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002115a:	eba6 0608 	sub.w	r6, r6, r8
9002115e:	b2a4      	uxth	r4, r4
90021160:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021164:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021168:	b2b6      	uxth	r6, r6
9002116a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
9002116e:	4373      	muls	r3, r6
90021170:	ea42 0e0e 	orr.w	lr, r2, lr
90021174:	fb0c 3304 	mla	r3, ip, r4, r3
90021178:	9c02      	ldr	r4, [sp, #8]
9002117a:	fa1f f28e 	uxth.w	r2, lr
9002117e:	fb04 3505 	mla	r5, r4, r5, r3
90021182:	10d4      	asrs	r4, r2, #3
90021184:	fb08 5707 	mla	r7, r8, r7, r5
90021188:	1215      	asrs	r5, r2, #8
9002118a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002118e:	00d2      	lsls	r2, r2, #3
90021190:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021194:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021198:	b2d2      	uxtb	r2, r2
9002119a:	434f      	muls	r7, r1
9002119c:	1c7b      	adds	r3, r7, #1
9002119e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
900211a2:	1203      	asrs	r3, r0, #8
900211a4:	ea6f 2717 	mvn.w	r7, r7, lsr #8
900211a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
900211ac:	b2ff      	uxtb	r7, r7
900211ae:	fb13 f307 	smulbb	r3, r3, r7
900211b2:	fb05 3501 	mla	r5, r5, r1, r3
900211b6:	10c3      	asrs	r3, r0, #3
900211b8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
900211bc:	b2ad      	uxth	r5, r5
900211be:	fb13 f307 	smulbb	r3, r3, r7
900211c2:	fb04 3401 	mla	r4, r4, r1, r3
900211c6:	00c3      	lsls	r3, r0, #3
900211c8:	b2db      	uxtb	r3, r3
900211ca:	b2a4      	uxth	r4, r4
900211cc:	fb13 f307 	smulbb	r3, r3, r7
900211d0:	fb02 3101 	mla	r1, r2, r1, r3
900211d4:	1c6b      	adds	r3, r5, #1
900211d6:	1c62      	adds	r2, r4, #1
900211d8:	b289      	uxth	r1, r1
900211da:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900211de:	1c4b      	adds	r3, r1, #1
900211e0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900211e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900211e8:	9a03      	ldr	r2, [sp, #12]
900211ea:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900211ee:	0964      	lsrs	r4, r4, #5
900211f0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900211f4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900211f8:	432b      	orrs	r3, r5
900211fa:	4323      	orrs	r3, r4
900211fc:	8013      	strh	r3, [r2, #0]
900211fe:	b005      	add	sp, #20
90021200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021204:	f04f 0c00 	mov.w	ip, #0
90021208:	4664      	mov	r4, ip
9002120a:	e6d6      	b.n	90020fba <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
9002120c:	2300      	movs	r3, #0
9002120e:	469c      	mov	ip, r3
90021210:	461a      	mov	r2, r3
90021212:	461c      	mov	r4, r3
90021214:	e6f8      	b.n	90021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90021216:	2300      	movs	r3, #0
90021218:	461a      	mov	r2, r3
9002121a:	e6f5      	b.n	90021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
9002121c:	460b      	mov	r3, r1
9002121e:	460a      	mov	r2, r1
90021220:	e6f2      	b.n	90021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90021222:	2500      	movs	r5, #0
90021224:	46ab      	mov	fp, r5
90021226:	e720      	b.n	9002106a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90021228:	2700      	movs	r7, #0
9002122a:	463d      	mov	r5, r7
9002122c:	4638      	mov	r0, r7
9002122e:	46bb      	mov	fp, r7
90021230:	e745      	b.n	900210be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90021232:	4677      	mov	r7, lr
90021234:	4675      	mov	r5, lr
90021236:	4670      	mov	r0, lr
90021238:	46f3      	mov	fp, lr
9002123a:	e740      	b.n	900210be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
9002123c:	2700      	movs	r7, #0
9002123e:	4638      	mov	r0, r7
90021240:	e73d      	b.n	900210be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90021242:	460f      	mov	r7, r1
90021244:	4608      	mov	r0, r1
90021246:	e73a      	b.n	900210be <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90021248 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002124c:	b097      	sub	sp, #92	; 0x5c
9002124e:	9214      	str	r2, [sp, #80]	; 0x50
90021250:	9308      	str	r3, [sp, #32]
90021252:	9a25      	ldr	r2, [sp, #148]	; 0x94
90021254:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90021258:	9015      	str	r0, [sp, #84]	; 0x54
9002125a:	9312      	str	r3, [sp, #72]	; 0x48
9002125c:	6850      	ldr	r0, [r2, #4]
9002125e:	9111      	str	r1, [sp, #68]	; 0x44
90021260:	6812      	ldr	r2, [r2, #0]
90021262:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90021266:	fb00 1303 	mla	r3, r0, r3, r1
9002126a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002126e:	9309      	str	r3, [sp, #36]	; 0x24
90021270:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021272:	681b      	ldr	r3, [r3, #0]
90021274:	930b      	str	r3, [sp, #44]	; 0x2c
90021276:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021278:	685b      	ldr	r3, [r3, #4]
9002127a:	930c      	str	r3, [sp, #48]	; 0x30
9002127c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
90021280:	930a      	str	r3, [sp, #40]	; 0x28
90021282:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021284:	2b00      	cmp	r3, #0
90021286:	dc03      	bgt.n	90021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90021288:	9b14      	ldr	r3, [sp, #80]	; 0x50
9002128a:	2b00      	cmp	r3, #0
9002128c:	f340 83cd 	ble.w	90021a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90021290:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021292:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021296:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002129a:	1e48      	subs	r0, r1, #1
9002129c:	1e55      	subs	r5, r2, #1
9002129e:	9b08      	ldr	r3, [sp, #32]
900212a0:	2b00      	cmp	r3, #0
900212a2:	f340 81a5 	ble.w	900215f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
900212a6:	9e21      	ldr	r6, [sp, #132]	; 0x84
900212a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
900212aa:	1436      	asrs	r6, r6, #16
900212ac:	ea4f 4323 	mov.w	r3, r3, asr #16
900212b0:	d406      	bmi.n	900212c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212b2:	4286      	cmp	r6, r0
900212b4:	da04      	bge.n	900212c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212b6:	2b00      	cmp	r3, #0
900212b8:	db02      	blt.n	900212c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900212ba:	42ab      	cmp	r3, r5
900212bc:	f2c0 8199 	blt.w	900215f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
900212c0:	3601      	adds	r6, #1
900212c2:	f100 8186 	bmi.w	900215d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900212c6:	42b1      	cmp	r1, r6
900212c8:	f2c0 8183 	blt.w	900215d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900212cc:	3301      	adds	r3, #1
900212ce:	f100 8180 	bmi.w	900215d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900212d2:	429a      	cmp	r2, r3
900212d4:	f2c0 817d 	blt.w	900215d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900212d8:	9b08      	ldr	r3, [sp, #32]
900212da:	f64f 061f 	movw	r6, #63519	; 0xf81f
900212de:	9f09      	ldr	r7, [sp, #36]	; 0x24
900212e0:	9313      	str	r3, [sp, #76]	; 0x4c
900212e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900212e4:	2b00      	cmp	r3, #0
900212e6:	f340 81a6 	ble.w	90021636 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
900212ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
900212ec:	9d21      	ldr	r5, [sp, #132]	; 0x84
900212ee:	1418      	asrs	r0, r3, #16
900212f0:	9b21      	ldr	r3, [sp, #132]	; 0x84
900212f2:	142d      	asrs	r5, r5, #16
900212f4:	f3c3 3103 	ubfx	r1, r3, #12, #4
900212f8:	9b22      	ldr	r3, [sp, #136]	; 0x88
900212fa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
900212fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021300:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021304:	f100 81fa 	bmi.w	900216fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021308:	f102 3eff 	add.w	lr, r2, #4294967295
9002130c:	4575      	cmp	r5, lr
9002130e:	f280 81f5 	bge.w	900216fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021312:	2800      	cmp	r0, #0
90021314:	f2c0 81f2 	blt.w	900216fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021318:	f103 3eff 	add.w	lr, r3, #4294967295
9002131c:	4570      	cmp	r0, lr
9002131e:	f280 81ed 	bge.w	900216fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90021322:	b212      	sxth	r2, r2
90021324:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021326:	fa1f fe81 	uxth.w	lr, r1
9002132a:	fb00 5002 	mla	r0, r0, r2, r5
9002132e:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021332:	eb03 0a00 	add.w	sl, r3, r0
90021336:	f813 9000 	ldrb.w	r9, [r3, r0]
9002133a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
9002133e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021342:	b29b      	uxth	r3, r3
90021344:	f1bc 0f00 	cmp.w	ip, #0
90021348:	f000 81bb 	beq.w	900216c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
9002134c:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021350:	eb0a 0b02 	add.w	fp, sl, r2
90021354:	fa1f fa8c 	uxth.w	sl, ip
90021358:	940d      	str	r4, [sp, #52]	; 0x34
9002135a:	fb0a fe0e 	mul.w	lr, sl, lr
9002135e:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021362:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021366:	eba5 050e 	sub.w	r5, r5, lr
9002136a:	940e      	str	r4, [sp, #56]	; 0x38
9002136c:	fa1f fa8a 	uxth.w	sl, sl
90021370:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021372:	b2ad      	uxth	r5, r5
90021374:	eba3 030a 	sub.w	r3, r3, sl
90021378:	fb08 f505 	mul.w	r5, r8, r5
9002137c:	b29b      	uxth	r3, r3
9002137e:	fb09 5303 	mla	r3, r9, r3, r5
90021382:	fb0a 3304 	mla	r3, sl, r4, r3
90021386:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021388:	fb0e 3304 	mla	r3, lr, r4, r3
9002138c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021390:	2b00      	cmp	r3, #0
90021392:	f000 8111 	beq.w	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021396:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021398:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002139c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900213a0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900213a4:	f000 8192 	beq.w	900216cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
900213a8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900213ac:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900213b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900213b4:	fb0a fe0e 	mul.w	lr, sl, lr
900213b8:	fb09 f000 	mul.w	r0, r9, r0
900213bc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900213c0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
900213c4:	f100 0b20 	add.w	fp, r0, #32
900213c8:	44ce      	add	lr, r9
900213ca:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900213ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900213d2:	ea4f 2919 	mov.w	r9, r9, lsr #8
900213d6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900213da:	ea4e 0909 	orr.w	r9, lr, r9
900213de:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900213e2:	8868      	ldrh	r0, [r5, #2]
900213e4:	d019      	beq.n	9002141a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
900213e6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
900213ea:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900213ee:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900213f2:	fb0a fe0e 	mul.w	lr, sl, lr
900213f6:	fb08 f800 	mul.w	r8, r8, r0
900213fa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
900213fe:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021402:	f108 0b20 	add.w	fp, r8, #32
90021406:	4486      	add	lr, r0
90021408:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
9002140c:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021410:	0a00      	lsrs	r0, r0, #8
90021412:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021416:	ea4e 0000 	orr.w	r0, lr, r0
9002141a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
9002141e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021422:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021426:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
9002142a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
9002142e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021432:	ea4e 0909 	orr.w	r9, lr, r9
90021436:	ea4a 0000 	orr.w	r0, sl, r0
9002143a:	f1bc 0f00 	cmp.w	ip, #0
9002143e:	f000 8147 	beq.w	900216d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90021442:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021446:	9c0d      	ldr	r4, [sp, #52]	; 0x34
90021448:	3a01      	subs	r2, #1
9002144a:	2cff      	cmp	r4, #255	; 0xff
9002144c:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021450:	f102 0202 	add.w	r2, r2, #2
90021454:	eb05 0e02 	add.w	lr, r5, r2
90021458:	5aaa      	ldrh	r2, [r5, r2]
9002145a:	d018      	beq.n	9002148e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
9002145c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021460:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021464:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021468:	fb04 fa02 	mul.w	sl, r4, r2
9002146c:	fb08 f805 	mul.w	r8, r8, r5
90021470:	f10a 0520 	add.w	r5, sl, #32
90021474:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021478:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002147c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021480:	4442      	add	r2, r8
90021482:	0a2d      	lsrs	r5, r5, #8
90021484:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021488:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
9002148c:	432a      	orrs	r2, r5
9002148e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
90021490:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021494:	2cff      	cmp	r4, #255	; 0xff
90021496:	d01a      	beq.n	900214ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90021498:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
9002149c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
900214a0:	ea4f 08e4 	mov.w	r8, r4, asr #3
900214a4:	fb04 fa05 	mul.w	sl, r4, r5
900214a8:	fb08 f80e 	mul.w	r8, r8, lr
900214ac:	f10a 0e20 	add.w	lr, sl, #32
900214b0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900214b4:	f608 0801 	addw	r8, r8, #2049	; 0x801
900214b8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900214bc:	4445      	add	r5, r8
900214be:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900214c2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900214c6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
900214ca:	ea45 050e 	orr.w	r5, r5, lr
900214ce:	fb1c fe01 	smulbb	lr, ip, r1
900214d2:	f1cc 0810 	rsb	r8, ip, #16
900214d6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900214da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900214de:	ea4f 0eee 	mov.w	lr, lr, asr #3
900214e2:	eba8 0801 	sub.w	r8, r8, r1
900214e6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900214ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900214ee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900214f2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900214f6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900214fa:	ea4a 0202 	orr.w	r2, sl, r2
900214fe:	4341      	muls	r1, r0
90021500:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021504:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021508:	fb09 1108 	mla	r1, r9, r8, r1
9002150c:	ea4b 0505 	orr.w	r5, fp, r5
90021510:	fb0c 1102 	mla	r1, ip, r2, r1
90021514:	fb0e 1e05 	mla	lr, lr, r5, r1
90021518:	ea4f 525e 	mov.w	r2, lr, lsr #21
9002151c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021520:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021524:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021528:	ea42 0e0e 	orr.w	lr, r2, lr
9002152c:	fa1f f28e 	uxth.w	r2, lr
90021530:	2bff      	cmp	r3, #255	; 0xff
90021532:	d103      	bne.n	9002153c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90021534:	9912      	ldr	r1, [sp, #72]	; 0x48
90021536:	29ff      	cmp	r1, #255	; 0xff
90021538:	f000 80de 	beq.w	900216f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
9002153c:	990a      	ldr	r1, [sp, #40]	; 0x28
9002153e:	1215      	asrs	r5, r2, #8
90021540:	8838      	ldrh	r0, [r7, #0]
90021542:	434b      	muls	r3, r1
90021544:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
90021548:	9c0a      	ldr	r4, [sp, #40]	; 0x28
9002154a:	f103 0c01 	add.w	ip, r3, #1
9002154e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90021552:	ea6f 2323 	mvn.w	r3, r3, asr #8
90021556:	fa5f fc83 	uxtb.w	ip, r3
9002155a:	1203      	asrs	r3, r0, #8
9002155c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90021560:	fb13 f30c 	smulbb	r3, r3, ip
90021564:	fb05 3501 	mla	r5, r5, r1, r3
90021568:	10c3      	asrs	r3, r0, #3
9002156a:	10d1      	asrs	r1, r2, #3
9002156c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90021570:	00d2      	lsls	r2, r2, #3
90021572:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90021576:	b2ad      	uxth	r5, r5
90021578:	fb13 f30c 	smulbb	r3, r3, ip
9002157c:	b2d2      	uxtb	r2, r2
9002157e:	fb01 3104 	mla	r1, r1, r4, r3
90021582:	00c3      	lsls	r3, r0, #3
90021584:	b2db      	uxtb	r3, r3
90021586:	b289      	uxth	r1, r1
90021588:	fb13 f30c 	smulbb	r3, r3, ip
9002158c:	fb02 3304 	mla	r3, r2, r4, r3
90021590:	b29a      	uxth	r2, r3
90021592:	1c6b      	adds	r3, r5, #1
90021594:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90021598:	1c53      	adds	r3, r2, #1
9002159a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002159e:	1c4a      	adds	r2, r1, #1
900215a0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900215a4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900215a8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900215ac:	0949      	lsrs	r1, r1, #5
900215ae:	432b      	orrs	r3, r5
900215b0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900215b4:	430b      	orrs	r3, r1
900215b6:	803b      	strh	r3, [r7, #0]
900215b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900215ba:	3702      	adds	r7, #2
900215bc:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900215be:	4413      	add	r3, r2
900215c0:	9a22      	ldr	r2, [sp, #136]	; 0x88
900215c2:	9321      	str	r3, [sp, #132]	; 0x84
900215c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
900215c6:	441a      	add	r2, r3
900215c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900215ca:	3b01      	subs	r3, #1
900215cc:	9222      	str	r2, [sp, #136]	; 0x88
900215ce:	9313      	str	r3, [sp, #76]	; 0x4c
900215d0:	e687      	b.n	900212e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
900215d2:	9b21      	ldr	r3, [sp, #132]	; 0x84
900215d4:	9e23      	ldr	r6, [sp, #140]	; 0x8c
900215d6:	9c22      	ldr	r4, [sp, #136]	; 0x88
900215d8:	4433      	add	r3, r6
900215da:	9321      	str	r3, [sp, #132]	; 0x84
900215dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
900215de:	441c      	add	r4, r3
900215e0:	9b08      	ldr	r3, [sp, #32]
900215e2:	3b01      	subs	r3, #1
900215e4:	9422      	str	r4, [sp, #136]	; 0x88
900215e6:	9308      	str	r3, [sp, #32]
900215e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
900215ea:	3302      	adds	r3, #2
900215ec:	9309      	str	r3, [sp, #36]	; 0x24
900215ee:	e656      	b.n	9002129e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
900215f0:	d028      	beq.n	90021644 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
900215f2:	9b08      	ldr	r3, [sp, #32]
900215f4:	9823      	ldr	r0, [sp, #140]	; 0x8c
900215f6:	3b01      	subs	r3, #1
900215f8:	9d21      	ldr	r5, [sp, #132]	; 0x84
900215fa:	fb00 5003 	mla	r0, r0, r3, r5
900215fe:	1400      	asrs	r0, r0, #16
90021600:	f53f ae6a 	bmi.w	900212d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021604:	3901      	subs	r1, #1
90021606:	4288      	cmp	r0, r1
90021608:	f6bf ae66 	bge.w	900212d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002160c:	9924      	ldr	r1, [sp, #144]	; 0x90
9002160e:	9822      	ldr	r0, [sp, #136]	; 0x88
90021610:	fb01 0303 	mla	r3, r1, r3, r0
90021614:	141b      	asrs	r3, r3, #16
90021616:	f53f ae5f 	bmi.w	900212d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002161a:	3a01      	subs	r2, #1
9002161c:	4293      	cmp	r3, r2
9002161e:	f6bf ae5b 	bge.w	900212d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90021622:	9b08      	ldr	r3, [sp, #32]
90021624:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021628:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
9002162c:	9313      	str	r3, [sp, #76]	; 0x4c
9002162e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
90021630:	2b00      	cmp	r3, #0
90021632:	f300 8082 	bgt.w	9002173a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90021636:	9b08      	ldr	r3, [sp, #32]
90021638:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9002163c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002163e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90021642:	9309      	str	r3, [sp, #36]	; 0x24
90021644:	9b11      	ldr	r3, [sp, #68]	; 0x44
90021646:	2b00      	cmp	r3, #0
90021648:	f340 81ef 	ble.w	90021a2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
9002164c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90021650:	9b20      	ldr	r3, [sp, #128]	; 0x80
90021652:	ee30 0a04 	vadd.f32	s0, s0, s8
90021656:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002165a:	eef0 6a62 	vmov.f32	s13, s5
9002165e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021662:	ee31 1a05 	vadd.f32	s2, s2, s10
90021666:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002166a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
9002166e:	eef0 6a43 	vmov.f32	s13, s6
90021672:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021676:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
9002167a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002167e:	ee61 7a27 	vmul.f32	s15, s2, s15
90021682:	ee77 2a62 	vsub.f32	s5, s14, s5
90021686:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002168a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002168e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021692:	ee12 2a90 	vmov	r2, s5
90021696:	eef0 2a47 	vmov.f32	s5, s14
9002169a:	fb92 f3f3 	sdiv	r3, r2, r3
9002169e:	ee13 2a10 	vmov	r2, s6
900216a2:	9323      	str	r3, [sp, #140]	; 0x8c
900216a4:	9b20      	ldr	r3, [sp, #128]	; 0x80
900216a6:	eeb0 3a67 	vmov.f32	s6, s15
900216aa:	fb92 f3f3 	sdiv	r3, r2, r3
900216ae:	9324      	str	r3, [sp, #144]	; 0x90
900216b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
900216b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
900216b4:	3b01      	subs	r3, #1
900216b6:	9311      	str	r3, [sp, #68]	; 0x44
900216b8:	9b20      	ldr	r3, [sp, #128]	; 0x80
900216ba:	bf08      	it	eq
900216bc:	4613      	moveq	r3, r2
900216be:	9308      	str	r3, [sp, #32]
900216c0:	e5df      	b.n	90021282 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900216c2:	fb08 f505 	mul.w	r5, r8, r5
900216c6:	fb09 5303 	mla	r3, r9, r3, r5
900216ca:	e65f      	b.n	9002138c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
900216cc:	4681      	mov	r9, r0
900216ce:	e686      	b.n	900213de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900216d0:	f1c1 0210 	rsb	r2, r1, #16
900216d4:	4341      	muls	r1, r0
900216d6:	fb09 1902 	mla	r9, r9, r2, r1
900216da:	ea4f 0949 	mov.w	r9, r9, lsl #1
900216de:	ea4f 5259 	mov.w	r2, r9, lsr #21
900216e2:	ea4f 1959 	mov.w	r9, r9, lsr #5
900216e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900216ea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
900216ee:	ea42 0909 	orr.w	r9, r2, r9
900216f2:	fa1f f289 	uxth.w	r2, r9
900216f6:	e71b      	b.n	90021530 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
900216f8:	803a      	strh	r2, [r7, #0]
900216fa:	e75d      	b.n	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
900216fc:	f115 0e01 	adds.w	lr, r5, #1
90021700:	f53f af5a 	bmi.w	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021704:	4572      	cmp	r2, lr
90021706:	f6ff af57 	blt.w	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002170a:	f110 0e01 	adds.w	lr, r0, #1
9002170e:	f53f af53 	bmi.w	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021712:	4573      	cmp	r3, lr
90021714:	f6ff af50 	blt.w	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90021718:	9c12      	ldr	r4, [sp, #72]	; 0x48
9002171a:	b21b      	sxth	r3, r3
9002171c:	b212      	sxth	r2, r2
9002171e:	9502      	str	r5, [sp, #8]
90021720:	9301      	str	r3, [sp, #4]
90021722:	9200      	str	r2, [sp, #0]
90021724:	e9cd 0103 	strd	r0, r1, [sp, #12]
90021728:	e9cd c405 	strd	ip, r4, [sp, #20]
9002172c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
90021730:	4639      	mov	r1, r7
90021732:	9815      	ldr	r0, [sp, #84]	; 0x54
90021734:	f7ff fc02 	bl	90020f3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90021738:	e73e      	b.n	900215b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002173a:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002173c:	f3c3 3203 	ubfx	r2, r3, #12, #4
90021740:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021742:	f3c3 3503 	ubfx	r5, r3, #12, #4
90021746:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90021748:	fa1f fc82 	uxth.w	ip, r2
9002174c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021750:	9b22      	ldr	r3, [sp, #136]	; 0x88
90021752:	ea4f 100c 	mov.w	r0, ip, lsl #4
90021756:	141f      	asrs	r7, r3, #16
90021758:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002175a:	141b      	asrs	r3, r3, #16
9002175c:	fb01 3707 	mla	r7, r1, r7, r3
90021760:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90021762:	eb03 0a07 	add.w	sl, r3, r7
90021766:	f813 9007 	ldrb.w	r9, [r3, r7]
9002176a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
9002176e:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021772:	b29b      	uxth	r3, r3
90021774:	2d00      	cmp	r5, #0
90021776:	f000 813d 	beq.w	900219f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
9002177a:	f81a 4001 	ldrb.w	r4, [sl, r1]
9002177e:	eb0a 0b01 	add.w	fp, sl, r1
90021782:	fa1f fa85 	uxth.w	sl, r5
90021786:	940f      	str	r4, [sp, #60]	; 0x3c
90021788:	fb0a fc0c 	mul.w	ip, sl, ip
9002178c:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021790:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90021794:	eba0 000c 	sub.w	r0, r0, ip
90021798:	9410      	str	r4, [sp, #64]	; 0x40
9002179a:	fa1f fa8a 	uxth.w	sl, sl
9002179e:	b280      	uxth	r0, r0
900217a0:	eba3 030a 	sub.w	r3, r3, sl
900217a4:	fb08 f000 	mul.w	r0, r8, r0
900217a8:	b29b      	uxth	r3, r3
900217aa:	fb09 0303 	mla	r3, r9, r3, r0
900217ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
900217b0:	fb0a 3300 	mla	r3, sl, r0, r3
900217b4:	fb0c 3304 	mla	r3, ip, r4, r3
900217b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900217bc:	2b00      	cmp	r3, #0
900217be:	f000 810b 	beq.w	900219d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900217c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
900217c4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
900217c8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
900217ca:	eb00 0047 	add.w	r0, r0, r7, lsl #1
900217ce:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
900217d2:	f000 8114 	beq.w	900219fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
900217d6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900217da:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900217de:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900217e2:	fb0a fc0c 	mul.w	ip, sl, ip
900217e6:	fb09 f707 	mul.w	r7, r9, r7
900217ea:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900217ee:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900217f2:	f107 0b20 	add.w	fp, r7, #32
900217f6:	44cc      	add	ip, r9
900217f8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900217fc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90021800:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021804:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021808:	ea4c 0909 	orr.w	r9, ip, r9
9002180c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021810:	8847      	ldrh	r7, [r0, #2]
90021812:	d019      	beq.n	90021848 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
90021814:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
90021818:	ea4f 0ae8 	mov.w	sl, r8, asr #3
9002181c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021820:	fb0a fc0c 	mul.w	ip, sl, ip
90021824:	fb08 f807 	mul.w	r8, r8, r7
90021828:	ea06 175c 	and.w	r7, r6, ip, lsr #5
9002182c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
90021830:	f108 0b20 	add.w	fp, r8, #32
90021834:	44bc      	add	ip, r7
90021836:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
9002183a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
9002183e:	0a3f      	lsrs	r7, r7, #8
90021840:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90021844:	ea4c 0707 	orr.w	r7, ip, r7
90021848:	ea4f 4c09 	mov.w	ip, r9, lsl #16
9002184c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021850:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90021854:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90021858:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
9002185c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021860:	ea4c 0909 	orr.w	r9, ip, r9
90021864:	ea4a 0707 	orr.w	r7, sl, r7
90021868:	2d00      	cmp	r5, #0
9002186a:	f000 80ca 	beq.w	90021a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
9002186e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90021872:	3901      	subs	r1, #1
90021874:	0049      	lsls	r1, r1, #1
90021876:	3102      	adds	r1, #2
90021878:	eb00 0c01 	add.w	ip, r0, r1
9002187c:	5a41      	ldrh	r1, [r0, r1]
9002187e:	980f      	ldr	r0, [sp, #60]	; 0x3c
90021880:	28ff      	cmp	r0, #255	; 0xff
90021882:	d019      	beq.n	900218b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
90021884:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
90021888:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
9002188a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002188e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021892:	fb04 fa01 	mul.w	sl, r4, r1
90021896:	fb08 f800 	mul.w	r8, r8, r0
9002189a:	f10a 0020 	add.w	r0, sl, #32
9002189e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900218a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
900218a6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900218aa:	4441      	add	r1, r8
900218ac:	0a00      	lsrs	r0, r0, #8
900218ae:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900218b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900218b6:	4301      	orrs	r1, r0
900218b8:	9c10      	ldr	r4, [sp, #64]	; 0x40
900218ba:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900218be:	2cff      	cmp	r4, #255	; 0xff
900218c0:	d01a      	beq.n	900218f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900218c2:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
900218c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
900218ca:	ea4f 08e4 	mov.w	r8, r4, asr #3
900218ce:	fb04 fa00 	mul.w	sl, r4, r0
900218d2:	fb08 f80c 	mul.w	r8, r8, ip
900218d6:	f10a 0c20 	add.w	ip, sl, #32
900218da:	ea06 1058 	and.w	r0, r6, r8, lsr #5
900218de:	f608 0801 	addw	r8, r8, #2049	; 0x801
900218e2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
900218e6:	4440      	add	r0, r8
900218e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900218ec:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900218f0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900218f4:	ea40 000c 	orr.w	r0, r0, ip
900218f8:	fb15 fc02 	smulbb	ip, r5, r2
900218fc:	f1c5 0810 	rsb	r8, r5, #16
90021900:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90021904:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90021908:	ea4f 0cec 	mov.w	ip, ip, asr #3
9002190c:	eba8 0802 	sub.w	r8, r8, r2
90021910:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90021914:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021918:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
9002191c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021920:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90021924:	ea4a 0101 	orr.w	r1, sl, r1
90021928:	437a      	muls	r2, r7
9002192a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
9002192e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021932:	fb09 2208 	mla	r2, r9, r8, r2
90021936:	ea4b 0000 	orr.w	r0, fp, r0
9002193a:	fb05 2201 	mla	r2, r5, r1, r2
9002193e:	fb0c 2200 	mla	r2, ip, r0, r2
90021942:	0d57      	lsrs	r7, r2, #21
90021944:	0952      	lsrs	r2, r2, #5
90021946:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
9002194a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
9002194e:	433a      	orrs	r2, r7
90021950:	2bff      	cmp	r3, #255	; 0xff
90021952:	b292      	uxth	r2, r2
90021954:	d102      	bne.n	9002195c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90021956:	9912      	ldr	r1, [sp, #72]	; 0x48
90021958:	29ff      	cmp	r1, #255	; 0xff
9002195a:	d063      	beq.n	90021a24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
9002195c:	980a      	ldr	r0, [sp, #40]	; 0x28
9002195e:	1215      	asrs	r5, r2, #8
90021960:	f8be 1000 	ldrh.w	r1, [lr]
90021964:	4343      	muls	r3, r0
90021966:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021968:	10cf      	asrs	r7, r1, #3
9002196a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
9002196e:	1c58      	adds	r0, r3, #1
90021970:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
90021974:	eb00 2323 	add.w	r3, r0, r3, asr #8
90021978:	1208      	asrs	r0, r1, #8
9002197a:	ea6f 2323 	mvn.w	r3, r3, asr #8
9002197e:	00c9      	lsls	r1, r1, #3
90021980:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90021984:	b2db      	uxtb	r3, r3
90021986:	b2c9      	uxtb	r1, r1
90021988:	fb10 f003 	smulbb	r0, r0, r3
9002198c:	fb11 f103 	smulbb	r1, r1, r3
90021990:	fb05 0504 	mla	r5, r5, r4, r0
90021994:	10d0      	asrs	r0, r2, #3
90021996:	fb17 f703 	smulbb	r7, r7, r3
9002199a:	00d2      	lsls	r2, r2, #3
9002199c:	b2ad      	uxth	r5, r5
9002199e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900219a2:	b2d2      	uxtb	r2, r2
900219a4:	fb00 7004 	mla	r0, r0, r4, r7
900219a8:	1c6b      	adds	r3, r5, #1
900219aa:	fb02 1204 	mla	r2, r2, r4, r1
900219ae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900219b2:	b292      	uxth	r2, r2
900219b4:	b280      	uxth	r0, r0
900219b6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
900219ba:	1c57      	adds	r7, r2, #1
900219bc:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900219c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900219c4:	433d      	orrs	r5, r7
900219c6:	1c47      	adds	r7, r0, #1
900219c8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
900219cc:	097f      	lsrs	r7, r7, #5
900219ce:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900219d2:	433d      	orrs	r5, r7
900219d4:	f8ae 5000 	strh.w	r5, [lr]
900219d8:	9b21      	ldr	r3, [sp, #132]	; 0x84
900219da:	f10e 0e02 	add.w	lr, lr, #2
900219de:	9a23      	ldr	r2, [sp, #140]	; 0x8c
900219e0:	4413      	add	r3, r2
900219e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
900219e4:	9321      	str	r3, [sp, #132]	; 0x84
900219e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
900219e8:	441a      	add	r2, r3
900219ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
900219ec:	3b01      	subs	r3, #1
900219ee:	9222      	str	r2, [sp, #136]	; 0x88
900219f0:	9313      	str	r3, [sp, #76]	; 0x4c
900219f2:	e61c      	b.n	9002162e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
900219f4:	fb08 f000 	mul.w	r0, r8, r0
900219f8:	fb09 0303 	mla	r3, r9, r3, r0
900219fc:	e6dc      	b.n	900217b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
900219fe:	46b9      	mov	r9, r7
90021a00:	e704      	b.n	9002180c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
90021a02:	f1c2 0110 	rsb	r1, r2, #16
90021a06:	437a      	muls	r2, r7
90021a08:	fb09 2901 	mla	r9, r9, r1, r2
90021a0c:	ea4f 0949 	mov.w	r9, r9, lsl #1
90021a10:	ea4f 5059 	mov.w	r0, r9, lsr #21
90021a14:	ea4f 1259 	mov.w	r2, r9, lsr #5
90021a18:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021a1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021a20:	4302      	orrs	r2, r0
90021a22:	e795      	b.n	90021950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
90021a24:	f8ae 2000 	strh.w	r2, [lr]
90021a28:	e7d6      	b.n	900219d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90021a2a:	b017      	add	sp, #92	; 0x5c
90021a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a34:	b085      	sub	sp, #20
90021a36:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
90021a3a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
90021a3e:	2800      	cmp	r0, #0
90021a40:	9103      	str	r1, [sp, #12]
90021a42:	fb00 7406 	mla	r4, r0, r6, r7
90021a46:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
90021a4a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
90021a4e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
90021a52:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
90021a56:	eb02 0904 	add.w	r9, r2, r4
90021a5a:	9501      	str	r5, [sp, #4]
90021a5c:	f2c0 8141 	blt.w	90021ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021a60:	4583      	cmp	fp, r0
90021a62:	f340 813e 	ble.w	90021ce2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90021a66:	2f00      	cmp	r7, #0
90021a68:	f2c0 8137 	blt.w	90021cda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021a6c:	42be      	cmp	r6, r7
90021a6e:	f340 8134 	ble.w	90021cda <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
90021a72:	f812 c004 	ldrb.w	ip, [r2, r4]
90021a76:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
90021a7a:	f64f 041f 	movw	r4, #63519	; 0xf81f
90021a7e:	ea4f 02ec 	mov.w	r2, ip, asr #3
90021a82:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
90021a86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021a8a:	4355      	muls	r5, r2
90021a8c:	fb0c f203 	mul.w	r2, ip, r3
90021a90:	ea04 1355 	and.w	r3, r4, r5, lsr #5
90021a94:	f605 0501 	addw	r5, r5, #2049	; 0x801
90021a98:	441d      	add	r5, r3
90021a9a:	f102 0320 	add.w	r3, r2, #32
90021a9e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021aa2:	ea04 1455 	and.w	r4, r4, r5, lsr #5
90021aa6:	0a1b      	lsrs	r3, r3, #8
90021aa8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90021aac:	431c      	orrs	r4, r3
90021aae:	1c7b      	adds	r3, r7, #1
90021ab0:	f100 811c 	bmi.w	90021cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021ab4:	429e      	cmp	r6, r3
90021ab6:	f340 8119 	ble.w	90021cec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
90021aba:	2900      	cmp	r1, #0
90021abc:	f000 8119 	beq.w	90021cf2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
90021ac0:	9a01      	ldr	r2, [sp, #4]
90021ac2:	f899 3001 	ldrb.w	r3, [r9, #1]
90021ac6:	8855      	ldrh	r5, [r2, #2]
90021ac8:	ea4f 08e3 	mov.w	r8, r3, asr #3
90021acc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
90021ad0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021ad4:	fb08 f802 	mul.w	r8, r8, r2
90021ad8:	f64f 021f 	movw	r2, #63519	; 0xf81f
90021adc:	435d      	muls	r5, r3
90021ade:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90021ae2:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021ae6:	44d0      	add	r8, sl
90021ae8:	f105 0a20 	add.w	sl, r5, #32
90021aec:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90021af0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90021af4:	0a2d      	lsrs	r5, r5, #8
90021af6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021afa:	432a      	orrs	r2, r5
90021afc:	3001      	adds	r0, #1
90021afe:	f100 80fe 	bmi.w	90021cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021b02:	4583      	cmp	fp, r0
90021b04:	f340 80fb 	ble.w	90021cfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90021b08:	f1be 0f00 	cmp.w	lr, #0
90021b0c:	f000 80fc 	beq.w	90021d08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90021b10:	2f00      	cmp	r7, #0
90021b12:	f2c0 80f1 	blt.w	90021cf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021b16:	42be      	cmp	r6, r7
90021b18:	f340 80ee 	ble.w	90021cf8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90021b1c:	9801      	ldr	r0, [sp, #4]
90021b1e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
90021b22:	f819 5006 	ldrb.w	r5, [r9, r6]
90021b26:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90021b2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90021b2e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
90021b32:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
90021b36:	fb0a fa00 	mul.w	sl, sl, r0
90021b3a:	fb05 f808 	mul.w	r8, r5, r8
90021b3e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90021b42:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
90021b46:	4482      	add	sl, r0
90021b48:	f108 0020 	add.w	r0, r8, #32
90021b4c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021b50:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90021b54:	0a00      	lsrs	r0, r0, #8
90021b56:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021b5a:	ea4b 0b00 	orr.w	fp, fp, r0
90021b5e:	3701      	adds	r7, #1
90021b60:	f100 80d7 	bmi.w	90021d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021b64:	42be      	cmp	r6, r7
90021b66:	f340 80d4 	ble.w	90021d12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
90021b6a:	2900      	cmp	r1, #0
90021b6c:	f000 80d4 	beq.w	90021d18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
90021b70:	3601      	adds	r6, #1
90021b72:	9801      	ldr	r0, [sp, #4]
90021b74:	f819 7006 	ldrb.w	r7, [r9, r6]
90021b78:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
90021b7c:	ea4f 09e7 	mov.w	r9, r7, asr #3
90021b80:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
90021b84:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021b88:	fb09 f906 	mul.w	r9, r9, r6
90021b8c:	fb07 f800 	mul.w	r8, r7, r0
90021b90:	f64f 001f 	movw	r0, #63519	; 0xf81f
90021b94:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
90021b98:	f609 0901 	addw	r9, r9, #2049	; 0x801
90021b9c:	44d1      	add	r9, sl
90021b9e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
90021ba2:	f108 0020 	add.w	r0, r8, #32
90021ba6:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90021baa:	0a00      	lsrs	r0, r0, #8
90021bac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021bb0:	4330      	orrs	r0, r6
90021bb2:	b28e      	uxth	r6, r1
90021bb4:	fa1f f98e 	uxth.w	r9, lr
90021bb8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90021bbc:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
90021bc0:	fb06 f809 	mul.w	r8, r6, r9
90021bc4:	0136      	lsls	r6, r6, #4
90021bc6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021bca:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90021bce:	9601      	str	r6, [sp, #4]
90021bd0:	ea4a 0404 	orr.w	r4, sl, r4
90021bd4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021bd8:	fa1f f689 	uxth.w	r6, r9
90021bdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021be0:	fb11 f90e 	smulbb	r9, r1, lr
90021be4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021be8:	9602      	str	r6, [sp, #8]
90021bea:	4626      	mov	r6, r4
90021bec:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90021bf0:	f1ce 0410 	rsb	r4, lr, #16
90021bf4:	ea4a 0202 	orr.w	r2, sl, r2
90021bf8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021bfc:	1a64      	subs	r4, r4, r1
90021bfe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90021c02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021c06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021c0a:	434a      	muls	r2, r1
90021c0c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90021c10:	ea4a 0000 	orr.w	r0, sl, r0
90021c14:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90021c18:	fb04 2406 	mla	r4, r4, r6, r2
90021c1c:	9903      	ldr	r1, [sp, #12]
90021c1e:	fb09 4200 	mla	r2, r9, r0, r4
90021c22:	ea4f 440b 	mov.w	r4, fp, lsl #16
90021c26:	9801      	ldr	r0, [sp, #4]
90021c28:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90021c2c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90021c30:	8809      	ldrh	r1, [r1, #0]
90021c32:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
90021c36:	ea44 0b0b 	orr.w	fp, r4, fp
90021c3a:	9c02      	ldr	r4, [sp, #8]
90021c3c:	1b00      	subs	r0, r0, r4
90021c3e:	9c01      	ldr	r4, [sp, #4]
90021c40:	fb0e 2e0b 	mla	lr, lr, fp, r2
90021c44:	eba4 0608 	sub.w	r6, r4, r8
90021c48:	b280      	uxth	r0, r0
90021c4a:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021c4e:	b2b6      	uxth	r6, r6
90021c50:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021c54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021c58:	4373      	muls	r3, r6
90021c5a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021c5e:	fb0c 3300 	mla	r3, ip, r0, r3
90021c62:	9802      	ldr	r0, [sp, #8]
90021c64:	ea42 0e0e 	orr.w	lr, r2, lr
90021c68:	fb00 3505 	mla	r5, r0, r5, r3
90021c6c:	120b      	asrs	r3, r1, #8
90021c6e:	10c8      	asrs	r0, r1, #3
90021c70:	fb08 5707 	mla	r7, r8, r7, r5
90021c74:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90021c78:	00c9      	lsls	r1, r1, #3
90021c7a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90021c7e:	ea6f 2727 	mvn.w	r7, r7, asr #8
90021c82:	fa1f f28e 	uxth.w	r2, lr
90021c86:	b2c9      	uxtb	r1, r1
90021c88:	b2ff      	uxtb	r7, r7
90021c8a:	437b      	muls	r3, r7
90021c8c:	4378      	muls	r0, r7
90021c8e:	434f      	muls	r7, r1
90021c90:	1c59      	adds	r1, r3, #1
90021c92:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90021c96:	1213      	asrs	r3, r2, #8
90021c98:	f023 0307 	bic.w	r3, r3, #7
90021c9c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90021ca0:	1c41      	adds	r1, r0, #1
90021ca2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90021ca6:	10d1      	asrs	r1, r2, #3
90021ca8:	021b      	lsls	r3, r3, #8
90021caa:	f021 0103 	bic.w	r1, r1, #3
90021cae:	00d2      	lsls	r2, r2, #3
90021cb0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90021cb4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90021cb8:	00c9      	lsls	r1, r1, #3
90021cba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90021cbe:	430b      	orrs	r3, r1
90021cc0:	1c79      	adds	r1, r7, #1
90021cc2:	eb01 2717 	add.w	r7, r1, r7, lsr #8
90021cc6:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021cca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90021cce:	431a      	orrs	r2, r3
90021cd0:	9b03      	ldr	r3, [sp, #12]
90021cd2:	801a      	strh	r2, [r3, #0]
90021cd4:	b005      	add	sp, #20
90021cd6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021cda:	f04f 0c00 	mov.w	ip, #0
90021cde:	4664      	mov	r4, ip
90021ce0:	e6e5      	b.n	90021aae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
90021ce2:	2300      	movs	r3, #0
90021ce4:	469c      	mov	ip, r3
90021ce6:	461a      	mov	r2, r3
90021ce8:	461c      	mov	r4, r3
90021cea:	e707      	b.n	90021afc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021cec:	2300      	movs	r3, #0
90021cee:	461a      	mov	r2, r3
90021cf0:	e704      	b.n	90021afc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021cf2:	460b      	mov	r3, r1
90021cf4:	460a      	mov	r2, r1
90021cf6:	e701      	b.n	90021afc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90021cf8:	2500      	movs	r5, #0
90021cfa:	46ab      	mov	fp, r5
90021cfc:	e72f      	b.n	90021b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90021cfe:	2700      	movs	r7, #0
90021d00:	463d      	mov	r5, r7
90021d02:	4638      	mov	r0, r7
90021d04:	46bb      	mov	fp, r7
90021d06:	e754      	b.n	90021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021d08:	4677      	mov	r7, lr
90021d0a:	4675      	mov	r5, lr
90021d0c:	4670      	mov	r0, lr
90021d0e:	46f3      	mov	fp, lr
90021d10:	e74f      	b.n	90021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021d12:	2700      	movs	r7, #0
90021d14:	4638      	mov	r0, r7
90021d16:	e74c      	b.n	90021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90021d18:	460f      	mov	r7, r1
90021d1a:	4608      	mov	r0, r1
90021d1c:	e749      	b.n	90021bb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90021d20 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021d24:	b093      	sub	sp, #76	; 0x4c
90021d26:	9210      	str	r2, [sp, #64]	; 0x40
90021d28:	9a21      	ldr	r2, [sp, #132]	; 0x84
90021d2a:	9011      	str	r0, [sp, #68]	; 0x44
90021d2c:	910e      	str	r1, [sp, #56]	; 0x38
90021d2e:	6850      	ldr	r0, [r2, #4]
90021d30:	9306      	str	r3, [sp, #24]
90021d32:	6812      	ldr	r2, [r2, #0]
90021d34:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90021d38:	fb00 1303 	mla	r3, r0, r3, r1
90021d3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021d40:	9307      	str	r3, [sp, #28]
90021d42:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021d44:	681b      	ldr	r3, [r3, #0]
90021d46:	9308      	str	r3, [sp, #32]
90021d48:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021d4a:	685b      	ldr	r3, [r3, #4]
90021d4c:	9309      	str	r3, [sp, #36]	; 0x24
90021d4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90021d50:	2b00      	cmp	r3, #0
90021d52:	dc03      	bgt.n	90021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021d54:	9b10      	ldr	r3, [sp, #64]	; 0x40
90021d56:	2b00      	cmp	r3, #0
90021d58:	f340 83b6 	ble.w	900224c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90021d5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021d5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021d62:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021d66:	1e48      	subs	r0, r1, #1
90021d68:	1e55      	subs	r5, r2, #1
90021d6a:	9b06      	ldr	r3, [sp, #24]
90021d6c:	2b00      	cmp	r3, #0
90021d6e:	f340 8165 	ble.w	9002203c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90021d72:	9e1d      	ldr	r6, [sp, #116]	; 0x74
90021d74:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021d76:	1436      	asrs	r6, r6, #16
90021d78:	ea4f 4323 	mov.w	r3, r3, asr #16
90021d7c:	d406      	bmi.n	90021d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021d7e:	4286      	cmp	r6, r0
90021d80:	da04      	bge.n	90021d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021d82:	2b00      	cmp	r3, #0
90021d84:	db02      	blt.n	90021d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
90021d86:	42ab      	cmp	r3, r5
90021d88:	f2c0 8159 	blt.w	9002203e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90021d8c:	3601      	adds	r6, #1
90021d8e:	f100 8146 	bmi.w	9002201e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021d92:	42b1      	cmp	r1, r6
90021d94:	f2c0 8143 	blt.w	9002201e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021d98:	3301      	adds	r3, #1
90021d9a:	f100 8140 	bmi.w	9002201e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021d9e:	429a      	cmp	r2, r3
90021da0:	f2c0 813d 	blt.w	9002201e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
90021da4:	9b06      	ldr	r3, [sp, #24]
90021da6:	f64f 061f 	movw	r6, #63519	; 0xf81f
90021daa:	9f07      	ldr	r7, [sp, #28]
90021dac:	930f      	str	r3, [sp, #60]	; 0x3c
90021dae:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90021db0:	2b00      	cmp	r3, #0
90021db2:	f340 8166 	ble.w	90022082 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90021db6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021db8:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90021dba:	1418      	asrs	r0, r3, #16
90021dbc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90021dbe:	142d      	asrs	r5, r5, #16
90021dc0:	f3c3 3103 	ubfx	r1, r3, #12, #4
90021dc4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90021dc6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90021dca:	9b24      	ldr	r3, [sp, #144]	; 0x90
90021dcc:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90021dd0:	f100 81f0 	bmi.w	900221b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021dd4:	f102 3eff 	add.w	lr, r2, #4294967295
90021dd8:	4575      	cmp	r5, lr
90021dda:	f280 81eb 	bge.w	900221b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021dde:	2800      	cmp	r0, #0
90021de0:	f2c0 81e8 	blt.w	900221b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021de4:	f103 3eff 	add.w	lr, r3, #4294967295
90021de8:	4570      	cmp	r0, lr
90021dea:	f280 81e3 	bge.w	900221b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90021dee:	b212      	sxth	r2, r2
90021df0:	9b09      	ldr	r3, [sp, #36]	; 0x24
90021df2:	fa1f fe81 	uxth.w	lr, r1
90021df6:	fb00 5002 	mla	r0, r0, r2, r5
90021dfa:	ea4f 150e 	mov.w	r5, lr, lsl #4
90021dfe:	eb03 0a00 	add.w	sl, r3, r0
90021e02:	f813 9000 	ldrb.w	r9, [r3, r0]
90021e06:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
90021e0a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90021e0e:	b29b      	uxth	r3, r3
90021e10:	f1bc 0f00 	cmp.w	ip, #0
90021e14:	f000 817b 	beq.w	9002210e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90021e18:	f81a 4002 	ldrb.w	r4, [sl, r2]
90021e1c:	eb0a 0b02 	add.w	fp, sl, r2
90021e20:	fa1f fa8c 	uxth.w	sl, ip
90021e24:	940a      	str	r4, [sp, #40]	; 0x28
90021e26:	fb0a fe0e 	mul.w	lr, sl, lr
90021e2a:	f89b 4001 	ldrb.w	r4, [fp, #1]
90021e2e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90021e32:	eba5 050e 	sub.w	r5, r5, lr
90021e36:	940b      	str	r4, [sp, #44]	; 0x2c
90021e38:	fa1f fa8a 	uxth.w	sl, sl
90021e3c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021e3e:	b2ad      	uxth	r5, r5
90021e40:	eba3 030a 	sub.w	r3, r3, sl
90021e44:	fb08 f505 	mul.w	r5, r8, r5
90021e48:	b29b      	uxth	r3, r3
90021e4a:	fb09 5303 	mla	r3, r9, r3, r5
90021e4e:	fb0a 3304 	mla	r3, sl, r4, r3
90021e52:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021e54:	fb0e 3304 	mla	r3, lr, r4, r3
90021e58:	f3c3 2307 	ubfx	r3, r3, #8, #8
90021e5c:	2b00      	cmp	r3, #0
90021e5e:	f000 80d1 	beq.w	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90021e62:	9c08      	ldr	r4, [sp, #32]
90021e64:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
90021e68:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90021e6c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90021e70:	f000 8152 	beq.w	90022118 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90021e74:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021e78:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90021e7c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021e80:	fb0a fe0e 	mul.w	lr, sl, lr
90021e84:	fb09 f000 	mul.w	r0, r9, r0
90021e88:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90021e8c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021e90:	f100 0b20 	add.w	fp, r0, #32
90021e94:	44ce      	add	lr, r9
90021e96:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90021e9a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021e9e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90021ea2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
90021ea6:	ea4e 0909 	orr.w	r9, lr, r9
90021eaa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
90021eae:	8868      	ldrh	r0, [r5, #2]
90021eb0:	d019      	beq.n	90021ee6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90021eb2:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
90021eb6:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90021eba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021ebe:	fb0a fe0e 	mul.w	lr, sl, lr
90021ec2:	fb08 f800 	mul.w	r8, r8, r0
90021ec6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90021eca:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
90021ece:	f108 0b20 	add.w	fp, r8, #32
90021ed2:	4486      	add	lr, r0
90021ed4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90021ed8:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90021edc:	0a00      	lsrs	r0, r0, #8
90021ede:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90021ee2:	ea4e 0000 	orr.w	r0, lr, r0
90021ee6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90021eea:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90021eee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90021ef2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90021ef6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90021efa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021efe:	ea4e 0909 	orr.w	r9, lr, r9
90021f02:	ea4a 0000 	orr.w	r0, sl, r0
90021f06:	f1bc 0f00 	cmp.w	ip, #0
90021f0a:	f000 8107 	beq.w	9002211c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90021f0e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
90021f12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
90021f14:	3a01      	subs	r2, #1
90021f16:	2cff      	cmp	r4, #255	; 0xff
90021f18:	ea4f 0242 	mov.w	r2, r2, lsl #1
90021f1c:	f102 0202 	add.w	r2, r2, #2
90021f20:	eb05 0e02 	add.w	lr, r5, r2
90021f24:	5aaa      	ldrh	r2, [r5, r2]
90021f26:	d018      	beq.n	90021f5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90021f28:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
90021f2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021f30:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021f34:	fb04 fa02 	mul.w	sl, r4, r2
90021f38:	fb08 f805 	mul.w	r8, r8, r5
90021f3c:	f10a 0520 	add.w	r5, sl, #32
90021f40:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90021f44:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021f48:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90021f4c:	4442      	add	r2, r8
90021f4e:	0a2d      	lsrs	r5, r5, #8
90021f50:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90021f54:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021f58:	432a      	orrs	r2, r5
90021f5a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
90021f5c:	f8be 5002 	ldrh.w	r5, [lr, #2]
90021f60:	2cff      	cmp	r4, #255	; 0xff
90021f62:	d01a      	beq.n	90021f9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
90021f64:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
90021f68:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90021f6c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90021f70:	fb04 fa05 	mul.w	sl, r4, r5
90021f74:	fb08 f80e 	mul.w	r8, r8, lr
90021f78:	f10a 0e20 	add.w	lr, sl, #32
90021f7c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90021f80:	f608 0801 	addw	r8, r8, #2049	; 0x801
90021f84:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90021f88:	4445      	add	r5, r8
90021f8a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90021f8e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90021f92:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90021f96:	ea45 050e 	orr.w	r5, r5, lr
90021f9a:	fb1c fe01 	smulbb	lr, ip, r1
90021f9e:	f1cc 0810 	rsb	r8, ip, #16
90021fa2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90021fa6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90021faa:	ea4f 0eee 	mov.w	lr, lr, asr #3
90021fae:	eba8 0801 	sub.w	r8, r8, r1
90021fb2:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90021fb6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90021fba:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90021fbe:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
90021fc2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90021fc6:	ea4a 0202 	orr.w	r2, sl, r2
90021fca:	4341      	muls	r1, r0
90021fcc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90021fd0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90021fd4:	fb09 1108 	mla	r1, r9, r8, r1
90021fd8:	ea4b 0505 	orr.w	r5, fp, r5
90021fdc:	fb0c 1102 	mla	r1, ip, r2, r1
90021fe0:	fb0e 1e05 	mla	lr, lr, r5, r1
90021fe4:	ea4f 525e 	mov.w	r2, lr, lsr #21
90021fe8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90021fec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90021ff0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90021ff4:	ea42 0e0e 	orr.w	lr, r2, lr
90021ff8:	fa1f f28e 	uxth.w	r2, lr
90021ffc:	2bff      	cmp	r3, #255	; 0xff
90021ffe:	f040 80a1 	bne.w	90022144 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
90022002:	803a      	strh	r2, [r7, #0]
90022004:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022006:	3702      	adds	r7, #2
90022008:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
9002200a:	4413      	add	r3, r2
9002200c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002200e:	931d      	str	r3, [sp, #116]	; 0x74
90022010:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022012:	441a      	add	r2, r3
90022014:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022016:	3b01      	subs	r3, #1
90022018:	921e      	str	r2, [sp, #120]	; 0x78
9002201a:	930f      	str	r3, [sp, #60]	; 0x3c
9002201c:	e6c7      	b.n	90021dae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002201e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022020:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
90022022:	9c1e      	ldr	r4, [sp, #120]	; 0x78
90022024:	4433      	add	r3, r6
90022026:	931d      	str	r3, [sp, #116]	; 0x74
90022028:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002202a:	441c      	add	r4, r3
9002202c:	9b06      	ldr	r3, [sp, #24]
9002202e:	3b01      	subs	r3, #1
90022030:	941e      	str	r4, [sp, #120]	; 0x78
90022032:	9306      	str	r3, [sp, #24]
90022034:	9b07      	ldr	r3, [sp, #28]
90022036:	3302      	adds	r3, #2
90022038:	9307      	str	r3, [sp, #28]
9002203a:	e696      	b.n	90021d6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9002203c:	d028      	beq.n	90022090 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002203e:	9b06      	ldr	r3, [sp, #24]
90022040:	981f      	ldr	r0, [sp, #124]	; 0x7c
90022042:	3b01      	subs	r3, #1
90022044:	9d1d      	ldr	r5, [sp, #116]	; 0x74
90022046:	fb00 5003 	mla	r0, r0, r3, r5
9002204a:	1400      	asrs	r0, r0, #16
9002204c:	f53f aeaa 	bmi.w	90021da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022050:	3901      	subs	r1, #1
90022052:	4288      	cmp	r0, r1
90022054:	f6bf aea6 	bge.w	90021da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022058:	9920      	ldr	r1, [sp, #128]	; 0x80
9002205a:	981e      	ldr	r0, [sp, #120]	; 0x78
9002205c:	fb01 0303 	mla	r3, r1, r3, r0
90022060:	141b      	asrs	r3, r3, #16
90022062:	f53f ae9f 	bmi.w	90021da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90022066:	3a01      	subs	r2, #1
90022068:	4293      	cmp	r3, r2
9002206a:	f6bf ae9b 	bge.w	90021da4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002206e:	9b06      	ldr	r3, [sp, #24]
90022070:	f64f 061f 	movw	r6, #63519	; 0xf81f
90022074:	f8dd e01c 	ldr.w	lr, [sp, #28]
90022078:	930f      	str	r3, [sp, #60]	; 0x3c
9002207a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
9002207c:	2b00      	cmp	r3, #0
9002207e:	f300 80b6 	bgt.w	900221ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
90022082:	9b06      	ldr	r3, [sp, #24]
90022084:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022088:	9b07      	ldr	r3, [sp, #28]
9002208a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
9002208e:	9307      	str	r3, [sp, #28]
90022090:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90022092:	2b00      	cmp	r3, #0
90022094:	f340 8218 	ble.w	900224c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90022098:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
9002209c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002209e:	ee30 0a04 	vadd.f32	s0, s0, s8
900220a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900220a6:	eef0 6a62 	vmov.f32	s13, s5
900220aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
900220ae:	ee31 1a05 	vadd.f32	s2, s2, s10
900220b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900220b6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
900220ba:	eef0 6a43 	vmov.f32	s13, s6
900220be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900220c2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
900220c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900220ca:	ee61 7a27 	vmul.f32	s15, s2, s15
900220ce:	ee77 2a62 	vsub.f32	s5, s14, s5
900220d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900220d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900220da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900220de:	ee12 2a90 	vmov	r2, s5
900220e2:	eef0 2a47 	vmov.f32	s5, s14
900220e6:	fb92 f3f3 	sdiv	r3, r2, r3
900220ea:	ee13 2a10 	vmov	r2, s6
900220ee:	931f      	str	r3, [sp, #124]	; 0x7c
900220f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900220f2:	eeb0 3a67 	vmov.f32	s6, s15
900220f6:	fb92 f3f3 	sdiv	r3, r2, r3
900220fa:	9320      	str	r3, [sp, #128]	; 0x80
900220fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900220fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
90022100:	3b01      	subs	r3, #1
90022102:	930e      	str	r3, [sp, #56]	; 0x38
90022104:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022106:	bf08      	it	eq
90022108:	4613      	moveq	r3, r2
9002210a:	9306      	str	r3, [sp, #24]
9002210c:	e61f      	b.n	90021d4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9002210e:	fb08 f505 	mul.w	r5, r8, r5
90022112:	fb09 5303 	mla	r3, r9, r3, r5
90022116:	e69f      	b.n	90021e58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90022118:	4681      	mov	r9, r0
9002211a:	e6c6      	b.n	90021eaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
9002211c:	f1c1 0210 	rsb	r2, r1, #16
90022120:	4341      	muls	r1, r0
90022122:	fb09 1902 	mla	r9, r9, r2, r1
90022126:	ea4f 0949 	mov.w	r9, r9, lsl #1
9002212a:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002212e:	ea4f 1959 	mov.w	r9, r9, lsr #5
90022132:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022136:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
9002213a:	ea42 0909 	orr.w	r9, r2, r9
9002213e:	fa1f f289 	uxth.w	r2, r9
90022142:	e75b      	b.n	90021ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90022144:	f8b7 c000 	ldrh.w	ip, [r7]
90022148:	43db      	mvns	r3, r3
9002214a:	ea4f 202c 	mov.w	r0, ip, asr #8
9002214e:	fa5f fe83 	uxtb.w	lr, r3
90022152:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022156:	ea4f 05ec 	mov.w	r5, ip, asr #3
9002215a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
9002215e:	fb00 f00e 	mul.w	r0, r0, lr
90022162:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90022166:	b2db      	uxtb	r3, r3
90022168:	1c41      	adds	r1, r0, #1
9002216a:	fb05 f50e 	mul.w	r5, r5, lr
9002216e:	fb03 f30e 	mul.w	r3, r3, lr
90022172:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90022176:	1211      	asrs	r1, r2, #8
90022178:	f021 0107 	bic.w	r1, r1, #7
9002217c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90022180:	48d3      	ldr	r0, [pc, #844]	; (900224d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022182:	b2c9      	uxtb	r1, r1
90022184:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90022188:	1c69      	adds	r1, r5, #1
9002218a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9002218e:	10d1      	asrs	r1, r2, #3
90022190:	00d2      	lsls	r2, r2, #3
90022192:	f021 0103 	bic.w	r1, r1, #3
90022196:	eb01 2115 	add.w	r1, r1, r5, lsr #8
9002219a:	00c9      	lsls	r1, r1, #3
9002219c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900221a0:	4301      	orrs	r1, r0
900221a2:	1c58      	adds	r0, r3, #1
900221a4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
900221a8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900221ac:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900221b0:	430a      	orrs	r2, r1
900221b2:	e726      	b.n	90022002 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
900221b4:	f115 0e01 	adds.w	lr, r5, #1
900221b8:	f53f af24 	bmi.w	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900221bc:	4572      	cmp	r2, lr
900221be:	f6ff af21 	blt.w	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900221c2:	f110 0e01 	adds.w	lr, r0, #1
900221c6:	f53f af1d 	bmi.w	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900221ca:	4573      	cmp	r3, lr
900221cc:	f6ff af1a 	blt.w	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900221d0:	b21b      	sxth	r3, r3
900221d2:	b212      	sxth	r2, r2
900221d4:	9301      	str	r3, [sp, #4]
900221d6:	9200      	str	r2, [sp, #0]
900221d8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
900221dc:	e9cd 5002 	strd	r5, r0, [sp, #8]
900221e0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
900221e4:	4639      	mov	r1, r7
900221e6:	9811      	ldr	r0, [sp, #68]	; 0x44
900221e8:	f7ff fc22 	bl	90021a30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900221ec:	e70a      	b.n	90022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
900221ee:	9b1d      	ldr	r3, [sp, #116]	; 0x74
900221f0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900221f4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
900221f6:	f3c3 3503 	ubfx	r5, r3, #12, #4
900221fa:	9b24      	ldr	r3, [sp, #144]	; 0x90
900221fc:	fa1f fc82 	uxth.w	ip, r2
90022200:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022204:	9b1e      	ldr	r3, [sp, #120]	; 0x78
90022206:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002220a:	141f      	asrs	r7, r3, #16
9002220c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
9002220e:	141b      	asrs	r3, r3, #16
90022210:	fb01 3707 	mla	r7, r1, r7, r3
90022214:	9b09      	ldr	r3, [sp, #36]	; 0x24
90022216:	eb03 0a07 	add.w	sl, r3, r7
9002221a:	f813 9007 	ldrb.w	r9, [r3, r7]
9002221e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
90022222:	f89a 8001 	ldrb.w	r8, [sl, #1]
90022226:	b29b      	uxth	r3, r3
90022228:	2d00      	cmp	r5, #0
9002222a:	f000 80fe 	beq.w	9002242a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
9002222e:	f81a 4001 	ldrb.w	r4, [sl, r1]
90022232:	eb0a 0b01 	add.w	fp, sl, r1
90022236:	fa1f fa85 	uxth.w	sl, r5
9002223a:	940c      	str	r4, [sp, #48]	; 0x30
9002223c:	fb0a fc0c 	mul.w	ip, sl, ip
90022240:	f89b 4001 	ldrb.w	r4, [fp, #1]
90022244:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90022248:	eba0 000c 	sub.w	r0, r0, ip
9002224c:	940d      	str	r4, [sp, #52]	; 0x34
9002224e:	fa1f fa8a 	uxth.w	sl, sl
90022252:	b280      	uxth	r0, r0
90022254:	eba3 030a 	sub.w	r3, r3, sl
90022258:	fb08 f000 	mul.w	r0, r8, r0
9002225c:	b29b      	uxth	r3, r3
9002225e:	fb09 0303 	mla	r3, r9, r3, r0
90022262:	980c      	ldr	r0, [sp, #48]	; 0x30
90022264:	fb0a 3300 	mla	r3, sl, r0, r3
90022268:	fb0c 3304 	mla	r3, ip, r4, r3
9002226c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90022270:	2b00      	cmp	r3, #0
90022272:	f000 80cc 	beq.w	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90022276:	9808      	ldr	r0, [sp, #32]
90022278:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
9002227c:	9c08      	ldr	r4, [sp, #32]
9002227e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90022282:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90022286:	f000 80d5 	beq.w	90022434 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002228a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
9002228e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90022292:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
90022296:	fb0a fc0c 	mul.w	ip, sl, ip
9002229a:	fb09 f707 	mul.w	r7, r9, r7
9002229e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
900222a2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900222a6:	f107 0b20 	add.w	fp, r7, #32
900222aa:	44cc      	add	ip, r9
900222ac:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
900222b0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900222b4:	ea4f 2919 	mov.w	r9, r9, lsr #8
900222b8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
900222bc:	ea4c 0909 	orr.w	r9, ip, r9
900222c0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
900222c4:	8847      	ldrh	r7, [r0, #2]
900222c6:	d019      	beq.n	900222fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
900222c8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
900222cc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900222d0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900222d4:	fb0a fc0c 	mul.w	ip, sl, ip
900222d8:	fb08 f807 	mul.w	r8, r8, r7
900222dc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
900222e0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
900222e4:	f108 0b20 	add.w	fp, r8, #32
900222e8:	44bc      	add	ip, r7
900222ea:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
900222ee:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
900222f2:	0a3f      	lsrs	r7, r7, #8
900222f4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900222f8:	ea4c 0707 	orr.w	r7, ip, r7
900222fc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90022300:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
90022304:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90022308:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
9002230c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
90022310:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
90022314:	ea4c 0909 	orr.w	r9, ip, r9
90022318:	ea4a 0707 	orr.w	r7, sl, r7
9002231c:	2d00      	cmp	r5, #0
9002231e:	f000 808b 	beq.w	90022438 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90022322:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
90022326:	3901      	subs	r1, #1
90022328:	0049      	lsls	r1, r1, #1
9002232a:	3102      	adds	r1, #2
9002232c:	eb00 0c01 	add.w	ip, r0, r1
90022330:	5a41      	ldrh	r1, [r0, r1]
90022332:	980c      	ldr	r0, [sp, #48]	; 0x30
90022334:	28ff      	cmp	r0, #255	; 0xff
90022336:	d019      	beq.n	9002236c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90022338:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
9002233c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
9002233e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90022342:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022346:	fb04 fa01 	mul.w	sl, r4, r1
9002234a:	fb08 f800 	mul.w	r8, r8, r0
9002234e:	f10a 0020 	add.w	r0, sl, #32
90022352:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90022356:	f608 0801 	addw	r8, r8, #2049	; 0x801
9002235a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
9002235e:	4441      	add	r1, r8
90022360:	0a00      	lsrs	r0, r0, #8
90022362:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90022366:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002236a:	4301      	orrs	r1, r0
9002236c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
9002236e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90022372:	2cff      	cmp	r4, #255	; 0xff
90022374:	d01a      	beq.n	900223ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90022376:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
9002237a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002237e:	ea4f 08e4 	mov.w	r8, r4, asr #3
90022382:	fb04 fa00 	mul.w	sl, r4, r0
90022386:	fb08 f80c 	mul.w	r8, r8, ip
9002238a:	f10a 0c20 	add.w	ip, sl, #32
9002238e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90022392:	f608 0801 	addw	r8, r8, #2049	; 0x801
90022396:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002239a:	4440      	add	r0, r8
9002239c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900223a0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
900223a4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
900223a8:	ea40 000c 	orr.w	r0, r0, ip
900223ac:	fb15 fc02 	smulbb	ip, r5, r2
900223b0:	f1c5 0810 	rsb	r8, r5, #16
900223b4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900223b8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
900223bc:	ea4f 0cec 	mov.w	ip, ip, asr #3
900223c0:	eba8 0802 	sub.w	r8, r8, r2
900223c4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900223c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
900223cc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
900223d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900223d4:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
900223d8:	ea4a 0101 	orr.w	r1, sl, r1
900223dc:	437a      	muls	r2, r7
900223de:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
900223e2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900223e6:	fb09 2208 	mla	r2, r9, r8, r2
900223ea:	ea4b 0000 	orr.w	r0, fp, r0
900223ee:	fb05 2201 	mla	r2, r5, r1, r2
900223f2:	fb0c 2200 	mla	r2, ip, r0, r2
900223f6:	0d57      	lsrs	r7, r2, #21
900223f8:	0952      	lsrs	r2, r2, #5
900223fa:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
900223fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022402:	433a      	orrs	r2, r7
90022404:	2bff      	cmp	r3, #255	; 0xff
90022406:	b292      	uxth	r2, r2
90022408:	d127      	bne.n	9002245a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
9002240a:	f8ae 2000 	strh.w	r2, [lr]
9002240e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022410:	f10e 0e02 	add.w	lr, lr, #2
90022414:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
90022416:	4413      	add	r3, r2
90022418:	9a1e      	ldr	r2, [sp, #120]	; 0x78
9002241a:	931d      	str	r3, [sp, #116]	; 0x74
9002241c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002241e:	441a      	add	r2, r3
90022420:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
90022422:	3b01      	subs	r3, #1
90022424:	921e      	str	r2, [sp, #120]	; 0x78
90022426:	930f      	str	r3, [sp, #60]	; 0x3c
90022428:	e627      	b.n	9002207a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
9002242a:	fb08 f000 	mul.w	r0, r8, r0
9002242e:	fb09 0303 	mla	r3, r9, r3, r0
90022432:	e71b      	b.n	9002226c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90022434:	46b9      	mov	r9, r7
90022436:	e743      	b.n	900222c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90022438:	f1c2 0110 	rsb	r1, r2, #16
9002243c:	437a      	muls	r2, r7
9002243e:	fb09 2901 	mla	r9, r9, r1, r2
90022442:	ea4f 0949 	mov.w	r9, r9, lsl #1
90022446:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002244a:	ea4f 1259 	mov.w	r2, r9, lsr #5
9002244e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90022452:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022456:	4302      	orrs	r2, r0
90022458:	e7d4      	b.n	90022404 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
9002245a:	f8be 7000 	ldrh.w	r7, [lr]
9002245e:	43db      	mvns	r3, r3
90022460:	4c1b      	ldr	r4, [pc, #108]	; (900224d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90022462:	1238      	asrs	r0, r7, #8
90022464:	fa5f fc83 	uxtb.w	ip, r3
90022468:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002246c:	10fd      	asrs	r5, r7, #3
9002246e:	00fb      	lsls	r3, r7, #3
90022470:	fb00 f00c 	mul.w	r0, r0, ip
90022474:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
90022478:	b2db      	uxtb	r3, r3
9002247a:	fb05 f10c 	mul.w	r1, r5, ip
9002247e:	1c45      	adds	r5, r0, #1
90022480:	fb03 f30c 	mul.w	r3, r3, ip
90022484:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022488:	1215      	asrs	r5, r2, #8
9002248a:	f025 0507 	bic.w	r5, r5, #7
9002248e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90022492:	1c4d      	adds	r5, r1, #1
90022494:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90022498:	10d1      	asrs	r1, r2, #3
9002249a:	b2c0      	uxtb	r0, r0
9002249c:	f021 0103 	bic.w	r1, r1, #3
900224a0:	00d2      	lsls	r2, r2, #3
900224a2:	ea04 2000 	and.w	r0, r4, r0, lsl #8
900224a6:	eb01 2115 	add.w	r1, r1, r5, lsr #8
900224aa:	00c9      	lsls	r1, r1, #3
900224ac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
900224b0:	4308      	orrs	r0, r1
900224b2:	1c59      	adds	r1, r3, #1
900224b4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
900224b8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900224bc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
900224c0:	4318      	orrs	r0, r3
900224c2:	f8ae 0000 	strh.w	r0, [lr]
900224c6:	e7a2      	b.n	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
900224c8:	b013      	add	sp, #76	; 0x4c
900224ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900224ce:	bf00      	nop
900224d0:	fffff800 	.word	0xfffff800

900224d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
900224d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900224d8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
900224dc:	f9bd a020 	ldrsh.w	sl, [sp, #32]
900224e0:	fb05 4c03 	mla	ip, r5, r3, r4
900224e4:	2d00      	cmp	r5, #0
900224e6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
900224ea:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
900224ee:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
900224f2:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
900224f6:	8808      	ldrh	r0, [r1, #0]
900224f8:	f2c0 80a7 	blt.w	9002264a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
900224fc:	45aa      	cmp	sl, r5
900224fe:	f340 80a4 	ble.w	9002264a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90022502:	2c00      	cmp	r4, #0
90022504:	f2c0 809f 	blt.w	90022646 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90022508:	42a3      	cmp	r3, r4
9002250a:	f340 809c 	ble.w	90022646 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
9002250e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90022512:	1c62      	adds	r2, r4, #1
90022514:	f100 809c 	bmi.w	90022650 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90022518:	4293      	cmp	r3, r2
9002251a:	f340 8099 	ble.w	90022650 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
9002251e:	f1b9 0f00 	cmp.w	r9, #0
90022522:	f000 8095 	beq.w	90022650 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90022526:	f8be c002 	ldrh.w	ip, [lr, #2]
9002252a:	3501      	adds	r5, #1
9002252c:	f100 8094 	bmi.w	90022658 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022530:	45aa      	cmp	sl, r5
90022532:	f340 8091 	ble.w	90022658 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90022536:	2f00      	cmp	r7, #0
90022538:	f000 808e 	beq.w	90022658 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
9002253c:	2c00      	cmp	r4, #0
9002253e:	f2c0 8089 	blt.w	90022654 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90022542:	42a3      	cmp	r3, r4
90022544:	f340 8086 	ble.w	90022654 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90022548:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
9002254c:	3401      	adds	r4, #1
9002254e:	f100 8086 	bmi.w	9002265e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022552:	42a3      	cmp	r3, r4
90022554:	f340 8083 	ble.w	9002265e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90022558:	f1b9 0f00 	cmp.w	r9, #0
9002255c:	d07f      	beq.n	9002265e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
9002255e:	3301      	adds	r3, #1
90022560:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90022564:	ea4f 4408 	mov.w	r4, r8, lsl #16
90022568:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
9002256c:	fb19 fe07 	smulbb	lr, r9, r7
90022570:	f1c7 0210 	rsb	r2, r7, #16
90022574:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022578:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
9002257c:	eba2 0209 	sub.w	r2, r2, r9
90022580:	ea44 0808 	orr.w	r8, r4, r8
90022584:	ea4f 440c 	mov.w	r4, ip, lsl #16
90022588:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
9002258c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90022590:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
90022594:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90022598:	ea44 0c0c 	orr.w	ip, r4, ip
9002259c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
900225a0:	fb04 f40c 	mul.w	r4, r4, ip
900225a4:	fb02 4808 	mla	r8, r2, r8, r4
900225a8:	041a      	lsls	r2, r3, #16
900225aa:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900225ae:	b2b4      	uxth	r4, r6
900225b0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900225b4:	43f6      	mvns	r6, r6
900225b6:	4313      	orrs	r3, r2
900225b8:	042a      	lsls	r2, r5, #16
900225ba:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
900225be:	b2f6      	uxtb	r6, r6
900225c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900225c4:	fb0e 8303 	mla	r3, lr, r3, r8
900225c8:	432a      	orrs	r2, r5
900225ca:	fb07 3202 	mla	r2, r7, r2, r3
900225ce:	10c7      	asrs	r7, r0, #3
900225d0:	0d53      	lsrs	r3, r2, #21
900225d2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
900225d6:	0952      	lsrs	r2, r2, #5
900225d8:	fb17 f706 	smulbb	r7, r7, r6
900225dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900225e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900225e4:	431a      	orrs	r2, r3
900225e6:	b293      	uxth	r3, r2
900225e8:	1202      	asrs	r2, r0, #8
900225ea:	121d      	asrs	r5, r3, #8
900225ec:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
900225f0:	00c0      	lsls	r0, r0, #3
900225f2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900225f6:	fb12 f206 	smulbb	r2, r2, r6
900225fa:	b2c0      	uxtb	r0, r0
900225fc:	fb05 2504 	mla	r5, r5, r4, r2
90022600:	10da      	asrs	r2, r3, #3
90022602:	fb10 f006 	smulbb	r0, r0, r6
90022606:	00db      	lsls	r3, r3, #3
90022608:	b2ad      	uxth	r5, r5
9002260a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002260e:	b2db      	uxtb	r3, r3
90022610:	fb02 7204 	mla	r2, r2, r4, r7
90022614:	fb03 0004 	mla	r0, r3, r4, r0
90022618:	1c6b      	adds	r3, r5, #1
9002261a:	b292      	uxth	r2, r2
9002261c:	b280      	uxth	r0, r0
9002261e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022622:	1c43      	adds	r3, r0, #1
90022624:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90022628:	eb03 2310 	add.w	r3, r3, r0, lsr #8
9002262c:	1c50      	adds	r0, r2, #1
9002262e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90022632:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022636:	0952      	lsrs	r2, r2, #5
90022638:	432b      	orrs	r3, r5
9002263a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002263e:	4313      	orrs	r3, r2
90022640:	800b      	strh	r3, [r1, #0]
90022642:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90022646:	4680      	mov	r8, r0
90022648:	e763      	b.n	90022512 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
9002264a:	4684      	mov	ip, r0
9002264c:	4680      	mov	r8, r0
9002264e:	e76c      	b.n	9002252a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022650:	4684      	mov	ip, r0
90022652:	e76a      	b.n	9002252a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90022654:	4605      	mov	r5, r0
90022656:	e779      	b.n	9002254c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90022658:	4603      	mov	r3, r0
9002265a:	4605      	mov	r5, r0
9002265c:	e782      	b.n	90022564 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
9002265e:	4603      	mov	r3, r0
90022660:	e780      	b.n	90022564 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90022662 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022662:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022666:	b093      	sub	sp, #76	; 0x4c
90022668:	461d      	mov	r5, r3
9002266a:	9210      	str	r2, [sp, #64]	; 0x40
9002266c:	9b21      	ldr	r3, [sp, #132]	; 0x84
9002266e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
90022672:	910a      	str	r1, [sp, #40]	; 0x28
90022674:	920b      	str	r2, [sp, #44]	; 0x2c
90022676:	6859      	ldr	r1, [r3, #4]
90022678:	681b      	ldr	r3, [r3, #0]
9002267a:	9011      	str	r0, [sp, #68]	; 0x44
9002267c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
90022680:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90022684:	fb01 2707 	mla	r7, r1, r7, r2
90022688:	eb03 0347 	add.w	r3, r3, r7, lsl #1
9002268c:	9307      	str	r3, [sp, #28]
9002268e:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022690:	681b      	ldr	r3, [r3, #0]
90022692:	9309      	str	r3, [sp, #36]	; 0x24
90022694:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90022696:	43db      	mvns	r3, r3
90022698:	b2db      	uxtb	r3, r3
9002269a:	9308      	str	r3, [sp, #32]
9002269c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002269e:	2b00      	cmp	r3, #0
900226a0:	dc03      	bgt.n	900226aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
900226a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
900226a4:	2b00      	cmp	r3, #0
900226a6:	f340 8205 	ble.w	90022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900226aa:	9b24      	ldr	r3, [sp, #144]	; 0x90
900226ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900226b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900226b4:	1e48      	subs	r0, r1, #1
900226b6:	f102 3cff 	add.w	ip, r2, #4294967295
900226ba:	2d00      	cmp	r5, #0
900226bc:	f340 80da 	ble.w	90022874 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
900226c0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900226c4:	ea4f 4326 	mov.w	r3, r6, asr #16
900226c8:	d406      	bmi.n	900226d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900226ca:	4586      	cmp	lr, r0
900226cc:	da04      	bge.n	900226d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900226ce:	2b00      	cmp	r3, #0
900226d0:	db02      	blt.n	900226d8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
900226d2:	4563      	cmp	r3, ip
900226d4:	f2c0 80cf 	blt.w	90022876 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
900226d8:	f11e 0e01 	adds.w	lr, lr, #1
900226dc:	f100 80c1 	bmi.w	90022862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900226e0:	4571      	cmp	r1, lr
900226e2:	f2c0 80be 	blt.w	90022862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900226e6:	3301      	adds	r3, #1
900226e8:	f100 80bb 	bmi.w	90022862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900226ec:	429a      	cmp	r2, r3
900226ee:	f2c0 80b8 	blt.w	90022862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
900226f2:	46a9      	mov	r9, r5
900226f4:	f8dd 801c 	ldr.w	r8, [sp, #28]
900226f8:	f1b9 0f00 	cmp.w	r9, #0
900226fc:	f340 80d8 	ble.w	900228b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90022700:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022702:	1421      	asrs	r1, r4, #16
90022704:	ea4f 4026 	mov.w	r0, r6, asr #16
90022708:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002270c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022710:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022714:	f100 8112 	bmi.w	9002293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022718:	f10e 3aff 	add.w	sl, lr, #4294967295
9002271c:	4551      	cmp	r1, sl
9002271e:	f280 810d 	bge.w	9002293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022722:	2800      	cmp	r0, #0
90022724:	f2c0 810a 	blt.w	9002293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022728:	f103 3aff 	add.w	sl, r3, #4294967295
9002272c:	4550      	cmp	r0, sl
9002272e:	f280 8105 	bge.w	9002293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90022732:	fa0f f38e 	sxth.w	r3, lr
90022736:	fb00 1103 	mla	r1, r0, r3, r1
9002273a:	9809      	ldr	r0, [sp, #36]	; 0x24
9002273c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90022740:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
90022744:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90022748:	f1bc 0f00 	cmp.w	ip, #0
9002274c:	d007      	beq.n	9002275e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
9002274e:	005b      	lsls	r3, r3, #1
90022750:	eb0a 0003 	add.w	r0, sl, r3
90022754:	f83a 3003 	ldrh.w	r3, [sl, r3]
90022758:	930c      	str	r3, [sp, #48]	; 0x30
9002275a:	8843      	ldrh	r3, [r0, #2]
9002275c:	930d      	str	r3, [sp, #52]	; 0x34
9002275e:	ea4f 400e 	mov.w	r0, lr, lsl #16
90022762:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
90022766:	fb12 f30c 	smulbb	r3, r2, ip
9002276a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002276e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022772:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022776:	10db      	asrs	r3, r3, #3
90022778:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
9002277c:	ea40 000e 	orr.w	r0, r0, lr
90022780:	f1cc 0e10 	rsb	lr, ip, #16
90022784:	ea4a 0101 	orr.w	r1, sl, r1
90022788:	9f08      	ldr	r7, [sp, #32]
9002278a:	ebae 0e02 	sub.w	lr, lr, r2
9002278e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022792:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022796:	4351      	muls	r1, r2
90022798:	9a0d      	ldr	r2, [sp, #52]	; 0x34
9002279a:	fb0e 1e00 	mla	lr, lr, r0, r1
9002279e:	990c      	ldr	r1, [sp, #48]	; 0x30
900227a0:	0410      	lsls	r0, r2, #16
900227a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
900227a6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
900227aa:	4310      	orrs	r0, r2
900227ac:	9a0c      	ldr	r2, [sp, #48]	; 0x30
900227ae:	0412      	lsls	r2, r2, #16
900227b0:	fb03 e000 	mla	r0, r3, r0, lr
900227b4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
900227b8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900227bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
900227c0:	ea42 020e 	orr.w	r2, r2, lr
900227c4:	fb03 0302 	mla	r3, r3, r2, r0
900227c8:	f8b8 0000 	ldrh.w	r0, [r8]
900227cc:	0d5a      	lsrs	r2, r3, #21
900227ce:	095b      	lsrs	r3, r3, #5
900227d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900227d4:	1201      	asrs	r1, r0, #8
900227d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
900227da:	ea4f 0ee0 	mov.w	lr, r0, asr #3
900227de:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
900227e2:	00c0      	lsls	r0, r0, #3
900227e4:	4313      	orrs	r3, r2
900227e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
900227ea:	fb11 f107 	smulbb	r1, r1, r7
900227ee:	b2c0      	uxtb	r0, r0
900227f0:	b29b      	uxth	r3, r3
900227f2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
900227f6:	fb10 f007 	smulbb	r0, r0, r7
900227fa:	fb1e fe07 	smulbb	lr, lr, r7
900227fe:	ea4f 2c23 	mov.w	ip, r3, asr #8
90022802:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
90022806:	fb0c 1c02 	mla	ip, ip, r2, r1
9002280a:	10d9      	asrs	r1, r3, #3
9002280c:	00db      	lsls	r3, r3, #3
9002280e:	fa1f fc8c 	uxth.w	ip, ip
90022812:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022816:	b2db      	uxtb	r3, r3
90022818:	fb01 e102 	mla	r1, r1, r2, lr
9002281c:	fb03 0302 	mla	r3, r3, r2, r0
90022820:	b289      	uxth	r1, r1
90022822:	b29a      	uxth	r2, r3
90022824:	f10c 0301 	add.w	r3, ip, #1
90022828:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002282c:	1c53      	adds	r3, r2, #1
9002282e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90022832:	1c4a      	adds	r2, r1, #1
90022834:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
90022838:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002283c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022840:	0949      	lsrs	r1, r1, #5
90022842:	ea43 030c 	orr.w	r3, r3, ip
90022846:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
9002284a:	430b      	orrs	r3, r1
9002284c:	f8a8 3000 	strh.w	r3, [r8]
90022850:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022852:	f108 0802 	add.w	r8, r8, #2
90022856:	f109 39ff 	add.w	r9, r9, #4294967295
9002285a:	441c      	add	r4, r3
9002285c:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002285e:	441e      	add	r6, r3
90022860:	e74a      	b.n	900226f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
90022862:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022864:	3d01      	subs	r5, #1
90022866:	441c      	add	r4, r3
90022868:	9b20      	ldr	r3, [sp, #128]	; 0x80
9002286a:	441e      	add	r6, r3
9002286c:	9b07      	ldr	r3, [sp, #28]
9002286e:	3302      	adds	r3, #2
90022870:	9307      	str	r3, [sp, #28]
90022872:	e722      	b.n	900226ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022874:	d022      	beq.n	900228bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
90022876:	1e6b      	subs	r3, r5, #1
90022878:	981f      	ldr	r0, [sp, #124]	; 0x7c
9002287a:	fb00 4003 	mla	r0, r0, r3, r4
9002287e:	1400      	asrs	r0, r0, #16
90022880:	f53f af37 	bmi.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022884:	3901      	subs	r1, #1
90022886:	4288      	cmp	r0, r1
90022888:	f6bf af33 	bge.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9002288c:	9920      	ldr	r1, [sp, #128]	; 0x80
9002288e:	fb01 6303 	mla	r3, r1, r3, r6
90022892:	141b      	asrs	r3, r3, #16
90022894:	f53f af2d 	bmi.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90022898:	3a01      	subs	r2, #1
9002289a:	4293      	cmp	r3, r2
9002289c:	f6bf af29 	bge.w	900226f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900228a0:	46a8      	mov	r8, r5
900228a2:	f8dd 901c 	ldr.w	r9, [sp, #28]
900228a6:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
900228aa:	f1b8 0f00 	cmp.w	r8, #0
900228ae:	dc60      	bgt.n	90022972 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900228b0:	9b07      	ldr	r3, [sp, #28]
900228b2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900228b6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900228ba:	9307      	str	r3, [sp, #28]
900228bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900228be:	2b00      	cmp	r3, #0
900228c0:	f340 80f8 	ble.w	90022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900228c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
900228c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
900228ca:	ee30 0a04 	vadd.f32	s0, s0, s8
900228ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
900228d2:	eef0 6a62 	vmov.f32	s13, s5
900228d6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900228da:	ee31 1a05 	vadd.f32	s2, s2, s10
900228de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900228e2:	ee16 4a90 	vmov	r4, s13
900228e6:	eef0 6a43 	vmov.f32	s13, s6
900228ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900228ee:	ee16 6a90 	vmov	r6, s13
900228f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900228f6:	ee61 7a27 	vmul.f32	s15, s2, s15
900228fa:	ee77 2a62 	vsub.f32	s5, s14, s5
900228fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022902:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022906:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002290a:	ee12 2a90 	vmov	r2, s5
9002290e:	eef0 2a47 	vmov.f32	s5, s14
90022912:	fb92 f3f3 	sdiv	r3, r2, r3
90022916:	ee13 2a10 	vmov	r2, s6
9002291a:	931f      	str	r3, [sp, #124]	; 0x7c
9002291c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
9002291e:	eeb0 3a67 	vmov.f32	s6, s15
90022922:	fb92 f3f3 	sdiv	r3, r2, r3
90022926:	9320      	str	r3, [sp, #128]	; 0x80
90022928:	9b0a      	ldr	r3, [sp, #40]	; 0x28
9002292a:	9a10      	ldr	r2, [sp, #64]	; 0x40
9002292c:	3b01      	subs	r3, #1
9002292e:	930a      	str	r3, [sp, #40]	; 0x28
90022930:	bf08      	it	eq
90022932:	4615      	moveq	r5, r2
90022934:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022936:	bf18      	it	ne
90022938:	461d      	movne	r5, r3
9002293a:	e6af      	b.n	9002269c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002293c:	f111 0a01 	adds.w	sl, r1, #1
90022940:	d486      	bmi.n	90022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022942:	45d6      	cmp	lr, sl
90022944:	db84      	blt.n	90022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022946:	f110 0a01 	adds.w	sl, r0, #1
9002294a:	d481      	bmi.n	90022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002294c:	4553      	cmp	r3, sl
9002294e:	f6ff af7f 	blt.w	90022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022952:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
90022954:	b21b      	sxth	r3, r3
90022956:	9101      	str	r1, [sp, #4]
90022958:	4641      	mov	r1, r8
9002295a:	9300      	str	r3, [sp, #0]
9002295c:	fa0f f38e 	sxth.w	r3, lr
90022960:	e9cd 0202 	strd	r0, r2, [sp, #8]
90022964:	e9cd c704 	strd	ip, r7, [sp, #16]
90022968:	9a09      	ldr	r2, [sp, #36]	; 0x24
9002296a:	9811      	ldr	r0, [sp, #68]	; 0x44
9002296c:	f7ff fdb2 	bl	900224d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
90022970:	e76e      	b.n	90022850 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90022972:	9b24      	ldr	r3, [sp, #144]	; 0x90
90022974:	1430      	asrs	r0, r6, #16
90022976:	9f09      	ldr	r7, [sp, #36]	; 0x24
90022978:	f3c6 3e03 	ubfx	lr, r6, #12, #4
9002297c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022980:	1423      	asrs	r3, r4, #16
90022982:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022986:	fb01 3000 	mla	r0, r1, r0, r3
9002298a:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002298c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
90022990:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
90022994:	8858      	ldrh	r0, [r3, #2]
90022996:	f1be 0f00 	cmp.w	lr, #0
9002299a:	d00b      	beq.n	900229b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
9002299c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
900229a0:	3901      	subs	r1, #1
900229a2:	0049      	lsls	r1, r1, #1
900229a4:	3102      	adds	r1, #2
900229a6:	eb03 0b01 	add.w	fp, r3, r1
900229aa:	5a5b      	ldrh	r3, [r3, r1]
900229ac:	930e      	str	r3, [sp, #56]	; 0x38
900229ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900229b2:	930f      	str	r3, [sp, #60]	; 0x3c
900229b4:	ea4f 410c 	mov.w	r1, ip, lsl #16
900229b8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
900229bc:	fb12 f30e 	smulbb	r3, r2, lr
900229c0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900229c4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
900229c8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
900229cc:	10db      	asrs	r3, r3, #3
900229ce:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
900229d2:	ea41 010c 	orr.w	r1, r1, ip
900229d6:	f1ce 0c10 	rsb	ip, lr, #16
900229da:	ea4b 0000 	orr.w	r0, fp, r0
900229de:	9f08      	ldr	r7, [sp, #32]
900229e0:	ebac 0c02 	sub.w	ip, ip, r2
900229e4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900229e8:	f108 38ff 	add.w	r8, r8, #4294967295
900229ec:	4350      	muls	r0, r2
900229ee:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900229f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900229f4:	fb0c 0c01 	mla	ip, ip, r1, r0
900229f8:	980e      	ldr	r0, [sp, #56]	; 0x38
900229fa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900229fe:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
90022a02:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90022a04:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022a08:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022a0c:	0412      	lsls	r2, r2, #16
90022a0e:	ea4b 0101 	orr.w	r1, fp, r1
90022a12:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022a16:	fb03 c101 	mla	r1, r3, r1, ip
90022a1a:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022a1e:	4302      	orrs	r2, r0
90022a20:	fb03 1202 	mla	r2, r3, r2, r1
90022a24:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90022a28:	0952      	lsrs	r2, r2, #5
90022a2a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
90022a2e:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
90022a32:	f8b9 2000 	ldrh.w	r2, [r9]
90022a36:	ea4b 0303 	orr.w	r3, fp, r3
90022a3a:	1211      	asrs	r1, r2, #8
90022a3c:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90022a40:	b29b      	uxth	r3, r3
90022a42:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90022a46:	00d2      	lsls	r2, r2, #3
90022a48:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
90022a4c:	fb11 f107 	smulbb	r1, r1, r7
90022a50:	1218      	asrs	r0, r3, #8
90022a52:	fb1c fc07 	smulbb	ip, ip, r7
90022a56:	b2d2      	uxtb	r2, r2
90022a58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90022a5c:	fb12 f207 	smulbb	r2, r2, r7
90022a60:	fb00 100a 	mla	r0, r0, sl, r1
90022a64:	10d9      	asrs	r1, r3, #3
90022a66:	00db      	lsls	r3, r3, #3
90022a68:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90022a6c:	b280      	uxth	r0, r0
90022a6e:	b2db      	uxtb	r3, r3
90022a70:	fb01 c10a 	mla	r1, r1, sl, ip
90022a74:	fb03 230a 	mla	r3, r3, sl, r2
90022a78:	1c42      	adds	r2, r0, #1
90022a7a:	b289      	uxth	r1, r1
90022a7c:	b29b      	uxth	r3, r3
90022a7e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90022a82:	f101 0c01 	add.w	ip, r1, #1
90022a86:	1c5a      	adds	r2, r3, #1
90022a88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
90022a8c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
90022a90:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90022a94:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90022a96:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90022a9a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022a9e:	441c      	add	r4, r3
90022aa0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90022aa4:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022aa6:	4310      	orrs	r0, r2
90022aa8:	441e      	add	r6, r3
90022aaa:	ea40 000c 	orr.w	r0, r0, ip
90022aae:	f829 0b02 	strh.w	r0, [r9], #2
90022ab2:	e6fa      	b.n	900228aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
90022ab4:	b013      	add	sp, #76	; 0x4c
90022ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022aba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
90022aba:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90022abe:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
90022ac2:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
90022ac6:	fb0e 4703 	mla	r7, lr, r3, r4
90022aca:	f1be 0f00 	cmp.w	lr, #0
90022ace:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
90022ad2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
90022ad6:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90022ada:	8808      	ldrh	r0, [r1, #0]
90022adc:	db60      	blt.n	90022ba0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022ade:	45f1      	cmp	r9, lr
90022ae0:	dd5e      	ble.n	90022ba0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90022ae2:	2c00      	cmp	r4, #0
90022ae4:	db5a      	blt.n	90022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022ae6:	42a3      	cmp	r3, r4
90022ae8:	dd58      	ble.n	90022b9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90022aea:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90022aee:	1c62      	adds	r2, r4, #1
90022af0:	d459      	bmi.n	90022ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022af2:	4293      	cmp	r3, r2
90022af4:	dd57      	ble.n	90022ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022af6:	2d00      	cmp	r5, #0
90022af8:	d055      	beq.n	90022ba6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90022afa:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90022afe:	f11e 0e01 	adds.w	lr, lr, #1
90022b02:	d454      	bmi.n	90022bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022b04:	45f1      	cmp	r9, lr
90022b06:	dd52      	ble.n	90022bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022b08:	2e00      	cmp	r6, #0
90022b0a:	d050      	beq.n	90022bae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90022b0c:	2c00      	cmp	r4, #0
90022b0e:	db4c      	blt.n	90022baa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022b10:	42a3      	cmp	r3, r4
90022b12:	dd4a      	ble.n	90022baa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90022b14:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90022b18:	3401      	adds	r4, #1
90022b1a:	d405      	bmi.n	90022b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022b1c:	42a3      	cmp	r3, r4
90022b1e:	dd03      	ble.n	90022b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022b20:	b115      	cbz	r5, 90022b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90022b22:	3301      	adds	r3, #1
90022b24:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90022b28:	fb15 f406 	smulbb	r4, r5, r6
90022b2c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90022b30:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90022b34:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022b38:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022b3c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90022b40:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
90022b44:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
90022b48:	ea43 0c0c 	orr.w	ip, r3, ip
90022b4c:	f1c6 0310 	rsb	r3, r6, #16
90022b50:	ea4e 0707 	orr.w	r7, lr, r7
90022b54:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90022b58:	1b5b      	subs	r3, r3, r5
90022b5a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90022b5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90022b62:	437d      	muls	r5, r7
90022b64:	fb03 5c0c 	mla	ip, r3, ip, r5
90022b68:	0403      	lsls	r3, r0, #16
90022b6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022b6e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022b72:	4318      	orrs	r0, r3
90022b74:	0413      	lsls	r3, r2, #16
90022b76:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022b7a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
90022b7e:	fb04 c000 	mla	r0, r4, r0, ip
90022b82:	4313      	orrs	r3, r2
90022b84:	fb06 0003 	mla	r0, r6, r3, r0
90022b88:	0d43      	lsrs	r3, r0, #21
90022b8a:	0940      	lsrs	r0, r0, #5
90022b8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022b90:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022b94:	4318      	orrs	r0, r3
90022b96:	8008      	strh	r0, [r1, #0]
90022b98:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90022b9c:	4684      	mov	ip, r0
90022b9e:	e7a6      	b.n	90022aee <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
90022ba0:	4607      	mov	r7, r0
90022ba2:	4684      	mov	ip, r0
90022ba4:	e7ab      	b.n	90022afe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022ba6:	4607      	mov	r7, r0
90022ba8:	e7a9      	b.n	90022afe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
90022baa:	4602      	mov	r2, r0
90022bac:	e7b4      	b.n	90022b18 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
90022bae:	4602      	mov	r2, r0
90022bb0:	e7ba      	b.n	90022b28 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

90022bb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022bb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022bb6:	b08f      	sub	sp, #60	; 0x3c
90022bb8:	461d      	mov	r5, r3
90022bba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
90022bbc:	9107      	str	r1, [sp, #28]
90022bbe:	920c      	str	r2, [sp, #48]	; 0x30
90022bc0:	6859      	ldr	r1, [r3, #4]
90022bc2:	681b      	ldr	r3, [r3, #0]
90022bc4:	900d      	str	r0, [sp, #52]	; 0x34
90022bc6:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
90022bca:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
90022bce:	fb01 2707 	mla	r7, r1, r7, r2
90022bd2:	eb03 0747 	add.w	r7, r3, r7, lsl #1
90022bd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022bd8:	f8d3 8000 	ldr.w	r8, [r3]
90022bdc:	9b07      	ldr	r3, [sp, #28]
90022bde:	2b00      	cmp	r3, #0
90022be0:	dc03      	bgt.n	90022bea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90022be2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90022be4:	2b00      	cmp	r3, #0
90022be6:	f340 8182 	ble.w	90022eee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022bea:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022bec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022bf0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90022bf4:	1e48      	subs	r0, r1, #1
90022bf6:	f102 3cff 	add.w	ip, r2, #4294967295
90022bfa:	2d00      	cmp	r5, #0
90022bfc:	f340 809b 	ble.w	90022d36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90022c00:	ea5f 4e24 	movs.w	lr, r4, asr #16
90022c04:	ea4f 4326 	mov.w	r3, r6, asr #16
90022c08:	d406      	bmi.n	90022c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022c0a:	4586      	cmp	lr, r0
90022c0c:	da04      	bge.n	90022c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022c0e:	2b00      	cmp	r3, #0
90022c10:	db02      	blt.n	90022c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90022c12:	4563      	cmp	r3, ip
90022c14:	f2c0 8090 	blt.w	90022d38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90022c18:	f11e 0e01 	adds.w	lr, lr, #1
90022c1c:	f100 8084 	bmi.w	90022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022c20:	4571      	cmp	r1, lr
90022c22:	f2c0 8081 	blt.w	90022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022c26:	3301      	adds	r3, #1
90022c28:	d47e      	bmi.n	90022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022c2a:	429a      	cmp	r2, r3
90022c2c:	db7c      	blt.n	90022d28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90022c2e:	46aa      	mov	sl, r5
90022c30:	46b9      	mov	r9, r7
90022c32:	f1ba 0f00 	cmp.w	sl, #0
90022c36:	f340 8099 	ble.w	90022d6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90022c3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022c3c:	1421      	asrs	r1, r4, #16
90022c3e:	ea4f 4026 	mov.w	r0, r6, asr #16
90022c42:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022c46:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90022c4a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90022c4e:	f100 80d1 	bmi.w	90022df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022c52:	f10e 3bff 	add.w	fp, lr, #4294967295
90022c56:	4559      	cmp	r1, fp
90022c58:	f280 80cc 	bge.w	90022df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022c5c:	2800      	cmp	r0, #0
90022c5e:	f2c0 80c9 	blt.w	90022df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022c62:	f103 3bff 	add.w	fp, r3, #4294967295
90022c66:	4558      	cmp	r0, fp
90022c68:	f280 80c4 	bge.w	90022df4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90022c6c:	fa0f fe8e 	sxth.w	lr, lr
90022c70:	fb00 110e 	mla	r1, r0, lr, r1
90022c74:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022c78:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
90022c7c:	8841      	ldrh	r1, [r0, #2]
90022c7e:	f1bc 0f00 	cmp.w	ip, #0
90022c82:	d00b      	beq.n	90022c9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
90022c84:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
90022c88:	3b01      	subs	r3, #1
90022c8a:	005b      	lsls	r3, r3, #1
90022c8c:	3302      	adds	r3, #2
90022c8e:	eb00 0e03 	add.w	lr, r0, r3
90022c92:	5ac3      	ldrh	r3, [r0, r3]
90022c94:	9308      	str	r3, [sp, #32]
90022c96:	f8be 3002 	ldrh.w	r3, [lr, #2]
90022c9a:	9309      	str	r3, [sp, #36]	; 0x24
90022c9c:	ea4f 400b 	mov.w	r0, fp, lsl #16
90022ca0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
90022ca4:	fb12 f30c 	smulbb	r3, r2, ip
90022ca8:	f1cc 0e10 	rsb	lr, ip, #16
90022cac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022cb0:	10db      	asrs	r3, r3, #3
90022cb2:	ebae 0e02 	sub.w	lr, lr, r2
90022cb6:	ea40 000b 	orr.w	r0, r0, fp
90022cba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022cbe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022cc2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022cc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022cca:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90022cce:	ea4b 0101 	orr.w	r1, fp, r1
90022cd2:	4351      	muls	r1, r2
90022cd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
90022cd6:	fb0e 1e00 	mla	lr, lr, r0, r1
90022cda:	0410      	lsls	r0, r2, #16
90022cdc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
90022ce0:	9908      	ldr	r1, [sp, #32]
90022ce2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022ce6:	4310      	orrs	r0, r2
90022ce8:	9a08      	ldr	r2, [sp, #32]
90022cea:	0412      	lsls	r2, r2, #16
90022cec:	fb03 e000 	mla	r0, r3, r0, lr
90022cf0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
90022cf4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90022cf8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022cfc:	ea42 020e 	orr.w	r2, r2, lr
90022d00:	fb03 0302 	mla	r3, r3, r2, r0
90022d04:	0d5a      	lsrs	r2, r3, #21
90022d06:	095b      	lsrs	r3, r3, #5
90022d08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90022d0c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
90022d10:	4313      	orrs	r3, r2
90022d12:	f8a9 3000 	strh.w	r3, [r9]
90022d16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022d18:	f109 0902 	add.w	r9, r9, #2
90022d1c:	f10a 3aff 	add.w	sl, sl, #4294967295
90022d20:	441c      	add	r4, r3
90022d22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022d24:	441e      	add	r6, r3
90022d26:	e784      	b.n	90022c32 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90022d28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022d2a:	3d01      	subs	r5, #1
90022d2c:	3702      	adds	r7, #2
90022d2e:	441c      	add	r4, r3
90022d30:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022d32:	441e      	add	r6, r3
90022d34:	e761      	b.n	90022bfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90022d36:	d01d      	beq.n	90022d74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90022d38:	1e6b      	subs	r3, r5, #1
90022d3a:	981b      	ldr	r0, [sp, #108]	; 0x6c
90022d3c:	fb00 4003 	mla	r0, r0, r3, r4
90022d40:	1400      	asrs	r0, r0, #16
90022d42:	f53f af74 	bmi.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022d46:	3901      	subs	r1, #1
90022d48:	4288      	cmp	r0, r1
90022d4a:	f6bf af70 	bge.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022d4e:	991c      	ldr	r1, [sp, #112]	; 0x70
90022d50:	fb01 6303 	mla	r3, r1, r3, r6
90022d54:	141b      	asrs	r3, r3, #16
90022d56:	f53f af6a 	bmi.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022d5a:	3a01      	subs	r2, #1
90022d5c:	4293      	cmp	r3, r2
90022d5e:	f6bf af66 	bge.w	90022c2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90022d62:	46a9      	mov	r9, r5
90022d64:	46ba      	mov	sl, r7
90022d66:	f1b9 0f00 	cmp.w	r9, #0
90022d6a:	dc5b      	bgt.n	90022e24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90022d6c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90022d70:	eb07 0745 	add.w	r7, r7, r5, lsl #1
90022d74:	9b07      	ldr	r3, [sp, #28]
90022d76:	2b00      	cmp	r3, #0
90022d78:	f340 80b9 	ble.w	90022eee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90022d7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90022d80:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022d82:	ee30 0a04 	vadd.f32	s0, s0, s8
90022d86:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022d8a:	eef0 6a62 	vmov.f32	s13, s5
90022d8e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022d92:	ee31 1a05 	vadd.f32	s2, s2, s10
90022d96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022d9a:	ee16 4a90 	vmov	r4, s13
90022d9e:	eef0 6a43 	vmov.f32	s13, s6
90022da2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022da6:	ee16 6a90 	vmov	r6, s13
90022daa:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022dae:	ee61 7a27 	vmul.f32	s15, s2, s15
90022db2:	ee77 2a62 	vsub.f32	s5, s14, s5
90022db6:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022dba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022dbe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022dc2:	ee12 2a90 	vmov	r2, s5
90022dc6:	eef0 2a47 	vmov.f32	s5, s14
90022dca:	fb92 f3f3 	sdiv	r3, r2, r3
90022dce:	ee13 2a10 	vmov	r2, s6
90022dd2:	931b      	str	r3, [sp, #108]	; 0x6c
90022dd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022dd6:	eeb0 3a67 	vmov.f32	s6, s15
90022dda:	fb92 f3f3 	sdiv	r3, r2, r3
90022dde:	931c      	str	r3, [sp, #112]	; 0x70
90022de0:	9b07      	ldr	r3, [sp, #28]
90022de2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90022de4:	3b01      	subs	r3, #1
90022de6:	9307      	str	r3, [sp, #28]
90022de8:	bf08      	it	eq
90022dea:	4615      	moveq	r5, r2
90022dec:	9b18      	ldr	r3, [sp, #96]	; 0x60
90022dee:	bf18      	it	ne
90022df0:	461d      	movne	r5, r3
90022df2:	e6f3      	b.n	90022bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
90022df4:	f111 0b01 	adds.w	fp, r1, #1
90022df8:	d48d      	bmi.n	90022d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022dfa:	45de      	cmp	lr, fp
90022dfc:	db8b      	blt.n	90022d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022dfe:	f110 0b01 	adds.w	fp, r0, #1
90022e02:	d488      	bmi.n	90022d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022e04:	455b      	cmp	r3, fp
90022e06:	db86      	blt.n	90022d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022e08:	b21b      	sxth	r3, r3
90022e0a:	e9cd 1001 	strd	r1, r0, [sp, #4]
90022e0e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
90022e12:	9300      	str	r3, [sp, #0]
90022e14:	4642      	mov	r2, r8
90022e16:	fa0f f38e 	sxth.w	r3, lr
90022e1a:	4649      	mov	r1, r9
90022e1c:	980d      	ldr	r0, [sp, #52]	; 0x34
90022e1e:	f7ff fe4c 	bl	90022aba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
90022e22:	e778      	b.n	90022d16 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90022e24:	9b20      	ldr	r3, [sp, #128]	; 0x80
90022e26:	1420      	asrs	r0, r4, #16
90022e28:	1431      	asrs	r1, r6, #16
90022e2a:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90022e2e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
90022e32:	f3c4 3203 	ubfx	r2, r4, #12, #4
90022e36:	fb03 0101 	mla	r1, r3, r1, r0
90022e3a:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90022e3e:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
90022e42:	8841      	ldrh	r1, [r0, #2]
90022e44:	f1be 0f00 	cmp.w	lr, #0
90022e48:	d00b      	beq.n	90022e62 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90022e4a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
90022e4e:	3b01      	subs	r3, #1
90022e50:	005b      	lsls	r3, r3, #1
90022e52:	3302      	adds	r3, #2
90022e54:	eb00 0b03 	add.w	fp, r0, r3
90022e58:	5ac3      	ldrh	r3, [r0, r3]
90022e5a:	930a      	str	r3, [sp, #40]	; 0x28
90022e5c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90022e60:	930b      	str	r3, [sp, #44]	; 0x2c
90022e62:	ea4f 400c 	mov.w	r0, ip, lsl #16
90022e66:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
90022e6a:	fb12 f30e 	smulbb	r3, r2, lr
90022e6e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
90022e72:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
90022e76:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
90022e7a:	10db      	asrs	r3, r3, #3
90022e7c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022e80:	ea40 000c 	orr.w	r0, r0, ip
90022e84:	f1ce 0c10 	rsb	ip, lr, #16
90022e88:	ea4b 0101 	orr.w	r1, fp, r1
90022e8c:	f109 39ff 	add.w	r9, r9, #4294967295
90022e90:	ebac 0c02 	sub.w	ip, ip, r2
90022e94:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90022e98:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
90022e9c:	4351      	muls	r1, r2
90022e9e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90022ea0:	fb0c 1c00 	mla	ip, ip, r0, r1
90022ea4:	990a      	ldr	r1, [sp, #40]	; 0x28
90022ea6:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90022eaa:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
90022eae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90022eb0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
90022eb4:	0412      	lsls	r2, r2, #16
90022eb6:	ea4b 0000 	orr.w	r0, fp, r0
90022eba:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
90022ebe:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
90022ec2:	fb03 c000 	mla	r0, r3, r0, ip
90022ec6:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90022eca:	ea42 0b0b 	orr.w	fp, r2, fp
90022ece:	fb03 000b 	mla	r0, r3, fp, r0
90022ed2:	0d43      	lsrs	r3, r0, #21
90022ed4:	0940      	lsrs	r0, r0, #5
90022ed6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90022eda:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
90022ede:	4318      	orrs	r0, r3
90022ee0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
90022ee2:	441c      	add	r4, r3
90022ee4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90022ee6:	f82a 0b02 	strh.w	r0, [sl], #2
90022eea:	441e      	add	r6, r3
90022eec:	e73b      	b.n	90022d66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90022eee:	b00f      	add	sp, #60	; 0x3c
90022ef0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
90022ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022ef8:	b085      	sub	sp, #20
90022efa:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
90022efe:	9102      	str	r1, [sp, #8]
90022f00:	2c00      	cmp	r4, #0
90022f02:	fb04 7103 	mla	r1, r4, r3, r7
90022f06:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
90022f0a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
90022f0e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90022f12:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
90022f16:	f2c0 811b 	blt.w	90023150 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022f1a:	45a6      	cmp	lr, r4
90022f1c:	f340 8118 	ble.w	90023150 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90022f20:	2f00      	cmp	r7, #0
90022f22:	f2c0 8113 	blt.w	9002314c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022f26:	42bb      	cmp	r3, r7
90022f28:	f340 8110 	ble.w	9002314c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90022f2c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90022f30:	1c7a      	adds	r2, r7, #1
90022f32:	f100 8110 	bmi.w	90023156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022f36:	4293      	cmp	r3, r2
90022f38:	f340 810d 	ble.w	90023156 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90022f3c:	2e00      	cmp	r6, #0
90022f3e:	f000 810c 	beq.w	9002315a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
90022f42:	f8dc 1004 	ldr.w	r1, [ip, #4]
90022f46:	3401      	adds	r4, #1
90022f48:	f100 810b 	bmi.w	90023162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022f4c:	45a6      	cmp	lr, r4
90022f4e:	f340 8108 	ble.w	90023162 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90022f52:	2800      	cmp	r0, #0
90022f54:	f000 8108 	beq.w	90023168 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90022f58:	2f00      	cmp	r7, #0
90022f5a:	f2c0 8100 	blt.w	9002315e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022f5e:	42bb      	cmp	r3, r7
90022f60:	f340 80fd 	ble.w	9002315e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90022f64:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90022f68:	3701      	adds	r7, #1
90022f6a:	f100 8100 	bmi.w	9002316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022f6e:	42bb      	cmp	r3, r7
90022f70:	f340 80fd 	ble.w	9002316e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
90022f74:	2e00      	cmp	r6, #0
90022f76:	f000 80fc 	beq.w	90023172 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
90022f7a:	3301      	adds	r3, #1
90022f7c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
90022f80:	b2b6      	uxth	r6, r6
90022f82:	b280      	uxth	r0, r0
90022f84:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90022f88:	fb00 fe06 	mul.w	lr, r0, r6
90022f8c:	0136      	lsls	r6, r6, #4
90022f8e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022f92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022f96:	eba6 070e 	sub.w	r7, r6, lr
90022f9a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90022f9e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022fa2:	b280      	uxth	r0, r0
90022fa4:	b2bf      	uxth	r7, r7
90022fa6:	1a1b      	subs	r3, r3, r0
90022fa8:	ea4f 6812 	mov.w	r8, r2, lsr #24
90022fac:	fb0a f607 	mul.w	r6, sl, r7
90022fb0:	b29b      	uxth	r3, r3
90022fb2:	fb0b 6603 	mla	r6, fp, r3, r6
90022fb6:	fb00 6609 	mla	r6, r0, r9, r6
90022fba:	fb0e 6608 	mla	r6, lr, r8, r6
90022fbe:	f3c6 2607 	ubfx	r6, r6, #8, #8
90022fc2:	9600      	str	r6, [sp, #0]
90022fc4:	2e00      	cmp	r6, #0
90022fc6:	f000 80be 	beq.w	90023146 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90022fca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90022fce:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
90022fd2:	9e02      	ldr	r6, [sp, #8]
90022fd4:	fb0b fc0c 	mul.w	ip, fp, ip
90022fd8:	fb0b f505 	mul.w	r5, fp, r5
90022fdc:	8836      	ldrh	r6, [r6, #0]
90022fde:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
90022fe2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90022fe6:	9501      	str	r5, [sp, #4]
90022fe8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
90022fec:	44dc      	add	ip, fp
90022fee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022ff2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
90022ff6:	9503      	str	r5, [sp, #12]
90022ff8:	9d01      	ldr	r5, [sp, #4]
90022ffa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
90022ffe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
90023002:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
90023006:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
9002300a:	fb0a fc0c 	mul.w	ip, sl, ip
9002300e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90023012:	fb0a fa01 	mul.w	sl, sl, r1
90023016:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002301a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002301e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
90023022:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023026:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002302a:	4465      	add	r5, ip
9002302c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
90023030:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
90023034:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023038:	fb09 fc0c 	mul.w	ip, r9, ip
9002303c:	0a2d      	lsrs	r5, r5, #8
9002303e:	fb09 f904 	mul.w	r9, r9, r4
90023042:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023046:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002304a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
9002304e:	f509 7480 	add.w	r4, r9, #256	; 0x100
90023052:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023056:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
9002305a:	437d      	muls	r5, r7
9002305c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023060:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90023064:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023068:	4461      	add	r1, ip
9002306a:	fb08 f404 	mul.w	r4, r8, r4
9002306e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023072:	fb08 f802 	mul.w	r8, r8, r2
90023076:	0a09      	lsrs	r1, r1, #8
90023078:	0a22      	lsrs	r2, r4, #8
9002307a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
9002307e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023082:	fb07 f70a 	mul.w	r7, r7, sl
90023086:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002308a:	4414      	add	r4, r2
9002308c:	f508 7280 	add.w	r2, r8, #256	; 0x100
90023090:	0a24      	lsrs	r4, r4, #8
90023092:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023096:	9a03      	ldr	r2, [sp, #12]
90023098:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
9002309c:	fb02 5503 	mla	r5, r2, r3, r5
900230a0:	ea4f 2818 	mov.w	r8, r8, lsr #8
900230a4:	9a00      	ldr	r2, [sp, #0]
900230a6:	fb04 540e 	mla	r4, r4, lr, r5
900230aa:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
900230ae:	1235      	asrs	r5, r6, #8
900230b0:	fb01 4100 	mla	r1, r1, r0, r4
900230b4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
900230b8:	0a09      	lsrs	r1, r1, #8
900230ba:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
900230be:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
900230c2:	fb03 7101 	mla	r1, r3, r1, r7
900230c6:	fb0e 1e08 	mla	lr, lr, r8, r1
900230ca:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
900230ce:	fb00 e101 	mla	r1, r0, r1, lr
900230d2:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
900230d6:	b287      	uxth	r7, r0
900230d8:	0a09      	lsrs	r1, r1, #8
900230da:	437a      	muls	r2, r7
900230dc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900230e0:	1c53      	adds	r3, r2, #1
900230e2:	4321      	orrs	r1, r4
900230e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900230e8:	0c0a      	lsrs	r2, r1, #16
900230ea:	f3c1 2407 	ubfx	r4, r1, #8, #8
900230ee:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900230f2:	b2c8      	uxtb	r0, r1
900230f4:	fb12 f207 	smulbb	r2, r2, r7
900230f8:	fb14 f407 	smulbb	r4, r4, r7
900230fc:	b2db      	uxtb	r3, r3
900230fe:	fb10 f007 	smulbb	r0, r0, r7
90023102:	fb05 2503 	mla	r5, r5, r3, r2
90023106:	10f2      	asrs	r2, r6, #3
90023108:	00f6      	lsls	r6, r6, #3
9002310a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002310e:	b2ad      	uxth	r5, r5
90023110:	b2f6      	uxtb	r6, r6
90023112:	fb02 4203 	mla	r2, r2, r3, r4
90023116:	fb06 0303 	mla	r3, r6, r3, r0
9002311a:	b294      	uxth	r4, r2
9002311c:	b299      	uxth	r1, r3
9002311e:	1c6b      	adds	r3, r5, #1
90023120:	1c62      	adds	r2, r4, #1
90023122:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023126:	1c4b      	adds	r3, r1, #1
90023128:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002312c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023130:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90023134:	0952      	lsrs	r2, r2, #5
90023136:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002313a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
9002313e:	432b      	orrs	r3, r5
90023140:	4313      	orrs	r3, r2
90023142:	9a02      	ldr	r2, [sp, #8]
90023144:	8013      	strh	r3, [r2, #0]
90023146:	b005      	add	sp, #20
90023148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002314c:	2500      	movs	r5, #0
9002314e:	e6ef      	b.n	90022f30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90023150:	2100      	movs	r1, #0
90023152:	460d      	mov	r5, r1
90023154:	e6f7      	b.n	90022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90023156:	2100      	movs	r1, #0
90023158:	e6f5      	b.n	90022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002315a:	4631      	mov	r1, r6
9002315c:	e6f3      	b.n	90022f46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
9002315e:	2400      	movs	r4, #0
90023160:	e702      	b.n	90022f68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90023162:	2200      	movs	r2, #0
90023164:	4614      	mov	r4, r2
90023166:	e70b      	b.n	90022f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023168:	4602      	mov	r2, r0
9002316a:	4604      	mov	r4, r0
9002316c:	e708      	b.n	90022f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
9002316e:	2200      	movs	r2, #0
90023170:	e706      	b.n	90022f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90023172:	4632      	mov	r2, r6
90023174:	e704      	b.n	90022f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90023176 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023176:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002317a:	b09d      	sub	sp, #116	; 0x74
9002317c:	9219      	str	r2, [sp, #100]	; 0x64
9002317e:	9307      	str	r3, [sp, #28]
90023180:	9a2b      	ldr	r2, [sp, #172]	; 0xac
90023182:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
90023186:	901b      	str	r0, [sp, #108]	; 0x6c
90023188:	931a      	str	r3, [sp, #104]	; 0x68
9002318a:	6850      	ldr	r0, [r2, #4]
9002318c:	9117      	str	r1, [sp, #92]	; 0x5c
9002318e:	6812      	ldr	r2, [r2, #0]
90023190:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
90023194:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
90023198:	fb00 1303 	mla	r3, r0, r3, r1
9002319c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900231a0:	930a      	str	r3, [sp, #40]	; 0x28
900231a2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900231a4:	681b      	ldr	r3, [r3, #0]
900231a6:	9310      	str	r3, [sp, #64]	; 0x40
900231a8:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
900231ac:	930b      	str	r3, [sp, #44]	; 0x2c
900231ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900231b0:	2b00      	cmp	r3, #0
900231b2:	dc03      	bgt.n	900231bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
900231b4:	9b19      	ldr	r3, [sp, #100]	; 0x64
900231b6:	2b00      	cmp	r3, #0
900231b8:	f340 8375 	ble.w	900238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
900231bc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
900231be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900231c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900231c6:	1e48      	subs	r0, r1, #1
900231c8:	1e57      	subs	r7, r2, #1
900231ca:	9b07      	ldr	r3, [sp, #28]
900231cc:	2b00      	cmp	r3, #0
900231ce:	f340 818e 	ble.w	900234ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
900231d2:	ea5f 4c24 	movs.w	ip, r4, asr #16
900231d6:	ea4f 4326 	mov.w	r3, r6, asr #16
900231da:	d406      	bmi.n	900231ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900231dc:	4584      	cmp	ip, r0
900231de:	da04      	bge.n	900231ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900231e0:	2b00      	cmp	r3, #0
900231e2:	db02      	blt.n	900231ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
900231e4:	42bb      	cmp	r3, r7
900231e6:	f2c0 8183 	blt.w	900234f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
900231ea:	f11c 0c01 	adds.w	ip, ip, #1
900231ee:	f100 8173 	bmi.w	900234d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900231f2:	4561      	cmp	r1, ip
900231f4:	f2c0 8170 	blt.w	900234d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900231f8:	3301      	adds	r3, #1
900231fa:	f100 816d 	bmi.w	900234d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900231fe:	429a      	cmp	r2, r3
90023200:	f2c0 816a 	blt.w	900234d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90023204:	9b07      	ldr	r3, [sp, #28]
90023206:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023208:	9318      	str	r3, [sp, #96]	; 0x60
9002320a:	9b18      	ldr	r3, [sp, #96]	; 0x60
9002320c:	2b00      	cmp	r3, #0
9002320e:	f340 818c 	ble.w	9002352a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90023212:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
90023214:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023218:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
9002321a:	f3c4 3003 	ubfx	r0, r4, #12, #4
9002321e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023222:	1422      	asrs	r2, r4, #16
90023224:	f3c6 3103 	ubfx	r1, r6, #12, #4
90023228:	689b      	ldr	r3, [r3, #8]
9002322a:	f100 81cd 	bmi.w	900235c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002322e:	f103 38ff 	add.w	r8, r3, #4294967295
90023232:	4542      	cmp	r2, r8
90023234:	f280 81c8 	bge.w	900235c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023238:	f1bc 0f00 	cmp.w	ip, #0
9002323c:	f2c0 81c4 	blt.w	900235c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023240:	f10e 38ff 	add.w	r8, lr, #4294967295
90023244:	45c4      	cmp	ip, r8
90023246:	f280 81bf 	bge.w	900235c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002324a:	b21b      	sxth	r3, r3
9002324c:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002324e:	fb0c 2203 	mla	r2, ip, r3, r2
90023252:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023256:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
9002325a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
9002325e:	2800      	cmp	r0, #0
90023260:	f000 81a9 	beq.w	900235b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90023264:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023268:	950c      	str	r5, [sp, #48]	; 0x30
9002326a:	0e2d      	lsrs	r5, r5, #24
9002326c:	9513      	str	r5, [sp, #76]	; 0x4c
9002326e:	b181      	cbz	r1, 90023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90023270:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023274:	3b01      	subs	r3, #1
90023276:	009b      	lsls	r3, r3, #2
90023278:	3304      	adds	r3, #4
9002327a:	eb08 0c03 	add.w	ip, r8, r3
9002327e:	f858 3003 	ldr.w	r3, [r8, r3]
90023282:	9308      	str	r3, [sp, #32]
90023284:	0e1b      	lsrs	r3, r3, #24
90023286:	9311      	str	r3, [sp, #68]	; 0x44
90023288:	f8dc 3004 	ldr.w	r3, [ip, #4]
9002328c:	930d      	str	r3, [sp, #52]	; 0x34
9002328e:	0e1b      	lsrs	r3, r3, #24
90023290:	9314      	str	r3, [sp, #80]	; 0x50
90023292:	b280      	uxth	r0, r0
90023294:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023296:	b289      	uxth	r1, r1
90023298:	fb00 f901 	mul.w	r9, r0, r1
9002329c:	0100      	lsls	r0, r0, #4
9002329e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
900232a2:	eba0 0809 	sub.w	r8, r0, r9
900232a6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
900232aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
900232ac:	b289      	uxth	r1, r1
900232ae:	fa1f f888 	uxth.w	r8, r8
900232b2:	1a5b      	subs	r3, r3, r1
900232b4:	fb08 f000 	mul.w	r0, r8, r0
900232b8:	b29b      	uxth	r3, r3
900232ba:	fb03 000e 	mla	r0, r3, lr, r0
900232be:	fb01 0005 	mla	r0, r1, r5, r0
900232c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
900232c4:	fb09 0005 	mla	r0, r9, r5, r0
900232c8:	f3c0 2007 	ubfx	r0, r0, #8, #8
900232cc:	2800      	cmp	r0, #0
900232ce:	f000 80fa 	beq.w	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900232d2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
900232d6:	d01b      	beq.n	90023310 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
900232d8:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
900232dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900232e0:	fb0e fa0a 	mul.w	sl, lr, sl
900232e4:	fb0e fe02 	mul.w	lr, lr, r2
900232e8:	ea4f 221a 	mov.w	r2, sl, lsr #8
900232ec:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900232f0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
900232f4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
900232f8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900232fc:	4452      	add	r2, sl
900232fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023302:	0a12      	lsrs	r2, r2, #8
90023304:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023308:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
9002330c:	ea42 020c 	orr.w	r2, r2, ip
90023310:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023312:	2dff      	cmp	r5, #255	; 0xff
90023314:	d021      	beq.n	9002335a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90023316:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023318:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
9002331c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002331e:	fb05 fb0b 	mul.w	fp, r5, fp
90023322:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023324:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023328:	9d13      	ldr	r5, [sp, #76]	; 0x4c
9002332a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002332e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023332:	fb05 fa0a 	mul.w	sl, r5, sl
90023336:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002333a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
9002333e:	44de      	add	lr, fp
90023340:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023344:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023348:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002334c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023350:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023354:	ea4e 050a 	orr.w	r5, lr, sl
90023358:	950c      	str	r5, [sp, #48]	; 0x30
9002335a:	9d11      	ldr	r5, [sp, #68]	; 0x44
9002335c:	2dff      	cmp	r5, #255	; 0xff
9002335e:	d021      	beq.n	900233a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90023360:	9d08      	ldr	r5, [sp, #32]
90023362:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023366:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023368:	fb05 fb0b 	mul.w	fp, r5, fp
9002336c:	9d08      	ldr	r5, [sp, #32]
9002336e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023372:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023374:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023378:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
9002337c:	fb05 fa0a 	mul.w	sl, r5, sl
90023380:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023384:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023388:	44de      	add	lr, fp
9002338a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002338e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023392:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023396:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
9002339a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002339e:	ea4e 050a 	orr.w	r5, lr, sl
900233a2:	9508      	str	r5, [sp, #32]
900233a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
900233a6:	2dff      	cmp	r5, #255	; 0xff
900233a8:	d021      	beq.n	900233ee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
900233aa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900233ac:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
900233b0:	9d14      	ldr	r5, [sp, #80]	; 0x50
900233b2:	fb05 fb0b 	mul.w	fp, r5, fp
900233b6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
900233b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900233bc:	9d14      	ldr	r5, [sp, #80]	; 0x50
900233be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900233c2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
900233c6:	fb05 fa0a 	mul.w	sl, r5, sl
900233ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233ce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
900233d2:	44de      	add	lr, fp
900233d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233e0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
900233e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900233e8:	ea4e 050a 	orr.w	r5, lr, sl
900233ec:	950d      	str	r5, [sp, #52]	; 0x34
900233ee:	9d0c      	ldr	r5, [sp, #48]	; 0x30
900233f0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
900233f4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
900233f8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900233fc:	9d08      	ldr	r5, [sp, #32]
900233fe:	fb08 fc0c 	mul.w	ip, r8, ip
90023402:	fb03 cc0e 	mla	ip, r3, lr, ip
90023406:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
9002340a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
9002340c:	fb01 cc0e 	mla	ip, r1, lr, ip
90023410:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023414:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023416:	fb09 cc0e 	mla	ip, r9, lr, ip
9002341a:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
9002341e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023420:	fb08 f80e 	mul.w	r8, r8, lr
90023424:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023428:	fb03 8202 	mla	r2, r3, r2, r8
9002342c:	9b08      	ldr	r3, [sp, #32]
9002342e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023432:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
90023436:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90023438:	fb01 220a 	mla	r2, r1, sl, r2
9002343c:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
90023440:	883b      	ldrh	r3, [r7, #0]
90023442:	fb09 2901 	mla	r9, r9, r1, r2
90023446:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
90023448:	1219      	asrs	r1, r3, #8
9002344a:	4342      	muls	r2, r0
9002344c:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023450:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90023454:	1c50      	adds	r0, r2, #1
90023456:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
9002345a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9002345e:	ea4c 0c09 	orr.w	ip, ip, r9
90023462:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90023466:	ea4f 421c 	mov.w	r2, ip, lsr #16
9002346a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
9002346e:	fa5f fc8c 	uxtb.w	ip, ip
90023472:	fb12 f205 	smulbb	r2, r2, r5
90023476:	b2c0      	uxtb	r0, r0
90023478:	fb1c fc05 	smulbb	ip, ip, r5
9002347c:	fb01 2100 	mla	r1, r1, r0, r2
90023480:	10da      	asrs	r2, r3, #3
90023482:	fb1e fe05 	smulbb	lr, lr, r5
90023486:	00db      	lsls	r3, r3, #3
90023488:	b289      	uxth	r1, r1
9002348a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
9002348e:	b2db      	uxtb	r3, r3
90023490:	fb02 e200 	mla	r2, r2, r0, lr
90023494:	fb03 c300 	mla	r3, r3, r0, ip
90023498:	b292      	uxth	r2, r2
9002349a:	fa1f fc83 	uxth.w	ip, r3
9002349e:	1c4b      	adds	r3, r1, #1
900234a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
900234a4:	f10c 0301 	add.w	r3, ip, #1
900234a8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
900234ac:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
900234b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
900234b4:	430b      	orrs	r3, r1
900234b6:	1c51      	adds	r1, r2, #1
900234b8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
900234bc:	0952      	lsrs	r2, r2, #5
900234be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900234c2:	4313      	orrs	r3, r2
900234c4:	803b      	strh	r3, [r7, #0]
900234c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900234c8:	3702      	adds	r7, #2
900234ca:	441c      	add	r4, r3
900234cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900234ce:	441e      	add	r6, r3
900234d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
900234d2:	3b01      	subs	r3, #1
900234d4:	9318      	str	r3, [sp, #96]	; 0x60
900234d6:	e698      	b.n	9002320a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900234d8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
900234da:	441c      	add	r4, r3
900234dc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
900234de:	441e      	add	r6, r3
900234e0:	9b07      	ldr	r3, [sp, #28]
900234e2:	3b01      	subs	r3, #1
900234e4:	9307      	str	r3, [sp, #28]
900234e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
900234e8:	3302      	adds	r3, #2
900234ea:	930a      	str	r3, [sp, #40]	; 0x28
900234ec:	e66d      	b.n	900231ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
900234ee:	d023      	beq.n	90023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
900234f0:	9b07      	ldr	r3, [sp, #28]
900234f2:	9829      	ldr	r0, [sp, #164]	; 0xa4
900234f4:	3b01      	subs	r3, #1
900234f6:	fb00 4003 	mla	r0, r0, r3, r4
900234fa:	1400      	asrs	r0, r0, #16
900234fc:	f53f ae82 	bmi.w	90023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023500:	3901      	subs	r1, #1
90023502:	4288      	cmp	r0, r1
90023504:	f6bf ae7e 	bge.w	90023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023508:	992a      	ldr	r1, [sp, #168]	; 0xa8
9002350a:	fb01 6303 	mla	r3, r1, r3, r6
9002350e:	141b      	asrs	r3, r3, #16
90023510:	f53f ae78 	bmi.w	90023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90023514:	3a01      	subs	r2, #1
90023516:	4293      	cmp	r3, r2
90023518:	f6bf ae74 	bge.w	90023204 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
9002351c:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023520:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
90023524:	f1bb 0f00 	cmp.w	fp, #0
90023528:	dc6c      	bgt.n	90023604 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
9002352a:	9b07      	ldr	r3, [sp, #28]
9002352c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023530:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023532:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023536:	930a      	str	r3, [sp, #40]	; 0x28
90023538:	9b17      	ldr	r3, [sp, #92]	; 0x5c
9002353a:	2b00      	cmp	r3, #0
9002353c:	f340 81b3 	ble.w	900238a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90023540:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023544:	9b26      	ldr	r3, [sp, #152]	; 0x98
90023546:	ee30 0a04 	vadd.f32	s0, s0, s8
9002354a:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002354e:	eef0 6a62 	vmov.f32	s13, s5
90023552:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023556:	ee31 1a05 	vadd.f32	s2, s2, s10
9002355a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002355e:	ee16 4a90 	vmov	r4, s13
90023562:	eef0 6a43 	vmov.f32	s13, s6
90023566:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002356a:	ee16 6a90 	vmov	r6, s13
9002356e:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023572:	ee61 7a27 	vmul.f32	s15, s2, s15
90023576:	ee77 2a62 	vsub.f32	s5, s14, s5
9002357a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002357e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023582:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023586:	ee12 2a90 	vmov	r2, s5
9002358a:	eef0 2a47 	vmov.f32	s5, s14
9002358e:	fb92 f3f3 	sdiv	r3, r2, r3
90023592:	ee13 2a10 	vmov	r2, s6
90023596:	9329      	str	r3, [sp, #164]	; 0xa4
90023598:	9b26      	ldr	r3, [sp, #152]	; 0x98
9002359a:	eeb0 3a67 	vmov.f32	s6, s15
9002359e:	fb92 f3f3 	sdiv	r3, r2, r3
900235a2:	932a      	str	r3, [sp, #168]	; 0xa8
900235a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
900235a6:	9a19      	ldr	r2, [sp, #100]	; 0x64
900235a8:	3b01      	subs	r3, #1
900235aa:	9317      	str	r3, [sp, #92]	; 0x5c
900235ac:	9b26      	ldr	r3, [sp, #152]	; 0x98
900235ae:	bf08      	it	eq
900235b0:	4613      	moveq	r3, r2
900235b2:	9307      	str	r3, [sp, #28]
900235b4:	e5fb      	b.n	900231ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
900235b6:	2900      	cmp	r1, #0
900235b8:	f43f ae6b 	beq.w	90023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900235bc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
900235c0:	9308      	str	r3, [sp, #32]
900235c2:	0e1b      	lsrs	r3, r3, #24
900235c4:	9311      	str	r3, [sp, #68]	; 0x44
900235c6:	e664      	b.n	90023292 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
900235c8:	f112 0801 	adds.w	r8, r2, #1
900235cc:	f53f af7b 	bmi.w	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900235d0:	4543      	cmp	r3, r8
900235d2:	f6ff af78 	blt.w	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900235d6:	f11c 0801 	adds.w	r8, ip, #1
900235da:	f53f af74 	bmi.w	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900235de:	45c6      	cmp	lr, r8
900235e0:	f6ff af71 	blt.w	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
900235e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
900235e6:	b21b      	sxth	r3, r3
900235e8:	9201      	str	r2, [sp, #4]
900235ea:	fa0f f28e 	sxth.w	r2, lr
900235ee:	e9cd 1504 	strd	r1, r5, [sp, #16]
900235f2:	e9cd c002 	strd	ip, r0, [sp, #8]
900235f6:	9200      	str	r2, [sp, #0]
900235f8:	4639      	mov	r1, r7
900235fa:	9a10      	ldr	r2, [sp, #64]	; 0x40
900235fc:	981b      	ldr	r0, [sp, #108]	; 0x6c
900235fe:	f7ff fc79 	bl	90022ef4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90023602:	e760      	b.n	900234c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90023604:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
90023606:	1427      	asrs	r7, r4, #16
90023608:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002360a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002360e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023612:	1433      	asrs	r3, r6, #16
90023614:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023618:	fb01 7303 	mla	r3, r1, r3, r7
9002361c:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90023620:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023624:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023628:	2a00      	cmp	r2, #0
9002362a:	f000 8133 	beq.w	90023894 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
9002362e:	687d      	ldr	r5, [r7, #4]
90023630:	950e      	str	r5, [sp, #56]	; 0x38
90023632:	0e2d      	lsrs	r5, r5, #24
90023634:	9515      	str	r5, [sp, #84]	; 0x54
90023636:	b178      	cbz	r0, 90023658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90023638:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
9002363c:	3901      	subs	r1, #1
9002363e:	0089      	lsls	r1, r1, #2
90023640:	3104      	adds	r1, #4
90023642:	eb07 0e01 	add.w	lr, r7, r1
90023646:	5879      	ldr	r1, [r7, r1]
90023648:	9109      	str	r1, [sp, #36]	; 0x24
9002364a:	0e09      	lsrs	r1, r1, #24
9002364c:	9112      	str	r1, [sp, #72]	; 0x48
9002364e:	f8de 1004 	ldr.w	r1, [lr, #4]
90023652:	910f      	str	r1, [sp, #60]	; 0x3c
90023654:	0e09      	lsrs	r1, r1, #24
90023656:	9116      	str	r1, [sp, #88]	; 0x58
90023658:	b292      	uxth	r2, r2
9002365a:	9915      	ldr	r1, [sp, #84]	; 0x54
9002365c:	b280      	uxth	r0, r0
9002365e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023660:	fb02 f800 	mul.w	r8, r2, r0
90023664:	0112      	lsls	r2, r2, #4
90023666:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
9002366a:	eba2 0e08 	sub.w	lr, r2, r8
9002366e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
90023672:	b280      	uxth	r0, r0
90023674:	fa1f fe8e 	uxth.w	lr, lr
90023678:	1a12      	subs	r2, r2, r0
9002367a:	fb0e f101 	mul.w	r1, lr, r1
9002367e:	b292      	uxth	r2, r2
90023680:	fb02 110c 	mla	r1, r2, ip, r1
90023684:	fb00 1105 	mla	r1, r0, r5, r1
90023688:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002368a:	fb08 1105 	mla	r1, r8, r5, r1
9002368e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023692:	2900      	cmp	r1, #0
90023694:	f000 80f5 	beq.w	90023882 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90023698:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
9002369c:	d019      	beq.n	900236d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
9002369e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
900236a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900236a6:	fb0c fa0a 	mul.w	sl, ip, sl
900236aa:	fb0c fc03 	mul.w	ip, ip, r3
900236ae:	ea4f 231a 	mov.w	r3, sl, lsr #8
900236b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
900236b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
900236ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900236be:	eb07 271c 	add.w	r7, r7, ip, lsr #8
900236c2:	4453      	add	r3, sl
900236c4:	0a3f      	lsrs	r7, r7, #8
900236c6:	0a1b      	lsrs	r3, r3, #8
900236c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
900236cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
900236d0:	433b      	orrs	r3, r7
900236d2:	9d15      	ldr	r5, [sp, #84]	; 0x54
900236d4:	2dff      	cmp	r5, #255	; 0xff
900236d6:	d020      	beq.n	9002371a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
900236d8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900236da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900236de:	9d15      	ldr	r5, [sp, #84]	; 0x54
900236e0:	436f      	muls	r7, r5
900236e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900236e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900236e8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
900236ec:	9d15      	ldr	r5, [sp, #84]	; 0x54
900236ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900236f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900236f6:	fb05 fa0a 	mul.w	sl, r5, sl
900236fa:	44bc      	add	ip, r7
900236fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023700:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023704:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023708:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002370c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023710:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023714:	ea4c 050a 	orr.w	r5, ip, sl
90023718:	950e      	str	r5, [sp, #56]	; 0x38
9002371a:	9d12      	ldr	r5, [sp, #72]	; 0x48
9002371c:	2dff      	cmp	r5, #255	; 0xff
9002371e:	d020      	beq.n	90023762 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90023720:	9d09      	ldr	r5, [sp, #36]	; 0x24
90023722:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90023726:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023728:	436f      	muls	r7, r5
9002372a:	9d09      	ldr	r5, [sp, #36]	; 0x24
9002372c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023730:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023734:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023736:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002373a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002373e:	fb05 fa0a 	mul.w	sl, r5, sl
90023742:	44bc      	add	ip, r7
90023744:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023748:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002374c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023750:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023754:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023758:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
9002375c:	ea4c 050a 	orr.w	r5, ip, sl
90023760:	9509      	str	r5, [sp, #36]	; 0x24
90023762:	9d16      	ldr	r5, [sp, #88]	; 0x58
90023764:	2dff      	cmp	r5, #255	; 0xff
90023766:	d020      	beq.n	900237aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
90023768:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
9002376a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002376e:	9d16      	ldr	r5, [sp, #88]	; 0x58
90023770:	436f      	muls	r7, r5
90023772:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023774:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023778:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
9002377c:	9d16      	ldr	r5, [sp, #88]	; 0x58
9002377e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
90023782:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023786:	fb05 fa0a 	mul.w	sl, r5, sl
9002378a:	44bc      	add	ip, r7
9002378c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
90023790:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023794:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023798:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
9002379c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900237a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900237a4:	ea4c 050a 	orr.w	r5, ip, sl
900237a8:	950f      	str	r5, [sp, #60]	; 0x3c
900237aa:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900237ac:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
900237b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
900237b4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900237b8:	9d09      	ldr	r5, [sp, #36]	; 0x24
900237ba:	fb0e f707 	mul.w	r7, lr, r7
900237be:	fb02 770c 	mla	r7, r2, ip, r7
900237c2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900237c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900237c8:	fb00 770c 	mla	r7, r0, ip, r7
900237cc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
900237d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900237d2:	fb08 770c 	mla	r7, r8, ip, r7
900237d6:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900237da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
900237dc:	fb0e fe0c 	mul.w	lr, lr, ip
900237e0:	0a3f      	lsrs	r7, r7, #8
900237e2:	fb02 e303 	mla	r3, r2, r3, lr
900237e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
900237e8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
900237ec:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
900237f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900237f2:	fb00 330a 	mla	r3, r0, sl, r3
900237f6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
900237fa:	f8b9 0000 	ldrh.w	r0, [r9]
900237fe:	fb08 3c0c 	mla	ip, r8, ip, r3
90023802:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
90023804:	1202      	asrs	r2, r0, #8
90023806:	4359      	muls	r1, r3
90023808:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002380c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
90023810:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023814:	1c4b      	adds	r3, r1, #1
90023816:	ea47 070c 	orr.w	r7, r7, ip
9002381a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002381e:	0c3b      	lsrs	r3, r7, #16
90023820:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90023824:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90023828:	b2ff      	uxtb	r7, r7
9002382a:	fb13 f305 	smulbb	r3, r3, r5
9002382e:	b2c9      	uxtb	r1, r1
90023830:	fb17 f705 	smulbb	r7, r7, r5
90023834:	fb02 3201 	mla	r2, r2, r1, r3
90023838:	10c3      	asrs	r3, r0, #3
9002383a:	fb1c fc05 	smulbb	ip, ip, r5
9002383e:	00c0      	lsls	r0, r0, #3
90023840:	b292      	uxth	r2, r2
90023842:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
90023846:	b2c0      	uxtb	r0, r0
90023848:	fb03 c301 	mla	r3, r3, r1, ip
9002384c:	fb00 7001 	mla	r0, r0, r1, r7
90023850:	1c51      	adds	r1, r2, #1
90023852:	b29b      	uxth	r3, r3
90023854:	b280      	uxth	r0, r0
90023856:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002385a:	f100 0c01 	add.w	ip, r0, #1
9002385e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
90023862:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
90023866:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9002386a:	ea4c 0202 	orr.w	r2, ip, r2
9002386e:	f103 0c01 	add.w	ip, r3, #1
90023872:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90023876:	095b      	lsrs	r3, r3, #5
90023878:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
9002387c:	431a      	orrs	r2, r3
9002387e:	f8a9 2000 	strh.w	r2, [r9]
90023882:	9b29      	ldr	r3, [sp, #164]	; 0xa4
90023884:	f109 0902 	add.w	r9, r9, #2
90023888:	f10b 3bff 	add.w	fp, fp, #4294967295
9002388c:	441c      	add	r4, r3
9002388e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
90023890:	441e      	add	r6, r3
90023892:	e647      	b.n	90023524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
90023894:	2800      	cmp	r0, #0
90023896:	f43f aedf 	beq.w	90023658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
9002389a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
9002389e:	9109      	str	r1, [sp, #36]	; 0x24
900238a0:	0e09      	lsrs	r1, r1, #24
900238a2:	9112      	str	r1, [sp, #72]	; 0x48
900238a4:	e6d8      	b.n	90023658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900238a6:	b01d      	add	sp, #116	; 0x74
900238a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900238ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900238ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900238b0:	b085      	sub	sp, #20
900238b2:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
900238b6:	9102      	str	r1, [sp, #8]
900238b8:	2c00      	cmp	r4, #0
900238ba:	fb04 7103 	mla	r1, r4, r3, r7
900238be:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
900238c2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
900238c6:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
900238ca:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
900238ce:	f2c0 810c 	blt.w	90023aea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900238d2:	45a6      	cmp	lr, r4
900238d4:	f340 8109 	ble.w	90023aea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
900238d8:	2f00      	cmp	r7, #0
900238da:	f2c0 8104 	blt.w	90023ae6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900238de:	42bb      	cmp	r3, r7
900238e0:	f340 8101 	ble.w	90023ae6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
900238e4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
900238e8:	1c7a      	adds	r2, r7, #1
900238ea:	f100 8101 	bmi.w	90023af0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900238ee:	4293      	cmp	r3, r2
900238f0:	f340 80fe 	ble.w	90023af0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
900238f4:	2e00      	cmp	r6, #0
900238f6:	f000 80fd 	beq.w	90023af4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
900238fa:	f8dc 1004 	ldr.w	r1, [ip, #4]
900238fe:	3401      	adds	r4, #1
90023900:	f100 80fc 	bmi.w	90023afc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90023904:	45a6      	cmp	lr, r4
90023906:	f340 80f9 	ble.w	90023afc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002390a:	2800      	cmp	r0, #0
9002390c:	f000 80f9 	beq.w	90023b02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90023910:	2f00      	cmp	r7, #0
90023912:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
90023916:	f2c0 80ef 	blt.w	90023af8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
9002391a:	42bb      	cmp	r3, r7
9002391c:	f340 80ec 	ble.w	90023af8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90023920:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
90023924:	3701      	adds	r7, #1
90023926:	f100 80ef 	bmi.w	90023b08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
9002392a:	42bb      	cmp	r3, r7
9002392c:	f340 80ec 	ble.w	90023b08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90023930:	2e00      	cmp	r6, #0
90023932:	f000 80eb 	beq.w	90023b0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
90023936:	6852      	ldr	r2, [r2, #4]
90023938:	b2b6      	uxth	r6, r6
9002393a:	b280      	uxth	r0, r0
9002393c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90023940:	fb00 fe06 	mul.w	lr, r0, r6
90023944:	0136      	lsls	r6, r6, #4
90023946:	ea4f 6b15 	mov.w	fp, r5, lsr #24
9002394a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
9002394e:	eba6 070e 	sub.w	r7, r6, lr
90023952:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
90023956:	ea4f 6914 	mov.w	r9, r4, lsr #24
9002395a:	b280      	uxth	r0, r0
9002395c:	b2bf      	uxth	r7, r7
9002395e:	1a1b      	subs	r3, r3, r0
90023960:	ea4f 6812 	mov.w	r8, r2, lsr #24
90023964:	fb07 f60a 	mul.w	r6, r7, sl
90023968:	b29b      	uxth	r3, r3
9002396a:	fb0b 6603 	mla	r6, fp, r3, r6
9002396e:	fb00 6609 	mla	r6, r0, r9, r6
90023972:	fb0e 6608 	mla	r6, lr, r8, r6
90023976:	f3c6 2607 	ubfx	r6, r6, #8, #8
9002397a:	9600      	str	r6, [sp, #0]
9002397c:	2e00      	cmp	r6, #0
9002397e:	f000 80af 	beq.w	90023ae0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
90023982:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023986:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
9002398a:	9e02      	ldr	r6, [sp, #8]
9002398c:	fb0b fc0c 	mul.w	ip, fp, ip
90023990:	fb0b f505 	mul.w	r5, fp, r5
90023994:	8836      	ldrh	r6, [r6, #0]
90023996:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002399a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
9002399e:	9501      	str	r5, [sp, #4]
900239a0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
900239a4:	44dc      	add	ip, fp
900239a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900239aa:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
900239ae:	9503      	str	r5, [sp, #12]
900239b0:	9d01      	ldr	r5, [sp, #4]
900239b2:	f505 7c80 	add.w	ip, r5, #256	; 0x100
900239b6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900239ba:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
900239be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
900239c2:	fb0a fc0c 	mul.w	ip, sl, ip
900239c6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
900239ca:	fb0a fa01 	mul.w	sl, sl, r1
900239ce:	ea4f 251c 	mov.w	r5, ip, lsr #8
900239d2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
900239d6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
900239da:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
900239de:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
900239e2:	4465      	add	r5, ip
900239e4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
900239e8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
900239ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900239f0:	fb09 fc0c 	mul.w	ip, r9, ip
900239f4:	0a2d      	lsrs	r5, r5, #8
900239f6:	fb09 f904 	mul.w	r9, r9, r4
900239fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900239fe:	ea4f 211c 	mov.w	r1, ip, lsr #8
90023a02:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
90023a06:	f509 7480 	add.w	r4, r9, #256	; 0x100
90023a0a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
90023a0e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023a12:	437d      	muls	r5, r7
90023a14:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90023a18:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
90023a1c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023a20:	4461      	add	r1, ip
90023a22:	fb08 f404 	mul.w	r4, r8, r4
90023a26:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023a2a:	fb08 f802 	mul.w	r8, r8, r2
90023a2e:	0a09      	lsrs	r1, r1, #8
90023a30:	0a22      	lsrs	r2, r4, #8
90023a32:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
90023a36:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
90023a3a:	fb07 f70a 	mul.w	r7, r7, sl
90023a3e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023a42:	4414      	add	r4, r2
90023a44:	f508 7280 	add.w	r2, r8, #256	; 0x100
90023a48:	0a24      	lsrs	r4, r4, #8
90023a4a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90023a4e:	9a03      	ldr	r2, [sp, #12]
90023a50:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
90023a54:	fb02 5503 	mla	r5, r2, r3, r5
90023a58:	ea4f 2818 	mov.w	r8, r8, lsr #8
90023a5c:	fb04 540e 	mla	r4, r4, lr, r5
90023a60:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
90023a64:	fb01 4100 	mla	r1, r1, r0, r4
90023a68:	0a09      	lsrs	r1, r1, #8
90023a6a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
90023a6e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
90023a72:	fb03 7101 	mla	r1, r3, r1, r7
90023a76:	9b00      	ldr	r3, [sp, #0]
90023a78:	fb0e 1e08 	mla	lr, lr, r8, r1
90023a7c:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
90023a80:	43da      	mvns	r2, r3
90023a82:	1233      	asrs	r3, r6, #8
90023a84:	fb00 e101 	mla	r1, r0, r1, lr
90023a88:	10f0      	asrs	r0, r6, #3
90023a8a:	b2d2      	uxtb	r2, r2
90023a8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90023a90:	0a09      	lsrs	r1, r1, #8
90023a92:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023a96:	00f6      	lsls	r6, r6, #3
90023a98:	4353      	muls	r3, r2
90023a9a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
90023a9e:	4350      	muls	r0, r2
90023aa0:	b2f6      	uxtb	r6, r6
90023aa2:	4321      	orrs	r1, r4
90023aa4:	4356      	muls	r6, r2
90023aa6:	1c5a      	adds	r2, r3, #1
90023aa8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90023aac:	0c0b      	lsrs	r3, r1, #16
90023aae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023ab2:	1c42      	adds	r2, r0, #1
90023ab4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023ab8:	0a0a      	lsrs	r2, r1, #8
90023aba:	021b      	lsls	r3, r3, #8
90023abc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023ac0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
90023ac4:	00d2      	lsls	r2, r2, #3
90023ac6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023aca:	4313      	orrs	r3, r2
90023acc:	1c72      	adds	r2, r6, #1
90023ace:	eb02 2616 	add.w	r6, r2, r6, lsr #8
90023ad2:	eb01 2116 	add.w	r1, r1, r6, lsr #8
90023ad6:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90023ada:	4319      	orrs	r1, r3
90023adc:	9b02      	ldr	r3, [sp, #8]
90023ade:	8019      	strh	r1, [r3, #0]
90023ae0:	b005      	add	sp, #20
90023ae2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023ae6:	2500      	movs	r5, #0
90023ae8:	e6fe      	b.n	900238e8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90023aea:	2100      	movs	r1, #0
90023aec:	460d      	mov	r5, r1
90023aee:	e706      	b.n	900238fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023af0:	2100      	movs	r1, #0
90023af2:	e704      	b.n	900238fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023af4:	4631      	mov	r1, r6
90023af6:	e702      	b.n	900238fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90023af8:	2400      	movs	r4, #0
90023afa:	e713      	b.n	90023924 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90023afc:	2200      	movs	r2, #0
90023afe:	4614      	mov	r4, r2
90023b00:	e71a      	b.n	90023938 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023b02:	4602      	mov	r2, r0
90023b04:	4604      	mov	r4, r0
90023b06:	e717      	b.n	90023938 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023b08:	2200      	movs	r2, #0
90023b0a:	e715      	b.n	90023938 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90023b0c:	4632      	mov	r2, r6
90023b0e:	e713      	b.n	90023938 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90023b10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023b10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023b14:	b09b      	sub	sp, #108	; 0x6c
90023b16:	9218      	str	r2, [sp, #96]	; 0x60
90023b18:	9a29      	ldr	r2, [sp, #164]	; 0xa4
90023b1a:	9019      	str	r0, [sp, #100]	; 0x64
90023b1c:	9116      	str	r1, [sp, #88]	; 0x58
90023b1e:	6850      	ldr	r0, [r2, #4]
90023b20:	9307      	str	r3, [sp, #28]
90023b22:	6812      	ldr	r2, [r2, #0]
90023b24:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
90023b28:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
90023b2c:	fb00 1303 	mla	r3, r0, r3, r1
90023b30:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023b34:	930a      	str	r3, [sp, #40]	; 0x28
90023b36:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023b38:	681b      	ldr	r3, [r3, #0]
90023b3a:	930f      	str	r3, [sp, #60]	; 0x3c
90023b3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023b3e:	2b00      	cmp	r3, #0
90023b40:	dc03      	bgt.n	90023b4a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023b42:	9b18      	ldr	r3, [sp, #96]	; 0x60
90023b44:	2b00      	cmp	r3, #0
90023b46:	f340 8387 	ble.w	90024258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023b4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023b4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023b50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023b54:	1e48      	subs	r0, r1, #1
90023b56:	1e57      	subs	r7, r2, #1
90023b58:	9b07      	ldr	r3, [sp, #28]
90023b5a:	2b00      	cmp	r3, #0
90023b5c:	f340 8166 	ble.w	90023e2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90023b60:	ea5f 4c24 	movs.w	ip, r4, asr #16
90023b64:	ea4f 4326 	mov.w	r3, r6, asr #16
90023b68:	d406      	bmi.n	90023b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023b6a:	4584      	cmp	ip, r0
90023b6c:	da04      	bge.n	90023b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023b6e:	2b00      	cmp	r3, #0
90023b70:	db02      	blt.n	90023b78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
90023b72:	42bb      	cmp	r3, r7
90023b74:	f2c0 815b 	blt.w	90023e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
90023b78:	f11c 0c01 	adds.w	ip, ip, #1
90023b7c:	f100 814b 	bmi.w	90023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023b80:	4561      	cmp	r1, ip
90023b82:	f2c0 8148 	blt.w	90023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023b86:	3301      	adds	r3, #1
90023b88:	f100 8145 	bmi.w	90023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023b8c:	429a      	cmp	r2, r3
90023b8e:	f2c0 8142 	blt.w	90023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
90023b92:	9b07      	ldr	r3, [sp, #28]
90023b94:	9f0a      	ldr	r7, [sp, #40]	; 0x28
90023b96:	9317      	str	r3, [sp, #92]	; 0x5c
90023b98:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023b9a:	2b00      	cmp	r3, #0
90023b9c:	f340 8165 	ble.w	90023e6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90023ba0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
90023ba2:	ea4f 4c26 	mov.w	ip, r6, asr #16
90023ba6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023ba8:	f3c4 3103 	ubfx	r1, r4, #12, #4
90023bac:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90023bb0:	1422      	asrs	r2, r4, #16
90023bb2:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023bb6:	689b      	ldr	r3, [r3, #8]
90023bb8:	f100 81d5 	bmi.w	90023f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023bbc:	f103 38ff 	add.w	r8, r3, #4294967295
90023bc0:	4542      	cmp	r2, r8
90023bc2:	f280 81d0 	bge.w	90023f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023bc6:	f1bc 0f00 	cmp.w	ip, #0
90023bca:	f2c0 81cc 	blt.w	90023f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023bce:	f10e 38ff 	add.w	r8, lr, #4294967295
90023bd2:	45c4      	cmp	ip, r8
90023bd4:	f280 81c7 	bge.w	90023f66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90023bd8:	b21b      	sxth	r3, r3
90023bda:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023bdc:	fb0c 2203 	mla	r2, ip, r3, r2
90023be0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90023be4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90023be8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90023bec:	2900      	cmp	r1, #0
90023bee:	f000 8182 	beq.w	90023ef6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
90023bf2:	f8d8 5004 	ldr.w	r5, [r8, #4]
90023bf6:	950b      	str	r5, [sp, #44]	; 0x2c
90023bf8:	0e2d      	lsrs	r5, r5, #24
90023bfa:	9512      	str	r5, [sp, #72]	; 0x48
90023bfc:	b180      	cbz	r0, 90023c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023bfe:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
90023c02:	3b01      	subs	r3, #1
90023c04:	009b      	lsls	r3, r3, #2
90023c06:	3304      	adds	r3, #4
90023c08:	eb08 0c03 	add.w	ip, r8, r3
90023c0c:	f858 3003 	ldr.w	r3, [r8, r3]
90023c10:	9308      	str	r3, [sp, #32]
90023c12:	0e1b      	lsrs	r3, r3, #24
90023c14:	9310      	str	r3, [sp, #64]	; 0x40
90023c16:	f8dc 3004 	ldr.w	r3, [ip, #4]
90023c1a:	930c      	str	r3, [sp, #48]	; 0x30
90023c1c:	0e1b      	lsrs	r3, r3, #24
90023c1e:	9313      	str	r3, [sp, #76]	; 0x4c
90023c20:	b289      	uxth	r1, r1
90023c22:	9b12      	ldr	r3, [sp, #72]	; 0x48
90023c24:	b280      	uxth	r0, r0
90023c26:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023c28:	fb01 f900 	mul.w	r9, r1, r0
90023c2c:	0109      	lsls	r1, r1, #4
90023c2e:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90023c32:	eba1 0809 	sub.w	r8, r1, r9
90023c36:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
90023c3a:	b280      	uxth	r0, r0
90023c3c:	fa1f f888 	uxth.w	r8, r8
90023c40:	1a09      	subs	r1, r1, r0
90023c42:	fb08 f303 	mul.w	r3, r8, r3
90023c46:	b289      	uxth	r1, r1
90023c48:	fb01 330e 	mla	r3, r1, lr, r3
90023c4c:	fb00 3305 	mla	r3, r0, r5, r3
90023c50:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023c52:	fb09 3305 	mla	r3, r9, r5, r3
90023c56:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023c5a:	2b00      	cmp	r3, #0
90023c5c:	f000 80d2 	beq.w	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023c60:	f1be 0fff 	cmp.w	lr, #255	; 0xff
90023c64:	d01b      	beq.n	90023c9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
90023c66:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
90023c6a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023c6e:	fb0e fa0a 	mul.w	sl, lr, sl
90023c72:	fb0e fe02 	mul.w	lr, lr, r2
90023c76:	ea4f 221a 	mov.w	r2, sl, lsr #8
90023c7a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90023c7e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
90023c82:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023c86:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90023c8a:	4452      	add	r2, sl
90023c8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023c90:	0a12      	lsrs	r2, r2, #8
90023c92:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
90023c96:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
90023c9a:	ea42 020c 	orr.w	r2, r2, ip
90023c9e:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023ca0:	2dff      	cmp	r5, #255	; 0xff
90023ca2:	d021      	beq.n	90023ce8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
90023ca4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023ca6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023caa:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023cac:	fb05 fb0b 	mul.w	fp, r5, fp
90023cb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023cb2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023cb6:	9d12      	ldr	r5, [sp, #72]	; 0x48
90023cb8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023cbc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023cc0:	fb05 fa0a 	mul.w	sl, r5, sl
90023cc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023cc8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023ccc:	44de      	add	lr, fp
90023cce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023cd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023cd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023cda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023cde:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023ce2:	ea4e 050a 	orr.w	r5, lr, sl
90023ce6:	950b      	str	r5, [sp, #44]	; 0x2c
90023ce8:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023cea:	2dff      	cmp	r5, #255	; 0xff
90023cec:	d021      	beq.n	90023d32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90023cee:	9d08      	ldr	r5, [sp, #32]
90023cf0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023cf4:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023cf6:	fb05 fb0b 	mul.w	fp, r5, fp
90023cfa:	9d08      	ldr	r5, [sp, #32]
90023cfc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023d00:	9d10      	ldr	r5, [sp, #64]	; 0x40
90023d02:	fb05 fa0e 	mul.w	sl, r5, lr
90023d06:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023d0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023d0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d12:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023d16:	44de      	add	lr, fp
90023d18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023d1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d28:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023d2c:	ea4e 050a 	orr.w	r5, lr, sl
90023d30:	9508      	str	r5, [sp, #32]
90023d32:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023d34:	2dff      	cmp	r5, #255	; 0xff
90023d36:	d021      	beq.n	90023d7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90023d38:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023d3a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
90023d3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023d40:	fb05 fb0b 	mul.w	fp, r5, fp
90023d44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023d46:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90023d4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
90023d4c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023d50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
90023d54:	fb05 fa0a 	mul.w	sl, r5, sl
90023d58:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d5c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
90023d60:	44de      	add	lr, fp
90023d62:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023d66:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023d6a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023d6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
90023d72:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90023d76:	ea4e 050a 	orr.w	r5, lr, sl
90023d7a:	950c      	str	r5, [sp, #48]	; 0x30
90023d7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023d7e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
90023d82:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
90023d86:	2bff      	cmp	r3, #255	; 0xff
90023d88:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90023d8c:	9d08      	ldr	r5, [sp, #32]
90023d8e:	fb08 fc0c 	mul.w	ip, r8, ip
90023d92:	fb01 cc0e 	mla	ip, r1, lr, ip
90023d96:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023d9a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90023d9c:	fb00 cc0e 	mla	ip, r0, lr, ip
90023da0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
90023da4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
90023da6:	fb09 cc0e 	mla	ip, r9, lr, ip
90023daa:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
90023dae:	fb08 f80e 	mul.w	r8, r8, lr
90023db2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023db6:	fb01 8202 	mla	r2, r1, r2, r8
90023dba:	9908      	ldr	r1, [sp, #32]
90023dbc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90023dc0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
90023dc4:	990c      	ldr	r1, [sp, #48]	; 0x30
90023dc6:	fb00 220a 	mla	r2, r0, sl, r2
90023dca:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
90023dce:	fb09 2900 	mla	r9, r9, r0, r2
90023dd2:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023dd6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
90023dda:	ea4c 0c09 	orr.w	ip, ip, r9
90023dde:	ea4f 221c 	mov.w	r2, ip, lsr #8
90023de2:	f040 8091 	bne.w	90023f08 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
90023de6:	ea4f 135c 	mov.w	r3, ip, lsr #5
90023dea:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
90023dee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
90023df2:	f022 0207 	bic.w	r2, r2, #7
90023df6:	431a      	orrs	r2, r3
90023df8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90023dfc:	ea4c 0c02 	orr.w	ip, ip, r2
90023e00:	f8a7 c000 	strh.w	ip, [r7]
90023e04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023e06:	3702      	adds	r7, #2
90023e08:	441c      	add	r4, r3
90023e0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023e0c:	441e      	add	r6, r3
90023e0e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
90023e10:	3b01      	subs	r3, #1
90023e12:	9317      	str	r3, [sp, #92]	; 0x5c
90023e14:	e6c0      	b.n	90023b98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
90023e16:	9b27      	ldr	r3, [sp, #156]	; 0x9c
90023e18:	441c      	add	r4, r3
90023e1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90023e1c:	441e      	add	r6, r3
90023e1e:	9b07      	ldr	r3, [sp, #28]
90023e20:	3b01      	subs	r3, #1
90023e22:	9307      	str	r3, [sp, #28]
90023e24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023e26:	3302      	adds	r3, #2
90023e28:	930a      	str	r3, [sp, #40]	; 0x28
90023e2a:	e695      	b.n	90023b58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023e2c:	d024      	beq.n	90023e78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90023e2e:	9b07      	ldr	r3, [sp, #28]
90023e30:	9827      	ldr	r0, [sp, #156]	; 0x9c
90023e32:	3b01      	subs	r3, #1
90023e34:	fb00 4003 	mla	r0, r0, r3, r4
90023e38:	1400      	asrs	r0, r0, #16
90023e3a:	f53f aeaa 	bmi.w	90023b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023e3e:	3901      	subs	r1, #1
90023e40:	4288      	cmp	r0, r1
90023e42:	f6bf aea6 	bge.w	90023b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023e46:	9928      	ldr	r1, [sp, #160]	; 0xa0
90023e48:	fb01 6303 	mla	r3, r1, r3, r6
90023e4c:	141b      	asrs	r3, r3, #16
90023e4e:	f53f aea0 	bmi.w	90023b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023e52:	3a01      	subs	r2, #1
90023e54:	4293      	cmp	r3, r2
90023e56:	f6bf ae9c 	bge.w	90023b92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90023e5a:	f8dd b01c 	ldr.w	fp, [sp, #28]
90023e5e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
90023e62:	f1bb 0f00 	cmp.w	fp, #0
90023e66:	f300 809a 	bgt.w	90023f9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90023e6a:	9b07      	ldr	r3, [sp, #28]
90023e6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90023e70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
90023e72:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90023e76:	930a      	str	r3, [sp, #40]	; 0x28
90023e78:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023e7a:	2b00      	cmp	r3, #0
90023e7c:	f340 81ec 	ble.w	90024258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90023e80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90023e84:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023e86:	ee30 0a04 	vadd.f32	s0, s0, s8
90023e8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023e8e:	eef0 6a62 	vmov.f32	s13, s5
90023e92:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023e96:	ee31 1a05 	vadd.f32	s2, s2, s10
90023e9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023e9e:	ee16 4a90 	vmov	r4, s13
90023ea2:	eef0 6a43 	vmov.f32	s13, s6
90023ea6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023eaa:	ee16 6a90 	vmov	r6, s13
90023eae:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023eb2:	ee61 7a27 	vmul.f32	s15, s2, s15
90023eb6:	ee77 2a62 	vsub.f32	s5, s14, s5
90023eba:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023ebe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023ec2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023ec6:	ee12 2a90 	vmov	r2, s5
90023eca:	eef0 2a47 	vmov.f32	s5, s14
90023ece:	fb92 f3f3 	sdiv	r3, r2, r3
90023ed2:	ee13 2a10 	vmov	r2, s6
90023ed6:	9327      	str	r3, [sp, #156]	; 0x9c
90023ed8:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023eda:	eeb0 3a67 	vmov.f32	s6, s15
90023ede:	fb92 f3f3 	sdiv	r3, r2, r3
90023ee2:	9328      	str	r3, [sp, #160]	; 0xa0
90023ee4:	9b16      	ldr	r3, [sp, #88]	; 0x58
90023ee6:	9a18      	ldr	r2, [sp, #96]	; 0x60
90023ee8:	3b01      	subs	r3, #1
90023eea:	9316      	str	r3, [sp, #88]	; 0x58
90023eec:	9b24      	ldr	r3, [sp, #144]	; 0x90
90023eee:	bf08      	it	eq
90023ef0:	4613      	moveq	r3, r2
90023ef2:	9307      	str	r3, [sp, #28]
90023ef4:	e622      	b.n	90023b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
90023ef6:	2800      	cmp	r0, #0
90023ef8:	f43f ae92 	beq.w	90023c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023efc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90023f00:	9308      	str	r3, [sp, #32]
90023f02:	0e1b      	lsrs	r3, r3, #24
90023f04:	9310      	str	r3, [sp, #64]	; 0x40
90023f06:	e68b      	b.n	90023c20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90023f08:	8839      	ldrh	r1, [r7, #0]
90023f0a:	43db      	mvns	r3, r3
90023f0c:	4dd4      	ldr	r5, [pc, #848]	; (90024260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90023f0e:	ea4f 2e21 	mov.w	lr, r1, asr #8
90023f12:	fa5f f883 	uxtb.w	r8, r3
90023f16:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
90023f1a:	10c8      	asrs	r0, r1, #3
90023f1c:	00cb      	lsls	r3, r1, #3
90023f1e:	fb0e fe08 	mul.w	lr, lr, r8
90023f22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90023f26:	b2db      	uxtb	r3, r3
90023f28:	f10e 0101 	add.w	r1, lr, #1
90023f2c:	fb00 f008 	mul.w	r0, r0, r8
90023f30:	fb03 f308 	mul.w	r3, r3, r8
90023f34:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90023f38:	ea4f 411c 	mov.w	r1, ip, lsr #16
90023f3c:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90023f40:	f100 0e01 	add.w	lr, r0, #1
90023f44:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90023f48:	b2c9      	uxtb	r1, r1
90023f4a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90023f4e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
90023f52:	00d2      	lsls	r2, r2, #3
90023f54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90023f58:	430a      	orrs	r2, r1
90023f5a:	1c59      	adds	r1, r3, #1
90023f5c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90023f60:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
90023f64:	e748      	b.n	90023df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90023f66:	f112 0801 	adds.w	r8, r2, #1
90023f6a:	f53f af4b 	bmi.w	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f6e:	4543      	cmp	r3, r8
90023f70:	f6ff af48 	blt.w	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f74:	f11c 0801 	adds.w	r8, ip, #1
90023f78:	f53f af44 	bmi.w	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f7c:	45c6      	cmp	lr, r8
90023f7e:	f6ff af41 	blt.w	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f82:	b21b      	sxth	r3, r3
90023f84:	e9cd 2c01 	strd	r2, ip, [sp, #4]
90023f88:	fa0f f28e 	sxth.w	r2, lr
90023f8c:	e9cd 1003 	strd	r1, r0, [sp, #12]
90023f90:	9200      	str	r2, [sp, #0]
90023f92:	4639      	mov	r1, r7
90023f94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
90023f96:	9819      	ldr	r0, [sp, #100]	; 0x64
90023f98:	f7ff fc88 	bl	900238ac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
90023f9c:	e732      	b.n	90023e04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023f9e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
90023fa0:	1421      	asrs	r1, r4, #16
90023fa2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
90023fa4:	f3c4 3203 	ubfx	r2, r4, #12, #4
90023fa8:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
90023fac:	1433      	asrs	r3, r6, #16
90023fae:	f3c6 3003 	ubfx	r0, r6, #12, #4
90023fb2:	fb07 1303 	mla	r3, r7, r3, r1
90023fb6:	990f      	ldr	r1, [sp, #60]	; 0x3c
90023fb8:	eb01 0183 	add.w	r1, r1, r3, lsl #2
90023fbc:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90023fc0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023fc4:	2a00      	cmp	r2, #0
90023fc6:	f000 8108 	beq.w	900241da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90023fca:	684d      	ldr	r5, [r1, #4]
90023fcc:	950d      	str	r5, [sp, #52]	; 0x34
90023fce:	0e2d      	lsrs	r5, r5, #24
90023fd0:	9514      	str	r5, [sp, #80]	; 0x50
90023fd2:	b178      	cbz	r0, 90023ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90023fd4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
90023fd8:	3f01      	subs	r7, #1
90023fda:	00bf      	lsls	r7, r7, #2
90023fdc:	3704      	adds	r7, #4
90023fde:	eb01 0e07 	add.w	lr, r1, r7
90023fe2:	59c9      	ldr	r1, [r1, r7]
90023fe4:	9109      	str	r1, [sp, #36]	; 0x24
90023fe6:	0e09      	lsrs	r1, r1, #24
90023fe8:	9111      	str	r1, [sp, #68]	; 0x44
90023fea:	f8de 1004 	ldr.w	r1, [lr, #4]
90023fee:	910e      	str	r1, [sp, #56]	; 0x38
90023ff0:	0e09      	lsrs	r1, r1, #24
90023ff2:	9115      	str	r1, [sp, #84]	; 0x54
90023ff4:	b292      	uxth	r2, r2
90023ff6:	9d11      	ldr	r5, [sp, #68]	; 0x44
90023ff8:	b280      	uxth	r0, r0
90023ffa:	fb02 f900 	mul.w	r9, r2, r0
90023ffe:	0112      	lsls	r2, r2, #4
90024000:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
90024004:	eba2 0e09 	sub.w	lr, r2, r9
90024008:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
9002400c:	9a14      	ldr	r2, [sp, #80]	; 0x50
9002400e:	b280      	uxth	r0, r0
90024010:	fa1f fe8e 	uxth.w	lr, lr
90024014:	1a09      	subs	r1, r1, r0
90024016:	fb0e f202 	mul.w	r2, lr, r2
9002401a:	b289      	uxth	r1, r1
9002401c:	fb01 220c 	mla	r2, r1, ip, r2
90024020:	fb00 2205 	mla	r2, r0, r5, r2
90024024:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024026:	fb09 2205 	mla	r2, r9, r5, r2
9002402a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002402e:	2a00      	cmp	r2, #0
90024030:	f000 80ca 	beq.w	900241c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90024034:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
90024038:	d019      	beq.n	9002406e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
9002403a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
9002403e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024042:	fb0c fa0a 	mul.w	sl, ip, sl
90024046:	fb0c fc03 	mul.w	ip, ip, r3
9002404a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002404e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
90024052:	f50c 7780 	add.w	r7, ip, #256	; 0x100
90024056:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002405a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002405e:	4453      	add	r3, sl
90024060:	0a3f      	lsrs	r7, r7, #8
90024062:	0a1b      	lsrs	r3, r3, #8
90024064:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
90024068:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
9002406c:	433b      	orrs	r3, r7
9002406e:	9d14      	ldr	r5, [sp, #80]	; 0x50
90024070:	2dff      	cmp	r5, #255	; 0xff
90024072:	d020      	beq.n	900240b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
90024074:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024076:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002407a:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002407c:	436f      	muls	r7, r5
9002407e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024080:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024084:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024088:	9d14      	ldr	r5, [sp, #80]	; 0x50
9002408a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002408e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024092:	fb05 fa0a 	mul.w	sl, r5, sl
90024096:	44bc      	add	ip, r7
90024098:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002409c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900240a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900240a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900240ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900240b0:	ea4c 050a 	orr.w	r5, ip, sl
900240b4:	950d      	str	r5, [sp, #52]	; 0x34
900240b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
900240b8:	2dff      	cmp	r5, #255	; 0xff
900240ba:	d020      	beq.n	900240fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900240bc:	9d09      	ldr	r5, [sp, #36]	; 0x24
900240be:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
900240c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
900240c4:	436f      	muls	r7, r5
900240c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
900240c8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
900240cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
900240ce:	fb05 fa0c 	mul.w	sl, r5, ip
900240d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900240d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
900240da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900240de:	44bc      	add	ip, r7
900240e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
900240e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900240e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900240ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900240f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
900240f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
900240f8:	ea4c 050a 	orr.w	r5, ip, sl
900240fc:	9509      	str	r5, [sp, #36]	; 0x24
900240fe:	9d15      	ldr	r5, [sp, #84]	; 0x54
90024100:	2dff      	cmp	r5, #255	; 0xff
90024102:	d020      	beq.n	90024146 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90024104:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024106:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
9002410a:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002410c:	436f      	muls	r7, r5
9002410e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024110:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90024114:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
90024118:	9d15      	ldr	r5, [sp, #84]	; 0x54
9002411a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
9002411e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024122:	fb05 fa0a 	mul.w	sl, r5, sl
90024126:	44bc      	add	ip, r7
90024128:	f50a 7780 	add.w	r7, sl, #256	; 0x100
9002412c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024130:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90024134:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
90024138:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002413c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
90024140:	ea4c 050a 	orr.w	r5, ip, sl
90024144:	950e      	str	r5, [sp, #56]	; 0x38
90024146:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024148:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
9002414c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
90024150:	2aff      	cmp	r2, #255	; 0xff
90024152:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
90024156:	9d09      	ldr	r5, [sp, #36]	; 0x24
90024158:	fb0e f707 	mul.w	r7, lr, r7
9002415c:	fb01 770c 	mla	r7, r1, ip, r7
90024160:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
90024164:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024166:	fb00 770c 	mla	r7, r0, ip, r7
9002416a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
9002416e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
90024170:	fb09 770c 	mla	r7, r9, ip, r7
90024174:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
90024178:	fb0e fe0c 	mul.w	lr, lr, ip
9002417c:	ea4f 2717 	mov.w	r7, r7, lsr #8
90024180:	fb01 e303 	mla	r3, r1, r3, lr
90024184:	9909      	ldr	r1, [sp, #36]	; 0x24
90024186:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
9002418a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
9002418e:	990e      	ldr	r1, [sp, #56]	; 0x38
90024190:	fb00 330a 	mla	r3, r0, sl, r3
90024194:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
90024198:	fb09 3c0c 	mla	ip, r9, ip, r3
9002419c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900241a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
900241a4:	ea47 070c 	orr.w	r7, r7, ip
900241a8:	ea4f 2317 	mov.w	r3, r7, lsr #8
900241ac:	d11e      	bne.n	900241ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
900241ae:	097a      	lsrs	r2, r7, #5
900241b0:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
900241b4:	f3c7 07c4 	ubfx	r7, r7, #3, #5
900241b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900241bc:	f023 0307 	bic.w	r3, r3, #7
900241c0:	4313      	orrs	r3, r2
900241c2:	431f      	orrs	r7, r3
900241c4:	f8a8 7000 	strh.w	r7, [r8]
900241c8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
900241ca:	f108 0802 	add.w	r8, r8, #2
900241ce:	f10b 3bff 	add.w	fp, fp, #4294967295
900241d2:	441c      	add	r4, r3
900241d4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900241d6:	441e      	add	r6, r3
900241d8:	e643      	b.n	90023e62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900241da:	2800      	cmp	r0, #0
900241dc:	f43f af0a 	beq.w	90023ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900241e0:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
900241e4:	9109      	str	r1, [sp, #36]	; 0x24
900241e6:	0e09      	lsrs	r1, r1, #24
900241e8:	9111      	str	r1, [sp, #68]	; 0x44
900241ea:	e703      	b.n	90023ff4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
900241ec:	f8b8 1000 	ldrh.w	r1, [r8]
900241f0:	43d2      	mvns	r2, r2
900241f2:	ea4f 2c21 	mov.w	ip, r1, asr #8
900241f6:	fa5f fe82 	uxtb.w	lr, r2
900241fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
900241fe:	10c8      	asrs	r0, r1, #3
90024200:	00ca      	lsls	r2, r1, #3
90024202:	fb0c fc0e 	mul.w	ip, ip, lr
90024206:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
9002420a:	b2d2      	uxtb	r2, r2
9002420c:	f10c 0101 	add.w	r1, ip, #1
90024210:	fb00 f00e 	mul.w	r0, r0, lr
90024214:	fb02 f20e 	mul.w	r2, r2, lr
90024218:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002421c:	0c39      	lsrs	r1, r7, #16
9002421e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024222:	490f      	ldr	r1, [pc, #60]	; (90024260 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90024224:	fa5f fc8c 	uxtb.w	ip, ip
90024228:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
9002422c:	1c41      	adds	r1, r0, #1
9002422e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024232:	1c51      	adds	r1, r2, #1
90024234:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024238:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9002423c:	00c0      	lsls	r0, r0, #3
9002423e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90024242:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024246:	f3c7 07c4 	ubfx	r7, r7, #3, #5
9002424a:	ea4c 0c00 	orr.w	ip, ip, r0
9002424e:	ea47 0c0c 	orr.w	ip, r7, ip
90024252:	f8a8 c000 	strh.w	ip, [r8]
90024256:	e7b7      	b.n	900241c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90024258:	b01b      	add	sp, #108	; 0x6c
9002425a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002425e:	bf00      	nop
90024260:	fffff800 	.word	0xfffff800

90024264 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90024264:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024268:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002426c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90024270:	2d00      	cmp	r5, #0
90024272:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
90024276:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
9002427a:	fb05 0e03 	mla	lr, r5, r3, r0
9002427e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
90024282:	f2c0 808c 	blt.w	9002439e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90024286:	45a9      	cmp	r9, r5
90024288:	f340 8089 	ble.w	9002439e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
9002428c:	2800      	cmp	r0, #0
9002428e:	f2c0 8084 	blt.w	9002439a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024292:	4580      	cmp	r8, r0
90024294:	f340 8081 	ble.w	9002439a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90024298:	ea4f 045e 	mov.w	r4, lr, lsr #1
9002429c:	f01e 0f01 	tst.w	lr, #1
900242a0:	5d16      	ldrb	r6, [r2, r4]
900242a2:	bf0c      	ite	eq
900242a4:	f006 060f 	andeq.w	r6, r6, #15
900242a8:	1136      	asrne	r6, r6, #4
900242aa:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900242ae:	b2f6      	uxtb	r6, r6
900242b0:	1c44      	adds	r4, r0, #1
900242b2:	d477      	bmi.n	900243a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900242b4:	45a0      	cmp	r8, r4
900242b6:	dd75      	ble.n	900243a4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
900242b8:	2f00      	cmp	r7, #0
900242ba:	d075      	beq.n	900243a8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
900242bc:	f10e 0a01 	add.w	sl, lr, #1
900242c0:	ea4f 045a 	mov.w	r4, sl, lsr #1
900242c4:	f01a 0f01 	tst.w	sl, #1
900242c8:	5d14      	ldrb	r4, [r2, r4]
900242ca:	bf0c      	ite	eq
900242cc:	f004 040f 	andeq.w	r4, r4, #15
900242d0:	1124      	asrne	r4, r4, #4
900242d2:	eb04 1404 	add.w	r4, r4, r4, lsl #4
900242d6:	b2e4      	uxtb	r4, r4
900242d8:	3501      	adds	r5, #1
900242da:	d469      	bmi.n	900243b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900242dc:	45a9      	cmp	r9, r5
900242de:	dd67      	ble.n	900243b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
900242e0:	f1bc 0f00 	cmp.w	ip, #0
900242e4:	d067      	beq.n	900243b6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
900242e6:	2800      	cmp	r0, #0
900242e8:	db60      	blt.n	900243ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900242ea:	4580      	cmp	r8, r0
900242ec:	dd5e      	ble.n	900243ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
900242ee:	eb03 090e 	add.w	r9, r3, lr
900242f2:	ea4f 0559 	mov.w	r5, r9, lsr #1
900242f6:	f019 0f01 	tst.w	r9, #1
900242fa:	5d55      	ldrb	r5, [r2, r5]
900242fc:	bf0c      	ite	eq
900242fe:	f005 050f 	andeq.w	r5, r5, #15
90024302:	112d      	asrne	r5, r5, #4
90024304:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024308:	b2ed      	uxtb	r5, r5
9002430a:	3001      	adds	r0, #1
9002430c:	d456      	bmi.n	900243bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
9002430e:	4580      	cmp	r8, r0
90024310:	dd54      	ble.n	900243bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90024312:	2f00      	cmp	r7, #0
90024314:	d054      	beq.n	900243c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90024316:	3301      	adds	r3, #1
90024318:	449e      	add	lr, r3
9002431a:	ea4f 035e 	mov.w	r3, lr, lsr #1
9002431e:	f01e 0f01 	tst.w	lr, #1
90024322:	5cd0      	ldrb	r0, [r2, r3]
90024324:	bf0c      	ite	eq
90024326:	f000 000f 	andeq.w	r0, r0, #15
9002432a:	1100      	asrne	r0, r0, #4
9002432c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024330:	b2c3      	uxtb	r3, r0
90024332:	b2ba      	uxth	r2, r7
90024334:	fa1f fc8c 	uxth.w	ip, ip
90024338:	fb02 f00c 	mul.w	r0, r2, ip
9002433c:	0112      	lsls	r2, r2, #4
9002433e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024342:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90024346:	1a12      	subs	r2, r2, r0
90024348:	fa1f fc8c 	uxth.w	ip, ip
9002434c:	b292      	uxth	r2, r2
9002434e:	eba7 070c 	sub.w	r7, r7, ip
90024352:	4362      	muls	r2, r4
90024354:	b2bf      	uxth	r7, r7
90024356:	fb06 2207 	mla	r2, r6, r7, r2
9002435a:	fb0c 2505 	mla	r5, ip, r5, r2
9002435e:	fb00 5303 	mla	r3, r0, r3, r5
90024362:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024366:	b1b3      	cbz	r3, 90024396 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90024368:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
9002436c:	435a      	muls	r2, r3
9002436e:	1c53      	adds	r3, r2, #1
90024370:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024374:	4a2d      	ldr	r2, [pc, #180]	; (9002442c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90024376:	121b      	asrs	r3, r3, #8
90024378:	6812      	ldr	r2, [r2, #0]
9002437a:	2bff      	cmp	r3, #255	; 0xff
9002437c:	ea4f 2612 	mov.w	r6, r2, lsr #8
90024380:	d120      	bne.n	900243c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90024382:	0950      	lsrs	r0, r2, #5
90024384:	4b2a      	ldr	r3, [pc, #168]	; (90024430 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90024386:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002438a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
9002438e:	4033      	ands	r3, r6
90024390:	4318      	orrs	r0, r3
90024392:	4302      	orrs	r2, r0
90024394:	800a      	strh	r2, [r1, #0]
90024396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002439a:	2600      	movs	r6, #0
9002439c:	e788      	b.n	900242b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
9002439e:	2400      	movs	r4, #0
900243a0:	4626      	mov	r6, r4
900243a2:	e799      	b.n	900242d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900243a4:	2400      	movs	r4, #0
900243a6:	e797      	b.n	900242d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900243a8:	463c      	mov	r4, r7
900243aa:	e795      	b.n	900242d8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
900243ac:	2500      	movs	r5, #0
900243ae:	e7ac      	b.n	9002430a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
900243b0:	2300      	movs	r3, #0
900243b2:	461d      	mov	r5, r3
900243b4:	e7bd      	b.n	90024332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900243b6:	4663      	mov	r3, ip
900243b8:	4665      	mov	r5, ip
900243ba:	e7ba      	b.n	90024332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900243bc:	2300      	movs	r3, #0
900243be:	e7b8      	b.n	90024332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900243c0:	463b      	mov	r3, r7
900243c2:	e7b6      	b.n	90024332 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
900243c4:	880d      	ldrh	r5, [r1, #0]
900243c6:	b29f      	uxth	r7, r3
900243c8:	f3c2 4007 	ubfx	r0, r2, #16, #8
900243cc:	43db      	mvns	r3, r3
900243ce:	122c      	asrs	r4, r5, #8
900243d0:	fb10 f007 	smulbb	r0, r0, r7
900243d4:	b2db      	uxtb	r3, r3
900243d6:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
900243da:	b2f6      	uxtb	r6, r6
900243dc:	b2d2      	uxtb	r2, r2
900243de:	fb04 0403 	mla	r4, r4, r3, r0
900243e2:	10e8      	asrs	r0, r5, #3
900243e4:	fb12 f207 	smulbb	r2, r2, r7
900243e8:	00ed      	lsls	r5, r5, #3
900243ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
900243ee:	b2a4      	uxth	r4, r4
900243f0:	fb16 f607 	smulbb	r6, r6, r7
900243f4:	b2ed      	uxtb	r5, r5
900243f6:	fb00 6603 	mla	r6, r0, r3, r6
900243fa:	fb05 2303 	mla	r3, r5, r3, r2
900243fe:	b2b0      	uxth	r0, r6
90024400:	b29a      	uxth	r2, r3
90024402:	1c63      	adds	r3, r4, #1
90024404:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024408:	1c53      	adds	r3, r2, #1
9002440a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002440e:	1c42      	adds	r2, r0, #1
90024410:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90024414:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024418:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002441c:	0940      	lsrs	r0, r0, #5
9002441e:	4323      	orrs	r3, r4
90024420:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024424:	4303      	orrs	r3, r0
90024426:	800b      	strh	r3, [r1, #0]
90024428:	e7b5      	b.n	90024396 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
9002442a:	bf00      	nop
9002442c:	2402358c 	.word	0x2402358c
90024430:	00fff800 	.word	0x00fff800

90024434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024438:	b097      	sub	sp, #92	; 0x5c
9002443a:	9214      	str	r2, [sp, #80]	; 0x50
9002443c:	9309      	str	r3, [sp, #36]	; 0x24
9002443e:	9a25      	ldr	r2, [sp, #148]	; 0x94
90024440:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
90024444:	9015      	str	r0, [sp, #84]	; 0x54
90024446:	910d      	str	r1, [sp, #52]	; 0x34
90024448:	6850      	ldr	r0, [r2, #4]
9002444a:	930f      	str	r3, [sp, #60]	; 0x3c
9002444c:	6812      	ldr	r2, [r2, #0]
9002444e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
90024452:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
90024456:	fb00 1303 	mla	r3, r0, r3, r1
9002445a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002445e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
90024460:	689b      	ldr	r3, [r3, #8]
90024462:	3301      	adds	r3, #1
90024464:	f023 0301 	bic.w	r3, r3, #1
90024468:	930a      	str	r3, [sp, #40]	; 0x28
9002446a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002446c:	681f      	ldr	r7, [r3, #0]
9002446e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
90024470:	2b00      	cmp	r3, #0
90024472:	dc03      	bgt.n	9002447c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024474:	9b14      	ldr	r3, [sp, #80]	; 0x50
90024476:	2b00      	cmp	r3, #0
90024478:	f340 8289 	ble.w	9002498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
9002447c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
9002447e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024482:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024486:	1e48      	subs	r0, r1, #1
90024488:	f102 3cff 	add.w	ip, r2, #4294967295
9002448c:	9b09      	ldr	r3, [sp, #36]	; 0x24
9002448e:	2b00      	cmp	r3, #0
90024490:	f340 80c5 	ble.w	9002461e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90024494:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024498:	ea4f 4326 	mov.w	r3, r6, asr #16
9002449c:	d406      	bmi.n	900244ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9002449e:	4586      	cmp	lr, r0
900244a0:	da04      	bge.n	900244ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900244a2:	2b00      	cmp	r3, #0
900244a4:	db02      	blt.n	900244ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900244a6:	4563      	cmp	r3, ip
900244a8:	f2c0 80ba 	blt.w	90024620 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
900244ac:	f11e 0e01 	adds.w	lr, lr, #1
900244b0:	f100 80ab 	bmi.w	9002460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900244b4:	4571      	cmp	r1, lr
900244b6:	f2c0 80a8 	blt.w	9002460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900244ba:	3301      	adds	r3, #1
900244bc:	f100 80a5 	bmi.w	9002460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900244c0:	429a      	cmp	r2, r3
900244c2:	f2c0 80a2 	blt.w	9002460a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
900244c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
900244c8:	46c8      	mov	r8, r9
900244ca:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
900244ce:	930e      	str	r3, [sp, #56]	; 0x38
900244d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
900244d2:	2b00      	cmp	r3, #0
900244d4:	f340 80c4 	ble.w	90024660 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
900244d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
900244da:	1430      	asrs	r0, r6, #16
900244dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
900244e0:	f3c6 3103 	ubfx	r1, r6, #12, #4
900244e4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
900244e8:	1423      	asrs	r3, r4, #16
900244ea:	f100 814f 	bmi.w	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900244ee:	f10c 3bff 	add.w	fp, ip, #4294967295
900244f2:	455b      	cmp	r3, fp
900244f4:	f280 814a 	bge.w	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900244f8:	2800      	cmp	r0, #0
900244fa:	f2c0 8147 	blt.w	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900244fe:	f10e 3bff 	add.w	fp, lr, #4294967295
90024502:	4558      	cmp	r0, fp
90024504:	f280 8142 	bge.w	9002478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90024508:	9d0a      	ldr	r5, [sp, #40]	; 0x28
9002450a:	fb00 3305 	mla	r3, r0, r5, r3
9002450e:	0858      	lsrs	r0, r3, #1
90024510:	07dd      	lsls	r5, r3, #31
90024512:	f817 c000 	ldrb.w	ip, [r7, r0]
90024516:	bf54      	ite	pl
90024518:	f00c 0c0f 	andpl.w	ip, ip, #15
9002451c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024520:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024524:	fa5f fc8c 	uxtb.w	ip, ip
90024528:	2a00      	cmp	r2, #0
9002452a:	f000 80dd 	beq.w	900246e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
9002452e:	1c58      	adds	r0, r3, #1
90024530:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024534:	07c0      	lsls	r0, r0, #31
90024536:	f817 e00e 	ldrb.w	lr, [r7, lr]
9002453a:	bf54      	ite	pl
9002453c:	f00e 0e0f 	andpl.w	lr, lr, #15
90024540:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024544:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024548:	fa5f f08e 	uxtb.w	r0, lr
9002454c:	9010      	str	r0, [sp, #64]	; 0x40
9002454e:	b1d9      	cbz	r1, 90024588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90024550:	4453      	add	r3, sl
90024552:	0858      	lsrs	r0, r3, #1
90024554:	07dd      	lsls	r5, r3, #31
90024556:	f103 0301 	add.w	r3, r3, #1
9002455a:	5c38      	ldrb	r0, [r7, r0]
9002455c:	bf54      	ite	pl
9002455e:	f000 000f 	andpl.w	r0, r0, #15
90024562:	1100      	asrmi	r0, r0, #4
90024564:	07dd      	lsls	r5, r3, #31
90024566:	eb00 1000 	add.w	r0, r0, r0, lsl #4
9002456a:	b2c0      	uxtb	r0, r0
9002456c:	900b      	str	r0, [sp, #44]	; 0x2c
9002456e:	ea4f 0053 	mov.w	r0, r3, lsr #1
90024572:	f817 e000 	ldrb.w	lr, [r7, r0]
90024576:	bf54      	ite	pl
90024578:	f00e 030f 	andpl.w	r3, lr, #15
9002457c:	ea4f 132e 	movmi.w	r3, lr, asr #4
90024580:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024584:	b2db      	uxtb	r3, r3
90024586:	9311      	str	r3, [sp, #68]	; 0x44
90024588:	b292      	uxth	r2, r2
9002458a:	9d10      	ldr	r5, [sp, #64]	; 0x40
9002458c:	b289      	uxth	r1, r1
9002458e:	fb02 f301 	mul.w	r3, r2, r1
90024592:	0112      	lsls	r2, r2, #4
90024594:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024598:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
9002459c:	1ad2      	subs	r2, r2, r3
9002459e:	b289      	uxth	r1, r1
900245a0:	b292      	uxth	r2, r2
900245a2:	1a40      	subs	r0, r0, r1
900245a4:	436a      	muls	r2, r5
900245a6:	b280      	uxth	r0, r0
900245a8:	fb0c 2c00 	mla	ip, ip, r0, r2
900245ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
900245ae:	fb01 c102 	mla	r1, r1, r2, ip
900245b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
900245b4:	fb03 1302 	mla	r3, r3, r2, r1
900245b8:	f3c3 2307 	ubfx	r3, r3, #8, #8
900245bc:	b1db      	cbz	r3, 900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900245be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
900245c0:	4353      	muls	r3, r2
900245c2:	1c5a      	adds	r2, r3, #1
900245c4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900245c8:	4ac6      	ldr	r2, [pc, #792]	; (900248e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900245ca:	121b      	asrs	r3, r3, #8
900245cc:	6812      	ldr	r2, [r2, #0]
900245ce:	2bff      	cmp	r3, #255	; 0xff
900245d0:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900245d4:	f040 8099 	bne.w	9002470a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
900245d8:	0953      	lsrs	r3, r2, #5
900245da:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
900245de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900245e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900245e6:	f02c 0c07 	bic.w	ip, ip, #7
900245ea:	ea43 0c0c 	orr.w	ip, r3, ip
900245ee:	ea4c 0202 	orr.w	r2, ip, r2
900245f2:	f8a8 2000 	strh.w	r2, [r8]
900245f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900245f8:	f108 0802 	add.w	r8, r8, #2
900245fc:	441c      	add	r4, r3
900245fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024600:	441e      	add	r6, r3
90024602:	9b0e      	ldr	r3, [sp, #56]	; 0x38
90024604:	3b01      	subs	r3, #1
90024606:	930e      	str	r3, [sp, #56]	; 0x38
90024608:	e762      	b.n	900244d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9002460a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
9002460c:	f109 0902 	add.w	r9, r9, #2
90024610:	441c      	add	r4, r3
90024612:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024614:	441e      	add	r6, r3
90024616:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024618:	3b01      	subs	r3, #1
9002461a:	9309      	str	r3, [sp, #36]	; 0x24
9002461c:	e736      	b.n	9002448c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9002461e:	d024      	beq.n	9002466a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90024620:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024622:	9823      	ldr	r0, [sp, #140]	; 0x8c
90024624:	3b01      	subs	r3, #1
90024626:	fb00 4003 	mla	r0, r0, r3, r4
9002462a:	1400      	asrs	r0, r0, #16
9002462c:	f53f af4b 	bmi.w	900244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024630:	3901      	subs	r1, #1
90024632:	4288      	cmp	r0, r1
90024634:	f6bf af47 	bge.w	900244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024638:	9924      	ldr	r1, [sp, #144]	; 0x90
9002463a:	fb01 6303 	mla	r3, r1, r3, r6
9002463e:	141b      	asrs	r3, r3, #16
90024640:	f53f af41 	bmi.w	900244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024644:	3a01      	subs	r2, #1
90024646:	4293      	cmp	r3, r2
90024648:	f6bf af3d 	bge.w	900244c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002464c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
90024650:	46c8      	mov	r8, r9
90024652:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
90024656:	930e      	str	r3, [sp, #56]	; 0x38
90024658:	f1bb 0f00 	cmp.w	fp, #0
9002465c:	f300 80b7 	bgt.w	900247ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90024660:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024662:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90024666:	eb09 0945 	add.w	r9, r9, r5, lsl #1
9002466a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
9002466c:	2b00      	cmp	r3, #0
9002466e:	f340 818e 	ble.w	9002498e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90024672:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024676:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024678:	ee30 0a04 	vadd.f32	s0, s0, s8
9002467c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024680:	eef0 6a62 	vmov.f32	s13, s5
90024684:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024688:	ee31 1a05 	vadd.f32	s2, s2, s10
9002468c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024690:	ee16 4a90 	vmov	r4, s13
90024694:	eef0 6a43 	vmov.f32	s13, s6
90024698:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002469c:	ee16 6a90 	vmov	r6, s13
900246a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
900246a4:	ee61 7a27 	vmul.f32	s15, s2, s15
900246a8:	ee77 2a62 	vsub.f32	s5, s14, s5
900246ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
900246b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900246b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900246b8:	ee12 2a90 	vmov	r2, s5
900246bc:	eef0 2a47 	vmov.f32	s5, s14
900246c0:	fb92 f3f3 	sdiv	r3, r2, r3
900246c4:	ee13 2a10 	vmov	r2, s6
900246c8:	9323      	str	r3, [sp, #140]	; 0x8c
900246ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
900246cc:	eeb0 3a67 	vmov.f32	s6, s15
900246d0:	fb92 f3f3 	sdiv	r3, r2, r3
900246d4:	9324      	str	r3, [sp, #144]	; 0x90
900246d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
900246d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
900246da:	3b01      	subs	r3, #1
900246dc:	930d      	str	r3, [sp, #52]	; 0x34
900246de:	9b20      	ldr	r3, [sp, #128]	; 0x80
900246e0:	bf08      	it	eq
900246e2:	4613      	moveq	r3, r2
900246e4:	9309      	str	r3, [sp, #36]	; 0x24
900246e6:	e6c2      	b.n	9002446e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
900246e8:	2900      	cmp	r1, #0
900246ea:	f43f af4d 	beq.w	90024588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
900246ee:	eb0a 0003 	add.w	r0, sl, r3
900246f2:	0843      	lsrs	r3, r0, #1
900246f4:	07c0      	lsls	r0, r0, #31
900246f6:	5cfb      	ldrb	r3, [r7, r3]
900246f8:	bf54      	ite	pl
900246fa:	f003 030f 	andpl.w	r3, r3, #15
900246fe:	111b      	asrmi	r3, r3, #4
90024700:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024704:	b2db      	uxtb	r3, r3
90024706:	930b      	str	r3, [sp, #44]	; 0x2c
90024708:	e73e      	b.n	90024588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9002470a:	f8b8 e000 	ldrh.w	lr, [r8]
9002470e:	fa1f fb83 	uxth.w	fp, r3
90024712:	f3c2 4107 	ubfx	r1, r2, #16, #8
90024716:	43db      	mvns	r3, r3
90024718:	ea4f 202e 	mov.w	r0, lr, asr #8
9002471c:	fb11 f10b 	smulbb	r1, r1, fp
90024720:	b2db      	uxtb	r3, r3
90024722:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
90024726:	fa5f fc8c 	uxtb.w	ip, ip
9002472a:	b2d2      	uxtb	r2, r2
9002472c:	fb00 1003 	mla	r0, r0, r3, r1
90024730:	ea4f 01ee 	mov.w	r1, lr, asr #3
90024734:	fb1c fc0b 	smulbb	ip, ip, fp
90024738:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002473c:	b280      	uxth	r0, r0
9002473e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024742:	fb12 fb0b 	smulbb	fp, r2, fp
90024746:	fa5f fe8e 	uxtb.w	lr, lr
9002474a:	fb01 cc03 	mla	ip, r1, r3, ip
9002474e:	fb0e bb03 	mla	fp, lr, r3, fp
90024752:	1c43      	adds	r3, r0, #1
90024754:	fa1f fc8c 	uxth.w	ip, ip
90024758:	fa1f fb8b 	uxth.w	fp, fp
9002475c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024760:	f10c 0101 	add.w	r1, ip, #1
90024764:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
90024768:	f10b 0001 	add.w	r0, fp, #1
9002476c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90024770:	eb00 201b 	add.w	r0, r0, fp, lsr #8
90024774:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024778:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002477c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024780:	4318      	orrs	r0, r3
90024782:	ea40 000c 	orr.w	r0, r0, ip
90024786:	f8a8 0000 	strh.w	r0, [r8]
9002478a:	e734      	b.n	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002478c:	f113 0b01 	adds.w	fp, r3, #1
90024790:	f53f af31 	bmi.w	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90024794:	45dc      	cmp	ip, fp
90024796:	f6ff af2e 	blt.w	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002479a:	f110 0b01 	adds.w	fp, r0, #1
9002479e:	f53f af2a 	bmi.w	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900247a2:	45de      	cmp	lr, fp
900247a4:	f6ff af27 	blt.w	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900247a8:	9302      	str	r3, [sp, #8]
900247aa:	fa0f f38e 	sxth.w	r3, lr
900247ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
900247b0:	9301      	str	r3, [sp, #4]
900247b2:	fa0f f38c 	sxth.w	r3, ip
900247b6:	e9cd 0203 	strd	r0, r2, [sp, #12]
900247ba:	e9cd 1505 	strd	r1, r5, [sp, #20]
900247be:	9300      	str	r3, [sp, #0]
900247c0:	463a      	mov	r2, r7
900247c2:	4653      	mov	r3, sl
900247c4:	4641      	mov	r1, r8
900247c6:	9815      	ldr	r0, [sp, #84]	; 0x54
900247c8:	f7ff fd4c 	bl	90024264 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
900247cc:	e713      	b.n	900245f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900247ce:	1422      	asrs	r2, r4, #16
900247d0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
900247d2:	1433      	asrs	r3, r6, #16
900247d4:	f3c4 3103 	ubfx	r1, r4, #12, #4
900247d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900247dc:	fb05 2303 	mla	r3, r5, r3, r2
900247e0:	085a      	lsrs	r2, r3, #1
900247e2:	07dd      	lsls	r5, r3, #31
900247e4:	5cba      	ldrb	r2, [r7, r2]
900247e6:	bf54      	ite	pl
900247e8:	f002 020f 	andpl.w	r2, r2, #15
900247ec:	1112      	asrmi	r2, r2, #4
900247ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
900247f2:	b2d2      	uxtb	r2, r2
900247f4:	2900      	cmp	r1, #0
900247f6:	d077      	beq.n	900248e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
900247f8:	f103 0e01 	add.w	lr, r3, #1
900247fc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90024800:	f01e 0f01 	tst.w	lr, #1
90024804:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024808:	bf0c      	ite	eq
9002480a:	f00c 0c0f 	andeq.w	ip, ip, #15
9002480e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
90024812:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024816:	fa5f f58c 	uxtb.w	r5, ip
9002481a:	9512      	str	r5, [sp, #72]	; 0x48
9002481c:	b308      	cbz	r0, 90024862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
9002481e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
90024820:	442b      	add	r3, r5
90024822:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024826:	07dd      	lsls	r5, r3, #31
90024828:	f103 0301 	add.w	r3, r3, #1
9002482c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90024830:	bf54      	ite	pl
90024832:	f00c 0c0f 	andpl.w	ip, ip, #15
90024836:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002483a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002483e:	fa5f f58c 	uxtb.w	r5, ip
90024842:	ea4f 0c53 	mov.w	ip, r3, lsr #1
90024846:	950c      	str	r5, [sp, #48]	; 0x30
90024848:	07dd      	lsls	r5, r3, #31
9002484a:	f817 c00c 	ldrb.w	ip, [r7, ip]
9002484e:	bf54      	ite	pl
90024850:	f00c 0c0f 	andpl.w	ip, ip, #15
90024854:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024858:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002485c:	fa5f f38c 	uxtb.w	r3, ip
90024860:	9313      	str	r3, [sp, #76]	; 0x4c
90024862:	b289      	uxth	r1, r1
90024864:	9d12      	ldr	r5, [sp, #72]	; 0x48
90024866:	b280      	uxth	r0, r0
90024868:	fb01 f300 	mul.w	r3, r1, r0
9002486c:	0109      	lsls	r1, r1, #4
9002486e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
90024872:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
90024876:	1ac9      	subs	r1, r1, r3
90024878:	b280      	uxth	r0, r0
9002487a:	b289      	uxth	r1, r1
9002487c:	ebac 0c00 	sub.w	ip, ip, r0
90024880:	4369      	muls	r1, r5
90024882:	fa1f fc8c 	uxth.w	ip, ip
90024886:	fb02 120c 	mla	r2, r2, ip, r1
9002488a:	990c      	ldr	r1, [sp, #48]	; 0x30
9002488c:	fb00 2001 	mla	r0, r0, r1, r2
90024890:	9a13      	ldr	r2, [sp, #76]	; 0x4c
90024892:	fb03 0302 	mla	r3, r3, r2, r0
90024896:	f3c3 2307 	ubfx	r3, r3, #8, #8
9002489a:	b1d3      	cbz	r3, 900248d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002489c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
9002489e:	4353      	muls	r3, r2
900248a0:	1c5a      	adds	r2, r3, #1
900248a2:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900248a6:	4a0f      	ldr	r2, [pc, #60]	; (900248e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900248a8:	121b      	asrs	r3, r3, #8
900248aa:	6812      	ldr	r2, [r2, #0]
900248ac:	2bff      	cmp	r3, #255	; 0xff
900248ae:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900248b2:	d12d      	bne.n	90024910 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900248b4:	0953      	lsrs	r3, r2, #5
900248b6:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
900248ba:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900248be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
900248c2:	f02c 0c07 	bic.w	ip, ip, #7
900248c6:	ea43 0c0c 	orr.w	ip, r3, ip
900248ca:	ea4c 0202 	orr.w	r2, ip, r2
900248ce:	f8a8 2000 	strh.w	r2, [r8]
900248d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
900248d4:	f108 0802 	add.w	r8, r8, #2
900248d8:	f10b 3bff 	add.w	fp, fp, #4294967295
900248dc:	441c      	add	r4, r3
900248de:	9b24      	ldr	r3, [sp, #144]	; 0x90
900248e0:	441e      	add	r6, r3
900248e2:	e6b9      	b.n	90024658 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
900248e4:	2402358c 	.word	0x2402358c
900248e8:	2800      	cmp	r0, #0
900248ea:	d0ba      	beq.n	90024862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
900248ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
900248ee:	442b      	add	r3, r5
900248f0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
900248f4:	07db      	lsls	r3, r3, #31
900248f6:	f817 c00c 	ldrb.w	ip, [r7, ip]
900248fa:	bf54      	ite	pl
900248fc:	f00c 0c0f 	andpl.w	ip, ip, #15
90024900:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024904:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024908:	fa5f f38c 	uxtb.w	r3, ip
9002490c:	930c      	str	r3, [sp, #48]	; 0x30
9002490e:	e7a8      	b.n	90024862 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90024910:	f8b8 e000 	ldrh.w	lr, [r8]
90024914:	fa1f fa83 	uxth.w	sl, r3
90024918:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002491c:	43db      	mvns	r3, r3
9002491e:	ea4f 202e 	mov.w	r0, lr, asr #8
90024922:	fb11 f10a 	smulbb	r1, r1, sl
90024926:	b2db      	uxtb	r3, r3
90024928:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002492c:	b2d2      	uxtb	r2, r2
9002492e:	fa5f fc8c 	uxtb.w	ip, ip
90024932:	fb00 1003 	mla	r0, r0, r3, r1
90024936:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002493a:	fb12 f20a 	smulbb	r2, r2, sl
9002493e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90024942:	b280      	uxth	r0, r0
90024944:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
90024948:	fb1c fc0a 	smulbb	ip, ip, sl
9002494c:	fa5f fe8e 	uxtb.w	lr, lr
90024950:	fb0e 2203 	mla	r2, lr, r3, r2
90024954:	fb01 cc03 	mla	ip, r1, r3, ip
90024958:	1c43      	adds	r3, r0, #1
9002495a:	b292      	uxth	r2, r2
9002495c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90024960:	1c51      	adds	r1, r2, #1
90024962:	fa1f fc8c 	uxth.w	ip, ip
90024966:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
9002496a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
9002496e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024972:	4308      	orrs	r0, r1
90024974:	f10c 0101 	add.w	r1, ip, #1
90024978:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
9002497c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90024980:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
90024984:	ea40 000c 	orr.w	r0, r0, ip
90024988:	f8a8 0000 	strh.w	r0, [r8]
9002498c:	e7a1      	b.n	900248d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
9002498e:	b017      	add	sp, #92	; 0x5c
90024990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024994 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
90024994:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024998:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
9002499c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900249a0:	2d00      	cmp	r5, #0
900249a2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
900249a6:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
900249aa:	fb05 0e03 	mla	lr, r5, r3, r0
900249ae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
900249b2:	f2c0 80b0 	blt.w	90024b16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900249b6:	45a9      	cmp	r9, r5
900249b8:	f340 80ad 	ble.w	90024b16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900249bc:	2800      	cmp	r0, #0
900249be:	f2c0 80a8 	blt.w	90024b12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900249c2:	4580      	cmp	r8, r0
900249c4:	f340 80a5 	ble.w	90024b12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900249c8:	ea4f 045e 	mov.w	r4, lr, lsr #1
900249cc:	f01e 0f01 	tst.w	lr, #1
900249d0:	5d16      	ldrb	r6, [r2, r4]
900249d2:	bf0c      	ite	eq
900249d4:	f006 060f 	andeq.w	r6, r6, #15
900249d8:	1136      	asrne	r6, r6, #4
900249da:	eb06 1606 	add.w	r6, r6, r6, lsl #4
900249de:	b2f6      	uxtb	r6, r6
900249e0:	1c44      	adds	r4, r0, #1
900249e2:	f100 809b 	bmi.w	90024b1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900249e6:	45a0      	cmp	r8, r4
900249e8:	f340 8098 	ble.w	90024b1c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
900249ec:	2f00      	cmp	r7, #0
900249ee:	f000 8097 	beq.w	90024b20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
900249f2:	f10e 0a01 	add.w	sl, lr, #1
900249f6:	ea4f 045a 	mov.w	r4, sl, lsr #1
900249fa:	f01a 0f01 	tst.w	sl, #1
900249fe:	5d14      	ldrb	r4, [r2, r4]
90024a00:	bf0c      	ite	eq
90024a02:	f004 040f 	andeq.w	r4, r4, #15
90024a06:	1124      	asrne	r4, r4, #4
90024a08:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90024a0c:	b2e4      	uxtb	r4, r4
90024a0e:	3501      	adds	r5, #1
90024a10:	f100 808a 	bmi.w	90024b28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024a14:	45a9      	cmp	r9, r5
90024a16:	f340 8087 	ble.w	90024b28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90024a1a:	f1bc 0f00 	cmp.w	ip, #0
90024a1e:	f000 8086 	beq.w	90024b2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
90024a22:	2800      	cmp	r0, #0
90024a24:	db7e      	blt.n	90024b24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024a26:	4580      	cmp	r8, r0
90024a28:	dd7c      	ble.n	90024b24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90024a2a:	eb03 090e 	add.w	r9, r3, lr
90024a2e:	ea4f 0559 	mov.w	r5, r9, lsr #1
90024a32:	f019 0f01 	tst.w	r9, #1
90024a36:	5d55      	ldrb	r5, [r2, r5]
90024a38:	bf0c      	ite	eq
90024a3a:	f005 050f 	andeq.w	r5, r5, #15
90024a3e:	112d      	asrne	r5, r5, #4
90024a40:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90024a44:	b2ed      	uxtb	r5, r5
90024a46:	3001      	adds	r0, #1
90024a48:	d474      	bmi.n	90024b34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024a4a:	4580      	cmp	r8, r0
90024a4c:	dd72      	ble.n	90024b34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90024a4e:	2f00      	cmp	r7, #0
90024a50:	d072      	beq.n	90024b38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
90024a52:	3301      	adds	r3, #1
90024a54:	449e      	add	lr, r3
90024a56:	ea4f 035e 	mov.w	r3, lr, lsr #1
90024a5a:	f01e 0f01 	tst.w	lr, #1
90024a5e:	5cd0      	ldrb	r0, [r2, r3]
90024a60:	bf0c      	ite	eq
90024a62:	f000 000f 	andeq.w	r0, r0, #15
90024a66:	1100      	asrne	r0, r0, #4
90024a68:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024a6c:	b2c3      	uxtb	r3, r0
90024a6e:	b2ba      	uxth	r2, r7
90024a70:	fa1f fc8c 	uxth.w	ip, ip
90024a74:	fb02 f00c 	mul.w	r0, r2, ip
90024a78:	0112      	lsls	r2, r2, #4
90024a7a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90024a7e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
90024a82:	1a12      	subs	r2, r2, r0
90024a84:	fa1f fc8c 	uxth.w	ip, ip
90024a88:	b292      	uxth	r2, r2
90024a8a:	eba7 070c 	sub.w	r7, r7, ip
90024a8e:	4362      	muls	r2, r4
90024a90:	b2bf      	uxth	r7, r7
90024a92:	fb06 2207 	mla	r2, r6, r7, r2
90024a96:	fb0c 2505 	mla	r5, ip, r5, r2
90024a9a:	fb00 5303 	mla	r3, r0, r3, r5
90024a9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024aa2:	b3a3      	cbz	r3, 90024b0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
90024aa4:	4a25      	ldr	r2, [pc, #148]	; (90024b3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
90024aa6:	880e      	ldrh	r6, [r1, #0]
90024aa8:	6815      	ldr	r5, [r2, #0]
90024aaa:	b29a      	uxth	r2, r3
90024aac:	1234      	asrs	r4, r6, #8
90024aae:	43db      	mvns	r3, r3
90024ab0:	f3c5 4007 	ubfx	r0, r5, #16, #8
90024ab4:	f3c5 2707 	ubfx	r7, r5, #8, #8
90024ab8:	b2db      	uxtb	r3, r3
90024aba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90024abe:	fb10 f002 	smulbb	r0, r0, r2
90024ac2:	b2ed      	uxtb	r5, r5
90024ac4:	fb17 f702 	smulbb	r7, r7, r2
90024ac8:	fb04 0403 	mla	r4, r4, r3, r0
90024acc:	10f0      	asrs	r0, r6, #3
90024ace:	fb15 f202 	smulbb	r2, r5, r2
90024ad2:	00f6      	lsls	r6, r6, #3
90024ad4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90024ad8:	b2a4      	uxth	r4, r4
90024ada:	b2f6      	uxtb	r6, r6
90024adc:	fb00 7003 	mla	r0, r0, r3, r7
90024ae0:	fb06 2303 	mla	r3, r6, r3, r2
90024ae4:	b280      	uxth	r0, r0
90024ae6:	b29a      	uxth	r2, r3
90024ae8:	1c63      	adds	r3, r4, #1
90024aea:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90024aee:	1c53      	adds	r3, r2, #1
90024af0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90024af4:	1c42      	adds	r2, r0, #1
90024af6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90024afa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90024afe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024b02:	0940      	lsrs	r0, r0, #5
90024b04:	4323      	orrs	r3, r4
90024b06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90024b0a:	4303      	orrs	r3, r0
90024b0c:	800b      	strh	r3, [r1, #0]
90024b0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024b12:	2600      	movs	r6, #0
90024b14:	e764      	b.n	900249e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
90024b16:	2400      	movs	r4, #0
90024b18:	4626      	mov	r6, r4
90024b1a:	e778      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024b1c:	2400      	movs	r4, #0
90024b1e:	e776      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024b20:	463c      	mov	r4, r7
90024b22:	e774      	b.n	90024a0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90024b24:	2500      	movs	r5, #0
90024b26:	e78e      	b.n	90024a46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90024b28:	2300      	movs	r3, #0
90024b2a:	461d      	mov	r5, r3
90024b2c:	e79f      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024b2e:	4663      	mov	r3, ip
90024b30:	4665      	mov	r5, ip
90024b32:	e79c      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024b34:	2300      	movs	r3, #0
90024b36:	e79a      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024b38:	463b      	mov	r3, r7
90024b3a:	e798      	b.n	90024a6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90024b3c:	2402358c 	.word	0x2402358c

90024b40 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024b44:	b093      	sub	sp, #76	; 0x4c
90024b46:	461d      	mov	r5, r3
90024b48:	920c      	str	r2, [sp, #48]	; 0x30
90024b4a:	9a21      	ldr	r2, [sp, #132]	; 0x84
90024b4c:	9011      	str	r0, [sp, #68]	; 0x44
90024b4e:	9107      	str	r1, [sp, #28]
90024b50:	6850      	ldr	r0, [r2, #4]
90024b52:	6812      	ldr	r2, [r2, #0]
90024b54:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
90024b58:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
90024b5c:	fb00 1303 	mla	r3, r0, r3, r1
90024b60:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90024b64:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024b66:	689b      	ldr	r3, [r3, #8]
90024b68:	3301      	adds	r3, #1
90024b6a:	f023 0301 	bic.w	r3, r3, #1
90024b6e:	9306      	str	r3, [sp, #24]
90024b70:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024b72:	681f      	ldr	r7, [r3, #0]
90024b74:	9b07      	ldr	r3, [sp, #28]
90024b76:	2b00      	cmp	r3, #0
90024b78:	dc03      	bgt.n	90024b82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
90024b7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
90024b7c:	2b00      	cmp	r3, #0
90024b7e:	f340 8267 	ble.w	90025050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024b82:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024b84:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b88:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024b8c:	1e48      	subs	r0, r1, #1
90024b8e:	f102 3cff 	add.w	ip, r2, #4294967295
90024b92:	2d00      	cmp	r5, #0
90024b94:	f340 80b7 	ble.w	90024d06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
90024b98:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024b9c:	ea4f 4326 	mov.w	r3, r6, asr #16
90024ba0:	d406      	bmi.n	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024ba2:	4586      	cmp	lr, r0
90024ba4:	da04      	bge.n	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024ba6:	2b00      	cmp	r3, #0
90024ba8:	db02      	blt.n	90024bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
90024baa:	4563      	cmp	r3, ip
90024bac:	f2c0 80ac 	blt.w	90024d08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
90024bb0:	f11e 0e01 	adds.w	lr, lr, #1
90024bb4:	f100 809f 	bmi.w	90024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024bb8:	4571      	cmp	r1, lr
90024bba:	f2c0 809c 	blt.w	90024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024bbe:	3301      	adds	r3, #1
90024bc0:	f100 8099 	bmi.w	90024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024bc4:	429a      	cmp	r2, r3
90024bc6:	f2c0 8096 	blt.w	90024cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90024bca:	46c8      	mov	r8, r9
90024bcc:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90024bd0:	9509      	str	r5, [sp, #36]	; 0x24
90024bd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024bd4:	2b00      	cmp	r3, #0
90024bd6:	f340 80b5 	ble.w	90024d44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90024bda:	f3c4 3303 	ubfx	r3, r4, #12, #4
90024bde:	1430      	asrs	r0, r6, #16
90024be0:	f3c6 3103 	ubfx	r1, r6, #12, #4
90024be4:	9308      	str	r3, [sp, #32]
90024be6:	9b24      	ldr	r3, [sp, #144]	; 0x90
90024be8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90024bec:	1423      	asrs	r3, r4, #16
90024bee:	f100 813f 	bmi.w	90024e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024bf2:	f10c 3bff 	add.w	fp, ip, #4294967295
90024bf6:	455b      	cmp	r3, fp
90024bf8:	f280 813a 	bge.w	90024e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024bfc:	2800      	cmp	r0, #0
90024bfe:	f2c0 8137 	blt.w	90024e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024c02:	f10e 3bff 	add.w	fp, lr, #4294967295
90024c06:	4558      	cmp	r0, fp
90024c08:	f280 8132 	bge.w	90024e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90024c0c:	9a06      	ldr	r2, [sp, #24]
90024c0e:	fb00 3302 	mla	r3, r0, r2, r3
90024c12:	0858      	lsrs	r0, r3, #1
90024c14:	07da      	lsls	r2, r3, #31
90024c16:	9a08      	ldr	r2, [sp, #32]
90024c18:	f817 c000 	ldrb.w	ip, [r7, r0]
90024c1c:	bf54      	ite	pl
90024c1e:	f00c 0c0f 	andpl.w	ip, ip, #15
90024c22:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90024c26:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90024c2a:	fa5f fc8c 	uxtb.w	ip, ip
90024c2e:	2a00      	cmp	r2, #0
90024c30:	f000 80cc 	beq.w	90024dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
90024c34:	1c58      	adds	r0, r3, #1
90024c36:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90024c3a:	07c0      	lsls	r0, r0, #31
90024c3c:	f817 e00e 	ldrb.w	lr, [r7, lr]
90024c40:	bf54      	ite	pl
90024c42:	f00e 0e0f 	andpl.w	lr, lr, #15
90024c46:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90024c4a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90024c4e:	fa5f fe8e 	uxtb.w	lr, lr
90024c52:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
90024c56:	b1b9      	cbz	r1, 90024c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024c58:	4453      	add	r3, sl
90024c5a:	0858      	lsrs	r0, r3, #1
90024c5c:	07da      	lsls	r2, r3, #31
90024c5e:	5c38      	ldrb	r0, [r7, r0]
90024c60:	bf54      	ite	pl
90024c62:	f000 000f 	andpl.w	r0, r0, #15
90024c66:	1100      	asrmi	r0, r0, #4
90024c68:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90024c6c:	b2c0      	uxtb	r0, r0
90024c6e:	900a      	str	r0, [sp, #40]	; 0x28
90024c70:	1c58      	adds	r0, r3, #1
90024c72:	0843      	lsrs	r3, r0, #1
90024c74:	07c2      	lsls	r2, r0, #31
90024c76:	5cfb      	ldrb	r3, [r7, r3]
90024c78:	bf54      	ite	pl
90024c7a:	f003 030f 	andpl.w	r3, r3, #15
90024c7e:	111b      	asrmi	r3, r3, #4
90024c80:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024c84:	b2db      	uxtb	r3, r3
90024c86:	930e      	str	r3, [sp, #56]	; 0x38
90024c88:	f8bd 2020 	ldrh.w	r2, [sp, #32]
90024c8c:	b289      	uxth	r1, r1
90024c8e:	fb02 f301 	mul.w	r3, r2, r1
90024c92:	0112      	lsls	r2, r2, #4
90024c94:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90024c98:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
90024c9c:	1ad2      	subs	r2, r2, r3
90024c9e:	b289      	uxth	r1, r1
90024ca0:	b292      	uxth	r2, r2
90024ca2:	1a40      	subs	r0, r0, r1
90024ca4:	fa1f fe80 	uxth.w	lr, r0
90024ca8:	980d      	ldr	r0, [sp, #52]	; 0x34
90024caa:	4342      	muls	r2, r0
90024cac:	fb0c 2c0e 	mla	ip, ip, lr, r2
90024cb0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
90024cb2:	fb01 c102 	mla	r1, r1, r2, ip
90024cb6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
90024cb8:	fb03 1302 	mla	r3, r3, r2, r1
90024cbc:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024cc0:	2bff      	cmp	r3, #255	; 0xff
90024cc2:	f040 8094 	bne.w	90024dee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
90024cc6:	4bbf      	ldr	r3, [pc, #764]	; (90024fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024cc8:	681a      	ldr	r2, [r3, #0]
90024cca:	4bbf      	ldr	r3, [pc, #764]	; (90024fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024ccc:	0951      	lsrs	r1, r2, #5
90024cce:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024cd2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024cd6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024cda:	430b      	orrs	r3, r1
90024cdc:	4313      	orrs	r3, r2
90024cde:	f8a8 3000 	strh.w	r3, [r8]
90024ce2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024ce4:	f108 0802 	add.w	r8, r8, #2
90024ce8:	441c      	add	r4, r3
90024cea:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024cec:	441e      	add	r6, r3
90024cee:	9b09      	ldr	r3, [sp, #36]	; 0x24
90024cf0:	3b01      	subs	r3, #1
90024cf2:	9309      	str	r3, [sp, #36]	; 0x24
90024cf4:	e76d      	b.n	90024bd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90024cf6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024cf8:	3d01      	subs	r5, #1
90024cfa:	f109 0902 	add.w	r9, r9, #2
90024cfe:	441c      	add	r4, r3
90024d00:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024d02:	441e      	add	r6, r3
90024d04:	e745      	b.n	90024b92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
90024d06:	d021      	beq.n	90024d4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90024d08:	1e6b      	subs	r3, r5, #1
90024d0a:	981f      	ldr	r0, [sp, #124]	; 0x7c
90024d0c:	fb00 4003 	mla	r0, r0, r3, r4
90024d10:	1400      	asrs	r0, r0, #16
90024d12:	f53f af5a 	bmi.w	90024bca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024d16:	3901      	subs	r1, #1
90024d18:	4288      	cmp	r0, r1
90024d1a:	f6bf af56 	bge.w	90024bca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024d1e:	9920      	ldr	r1, [sp, #128]	; 0x80
90024d20:	fb01 6303 	mla	r3, r1, r3, r6
90024d24:	141b      	asrs	r3, r3, #16
90024d26:	f53f af50 	bmi.w	90024bca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024d2a:	3a01      	subs	r2, #1
90024d2c:	4293      	cmp	r3, r2
90024d2e:	f6bf af4c 	bge.w	90024bca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90024d32:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90024d36:	46a8      	mov	r8, r5
90024d38:	46ce      	mov	lr, r9
90024d3a:	9308      	str	r3, [sp, #32]
90024d3c:	f1b8 0f00 	cmp.w	r8, #0
90024d40:	f300 80b6 	bgt.w	90024eb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024d44:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90024d48:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90024d4c:	9b07      	ldr	r3, [sp, #28]
90024d4e:	2b00      	cmp	r3, #0
90024d50:	f340 817e 	ble.w	90025050 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
90024d54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
90024d58:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024d5a:	ee30 0a04 	vadd.f32	s0, s0, s8
90024d5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90024d62:	eef0 6a62 	vmov.f32	s13, s5
90024d66:	eec7 7a00 	vdiv.f32	s15, s14, s0
90024d6a:	ee31 1a05 	vadd.f32	s2, s2, s10
90024d6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d72:	ee16 4a90 	vmov	r4, s13
90024d76:	eef0 6a43 	vmov.f32	s13, s6
90024d7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90024d7e:	ee16 6a90 	vmov	r6, s13
90024d82:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024d86:	ee61 7a27 	vmul.f32	s15, s2, s15
90024d8a:	ee77 2a62 	vsub.f32	s5, s14, s5
90024d8e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024d92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024d96:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024d9a:	ee12 2a90 	vmov	r2, s5
90024d9e:	eef0 2a47 	vmov.f32	s5, s14
90024da2:	fb92 f3f3 	sdiv	r3, r2, r3
90024da6:	ee13 2a10 	vmov	r2, s6
90024daa:	931f      	str	r3, [sp, #124]	; 0x7c
90024dac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024dae:	eeb0 3a67 	vmov.f32	s6, s15
90024db2:	fb92 f3f3 	sdiv	r3, r2, r3
90024db6:	9320      	str	r3, [sp, #128]	; 0x80
90024db8:	9b07      	ldr	r3, [sp, #28]
90024dba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
90024dbc:	3b01      	subs	r3, #1
90024dbe:	9307      	str	r3, [sp, #28]
90024dc0:	bf08      	it	eq
90024dc2:	4615      	moveq	r5, r2
90024dc4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
90024dc6:	bf18      	it	ne
90024dc8:	461d      	movne	r5, r3
90024dca:	e6d3      	b.n	90024b74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90024dcc:	2900      	cmp	r1, #0
90024dce:	f43f af5b 	beq.w	90024c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024dd2:	eb0a 0003 	add.w	r0, sl, r3
90024dd6:	0843      	lsrs	r3, r0, #1
90024dd8:	07c0      	lsls	r0, r0, #31
90024dda:	5cfb      	ldrb	r3, [r7, r3]
90024ddc:	bf54      	ite	pl
90024dde:	f003 030f 	andpl.w	r3, r3, #15
90024de2:	111b      	asrmi	r3, r3, #4
90024de4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90024de8:	b2db      	uxtb	r3, r3
90024dea:	930a      	str	r3, [sp, #40]	; 0x28
90024dec:	e74c      	b.n	90024c88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90024dee:	2b00      	cmp	r3, #0
90024df0:	f43f af77 	beq.w	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024df4:	4a73      	ldr	r2, [pc, #460]	; (90024fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024df6:	fa1f fe83 	uxth.w	lr, r3
90024dfa:	f8b8 c000 	ldrh.w	ip, [r8]
90024dfe:	43db      	mvns	r3, r3
90024e00:	6810      	ldr	r0, [r2, #0]
90024e02:	ea4f 212c 	mov.w	r1, ip, asr #8
90024e06:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024e0a:	b2db      	uxtb	r3, r3
90024e0c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024e10:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024e14:	fb12 f20e 	smulbb	r2, r2, lr
90024e18:	b2c0      	uxtb	r0, r0
90024e1a:	fb1b fb0e 	smulbb	fp, fp, lr
90024e1e:	fb01 2103 	mla	r1, r1, r3, r2
90024e22:	ea4f 02ec 	mov.w	r2, ip, asr #3
90024e26:	fb10 fe0e 	smulbb	lr, r0, lr
90024e2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90024e2e:	b289      	uxth	r1, r1
90024e30:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90024e34:	fa5f fc8c 	uxtb.w	ip, ip
90024e38:	fb02 b203 	mla	r2, r2, r3, fp
90024e3c:	1c48      	adds	r0, r1, #1
90024e3e:	fb0c e303 	mla	r3, ip, r3, lr
90024e42:	b292      	uxth	r2, r2
90024e44:	b29b      	uxth	r3, r3
90024e46:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90024e4a:	f102 0b01 	add.w	fp, r2, #1
90024e4e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
90024e52:	1c59      	adds	r1, r3, #1
90024e54:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90024e58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90024e5c:	0952      	lsrs	r2, r2, #5
90024e5e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
90024e62:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90024e66:	4301      	orrs	r1, r0
90024e68:	4311      	orrs	r1, r2
90024e6a:	f8a8 1000 	strh.w	r1, [r8]
90024e6e:	e738      	b.n	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024e70:	f113 0b01 	adds.w	fp, r3, #1
90024e74:	f53f af35 	bmi.w	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024e78:	45dc      	cmp	ip, fp
90024e7a:	f6ff af32 	blt.w	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024e7e:	f110 0b01 	adds.w	fp, r0, #1
90024e82:	f53f af2e 	bmi.w	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024e86:	45de      	cmp	lr, fp
90024e88:	f6ff af2b 	blt.w	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024e8c:	9302      	str	r3, [sp, #8]
90024e8e:	fa0f f38e 	sxth.w	r3, lr
90024e92:	9a08      	ldr	r2, [sp, #32]
90024e94:	9301      	str	r3, [sp, #4]
90024e96:	fa0f f38c 	sxth.w	r3, ip
90024e9a:	9105      	str	r1, [sp, #20]
90024e9c:	4641      	mov	r1, r8
90024e9e:	9300      	str	r3, [sp, #0]
90024ea0:	4653      	mov	r3, sl
90024ea2:	e9cd 0203 	strd	r0, r2, [sp, #12]
90024ea6:	463a      	mov	r2, r7
90024ea8:	9811      	ldr	r0, [sp, #68]	; 0x44
90024eaa:	f7ff fd73 	bl	90024994 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
90024eae:	e718      	b.n	90024ce2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
90024eb0:	1422      	asrs	r2, r4, #16
90024eb2:	9906      	ldr	r1, [sp, #24]
90024eb4:	1433      	asrs	r3, r6, #16
90024eb6:	f3c4 3003 	ubfx	r0, r4, #12, #4
90024eba:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90024ebe:	fb01 2303 	mla	r3, r1, r3, r2
90024ec2:	085a      	lsrs	r2, r3, #1
90024ec4:	07d9      	lsls	r1, r3, #31
90024ec6:	5cba      	ldrb	r2, [r7, r2]
90024ec8:	bf54      	ite	pl
90024eca:	f002 020f 	andpl.w	r2, r2, #15
90024ece:	1112      	asrmi	r2, r2, #4
90024ed0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
90024ed4:	b2d2      	uxtb	r2, r2
90024ed6:	2800      	cmp	r0, #0
90024ed8:	d063      	beq.n	90024fa2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90024eda:	f103 0a01 	add.w	sl, r3, #1
90024ede:	ea4f 015a 	mov.w	r1, sl, lsr #1
90024ee2:	f01a 0f01 	tst.w	sl, #1
90024ee6:	5c79      	ldrb	r1, [r7, r1]
90024ee8:	bf0c      	ite	eq
90024eea:	f001 010f 	andeq.w	r1, r1, #15
90024eee:	1109      	asrne	r1, r1, #4
90024ef0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024ef4:	b2c9      	uxtb	r1, r1
90024ef6:	910f      	str	r1, [sp, #60]	; 0x3c
90024ef8:	f1bc 0f00 	cmp.w	ip, #0
90024efc:	d01a      	beq.n	90024f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024efe:	9908      	ldr	r1, [sp, #32]
90024f00:	440b      	add	r3, r1
90024f02:	0859      	lsrs	r1, r3, #1
90024f04:	f013 0f01 	tst.w	r3, #1
90024f08:	f103 0301 	add.w	r3, r3, #1
90024f0c:	5c79      	ldrb	r1, [r7, r1]
90024f0e:	bf0c      	ite	eq
90024f10:	f001 010f 	andeq.w	r1, r1, #15
90024f14:	1109      	asrne	r1, r1, #4
90024f16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024f1a:	b2c9      	uxtb	r1, r1
90024f1c:	910b      	str	r1, [sp, #44]	; 0x2c
90024f1e:	0859      	lsrs	r1, r3, #1
90024f20:	07db      	lsls	r3, r3, #31
90024f22:	5c79      	ldrb	r1, [r7, r1]
90024f24:	bf54      	ite	pl
90024f26:	f001 010f 	andpl.w	r1, r1, #15
90024f2a:	1109      	asrmi	r1, r1, #4
90024f2c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024f30:	b2c9      	uxtb	r1, r1
90024f32:	9110      	str	r1, [sp, #64]	; 0x40
90024f34:	b280      	uxth	r0, r0
90024f36:	fa1f fc8c 	uxth.w	ip, ip
90024f3a:	fb00 f30c 	mul.w	r3, r0, ip
90024f3e:	0100      	lsls	r0, r0, #4
90024f40:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
90024f44:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
90024f48:	1ac0      	subs	r0, r0, r3
90024f4a:	fa1f fc8c 	uxth.w	ip, ip
90024f4e:	b280      	uxth	r0, r0
90024f50:	eba1 010c 	sub.w	r1, r1, ip
90024f54:	fa1f fa81 	uxth.w	sl, r1
90024f58:	990f      	ldr	r1, [sp, #60]	; 0x3c
90024f5a:	4348      	muls	r0, r1
90024f5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
90024f5e:	fb02 020a 	mla	r2, r2, sl, r0
90024f62:	fb0c 2c01 	mla	ip, ip, r1, r2
90024f66:	9a10      	ldr	r2, [sp, #64]	; 0x40
90024f68:	fb03 c302 	mla	r3, r3, r2, ip
90024f6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024f70:	2bff      	cmp	r3, #255	; 0xff
90024f72:	d12b      	bne.n	90024fcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
90024f74:	4b13      	ldr	r3, [pc, #76]	; (90024fc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90024f76:	681a      	ldr	r2, [r3, #0]
90024f78:	4b13      	ldr	r3, [pc, #76]	; (90024fc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90024f7a:	0951      	lsrs	r1, r2, #5
90024f7c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
90024f80:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024f84:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
90024f88:	430b      	orrs	r3, r1
90024f8a:	4313      	orrs	r3, r2
90024f8c:	f8ae 3000 	strh.w	r3, [lr]
90024f90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
90024f92:	f10e 0e02 	add.w	lr, lr, #2
90024f96:	f108 38ff 	add.w	r8, r8, #4294967295
90024f9a:	441c      	add	r4, r3
90024f9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
90024f9e:	441e      	add	r6, r3
90024fa0:	e6cc      	b.n	90024d3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
90024fa2:	f1bc 0f00 	cmp.w	ip, #0
90024fa6:	d0c5      	beq.n	90024f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024fa8:	9908      	ldr	r1, [sp, #32]
90024faa:	440b      	add	r3, r1
90024fac:	0859      	lsrs	r1, r3, #1
90024fae:	07db      	lsls	r3, r3, #31
90024fb0:	5c79      	ldrb	r1, [r7, r1]
90024fb2:	bf54      	ite	pl
90024fb4:	f001 010f 	andpl.w	r1, r1, #15
90024fb8:	1109      	asrmi	r1, r1, #4
90024fba:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90024fbe:	b2c9      	uxtb	r1, r1
90024fc0:	910b      	str	r1, [sp, #44]	; 0x2c
90024fc2:	e7b7      	b.n	90024f34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90024fc4:	2402358c 	.word	0x2402358c
90024fc8:	fffff800 	.word	0xfffff800
90024fcc:	2b00      	cmp	r3, #0
90024fce:	d0df      	beq.n	90024f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90024fd0:	4a21      	ldr	r2, [pc, #132]	; (90025058 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
90024fd2:	fa1f fa83 	uxth.w	sl, r3
90024fd6:	f8be c000 	ldrh.w	ip, [lr]
90024fda:	43db      	mvns	r3, r3
90024fdc:	6810      	ldr	r0, [r2, #0]
90024fde:	ea4f 212c 	mov.w	r1, ip, asr #8
90024fe2:	f3c0 4207 	ubfx	r2, r0, #16, #8
90024fe6:	b2db      	uxtb	r3, r3
90024fe8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
90024fec:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90024ff0:	fb12 f20a 	smulbb	r2, r2, sl
90024ff4:	b2c0      	uxtb	r0, r0
90024ff6:	fb1b fb0a 	smulbb	fp, fp, sl
90024ffa:	fb01 2103 	mla	r1, r1, r3, r2
90024ffe:	ea4f 02ec 	mov.w	r2, ip, asr #3
90025002:	fb10 f00a 	smulbb	r0, r0, sl
90025006:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9002500a:	b289      	uxth	r1, r1
9002500c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
90025010:	fa5f fc8c 	uxtb.w	ip, ip
90025014:	fb02 b203 	mla	r2, r2, r3, fp
90025018:	fb0c 0003 	mla	r0, ip, r3, r0
9002501c:	1c4b      	adds	r3, r1, #1
9002501e:	b292      	uxth	r2, r2
90025020:	b280      	uxth	r0, r0
90025022:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90025026:	f100 0b01 	add.w	fp, r0, #1
9002502a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
9002502e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
90025032:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90025036:	ea4b 0101 	orr.w	r1, fp, r1
9002503a:	f102 0b01 	add.w	fp, r2, #1
9002503e:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90025042:	0952      	lsrs	r2, r2, #5
90025044:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025048:	4311      	orrs	r1, r2
9002504a:	f8ae 1000 	strh.w	r1, [lr]
9002504e:	e79f      	b.n	90024f90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90025050:	b013      	add	sp, #76	; 0x4c
90025052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025056:	bf00      	nop
90025058:	2402358c 	.word	0x2402358c

9002505c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
9002505c:	b570      	push	{r4, r5, r6, lr}
9002505e:	1208      	asrs	r0, r1, #8
90025060:	f8bd 5010 	ldrh.w	r5, [sp, #16]
90025064:	b29e      	uxth	r6, r3
90025066:	1213      	asrs	r3, r2, #8
90025068:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
9002506c:	10cc      	asrs	r4, r1, #3
9002506e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
90025072:	00c9      	lsls	r1, r1, #3
90025074:	fb10 f006 	smulbb	r0, r0, r6
90025078:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
9002507c:	fb13 f305 	smulbb	r3, r3, r5
90025080:	fb14 f406 	smulbb	r4, r4, r6
90025084:	4418      	add	r0, r3
90025086:	10d3      	asrs	r3, r2, #3
90025088:	00d2      	lsls	r2, r2, #3
9002508a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
9002508e:	b280      	uxth	r0, r0
90025090:	b2d2      	uxtb	r2, r2
90025092:	fb13 f305 	smulbb	r3, r3, r5
90025096:	fb12 f205 	smulbb	r2, r2, r5
9002509a:	441c      	add	r4, r3
9002509c:	b2cb      	uxtb	r3, r1
9002509e:	fb13 f306 	smulbb	r3, r3, r6
900250a2:	b2a4      	uxth	r4, r4
900250a4:	4413      	add	r3, r2
900250a6:	1c42      	adds	r2, r0, #1
900250a8:	b29b      	uxth	r3, r3
900250aa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900250ae:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
900250b2:	1c58      	adds	r0, r3, #1
900250b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900250b8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900250bc:	4310      	orrs	r0, r2
900250be:	1c62      	adds	r2, r4, #1
900250c0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900250c4:	0964      	lsrs	r4, r4, #5
900250c6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900250ca:	4320      	orrs	r0, r4
900250cc:	bd70      	pop	{r4, r5, r6, pc}
	...

900250d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
900250d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900250d4:	b08f      	sub	sp, #60	; 0x3c
900250d6:	461c      	mov	r4, r3
900250d8:	460d      	mov	r5, r1
900250da:	4616      	mov	r6, r2
900250dc:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
900250e0:	9004      	str	r0, [sp, #16]
900250e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
900250e4:	2f00      	cmp	r7, #0
900250e6:	f000 80f6 	beq.w	900252d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
900250ea:	6820      	ldr	r0, [r4, #0]
900250ec:	aa0a      	add	r2, sp, #40	; 0x28
900250ee:	6861      	ldr	r1, [r4, #4]
900250f0:	f04f 0802 	mov.w	r8, #2
900250f4:	3604      	adds	r6, #4
900250f6:	c203      	stmia	r2!, {r0, r1}
900250f8:	6818      	ldr	r0, [r3, #0]
900250fa:	aa0c      	add	r2, sp, #48	; 0x30
900250fc:	6859      	ldr	r1, [r3, #4]
900250fe:	c203      	stmia	r2!, {r0, r1}
90025100:	a80a      	add	r0, sp, #40	; 0x28
90025102:	f7ef fd53 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025106:	4621      	mov	r1, r4
90025108:	a80c      	add	r0, sp, #48	; 0x30
9002510a:	f7ef fd93 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9002510e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
90025112:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
90025116:	f002 0301 	and.w	r3, r2, #1
9002511a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
9002511e:	9306      	str	r3, [sp, #24]
90025120:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
90025124:	f003 0101 	and.w	r1, r3, #1
90025128:	9105      	str	r1, [sp, #20]
9002512a:	9805      	ldr	r0, [sp, #20]
9002512c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
90025130:	4403      	add	r3, r0
90025132:	fb01 2303 	mla	r3, r1, r3, r2
90025136:	fb93 f3f8 	sdiv	r3, r3, r8
9002513a:	441d      	add	r5, r3
9002513c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
90025140:	441a      	add	r2, r3
90025142:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
90025146:	4419      	add	r1, r3
90025148:	4b64      	ldr	r3, [pc, #400]	; (900252dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
9002514a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
9002514e:	6818      	ldr	r0, [r3, #0]
90025150:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
90025154:	6803      	ldr	r3, [r0, #0]
90025156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90025158:	4798      	blx	r3
9002515a:	4a61      	ldr	r2, [pc, #388]	; (900252e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
9002515c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90025160:	2fff      	cmp	r7, #255	; 0xff
90025162:	8813      	ldrh	r3, [r2, #0]
90025164:	4611      	mov	r1, r2
90025166:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
9002516a:	fb03 fb0b 	mul.w	fp, r3, fp
9002516e:	fb03 a404 	mla	r4, r3, r4, sl
90025172:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90025176:	d06b      	beq.n	90025250 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90025178:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
9002517c:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90025180:	9303      	str	r3, [sp, #12]
90025182:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90025186:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002518a:	9b07      	ldr	r3, [sp, #28]
9002518c:	42a3      	cmp	r3, r4
9002518e:	f240 809d 	bls.w	900252cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025192:	9b06      	ldr	r3, [sp, #24]
90025194:	2b00      	cmp	r3, #0
90025196:	d039      	beq.n	9002520c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90025198:	782b      	ldrb	r3, [r5, #0]
9002519a:	f105 0801 	add.w	r8, r5, #1
9002519e:	f109 3bff 	add.w	fp, r9, #4294967295
900251a2:	8822      	ldrh	r2, [r4, #0]
900251a4:	f003 030f 	and.w	r3, r3, #15
900251a8:	9804      	ldr	r0, [sp, #16]
900251aa:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900251ae:	9b03      	ldr	r3, [sp, #12]
900251b0:	9300      	str	r3, [sp, #0]
900251b2:	463b      	mov	r3, r7
900251b4:	f7ff ff52 	bl	9002505c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900251b8:	f824 0b02 	strh.w	r0, [r4], #2
900251bc:	f1bb 0f01 	cmp.w	fp, #1
900251c0:	46a2      	mov	sl, r4
900251c2:	f104 0404 	add.w	r4, r4, #4
900251c6:	dd24      	ble.n	90025212 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
900251c8:	f898 3000 	ldrb.w	r3, [r8]
900251cc:	f1ab 0b02 	sub.w	fp, fp, #2
900251d0:	f834 2c04 	ldrh.w	r2, [r4, #-4]
900251d4:	091b      	lsrs	r3, r3, #4
900251d6:	9804      	ldr	r0, [sp, #16]
900251d8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900251dc:	9b03      	ldr	r3, [sp, #12]
900251de:	9300      	str	r3, [sp, #0]
900251e0:	463b      	mov	r3, r7
900251e2:	f7ff ff3b 	bl	9002505c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
900251e6:	f824 0c04 	strh.w	r0, [r4, #-4]
900251ea:	f818 3b01 	ldrb.w	r3, [r8], #1
900251ee:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900251f2:	f003 030f 	and.w	r3, r3, #15
900251f6:	9804      	ldr	r0, [sp, #16]
900251f8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
900251fc:	9b03      	ldr	r3, [sp, #12]
900251fe:	9300      	str	r3, [sp, #0]
90025200:	463b      	mov	r3, r7
90025202:	f7ff ff2b 	bl	9002505c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90025206:	f824 0c02 	strh.w	r0, [r4, #-2]
9002520a:	e7d7      	b.n	900251bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
9002520c:	46a8      	mov	r8, r5
9002520e:	46cb      	mov	fp, r9
90025210:	e7d4      	b.n	900251bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90025212:	d10e      	bne.n	90025232 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90025214:	f898 3000 	ldrb.w	r3, [r8]
90025218:	f8ba 2000 	ldrh.w	r2, [sl]
9002521c:	091b      	lsrs	r3, r3, #4
9002521e:	9804      	ldr	r0, [sp, #16]
90025220:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90025224:	9b03      	ldr	r3, [sp, #12]
90025226:	9300      	str	r3, [sp, #0]
90025228:	463b      	mov	r3, r7
9002522a:	f7ff ff17 	bl	9002505c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
9002522e:	f82a 0b02 	strh.w	r0, [sl], #2
90025232:	9b08      	ldr	r3, [sp, #32]
90025234:	9a05      	ldr	r2, [sp, #20]
90025236:	881c      	ldrh	r4, [r3, #0]
90025238:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
9002523c:	eba4 0409 	sub.w	r4, r4, r9
90025240:	4413      	add	r3, r2
90025242:	9a09      	ldr	r2, [sp, #36]	; 0x24
90025244:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90025248:	fb93 f3f2 	sdiv	r3, r3, r2
9002524c:	441d      	add	r5, r3
9002524e:	e79c      	b.n	9002518a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90025250:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90025254:	45a3      	cmp	fp, r4
90025256:	d939      	bls.n	900252cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90025258:	9b06      	ldr	r3, [sp, #24]
9002525a:	b1fb      	cbz	r3, 9002529c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
9002525c:	782b      	ldrb	r3, [r5, #0]
9002525e:	1c6a      	adds	r2, r5, #1
90025260:	f109 30ff 	add.w	r0, r9, #4294967295
90025264:	3402      	adds	r4, #2
90025266:	f003 030f 	and.w	r3, r3, #15
9002526a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002526e:	f824 3c02 	strh.w	r3, [r4, #-2]
90025272:	2801      	cmp	r0, #1
90025274:	4623      	mov	r3, r4
90025276:	f104 0404 	add.w	r4, r4, #4
9002527a:	dd12      	ble.n	900252a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
9002527c:	7813      	ldrb	r3, [r2, #0]
9002527e:	3802      	subs	r0, #2
90025280:	091b      	lsrs	r3, r3, #4
90025282:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025286:	f824 3c04 	strh.w	r3, [r4, #-4]
9002528a:	f812 3b01 	ldrb.w	r3, [r2], #1
9002528e:	f003 030f 	and.w	r3, r3, #15
90025292:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90025296:	f824 3c02 	strh.w	r3, [r4, #-2]
9002529a:	e7ea      	b.n	90025272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
9002529c:	462a      	mov	r2, r5
9002529e:	4648      	mov	r0, r9
900252a0:	e7e7      	b.n	90025272 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
900252a2:	d106      	bne.n	900252b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
900252a4:	7812      	ldrb	r2, [r2, #0]
900252a6:	3302      	adds	r3, #2
900252a8:	0912      	lsrs	r2, r2, #4
900252aa:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
900252ae:	f823 2c02 	strh.w	r2, [r3, #-2]
900252b2:	880c      	ldrh	r4, [r1, #0]
900252b4:	9a05      	ldr	r2, [sp, #20]
900252b6:	eba4 0409 	sub.w	r4, r4, r9
900252ba:	eb03 0444 	add.w	r4, r3, r4, lsl #1
900252be:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900252c2:	4413      	add	r3, r2
900252c4:	fb93 f3f8 	sdiv	r3, r3, r8
900252c8:	441d      	add	r5, r3
900252ca:	e7c3      	b.n	90025254 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
900252cc:	4b03      	ldr	r3, [pc, #12]	; (900252dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
900252ce:	6818      	ldr	r0, [r3, #0]
900252d0:	6803      	ldr	r3, [r0, #0]
900252d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900252d4:	4798      	blx	r3
900252d6:	b00f      	add	sp, #60	; 0x3c
900252d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900252dc:	2402357c 	.word	0x2402357c
900252e0:	24023576 	.word	0x24023576

900252e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
900252e4:	b5f0      	push	{r4, r5, r6, r7, lr}
900252e6:	f89d 5014 	ldrb.w	r5, [sp, #20]
900252ea:	0a0f      	lsrs	r7, r1, #8
900252ec:	2dff      	cmp	r5, #255	; 0xff
900252ee:	d10c      	bne.n	9002530a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900252f0:	2bff      	cmp	r3, #255	; 0xff
900252f2:	d10a      	bne.n	9002530a <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
900252f4:	0948      	lsrs	r0, r1, #5
900252f6:	4b25      	ldr	r3, [pc, #148]	; (9002538c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
900252f8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900252fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
90025300:	403b      	ands	r3, r7
90025302:	4318      	orrs	r0, r3
90025304:	4308      	orrs	r0, r1
90025306:	b280      	uxth	r0, r0
90025308:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002530a:	fb15 f503 	smulbb	r5, r5, r3
9002530e:	1214      	asrs	r4, r2, #8
90025310:	10d6      	asrs	r6, r2, #3
90025312:	b2ab      	uxth	r3, r5
90025314:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025318:	00d0      	lsls	r0, r2, #3
9002531a:	f3c1 4207 	ubfx	r2, r1, #16, #8
9002531e:	1c5d      	adds	r5, r3, #1
90025320:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90025324:	b2c0      	uxtb	r0, r0
90025326:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
9002532a:	eb05 2513 	add.w	r5, r5, r3, lsr #8
9002532e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90025332:	f3c5 2507 	ubfx	r5, r5, #8, #8
90025336:	fa1f fc85 	uxth.w	ip, r5
9002533a:	43ed      	mvns	r5, r5
9002533c:	fb12 f20c 	smulbb	r2, r2, ip
90025340:	b2eb      	uxtb	r3, r5
90025342:	b2fd      	uxtb	r5, r7
90025344:	fb04 2403 	mla	r4, r4, r3, r2
90025348:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
9002534c:	fb15 f50c 	smulbb	r5, r5, ip
90025350:	b2c8      	uxtb	r0, r1
90025352:	b2a4      	uxth	r4, r4
90025354:	fb10 f00c 	smulbb	r0, r0, ip
90025358:	fb06 5503 	mla	r5, r6, r3, r5
9002535c:	fb02 0003 	mla	r0, r2, r3, r0
90025360:	b2ad      	uxth	r5, r5
90025362:	b283      	uxth	r3, r0
90025364:	1c60      	adds	r0, r4, #1
90025366:	eb00 2414 	add.w	r4, r0, r4, lsr #8
9002536a:	1c58      	adds	r0, r3, #1
9002536c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025370:	1c6b      	adds	r3, r5, #1
90025372:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
90025376:	eb03 2515 	add.w	r5, r3, r5, lsr #8
9002537a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002537e:	096d      	lsrs	r5, r5, #5
90025380:	4320      	orrs	r0, r4
90025382:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
90025386:	4328      	orrs	r0, r5
90025388:	e7be      	b.n	90025308 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
9002538a:	bf00      	nop
9002538c:	00fff800 	.word	0x00fff800

90025390 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90025390:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025394:	461c      	mov	r4, r3
90025396:	b08d      	sub	sp, #52	; 0x34
90025398:	460d      	mov	r5, r1
9002539a:	4616      	mov	r6, r2
9002539c:	9b16      	ldr	r3, [sp, #88]	; 0x58
9002539e:	4680      	mov	r8, r0
900253a0:	6861      	ldr	r1, [r4, #4]
900253a2:	aa08      	add	r2, sp, #32
900253a4:	6820      	ldr	r0, [r4, #0]
900253a6:	f04f 0a02 	mov.w	sl, #2
900253aa:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
900253ae:	3604      	adds	r6, #4
900253b0:	c203      	stmia	r2!, {r0, r1}
900253b2:	6818      	ldr	r0, [r3, #0]
900253b4:	aa0a      	add	r2, sp, #40	; 0x28
900253b6:	6859      	ldr	r1, [r3, #4]
900253b8:	c203      	stmia	r2!, {r0, r1}
900253ba:	a808      	add	r0, sp, #32
900253bc:	f7ef fbf6 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900253c0:	4621      	mov	r1, r4
900253c2:	a80a      	add	r0, sp, #40	; 0x28
900253c4:	f7ef fc36 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900253c8:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
900253cc:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
900253d0:	f002 0301 	and.w	r3, r2, #1
900253d4:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
900253d8:	9303      	str	r3, [sp, #12]
900253da:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900253de:	f003 0101 	and.w	r1, r3, #1
900253e2:	9102      	str	r1, [sp, #8]
900253e4:	9802      	ldr	r0, [sp, #8]
900253e6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
900253ea:	4403      	add	r3, r0
900253ec:	fb01 2303 	mla	r3, r1, r3, r2
900253f0:	fb93 f3fa 	sdiv	r3, r3, sl
900253f4:	441d      	add	r5, r3
900253f6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
900253fa:	441a      	add	r2, r3
900253fc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
90025400:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
90025404:	4419      	add	r1, r3
90025406:	4a3e      	ldr	r2, [pc, #248]	; (90025500 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90025408:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
9002540c:	6810      	ldr	r0, [r2, #0]
9002540e:	9205      	str	r2, [sp, #20]
90025410:	6803      	ldr	r3, [r0, #0]
90025412:	6a9b      	ldr	r3, [r3, #40]	; 0x28
90025414:	4798      	blx	r3
90025416:	4b3b      	ldr	r3, [pc, #236]	; (90025504 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90025418:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
9002541c:	8819      	ldrh	r1, [r3, #0]
9002541e:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
90025422:	434f      	muls	r7, r1
90025424:	fb01 c404 	mla	r4, r1, r4, ip
90025428:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002542c:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90025430:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90025434:	9204      	str	r2, [sp, #16]
90025436:	9b04      	ldr	r3, [sp, #16]
90025438:	429c      	cmp	r4, r3
9002543a:	d258      	bcs.n	900254ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
9002543c:	9b03      	ldr	r3, [sp, #12]
9002543e:	2b00      	cmp	r3, #0
90025440:	d034      	beq.n	900254ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90025442:	782b      	ldrb	r3, [r5, #0]
90025444:	1c6f      	adds	r7, r5, #1
90025446:	f003 030f 	and.w	r3, r3, #15
9002544a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
9002544e:	0e0b      	lsrs	r3, r1, #24
90025450:	d006      	beq.n	90025460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90025452:	8822      	ldrh	r2, [r4, #0]
90025454:	4640      	mov	r0, r8
90025456:	9300      	str	r3, [sp, #0]
90025458:	464b      	mov	r3, r9
9002545a:	f7ff ff43 	bl	900252e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
9002545e:	8020      	strh	r0, [r4, #0]
90025460:	3402      	adds	r4, #2
90025462:	f10b 3aff 	add.w	sl, fp, #4294967295
90025466:	f1ba 0f01 	cmp.w	sl, #1
9002546a:	dd22      	ble.n	900254b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9002546c:	783b      	ldrb	r3, [r7, #0]
9002546e:	091b      	lsrs	r3, r3, #4
90025470:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025474:	0e0b      	lsrs	r3, r1, #24
90025476:	d006      	beq.n	90025486 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90025478:	8822      	ldrh	r2, [r4, #0]
9002547a:	4640      	mov	r0, r8
9002547c:	9300      	str	r3, [sp, #0]
9002547e:	464b      	mov	r3, r9
90025480:	f7ff ff30 	bl	900252e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90025484:	8020      	strh	r0, [r4, #0]
90025486:	f817 3b01 	ldrb.w	r3, [r7], #1
9002548a:	f003 030f 	and.w	r3, r3, #15
9002548e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90025492:	0e0b      	lsrs	r3, r1, #24
90025494:	d006      	beq.n	900254a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90025496:	8862      	ldrh	r2, [r4, #2]
90025498:	4640      	mov	r0, r8
9002549a:	9300      	str	r3, [sp, #0]
9002549c:	464b      	mov	r3, r9
9002549e:	f7ff ff21 	bl	900252e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900254a2:	8060      	strh	r0, [r4, #2]
900254a4:	3404      	adds	r4, #4
900254a6:	f1aa 0a02 	sub.w	sl, sl, #2
900254aa:	e7dc      	b.n	90025466 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900254ac:	462f      	mov	r7, r5
900254ae:	46da      	mov	sl, fp
900254b0:	e7d9      	b.n	90025466 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
900254b2:	d10d      	bne.n	900254d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
900254b4:	783b      	ldrb	r3, [r7, #0]
900254b6:	091b      	lsrs	r3, r3, #4
900254b8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
900254bc:	0e0b      	lsrs	r3, r1, #24
900254be:	d006      	beq.n	900254ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
900254c0:	8822      	ldrh	r2, [r4, #0]
900254c2:	4640      	mov	r0, r8
900254c4:	9300      	str	r3, [sp, #0]
900254c6:	464b      	mov	r3, r9
900254c8:	f7ff ff0c 	bl	900252e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
900254cc:	8020      	strh	r0, [r4, #0]
900254ce:	3402      	adds	r4, #2
900254d0:	9b06      	ldr	r3, [sp, #24]
900254d2:	9a02      	ldr	r2, [sp, #8]
900254d4:	881b      	ldrh	r3, [r3, #0]
900254d6:	eba3 030b 	sub.w	r3, r3, fp
900254da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
900254de:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
900254e2:	4413      	add	r3, r2
900254e4:	9a07      	ldr	r2, [sp, #28]
900254e6:	fb93 f3f2 	sdiv	r3, r3, r2
900254ea:	441d      	add	r5, r3
900254ec:	e7a3      	b.n	90025436 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
900254ee:	9b05      	ldr	r3, [sp, #20]
900254f0:	6818      	ldr	r0, [r3, #0]
900254f2:	6803      	ldr	r3, [r0, #0]
900254f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
900254f6:	4798      	blx	r3
900254f8:	b00d      	add	sp, #52	; 0x34
900254fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900254fe:	bf00      	nop
90025500:	2402357c 	.word	0x2402357c
90025504:	24023576 	.word	0x24023576

90025508 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90025508:	b570      	push	{r4, r5, r6, lr}
9002550a:	1214      	asrs	r4, r2, #8
9002550c:	788d      	ldrb	r5, [r1, #2]
9002550e:	f89d 6010 	ldrb.w	r6, [sp, #16]
90025512:	10d0      	asrs	r0, r2, #3
90025514:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
90025518:	00d2      	lsls	r2, r2, #3
9002551a:	fb15 f503 	smulbb	r5, r5, r3
9002551e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
90025522:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90025526:	b2d2      	uxtb	r2, r2
90025528:	fb04 5506 	mla	r5, r4, r6, r5
9002552c:	784c      	ldrb	r4, [r1, #1]
9002552e:	7809      	ldrb	r1, [r1, #0]
90025530:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90025534:	fb14 f403 	smulbb	r4, r4, r3
90025538:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9002553c:	fb11 f303 	smulbb	r3, r1, r3
90025540:	b2ad      	uxth	r5, r5
90025542:	fb00 4406 	mla	r4, r0, r6, r4
90025546:	fb02 3306 	mla	r3, r2, r6, r3
9002554a:	1c68      	adds	r0, r5, #1
9002554c:	b2a4      	uxth	r4, r4
9002554e:	b29b      	uxth	r3, r3
90025550:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90025554:	1c62      	adds	r2, r4, #1
90025556:	1c58      	adds	r0, r3, #1
90025558:	eb02 2414 	add.w	r4, r2, r4, lsr #8
9002555c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
90025560:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90025564:	0964      	lsrs	r4, r4, #5
90025566:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9002556a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
9002556e:	4328      	orrs	r0, r5
90025570:	4320      	orrs	r0, r4
90025572:	bd70      	pop	{r4, r5, r6, pc}

90025574 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90025574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025578:	b08f      	sub	sp, #60	; 0x3c
9002557a:	461c      	mov	r4, r3
9002557c:	4682      	mov	sl, r0
9002557e:	460e      	mov	r6, r1
90025580:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
90025584:	4615      	mov	r5, r2
90025586:	9b18      	ldr	r3, [sp, #96]	; 0x60
90025588:	2f00      	cmp	r7, #0
9002558a:	f000 8141 	beq.w	90025810 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
9002558e:	6820      	ldr	r0, [r4, #0]
90025590:	aa0a      	add	r2, sp, #40	; 0x28
90025592:	6861      	ldr	r1, [r4, #4]
90025594:	f04f 0802 	mov.w	r8, #2
90025598:	3504      	adds	r5, #4
9002559a:	c203      	stmia	r2!, {r0, r1}
9002559c:	6818      	ldr	r0, [r3, #0]
9002559e:	aa0c      	add	r2, sp, #48	; 0x30
900255a0:	6859      	ldr	r1, [r3, #4]
900255a2:	c203      	stmia	r2!, {r0, r1}
900255a4:	a80a      	add	r0, sp, #40	; 0x28
900255a6:	f7ef fb01 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
900255aa:	4621      	mov	r1, r4
900255ac:	a80c      	add	r0, sp, #48	; 0x30
900255ae:	f7ef fb41 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
900255b2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
900255b6:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
900255ba:	f002 0301 	and.w	r3, r2, #1
900255be:	9306      	str	r3, [sp, #24]
900255c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900255c4:	f003 0101 	and.w	r1, r3, #1
900255c8:	9105      	str	r1, [sp, #20]
900255ca:	9805      	ldr	r0, [sp, #20]
900255cc:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
900255d0:	4403      	add	r3, r0
900255d2:	fb01 2303 	mla	r3, r1, r3, r2
900255d6:	fb93 f3f8 	sdiv	r3, r3, r8
900255da:	441e      	add	r6, r3
900255dc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
900255e0:	441a      	add	r2, r3
900255e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
900255e6:	4419      	add	r1, r3
900255e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
900255ec:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
900255f0:	9303      	str	r3, [sp, #12]
900255f2:	4b89      	ldr	r3, [pc, #548]	; (90025818 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
900255f4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
900255f8:	6818      	ldr	r0, [r3, #0]
900255fa:	6803      	ldr	r3, [r0, #0]
900255fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
900255fe:	4798      	blx	r3
90025600:	4a86      	ldr	r2, [pc, #536]	; (9002581c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90025602:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
90025606:	2fff      	cmp	r7, #255	; 0xff
90025608:	8813      	ldrh	r3, [r2, #0]
9002560a:	4694      	mov	ip, r2
9002560c:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
90025610:	fb03 9404 	mla	r4, r3, r4, r9
90025614:	fb03 f30b 	mul.w	r3, r3, fp
90025618:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9002561c:	d071      	beq.n	90025702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
9002561e:	43f9      	mvns	r1, r7
90025620:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025624:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
90025628:	b2c9      	uxtb	r1, r1
9002562a:	e9cd 3207 	strd	r3, r2, [sp, #28]
9002562e:	9104      	str	r1, [sp, #16]
90025630:	9b07      	ldr	r3, [sp, #28]
90025632:	42a3      	cmp	r3, r4
90025634:	f240 80e7 	bls.w	90025806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90025638:	9b06      	ldr	r3, [sp, #24]
9002563a:	2b00      	cmp	r3, #0
9002563c:	d03d      	beq.n	900256ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
9002563e:	7831      	ldrb	r1, [r6, #0]
90025640:	4650      	mov	r0, sl
90025642:	9b04      	ldr	r3, [sp, #16]
90025644:	f106 0801 	add.w	r8, r6, #1
90025648:	f001 010f 	and.w	r1, r1, #15
9002564c:	8822      	ldrh	r2, [r4, #0]
9002564e:	9300      	str	r3, [sp, #0]
90025650:	463b      	mov	r3, r7
90025652:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90025656:	4429      	add	r1, r5
90025658:	f7ff ff56 	bl	90025508 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
9002565c:	9b03      	ldr	r3, [sp, #12]
9002565e:	f824 0b02 	strh.w	r0, [r4], #2
90025662:	f103 3bff 	add.w	fp, r3, #4294967295
90025666:	f1bb 0f01 	cmp.w	fp, #1
9002566a:	46a1      	mov	r9, r4
9002566c:	f104 0404 	add.w	r4, r4, #4
90025670:	dd27      	ble.n	900256c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90025672:	f898 1000 	ldrb.w	r1, [r8]
90025676:	4650      	mov	r0, sl
90025678:	9b04      	ldr	r3, [sp, #16]
9002567a:	f1ab 0b02 	sub.w	fp, fp, #2
9002567e:	0909      	lsrs	r1, r1, #4
90025680:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90025684:	9300      	str	r3, [sp, #0]
90025686:	463b      	mov	r3, r7
90025688:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9002568c:	4429      	add	r1, r5
9002568e:	f7ff ff3b 	bl	90025508 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90025692:	f824 0c04 	strh.w	r0, [r4, #-4]
90025696:	f818 1b01 	ldrb.w	r1, [r8], #1
9002569a:	4650      	mov	r0, sl
9002569c:	9b04      	ldr	r3, [sp, #16]
9002569e:	f001 010f 	and.w	r1, r1, #15
900256a2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
900256a6:	9300      	str	r3, [sp, #0]
900256a8:	463b      	mov	r3, r7
900256aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900256ae:	4429      	add	r1, r5
900256b0:	f7ff ff2a 	bl	90025508 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900256b4:	f824 0c02 	strh.w	r0, [r4, #-2]
900256b8:	e7d5      	b.n	90025666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900256ba:	46b0      	mov	r8, r6
900256bc:	f8dd b00c 	ldr.w	fp, [sp, #12]
900256c0:	e7d1      	b.n	90025666 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
900256c2:	d10f      	bne.n	900256e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
900256c4:	f898 1000 	ldrb.w	r1, [r8]
900256c8:	4650      	mov	r0, sl
900256ca:	9b04      	ldr	r3, [sp, #16]
900256cc:	0909      	lsrs	r1, r1, #4
900256ce:	f8b9 2000 	ldrh.w	r2, [r9]
900256d2:	9300      	str	r3, [sp, #0]
900256d4:	463b      	mov	r3, r7
900256d6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900256da:	4429      	add	r1, r5
900256dc:	f7ff ff14 	bl	90025508 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
900256e0:	f829 0b02 	strh.w	r0, [r9], #2
900256e4:	9b08      	ldr	r3, [sp, #32]
900256e6:	9a05      	ldr	r2, [sp, #20]
900256e8:	881c      	ldrh	r4, [r3, #0]
900256ea:	9b03      	ldr	r3, [sp, #12]
900256ec:	1ae4      	subs	r4, r4, r3
900256ee:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
900256f2:	4413      	add	r3, r2
900256f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
900256f6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
900256fa:	fb93 f3f2 	sdiv	r3, r3, r2
900256fe:	441e      	add	r6, r3
90025700:	e796      	b.n	90025630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
90025702:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90025706:	4f46      	ldr	r7, [pc, #280]	; (90025820 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90025708:	42a3      	cmp	r3, r4
9002570a:	d97c      	bls.n	90025806 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
9002570c:	9a06      	ldr	r2, [sp, #24]
9002570e:	2a00      	cmp	r2, #0
90025710:	d054      	beq.n	900257bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
90025712:	7830      	ldrb	r0, [r6, #0]
90025714:	1c71      	adds	r1, r6, #1
90025716:	f000 000f 	and.w	r0, r0, #15
9002571a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002571e:	eb05 0e00 	add.w	lr, r5, r0
90025722:	5c28      	ldrb	r0, [r5, r0]
90025724:	f89e 2002 	ldrb.w	r2, [lr, #2]
90025728:	f89e e001 	ldrb.w	lr, [lr, #1]
9002572c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90025730:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90025734:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
90025738:	ea42 020e 	orr.w	r2, r2, lr
9002573c:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90025740:	f824 2b02 	strh.w	r2, [r4], #2
90025744:	9a03      	ldr	r2, [sp, #12]
90025746:	f102 3eff 	add.w	lr, r2, #4294967295
9002574a:	f1be 0f01 	cmp.w	lr, #1
9002574e:	4620      	mov	r0, r4
90025750:	f104 0404 	add.w	r4, r4, #4
90025754:	dd36      	ble.n	900257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
90025756:	7808      	ldrb	r0, [r1, #0]
90025758:	f1ae 0e02 	sub.w	lr, lr, #2
9002575c:	0900      	lsrs	r0, r0, #4
9002575e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025762:	eb05 0a00 	add.w	sl, r5, r0
90025766:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002576a:	f89a 9002 	ldrb.w	r9, [sl, #2]
9002576e:	00d2      	lsls	r2, r2, #3
90025770:	ea07 2909 	and.w	r9, r7, r9, lsl #8
90025774:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
90025778:	ea49 0202 	orr.w	r2, r9, r2
9002577c:	f815 9000 	ldrb.w	r9, [r5, r0]
90025780:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
90025784:	f824 2c04 	strh.w	r2, [r4, #-4]
90025788:	f811 0b01 	ldrb.w	r0, [r1], #1
9002578c:	f000 000f 	and.w	r0, r0, #15
90025790:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90025794:	eb05 0a00 	add.w	sl, r5, r0
90025798:	f89a 2001 	ldrb.w	r2, [sl, #1]
9002579c:	f89a 9002 	ldrb.w	r9, [sl, #2]
900257a0:	00d2      	lsls	r2, r2, #3
900257a2:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900257a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
900257aa:	ea49 0202 	orr.w	r2, r9, r2
900257ae:	f815 9000 	ldrb.w	r9, [r5, r0]
900257b2:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900257b6:	f824 2c02 	strh.w	r2, [r4, #-2]
900257ba:	e7c6      	b.n	9002574a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900257bc:	4631      	mov	r1, r6
900257be:	f8dd e00c 	ldr.w	lr, [sp, #12]
900257c2:	e7c2      	b.n	9002574a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900257c4:	d111      	bne.n	900257ea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900257c6:	7809      	ldrb	r1, [r1, #0]
900257c8:	0909      	lsrs	r1, r1, #4
900257ca:	eb01 0141 	add.w	r1, r1, r1, lsl #1
900257ce:	186c      	adds	r4, r5, r1
900257d0:	5c69      	ldrb	r1, [r5, r1]
900257d2:	78a2      	ldrb	r2, [r4, #2]
900257d4:	7864      	ldrb	r4, [r4, #1]
900257d6:	ea07 2202 	and.w	r2, r7, r2, lsl #8
900257da:	00e4      	lsls	r4, r4, #3
900257dc:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
900257e0:	4322      	orrs	r2, r4
900257e2:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
900257e6:	f820 2b02 	strh.w	r2, [r0], #2
900257ea:	9a03      	ldr	r2, [sp, #12]
900257ec:	f8bc 4000 	ldrh.w	r4, [ip]
900257f0:	9905      	ldr	r1, [sp, #20]
900257f2:	1aa4      	subs	r4, r4, r2
900257f4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
900257f8:	440a      	add	r2, r1
900257fa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
900257fe:	fb92 f2f8 	sdiv	r2, r2, r8
90025802:	4416      	add	r6, r2
90025804:	e780      	b.n	90025708 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
90025806:	4b04      	ldr	r3, [pc, #16]	; (90025818 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90025808:	6818      	ldr	r0, [r3, #0]
9002580a:	6803      	ldr	r3, [r0, #0]
9002580c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
9002580e:	4798      	blx	r3
90025810:	b00f      	add	sp, #60	; 0x3c
90025812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025816:	bf00      	nop
90025818:	2402357c 	.word	0x2402357c
9002581c:	24023576 	.word	0x24023576
90025820:	fffff800 	.word	0xfffff800

90025824 <CRC_Lock>:
90025824:	4a20      	ldr	r2, [pc, #128]	; (900258a8 <CRC_Lock+0x84>)
90025826:	b530      	push	{r4, r5, lr}
90025828:	6813      	ldr	r3, [r2, #0]
9002582a:	f64f 74f0 	movw	r4, #65520	; 0xfff0
9002582e:	f24c 2540 	movw	r5, #49728	; 0xc240
90025832:	f023 0301 	bic.w	r3, r3, #1
90025836:	6013      	str	r3, [r2, #0]
90025838:	4b1c      	ldr	r3, [pc, #112]	; (900258ac <CRC_Lock+0x88>)
9002583a:	681a      	ldr	r2, [r3, #0]
9002583c:	4022      	ands	r2, r4
9002583e:	42aa      	cmp	r2, r5
90025840:	d005      	beq.n	9002584e <CRC_Lock+0x2a>
90025842:	681b      	ldr	r3, [r3, #0]
90025844:	f24c 2270 	movw	r2, #49776	; 0xc270
90025848:	4023      	ands	r3, r4
9002584a:	4293      	cmp	r3, r2
9002584c:	d124      	bne.n	90025898 <CRC_Lock+0x74>
9002584e:	4b18      	ldr	r3, [pc, #96]	; (900258b0 <CRC_Lock+0x8c>)
90025850:	681b      	ldr	r3, [r3, #0]
90025852:	bb0b      	cbnz	r3, 90025898 <CRC_Lock+0x74>
90025854:	4b17      	ldr	r3, [pc, #92]	; (900258b4 <CRC_Lock+0x90>)
90025856:	681a      	ldr	r2, [r3, #0]
90025858:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002585c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
90025860:	d00d      	beq.n	9002587e <CRC_Lock+0x5a>
90025862:	681a      	ldr	r2, [r3, #0]
90025864:	f240 4483 	movw	r4, #1155	; 0x483
90025868:	f3c2 020b 	ubfx	r2, r2, #0, #12
9002586c:	42a2      	cmp	r2, r4
9002586e:	d006      	beq.n	9002587e <CRC_Lock+0x5a>
90025870:	681b      	ldr	r3, [r3, #0]
90025872:	f240 4285 	movw	r2, #1157	; 0x485
90025876:	f3c3 030b 	ubfx	r3, r3, #0, #12
9002587a:	4293      	cmp	r3, r2
9002587c:	d10c      	bne.n	90025898 <CRC_Lock+0x74>
9002587e:	4b0e      	ldr	r3, [pc, #56]	; (900258b8 <CRC_Lock+0x94>)
90025880:	2201      	movs	r2, #1
90025882:	601a      	str	r2, [r3, #0]
90025884:	681a      	ldr	r2, [r3, #0]
90025886:	2a00      	cmp	r2, #0
90025888:	d1fc      	bne.n	90025884 <CRC_Lock+0x60>
9002588a:	4b0c      	ldr	r3, [pc, #48]	; (900258bc <CRC_Lock+0x98>)
9002588c:	6018      	str	r0, [r3, #0]
9002588e:	6818      	ldr	r0, [r3, #0]
90025890:	1a43      	subs	r3, r0, r1
90025892:	4258      	negs	r0, r3
90025894:	4158      	adcs	r0, r3
90025896:	bd30      	pop	{r4, r5, pc}
90025898:	4b09      	ldr	r3, [pc, #36]	; (900258c0 <CRC_Lock+0x9c>)
9002589a:	2201      	movs	r2, #1
9002589c:	601a      	str	r2, [r3, #0]
9002589e:	681a      	ldr	r2, [r3, #0]
900258a0:	2a00      	cmp	r2, #0
900258a2:	d1fc      	bne.n	9002589e <CRC_Lock+0x7a>
900258a4:	4b07      	ldr	r3, [pc, #28]	; (900258c4 <CRC_Lock+0xa0>)
900258a6:	e7f1      	b.n	9002588c <CRC_Lock+0x68>
900258a8:	e0002000 	.word	0xe0002000
900258ac:	e000ed00 	.word	0xe000ed00
900258b0:	e0042000 	.word	0xe0042000
900258b4:	5c001000 	.word	0x5c001000
900258b8:	58024c08 	.word	0x58024c08
900258bc:	58024c00 	.word	0x58024c00
900258c0:	40023008 	.word	0x40023008
900258c4:	40023000 	.word	0x40023000

900258c8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
900258c8:	6101      	str	r1, [r0, #16]
900258ca:	4770      	bx	lr

900258cc <_ZN8touchgfx8Gestures4tickEv>:
900258cc:	7b83      	ldrb	r3, [r0, #14]
900258ce:	b14b      	cbz	r3, 900258e4 <_ZN8touchgfx8Gestures4tickEv+0x18>
900258d0:	8903      	ldrh	r3, [r0, #8]
900258d2:	3301      	adds	r3, #1
900258d4:	b29b      	uxth	r3, r3
900258d6:	2b07      	cmp	r3, #7
900258d8:	8103      	strh	r3, [r0, #8]
900258da:	bf81      	itttt	hi
900258dc:	2300      	movhi	r3, #0
900258de:	8143      	strhhi	r3, [r0, #10]
900258e0:	8183      	strhhi	r3, [r0, #12]
900258e2:	7383      	strbhi	r3, [r0, #14]
900258e4:	4770      	bx	lr
	...

900258e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
900258e8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
900258ec:	4698      	mov	r8, r3
900258ee:	8883      	ldrh	r3, [r0, #4]
900258f0:	4604      	mov	r4, r0
900258f2:	4617      	mov	r7, r2
900258f4:	f8ad 3006 	strh.w	r3, [sp, #6]
900258f8:	eba8 0303 	sub.w	r3, r8, r3
900258fc:	4a19      	ldr	r2, [pc, #100]	; (90025964 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
900258fe:	460e      	mov	r6, r1
90025900:	b21b      	sxth	r3, r3
90025902:	88c1      	ldrh	r1, [r0, #6]
90025904:	9200      	str	r2, [sp, #0]
90025906:	2000      	movs	r0, #0
90025908:	2b00      	cmp	r3, #0
9002590a:	8aa2      	ldrh	r2, [r4, #20]
9002590c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
90025910:	bfb8      	it	lt
90025912:	425b      	neglt	r3, r3
90025914:	f88d 0004 	strb.w	r0, [sp, #4]
90025918:	f8ad 1008 	strh.w	r1, [sp, #8]
9002591c:	b21b      	sxth	r3, r3
9002591e:	f8ad 800a 	strh.w	r8, [sp, #10]
90025922:	f8ad 500c 	strh.w	r5, [sp, #12]
90025926:	4293      	cmp	r3, r2
90025928:	dc07      	bgt.n	9002593a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
9002592a:	1a69      	subs	r1, r5, r1
9002592c:	b209      	sxth	r1, r1
9002592e:	2900      	cmp	r1, #0
90025930:	bfb8      	it	lt
90025932:	4249      	neglt	r1, r1
90025934:	b209      	sxth	r1, r1
90025936:	428a      	cmp	r2, r1
90025938:	da10      	bge.n	9002595c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
9002593a:	6920      	ldr	r0, [r4, #16]
9002593c:	4669      	mov	r1, sp
9002593e:	eba8 0606 	sub.w	r6, r8, r6
90025942:	1bef      	subs	r7, r5, r7
90025944:	6803      	ldr	r3, [r0, #0]
90025946:	685b      	ldr	r3, [r3, #4]
90025948:	4798      	blx	r3
9002594a:	2300      	movs	r3, #0
9002594c:	2001      	movs	r0, #1
9002594e:	8166      	strh	r6, [r4, #10]
90025950:	8123      	strh	r3, [r4, #8]
90025952:	81a7      	strh	r7, [r4, #12]
90025954:	f8a4 8004 	strh.w	r8, [r4, #4]
90025958:	80e5      	strh	r5, [r4, #6]
9002595a:	73a0      	strb	r0, [r4, #14]
9002595c:	b004      	add	sp, #16
9002595e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025962:	bf00      	nop
90025964:	9002a860 	.word	0x9002a860

90025968 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
90025968:	b5f0      	push	{r4, r5, r6, r7, lr}
9002596a:	461e      	mov	r6, r3
9002596c:	1e4b      	subs	r3, r1, #1
9002596e:	b085      	sub	sp, #20
90025970:	4604      	mov	r4, r0
90025972:	2b01      	cmp	r3, #1
90025974:	460d      	mov	r5, r1
90025976:	4617      	mov	r7, r2
90025978:	d84b      	bhi.n	90025a12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
9002597a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
9002597e:	1cd3      	adds	r3, r2, #3
90025980:	b29b      	uxth	r3, r3
90025982:	2b06      	cmp	r3, #6
90025984:	d916      	bls.n	900259b4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
90025986:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 90025a28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002598a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9002598e:	f8cd c004 	str.w	ip, [sp, #4]
90025992:	f04f 0c00 	mov.w	ip, #0
90025996:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002599a:	6900      	ldr	r0, [r0, #16]
9002599c:	f8ad 100c 	strh.w	r1, [sp, #12]
900259a0:	a901      	add	r1, sp, #4
900259a2:	f88d c008 	strb.w	ip, [sp, #8]
900259a6:	f8ad 200a 	strh.w	r2, [sp, #10]
900259aa:	f8ad 300e 	strh.w	r3, [sp, #14]
900259ae:	6803      	ldr	r3, [r0, #0]
900259b0:	689b      	ldr	r3, [r3, #8]
900259b2:	4798      	blx	r3
900259b4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900259b8:	1cd3      	adds	r3, r2, #3
900259ba:	b29b      	uxth	r3, r3
900259bc:	2b06      	cmp	r3, #6
900259be:	d916      	bls.n	900259ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
900259c0:	f8df c064 	ldr.w	ip, [pc, #100]	; 90025a28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
900259c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
900259c8:	f8cd c004 	str.w	ip, [sp, #4]
900259cc:	f04f 0c01 	mov.w	ip, #1
900259d0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
900259d4:	6920      	ldr	r0, [r4, #16]
900259d6:	f8ad 100c 	strh.w	r1, [sp, #12]
900259da:	a901      	add	r1, sp, #4
900259dc:	f88d c008 	strb.w	ip, [sp, #8]
900259e0:	f8ad 200a 	strh.w	r2, [sp, #10]
900259e4:	f8ad 300e 	strh.w	r3, [sp, #14]
900259e8:	6803      	ldr	r3, [r0, #0]
900259ea:	689b      	ldr	r3, [r3, #8]
900259ec:	4798      	blx	r3
900259ee:	4b0d      	ldr	r3, [pc, #52]	; (90025a24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
900259f0:	a901      	add	r1, sp, #4
900259f2:	6920      	ldr	r0, [r4, #16]
900259f4:	9301      	str	r3, [sp, #4]
900259f6:	2300      	movs	r3, #0
900259f8:	f88d 5008 	strb.w	r5, [sp, #8]
900259fc:	f8ad 700a 	strh.w	r7, [sp, #10]
90025a00:	f8ad 600c 	strh.w	r6, [sp, #12]
90025a04:	f8ad 300e 	strh.w	r3, [sp, #14]
90025a08:	6803      	ldr	r3, [r0, #0]
90025a0a:	681b      	ldr	r3, [r3, #0]
90025a0c:	4798      	blx	r3
90025a0e:	b005      	add	sp, #20
90025a10:	bdf0      	pop	{r4, r5, r6, r7, pc}
90025a12:	2900      	cmp	r1, #0
90025a14:	d1eb      	bne.n	900259ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025a16:	80a2      	strh	r2, [r4, #4]
90025a18:	80c6      	strh	r6, [r0, #6]
90025a1a:	60a1      	str	r1, [r4, #8]
90025a1c:	81a1      	strh	r1, [r4, #12]
90025a1e:	73a1      	strb	r1, [r4, #14]
90025a20:	e7e5      	b.n	900259ee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90025a22:	bf00      	nop
90025a24:	9002a84c 	.word	0x9002a84c
90025a28:	9002a874 	.word	0x9002a874

90025a2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
90025a2c:	10c9      	asrs	r1, r1, #3
90025a2e:	2900      	cmp	r1, #0
90025a30:	bfb8      	it	lt
90025a32:	4249      	neglt	r1, r1
90025a34:	2801      	cmp	r0, #1
90025a36:	d108      	bne.n	90025a4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025a38:	f3c1 0008 	ubfx	r0, r1, #0, #9
90025a3c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
90025a40:	4601      	mov	r1, r0
90025a42:	dd02      	ble.n	90025a4a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
90025a44:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
90025a48:	4770      	bx	lr
90025a4a:	29ff      	cmp	r1, #255	; 0xff
90025a4c:	bfa8      	it	ge
90025a4e:	21ff      	movge	r1, #255	; 0xff
90025a50:	4608      	mov	r0, r1
90025a52:	4770      	bx	lr

90025a54 <_ZN8touchgfx10Rasterizer6lineToEii>:
90025a54:	b410      	push	{r4}
90025a56:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90025a5a:	429c      	cmp	r4, r3
90025a5c:	d803      	bhi.n	90025a66 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
90025a5e:	f85d 4b04 	ldr.w	r4, [sp], #4
90025a62:	f7ed bb99 	b.w	90013198 <_ZN8touchgfx7Outline6lineToEii>
90025a66:	f85d 4b04 	ldr.w	r4, [sp], #4
90025a6a:	4770      	bx	lr

90025a6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
90025a6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025a70:	b08b      	sub	sp, #44	; 0x2c
90025a72:	4606      	mov	r6, r0
90025a74:	468a      	mov	sl, r1
90025a76:	e9cd 2306 	strd	r2, r3, [sp, #24]
90025a7a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
90025a7e:	9308      	str	r3, [sp, #32]
90025a80:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
90025a84:	9309      	str	r3, [sp, #36]	; 0x24
90025a86:	f7ed fcf2 	bl	9001346e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90025a8a:	68b5      	ldr	r5, [r6, #8]
90025a8c:	4604      	mov	r4, r0
90025a8e:	2d00      	cmp	r5, #0
90025a90:	d044      	beq.n	90025b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025a92:	6873      	ldr	r3, [r6, #4]
90025a94:	42ab      	cmp	r3, r5
90025a96:	d33d      	bcc.n	90025b14 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90025a98:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90025a9c:	f04f 0800 	mov.w	r8, #0
90025aa0:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
90025aa4:	eb02 0b03 	add.w	fp, r2, r3
90025aa8:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90025aac:	fb02 1203 	mla	r2, r2, r3, r1
90025ab0:	9205      	str	r2, [sp, #20]
90025ab2:	1e6a      	subs	r2, r5, #1
90025ab4:	9204      	str	r2, [sp, #16]
90025ab6:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90025aba:	f9b4 7000 	ldrsh.w	r7, [r4]
90025abe:	454b      	cmp	r3, r9
90025ac0:	463a      	mov	r2, r7
90025ac2:	d008      	beq.n	90025ad6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
90025ac4:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
90025ac8:	eb03 0b09 	add.w	fp, r3, r9
90025acc:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90025ad0:	fb03 1309 	mla	r3, r3, r9, r1
90025ad4:	9305      	str	r3, [sp, #20]
90025ad6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90025ada:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90025ade:	4498      	add	r8, r3
90025ae0:	9b04      	ldr	r3, [sp, #16]
90025ae2:	3b01      	subs	r3, #1
90025ae4:	9304      	str	r3, [sp, #16]
90025ae6:	9b04      	ldr	r3, [sp, #16]
90025ae8:	3301      	adds	r3, #1
90025aea:	d015      	beq.n	90025b18 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90025aec:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90025af0:	42bb      	cmp	r3, r7
90025af2:	d117      	bne.n	90025b24 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
90025af4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90025af8:	9b04      	ldr	r3, [sp, #16]
90025afa:	4548      	cmp	r0, r9
90025afc:	f103 33ff 	add.w	r3, r3, #4294967295
90025b00:	d17d      	bne.n	90025bfe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
90025b02:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
90025b06:	4401      	add	r1, r0
90025b08:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90025b0c:	4480      	add	r8, r0
90025b0e:	e7e9      	b.n	90025ae4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90025b10:	461f      	mov	r7, r3
90025b12:	e042      	b.n	90025b9a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
90025b14:	2000      	movs	r0, #0
90025b16:	e002      	b.n	90025b1e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90025b18:	2900      	cmp	r1, #0
90025b1a:	d16d      	bne.n	90025bf8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90025b1c:	2001      	movs	r0, #1
90025b1e:	b00b      	add	sp, #44	; 0x2c
90025b20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025b24:	b379      	cbz	r1, 90025b86 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
90025b26:	2f00      	cmp	r7, #0
90025b28:	db29      	blt.n	90025b7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025b2a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90025b2e:	42bb      	cmp	r3, r7
90025b30:	dd25      	ble.n	90025b7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025b32:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
90025b36:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90025b3a:	f7ff ff77 	bl	90025a2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025b3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025b40:	fb10 f003 	smulbb	r0, r0, r3
90025b44:	b280      	uxth	r0, r0
90025b46:	1c41      	adds	r1, r0, #1
90025b48:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025b4c:	1209      	asrs	r1, r1, #8
90025b4e:	f011 0fff 	tst.w	r1, #255	; 0xff
90025b52:	d014      	beq.n	90025b7e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
90025b54:	b2c9      	uxtb	r1, r1
90025b56:	9808      	ldr	r0, [sp, #32]
90025b58:	b2ba      	uxth	r2, r7
90025b5a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025b5c:	9102      	str	r1, [sp, #8]
90025b5e:	2101      	movs	r1, #1
90025b60:	4413      	add	r3, r2
90025b62:	4402      	add	r2, r0
90025b64:	9101      	str	r1, [sp, #4]
90025b66:	fa0f f18b 	sxth.w	r1, fp
90025b6a:	f8da 0000 	ldr.w	r0, [sl]
90025b6e:	b21b      	sxth	r3, r3
90025b70:	9100      	str	r1, [sp, #0]
90025b72:	b212      	sxth	r2, r2
90025b74:	6941      	ldr	r1, [r0, #20]
90025b76:	4650      	mov	r0, sl
90025b78:	460d      	mov	r5, r1
90025b7a:	9905      	ldr	r1, [sp, #20]
90025b7c:	47a8      	blx	r5
90025b7e:	9b04      	ldr	r3, [sp, #16]
90025b80:	1c7a      	adds	r2, r7, #1
90025b82:	3301      	adds	r3, #1
90025b84:	d0ca      	beq.n	90025b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025b86:	f9b4 7000 	ldrsh.w	r7, [r4]
90025b8a:	1abb      	subs	r3, r7, r2
90025b8c:	2b00      	cmp	r3, #0
90025b8e:	dd31      	ble.n	90025bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025b90:	2a00      	cmp	r2, #0
90025b92:	dabd      	bge.n	90025b10 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
90025b94:	2f00      	cmp	r7, #0
90025b96:	dd2d      	ble.n	90025bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025b98:	2200      	movs	r2, #0
90025b9a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
90025b9e:	19d1      	adds	r1, r2, r7
90025ba0:	4299      	cmp	r1, r3
90025ba2:	db02      	blt.n	90025baa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
90025ba4:	1a9f      	subs	r7, r3, r2
90025ba6:	2f00      	cmp	r7, #0
90025ba8:	dd24      	ble.n	90025bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025baa:	ea4f 1188 	mov.w	r1, r8, lsl #6
90025bae:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
90025bb2:	f7ff ff3b 	bl	90025a2c <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
90025bb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90025bb8:	fb10 f003 	smulbb	r0, r0, r3
90025bbc:	b280      	uxth	r0, r0
90025bbe:	1c41      	adds	r1, r0, #1
90025bc0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90025bc4:	1209      	asrs	r1, r1, #8
90025bc6:	f011 0fff 	tst.w	r1, #255	; 0xff
90025bca:	d013      	beq.n	90025bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025bcc:	b292      	uxth	r2, r2
90025bce:	9808      	ldr	r0, [sp, #32]
90025bd0:	b2c9      	uxtb	r1, r1
90025bd2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
90025bd4:	b23f      	sxth	r7, r7
90025bd6:	4413      	add	r3, r2
90025bd8:	9102      	str	r1, [sp, #8]
90025bda:	4402      	add	r2, r0
90025bdc:	fa0f f18b 	sxth.w	r1, fp
90025be0:	f8da 0000 	ldr.w	r0, [sl]
90025be4:	b21b      	sxth	r3, r3
90025be6:	9100      	str	r1, [sp, #0]
90025be8:	b212      	sxth	r2, r2
90025bea:	9701      	str	r7, [sp, #4]
90025bec:	9905      	ldr	r1, [sp, #20]
90025bee:	6947      	ldr	r7, [r0, #20]
90025bf0:	4650      	mov	r0, sl
90025bf2:	47b8      	blx	r7
90025bf4:	464b      	mov	r3, r9
90025bf6:	e75e      	b.n	90025ab6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90025bf8:	2f00      	cmp	r7, #0
90025bfa:	da96      	bge.n	90025b2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90025bfc:	e78e      	b.n	90025b1c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90025bfe:	2900      	cmp	r1, #0
90025c00:	d0f8      	beq.n	90025bf4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90025c02:	e790      	b.n	90025b26 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

90025c04 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
90025c04:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025c08:	461e      	mov	r6, r3
90025c0a:	4b36      	ldr	r3, [pc, #216]	; (90025ce4 <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90025c0c:	2500      	movs	r5, #0
90025c0e:	f100 0814 	add.w	r8, r0, #20
90025c12:	4604      	mov	r4, r0
90025c14:	4617      	mov	r7, r2
90025c16:	e9c0 3100 	strd	r3, r1, [r0]
90025c1a:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90025c1e:	8185      	strh	r5, [r0, #12]
90025c20:	8103      	strh	r3, [r0, #8]
90025c22:	f89d 3020 	ldrb.w	r3, [sp, #32]
90025c26:	81c5      	strh	r5, [r0, #14]
90025c28:	7283      	strb	r3, [r0, #10]
90025c2a:	8205      	strh	r5, [r0, #16]
90025c2c:	8245      	strh	r5, [r0, #18]
90025c2e:	4640      	mov	r0, r8
90025c30:	f7ec fdf8 	bl	90012824 <_ZN8touchgfx7OutlineC1Ev>
90025c34:	f884 5044 	strb.w	r5, [r4, #68]	; 0x44
90025c38:	f8a4 5046 	strh.w	r5, [r4, #70]	; 0x46
90025c3c:	466b      	mov	r3, sp
90025c3e:	f8a4 5048 	strh.w	r5, [r4, #72]	; 0x48
90025c42:	f8a4 504a 	strh.w	r5, [r4, #74]	; 0x4a
90025c46:	f884 505c 	strb.w	r5, [r4, #92]	; 0x5c
90025c4a:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
90025c4e:	f8a4 5068 	strh.w	r5, [r4, #104]	; 0x68
90025c52:	e9c4 5513 	strd	r5, r5, [r4, #76]	; 0x4c
90025c56:	e9c4 5515 	strd	r5, r5, [r4, #84]	; 0x54
90025c5a:	e9c4 5518 	strd	r5, r5, [r4, #96]	; 0x60
90025c5e:	e9c4 551b 	strd	r5, r5, [r4, #108]	; 0x6c
90025c62:	6830      	ldr	r0, [r6, #0]
90025c64:	6871      	ldr	r1, [r6, #4]
90025c66:	8872      	ldrh	r2, [r6, #2]
90025c68:	8835      	ldrh	r5, [r6, #0]
90025c6a:	c303      	stmia	r3!, {r0, r1}
90025c6c:	887b      	ldrh	r3, [r7, #2]
90025c6e:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
90025c72:	4413      	add	r3, r2
90025c74:	883a      	ldrh	r2, [r7, #0]
90025c76:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
90025c7a:	442a      	add	r2, r5
90025c7c:	81e3      	strh	r3, [r4, #14]
90025c7e:	8220      	strh	r0, [r4, #16]
90025c80:	4668      	mov	r0, sp
90025c82:	81a2      	strh	r2, [r4, #12]
90025c84:	8261      	strh	r1, [r4, #18]
90025c86:	4639      	mov	r1, r7
90025c88:	f7ee ffd4 	bl	90014c34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90025c8c:	f104 000c 	add.w	r0, r4, #12
90025c90:	f7ee ff8c 	bl	90014bac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90025c94:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025c98:	f8bd 2000 	ldrh.w	r2, [sp]
90025c9c:	4640      	mov	r0, r8
90025c9e:	f8a4 3048 	strh.w	r3, [r4, #72]	; 0x48
90025ca2:	f8a4 2046 	strh.w	r2, [r4, #70]	; 0x46
90025ca6:	f7ec fda1 	bl	900127ec <_ZN8touchgfx7Outline5resetEv>
90025caa:	f9bd 3000 	ldrsh.w	r3, [sp]
90025cae:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
90025cb2:	4620      	mov	r0, r4
90025cb4:	015b      	lsls	r3, r3, #5
90025cb6:	64e3      	str	r3, [r4, #76]	; 0x4c
90025cb8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90025cbc:	015b      	lsls	r3, r3, #5
90025cbe:	6523      	str	r3, [r4, #80]	; 0x50
90025cc0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90025cc4:	015b      	lsls	r3, r3, #5
90025cc6:	6563      	str	r3, [r4, #84]	; 0x54
90025cc8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90025ccc:	015b      	lsls	r3, r3, #5
90025cce:	65a3      	str	r3, [r4, #88]	; 0x58
90025cd0:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
90025cd4:	f8a4 304a 	strh.w	r3, [r4, #74]	; 0x4a
90025cd8:	e9c4 320f 	strd	r3, r2, [r4, #60]	; 0x3c
90025cdc:	b002      	add	sp, #8
90025cde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025ce2:	bf00      	nop
90025ce4:	9002ab98 	.word	0x9002ab98

90025ce8 <_ZN8touchgfx6Canvas5closeEv>:
90025ce8:	b538      	push	{r3, r4, r5, lr}
90025cea:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025cee:	4604      	mov	r4, r0
90025cf0:	b193      	cbz	r3, 90025d18 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025cf2:	f890 3068 	ldrb.w	r3, [r0, #104]	; 0x68
90025cf6:	f890 2069 	ldrb.w	r2, [r0, #105]	; 0x69
90025cfa:	4213      	tst	r3, r2
90025cfc:	d10c      	bne.n	90025d18 <_ZN8touchgfx6Canvas5closeEv+0x30>
90025cfe:	f100 0514 	add.w	r5, r0, #20
90025d02:	b123      	cbz	r3, 90025d0e <_ZN8touchgfx6Canvas5closeEv+0x26>
90025d04:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	; 0x60
90025d08:	4628      	mov	r0, r5
90025d0a:	f7ff fea3 	bl	90025a54 <_ZN8touchgfx10Rasterizer6lineToEii>
90025d0e:	4628      	mov	r0, r5
90025d10:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	; 0x6c
90025d14:	f7ff fe9e 	bl	90025a54 <_ZN8touchgfx10Rasterizer6lineToEii>
90025d18:	2300      	movs	r3, #0
90025d1a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025d1e:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
90025d22:	4298      	cmp	r0, r3
90025d24:	bf34      	ite	cc
90025d26:	2000      	movcc	r0, #0
90025d28:	2001      	movcs	r0, #1
90025d2a:	bd38      	pop	{r3, r4, r5, pc}

90025d2c <_ZN8touchgfx6Canvas6renderEh>:
90025d2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90025d30:	7a85      	ldrb	r5, [r0, #10]
90025d32:	4604      	mov	r4, r0
90025d34:	4369      	muls	r1, r5
90025d36:	1c4d      	adds	r5, r1, #1
90025d38:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90025d3c:	122d      	asrs	r5, r5, #8
90025d3e:	f000 8098 	beq.w	90025e72 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025d42:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
90025d46:	2b00      	cmp	r3, #0
90025d48:	f000 8093 	beq.w	90025e72 <_ZN8touchgfx6Canvas6renderEh+0x146>
90025d4c:	f7ff ffcc 	bl	90025ce8 <_ZN8touchgfx6Canvas5closeEv>
90025d50:	4607      	mov	r7, r0
90025d52:	2800      	cmp	r0, #0
90025d54:	d045      	beq.n	90025de2 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025d56:	6860      	ldr	r0, [r4, #4]
90025d58:	4e47      	ldr	r6, [pc, #284]	; (90025e78 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
90025d5a:	6803      	ldr	r3, [r0, #0]
90025d5c:	6837      	ldr	r7, [r6, #0]
90025d5e:	689b      	ldr	r3, [r3, #8]
90025d60:	4798      	blx	r3
90025d62:	4601      	mov	r1, r0
90025d64:	4638      	mov	r0, r7
90025d66:	f7eb f8d7 	bl	90010f18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
90025d6a:	4607      	mov	r7, r0
90025d6c:	f7ea fc98 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90025d70:	6803      	ldr	r3, [r0, #0]
90025d72:	6b1b      	ldr	r3, [r3, #48]	; 0x30
90025d74:	4798      	blx	r3
90025d76:	4680      	mov	r8, r0
90025d78:	f7ea fc92 	bl	900106a0 <_ZN8touchgfx3HAL3lcdEv>
90025d7c:	6803      	ldr	r3, [r0, #0]
90025d7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025d80:	4798      	blx	r3
90025d82:	280b      	cmp	r0, #11
90025d84:	d85a      	bhi.n	90025e3c <_ZN8touchgfx6Canvas6renderEh+0x110>
90025d86:	e8df f000 	tbb	[pc, r0]
90025d8a:	5b50      	.short	0x5b50
90025d8c:	3059066b 	.word	0x3059066b
90025d90:	64646440 	.word	0x64646440
90025d94:	6464      	.short	0x6464
90025d96:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025d9a:	2208      	movs	r2, #8
90025d9c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025da0:	fb91 f2f2 	sdiv	r2, r1, r2
90025da4:	fb08 2303 	mla	r3, r8, r3, r2
90025da8:	441f      	add	r7, r3
90025daa:	424b      	negs	r3, r1
90025dac:	f001 0107 	and.w	r1, r1, #7
90025db0:	f003 0307 	and.w	r3, r3, #7
90025db4:	bf58      	it	pl
90025db6:	4259      	negpl	r1, r3
90025db8:	b2c9      	uxtb	r1, r1
90025dba:	b2ed      	uxtb	r5, r5
90025dbc:	463a      	mov	r2, r7
90025dbe:	fa0f f388 	sxth.w	r3, r8
90025dc2:	f104 0014 	add.w	r0, r4, #20
90025dc6:	e9cd 1500 	strd	r1, r5, [sp]
90025dca:	6861      	ldr	r1, [r4, #4]
90025dcc:	f7ff fe4e 	bl	90025a6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90025dd0:	4607      	mov	r7, r0
90025dd2:	6860      	ldr	r0, [r4, #4]
90025dd4:	6803      	ldr	r3, [r0, #0]
90025dd6:	691b      	ldr	r3, [r3, #16]
90025dd8:	4798      	blx	r3
90025dda:	6830      	ldr	r0, [r6, #0]
90025ddc:	6803      	ldr	r3, [r0, #0]
90025dde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90025de0:	4798      	blx	r3
90025de2:	4638      	mov	r0, r7
90025de4:	b002      	add	sp, #8
90025de6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90025dea:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025dee:	2204      	movs	r2, #4
90025df0:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025df4:	fb91 f2f2 	sdiv	r2, r1, r2
90025df8:	fb08 2303 	mla	r3, r8, r3, r2
90025dfc:	441f      	add	r7, r3
90025dfe:	424b      	negs	r3, r1
90025e00:	f001 0103 	and.w	r1, r1, #3
90025e04:	f003 0303 	and.w	r3, r3, #3
90025e08:	e7d4      	b.n	90025db4 <_ZN8touchgfx6Canvas6renderEh+0x88>
90025e0a:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90025e0e:	2202      	movs	r2, #2
90025e10:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e14:	2900      	cmp	r1, #0
90025e16:	fb91 f2f2 	sdiv	r2, r1, r2
90025e1a:	f001 0101 	and.w	r1, r1, #1
90025e1e:	fb08 2303 	mla	r3, r8, r3, r2
90025e22:	bfb8      	it	lt
90025e24:	4249      	neglt	r1, r1
90025e26:	441f      	add	r7, r3
90025e28:	e7c6      	b.n	90025db8 <_ZN8touchgfx6Canvas6renderEh+0x8c>
90025e2a:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e2e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025e32:	fb08 f303 	mul.w	r3, r8, r3
90025e36:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90025e3a:	441f      	add	r7, r3
90025e3c:	2100      	movs	r1, #0
90025e3e:	e7bc      	b.n	90025dba <_ZN8touchgfx6Canvas6renderEh+0x8e>
90025e40:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e44:	2103      	movs	r1, #3
90025e46:	fb08 f203 	mul.w	r2, r8, r3
90025e4a:	89a3      	ldrh	r3, [r4, #12]
90025e4c:	fb13 2301 	smlabb	r3, r3, r1, r2
90025e50:	e7f3      	b.n	90025e3a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025e52:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e56:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025e5a:	fb08 2303 	mla	r3, r8, r3, r2
90025e5e:	e7ec      	b.n	90025e3a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025e60:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90025e64:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90025e68:	fb08 f303 	mul.w	r3, r8, r3
90025e6c:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90025e70:	e7e3      	b.n	90025e3a <_ZN8touchgfx6Canvas6renderEh+0x10e>
90025e72:	2701      	movs	r7, #1
90025e74:	e7b5      	b.n	90025de2 <_ZN8touchgfx6Canvas6renderEh+0xb6>
90025e76:	bf00      	nop
90025e78:	2402357c 	.word	0x2402357c

90025e7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
90025e7c:	4b06      	ldr	r3, [pc, #24]	; (90025e98 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
90025e7e:	b510      	push	{r4, lr}
90025e80:	781b      	ldrb	r3, [r3, #0]
90025e82:	2b01      	cmp	r3, #1
90025e84:	d107      	bne.n	90025e96 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
90025e86:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90025e8a:	680b      	ldr	r3, [r1, #0]
90025e8c:	6814      	ldr	r4, [r2, #0]
90025e8e:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
90025e92:	6013      	str	r3, [r2, #0]
90025e94:	600c      	str	r4, [r1, #0]
90025e96:	bd10      	pop	{r4, pc}
90025e98:	24023574 	.word	0x24023574

90025e9c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90025e9c:	b513      	push	{r0, r1, r4, lr}
90025e9e:	f890 305c 	ldrb.w	r3, [r0, #92]	; 0x5c
90025ea2:	4604      	mov	r4, r0
90025ea4:	e9cd 2100 	strd	r2, r1, [sp]
90025ea8:	b9a3      	cbnz	r3, 90025ed4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90025eaa:	466a      	mov	r2, sp
90025eac:	a901      	add	r1, sp, #4
90025eae:	4620      	mov	r0, r4
90025eb0:	f7ff ffe4 	bl	90025e7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025eb4:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025eb6:	9901      	ldr	r1, [sp, #4]
90025eb8:	9a00      	ldr	r2, [sp, #0]
90025eba:	1ac9      	subs	r1, r1, r3
90025ebc:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025ebe:	1ad2      	subs	r2, r2, r3
90025ec0:	9101      	str	r1, [sp, #4]
90025ec2:	2a00      	cmp	r2, #0
90025ec4:	9200      	str	r2, [sp, #0]
90025ec6:	da0b      	bge.n	90025ee0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90025ec8:	2301      	movs	r3, #1
90025eca:	2900      	cmp	r1, #0
90025ecc:	da0e      	bge.n	90025eec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90025ece:	f043 0304 	orr.w	r3, r3, #4
90025ed2:	e013      	b.n	90025efc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
90025ed4:	f7ff ff08 	bl	90025ce8 <_ZN8touchgfx6Canvas5closeEv>
90025ed8:	2800      	cmp	r0, #0
90025eda:	d1e6      	bne.n	90025eaa <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90025edc:	b002      	add	sp, #8
90025ede:	bd10      	pop	{r4, pc}
90025ee0:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025ee2:	429a      	cmp	r2, r3
90025ee4:	bfac      	ite	ge
90025ee6:	2302      	movge	r3, #2
90025ee8:	2300      	movlt	r3, #0
90025eea:	e7ee      	b.n	90025eca <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90025eec:	6d60      	ldr	r0, [r4, #84]	; 0x54
90025eee:	4281      	cmp	r1, r0
90025ef0:	bfac      	ite	ge
90025ef2:	2008      	movge	r0, #8
90025ef4:	2000      	movlt	r0, #0
90025ef6:	4318      	orrs	r0, r3
90025ef8:	b2c3      	uxtb	r3, r0
90025efa:	b158      	cbz	r0, 90025f14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90025efc:	2200      	movs	r2, #0
90025efe:	f884 205c 	strb.w	r2, [r4, #92]	; 0x5c
90025f02:	9901      	ldr	r1, [sp, #4]
90025f04:	9a00      	ldr	r2, [sp, #0]
90025f06:	66e1      	str	r1, [r4, #108]	; 0x6c
90025f08:	6722      	str	r2, [r4, #112]	; 0x70
90025f0a:	f884 3068 	strb.w	r3, [r4, #104]	; 0x68
90025f0e:	e9c4 1218 	strd	r1, r2, [r4, #96]	; 0x60
90025f12:	e7e3      	b.n	90025edc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
90025f14:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025f18:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025f1c:	4298      	cmp	r0, r3
90025f1e:	d803      	bhi.n	90025f28 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90025f20:	f104 0014 	add.w	r0, r4, #20
90025f24:	f7ed f952 	bl	900131cc <_ZN8touchgfx7Outline6moveToEii>
90025f28:	2301      	movs	r3, #1
90025f2a:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025f2e:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025f32:	2300      	movs	r3, #0
90025f34:	e7e5      	b.n	90025f02 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

90025f36 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
90025f36:	b573      	push	{r0, r1, r4, r5, r6, lr}
90025f38:	ab02      	add	r3, sp, #8
90025f3a:	4604      	mov	r4, r0
90025f3c:	9101      	str	r1, [sp, #4]
90025f3e:	a901      	add	r1, sp, #4
90025f40:	f843 2d08 	str.w	r2, [r3, #-8]!
90025f44:	461a      	mov	r2, r3
90025f46:	f7ff ff99 	bl	90025e7c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
90025f4a:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
90025f4c:	9901      	ldr	r1, [sp, #4]
90025f4e:	9a00      	ldr	r2, [sp, #0]
90025f50:	1ac9      	subs	r1, r1, r3
90025f52:	6d23      	ldr	r3, [r4, #80]	; 0x50
90025f54:	1ad2      	subs	r2, r2, r3
90025f56:	9101      	str	r1, [sp, #4]
90025f58:	2a00      	cmp	r2, #0
90025f5a:	9200      	str	r2, [sp, #0]
90025f5c:	db1c      	blt.n	90025f98 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
90025f5e:	6da3      	ldr	r3, [r4, #88]	; 0x58
90025f60:	429a      	cmp	r2, r3
90025f62:	bfac      	ite	ge
90025f64:	2002      	movge	r0, #2
90025f66:	2000      	movlt	r0, #0
90025f68:	2900      	cmp	r1, #0
90025f6a:	db17      	blt.n	90025f9c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
90025f6c:	6d63      	ldr	r3, [r4, #84]	; 0x54
90025f6e:	4299      	cmp	r1, r3
90025f70:	bfac      	ite	ge
90025f72:	2308      	movge	r3, #8
90025f74:	2300      	movlt	r3, #0
90025f76:	4303      	orrs	r3, r0
90025f78:	f894 0068 	ldrb.w	r0, [r4, #104]	; 0x68
90025f7c:	b2dd      	uxtb	r5, r3
90025f7e:	b978      	cbnz	r0, 90025fa0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
90025f80:	f104 0014 	add.w	r0, r4, #20
90025f84:	f7ff fd66 	bl	90025a54 <_ZN8touchgfx10Rasterizer6lineToEii>
90025f88:	9b01      	ldr	r3, [sp, #4]
90025f8a:	f884 5068 	strb.w	r5, [r4, #104]	; 0x68
90025f8e:	6623      	str	r3, [r4, #96]	; 0x60
90025f90:	9b00      	ldr	r3, [sp, #0]
90025f92:	6663      	str	r3, [r4, #100]	; 0x64
90025f94:	b002      	add	sp, #8
90025f96:	bd70      	pop	{r4, r5, r6, pc}
90025f98:	2001      	movs	r0, #1
90025f9a:	e7e5      	b.n	90025f68 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90025f9c:	2304      	movs	r3, #4
90025f9e:	e7ea      	b.n	90025f76 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90025fa0:	b113      	cbz	r3, 90025fa8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
90025fa2:	ea10 0305 	ands.w	r3, r0, r5
90025fa6:	d11c      	bne.n	90025fe2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90025fa8:	f894 305c 	ldrb.w	r3, [r4, #92]	; 0x5c
90025fac:	f104 0614 	add.w	r6, r4, #20
90025fb0:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	; 0x60
90025fb4:	b98b      	cbnz	r3, 90025fda <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
90025fb6:	f884 0069 	strb.w	r0, [r4, #105]	; 0x69
90025fba:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90025fbe:	4298      	cmp	r0, r3
90025fc0:	d802      	bhi.n	90025fc8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
90025fc2:	4630      	mov	r0, r6
90025fc4:	f7ed f902 	bl	900131cc <_ZN8touchgfx7Outline6moveToEii>
90025fc8:	2301      	movs	r3, #1
90025fca:	f884 305c 	strb.w	r3, [r4, #92]	; 0x5c
90025fce:	f884 305d 	strb.w	r3, [r4, #93]	; 0x5d
90025fd2:	4630      	mov	r0, r6
90025fd4:	e9dd 2100 	ldrd	r2, r1, [sp]
90025fd8:	e7d4      	b.n	90025f84 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90025fda:	4630      	mov	r0, r6
90025fdc:	f7ff fd3a 	bl	90025a54 <_ZN8touchgfx10Rasterizer6lineToEii>
90025fe0:	e7f7      	b.n	90025fd2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
90025fe2:	461d      	mov	r5, r3
90025fe4:	e7d0      	b.n	90025f88 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90025fe8 <_ZN8touchgfx6CanvasD1Ev>:
90025fe8:	4b04      	ldr	r3, [pc, #16]	; (90025ffc <_ZN8touchgfx6CanvasD1Ev+0x14>)
90025fea:	b510      	push	{r4, lr}
90025fec:	4604      	mov	r4, r0
90025fee:	f840 3b14 	str.w	r3, [r0], #20
90025ff2:	f7ec fbf3 	bl	900127dc <_ZN8touchgfx7OutlineD1Ev>
90025ff6:	4620      	mov	r0, r4
90025ff8:	bd10      	pop	{r4, pc}
90025ffa:	bf00      	nop
90025ffc:	9002ab98 	.word	0x9002ab98

90026000 <_ZN8touchgfx6CanvasD0Ev>:
90026000:	b510      	push	{r4, lr}
90026002:	4604      	mov	r4, r0
90026004:	f7ff fff0 	bl	90025fe8 <_ZN8touchgfx6CanvasD1Ev>
90026008:	2174      	movs	r1, #116	; 0x74
9002600a:	4620      	mov	r0, r4
9002600c:	f000 f8d1 	bl	900261b2 <_ZdlPvj>
90026010:	4620      	mov	r0, r4
90026012:	bd10      	pop	{r4, pc}

90026014 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90026014:	790b      	ldrb	r3, [r1, #4]
90026016:	2b00      	cmp	r3, #0
90026018:	bf0c      	ite	eq
9002601a:	2301      	moveq	r3, #1
9002601c:	2300      	movne	r3, #0
9002601e:	b570      	push	{r4, r5, r6, lr}
90026020:	4604      	mov	r4, r0
90026022:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
90026026:	460e      	mov	r6, r1
90026028:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
9002602c:	d109      	bne.n	90026042 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
9002602e:	b14d      	cbz	r5, 90026044 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90026030:	7933      	ldrb	r3, [r6, #4]
90026032:	2b01      	cmp	r3, #1
90026034:	d10c      	bne.n	90026050 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90026036:	6823      	ldr	r3, [r4, #0]
90026038:	4620      	mov	r0, r4
9002603a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
9002603c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90026040:	4718      	bx	r3
90026042:	b12d      	cbz	r5, 90026050 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90026044:	6823      	ldr	r3, [r4, #0]
90026046:	4620      	mov	r0, r4
90026048:	695b      	ldr	r3, [r3, #20]
9002604a:	4798      	blx	r3
9002604c:	2d00      	cmp	r5, #0
9002604e:	d1ef      	bne.n	90026030 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90026050:	bd70      	pop	{r4, r5, r6, pc}

90026052 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90026052:	b570      	push	{r4, r5, r6, lr}
90026054:	880b      	ldrh	r3, [r1, #0]
90026056:	4605      	mov	r5, r0
90026058:	4604      	mov	r4, r0
9002605a:	85c3      	strh	r3, [r0, #46]	; 0x2e
9002605c:	8813      	ldrh	r3, [r2, #0]
9002605e:	f825 3f30 	strh.w	r3, [r5, #48]!
90026062:	4628      	mov	r0, r5
90026064:	f7f2 f898 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
90026068:	4606      	mov	r6, r0
9002606a:	4628      	mov	r0, r5
9002606c:	f7f2 f8c8 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
90026070:	6823      	ldr	r3, [r4, #0]
90026072:	4605      	mov	r5, r0
90026074:	4631      	mov	r1, r6
90026076:	4620      	mov	r0, r4
90026078:	6b9b      	ldr	r3, [r3, #56]	; 0x38
9002607a:	4798      	blx	r3
9002607c:	6823      	ldr	r3, [r4, #0]
9002607e:	4629      	mov	r1, r5
90026080:	4620      	mov	r0, r4
90026082:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
90026084:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90026088:	4718      	bx	r3

9002608a <_ZNK8touchgfx6Button12getSolidRectEv>:
9002608a:	b510      	push	{r4, lr}
9002608c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
90026090:	4604      	mov	r4, r0
90026092:	2bff      	cmp	r3, #255	; 0xff
90026094:	d006      	beq.n	900260a4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
90026096:	2300      	movs	r3, #0
90026098:	8003      	strh	r3, [r0, #0]
9002609a:	8043      	strh	r3, [r0, #2]
9002609c:	8083      	strh	r3, [r0, #4]
9002609e:	80c3      	strh	r3, [r0, #6]
900260a0:	4620      	mov	r0, r4
900260a2:	bd10      	pop	{r4, pc}
900260a4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
900260a8:	b11b      	cbz	r3, 900260b2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
900260aa:	3130      	adds	r1, #48	; 0x30
900260ac:	f7f2 f8dc 	bl	90018268 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
900260b0:	e7f6      	b.n	900260a0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
900260b2:	312e      	adds	r1, #46	; 0x2e
900260b4:	e7fa      	b.n	900260ac <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

900260b8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
900260b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900260bc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
900260c0:	b08a      	sub	sp, #40	; 0x28
900260c2:	4604      	mov	r4, r0
900260c4:	4688      	mov	r8, r1
900260c6:	2b00      	cmp	r3, #0
900260c8:	d066      	beq.n	90026198 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
900260ca:	8e03      	ldrh	r3, [r0, #48]	; 0x30
900260cc:	a805      	add	r0, sp, #20
900260ce:	f8ad 3014 	strh.w	r3, [sp, #20]
900260d2:	f7f2 f861 	bl	90018198 <_ZNK8touchgfx6Bitmap8getWidthEv>
900260d6:	4607      	mov	r7, r0
900260d8:	a805      	add	r0, sp, #20
900260da:	f7f2 f891 	bl	90018200 <_ZNK8touchgfx6Bitmap9getHeightEv>
900260de:	f9b8 6000 	ldrsh.w	r6, [r8]
900260e2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
900260e6:	2300      	movs	r3, #0
900260e8:	4432      	add	r2, r6
900260ea:	9306      	str	r3, [sp, #24]
900260ec:	b292      	uxth	r2, r2
900260ee:	fa0f fc82 	sxth.w	ip, r2
900260f2:	459c      	cmp	ip, r3
900260f4:	dd52      	ble.n	9002619c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900260f6:	42b7      	cmp	r7, r6
900260f8:	dd50      	ble.n	9002619c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
900260fa:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
900260fe:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90026102:	442b      	add	r3, r5
90026104:	b29b      	uxth	r3, r3
90026106:	b219      	sxth	r1, r3
90026108:	2900      	cmp	r1, #0
9002610a:	dd47      	ble.n	9002619c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9002610c:	42a8      	cmp	r0, r5
9002610e:	dd45      	ble.n	9002619c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90026110:	4567      	cmp	r7, ip
90026112:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90026116:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9002611a:	bfb8      	it	lt
9002611c:	b2ba      	uxthlt	r2, r7
9002611e:	4288      	cmp	r0, r1
90026120:	f8ad 6018 	strh.w	r6, [sp, #24]
90026124:	bfb8      	it	lt
90026126:	b283      	uxthlt	r3, r0
90026128:	1b92      	subs	r2, r2, r6
9002612a:	f8ad 501a 	strh.w	r5, [sp, #26]
9002612e:	1b5b      	subs	r3, r3, r5
90026130:	f8ad 201c 	strh.w	r2, [sp, #28]
90026134:	f8ad 301e 	strh.w	r3, [sp, #30]
90026138:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9002613c:	f64f 73ff 	movw	r3, #65535	; 0xffff
90026140:	429a      	cmp	r2, r3
90026142:	d026      	beq.n	90026192 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90026144:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
90026148:	2b00      	cmp	r3, #0
9002614a:	dd22      	ble.n	90026192 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
9002614c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
90026150:	2b00      	cmp	r3, #0
90026152:	dd1e      	ble.n	90026192 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
90026154:	2300      	movs	r3, #0
90026156:	a908      	add	r1, sp, #32
90026158:	4620      	mov	r0, r4
9002615a:	e9cd 3308 	strd	r3, r3, [sp, #32]
9002615e:	6823      	ldr	r3, [r4, #0]
90026160:	6adb      	ldr	r3, [r3, #44]	; 0x2c
90026162:	4798      	blx	r3
90026164:	4b0f      	ldr	r3, [pc, #60]	; (900261a4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
90026166:	681b      	ldr	r3, [r3, #0]
90026168:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
9002616c:	b10a      	cbz	r2, 90026172 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
9002616e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
90026170:	b900      	cbnz	r0, 90026174 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
90026172:	6898      	ldr	r0, [r3, #8]
90026174:	2501      	movs	r5, #1
90026176:	6801      	ldr	r1, [r0, #0]
90026178:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
9002617c:	9502      	str	r5, [sp, #8]
9002617e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
90026182:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
90026186:	9401      	str	r4, [sp, #4]
90026188:	ac06      	add	r4, sp, #24
9002618a:	9400      	str	r4, [sp, #0]
9002618c:	688c      	ldr	r4, [r1, #8]
9002618e:	a905      	add	r1, sp, #20
90026190:	47a0      	blx	r4
90026192:	b00a      	add	sp, #40	; 0x28
90026194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90026198:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
9002619a:	e797      	b.n	900260cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
9002619c:	2300      	movs	r3, #0
9002619e:	9307      	str	r3, [sp, #28]
900261a0:	e7ca      	b.n	90026138 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
900261a2:	bf00      	nop
900261a4:	2402357c 	.word	0x2402357c

900261a8 <__aeabi_atexit>:
900261a8:	460b      	mov	r3, r1
900261aa:	4601      	mov	r1, r0
900261ac:	4618      	mov	r0, r3
900261ae:	f000 b94d 	b.w	9002644c <__cxa_atexit>

900261b2 <_ZdlPvj>:
900261b2:	f000 b812 	b.w	900261da <_ZdlPv>

900261b6 <__cxa_guard_acquire>:
900261b6:	6803      	ldr	r3, [r0, #0]
900261b8:	07db      	lsls	r3, r3, #31
900261ba:	d406      	bmi.n	900261ca <__cxa_guard_acquire+0x14>
900261bc:	7843      	ldrb	r3, [r0, #1]
900261be:	b103      	cbz	r3, 900261c2 <__cxa_guard_acquire+0xc>
900261c0:	deff      	udf	#255	; 0xff
900261c2:	2301      	movs	r3, #1
900261c4:	7043      	strb	r3, [r0, #1]
900261c6:	4618      	mov	r0, r3
900261c8:	4770      	bx	lr
900261ca:	2000      	movs	r0, #0
900261cc:	4770      	bx	lr

900261ce <__cxa_guard_release>:
900261ce:	2301      	movs	r3, #1
900261d0:	6003      	str	r3, [r0, #0]
900261d2:	4770      	bx	lr

900261d4 <__cxa_pure_virtual>:
900261d4:	b508      	push	{r3, lr}
900261d6:	f000 f80f 	bl	900261f8 <_ZSt9terminatev>

900261da <_ZdlPv>:
900261da:	f000 b845 	b.w	90026268 <free>

900261de <_ZN10__cxxabiv111__terminateEPFvvE>:
900261de:	b508      	push	{r3, lr}
900261e0:	4780      	blx	r0
900261e2:	f000 f80e 	bl	90026202 <abort>
	...

900261e8 <_ZSt13get_terminatev>:
900261e8:	4b02      	ldr	r3, [pc, #8]	; (900261f4 <_ZSt13get_terminatev+0xc>)
900261ea:	6818      	ldr	r0, [r3, #0]
900261ec:	f3bf 8f5b 	dmb	ish
900261f0:	4770      	bx	lr
900261f2:	bf00      	nop
900261f4:	240000f0 	.word	0x240000f0

900261f8 <_ZSt9terminatev>:
900261f8:	b508      	push	{r3, lr}
900261fa:	f7ff fff5 	bl	900261e8 <_ZSt13get_terminatev>
900261fe:	f7ff ffee 	bl	900261de <_ZN10__cxxabiv111__terminateEPFvvE>

90026202 <abort>:
90026202:	b508      	push	{r3, lr}
90026204:	2006      	movs	r0, #6
90026206:	f000 fb1d 	bl	90026844 <raise>
9002620a:	2001      	movs	r0, #1
9002620c:	f7dd fab6 	bl	9000377c <_exit>

90026210 <__assert_func>:
90026210:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90026212:	4614      	mov	r4, r2
90026214:	461a      	mov	r2, r3
90026216:	4b09      	ldr	r3, [pc, #36]	; (9002623c <__assert_func+0x2c>)
90026218:	681b      	ldr	r3, [r3, #0]
9002621a:	4605      	mov	r5, r0
9002621c:	68d8      	ldr	r0, [r3, #12]
9002621e:	b14c      	cbz	r4, 90026234 <__assert_func+0x24>
90026220:	4b07      	ldr	r3, [pc, #28]	; (90026240 <__assert_func+0x30>)
90026222:	9100      	str	r1, [sp, #0]
90026224:	e9cd 3401 	strd	r3, r4, [sp, #4]
90026228:	4906      	ldr	r1, [pc, #24]	; (90026244 <__assert_func+0x34>)
9002622a:	462b      	mov	r3, r5
9002622c:	f000 f9c0 	bl	900265b0 <fiprintf>
90026230:	f7ff ffe7 	bl	90026202 <abort>
90026234:	4b04      	ldr	r3, [pc, #16]	; (90026248 <__assert_func+0x38>)
90026236:	461c      	mov	r4, r3
90026238:	e7f3      	b.n	90026222 <__assert_func+0x12>
9002623a:	bf00      	nop
9002623c:	2400014c 	.word	0x2400014c
90026240:	9002aba4 	.word	0x9002aba4
90026244:	9002abb1 	.word	0x9002abb1
90026248:	9002abdf 	.word	0x9002abdf

9002624c <atexit>:
9002624c:	2300      	movs	r3, #0
9002624e:	4601      	mov	r1, r0
90026250:	461a      	mov	r2, r3
90026252:	4618      	mov	r0, r3
90026254:	f000 bba4 	b.w	900269a0 <__register_exitproc>

90026258 <malloc>:
90026258:	4b02      	ldr	r3, [pc, #8]	; (90026264 <malloc+0xc>)
9002625a:	4601      	mov	r1, r0
9002625c:	6818      	ldr	r0, [r3, #0]
9002625e:	f000 b82b 	b.w	900262b8 <_malloc_r>
90026262:	bf00      	nop
90026264:	2400014c 	.word	0x2400014c

90026268 <free>:
90026268:	4b02      	ldr	r3, [pc, #8]	; (90026274 <free+0xc>)
9002626a:	4601      	mov	r1, r0
9002626c:	6818      	ldr	r0, [r3, #0]
9002626e:	f000 bbf5 	b.w	90026a5c <_free_r>
90026272:	bf00      	nop
90026274:	2400014c 	.word	0x2400014c

90026278 <sbrk_aligned>:
90026278:	b570      	push	{r4, r5, r6, lr}
9002627a:	4e0e      	ldr	r6, [pc, #56]	; (900262b4 <sbrk_aligned+0x3c>)
9002627c:	460c      	mov	r4, r1
9002627e:	6831      	ldr	r1, [r6, #0]
90026280:	4605      	mov	r5, r0
90026282:	b911      	cbnz	r1, 9002628a <sbrk_aligned+0x12>
90026284:	f000 fb2e 	bl	900268e4 <_sbrk_r>
90026288:	6030      	str	r0, [r6, #0]
9002628a:	4621      	mov	r1, r4
9002628c:	4628      	mov	r0, r5
9002628e:	f000 fb29 	bl	900268e4 <_sbrk_r>
90026292:	1c43      	adds	r3, r0, #1
90026294:	d00a      	beq.n	900262ac <sbrk_aligned+0x34>
90026296:	1cc4      	adds	r4, r0, #3
90026298:	f024 0403 	bic.w	r4, r4, #3
9002629c:	42a0      	cmp	r0, r4
9002629e:	d007      	beq.n	900262b0 <sbrk_aligned+0x38>
900262a0:	1a21      	subs	r1, r4, r0
900262a2:	4628      	mov	r0, r5
900262a4:	f000 fb1e 	bl	900268e4 <_sbrk_r>
900262a8:	3001      	adds	r0, #1
900262aa:	d101      	bne.n	900262b0 <sbrk_aligned+0x38>
900262ac:	f04f 34ff 	mov.w	r4, #4294967295
900262b0:	4620      	mov	r0, r4
900262b2:	bd70      	pop	{r4, r5, r6, pc}
900262b4:	24023ed4 	.word	0x24023ed4

900262b8 <_malloc_r>:
900262b8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900262bc:	1ccd      	adds	r5, r1, #3
900262be:	f025 0503 	bic.w	r5, r5, #3
900262c2:	3508      	adds	r5, #8
900262c4:	2d0c      	cmp	r5, #12
900262c6:	bf38      	it	cc
900262c8:	250c      	movcc	r5, #12
900262ca:	2d00      	cmp	r5, #0
900262cc:	4607      	mov	r7, r0
900262ce:	db01      	blt.n	900262d4 <_malloc_r+0x1c>
900262d0:	42a9      	cmp	r1, r5
900262d2:	d905      	bls.n	900262e0 <_malloc_r+0x28>
900262d4:	230c      	movs	r3, #12
900262d6:	603b      	str	r3, [r7, #0]
900262d8:	2600      	movs	r6, #0
900262da:	4630      	mov	r0, r6
900262dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900262e0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 900263b4 <_malloc_r+0xfc>
900262e4:	f000 f868 	bl	900263b8 <__malloc_lock>
900262e8:	f8d8 3000 	ldr.w	r3, [r8]
900262ec:	461c      	mov	r4, r3
900262ee:	bb5c      	cbnz	r4, 90026348 <_malloc_r+0x90>
900262f0:	4629      	mov	r1, r5
900262f2:	4638      	mov	r0, r7
900262f4:	f7ff ffc0 	bl	90026278 <sbrk_aligned>
900262f8:	1c43      	adds	r3, r0, #1
900262fa:	4604      	mov	r4, r0
900262fc:	d155      	bne.n	900263aa <_malloc_r+0xf2>
900262fe:	f8d8 4000 	ldr.w	r4, [r8]
90026302:	4626      	mov	r6, r4
90026304:	2e00      	cmp	r6, #0
90026306:	d145      	bne.n	90026394 <_malloc_r+0xdc>
90026308:	2c00      	cmp	r4, #0
9002630a:	d048      	beq.n	9002639e <_malloc_r+0xe6>
9002630c:	6823      	ldr	r3, [r4, #0]
9002630e:	4631      	mov	r1, r6
90026310:	4638      	mov	r0, r7
90026312:	eb04 0903 	add.w	r9, r4, r3
90026316:	f000 fae5 	bl	900268e4 <_sbrk_r>
9002631a:	4581      	cmp	r9, r0
9002631c:	d13f      	bne.n	9002639e <_malloc_r+0xe6>
9002631e:	6821      	ldr	r1, [r4, #0]
90026320:	1a6d      	subs	r5, r5, r1
90026322:	4629      	mov	r1, r5
90026324:	4638      	mov	r0, r7
90026326:	f7ff ffa7 	bl	90026278 <sbrk_aligned>
9002632a:	3001      	adds	r0, #1
9002632c:	d037      	beq.n	9002639e <_malloc_r+0xe6>
9002632e:	6823      	ldr	r3, [r4, #0]
90026330:	442b      	add	r3, r5
90026332:	6023      	str	r3, [r4, #0]
90026334:	f8d8 3000 	ldr.w	r3, [r8]
90026338:	2b00      	cmp	r3, #0
9002633a:	d038      	beq.n	900263ae <_malloc_r+0xf6>
9002633c:	685a      	ldr	r2, [r3, #4]
9002633e:	42a2      	cmp	r2, r4
90026340:	d12b      	bne.n	9002639a <_malloc_r+0xe2>
90026342:	2200      	movs	r2, #0
90026344:	605a      	str	r2, [r3, #4]
90026346:	e00f      	b.n	90026368 <_malloc_r+0xb0>
90026348:	6822      	ldr	r2, [r4, #0]
9002634a:	1b52      	subs	r2, r2, r5
9002634c:	d41f      	bmi.n	9002638e <_malloc_r+0xd6>
9002634e:	2a0b      	cmp	r2, #11
90026350:	d917      	bls.n	90026382 <_malloc_r+0xca>
90026352:	1961      	adds	r1, r4, r5
90026354:	42a3      	cmp	r3, r4
90026356:	6025      	str	r5, [r4, #0]
90026358:	bf18      	it	ne
9002635a:	6059      	strne	r1, [r3, #4]
9002635c:	6863      	ldr	r3, [r4, #4]
9002635e:	bf08      	it	eq
90026360:	f8c8 1000 	streq.w	r1, [r8]
90026364:	5162      	str	r2, [r4, r5]
90026366:	604b      	str	r3, [r1, #4]
90026368:	4638      	mov	r0, r7
9002636a:	f104 060b 	add.w	r6, r4, #11
9002636e:	f000 f829 	bl	900263c4 <__malloc_unlock>
90026372:	f026 0607 	bic.w	r6, r6, #7
90026376:	1d23      	adds	r3, r4, #4
90026378:	1af2      	subs	r2, r6, r3
9002637a:	d0ae      	beq.n	900262da <_malloc_r+0x22>
9002637c:	1b9b      	subs	r3, r3, r6
9002637e:	50a3      	str	r3, [r4, r2]
90026380:	e7ab      	b.n	900262da <_malloc_r+0x22>
90026382:	42a3      	cmp	r3, r4
90026384:	6862      	ldr	r2, [r4, #4]
90026386:	d1dd      	bne.n	90026344 <_malloc_r+0x8c>
90026388:	f8c8 2000 	str.w	r2, [r8]
9002638c:	e7ec      	b.n	90026368 <_malloc_r+0xb0>
9002638e:	4623      	mov	r3, r4
90026390:	6864      	ldr	r4, [r4, #4]
90026392:	e7ac      	b.n	900262ee <_malloc_r+0x36>
90026394:	4634      	mov	r4, r6
90026396:	6876      	ldr	r6, [r6, #4]
90026398:	e7b4      	b.n	90026304 <_malloc_r+0x4c>
9002639a:	4613      	mov	r3, r2
9002639c:	e7cc      	b.n	90026338 <_malloc_r+0x80>
9002639e:	230c      	movs	r3, #12
900263a0:	603b      	str	r3, [r7, #0]
900263a2:	4638      	mov	r0, r7
900263a4:	f000 f80e 	bl	900263c4 <__malloc_unlock>
900263a8:	e797      	b.n	900262da <_malloc_r+0x22>
900263aa:	6025      	str	r5, [r4, #0]
900263ac:	e7dc      	b.n	90026368 <_malloc_r+0xb0>
900263ae:	605b      	str	r3, [r3, #4]
900263b0:	deff      	udf	#255	; 0xff
900263b2:	bf00      	nop
900263b4:	24023ed0 	.word	0x24023ed0

900263b8 <__malloc_lock>:
900263b8:	4801      	ldr	r0, [pc, #4]	; (900263c0 <__malloc_lock+0x8>)
900263ba:	f000 bae0 	b.w	9002697e <__retarget_lock_acquire_recursive>
900263be:	bf00      	nop
900263c0:	24024019 	.word	0x24024019

900263c4 <__malloc_unlock>:
900263c4:	4801      	ldr	r0, [pc, #4]	; (900263cc <__malloc_unlock+0x8>)
900263c6:	f000 badb 	b.w	90026980 <__retarget_lock_release_recursive>
900263ca:	bf00      	nop
900263cc:	24024019 	.word	0x24024019

900263d0 <rand>:
900263d0:	4b16      	ldr	r3, [pc, #88]	; (9002642c <rand+0x5c>)
900263d2:	b510      	push	{r4, lr}
900263d4:	681c      	ldr	r4, [r3, #0]
900263d6:	6b23      	ldr	r3, [r4, #48]	; 0x30
900263d8:	b9b3      	cbnz	r3, 90026408 <rand+0x38>
900263da:	2018      	movs	r0, #24
900263dc:	f7ff ff3c 	bl	90026258 <malloc>
900263e0:	4602      	mov	r2, r0
900263e2:	6320      	str	r0, [r4, #48]	; 0x30
900263e4:	b920      	cbnz	r0, 900263f0 <rand+0x20>
900263e6:	4b12      	ldr	r3, [pc, #72]	; (90026430 <rand+0x60>)
900263e8:	4812      	ldr	r0, [pc, #72]	; (90026434 <rand+0x64>)
900263ea:	2152      	movs	r1, #82	; 0x52
900263ec:	f7ff ff10 	bl	90026210 <__assert_func>
900263f0:	4911      	ldr	r1, [pc, #68]	; (90026438 <rand+0x68>)
900263f2:	4b12      	ldr	r3, [pc, #72]	; (9002643c <rand+0x6c>)
900263f4:	e9c0 1300 	strd	r1, r3, [r0]
900263f8:	4b11      	ldr	r3, [pc, #68]	; (90026440 <rand+0x70>)
900263fa:	6083      	str	r3, [r0, #8]
900263fc:	230b      	movs	r3, #11
900263fe:	8183      	strh	r3, [r0, #12]
90026400:	2100      	movs	r1, #0
90026402:	2001      	movs	r0, #1
90026404:	e9c2 0104 	strd	r0, r1, [r2, #16]
90026408:	6b21      	ldr	r1, [r4, #48]	; 0x30
9002640a:	480e      	ldr	r0, [pc, #56]	; (90026444 <rand+0x74>)
9002640c:	690b      	ldr	r3, [r1, #16]
9002640e:	694c      	ldr	r4, [r1, #20]
90026410:	4a0d      	ldr	r2, [pc, #52]	; (90026448 <rand+0x78>)
90026412:	4358      	muls	r0, r3
90026414:	fb02 0004 	mla	r0, r2, r4, r0
90026418:	fba3 3202 	umull	r3, r2, r3, r2
9002641c:	3301      	adds	r3, #1
9002641e:	eb40 0002 	adc.w	r0, r0, r2
90026422:	e9c1 3004 	strd	r3, r0, [r1, #16]
90026426:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
9002642a:	bd10      	pop	{r4, pc}
9002642c:	2400014c 	.word	0x2400014c
90026430:	9002abe0 	.word	0x9002abe0
90026434:	9002abf7 	.word	0x9002abf7
90026438:	abcd330e 	.word	0xabcd330e
9002643c:	e66d1234 	.word	0xe66d1234
90026440:	0005deec 	.word	0x0005deec
90026444:	5851f42d 	.word	0x5851f42d
90026448:	4c957f2d 	.word	0x4c957f2d

9002644c <__cxa_atexit>:
9002644c:	b510      	push	{r4, lr}
9002644e:	4c05      	ldr	r4, [pc, #20]	; (90026464 <__cxa_atexit+0x18>)
90026450:	4613      	mov	r3, r2
90026452:	b12c      	cbz	r4, 90026460 <__cxa_atexit+0x14>
90026454:	460a      	mov	r2, r1
90026456:	4601      	mov	r1, r0
90026458:	2002      	movs	r0, #2
9002645a:	f000 faa1 	bl	900269a0 <__register_exitproc>
9002645e:	bd10      	pop	{r4, pc}
90026460:	4620      	mov	r0, r4
90026462:	e7fc      	b.n	9002645e <__cxa_atexit+0x12>
90026464:	900269a1 	.word	0x900269a1

90026468 <std>:
90026468:	2300      	movs	r3, #0
9002646a:	b510      	push	{r4, lr}
9002646c:	4604      	mov	r4, r0
9002646e:	e9c0 3300 	strd	r3, r3, [r0]
90026472:	e9c0 3304 	strd	r3, r3, [r0, #16]
90026476:	6083      	str	r3, [r0, #8]
90026478:	8181      	strh	r1, [r0, #12]
9002647a:	6643      	str	r3, [r0, #100]	; 0x64
9002647c:	81c2      	strh	r2, [r0, #14]
9002647e:	6183      	str	r3, [r0, #24]
90026480:	4619      	mov	r1, r3
90026482:	2208      	movs	r2, #8
90026484:	305c      	adds	r0, #92	; 0x5c
90026486:	f000 f99b 	bl	900267c0 <memset>
9002648a:	4b0d      	ldr	r3, [pc, #52]	; (900264c0 <std+0x58>)
9002648c:	6263      	str	r3, [r4, #36]	; 0x24
9002648e:	4b0d      	ldr	r3, [pc, #52]	; (900264c4 <std+0x5c>)
90026490:	62a3      	str	r3, [r4, #40]	; 0x28
90026492:	4b0d      	ldr	r3, [pc, #52]	; (900264c8 <std+0x60>)
90026494:	62e3      	str	r3, [r4, #44]	; 0x2c
90026496:	4b0d      	ldr	r3, [pc, #52]	; (900264cc <std+0x64>)
90026498:	6323      	str	r3, [r4, #48]	; 0x30
9002649a:	4b0d      	ldr	r3, [pc, #52]	; (900264d0 <std+0x68>)
9002649c:	6224      	str	r4, [r4, #32]
9002649e:	429c      	cmp	r4, r3
900264a0:	d006      	beq.n	900264b0 <std+0x48>
900264a2:	f103 0268 	add.w	r2, r3, #104	; 0x68
900264a6:	4294      	cmp	r4, r2
900264a8:	d002      	beq.n	900264b0 <std+0x48>
900264aa:	33d0      	adds	r3, #208	; 0xd0
900264ac:	429c      	cmp	r4, r3
900264ae:	d105      	bne.n	900264bc <std+0x54>
900264b0:	f104 0058 	add.w	r0, r4, #88	; 0x58
900264b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900264b8:	f000 ba60 	b.w	9002697c <__retarget_lock_init_recursive>
900264bc:	bd10      	pop	{r4, pc}
900264be:	bf00      	nop
900264c0:	90026611 	.word	0x90026611
900264c4:	90026633 	.word	0x90026633
900264c8:	9002666b 	.word	0x9002666b
900264cc:	9002668f 	.word	0x9002668f
900264d0:	24023ed8 	.word	0x24023ed8

900264d4 <stdio_exit_handler>:
900264d4:	4a02      	ldr	r2, [pc, #8]	; (900264e0 <stdio_exit_handler+0xc>)
900264d6:	4903      	ldr	r1, [pc, #12]	; (900264e4 <stdio_exit_handler+0x10>)
900264d8:	4803      	ldr	r0, [pc, #12]	; (900264e8 <stdio_exit_handler+0x14>)
900264da:	f000 b87b 	b.w	900265d4 <_fwalk_sglue>
900264de:	bf00      	nop
900264e0:	240000f4 	.word	0x240000f4
900264e4:	900271a9 	.word	0x900271a9
900264e8:	24000100 	.word	0x24000100

900264ec <cleanup_stdio>:
900264ec:	6841      	ldr	r1, [r0, #4]
900264ee:	4b0c      	ldr	r3, [pc, #48]	; (90026520 <cleanup_stdio+0x34>)
900264f0:	4299      	cmp	r1, r3
900264f2:	b510      	push	{r4, lr}
900264f4:	4604      	mov	r4, r0
900264f6:	d001      	beq.n	900264fc <cleanup_stdio+0x10>
900264f8:	f000 fe56 	bl	900271a8 <_fflush_r>
900264fc:	68a1      	ldr	r1, [r4, #8]
900264fe:	4b09      	ldr	r3, [pc, #36]	; (90026524 <cleanup_stdio+0x38>)
90026500:	4299      	cmp	r1, r3
90026502:	d002      	beq.n	9002650a <cleanup_stdio+0x1e>
90026504:	4620      	mov	r0, r4
90026506:	f000 fe4f 	bl	900271a8 <_fflush_r>
9002650a:	68e1      	ldr	r1, [r4, #12]
9002650c:	4b06      	ldr	r3, [pc, #24]	; (90026528 <cleanup_stdio+0x3c>)
9002650e:	4299      	cmp	r1, r3
90026510:	d004      	beq.n	9002651c <cleanup_stdio+0x30>
90026512:	4620      	mov	r0, r4
90026514:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026518:	f000 be46 	b.w	900271a8 <_fflush_r>
9002651c:	bd10      	pop	{r4, pc}
9002651e:	bf00      	nop
90026520:	24023ed8 	.word	0x24023ed8
90026524:	24023f40 	.word	0x24023f40
90026528:	24023fa8 	.word	0x24023fa8

9002652c <global_stdio_init.part.0>:
9002652c:	b510      	push	{r4, lr}
9002652e:	4b0b      	ldr	r3, [pc, #44]	; (9002655c <global_stdio_init.part.0+0x30>)
90026530:	4c0b      	ldr	r4, [pc, #44]	; (90026560 <global_stdio_init.part.0+0x34>)
90026532:	4a0c      	ldr	r2, [pc, #48]	; (90026564 <global_stdio_init.part.0+0x38>)
90026534:	601a      	str	r2, [r3, #0]
90026536:	4620      	mov	r0, r4
90026538:	2200      	movs	r2, #0
9002653a:	2104      	movs	r1, #4
9002653c:	f7ff ff94 	bl	90026468 <std>
90026540:	f104 0068 	add.w	r0, r4, #104	; 0x68
90026544:	2201      	movs	r2, #1
90026546:	2109      	movs	r1, #9
90026548:	f7ff ff8e 	bl	90026468 <std>
9002654c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
90026550:	2202      	movs	r2, #2
90026552:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026556:	2112      	movs	r1, #18
90026558:	f7ff bf86 	b.w	90026468 <std>
9002655c:	24024010 	.word	0x24024010
90026560:	24023ed8 	.word	0x24023ed8
90026564:	900264d5 	.word	0x900264d5

90026568 <__sfp_lock_acquire>:
90026568:	4801      	ldr	r0, [pc, #4]	; (90026570 <__sfp_lock_acquire+0x8>)
9002656a:	f000 ba08 	b.w	9002697e <__retarget_lock_acquire_recursive>
9002656e:	bf00      	nop
90026570:	2402401a 	.word	0x2402401a

90026574 <__sfp_lock_release>:
90026574:	4801      	ldr	r0, [pc, #4]	; (9002657c <__sfp_lock_release+0x8>)
90026576:	f000 ba03 	b.w	90026980 <__retarget_lock_release_recursive>
9002657a:	bf00      	nop
9002657c:	2402401a 	.word	0x2402401a

90026580 <__sinit>:
90026580:	b510      	push	{r4, lr}
90026582:	4604      	mov	r4, r0
90026584:	f7ff fff0 	bl	90026568 <__sfp_lock_acquire>
90026588:	6a23      	ldr	r3, [r4, #32]
9002658a:	b11b      	cbz	r3, 90026594 <__sinit+0x14>
9002658c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90026590:	f7ff bff0 	b.w	90026574 <__sfp_lock_release>
90026594:	4b04      	ldr	r3, [pc, #16]	; (900265a8 <__sinit+0x28>)
90026596:	6223      	str	r3, [r4, #32]
90026598:	4b04      	ldr	r3, [pc, #16]	; (900265ac <__sinit+0x2c>)
9002659a:	681b      	ldr	r3, [r3, #0]
9002659c:	2b00      	cmp	r3, #0
9002659e:	d1f5      	bne.n	9002658c <__sinit+0xc>
900265a0:	f7ff ffc4 	bl	9002652c <global_stdio_init.part.0>
900265a4:	e7f2      	b.n	9002658c <__sinit+0xc>
900265a6:	bf00      	nop
900265a8:	900264ed 	.word	0x900264ed
900265ac:	24024010 	.word	0x24024010

900265b0 <fiprintf>:
900265b0:	b40e      	push	{r1, r2, r3}
900265b2:	b503      	push	{r0, r1, lr}
900265b4:	4601      	mov	r1, r0
900265b6:	ab03      	add	r3, sp, #12
900265b8:	4805      	ldr	r0, [pc, #20]	; (900265d0 <fiprintf+0x20>)
900265ba:	f853 2b04 	ldr.w	r2, [r3], #4
900265be:	6800      	ldr	r0, [r0, #0]
900265c0:	9301      	str	r3, [sp, #4]
900265c2:	f000 fac1 	bl	90026b48 <_vfiprintf_r>
900265c6:	b002      	add	sp, #8
900265c8:	f85d eb04 	ldr.w	lr, [sp], #4
900265cc:	b003      	add	sp, #12
900265ce:	4770      	bx	lr
900265d0:	2400014c 	.word	0x2400014c

900265d4 <_fwalk_sglue>:
900265d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900265d8:	4607      	mov	r7, r0
900265da:	4688      	mov	r8, r1
900265dc:	4614      	mov	r4, r2
900265de:	2600      	movs	r6, #0
900265e0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900265e4:	f1b9 0901 	subs.w	r9, r9, #1
900265e8:	d505      	bpl.n	900265f6 <_fwalk_sglue+0x22>
900265ea:	6824      	ldr	r4, [r4, #0]
900265ec:	2c00      	cmp	r4, #0
900265ee:	d1f7      	bne.n	900265e0 <_fwalk_sglue+0xc>
900265f0:	4630      	mov	r0, r6
900265f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900265f6:	89ab      	ldrh	r3, [r5, #12]
900265f8:	2b01      	cmp	r3, #1
900265fa:	d907      	bls.n	9002660c <_fwalk_sglue+0x38>
900265fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
90026600:	3301      	adds	r3, #1
90026602:	d003      	beq.n	9002660c <_fwalk_sglue+0x38>
90026604:	4629      	mov	r1, r5
90026606:	4638      	mov	r0, r7
90026608:	47c0      	blx	r8
9002660a:	4306      	orrs	r6, r0
9002660c:	3568      	adds	r5, #104	; 0x68
9002660e:	e7e9      	b.n	900265e4 <_fwalk_sglue+0x10>

90026610 <__sread>:
90026610:	b510      	push	{r4, lr}
90026612:	460c      	mov	r4, r1
90026614:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026618:	f000 f93e 	bl	90026898 <_read_r>
9002661c:	2800      	cmp	r0, #0
9002661e:	bfab      	itete	ge
90026620:	6d63      	ldrge	r3, [r4, #84]	; 0x54
90026622:	89a3      	ldrhlt	r3, [r4, #12]
90026624:	181b      	addge	r3, r3, r0
90026626:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
9002662a:	bfac      	ite	ge
9002662c:	6563      	strge	r3, [r4, #84]	; 0x54
9002662e:	81a3      	strhlt	r3, [r4, #12]
90026630:	bd10      	pop	{r4, pc}

90026632 <__swrite>:
90026632:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90026636:	461f      	mov	r7, r3
90026638:	898b      	ldrh	r3, [r1, #12]
9002663a:	05db      	lsls	r3, r3, #23
9002663c:	4605      	mov	r5, r0
9002663e:	460c      	mov	r4, r1
90026640:	4616      	mov	r6, r2
90026642:	d505      	bpl.n	90026650 <__swrite+0x1e>
90026644:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026648:	2302      	movs	r3, #2
9002664a:	2200      	movs	r2, #0
9002664c:	f000 f912 	bl	90026874 <_lseek_r>
90026650:	89a3      	ldrh	r3, [r4, #12]
90026652:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90026656:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
9002665a:	81a3      	strh	r3, [r4, #12]
9002665c:	4632      	mov	r2, r6
9002665e:	463b      	mov	r3, r7
90026660:	4628      	mov	r0, r5
90026662:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90026666:	f000 b94d 	b.w	90026904 <_write_r>

9002666a <__sseek>:
9002666a:	b510      	push	{r4, lr}
9002666c:	460c      	mov	r4, r1
9002666e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026672:	f000 f8ff 	bl	90026874 <_lseek_r>
90026676:	1c43      	adds	r3, r0, #1
90026678:	89a3      	ldrh	r3, [r4, #12]
9002667a:	bf15      	itete	ne
9002667c:	6560      	strne	r0, [r4, #84]	; 0x54
9002667e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
90026682:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
90026686:	81a3      	strheq	r3, [r4, #12]
90026688:	bf18      	it	ne
9002668a:	81a3      	strhne	r3, [r4, #12]
9002668c:	bd10      	pop	{r4, pc}

9002668e <__sclose>:
9002668e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90026692:	f000 b8df 	b.w	90026854 <_close_r>

90026696 <__swbuf_r>:
90026696:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026698:	460e      	mov	r6, r1
9002669a:	4614      	mov	r4, r2
9002669c:	4605      	mov	r5, r0
9002669e:	b118      	cbz	r0, 900266a8 <__swbuf_r+0x12>
900266a0:	6a03      	ldr	r3, [r0, #32]
900266a2:	b90b      	cbnz	r3, 900266a8 <__swbuf_r+0x12>
900266a4:	f7ff ff6c 	bl	90026580 <__sinit>
900266a8:	69a3      	ldr	r3, [r4, #24]
900266aa:	60a3      	str	r3, [r4, #8]
900266ac:	89a3      	ldrh	r3, [r4, #12]
900266ae:	071a      	lsls	r2, r3, #28
900266b0:	d525      	bpl.n	900266fe <__swbuf_r+0x68>
900266b2:	6923      	ldr	r3, [r4, #16]
900266b4:	b31b      	cbz	r3, 900266fe <__swbuf_r+0x68>
900266b6:	6823      	ldr	r3, [r4, #0]
900266b8:	6922      	ldr	r2, [r4, #16]
900266ba:	1a98      	subs	r0, r3, r2
900266bc:	6963      	ldr	r3, [r4, #20]
900266be:	b2f6      	uxtb	r6, r6
900266c0:	4283      	cmp	r3, r0
900266c2:	4637      	mov	r7, r6
900266c4:	dc04      	bgt.n	900266d0 <__swbuf_r+0x3a>
900266c6:	4621      	mov	r1, r4
900266c8:	4628      	mov	r0, r5
900266ca:	f000 fd6d 	bl	900271a8 <_fflush_r>
900266ce:	b9e0      	cbnz	r0, 9002670a <__swbuf_r+0x74>
900266d0:	68a3      	ldr	r3, [r4, #8]
900266d2:	3b01      	subs	r3, #1
900266d4:	60a3      	str	r3, [r4, #8]
900266d6:	6823      	ldr	r3, [r4, #0]
900266d8:	1c5a      	adds	r2, r3, #1
900266da:	6022      	str	r2, [r4, #0]
900266dc:	701e      	strb	r6, [r3, #0]
900266de:	6962      	ldr	r2, [r4, #20]
900266e0:	1c43      	adds	r3, r0, #1
900266e2:	429a      	cmp	r2, r3
900266e4:	d004      	beq.n	900266f0 <__swbuf_r+0x5a>
900266e6:	89a3      	ldrh	r3, [r4, #12]
900266e8:	07db      	lsls	r3, r3, #31
900266ea:	d506      	bpl.n	900266fa <__swbuf_r+0x64>
900266ec:	2e0a      	cmp	r6, #10
900266ee:	d104      	bne.n	900266fa <__swbuf_r+0x64>
900266f0:	4621      	mov	r1, r4
900266f2:	4628      	mov	r0, r5
900266f4:	f000 fd58 	bl	900271a8 <_fflush_r>
900266f8:	b938      	cbnz	r0, 9002670a <__swbuf_r+0x74>
900266fa:	4638      	mov	r0, r7
900266fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900266fe:	4621      	mov	r1, r4
90026700:	4628      	mov	r0, r5
90026702:	f000 f805 	bl	90026710 <__swsetup_r>
90026706:	2800      	cmp	r0, #0
90026708:	d0d5      	beq.n	900266b6 <__swbuf_r+0x20>
9002670a:	f04f 37ff 	mov.w	r7, #4294967295
9002670e:	e7f4      	b.n	900266fa <__swbuf_r+0x64>

90026710 <__swsetup_r>:
90026710:	b538      	push	{r3, r4, r5, lr}
90026712:	4b2a      	ldr	r3, [pc, #168]	; (900267bc <__swsetup_r+0xac>)
90026714:	4605      	mov	r5, r0
90026716:	6818      	ldr	r0, [r3, #0]
90026718:	460c      	mov	r4, r1
9002671a:	b118      	cbz	r0, 90026724 <__swsetup_r+0x14>
9002671c:	6a03      	ldr	r3, [r0, #32]
9002671e:	b90b      	cbnz	r3, 90026724 <__swsetup_r+0x14>
90026720:	f7ff ff2e 	bl	90026580 <__sinit>
90026724:	89a3      	ldrh	r3, [r4, #12]
90026726:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
9002672a:	0718      	lsls	r0, r3, #28
9002672c:	d422      	bmi.n	90026774 <__swsetup_r+0x64>
9002672e:	06d9      	lsls	r1, r3, #27
90026730:	d407      	bmi.n	90026742 <__swsetup_r+0x32>
90026732:	2309      	movs	r3, #9
90026734:	602b      	str	r3, [r5, #0]
90026736:	f042 0340 	orr.w	r3, r2, #64	; 0x40
9002673a:	81a3      	strh	r3, [r4, #12]
9002673c:	f04f 30ff 	mov.w	r0, #4294967295
90026740:	e034      	b.n	900267ac <__swsetup_r+0x9c>
90026742:	0758      	lsls	r0, r3, #29
90026744:	d512      	bpl.n	9002676c <__swsetup_r+0x5c>
90026746:	6b61      	ldr	r1, [r4, #52]	; 0x34
90026748:	b141      	cbz	r1, 9002675c <__swsetup_r+0x4c>
9002674a:	f104 0344 	add.w	r3, r4, #68	; 0x44
9002674e:	4299      	cmp	r1, r3
90026750:	d002      	beq.n	90026758 <__swsetup_r+0x48>
90026752:	4628      	mov	r0, r5
90026754:	f000 f982 	bl	90026a5c <_free_r>
90026758:	2300      	movs	r3, #0
9002675a:	6363      	str	r3, [r4, #52]	; 0x34
9002675c:	89a3      	ldrh	r3, [r4, #12]
9002675e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
90026762:	81a3      	strh	r3, [r4, #12]
90026764:	2300      	movs	r3, #0
90026766:	6063      	str	r3, [r4, #4]
90026768:	6923      	ldr	r3, [r4, #16]
9002676a:	6023      	str	r3, [r4, #0]
9002676c:	89a3      	ldrh	r3, [r4, #12]
9002676e:	f043 0308 	orr.w	r3, r3, #8
90026772:	81a3      	strh	r3, [r4, #12]
90026774:	6923      	ldr	r3, [r4, #16]
90026776:	b94b      	cbnz	r3, 9002678c <__swsetup_r+0x7c>
90026778:	89a3      	ldrh	r3, [r4, #12]
9002677a:	f403 7320 	and.w	r3, r3, #640	; 0x280
9002677e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
90026782:	d003      	beq.n	9002678c <__swsetup_r+0x7c>
90026784:	4621      	mov	r1, r4
90026786:	4628      	mov	r0, r5
90026788:	f000 fd5c 	bl	90027244 <__smakebuf_r>
9002678c:	89a0      	ldrh	r0, [r4, #12]
9002678e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90026792:	f010 0301 	ands.w	r3, r0, #1
90026796:	d00a      	beq.n	900267ae <__swsetup_r+0x9e>
90026798:	2300      	movs	r3, #0
9002679a:	60a3      	str	r3, [r4, #8]
9002679c:	6963      	ldr	r3, [r4, #20]
9002679e:	425b      	negs	r3, r3
900267a0:	61a3      	str	r3, [r4, #24]
900267a2:	6923      	ldr	r3, [r4, #16]
900267a4:	b943      	cbnz	r3, 900267b8 <__swsetup_r+0xa8>
900267a6:	f010 0080 	ands.w	r0, r0, #128	; 0x80
900267aa:	d1c4      	bne.n	90026736 <__swsetup_r+0x26>
900267ac:	bd38      	pop	{r3, r4, r5, pc}
900267ae:	0781      	lsls	r1, r0, #30
900267b0:	bf58      	it	pl
900267b2:	6963      	ldrpl	r3, [r4, #20]
900267b4:	60a3      	str	r3, [r4, #8]
900267b6:	e7f4      	b.n	900267a2 <__swsetup_r+0x92>
900267b8:	2000      	movs	r0, #0
900267ba:	e7f7      	b.n	900267ac <__swsetup_r+0x9c>
900267bc:	2400014c 	.word	0x2400014c

900267c0 <memset>:
900267c0:	4402      	add	r2, r0
900267c2:	4603      	mov	r3, r0
900267c4:	4293      	cmp	r3, r2
900267c6:	d100      	bne.n	900267ca <memset+0xa>
900267c8:	4770      	bx	lr
900267ca:	f803 1b01 	strb.w	r1, [r3], #1
900267ce:	e7f9      	b.n	900267c4 <memset+0x4>

900267d0 <strncmp>:
900267d0:	b510      	push	{r4, lr}
900267d2:	b16a      	cbz	r2, 900267f0 <strncmp+0x20>
900267d4:	3901      	subs	r1, #1
900267d6:	1884      	adds	r4, r0, r2
900267d8:	f810 2b01 	ldrb.w	r2, [r0], #1
900267dc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
900267e0:	429a      	cmp	r2, r3
900267e2:	d103      	bne.n	900267ec <strncmp+0x1c>
900267e4:	42a0      	cmp	r0, r4
900267e6:	d001      	beq.n	900267ec <strncmp+0x1c>
900267e8:	2a00      	cmp	r2, #0
900267ea:	d1f5      	bne.n	900267d8 <strncmp+0x8>
900267ec:	1ad0      	subs	r0, r2, r3
900267ee:	bd10      	pop	{r4, pc}
900267f0:	4610      	mov	r0, r2
900267f2:	e7fc      	b.n	900267ee <strncmp+0x1e>

900267f4 <_raise_r>:
900267f4:	291f      	cmp	r1, #31
900267f6:	b538      	push	{r3, r4, r5, lr}
900267f8:	4604      	mov	r4, r0
900267fa:	460d      	mov	r5, r1
900267fc:	d904      	bls.n	90026808 <_raise_r+0x14>
900267fe:	2316      	movs	r3, #22
90026800:	6003      	str	r3, [r0, #0]
90026802:	f04f 30ff 	mov.w	r0, #4294967295
90026806:	bd38      	pop	{r3, r4, r5, pc}
90026808:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
9002680a:	b112      	cbz	r2, 90026812 <_raise_r+0x1e>
9002680c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90026810:	b94b      	cbnz	r3, 90026826 <_raise_r+0x32>
90026812:	4620      	mov	r0, r4
90026814:	f000 f864 	bl	900268e0 <_getpid_r>
90026818:	462a      	mov	r2, r5
9002681a:	4601      	mov	r1, r0
9002681c:	4620      	mov	r0, r4
9002681e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90026822:	f000 b84b 	b.w	900268bc <_kill_r>
90026826:	2b01      	cmp	r3, #1
90026828:	d00a      	beq.n	90026840 <_raise_r+0x4c>
9002682a:	1c59      	adds	r1, r3, #1
9002682c:	d103      	bne.n	90026836 <_raise_r+0x42>
9002682e:	2316      	movs	r3, #22
90026830:	6003      	str	r3, [r0, #0]
90026832:	2001      	movs	r0, #1
90026834:	e7e7      	b.n	90026806 <_raise_r+0x12>
90026836:	2400      	movs	r4, #0
90026838:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
9002683c:	4628      	mov	r0, r5
9002683e:	4798      	blx	r3
90026840:	2000      	movs	r0, #0
90026842:	e7e0      	b.n	90026806 <_raise_r+0x12>

90026844 <raise>:
90026844:	4b02      	ldr	r3, [pc, #8]	; (90026850 <raise+0xc>)
90026846:	4601      	mov	r1, r0
90026848:	6818      	ldr	r0, [r3, #0]
9002684a:	f7ff bfd3 	b.w	900267f4 <_raise_r>
9002684e:	bf00      	nop
90026850:	2400014c 	.word	0x2400014c

90026854 <_close_r>:
90026854:	b538      	push	{r3, r4, r5, lr}
90026856:	4d06      	ldr	r5, [pc, #24]	; (90026870 <_close_r+0x1c>)
90026858:	2300      	movs	r3, #0
9002685a:	4604      	mov	r4, r0
9002685c:	4608      	mov	r0, r1
9002685e:	602b      	str	r3, [r5, #0]
90026860:	f7dc ffae 	bl	900037c0 <_close>
90026864:	1c43      	adds	r3, r0, #1
90026866:	d102      	bne.n	9002686e <_close_r+0x1a>
90026868:	682b      	ldr	r3, [r5, #0]
9002686a:	b103      	cbz	r3, 9002686e <_close_r+0x1a>
9002686c:	6023      	str	r3, [r4, #0]
9002686e:	bd38      	pop	{r3, r4, r5, pc}
90026870:	24024014 	.word	0x24024014

90026874 <_lseek_r>:
90026874:	b538      	push	{r3, r4, r5, lr}
90026876:	4d07      	ldr	r5, [pc, #28]	; (90026894 <_lseek_r+0x20>)
90026878:	4604      	mov	r4, r0
9002687a:	4608      	mov	r0, r1
9002687c:	4611      	mov	r1, r2
9002687e:	2200      	movs	r2, #0
90026880:	602a      	str	r2, [r5, #0]
90026882:	461a      	mov	r2, r3
90026884:	f7dc ffa8 	bl	900037d8 <_lseek>
90026888:	1c43      	adds	r3, r0, #1
9002688a:	d102      	bne.n	90026892 <_lseek_r+0x1e>
9002688c:	682b      	ldr	r3, [r5, #0]
9002688e:	b103      	cbz	r3, 90026892 <_lseek_r+0x1e>
90026890:	6023      	str	r3, [r4, #0]
90026892:	bd38      	pop	{r3, r4, r5, pc}
90026894:	24024014 	.word	0x24024014

90026898 <_read_r>:
90026898:	b538      	push	{r3, r4, r5, lr}
9002689a:	4d07      	ldr	r5, [pc, #28]	; (900268b8 <_read_r+0x20>)
9002689c:	4604      	mov	r4, r0
9002689e:	4608      	mov	r0, r1
900268a0:	4611      	mov	r1, r2
900268a2:	2200      	movs	r2, #0
900268a4:	602a      	str	r2, [r5, #0]
900268a6:	461a      	mov	r2, r3
900268a8:	f7dc ff6e 	bl	90003788 <_read>
900268ac:	1c43      	adds	r3, r0, #1
900268ae:	d102      	bne.n	900268b6 <_read_r+0x1e>
900268b0:	682b      	ldr	r3, [r5, #0]
900268b2:	b103      	cbz	r3, 900268b6 <_read_r+0x1e>
900268b4:	6023      	str	r3, [r4, #0]
900268b6:	bd38      	pop	{r3, r4, r5, pc}
900268b8:	24024014 	.word	0x24024014

900268bc <_kill_r>:
900268bc:	b538      	push	{r3, r4, r5, lr}
900268be:	4d07      	ldr	r5, [pc, #28]	; (900268dc <_kill_r+0x20>)
900268c0:	2300      	movs	r3, #0
900268c2:	4604      	mov	r4, r0
900268c4:	4608      	mov	r0, r1
900268c6:	4611      	mov	r1, r2
900268c8:	602b      	str	r3, [r5, #0]
900268ca:	f7dc ff4d 	bl	90003768 <_kill>
900268ce:	1c43      	adds	r3, r0, #1
900268d0:	d102      	bne.n	900268d8 <_kill_r+0x1c>
900268d2:	682b      	ldr	r3, [r5, #0]
900268d4:	b103      	cbz	r3, 900268d8 <_kill_r+0x1c>
900268d6:	6023      	str	r3, [r4, #0]
900268d8:	bd38      	pop	{r3, r4, r5, pc}
900268da:	bf00      	nop
900268dc:	24024014 	.word	0x24024014

900268e0 <_getpid_r>:
900268e0:	f7dc bf40 	b.w	90003764 <_getpid>

900268e4 <_sbrk_r>:
900268e4:	b538      	push	{r3, r4, r5, lr}
900268e6:	4d06      	ldr	r5, [pc, #24]	; (90026900 <_sbrk_r+0x1c>)
900268e8:	2300      	movs	r3, #0
900268ea:	4604      	mov	r4, r0
900268ec:	4608      	mov	r0, r1
900268ee:	602b      	str	r3, [r5, #0]
900268f0:	f000 fd06 	bl	90027300 <_sbrk>
900268f4:	1c43      	adds	r3, r0, #1
900268f6:	d102      	bne.n	900268fe <_sbrk_r+0x1a>
900268f8:	682b      	ldr	r3, [r5, #0]
900268fa:	b103      	cbz	r3, 900268fe <_sbrk_r+0x1a>
900268fc:	6023      	str	r3, [r4, #0]
900268fe:	bd38      	pop	{r3, r4, r5, pc}
90026900:	24024014 	.word	0x24024014

90026904 <_write_r>:
90026904:	b538      	push	{r3, r4, r5, lr}
90026906:	4d07      	ldr	r5, [pc, #28]	; (90026924 <_write_r+0x20>)
90026908:	4604      	mov	r4, r0
9002690a:	4608      	mov	r0, r1
9002690c:	4611      	mov	r1, r2
9002690e:	2200      	movs	r2, #0
90026910:	602a      	str	r2, [r5, #0]
90026912:	461a      	mov	r2, r3
90026914:	f7dc ff46 	bl	900037a4 <_write>
90026918:	1c43      	adds	r3, r0, #1
9002691a:	d102      	bne.n	90026922 <_write_r+0x1e>
9002691c:	682b      	ldr	r3, [r5, #0]
9002691e:	b103      	cbz	r3, 90026922 <_write_r+0x1e>
90026920:	6023      	str	r3, [r4, #0]
90026922:	bd38      	pop	{r3, r4, r5, pc}
90026924:	24024014 	.word	0x24024014

90026928 <__errno>:
90026928:	4b01      	ldr	r3, [pc, #4]	; (90026930 <__errno+0x8>)
9002692a:	6818      	ldr	r0, [r3, #0]
9002692c:	4770      	bx	lr
9002692e:	bf00      	nop
90026930:	2400014c 	.word	0x2400014c

90026934 <__libc_init_array>:
90026934:	b570      	push	{r4, r5, r6, lr}
90026936:	4d0d      	ldr	r5, [pc, #52]	; (9002696c <__libc_init_array+0x38>)
90026938:	4c0d      	ldr	r4, [pc, #52]	; (90026970 <__libc_init_array+0x3c>)
9002693a:	1b64      	subs	r4, r4, r5
9002693c:	10a4      	asrs	r4, r4, #2
9002693e:	2600      	movs	r6, #0
90026940:	42a6      	cmp	r6, r4
90026942:	d109      	bne.n	90026958 <__libc_init_array+0x24>
90026944:	4d0b      	ldr	r5, [pc, #44]	; (90026974 <__libc_init_array+0x40>)
90026946:	4c0c      	ldr	r4, [pc, #48]	; (90026978 <__libc_init_array+0x44>)
90026948:	f000 fce8 	bl	9002731c <_init>
9002694c:	1b64      	subs	r4, r4, r5
9002694e:	10a4      	asrs	r4, r4, #2
90026950:	2600      	movs	r6, #0
90026952:	42a6      	cmp	r6, r4
90026954:	d105      	bne.n	90026962 <__libc_init_array+0x2e>
90026956:	bd70      	pop	{r4, r5, r6, pc}
90026958:	f855 3b04 	ldr.w	r3, [r5], #4
9002695c:	4798      	blx	r3
9002695e:	3601      	adds	r6, #1
90026960:	e7ee      	b.n	90026940 <__libc_init_array+0xc>
90026962:	f855 3b04 	ldr.w	r3, [r5], #4
90026966:	4798      	blx	r3
90026968:	3601      	adds	r6, #1
9002696a:	e7f2      	b.n	90026952 <__libc_init_array+0x1e>
9002696c:	9002b2e0 	.word	0x9002b2e0
90026970:	9002b2e0 	.word	0x9002b2e0
90026974:	9002b2e0 	.word	0x9002b2e0
90026978:	9002b2f8 	.word	0x9002b2f8

9002697c <__retarget_lock_init_recursive>:
9002697c:	4770      	bx	lr

9002697e <__retarget_lock_acquire_recursive>:
9002697e:	4770      	bx	lr

90026980 <__retarget_lock_release_recursive>:
90026980:	4770      	bx	lr

90026982 <memcpy>:
90026982:	440a      	add	r2, r1
90026984:	4291      	cmp	r1, r2
90026986:	f100 33ff 	add.w	r3, r0, #4294967295
9002698a:	d100      	bne.n	9002698e <memcpy+0xc>
9002698c:	4770      	bx	lr
9002698e:	b510      	push	{r4, lr}
90026990:	f811 4b01 	ldrb.w	r4, [r1], #1
90026994:	f803 4f01 	strb.w	r4, [r3, #1]!
90026998:	4291      	cmp	r1, r2
9002699a:	d1f9      	bne.n	90026990 <memcpy+0xe>
9002699c:	bd10      	pop	{r4, pc}
	...

900269a0 <__register_exitproc>:
900269a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900269a4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 90026a58 <__register_exitproc+0xb8>
900269a8:	4606      	mov	r6, r0
900269aa:	f8d8 0000 	ldr.w	r0, [r8]
900269ae:	461f      	mov	r7, r3
900269b0:	460d      	mov	r5, r1
900269b2:	4691      	mov	r9, r2
900269b4:	f7ff ffe3 	bl	9002697e <__retarget_lock_acquire_recursive>
900269b8:	4b23      	ldr	r3, [pc, #140]	; (90026a48 <__register_exitproc+0xa8>)
900269ba:	681c      	ldr	r4, [r3, #0]
900269bc:	b934      	cbnz	r4, 900269cc <__register_exitproc+0x2c>
900269be:	4c23      	ldr	r4, [pc, #140]	; (90026a4c <__register_exitproc+0xac>)
900269c0:	601c      	str	r4, [r3, #0]
900269c2:	4b23      	ldr	r3, [pc, #140]	; (90026a50 <__register_exitproc+0xb0>)
900269c4:	b113      	cbz	r3, 900269cc <__register_exitproc+0x2c>
900269c6:	681b      	ldr	r3, [r3, #0]
900269c8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
900269cc:	6863      	ldr	r3, [r4, #4]
900269ce:	2b1f      	cmp	r3, #31
900269d0:	dd07      	ble.n	900269e2 <__register_exitproc+0x42>
900269d2:	f8d8 0000 	ldr.w	r0, [r8]
900269d6:	f7ff ffd3 	bl	90026980 <__retarget_lock_release_recursive>
900269da:	f04f 30ff 	mov.w	r0, #4294967295
900269de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900269e2:	b32e      	cbz	r6, 90026a30 <__register_exitproc+0x90>
900269e4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
900269e8:	b968      	cbnz	r0, 90026a06 <__register_exitproc+0x66>
900269ea:	4b1a      	ldr	r3, [pc, #104]	; (90026a54 <__register_exitproc+0xb4>)
900269ec:	2b00      	cmp	r3, #0
900269ee:	d0f0      	beq.n	900269d2 <__register_exitproc+0x32>
900269f0:	f44f 7084 	mov.w	r0, #264	; 0x108
900269f4:	f7ff fc30 	bl	90026258 <malloc>
900269f8:	2800      	cmp	r0, #0
900269fa:	d0ea      	beq.n	900269d2 <__register_exitproc+0x32>
900269fc:	2300      	movs	r3, #0
900269fe:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
90026a02:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
90026a06:	6863      	ldr	r3, [r4, #4]
90026a08:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90026a0c:	2201      	movs	r2, #1
90026a0e:	409a      	lsls	r2, r3
90026a10:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90026a14:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
90026a18:	4313      	orrs	r3, r2
90026a1a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
90026a1e:	2e02      	cmp	r6, #2
90026a20:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
90026a24:	bf02      	ittt	eq
90026a26:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
90026a2a:	4313      	orreq	r3, r2
90026a2c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
90026a30:	6863      	ldr	r3, [r4, #4]
90026a32:	f8d8 0000 	ldr.w	r0, [r8]
90026a36:	1c5a      	adds	r2, r3, #1
90026a38:	3302      	adds	r3, #2
90026a3a:	6062      	str	r2, [r4, #4]
90026a3c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90026a40:	f7ff ff9e 	bl	90026980 <__retarget_lock_release_recursive>
90026a44:	2000      	movs	r0, #0
90026a46:	e7ca      	b.n	900269de <__register_exitproc+0x3e>
90026a48:	240240a8 	.word	0x240240a8
90026a4c:	2402401c 	.word	0x2402401c
90026a50:	9002ac50 	.word	0x9002ac50
90026a54:	90026259 	.word	0x90026259
90026a58:	24000150 	.word	0x24000150

90026a5c <_free_r>:
90026a5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
90026a5e:	2900      	cmp	r1, #0
90026a60:	d044      	beq.n	90026aec <_free_r+0x90>
90026a62:	f851 3c04 	ldr.w	r3, [r1, #-4]
90026a66:	9001      	str	r0, [sp, #4]
90026a68:	2b00      	cmp	r3, #0
90026a6a:	f1a1 0404 	sub.w	r4, r1, #4
90026a6e:	bfb8      	it	lt
90026a70:	18e4      	addlt	r4, r4, r3
90026a72:	f7ff fca1 	bl	900263b8 <__malloc_lock>
90026a76:	4a1e      	ldr	r2, [pc, #120]	; (90026af0 <_free_r+0x94>)
90026a78:	9801      	ldr	r0, [sp, #4]
90026a7a:	6813      	ldr	r3, [r2, #0]
90026a7c:	b933      	cbnz	r3, 90026a8c <_free_r+0x30>
90026a7e:	6063      	str	r3, [r4, #4]
90026a80:	6014      	str	r4, [r2, #0]
90026a82:	b003      	add	sp, #12
90026a84:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90026a88:	f7ff bc9c 	b.w	900263c4 <__malloc_unlock>
90026a8c:	42a3      	cmp	r3, r4
90026a8e:	d908      	bls.n	90026aa2 <_free_r+0x46>
90026a90:	6825      	ldr	r5, [r4, #0]
90026a92:	1961      	adds	r1, r4, r5
90026a94:	428b      	cmp	r3, r1
90026a96:	bf01      	itttt	eq
90026a98:	6819      	ldreq	r1, [r3, #0]
90026a9a:	685b      	ldreq	r3, [r3, #4]
90026a9c:	1949      	addeq	r1, r1, r5
90026a9e:	6021      	streq	r1, [r4, #0]
90026aa0:	e7ed      	b.n	90026a7e <_free_r+0x22>
90026aa2:	461a      	mov	r2, r3
90026aa4:	685b      	ldr	r3, [r3, #4]
90026aa6:	b10b      	cbz	r3, 90026aac <_free_r+0x50>
90026aa8:	42a3      	cmp	r3, r4
90026aaa:	d9fa      	bls.n	90026aa2 <_free_r+0x46>
90026aac:	6811      	ldr	r1, [r2, #0]
90026aae:	1855      	adds	r5, r2, r1
90026ab0:	42a5      	cmp	r5, r4
90026ab2:	d10b      	bne.n	90026acc <_free_r+0x70>
90026ab4:	6824      	ldr	r4, [r4, #0]
90026ab6:	4421      	add	r1, r4
90026ab8:	1854      	adds	r4, r2, r1
90026aba:	42a3      	cmp	r3, r4
90026abc:	6011      	str	r1, [r2, #0]
90026abe:	d1e0      	bne.n	90026a82 <_free_r+0x26>
90026ac0:	681c      	ldr	r4, [r3, #0]
90026ac2:	685b      	ldr	r3, [r3, #4]
90026ac4:	6053      	str	r3, [r2, #4]
90026ac6:	440c      	add	r4, r1
90026ac8:	6014      	str	r4, [r2, #0]
90026aca:	e7da      	b.n	90026a82 <_free_r+0x26>
90026acc:	d902      	bls.n	90026ad4 <_free_r+0x78>
90026ace:	230c      	movs	r3, #12
90026ad0:	6003      	str	r3, [r0, #0]
90026ad2:	e7d6      	b.n	90026a82 <_free_r+0x26>
90026ad4:	6825      	ldr	r5, [r4, #0]
90026ad6:	1961      	adds	r1, r4, r5
90026ad8:	428b      	cmp	r3, r1
90026ada:	bf04      	itt	eq
90026adc:	6819      	ldreq	r1, [r3, #0]
90026ade:	685b      	ldreq	r3, [r3, #4]
90026ae0:	6063      	str	r3, [r4, #4]
90026ae2:	bf04      	itt	eq
90026ae4:	1949      	addeq	r1, r1, r5
90026ae6:	6021      	streq	r1, [r4, #0]
90026ae8:	6054      	str	r4, [r2, #4]
90026aea:	e7ca      	b.n	90026a82 <_free_r+0x26>
90026aec:	b003      	add	sp, #12
90026aee:	bd30      	pop	{r4, r5, pc}
90026af0:	24023ed0 	.word	0x24023ed0

90026af4 <__sfputc_r>:
90026af4:	6893      	ldr	r3, [r2, #8]
90026af6:	3b01      	subs	r3, #1
90026af8:	2b00      	cmp	r3, #0
90026afa:	b410      	push	{r4}
90026afc:	6093      	str	r3, [r2, #8]
90026afe:	da08      	bge.n	90026b12 <__sfputc_r+0x1e>
90026b00:	6994      	ldr	r4, [r2, #24]
90026b02:	42a3      	cmp	r3, r4
90026b04:	db01      	blt.n	90026b0a <__sfputc_r+0x16>
90026b06:	290a      	cmp	r1, #10
90026b08:	d103      	bne.n	90026b12 <__sfputc_r+0x1e>
90026b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
90026b0e:	f7ff bdc2 	b.w	90026696 <__swbuf_r>
90026b12:	6813      	ldr	r3, [r2, #0]
90026b14:	1c58      	adds	r0, r3, #1
90026b16:	6010      	str	r0, [r2, #0]
90026b18:	7019      	strb	r1, [r3, #0]
90026b1a:	4608      	mov	r0, r1
90026b1c:	f85d 4b04 	ldr.w	r4, [sp], #4
90026b20:	4770      	bx	lr

90026b22 <__sfputs_r>:
90026b22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90026b24:	4606      	mov	r6, r0
90026b26:	460f      	mov	r7, r1
90026b28:	4614      	mov	r4, r2
90026b2a:	18d5      	adds	r5, r2, r3
90026b2c:	42ac      	cmp	r4, r5
90026b2e:	d101      	bne.n	90026b34 <__sfputs_r+0x12>
90026b30:	2000      	movs	r0, #0
90026b32:	e007      	b.n	90026b44 <__sfputs_r+0x22>
90026b34:	f814 1b01 	ldrb.w	r1, [r4], #1
90026b38:	463a      	mov	r2, r7
90026b3a:	4630      	mov	r0, r6
90026b3c:	f7ff ffda 	bl	90026af4 <__sfputc_r>
90026b40:	1c43      	adds	r3, r0, #1
90026b42:	d1f3      	bne.n	90026b2c <__sfputs_r+0xa>
90026b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90026b48 <_vfiprintf_r>:
90026b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026b4c:	460d      	mov	r5, r1
90026b4e:	b09d      	sub	sp, #116	; 0x74
90026b50:	4614      	mov	r4, r2
90026b52:	4698      	mov	r8, r3
90026b54:	4606      	mov	r6, r0
90026b56:	b118      	cbz	r0, 90026b60 <_vfiprintf_r+0x18>
90026b58:	6a03      	ldr	r3, [r0, #32]
90026b5a:	b90b      	cbnz	r3, 90026b60 <_vfiprintf_r+0x18>
90026b5c:	f7ff fd10 	bl	90026580 <__sinit>
90026b60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026b62:	07d9      	lsls	r1, r3, #31
90026b64:	d405      	bmi.n	90026b72 <_vfiprintf_r+0x2a>
90026b66:	89ab      	ldrh	r3, [r5, #12]
90026b68:	059a      	lsls	r2, r3, #22
90026b6a:	d402      	bmi.n	90026b72 <_vfiprintf_r+0x2a>
90026b6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026b6e:	f7ff ff06 	bl	9002697e <__retarget_lock_acquire_recursive>
90026b72:	89ab      	ldrh	r3, [r5, #12]
90026b74:	071b      	lsls	r3, r3, #28
90026b76:	d501      	bpl.n	90026b7c <_vfiprintf_r+0x34>
90026b78:	692b      	ldr	r3, [r5, #16]
90026b7a:	b99b      	cbnz	r3, 90026ba4 <_vfiprintf_r+0x5c>
90026b7c:	4629      	mov	r1, r5
90026b7e:	4630      	mov	r0, r6
90026b80:	f7ff fdc6 	bl	90026710 <__swsetup_r>
90026b84:	b170      	cbz	r0, 90026ba4 <_vfiprintf_r+0x5c>
90026b86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026b88:	07dc      	lsls	r4, r3, #31
90026b8a:	d504      	bpl.n	90026b96 <_vfiprintf_r+0x4e>
90026b8c:	f04f 30ff 	mov.w	r0, #4294967295
90026b90:	b01d      	add	sp, #116	; 0x74
90026b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026b96:	89ab      	ldrh	r3, [r5, #12]
90026b98:	0598      	lsls	r0, r3, #22
90026b9a:	d4f7      	bmi.n	90026b8c <_vfiprintf_r+0x44>
90026b9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026b9e:	f7ff feef 	bl	90026980 <__retarget_lock_release_recursive>
90026ba2:	e7f3      	b.n	90026b8c <_vfiprintf_r+0x44>
90026ba4:	2300      	movs	r3, #0
90026ba6:	9309      	str	r3, [sp, #36]	; 0x24
90026ba8:	2320      	movs	r3, #32
90026baa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
90026bae:	f8cd 800c 	str.w	r8, [sp, #12]
90026bb2:	2330      	movs	r3, #48	; 0x30
90026bb4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 90026d68 <_vfiprintf_r+0x220>
90026bb8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
90026bbc:	f04f 0901 	mov.w	r9, #1
90026bc0:	4623      	mov	r3, r4
90026bc2:	469a      	mov	sl, r3
90026bc4:	f813 2b01 	ldrb.w	r2, [r3], #1
90026bc8:	b10a      	cbz	r2, 90026bce <_vfiprintf_r+0x86>
90026bca:	2a25      	cmp	r2, #37	; 0x25
90026bcc:	d1f9      	bne.n	90026bc2 <_vfiprintf_r+0x7a>
90026bce:	ebba 0b04 	subs.w	fp, sl, r4
90026bd2:	d00b      	beq.n	90026bec <_vfiprintf_r+0xa4>
90026bd4:	465b      	mov	r3, fp
90026bd6:	4622      	mov	r2, r4
90026bd8:	4629      	mov	r1, r5
90026bda:	4630      	mov	r0, r6
90026bdc:	f7ff ffa1 	bl	90026b22 <__sfputs_r>
90026be0:	3001      	adds	r0, #1
90026be2:	f000 80a9 	beq.w	90026d38 <_vfiprintf_r+0x1f0>
90026be6:	9a09      	ldr	r2, [sp, #36]	; 0x24
90026be8:	445a      	add	r2, fp
90026bea:	9209      	str	r2, [sp, #36]	; 0x24
90026bec:	f89a 3000 	ldrb.w	r3, [sl]
90026bf0:	2b00      	cmp	r3, #0
90026bf2:	f000 80a1 	beq.w	90026d38 <_vfiprintf_r+0x1f0>
90026bf6:	2300      	movs	r3, #0
90026bf8:	f04f 32ff 	mov.w	r2, #4294967295
90026bfc:	e9cd 2305 	strd	r2, r3, [sp, #20]
90026c00:	f10a 0a01 	add.w	sl, sl, #1
90026c04:	9304      	str	r3, [sp, #16]
90026c06:	9307      	str	r3, [sp, #28]
90026c08:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
90026c0c:	931a      	str	r3, [sp, #104]	; 0x68
90026c0e:	4654      	mov	r4, sl
90026c10:	2205      	movs	r2, #5
90026c12:	f814 1b01 	ldrb.w	r1, [r4], #1
90026c16:	4854      	ldr	r0, [pc, #336]	; (90026d68 <_vfiprintf_r+0x220>)
90026c18:	f7d9 fb62 	bl	900002e0 <memchr>
90026c1c:	9a04      	ldr	r2, [sp, #16]
90026c1e:	b9d8      	cbnz	r0, 90026c58 <_vfiprintf_r+0x110>
90026c20:	06d1      	lsls	r1, r2, #27
90026c22:	bf44      	itt	mi
90026c24:	2320      	movmi	r3, #32
90026c26:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026c2a:	0713      	lsls	r3, r2, #28
90026c2c:	bf44      	itt	mi
90026c2e:	232b      	movmi	r3, #43	; 0x2b
90026c30:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
90026c34:	f89a 3000 	ldrb.w	r3, [sl]
90026c38:	2b2a      	cmp	r3, #42	; 0x2a
90026c3a:	d015      	beq.n	90026c68 <_vfiprintf_r+0x120>
90026c3c:	9a07      	ldr	r2, [sp, #28]
90026c3e:	4654      	mov	r4, sl
90026c40:	2000      	movs	r0, #0
90026c42:	f04f 0c0a 	mov.w	ip, #10
90026c46:	4621      	mov	r1, r4
90026c48:	f811 3b01 	ldrb.w	r3, [r1], #1
90026c4c:	3b30      	subs	r3, #48	; 0x30
90026c4e:	2b09      	cmp	r3, #9
90026c50:	d94d      	bls.n	90026cee <_vfiprintf_r+0x1a6>
90026c52:	b1b0      	cbz	r0, 90026c82 <_vfiprintf_r+0x13a>
90026c54:	9207      	str	r2, [sp, #28]
90026c56:	e014      	b.n	90026c82 <_vfiprintf_r+0x13a>
90026c58:	eba0 0308 	sub.w	r3, r0, r8
90026c5c:	fa09 f303 	lsl.w	r3, r9, r3
90026c60:	4313      	orrs	r3, r2
90026c62:	9304      	str	r3, [sp, #16]
90026c64:	46a2      	mov	sl, r4
90026c66:	e7d2      	b.n	90026c0e <_vfiprintf_r+0xc6>
90026c68:	9b03      	ldr	r3, [sp, #12]
90026c6a:	1d19      	adds	r1, r3, #4
90026c6c:	681b      	ldr	r3, [r3, #0]
90026c6e:	9103      	str	r1, [sp, #12]
90026c70:	2b00      	cmp	r3, #0
90026c72:	bfbb      	ittet	lt
90026c74:	425b      	neglt	r3, r3
90026c76:	f042 0202 	orrlt.w	r2, r2, #2
90026c7a:	9307      	strge	r3, [sp, #28]
90026c7c:	9307      	strlt	r3, [sp, #28]
90026c7e:	bfb8      	it	lt
90026c80:	9204      	strlt	r2, [sp, #16]
90026c82:	7823      	ldrb	r3, [r4, #0]
90026c84:	2b2e      	cmp	r3, #46	; 0x2e
90026c86:	d10c      	bne.n	90026ca2 <_vfiprintf_r+0x15a>
90026c88:	7863      	ldrb	r3, [r4, #1]
90026c8a:	2b2a      	cmp	r3, #42	; 0x2a
90026c8c:	d134      	bne.n	90026cf8 <_vfiprintf_r+0x1b0>
90026c8e:	9b03      	ldr	r3, [sp, #12]
90026c90:	1d1a      	adds	r2, r3, #4
90026c92:	681b      	ldr	r3, [r3, #0]
90026c94:	9203      	str	r2, [sp, #12]
90026c96:	2b00      	cmp	r3, #0
90026c98:	bfb8      	it	lt
90026c9a:	f04f 33ff 	movlt.w	r3, #4294967295
90026c9e:	3402      	adds	r4, #2
90026ca0:	9305      	str	r3, [sp, #20]
90026ca2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 90026d78 <_vfiprintf_r+0x230>
90026ca6:	7821      	ldrb	r1, [r4, #0]
90026ca8:	2203      	movs	r2, #3
90026caa:	4650      	mov	r0, sl
90026cac:	f7d9 fb18 	bl	900002e0 <memchr>
90026cb0:	b138      	cbz	r0, 90026cc2 <_vfiprintf_r+0x17a>
90026cb2:	9b04      	ldr	r3, [sp, #16]
90026cb4:	eba0 000a 	sub.w	r0, r0, sl
90026cb8:	2240      	movs	r2, #64	; 0x40
90026cba:	4082      	lsls	r2, r0
90026cbc:	4313      	orrs	r3, r2
90026cbe:	3401      	adds	r4, #1
90026cc0:	9304      	str	r3, [sp, #16]
90026cc2:	f814 1b01 	ldrb.w	r1, [r4], #1
90026cc6:	4829      	ldr	r0, [pc, #164]	; (90026d6c <_vfiprintf_r+0x224>)
90026cc8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
90026ccc:	2206      	movs	r2, #6
90026cce:	f7d9 fb07 	bl	900002e0 <memchr>
90026cd2:	2800      	cmp	r0, #0
90026cd4:	d03f      	beq.n	90026d56 <_vfiprintf_r+0x20e>
90026cd6:	4b26      	ldr	r3, [pc, #152]	; (90026d70 <_vfiprintf_r+0x228>)
90026cd8:	bb1b      	cbnz	r3, 90026d22 <_vfiprintf_r+0x1da>
90026cda:	9b03      	ldr	r3, [sp, #12]
90026cdc:	3307      	adds	r3, #7
90026cde:	f023 0307 	bic.w	r3, r3, #7
90026ce2:	3308      	adds	r3, #8
90026ce4:	9303      	str	r3, [sp, #12]
90026ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
90026ce8:	443b      	add	r3, r7
90026cea:	9309      	str	r3, [sp, #36]	; 0x24
90026cec:	e768      	b.n	90026bc0 <_vfiprintf_r+0x78>
90026cee:	fb0c 3202 	mla	r2, ip, r2, r3
90026cf2:	460c      	mov	r4, r1
90026cf4:	2001      	movs	r0, #1
90026cf6:	e7a6      	b.n	90026c46 <_vfiprintf_r+0xfe>
90026cf8:	2300      	movs	r3, #0
90026cfa:	3401      	adds	r4, #1
90026cfc:	9305      	str	r3, [sp, #20]
90026cfe:	4619      	mov	r1, r3
90026d00:	f04f 0c0a 	mov.w	ip, #10
90026d04:	4620      	mov	r0, r4
90026d06:	f810 2b01 	ldrb.w	r2, [r0], #1
90026d0a:	3a30      	subs	r2, #48	; 0x30
90026d0c:	2a09      	cmp	r2, #9
90026d0e:	d903      	bls.n	90026d18 <_vfiprintf_r+0x1d0>
90026d10:	2b00      	cmp	r3, #0
90026d12:	d0c6      	beq.n	90026ca2 <_vfiprintf_r+0x15a>
90026d14:	9105      	str	r1, [sp, #20]
90026d16:	e7c4      	b.n	90026ca2 <_vfiprintf_r+0x15a>
90026d18:	fb0c 2101 	mla	r1, ip, r1, r2
90026d1c:	4604      	mov	r4, r0
90026d1e:	2301      	movs	r3, #1
90026d20:	e7f0      	b.n	90026d04 <_vfiprintf_r+0x1bc>
90026d22:	ab03      	add	r3, sp, #12
90026d24:	9300      	str	r3, [sp, #0]
90026d26:	462a      	mov	r2, r5
90026d28:	4b12      	ldr	r3, [pc, #72]	; (90026d74 <_vfiprintf_r+0x22c>)
90026d2a:	a904      	add	r1, sp, #16
90026d2c:	4630      	mov	r0, r6
90026d2e:	f3af 8000 	nop.w
90026d32:	4607      	mov	r7, r0
90026d34:	1c78      	adds	r0, r7, #1
90026d36:	d1d6      	bne.n	90026ce6 <_vfiprintf_r+0x19e>
90026d38:	6e6b      	ldr	r3, [r5, #100]	; 0x64
90026d3a:	07d9      	lsls	r1, r3, #31
90026d3c:	d405      	bmi.n	90026d4a <_vfiprintf_r+0x202>
90026d3e:	89ab      	ldrh	r3, [r5, #12]
90026d40:	059a      	lsls	r2, r3, #22
90026d42:	d402      	bmi.n	90026d4a <_vfiprintf_r+0x202>
90026d44:	6da8      	ldr	r0, [r5, #88]	; 0x58
90026d46:	f7ff fe1b 	bl	90026980 <__retarget_lock_release_recursive>
90026d4a:	89ab      	ldrh	r3, [r5, #12]
90026d4c:	065b      	lsls	r3, r3, #25
90026d4e:	f53f af1d 	bmi.w	90026b8c <_vfiprintf_r+0x44>
90026d52:	9809      	ldr	r0, [sp, #36]	; 0x24
90026d54:	e71c      	b.n	90026b90 <_vfiprintf_r+0x48>
90026d56:	ab03      	add	r3, sp, #12
90026d58:	9300      	str	r3, [sp, #0]
90026d5a:	462a      	mov	r2, r5
90026d5c:	4b05      	ldr	r3, [pc, #20]	; (90026d74 <_vfiprintf_r+0x22c>)
90026d5e:	a904      	add	r1, sp, #16
90026d60:	4630      	mov	r0, r6
90026d62:	f000 f879 	bl	90026e58 <_printf_i>
90026d66:	e7e4      	b.n	90026d32 <_vfiprintf_r+0x1ea>
90026d68:	9002ac54 	.word	0x9002ac54
90026d6c:	9002ac5e 	.word	0x9002ac5e
90026d70:	00000000 	.word	0x00000000
90026d74:	90026b23 	.word	0x90026b23
90026d78:	9002ac5a 	.word	0x9002ac5a

90026d7c <_printf_common>:
90026d7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026d80:	4616      	mov	r6, r2
90026d82:	4699      	mov	r9, r3
90026d84:	688a      	ldr	r2, [r1, #8]
90026d86:	690b      	ldr	r3, [r1, #16]
90026d88:	f8dd 8020 	ldr.w	r8, [sp, #32]
90026d8c:	4293      	cmp	r3, r2
90026d8e:	bfb8      	it	lt
90026d90:	4613      	movlt	r3, r2
90026d92:	6033      	str	r3, [r6, #0]
90026d94:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
90026d98:	4607      	mov	r7, r0
90026d9a:	460c      	mov	r4, r1
90026d9c:	b10a      	cbz	r2, 90026da2 <_printf_common+0x26>
90026d9e:	3301      	adds	r3, #1
90026da0:	6033      	str	r3, [r6, #0]
90026da2:	6823      	ldr	r3, [r4, #0]
90026da4:	0699      	lsls	r1, r3, #26
90026da6:	bf42      	ittt	mi
90026da8:	6833      	ldrmi	r3, [r6, #0]
90026daa:	3302      	addmi	r3, #2
90026dac:	6033      	strmi	r3, [r6, #0]
90026dae:	6825      	ldr	r5, [r4, #0]
90026db0:	f015 0506 	ands.w	r5, r5, #6
90026db4:	d106      	bne.n	90026dc4 <_printf_common+0x48>
90026db6:	f104 0a19 	add.w	sl, r4, #25
90026dba:	68e3      	ldr	r3, [r4, #12]
90026dbc:	6832      	ldr	r2, [r6, #0]
90026dbe:	1a9b      	subs	r3, r3, r2
90026dc0:	42ab      	cmp	r3, r5
90026dc2:	dc26      	bgt.n	90026e12 <_printf_common+0x96>
90026dc4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
90026dc8:	1e13      	subs	r3, r2, #0
90026dca:	6822      	ldr	r2, [r4, #0]
90026dcc:	bf18      	it	ne
90026dce:	2301      	movne	r3, #1
90026dd0:	0692      	lsls	r2, r2, #26
90026dd2:	d42b      	bmi.n	90026e2c <_printf_common+0xb0>
90026dd4:	f104 0243 	add.w	r2, r4, #67	; 0x43
90026dd8:	4649      	mov	r1, r9
90026dda:	4638      	mov	r0, r7
90026ddc:	47c0      	blx	r8
90026dde:	3001      	adds	r0, #1
90026de0:	d01e      	beq.n	90026e20 <_printf_common+0xa4>
90026de2:	6823      	ldr	r3, [r4, #0]
90026de4:	6922      	ldr	r2, [r4, #16]
90026de6:	f003 0306 	and.w	r3, r3, #6
90026dea:	2b04      	cmp	r3, #4
90026dec:	bf02      	ittt	eq
90026dee:	68e5      	ldreq	r5, [r4, #12]
90026df0:	6833      	ldreq	r3, [r6, #0]
90026df2:	1aed      	subeq	r5, r5, r3
90026df4:	68a3      	ldr	r3, [r4, #8]
90026df6:	bf0c      	ite	eq
90026df8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
90026dfc:	2500      	movne	r5, #0
90026dfe:	4293      	cmp	r3, r2
90026e00:	bfc4      	itt	gt
90026e02:	1a9b      	subgt	r3, r3, r2
90026e04:	18ed      	addgt	r5, r5, r3
90026e06:	2600      	movs	r6, #0
90026e08:	341a      	adds	r4, #26
90026e0a:	42b5      	cmp	r5, r6
90026e0c:	d11a      	bne.n	90026e44 <_printf_common+0xc8>
90026e0e:	2000      	movs	r0, #0
90026e10:	e008      	b.n	90026e24 <_printf_common+0xa8>
90026e12:	2301      	movs	r3, #1
90026e14:	4652      	mov	r2, sl
90026e16:	4649      	mov	r1, r9
90026e18:	4638      	mov	r0, r7
90026e1a:	47c0      	blx	r8
90026e1c:	3001      	adds	r0, #1
90026e1e:	d103      	bne.n	90026e28 <_printf_common+0xac>
90026e20:	f04f 30ff 	mov.w	r0, #4294967295
90026e24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026e28:	3501      	adds	r5, #1
90026e2a:	e7c6      	b.n	90026dba <_printf_common+0x3e>
90026e2c:	18e1      	adds	r1, r4, r3
90026e2e:	1c5a      	adds	r2, r3, #1
90026e30:	2030      	movs	r0, #48	; 0x30
90026e32:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
90026e36:	4422      	add	r2, r4
90026e38:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
90026e3c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
90026e40:	3302      	adds	r3, #2
90026e42:	e7c7      	b.n	90026dd4 <_printf_common+0x58>
90026e44:	2301      	movs	r3, #1
90026e46:	4622      	mov	r2, r4
90026e48:	4649      	mov	r1, r9
90026e4a:	4638      	mov	r0, r7
90026e4c:	47c0      	blx	r8
90026e4e:	3001      	adds	r0, #1
90026e50:	d0e6      	beq.n	90026e20 <_printf_common+0xa4>
90026e52:	3601      	adds	r6, #1
90026e54:	e7d9      	b.n	90026e0a <_printf_common+0x8e>
	...

90026e58 <_printf_i>:
90026e58:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
90026e5c:	7e0f      	ldrb	r7, [r1, #24]
90026e5e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
90026e60:	2f78      	cmp	r7, #120	; 0x78
90026e62:	4691      	mov	r9, r2
90026e64:	4680      	mov	r8, r0
90026e66:	460c      	mov	r4, r1
90026e68:	469a      	mov	sl, r3
90026e6a:	f101 0243 	add.w	r2, r1, #67	; 0x43
90026e6e:	d807      	bhi.n	90026e80 <_printf_i+0x28>
90026e70:	2f62      	cmp	r7, #98	; 0x62
90026e72:	d80a      	bhi.n	90026e8a <_printf_i+0x32>
90026e74:	2f00      	cmp	r7, #0
90026e76:	f000 80d4 	beq.w	90027022 <_printf_i+0x1ca>
90026e7a:	2f58      	cmp	r7, #88	; 0x58
90026e7c:	f000 80c0 	beq.w	90027000 <_printf_i+0x1a8>
90026e80:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026e84:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
90026e88:	e03a      	b.n	90026f00 <_printf_i+0xa8>
90026e8a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
90026e8e:	2b15      	cmp	r3, #21
90026e90:	d8f6      	bhi.n	90026e80 <_printf_i+0x28>
90026e92:	a101      	add	r1, pc, #4	; (adr r1, 90026e98 <_printf_i+0x40>)
90026e94:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
90026e98:	90026ef1 	.word	0x90026ef1
90026e9c:	90026f05 	.word	0x90026f05
90026ea0:	90026e81 	.word	0x90026e81
90026ea4:	90026e81 	.word	0x90026e81
90026ea8:	90026e81 	.word	0x90026e81
90026eac:	90026e81 	.word	0x90026e81
90026eb0:	90026f05 	.word	0x90026f05
90026eb4:	90026e81 	.word	0x90026e81
90026eb8:	90026e81 	.word	0x90026e81
90026ebc:	90026e81 	.word	0x90026e81
90026ec0:	90026e81 	.word	0x90026e81
90026ec4:	90027009 	.word	0x90027009
90026ec8:	90026f31 	.word	0x90026f31
90026ecc:	90026fc3 	.word	0x90026fc3
90026ed0:	90026e81 	.word	0x90026e81
90026ed4:	90026e81 	.word	0x90026e81
90026ed8:	9002702b 	.word	0x9002702b
90026edc:	90026e81 	.word	0x90026e81
90026ee0:	90026f31 	.word	0x90026f31
90026ee4:	90026e81 	.word	0x90026e81
90026ee8:	90026e81 	.word	0x90026e81
90026eec:	90026fcb 	.word	0x90026fcb
90026ef0:	682b      	ldr	r3, [r5, #0]
90026ef2:	1d1a      	adds	r2, r3, #4
90026ef4:	681b      	ldr	r3, [r3, #0]
90026ef6:	602a      	str	r2, [r5, #0]
90026ef8:	f104 0542 	add.w	r5, r4, #66	; 0x42
90026efc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
90026f00:	2301      	movs	r3, #1
90026f02:	e09f      	b.n	90027044 <_printf_i+0x1ec>
90026f04:	6820      	ldr	r0, [r4, #0]
90026f06:	682b      	ldr	r3, [r5, #0]
90026f08:	0607      	lsls	r7, r0, #24
90026f0a:	f103 0104 	add.w	r1, r3, #4
90026f0e:	6029      	str	r1, [r5, #0]
90026f10:	d501      	bpl.n	90026f16 <_printf_i+0xbe>
90026f12:	681e      	ldr	r6, [r3, #0]
90026f14:	e003      	b.n	90026f1e <_printf_i+0xc6>
90026f16:	0646      	lsls	r6, r0, #25
90026f18:	d5fb      	bpl.n	90026f12 <_printf_i+0xba>
90026f1a:	f9b3 6000 	ldrsh.w	r6, [r3]
90026f1e:	2e00      	cmp	r6, #0
90026f20:	da03      	bge.n	90026f2a <_printf_i+0xd2>
90026f22:	232d      	movs	r3, #45	; 0x2d
90026f24:	4276      	negs	r6, r6
90026f26:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
90026f2a:	485a      	ldr	r0, [pc, #360]	; (90027094 <_printf_i+0x23c>)
90026f2c:	230a      	movs	r3, #10
90026f2e:	e012      	b.n	90026f56 <_printf_i+0xfe>
90026f30:	682b      	ldr	r3, [r5, #0]
90026f32:	6820      	ldr	r0, [r4, #0]
90026f34:	1d19      	adds	r1, r3, #4
90026f36:	6029      	str	r1, [r5, #0]
90026f38:	0605      	lsls	r5, r0, #24
90026f3a:	d501      	bpl.n	90026f40 <_printf_i+0xe8>
90026f3c:	681e      	ldr	r6, [r3, #0]
90026f3e:	e002      	b.n	90026f46 <_printf_i+0xee>
90026f40:	0641      	lsls	r1, r0, #25
90026f42:	d5fb      	bpl.n	90026f3c <_printf_i+0xe4>
90026f44:	881e      	ldrh	r6, [r3, #0]
90026f46:	4853      	ldr	r0, [pc, #332]	; (90027094 <_printf_i+0x23c>)
90026f48:	2f6f      	cmp	r7, #111	; 0x6f
90026f4a:	bf0c      	ite	eq
90026f4c:	2308      	moveq	r3, #8
90026f4e:	230a      	movne	r3, #10
90026f50:	2100      	movs	r1, #0
90026f52:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
90026f56:	6865      	ldr	r5, [r4, #4]
90026f58:	60a5      	str	r5, [r4, #8]
90026f5a:	2d00      	cmp	r5, #0
90026f5c:	bfa2      	ittt	ge
90026f5e:	6821      	ldrge	r1, [r4, #0]
90026f60:	f021 0104 	bicge.w	r1, r1, #4
90026f64:	6021      	strge	r1, [r4, #0]
90026f66:	b90e      	cbnz	r6, 90026f6c <_printf_i+0x114>
90026f68:	2d00      	cmp	r5, #0
90026f6a:	d04b      	beq.n	90027004 <_printf_i+0x1ac>
90026f6c:	4615      	mov	r5, r2
90026f6e:	fbb6 f1f3 	udiv	r1, r6, r3
90026f72:	fb03 6711 	mls	r7, r3, r1, r6
90026f76:	5dc7      	ldrb	r7, [r0, r7]
90026f78:	f805 7d01 	strb.w	r7, [r5, #-1]!
90026f7c:	4637      	mov	r7, r6
90026f7e:	42bb      	cmp	r3, r7
90026f80:	460e      	mov	r6, r1
90026f82:	d9f4      	bls.n	90026f6e <_printf_i+0x116>
90026f84:	2b08      	cmp	r3, #8
90026f86:	d10b      	bne.n	90026fa0 <_printf_i+0x148>
90026f88:	6823      	ldr	r3, [r4, #0]
90026f8a:	07de      	lsls	r6, r3, #31
90026f8c:	d508      	bpl.n	90026fa0 <_printf_i+0x148>
90026f8e:	6923      	ldr	r3, [r4, #16]
90026f90:	6861      	ldr	r1, [r4, #4]
90026f92:	4299      	cmp	r1, r3
90026f94:	bfde      	ittt	le
90026f96:	2330      	movle	r3, #48	; 0x30
90026f98:	f805 3c01 	strble.w	r3, [r5, #-1]
90026f9c:	f105 35ff 	addle.w	r5, r5, #4294967295
90026fa0:	1b52      	subs	r2, r2, r5
90026fa2:	6122      	str	r2, [r4, #16]
90026fa4:	f8cd a000 	str.w	sl, [sp]
90026fa8:	464b      	mov	r3, r9
90026faa:	aa03      	add	r2, sp, #12
90026fac:	4621      	mov	r1, r4
90026fae:	4640      	mov	r0, r8
90026fb0:	f7ff fee4 	bl	90026d7c <_printf_common>
90026fb4:	3001      	adds	r0, #1
90026fb6:	d14a      	bne.n	9002704e <_printf_i+0x1f6>
90026fb8:	f04f 30ff 	mov.w	r0, #4294967295
90026fbc:	b004      	add	sp, #16
90026fbe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026fc2:	6823      	ldr	r3, [r4, #0]
90026fc4:	f043 0320 	orr.w	r3, r3, #32
90026fc8:	6023      	str	r3, [r4, #0]
90026fca:	4833      	ldr	r0, [pc, #204]	; (90027098 <_printf_i+0x240>)
90026fcc:	2778      	movs	r7, #120	; 0x78
90026fce:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
90026fd2:	6823      	ldr	r3, [r4, #0]
90026fd4:	6829      	ldr	r1, [r5, #0]
90026fd6:	061f      	lsls	r7, r3, #24
90026fd8:	f851 6b04 	ldr.w	r6, [r1], #4
90026fdc:	d402      	bmi.n	90026fe4 <_printf_i+0x18c>
90026fde:	065f      	lsls	r7, r3, #25
90026fe0:	bf48      	it	mi
90026fe2:	b2b6      	uxthmi	r6, r6
90026fe4:	07df      	lsls	r7, r3, #31
90026fe6:	bf48      	it	mi
90026fe8:	f043 0320 	orrmi.w	r3, r3, #32
90026fec:	6029      	str	r1, [r5, #0]
90026fee:	bf48      	it	mi
90026ff0:	6023      	strmi	r3, [r4, #0]
90026ff2:	b91e      	cbnz	r6, 90026ffc <_printf_i+0x1a4>
90026ff4:	6823      	ldr	r3, [r4, #0]
90026ff6:	f023 0320 	bic.w	r3, r3, #32
90026ffa:	6023      	str	r3, [r4, #0]
90026ffc:	2310      	movs	r3, #16
90026ffe:	e7a7      	b.n	90026f50 <_printf_i+0xf8>
90027000:	4824      	ldr	r0, [pc, #144]	; (90027094 <_printf_i+0x23c>)
90027002:	e7e4      	b.n	90026fce <_printf_i+0x176>
90027004:	4615      	mov	r5, r2
90027006:	e7bd      	b.n	90026f84 <_printf_i+0x12c>
90027008:	682b      	ldr	r3, [r5, #0]
9002700a:	6826      	ldr	r6, [r4, #0]
9002700c:	6961      	ldr	r1, [r4, #20]
9002700e:	1d18      	adds	r0, r3, #4
90027010:	6028      	str	r0, [r5, #0]
90027012:	0635      	lsls	r5, r6, #24
90027014:	681b      	ldr	r3, [r3, #0]
90027016:	d501      	bpl.n	9002701c <_printf_i+0x1c4>
90027018:	6019      	str	r1, [r3, #0]
9002701a:	e002      	b.n	90027022 <_printf_i+0x1ca>
9002701c:	0670      	lsls	r0, r6, #25
9002701e:	d5fb      	bpl.n	90027018 <_printf_i+0x1c0>
90027020:	8019      	strh	r1, [r3, #0]
90027022:	2300      	movs	r3, #0
90027024:	6123      	str	r3, [r4, #16]
90027026:	4615      	mov	r5, r2
90027028:	e7bc      	b.n	90026fa4 <_printf_i+0x14c>
9002702a:	682b      	ldr	r3, [r5, #0]
9002702c:	1d1a      	adds	r2, r3, #4
9002702e:	602a      	str	r2, [r5, #0]
90027030:	681d      	ldr	r5, [r3, #0]
90027032:	6862      	ldr	r2, [r4, #4]
90027034:	2100      	movs	r1, #0
90027036:	4628      	mov	r0, r5
90027038:	f7d9 f952 	bl	900002e0 <memchr>
9002703c:	b108      	cbz	r0, 90027042 <_printf_i+0x1ea>
9002703e:	1b40      	subs	r0, r0, r5
90027040:	6060      	str	r0, [r4, #4]
90027042:	6863      	ldr	r3, [r4, #4]
90027044:	6123      	str	r3, [r4, #16]
90027046:	2300      	movs	r3, #0
90027048:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
9002704c:	e7aa      	b.n	90026fa4 <_printf_i+0x14c>
9002704e:	6923      	ldr	r3, [r4, #16]
90027050:	462a      	mov	r2, r5
90027052:	4649      	mov	r1, r9
90027054:	4640      	mov	r0, r8
90027056:	47d0      	blx	sl
90027058:	3001      	adds	r0, #1
9002705a:	d0ad      	beq.n	90026fb8 <_printf_i+0x160>
9002705c:	6823      	ldr	r3, [r4, #0]
9002705e:	079b      	lsls	r3, r3, #30
90027060:	d413      	bmi.n	9002708a <_printf_i+0x232>
90027062:	68e0      	ldr	r0, [r4, #12]
90027064:	9b03      	ldr	r3, [sp, #12]
90027066:	4298      	cmp	r0, r3
90027068:	bfb8      	it	lt
9002706a:	4618      	movlt	r0, r3
9002706c:	e7a6      	b.n	90026fbc <_printf_i+0x164>
9002706e:	2301      	movs	r3, #1
90027070:	4632      	mov	r2, r6
90027072:	4649      	mov	r1, r9
90027074:	4640      	mov	r0, r8
90027076:	47d0      	blx	sl
90027078:	3001      	adds	r0, #1
9002707a:	d09d      	beq.n	90026fb8 <_printf_i+0x160>
9002707c:	3501      	adds	r5, #1
9002707e:	68e3      	ldr	r3, [r4, #12]
90027080:	9903      	ldr	r1, [sp, #12]
90027082:	1a5b      	subs	r3, r3, r1
90027084:	42ab      	cmp	r3, r5
90027086:	dcf2      	bgt.n	9002706e <_printf_i+0x216>
90027088:	e7eb      	b.n	90027062 <_printf_i+0x20a>
9002708a:	2500      	movs	r5, #0
9002708c:	f104 0619 	add.w	r6, r4, #25
90027090:	e7f5      	b.n	9002707e <_printf_i+0x226>
90027092:	bf00      	nop
90027094:	9002ac65 	.word	0x9002ac65
90027098:	9002ac76 	.word	0x9002ac76

9002709c <__sflush_r>:
9002709c:	898a      	ldrh	r2, [r1, #12]
9002709e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900270a2:	4605      	mov	r5, r0
900270a4:	0710      	lsls	r0, r2, #28
900270a6:	460c      	mov	r4, r1
900270a8:	d458      	bmi.n	9002715c <__sflush_r+0xc0>
900270aa:	684b      	ldr	r3, [r1, #4]
900270ac:	2b00      	cmp	r3, #0
900270ae:	dc05      	bgt.n	900270bc <__sflush_r+0x20>
900270b0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
900270b2:	2b00      	cmp	r3, #0
900270b4:	dc02      	bgt.n	900270bc <__sflush_r+0x20>
900270b6:	2000      	movs	r0, #0
900270b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900270bc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
900270be:	2e00      	cmp	r6, #0
900270c0:	d0f9      	beq.n	900270b6 <__sflush_r+0x1a>
900270c2:	2300      	movs	r3, #0
900270c4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
900270c8:	682f      	ldr	r7, [r5, #0]
900270ca:	6a21      	ldr	r1, [r4, #32]
900270cc:	602b      	str	r3, [r5, #0]
900270ce:	d032      	beq.n	90027136 <__sflush_r+0x9a>
900270d0:	6d60      	ldr	r0, [r4, #84]	; 0x54
900270d2:	89a3      	ldrh	r3, [r4, #12]
900270d4:	075a      	lsls	r2, r3, #29
900270d6:	d505      	bpl.n	900270e4 <__sflush_r+0x48>
900270d8:	6863      	ldr	r3, [r4, #4]
900270da:	1ac0      	subs	r0, r0, r3
900270dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
900270de:	b10b      	cbz	r3, 900270e4 <__sflush_r+0x48>
900270e0:	6c23      	ldr	r3, [r4, #64]	; 0x40
900270e2:	1ac0      	subs	r0, r0, r3
900270e4:	2300      	movs	r3, #0
900270e6:	4602      	mov	r2, r0
900270e8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
900270ea:	6a21      	ldr	r1, [r4, #32]
900270ec:	4628      	mov	r0, r5
900270ee:	47b0      	blx	r6
900270f0:	1c43      	adds	r3, r0, #1
900270f2:	89a3      	ldrh	r3, [r4, #12]
900270f4:	d106      	bne.n	90027104 <__sflush_r+0x68>
900270f6:	6829      	ldr	r1, [r5, #0]
900270f8:	291d      	cmp	r1, #29
900270fa:	d82b      	bhi.n	90027154 <__sflush_r+0xb8>
900270fc:	4a29      	ldr	r2, [pc, #164]	; (900271a4 <__sflush_r+0x108>)
900270fe:	410a      	asrs	r2, r1
90027100:	07d6      	lsls	r6, r2, #31
90027102:	d427      	bmi.n	90027154 <__sflush_r+0xb8>
90027104:	2200      	movs	r2, #0
90027106:	6062      	str	r2, [r4, #4]
90027108:	04d9      	lsls	r1, r3, #19
9002710a:	6922      	ldr	r2, [r4, #16]
9002710c:	6022      	str	r2, [r4, #0]
9002710e:	d504      	bpl.n	9002711a <__sflush_r+0x7e>
90027110:	1c42      	adds	r2, r0, #1
90027112:	d101      	bne.n	90027118 <__sflush_r+0x7c>
90027114:	682b      	ldr	r3, [r5, #0]
90027116:	b903      	cbnz	r3, 9002711a <__sflush_r+0x7e>
90027118:	6560      	str	r0, [r4, #84]	; 0x54
9002711a:	6b61      	ldr	r1, [r4, #52]	; 0x34
9002711c:	602f      	str	r7, [r5, #0]
9002711e:	2900      	cmp	r1, #0
90027120:	d0c9      	beq.n	900270b6 <__sflush_r+0x1a>
90027122:	f104 0344 	add.w	r3, r4, #68	; 0x44
90027126:	4299      	cmp	r1, r3
90027128:	d002      	beq.n	90027130 <__sflush_r+0x94>
9002712a:	4628      	mov	r0, r5
9002712c:	f7ff fc96 	bl	90026a5c <_free_r>
90027130:	2000      	movs	r0, #0
90027132:	6360      	str	r0, [r4, #52]	; 0x34
90027134:	e7c0      	b.n	900270b8 <__sflush_r+0x1c>
90027136:	2301      	movs	r3, #1
90027138:	4628      	mov	r0, r5
9002713a:	47b0      	blx	r6
9002713c:	1c41      	adds	r1, r0, #1
9002713e:	d1c8      	bne.n	900270d2 <__sflush_r+0x36>
90027140:	682b      	ldr	r3, [r5, #0]
90027142:	2b00      	cmp	r3, #0
90027144:	d0c5      	beq.n	900270d2 <__sflush_r+0x36>
90027146:	2b1d      	cmp	r3, #29
90027148:	d001      	beq.n	9002714e <__sflush_r+0xb2>
9002714a:	2b16      	cmp	r3, #22
9002714c:	d101      	bne.n	90027152 <__sflush_r+0xb6>
9002714e:	602f      	str	r7, [r5, #0]
90027150:	e7b1      	b.n	900270b6 <__sflush_r+0x1a>
90027152:	89a3      	ldrh	r3, [r4, #12]
90027154:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90027158:	81a3      	strh	r3, [r4, #12]
9002715a:	e7ad      	b.n	900270b8 <__sflush_r+0x1c>
9002715c:	690f      	ldr	r7, [r1, #16]
9002715e:	2f00      	cmp	r7, #0
90027160:	d0a9      	beq.n	900270b6 <__sflush_r+0x1a>
90027162:	0793      	lsls	r3, r2, #30
90027164:	680e      	ldr	r6, [r1, #0]
90027166:	bf08      	it	eq
90027168:	694b      	ldreq	r3, [r1, #20]
9002716a:	600f      	str	r7, [r1, #0]
9002716c:	bf18      	it	ne
9002716e:	2300      	movne	r3, #0
90027170:	eba6 0807 	sub.w	r8, r6, r7
90027174:	608b      	str	r3, [r1, #8]
90027176:	f1b8 0f00 	cmp.w	r8, #0
9002717a:	dd9c      	ble.n	900270b6 <__sflush_r+0x1a>
9002717c:	6a21      	ldr	r1, [r4, #32]
9002717e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
90027180:	4643      	mov	r3, r8
90027182:	463a      	mov	r2, r7
90027184:	4628      	mov	r0, r5
90027186:	47b0      	blx	r6
90027188:	2800      	cmp	r0, #0
9002718a:	dc06      	bgt.n	9002719a <__sflush_r+0xfe>
9002718c:	89a3      	ldrh	r3, [r4, #12]
9002718e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
90027192:	81a3      	strh	r3, [r4, #12]
90027194:	f04f 30ff 	mov.w	r0, #4294967295
90027198:	e78e      	b.n	900270b8 <__sflush_r+0x1c>
9002719a:	4407      	add	r7, r0
9002719c:	eba8 0800 	sub.w	r8, r8, r0
900271a0:	e7e9      	b.n	90027176 <__sflush_r+0xda>
900271a2:	bf00      	nop
900271a4:	dfbffffe 	.word	0xdfbffffe

900271a8 <_fflush_r>:
900271a8:	b538      	push	{r3, r4, r5, lr}
900271aa:	690b      	ldr	r3, [r1, #16]
900271ac:	4605      	mov	r5, r0
900271ae:	460c      	mov	r4, r1
900271b0:	b913      	cbnz	r3, 900271b8 <_fflush_r+0x10>
900271b2:	2500      	movs	r5, #0
900271b4:	4628      	mov	r0, r5
900271b6:	bd38      	pop	{r3, r4, r5, pc}
900271b8:	b118      	cbz	r0, 900271c2 <_fflush_r+0x1a>
900271ba:	6a03      	ldr	r3, [r0, #32]
900271bc:	b90b      	cbnz	r3, 900271c2 <_fflush_r+0x1a>
900271be:	f7ff f9df 	bl	90026580 <__sinit>
900271c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
900271c6:	2b00      	cmp	r3, #0
900271c8:	d0f3      	beq.n	900271b2 <_fflush_r+0xa>
900271ca:	6e62      	ldr	r2, [r4, #100]	; 0x64
900271cc:	07d0      	lsls	r0, r2, #31
900271ce:	d404      	bmi.n	900271da <_fflush_r+0x32>
900271d0:	0599      	lsls	r1, r3, #22
900271d2:	d402      	bmi.n	900271da <_fflush_r+0x32>
900271d4:	6da0      	ldr	r0, [r4, #88]	; 0x58
900271d6:	f7ff fbd2 	bl	9002697e <__retarget_lock_acquire_recursive>
900271da:	4628      	mov	r0, r5
900271dc:	4621      	mov	r1, r4
900271de:	f7ff ff5d 	bl	9002709c <__sflush_r>
900271e2:	6e63      	ldr	r3, [r4, #100]	; 0x64
900271e4:	07da      	lsls	r2, r3, #31
900271e6:	4605      	mov	r5, r0
900271e8:	d4e4      	bmi.n	900271b4 <_fflush_r+0xc>
900271ea:	89a3      	ldrh	r3, [r4, #12]
900271ec:	059b      	lsls	r3, r3, #22
900271ee:	d4e1      	bmi.n	900271b4 <_fflush_r+0xc>
900271f0:	6da0      	ldr	r0, [r4, #88]	; 0x58
900271f2:	f7ff fbc5 	bl	90026980 <__retarget_lock_release_recursive>
900271f6:	e7dd      	b.n	900271b4 <_fflush_r+0xc>

900271f8 <__swhatbuf_r>:
900271f8:	b570      	push	{r4, r5, r6, lr}
900271fa:	460c      	mov	r4, r1
900271fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90027200:	2900      	cmp	r1, #0
90027202:	b096      	sub	sp, #88	; 0x58
90027204:	4615      	mov	r5, r2
90027206:	461e      	mov	r6, r3
90027208:	da0d      	bge.n	90027226 <__swhatbuf_r+0x2e>
9002720a:	89a3      	ldrh	r3, [r4, #12]
9002720c:	f013 0f80 	tst.w	r3, #128	; 0x80
90027210:	f04f 0100 	mov.w	r1, #0
90027214:	bf0c      	ite	eq
90027216:	f44f 6380 	moveq.w	r3, #1024	; 0x400
9002721a:	2340      	movne	r3, #64	; 0x40
9002721c:	2000      	movs	r0, #0
9002721e:	6031      	str	r1, [r6, #0]
90027220:	602b      	str	r3, [r5, #0]
90027222:	b016      	add	sp, #88	; 0x58
90027224:	bd70      	pop	{r4, r5, r6, pc}
90027226:	466a      	mov	r2, sp
90027228:	f000 f848 	bl	900272bc <_fstat_r>
9002722c:	2800      	cmp	r0, #0
9002722e:	dbec      	blt.n	9002720a <__swhatbuf_r+0x12>
90027230:	9901      	ldr	r1, [sp, #4]
90027232:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
90027236:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
9002723a:	4259      	negs	r1, r3
9002723c:	4159      	adcs	r1, r3
9002723e:	f44f 6380 	mov.w	r3, #1024	; 0x400
90027242:	e7eb      	b.n	9002721c <__swhatbuf_r+0x24>

90027244 <__smakebuf_r>:
90027244:	898b      	ldrh	r3, [r1, #12]
90027246:	b573      	push	{r0, r1, r4, r5, r6, lr}
90027248:	079d      	lsls	r5, r3, #30
9002724a:	4606      	mov	r6, r0
9002724c:	460c      	mov	r4, r1
9002724e:	d507      	bpl.n	90027260 <__smakebuf_r+0x1c>
90027250:	f104 0347 	add.w	r3, r4, #71	; 0x47
90027254:	6023      	str	r3, [r4, #0]
90027256:	6123      	str	r3, [r4, #16]
90027258:	2301      	movs	r3, #1
9002725a:	6163      	str	r3, [r4, #20]
9002725c:	b002      	add	sp, #8
9002725e:	bd70      	pop	{r4, r5, r6, pc}
90027260:	ab01      	add	r3, sp, #4
90027262:	466a      	mov	r2, sp
90027264:	f7ff ffc8 	bl	900271f8 <__swhatbuf_r>
90027268:	9900      	ldr	r1, [sp, #0]
9002726a:	4605      	mov	r5, r0
9002726c:	4630      	mov	r0, r6
9002726e:	f7ff f823 	bl	900262b8 <_malloc_r>
90027272:	b948      	cbnz	r0, 90027288 <__smakebuf_r+0x44>
90027274:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90027278:	059a      	lsls	r2, r3, #22
9002727a:	d4ef      	bmi.n	9002725c <__smakebuf_r+0x18>
9002727c:	f023 0303 	bic.w	r3, r3, #3
90027280:	f043 0302 	orr.w	r3, r3, #2
90027284:	81a3      	strh	r3, [r4, #12]
90027286:	e7e3      	b.n	90027250 <__smakebuf_r+0xc>
90027288:	89a3      	ldrh	r3, [r4, #12]
9002728a:	6020      	str	r0, [r4, #0]
9002728c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
90027290:	81a3      	strh	r3, [r4, #12]
90027292:	9b00      	ldr	r3, [sp, #0]
90027294:	6163      	str	r3, [r4, #20]
90027296:	9b01      	ldr	r3, [sp, #4]
90027298:	6120      	str	r0, [r4, #16]
9002729a:	b15b      	cbz	r3, 900272b4 <__smakebuf_r+0x70>
9002729c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
900272a0:	4630      	mov	r0, r6
900272a2:	f000 f81d 	bl	900272e0 <_isatty_r>
900272a6:	b128      	cbz	r0, 900272b4 <__smakebuf_r+0x70>
900272a8:	89a3      	ldrh	r3, [r4, #12]
900272aa:	f023 0303 	bic.w	r3, r3, #3
900272ae:	f043 0301 	orr.w	r3, r3, #1
900272b2:	81a3      	strh	r3, [r4, #12]
900272b4:	89a3      	ldrh	r3, [r4, #12]
900272b6:	431d      	orrs	r5, r3
900272b8:	81a5      	strh	r5, [r4, #12]
900272ba:	e7cf      	b.n	9002725c <__smakebuf_r+0x18>

900272bc <_fstat_r>:
900272bc:	b538      	push	{r3, r4, r5, lr}
900272be:	4d07      	ldr	r5, [pc, #28]	; (900272dc <_fstat_r+0x20>)
900272c0:	2300      	movs	r3, #0
900272c2:	4604      	mov	r4, r0
900272c4:	4608      	mov	r0, r1
900272c6:	4611      	mov	r1, r2
900272c8:	602b      	str	r3, [r5, #0]
900272ca:	f7dc fa7d 	bl	900037c8 <_fstat>
900272ce:	1c43      	adds	r3, r0, #1
900272d0:	d102      	bne.n	900272d8 <_fstat_r+0x1c>
900272d2:	682b      	ldr	r3, [r5, #0]
900272d4:	b103      	cbz	r3, 900272d8 <_fstat_r+0x1c>
900272d6:	6023      	str	r3, [r4, #0]
900272d8:	bd38      	pop	{r3, r4, r5, pc}
900272da:	bf00      	nop
900272dc:	24024014 	.word	0x24024014

900272e0 <_isatty_r>:
900272e0:	b538      	push	{r3, r4, r5, lr}
900272e2:	4d06      	ldr	r5, [pc, #24]	; (900272fc <_isatty_r+0x1c>)
900272e4:	2300      	movs	r3, #0
900272e6:	4604      	mov	r4, r0
900272e8:	4608      	mov	r0, r1
900272ea:	602b      	str	r3, [r5, #0]
900272ec:	f7dc fa72 	bl	900037d4 <_isatty>
900272f0:	1c43      	adds	r3, r0, #1
900272f2:	d102      	bne.n	900272fa <_isatty_r+0x1a>
900272f4:	682b      	ldr	r3, [r5, #0]
900272f6:	b103      	cbz	r3, 900272fa <_isatty_r+0x1a>
900272f8:	6023      	str	r3, [r4, #0]
900272fa:	bd38      	pop	{r3, r4, r5, pc}
900272fc:	24024014 	.word	0x24024014

90027300 <_sbrk>:
90027300:	4a04      	ldr	r2, [pc, #16]	; (90027314 <_sbrk+0x14>)
90027302:	6811      	ldr	r1, [r2, #0]
90027304:	4603      	mov	r3, r0
90027306:	b909      	cbnz	r1, 9002730c <_sbrk+0xc>
90027308:	4903      	ldr	r1, [pc, #12]	; (90027318 <_sbrk+0x18>)
9002730a:	6011      	str	r1, [r2, #0]
9002730c:	6810      	ldr	r0, [r2, #0]
9002730e:	4403      	add	r3, r0
90027310:	6013      	str	r3, [r2, #0]
90027312:	4770      	bx	lr
90027314:	240241b4 	.word	0x240241b4
90027318:	240241b8 	.word	0x240241b8

9002731c <_init>:
9002731c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002731e:	bf00      	nop
90027320:	bcf8      	pop	{r3, r4, r5, r6, r7}
90027322:	bc08      	pop	{r3}
90027324:	469e      	mov	lr, r3
90027326:	4770      	bx	lr

90027328 <_fini>:
90027328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002732a:	bf00      	nop
9002732c:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002732e:	bc08      	pop	{r3}
90027330:	469e      	mov	lr, r3
90027332:	4770      	bx	lr
